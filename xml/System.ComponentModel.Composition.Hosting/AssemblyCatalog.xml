<Type Name="AssemblyCatalog" FullName="System.ComponentModel.Composition.Hosting.AssemblyCatalog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="50985ada9f0cd81c928e0c6efb4c29ac15dbdce8" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56783167" /></Metadata><TypeSignature Language="C#" Value="public class AssemblyCatalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyCatalog extends System.ComponentModel.Composition.Primitives.ComposablePartCatalog implements class System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyCatalog&#xA;Inherits ComposablePartCatalog&#xA;Implements ICompositionElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyCatalog : System::ComponentModel::Composition::Primitives::ComposablePartCatalog, System::ComponentModel::Composition::Primitives::ICompositionElement" />
  <TypeSignature Language="F#" Value="type AssemblyCatalog = class&#xA;    inherit ComposablePartCatalog&#xA;    interface ICompositionElement" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.Primitives.ICompositionElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Hosting.AssemblyCatalogDebuggerProxy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ed148-101">관리 코드 어셈블리에서 특성이 지정된 부분을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-101">Discovers attributed parts in a managed code assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed148-102"><xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> 부분에 지정된 된 어셈블리에 있는 모든 구문 분석 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-102">An <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> is used to parse all the parts present in a specified assembly.</span></span> <span data-ttu-id="ed148-103">개체 참조 또는 경로로 대상 어셈블리를 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-103">The target assembly can be indicated either by object reference or by path.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ed148-104">이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="ed148-105">형식을 사용 하 여 마쳤으면 직접 또는 간접적으로의 삭제 해야 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="ed148-106">직접 형식의 dispose 호출 해당 <xref:System.IDisposable.Dispose%2A> 의 메서드를 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="ed148-107">삭제 하지 직접, 언어 구문 같은 사용 `using` (C#에서) 또는 `Using` (Visual Basic에서는).</span><span class="sxs-lookup"><span data-stu-id="ed148-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="ed148-108">자세한 내용은 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하세요.를 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="ed148-109">이 형식은 스레드로부터 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-109">This type is thread safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed148-110">다음 코드를 만드는 애플리케이션의 일반적인 시나리오를 보여 줍니다.는 <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> 자체 어셈블리를 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-110">The following code demonstrates the common scenario of an application creating an <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> to parse its own assembly.</span></span> <span data-ttu-id="ed148-111">이것이에 프레임 워크 MEF (Managed Extensibility) 단일 프로젝트에 포함 된 파트를 로드 하는 간단한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-111">This is a straightforward way to load parts contained in a single project into the Managed Extensibility Framework (MEF).</span></span>  
  
 [!code-csharp[Composition.CompositionContainer#1](~/samples/snippets/csharp/VS_Snippets_Misc/composition.compositioncontainer/cs/program.cs#1)]
 [!code-vb[Composition.CompositionContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.compositioncontainer/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ed148-112"><see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-112">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : System.Reflection.Assembly -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog assembly" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="ed148-113"><see cref="T:System.Type" /> 개체에 추가할 특성 사용 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체를 포함하는 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-113">The assembly that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <summary><span data-ttu-id="ed148-114">지정된 어셈블리를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-114">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified assembly.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ed148-115"><paramref name="assembly" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-115"><paramref name="assembly" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ed148-116">또는</span><span class="sxs-lookup"><span data-stu-id="ed148-116">-or-</span></span> 
 <span data-ttu-id="ed148-117"><paramref name="assembly" />가 리플렉션 전용 컨텍스트에서 로드된 경우</span><span class="sxs-lookup"><span data-stu-id="ed148-117"><paramref name="assembly" /> was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeBase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : string -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog codeBase" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="codeBase"><span data-ttu-id="ed148-118"><see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체에 추가하기 위해 특성이 <see cref="T:System.Type" />인 개체를 포함하는 어셈블리의 코드베이스(즉 어셈블리 파일에 대한 경로)를 지정하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-118">A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <summary><span data-ttu-id="ed148-119">지정된 코드베이스를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified code base.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed148-120">참조 하는 어셈블리 `codeBase` 로드 컨텍스트에 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-120">The assembly referenced by `codeBase` is loaded into the load context.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="ed148-121"><paramref name="codeBase" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-121"><paramref name="codeBase" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="ed148-122">또는</span><span class="sxs-lookup"><span data-stu-id="ed148-122">-or-</span></span> 
<span data-ttu-id="ed148-123">버전 2.0 이전의 공용 언어 런타임이 현재 로드되어 있으며 <paramref name="codeBase" />가 이후 버전으로 컴파일된 경우</span><span class="sxs-lookup"><span data-stu-id="ed148-123">Version 2.0 or earlier of the common language runtime is currently loaded and <paramref name="codeBase" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ed148-124">호출자에게 경로 검색 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-124">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="ed148-125"><paramref name="codeBase" />를 로드할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-125"><paramref name="codeBase" /> could not be loaded.</span></span>  
  
<span data-ttu-id="ed148-126">또는</span><span class="sxs-lookup"><span data-stu-id="ed148-126">-or-</span></span> 
 <span data-ttu-id="ed148-127"><paramref name="codeBase" />에 디렉터리가 지정되었습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-127"><paramref name="codeBase" /> specified a directory.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ed148-128"><paramref name="codeBase" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-128"><paramref name="codeBase" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ed148-129"><paramref name="codeBase" />가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="ed148-129"><paramref name="codeBase" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ed148-130"><paramref name="codeBase" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-130"><paramref name="codeBase" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ed148-131">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-131">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : System.Reflection.Assembly * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (assembly, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="ed148-132"><see cref="T:System.Type" /> 개체에 추가할 특성 사용 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체를 포함하는 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-132">The assembly that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="definitionOrigin"><span data-ttu-id="ed148-133">파트의 소스를 식별하기 위해 진단에서 사용하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-133">The element used by diagnostics to identify the sources of parts.</span></span></param>
        <summary><span data-ttu-id="ed148-134">지정된 어셈블리를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-134">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified assembly.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ed148-135"><paramref name="assembly" /> 또는 <paramref name="definitionOrigin" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="ed148-135"><paramref name="assembly" /> or <paramref name="definitionOrigin" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ed148-136">또는</span><span class="sxs-lookup"><span data-stu-id="ed148-136">-or-</span></span> 
 <span data-ttu-id="ed148-137"><paramref name="assembly" />가 리플렉션 전용 컨텍스트에서 로드된 경우</span><span class="sxs-lookup"><span data-stu-id="ed148-137"><paramref name="assembly" /> was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : System.Reflection.Assembly * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (assembly, reflectionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="ed148-138"><see cref="T:System.Type" /> 개체에 추가할 특성 사용 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체를 포함하는 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-138">The assembly that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="ed148-139">형식을 해석하기 위해 카탈로그에서 사용하는 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-139">The context used by the catalog to interpret types.</span></span></param>
        <summary><span data-ttu-id="ed148-140">지정한 어셈블리 및 리플렉션 컨텍스트를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-140">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified assembly and reflection context.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ed148-141"><paramref name="assembly" /> 또는 <paramref name="reflectionContext" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="ed148-141"><paramref name="assembly" /> or <paramref name="reflectionContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ed148-142">또는</span><span class="sxs-lookup"><span data-stu-id="ed148-142">-or-</span></span> 
 <span data-ttu-id="ed148-143"><paramref name="assembly" />가 리플렉션 전용 컨텍스트에서 로드된 경우</span><span class="sxs-lookup"><span data-stu-id="ed148-143"><paramref name="assembly" /> was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeBase As String, definitionOrigin As ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : string * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (codeBase, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeBase"><span data-ttu-id="ed148-144"><see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체에 추가하기 위해 특성이 <see cref="T:System.Type" />인 개체를 포함하는 어셈블리의 코드베이스(즉 어셈블리 파일에 대한 경로)를 지정하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-144">A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="definitionOrigin"><span data-ttu-id="ed148-145">파트의 소스를 식별하기 위해 진단에서 사용하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-145">The element used by diagnostics to identify the sources of parts.</span></span></param>
        <summary><span data-ttu-id="ed148-146">지정된 코드베이스를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-146">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified code base.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="ed148-147"><paramref name="codeBase" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-147"><paramref name="codeBase" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="ed148-148">또는</span><span class="sxs-lookup"><span data-stu-id="ed148-148">-or-</span></span> 
<span data-ttu-id="ed148-149">버전 2.0 이상의 공용 언어 런타임이 현재 로드되어 있으며 <paramref name="codeBase" />이 이후 버전으로 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-149">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="codeBase" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ed148-150">호출자에게 경로 검색 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-150">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="ed148-151"><paramref name="codeBase" />를 로드할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-151"><paramref name="codeBase" /> could not be loaded.</span></span>  
  
<span data-ttu-id="ed148-152">또는</span><span class="sxs-lookup"><span data-stu-id="ed148-152">-or-</span></span> 
 <span data-ttu-id="ed148-153"><paramref name="codeBase" />에 디렉터리가 지정되었습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-153"><paramref name="codeBase" /> specified a directory.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ed148-154"><paramref name="codebase" /> 또는 <paramref name="definitionOrigin" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="ed148-154"><paramref name="codebase" /> or <paramref name="definitionOrigin" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ed148-155"><paramref name="codeBase" />가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="ed148-155"><paramref name="codeBase" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ed148-156"><paramref name="codeBase" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-156"><paramref name="codeBase" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ed148-157">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-157">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : string * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (codeBase, reflectionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeBase"><span data-ttu-id="ed148-158"><see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체에 추가하기 위해 특성이 <see cref="T:System.Type" />인 개체를 포함하는 어셈블리의 코드베이스(즉 어셈블리 파일에 대한 경로)를 지정하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-158">A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="ed148-159">형식을 해석하기 위해 카탈로그에서 사용하는 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-159">The context used by the catalog to interpret types.</span></span></param>
        <summary><span data-ttu-id="ed148-160">지정된 코드베이스 및 리플렉션 컨텍스트를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-160">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified code base and reflection context.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="ed148-161"><paramref name="codeBase" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-161"><paramref name="codeBase" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="ed148-162">또는</span><span class="sxs-lookup"><span data-stu-id="ed148-162">-or-</span></span> 
<span data-ttu-id="ed148-163">버전 2.0 이상의 공용 언어 런타임이 현재 로드되어 있으며 <paramref name="codeBase" />이 이후 버전으로 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-163">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="codeBase" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ed148-164">호출자에게 경로 검색 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-164">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="ed148-165"><paramref name="codeBase" />를 로드할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-165"><paramref name="codeBase" /> could not be loaded.</span></span>  
  
<span data-ttu-id="ed148-166">또는</span><span class="sxs-lookup"><span data-stu-id="ed148-166">-or-</span></span> 
 <span data-ttu-id="ed148-167"><paramref name="codeBase" />에 디렉터리가 지정되었습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-167"><paramref name="codeBase" /> specified a directory.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ed148-168"><paramref name="codebase" /> 또는 <paramref name="reflectionContext" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="ed148-168"><paramref name="codebase" /> or <paramref name="reflectionContext" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ed148-169"><paramref name="codeBase" />가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="ed148-169"><paramref name="codeBase" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ed148-170"><paramref name="codeBase" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-170"><paramref name="codeBase" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ed148-171">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-171">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : System.Reflection.Assembly * System.Reflection.ReflectionContext * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (assembly, reflectionContext, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="ed148-172"><see cref="T:System.Type" /> 개체에 추가할 특성 사용 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체를 포함하는 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-172">The assembly that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="ed148-173">형식을 해석하기 위해 카탈로그에서 사용하는 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-173">The context used by the catalog to interpret types.</span></span></param>
        <param name="definitionOrigin"><span data-ttu-id="ed148-174">파트의 소스를 식별하기 위해 진단에서 사용하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-174">The element used by diagnostics to identify the sources of parts.</span></span></param>
        <summary><span data-ttu-id="ed148-175">지정한 어셈블리 및 리플렉션 컨텍스트를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-175">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified assembly and reflection context.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ed148-176"><paramref name="assembly" />, <paramref name="definitionOrigin" /> 또는 <paramref name="reflectionContext" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-176"><paramref name="assembly" />, <paramref name="definitionOrigin" />, or <paramref name="reflectionContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ed148-177">또는</span><span class="sxs-lookup"><span data-stu-id="ed148-177">-or-</span></span> 
 <span data-ttu-id="ed148-178"><paramref name="assembly" />가 리플렉션 전용 컨텍스트에서 로드된 경우</span><span class="sxs-lookup"><span data-stu-id="ed148-178"><paramref name="assembly" /> was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : string * System.Reflection.ReflectionContext * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (codeBase, reflectionContext, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeBase"><span data-ttu-id="ed148-179"><see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체에 추가하기 위해 특성이 <see cref="T:System.Type" />인 개체를 포함하는 어셈블리의 코드베이스(즉 어셈블리 파일에 대한 경로)를 지정하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-179">A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="ed148-180">형식을 해석하기 위해 카탈로그에서 사용하는 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-180">The context used by the catalog to interpret types.</span></span></param>
        <param name="definitionOrigin"><span data-ttu-id="ed148-181">파트의 소스를 식별하기 위해 진단에서 사용하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-181">The element used by diagnostics to identify the sources of parts.</span></span></param>
        <summary><span data-ttu-id="ed148-182">지정된 코드베이스 및 리플렉션 컨텍스트를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-182">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified code base and reflection context.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="ed148-183"><paramref name="codeBase" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-183"><paramref name="codeBase" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="ed148-184">또는</span><span class="sxs-lookup"><span data-stu-id="ed148-184">-or-</span></span> 
<span data-ttu-id="ed148-185">버전 2.0 이상의 공용 언어 런타임이 현재 로드되어 있으며 <paramref name="codeBase" />이 이후 버전으로 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-185">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="codeBase" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ed148-186">호출자에게 경로 검색 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-186">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="ed148-187"><paramref name="codeBase" />를 로드할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-187"><paramref name="codeBase" /> could not be loaded.</span></span>  
  
<span data-ttu-id="ed148-188">또는</span><span class="sxs-lookup"><span data-stu-id="ed148-188">-or-</span></span> 
 <span data-ttu-id="ed148-189"><paramref name="codeBase" />에 디렉터리가 지정되었습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-189"><paramref name="codeBase" /> specified a directory.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ed148-190"><paramref name="codebase" />, <paramref name="definitionOrigin" /> 또는 <paramref name="reflectionContext" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="ed148-190"><paramref name="codebase" />, <paramref name="definitionOrigin" /> or <paramref name="reflectionContext" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ed148-191"><paramref name="codeBase" />가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="ed148-191"><paramref name="codeBase" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ed148-192"><paramref name="codeBase" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-192"><paramref name="codeBase" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ed148-193">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-193">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed148-194">특성 사용 형식이 어셈블리 카탈로그에 포함된 어셈블리를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-194">Gets the assembly whose attributed types are contained in the assembly catalog.</span></span></summary>
        <value><span data-ttu-id="ed148-195">특성 사용 <see cref="T:System.Type" /> 개체가 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />에 포함된 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-195">The assembly whose attributed <see cref="T:System.Type" /> objects are contained in the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="assemblyCatalog.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="ed148-196">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-196"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="ed148-197"><see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-197">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerator&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;" Usage="assemblyCatalog.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ed148-198">카탈로그를 반복하는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-198">Returns an enumerator that iterates through the catalog.</span></span></summary>
        <returns><span data-ttu-id="ed148-199">카탈로그를 반복하는 데 사용할 수 있는 열거자입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-199">An enumerator that can be used to iterate through the catalog.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition, class System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExports (definition As ImportDefinition) As IEnumerable(Of Tuple(Of ComposablePartDefinition, ExportDefinition))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;Tuple&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^, System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition);" />
      <MemberSignature Language="F#" Value="override this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition * System.ComponentModel.Composition.Primitives.ExportDefinition&gt;" Usage="assemblyCatalog.GetExports definition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="definition"><span data-ttu-id="ed148-200">일치하는 내보내기를 지정하는 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-200">Conditions that specify which exports to match.</span></span></param>
        <summary><span data-ttu-id="ed148-201">가져오기 정의로 지정된 조건과 일치하는 내보내기의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-201">Gets a collection of exports that match the conditions specified by the import definition.</span></span></summary>
        <returns><span data-ttu-id="ed148-202"><paramref name="definition" />으로 지정된 조건과 일치하는 내보내기의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-202">A collection of exports that match the conditions specified by <paramref name="definition" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parts">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; Parts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryable`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; Parts" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Parts As IQueryable(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::IQueryable&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ Parts { System::Linq::IQueryable&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parts : System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;" Usage="System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed148-203">어셈블리 카탈로그에 포함된 파트 정의를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-203">Gets the part definitions that are contained in the assembly catalog.</span></span></summary>
        <value><span data-ttu-id="ed148-204"><see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />에 포함된 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-204">The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects contained in the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ed148-205"><see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체가 삭제되었습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-205">The <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
      <MemberSignature Language="C#" Value="string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayName As String Implements ICompositionElement.DisplayName" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::ComponentModel::Composition::Primitives::ICompositionElement::DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed148-206"><see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체의 표시 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-206">Gets the display name of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></summary>
        <value><span data-ttu-id="ed148-207">이 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 개체의 형식과 어셈블리를 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-207">A string that represents the type and assembly of this <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed148-208">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="ed148-208">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ed148-209"><xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> 인스턴스가 <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-209">It can be used only when the <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
      <MemberSignature Language="C#" Value="System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Origin As ICompositionElement Implements ICompositionElement.Origin" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Composition::Primitives::ICompositionElement ^ System::ComponentModel::Composition::Primitives::ICompositionElement::Origin { System::ComponentModel::Composition::Primitives::ICompositionElement ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ICompositionElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed148-210">이 요소가 발생한 컴퍼지션 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-210">Gets the composition element that this element originated from.</span></span></summary>
        <value><span data-ttu-id="ed148-211">항상 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-211">Always <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed148-212">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="ed148-212">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ed148-213"><xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> 인스턴스가 <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-213">It can be used only when the <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="assemblyCatalog.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ed148-214">어셈블리 카탈로그의 문자열 표현을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-214">Gets a string representation of the assembly catalog.</span></span></summary>
        <returns><span data-ttu-id="ed148-215">어셈블리 카탈로그의 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="ed148-215">A representation of the assembly catalog.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>