<Type Name="XmlAttributeAttribute" FullName="System.Xml.Serialization.XmlAttributeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="425b45fc265a95864335709c3e06ddb759c2f343" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58712818" /></Metadata><TypeSignature Language="C#" Value="public class XmlAttributeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlAttributeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="361aa-101"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 해당 클래스 멤버를 XML 특성으로 serialize하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-101">Specifies that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize the class member as an XML attribute.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="361aa-102"><xref:System.Xml.Serialization.XmlAttributeAttribute> 제어 하는 특성의 제품군에 속해 하는 방법을 <xref:System.Xml.Serialization.XmlSerializer> serialize 되 고 또는 개체를 deserialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-102">The <xref:System.Xml.Serialization.XmlAttributeAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes, or deserializes, an object.</span></span> <span data-ttu-id="361aa-103">비슷한 특성의 전체 목록은 참조 하세요 [는 XML Serialization을 제어 특성](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="361aa-104">공용 필드 또는 속성을 적용할 때 합니다 <xref:System.Xml.Serialization.XmlAttributeAttribute> 알립니다는 <xref:System.Xml.Serialization.XmlSerializer> XML 특성으로 멤버를 serialize 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-104">When applied to a public field or property, the <xref:System.Xml.Serialization.XmlAttributeAttribute> informs the <xref:System.Xml.Serialization.XmlSerializer> to serialize the member as an XML attribute.</span></span> <span data-ttu-id="361aa-105">기본적으로 <xref:System.Xml.Serialization.XmlSerializer> public 필드와 속성이 XML 요소로 serialize 됩니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-105">By default, the <xref:System.Xml.Serialization.XmlSerializer> serializes public fields and properties as XML elements.</span></span>  
  
 <span data-ttu-id="361aa-106">할당할 수는 <xref:System.Xml.Serialization.XmlAttributeAttribute> 유일한에 공용 필드 또는 public 속성 값 (또는 값의 배열)를 반환 하는 XML 스키마 정의 언어 (XSD) 단순 형식 중 하나에 매핑될 수 (XSD 에서에서파생된모든기본제공데이터형식이포함`anySimpleType`형식).</span><span class="sxs-lookup"><span data-stu-id="361aa-106">You can assign the <xref:System.Xml.Serialization.XmlAttributeAttribute> only to public fields or public properties that return a value (or array of values) that can be mapped to one of the XML Schema definition language (XSD) simple types (including all built-in datatypes derived from the XSD `anySimpleType` type).</span></span> <span data-ttu-id="361aa-107">포함 하 여 XSD 단순 유형으로 매핑할 수 있는 가능한 형식 포함 <xref:System.Guid>, <xref:System.Char>, 및 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-107">The possible types include any that can be mapped to the XSD simple types, including <xref:System.Guid>, <xref:System.Char>, and enumerations.</span></span> <span data-ttu-id="361aa-108">참조 된 <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> XSD 형식 목록과 방법에 대 한 속성 형식이.net 데이터 형식 매핑.</span><span class="sxs-lookup"><span data-stu-id="361aa-108">See the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property for a list of XSD types and how they are mapped to.NET data types.</span></span>  
  
 <span data-ttu-id="361aa-109">사용 하 여 설정할 수 있는 두 가지 특별 한 특성을 가지는 <xref:System.Xml.Serialization.XmlAttributeAttribute> : 합니다 `xml:lang` (언어 지정) 및 `xml:space` (공백 문자를 처리 하는 방법을 지정) 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-109">There are two special attributes that can be set with the <xref:System.Xml.Serialization.XmlAttributeAttribute> : the `xml:lang` (specifies language) and `xml:space` (specifies how to handle white space) attributes.</span></span> <span data-ttu-id="361aa-110">이러한 특성은 XML을 처리 하는 응용 프로그램에만 관련 된 정보를 전달 하고자 했습니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-110">These attributes are intended to convey information that is relevant only to an application processing the XML.</span></span> <span data-ttu-id="361aa-111">이러한 설정의 예는 다음 코드에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-111">Examples of setting these are shown in the following code.</span></span>  
  
```csharp  
[XmlAttribute("xml:lang")]  
 public string Lang;  
 // Set this to 'default' or 'preserve'.  
 [XmlAttribute("space",   
 Namespace = "http://www.w3.org/XML/1998/namespace")]  
 public string Space 
 ```

 ```vb 
 <XmlAttribute("xml:lang")> _  
 Public Lang As String   
 ' Set this to 'default' or 'preserve'.  
 <XmlAttribute("space", _  
 Namespace:= "http://www.w3.org/XML/1998/namespace")> _  
 Public Space As String  
```  
  
 <span data-ttu-id="361aa-112">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [특성](~/docs/standard/attributes/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-112">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="361aa-113">단어를 사용할 수 있습니다 `XmlAttribute` 대신 코드에서 <xref:System.Xml.Serialization.XmlAttributeAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-113">You can use the word `XmlAttribute` in your code instead of the longer <xref:System.Xml.Serialization.XmlAttributeAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="361aa-114">다음 예제에서는 serialize 할 여러 필드를 포함 하는 클래스는 <xref:System.Xml.Serialization.XmlAttributeAttribute> 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-114">The following example serializes a class that contains several fields to which the <xref:System.Xml.Serialization.XmlAttributeAttribute> is applied.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="361aa-115"><see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-115">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="361aa-116"><see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[XMLAttributeAttribute_ctr1_2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CPP/xmlAttributeAttribute_ctr1_2.cpp#1)]
 [!code-csharp[XMLAttributeAttribute_ctr1_2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CS/xmlattributeattribute_ctr1_2.cs#1)]
 [!code-vb[XMLAttributeAttribute_ctr1_2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/VB/xmlattributeattribute_ctr1_2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute(System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributeAttribute : string -&gt; System.Xml.Serialization.XmlAttributeAttribute" Usage="new System.Xml.Serialization.XmlAttributeAttribute attributeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName"><span data-ttu-id="361aa-117"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 생성하는 XML 특성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-117">The name of the XML attribute that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span></span></param>
        <summary><span data-ttu-id="361aa-118"><see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 클래스의 새 인스턴스를 초기화하고 생성된 XML 특성의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-118">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class and specifies the name of the generated XML attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[XMLAttributeAttribute_ctr1_2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CPP/xmlAttributeAttribute_ctr1_2.cpp#2)]
 [!code-csharp[XMLAttributeAttribute_ctr1_2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CS/xmlattributeattribute_ctr1_2.cs#2)]
 [!code-vb[XMLAttributeAttribute_ctr1_2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/VB/xmlattributeattribute_ctr1_2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributeAttribute : Type -&gt; System.Xml.Serialization.XmlAttributeAttribute" Usage="new System.Xml.Serialization.XmlAttributeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="361aa-119">특성을 저장하는 데 사용되는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-119">The <see cref="T:System.Type" /> used to store the attribute.</span></span></param>
        <summary><span data-ttu-id="361aa-120"><see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-120">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (string attributeName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute(System::String ^ attributeName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributeAttribute : string * Type -&gt; System.Xml.Serialization.XmlAttributeAttribute" Usage="new System.Xml.Serialization.XmlAttributeAttribute (attributeName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeName"><span data-ttu-id="361aa-121">생성되는 XML 특성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-121">The name of the XML attribute that is generated.</span></span></param>
        <param name="type"><span data-ttu-id="361aa-122">특성을 저장하는 데 사용되는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-122">The <see cref="T:System.Type" /> used to store the attribute.</span></span></param>
        <summary><span data-ttu-id="361aa-123"><see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-123">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeName">
      <MemberSignature Language="C#" Value="public string AttributeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AttributeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AttributeName : string with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="361aa-124">XML 특성의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-124">Gets or sets the name of the XML attribute.</span></span></summary>
        <value><span data-ttu-id="361aa-125">XML 특성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-125">The name of the XML attribute.</span></span> <span data-ttu-id="361aa-126">기본값은 멤버 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-126">The default is the member name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="361aa-127">사용 된 <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> 기본값을 사용할 수 없는 경우 XML 특성 이름을 지정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-127">Use the <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> property to specify an XML attribute name when the default value cannot be used.</span></span> <span data-ttu-id="361aa-128">예를 들어, XML 특성 이름이 멤버 식별자로 사용할 수 없는 경우 설정 하 고 식별자에 대 한 유효한 이름을 사용할 수는 <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> 잘못 된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-128">For example, if the XML attribute name is invalid as a member identifier, you can use a valid name for the identifier while setting the <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> to an invalid name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="361aa-129">다음 예제에서는 합니다 <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> 의 속성을 <xref:System.Xml.Serialization.XmlAttributeAttribute>입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-129">The following example sets the <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> property of an <xref:System.Xml.Serialization.XmlAttributeAttribute>.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.AttributeName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.AttributeName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.AttributeName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="361aa-130"><see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성된 XML 특성의 XSD 데이터 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-130">Gets or sets the XSD data type of the XML attribute generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></summary>
        <value><span data-ttu-id="361aa-131">World Wide Web 컨소시엄(www.w3.org) 문서의 "XML Schema Part 2: Datatypes"에 정의된 XSD(XML 스키마 문서) 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-131">An XSD (XML Schema Document) data type, as defined by the World Wide Web Consortium (www.w3.org) document named "XML Schema: DataTypes".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="361aa-132">다음 테이블 및 해당 하는 XSD 단순 데이터 형식을 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-132">The following table lists the XSD simple data types with their.NET equivalents.</span></span>  
  
 <span data-ttu-id="361aa-133">XSD에 대 한 `base64Binary` 및 `hexBinary` 데이터 형식을 사용 하 여 배열을 <xref:System.Byte> 구조를 및 적용을 <xref:System.Xml.Serialization.XmlArrayItemAttribute> 사용 하 여는 <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> "base64Binary" 또는 "hexBinary" 적절 하 게 설정 하는 속성.</span><span class="sxs-lookup"><span data-stu-id="361aa-133">For the XSD `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="361aa-134">XSD에 대 한 `time` 및 `date` 데이터 형식을 사용 하 여는 <xref:System.DateTime> 입력 하 고 적용 합니다 <xref:System.Xml.Serialization.XmlAttributeAttribute> 사용 하 여는 <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> "date" 또는 "시간"으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-134">For the XSD `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlAttributeAttribute> with the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="361aa-135">문자열에 매핑되는 모든 XSD 형식에 대해 적용을 <xref:System.Xml.Serialization.XmlAttributeAttribute> 사용 하 여 해당 <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> 속성이 XSD 형식으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-135">For every XSD type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlAttributeAttribute> with its <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property set to the XSD type.</span></span> <span data-ttu-id="361aa-136">그러나 serialization 형식으로 멤버에 대 한 스키마만 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-136">However, this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="361aa-137">XSD 데이터 유형 중 하나를 정확 하 게 설정 해야 하므로 속성이 대/소문자를 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-137">The property is case-sensitive, so you must set it exactly to one of the XSD data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="361aa-138">요소를 XML 형식으로 이진 데이터를 전달 합니다. XML 특성으로 전달할 때 보다 더 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-138">Passing binary data as an XML element is more efficient than passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="361aa-139">XML 데이터 형식에 대 한 자세한 내용은 참조는 World Wide Web 컨소시엄 (www.w3.org) 문서 "XML Schema Part 2: Datatypes "로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-139">For more information about XML data types, see the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span></span>  
  
|<span data-ttu-id="361aa-140">XSD 데이터 형식</span><span class="sxs-lookup"><span data-stu-id="361aa-140">XSD data type</span></span>|<span data-ttu-id="361aa-141">.NET 데이터 형식</span><span class="sxs-lookup"><span data-stu-id="361aa-141">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="361aa-142">anyURI</span><span class="sxs-lookup"><span data-stu-id="361aa-142">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-143">base64Binary</span><span class="sxs-lookup"><span data-stu-id="361aa-143">base64Binary</span></span>|<span data-ttu-id="361aa-144">배열을 <xref:System.Byte> 개체</span><span class="sxs-lookup"><span data-stu-id="361aa-144">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="361aa-145">boolean</span><span class="sxs-lookup"><span data-stu-id="361aa-145">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="361aa-146">byte</span><span class="sxs-lookup"><span data-stu-id="361aa-146">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="361aa-147">date</span><span class="sxs-lookup"><span data-stu-id="361aa-147">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="361aa-148">dateTime</span><span class="sxs-lookup"><span data-stu-id="361aa-148">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="361aa-149">decimal</span><span class="sxs-lookup"><span data-stu-id="361aa-149">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="361aa-150">double</span><span class="sxs-lookup"><span data-stu-id="361aa-150">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="361aa-151">ENTITY</span><span class="sxs-lookup"><span data-stu-id="361aa-151">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-152">엔터티</span><span class="sxs-lookup"><span data-stu-id="361aa-152">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-153">float</span><span class="sxs-lookup"><span data-stu-id="361aa-153">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="361aa-154">gDay</span><span class="sxs-lookup"><span data-stu-id="361aa-154">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-155">gMonth</span><span class="sxs-lookup"><span data-stu-id="361aa-155">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-156">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="361aa-156">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-157">gYear</span><span class="sxs-lookup"><span data-stu-id="361aa-157">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-158">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="361aa-158">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-159">hexBinary</span><span class="sxs-lookup"><span data-stu-id="361aa-159">hexBinary</span></span>|<span data-ttu-id="361aa-160">배열을 <xref:System.Byte> 개체</span><span class="sxs-lookup"><span data-stu-id="361aa-160">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="361aa-161">ID</span><span class="sxs-lookup"><span data-stu-id="361aa-161">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-162">IDREF</span><span class="sxs-lookup"><span data-stu-id="361aa-162">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-163">IDREFS</span><span class="sxs-lookup"><span data-stu-id="361aa-163">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-164">int</span><span class="sxs-lookup"><span data-stu-id="361aa-164">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="361aa-165">정수</span><span class="sxs-lookup"><span data-stu-id="361aa-165">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-166">language</span><span class="sxs-lookup"><span data-stu-id="361aa-166">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-167">long</span><span class="sxs-lookup"><span data-stu-id="361aa-167">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="361aa-168">name</span><span class="sxs-lookup"><span data-stu-id="361aa-168">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-169">NCName</span><span class="sxs-lookup"><span data-stu-id="361aa-169">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-170">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="361aa-170">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-171">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="361aa-171">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-172">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="361aa-172">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-173">normalizedString</span><span class="sxs-lookup"><span data-stu-id="361aa-173">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-174">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="361aa-174">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-175">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="361aa-175">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-176">NOTATION</span><span class="sxs-lookup"><span data-stu-id="361aa-176">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-177">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="361aa-177">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-178">QName</span><span class="sxs-lookup"><span data-stu-id="361aa-178">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="361aa-179">duration</span><span class="sxs-lookup"><span data-stu-id="361aa-179">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-180">string</span><span class="sxs-lookup"><span data-stu-id="361aa-180">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-181">short</span><span class="sxs-lookup"><span data-stu-id="361aa-181">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="361aa-182">시간</span><span class="sxs-lookup"><span data-stu-id="361aa-182">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="361aa-183">token</span><span class="sxs-lookup"><span data-stu-id="361aa-183">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="361aa-184">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="361aa-184">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="361aa-185">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="361aa-185">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="361aa-186">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="361aa-186">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="361aa-187">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="361aa-187">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="361aa-188">적용 하는 다음 예제는 <xref:System.Xml.Serialization.XmlAttributeAttribute> 두 멤버를 집합을 <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> 속성이 서로 다른 값으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-188">The following example applies the <xref:System.Xml.Serialization.XmlAttributeAttribute> to two members, and sets the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property set to different values.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.DataType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="361aa-189"><see cref="T:System.Xml.Serialization.XmlSerializer" />를 통해 생성된 XML 특성의 이름이 정규화된 이름인지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-189">Gets or sets a value that indicates whether the XML attribute name generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> is qualified.</span></span></summary>
        <value><span data-ttu-id="361aa-190"><see cref="T:System.Xml.Schema.XmlSchemaForm" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-190">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span></span> <span data-ttu-id="361aa-191">기본값은 <see langword="XmlForm.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-191">The default is <see langword="XmlForm.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="361aa-192"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> 속성 정규화 되거나 정규화 되지 않은 XML 요소 인지를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-192">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element is qualified or unqualified.</span></span> <span data-ttu-id="361aa-193">합니다 <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> 속성이 준수는 1999 http://www.w3.org 사양 `Namespaces in XML`합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-193">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property conforms to the 1999 http://www.w3.org specification `Namespaces in XML`.</span></span>  
  
 <span data-ttu-id="361aa-194">경우는 <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> 모든 값을 설정 하는 속성을 <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> 속성을 `XmlSchemaForm.Unqualified` 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-194">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span>  
  
 <span data-ttu-id="361aa-195">기본 설정 `XmlSchemaForm.None`, 지시를 <xref:System.Xml.Serialization.XmlSerializer> 네임 스페이스 정규화 있는지 여부를 결정 하는 XML 문서에 대 한 스키마를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-195">The default setting, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="361aa-196">스키마는 개별 요소 또는 특성에 대 한 값을 지정 하지 않는 경우는 <xref:System.Xml.Serialization.XmlSerializer> 사용 합니다 `elementFormDefault` 및 `attributeFormDefault` 요소 또는 특성을 정규화 되었는지 여부를 결정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-196">If the schema does not specify a value for an individual element or attribute, the <xref:System.Xml.Serialization.XmlSerializer> uses the `elementFormDefault` and `attributeFormDefault` values to determine whether an element or attribute is qualified.</span></span> <span data-ttu-id="361aa-197">다음 XML 코드에는 스키마를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-197">The following XML code shows a schema:</span></span>  
  
```xml  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
 <span data-ttu-id="361aa-198">경우는 <xref:System.Xml.Serialization.XmlSerializer> 에서 스키마를 읽으면를 <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> 둘 다에 대 한 값을 `Name` 및 `Number` 는 `XmlSchemaForm.None`, 하지만 `Name` 요소가 한정 되었는지 하는 동안를 `Number` 요소 정규화 되지 않은.</span><span class="sxs-lookup"><span data-stu-id="361aa-198">When the <xref:System.Xml.Serialization.XmlSerializer> reads the schema, the <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> value for both the `Name` and `Number` is `XmlSchemaForm.None`, but the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="361aa-199">다음 예제에서는 적용 된 <xref:System.Xml.Serialization.XmlAttributeAttribute> 클래스에 포함 하는 두 필드에 합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-199">The following example applies the <xref:System.Xml.Serialization.XmlAttributeAttribute> to two fields contained in a class.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="361aa-200">XML 특성의 XML 네임스페이스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-200">Gets or sets the XML namespace of the XML attribute.</span></span></summary>
        <value><span data-ttu-id="361aa-201">XML 특성의 XML 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-201">The XML namespace of the XML attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="361aa-202"><xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> 속성을 준수 합니다 http://www.w3.org 사양 `Namespaces in XML`합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-202">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property conforms to the http://www.w3.org specification `Namespaces in XML`.</span></span>  
  
 <span data-ttu-id="361aa-203">접두사와 연결 된 네임 스페이스를 만들려면 만들어야는 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 네임 스페이스 및 XML 문서에 사용 되는 접두사를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-203">To create namespaces that are associated with prefixes, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="361aa-204">네임 스페이스 각각에 대해 설정한 <xref:System.Xml.Serialization.XmlAttributeAttribute> 네임 스페이스 중 하 나와 일치 해야 합니다는 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-204">The namespace you set for each <xref:System.Xml.Serialization.XmlAttributeAttribute> must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.</span></span> <span data-ttu-id="361aa-205">경우는 <xref:System.Xml.Serialization.XmlSerializer> XML 코드를 생성 합니다. 각 특성 이름 접두사를 붙입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-205">When the <xref:System.Xml.Serialization.XmlSerializer> generates the XML code, it correctly prefixes each attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="361aa-206">다음 예제에서는 적용 된 <xref:System.Xml.Serialization.XmlAttributeAttribute> 클래스에 포함 하는 두 필드에 합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-206">The following example applies the <xref:System.Xml.Serialization.XmlAttributeAttribute> to two fields contained in a class.</span></span> <span data-ttu-id="361aa-207">예제에서는 <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> 각 특성 멤버 식별자와 다른 값에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-207">The example sets the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property for each attribute to a value different from the member identifier.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="361aa-208">XML 특성의 복합 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-208">Gets or sets the complex type of the XML attribute.</span></span></summary>
        <value><span data-ttu-id="361aa-209">XML 특성의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="361aa-209">The type of the XML attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>