<Type Name="XmlAnyElementAttribute" FullName="System.Xml.Serialization.XmlAnyElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3035eb34b5613aebeda351e5208013371cfe716a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58723904" /></Metadata><TypeSignature Language="C#" Value="public class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAnyElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAnyElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAnyElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlAnyElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b057a-101">멤버(<see cref="T:System.Xml.XmlElement" /> 또는 <see cref="T:System.Xml.XmlNode" /> 개체의 배열을 반환하는 필드)가 serialize 또는 deserialize되고 있는 개체에 해당 멤버가 없는 XML 요소를 나타내는 개체를 포함하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-101">Specifies that the member (a field that returns an array of <see cref="T:System.Xml.XmlElement" /> or <see cref="T:System.Xml.XmlNode" /> objects) contains objects that represent any XML element that has no corresponding member in the object being serialized or deserialized.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="b057a-102">이식 가능한 클래스 라이브러리를 사용할 때 Silverlight, Windows Phone 또는 Windows 스토어 앱 프로젝트와 같이 사용 하는.NET Framework 4.0.3 이상을 사용 하 여 <xref:System.Xml.Linq.XElement> 나 <xref:System.Xml.Linq.XNode> 대신 <xref:System.Xml.XmlElement> 고 <xref:System.Xml.XmlNode>합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-102">When working in a portable class library, such as in Silverlight, Windows Phone or Windows Store App project, and you are using the .NET Framework 4.0.3 and above, use <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XNode> in place of <xref:System.Xml.XmlElement> and <xref:System.Xml.XmlNode>.</span></span>  
  
 <span data-ttu-id="b057a-103">사용 된 <xref:System.Xml.Serialization.XmlAnyElementAttribute> (XML 요소로) 문서의 일부로 전송 하는 메타 데이터와 같은 XML 문서의 일부로 보낼 수 있는 임의의 데이터를 포함 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-103">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to contain arbitrary data (as XML elements) that can be sent as part of an XML document, such as metadata sent as part of the document.</span></span>  
  
 <span data-ttu-id="b057a-104">적용 된 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 배열을 반환 하는 필드를 <xref:System.Xml.XmlElement> 또는 <xref:System.Xml.XmlNode> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-104">Apply the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field that returns an array of <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects.</span></span> <span data-ttu-id="b057a-105">이러한 필드를 개체 되 여부에 따라 두 가지 방법으로 사용할 수 serialize 하거나 deserialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-105">Such a field can be used in two ways, depending on whether an object is being serialized or deserialized.</span></span> <span data-ttu-id="b057a-106">으로 serialize 될 때 해당 멤버 (없거나 멤버) 개체에 serialize 되는 것에 개체 XML 요소 또는 노드 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-106">When serialized, the object is generated as XML elements or nodes, even though they have no corresponding member (or members) in the object being serialized.</span></span> <span data-ttu-id="b057a-107">지정 하는 경우는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 속성 값 특성을 적용 하는 경우 모든 <xref:System.Xml.XmlElement> 또는 <xref:System.Xml.XmlNode> 배열에 삽입 하는 개체에는 동일한 요소 이름 및 기본 네임 스페이스에 있어야 합니다. 또는 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-107">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value when applying the attribute, all <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects inserted into the array must have the same element name and default namespace, or an exception is thrown.</span></span> <span data-ttu-id="b057a-108">설정 하는 경우를 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 설정한 속성 값을 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 속성 뿐만 및 <xref:System.Xml.XmlElement> 또는 <xref:System.Xml.XmlNode> 개체 이름 및 네임 스페이스 값이 같은 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-108">If you set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value, you must set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property as well, and the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects must also have the same name and namespace values.</span></span> <span data-ttu-id="b057a-109">없으면 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 값을 지정 합니다 <xref:System.Xml.XmlElement> 또는 <xref:System.Xml.XmlNode> 개체 요소 이름을 가질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-109">If no <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value is specified, the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects can have any element name.</span></span>  
  
 <span data-ttu-id="b057a-110">호출 하는 경우는 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 메서드는 <xref:System.Xml.Serialization.XmlSerializer> 클래스 역직렬화 중인 개체에서 해당 멤버가 없는 모든 요소를 배열에 수집 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-110">When you call the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method of the <xref:System.Xml.Serialization.XmlSerializer> class, all elements that do not have a corresponding member in the object being deserialized are collected in the array.</span></span> <span data-ttu-id="b057a-111">컬렉션을 반복으로 deserialization 후 <xref:System.Xml.XmlElement> 데이터를 처리 하는 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-111">After deserialization, iterate through the collection of <xref:System.Xml.XmlElement> items to process the data.</span></span> <span data-ttu-id="b057a-112">지정 하는 경우는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 값 배열에는 해당 이름 가진 XML 요소만 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-112">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains only XML elements with that name.</span></span> <span data-ttu-id="b057a-113">지정 하지 않으면 경우는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 값 배열의 해당 멤버가 없는 클래스에 있는 모든 요소를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-113">If you do not specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains all elements that have no corresponding member in the class.</span></span> <span data-ttu-id="b057a-114">특성이 적용 되는 둘 이상의 필드를 포함 하는 클래스를 사용 합니다 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, 또는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 및 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 배열의 내용을 구분 하는 속성.</span><span class="sxs-lookup"><span data-stu-id="b057a-114">If a class contains more than one field to which the attribute is applied, use the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, or <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> properties to differentiate between the contents of the arrays.</span></span> <span data-ttu-id="b057a-115">(여러 필드) 하 여 이러한 클래스 구분 속성 값 집합에 하나의 필드를 포함 하는 경우 (즉, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 고 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) deserialization 도중이 배열에 이미 포함 되지 않은 모든 알 수 없는 XML 요소 포함 다른 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-115">If such a class (with multiple fields) also contains one field that has no differentiating property values set (in other words, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) during deserialization, this array contains any unknown XML elements that are not already contained in the other arrays.</span></span> <span data-ttu-id="b057a-116">클래스는 구분 되지 않은 둘 이상의 필드를 포함 하는 경우 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, 또는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 고 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 값 집합을 역직렬화 하는 동안 동작이 지정 되지 않습니다. 합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-116">If a class contains more than one field that does not have a differentiating <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, or <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> value set, the behavior during deserialization is unspecified.</span></span>  
  
 <span data-ttu-id="b057a-117">적용할 수도 있습니다는 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 단일 반환 하는 필드를 <xref:System.Xml.XmlElement> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-117">You can also apply the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field that returns a single <xref:System.Xml.XmlElement> object.</span></span> <span data-ttu-id="b057a-118">이렇게 하면 속성의 및 메서드를 사용 해야 합니다는 <xref:System.Xml.XmlElement> 클래스를 재귀적으로 알 수 없는 요소를 반복 합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-118">If you do so, you must use the properties and methods of the <xref:System.Xml.XmlElement> class to recursively iterate through the unknown elements.</span></span>  
  
 <span data-ttu-id="b057a-119">여러 인스턴스를 적용할 수 있습니다 합니다 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 클래스에 멤버를 각 인스턴스는 고유한 있어야 합니다 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-119">You can apply multiple instances of the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a class member, but each instance must have a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value.</span></span> <span data-ttu-id="b057a-120">또는 동일한 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 속성은 고유한 각 인스턴스에 대해 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 각 인스턴스에 대 한 속성 값을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-120">Or, if the same <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property is set for each instance, a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value must be set for each instance.</span></span>  
  
 <span data-ttu-id="b057a-121"><xref:System.Xml.Serialization.XmlSerializer.UnknownNode> 및 <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> 의 이벤트를 <xref:System.Xml.Serialization.XmlSerializer> 적용 하는 경우 발생 하지는 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 클래스의 멤버에 합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-121">The <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> and <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> events of the <xref:System.Xml.Serialization.XmlSerializer> do not occur if you apply the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a member of a class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b057a-122">단어를 사용할 수 있습니다 `XmlAnyElement` 대신 코드에서 <xref:System.Xml.Serialization.XmlAnyElementAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-122">You can use the word `XmlAnyElement` in your code instead of the longer <xref:System.Xml.Serialization.XmlAnyElementAttribute>.</span></span>  
  
 <span data-ttu-id="b057a-123">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [특성](~/docs/standard/attributes/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-123">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b057a-124">다음 예제에서는 적용 된 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 라는 필드에 `AllElements` 의 배열을 반환 하는 <xref:System.Xml.XmlElement> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-124">The following example applies the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field named `AllElements` that returns an array of <xref:System.Xml.XmlElement> objects.</span></span>  
  
 [!code-cpp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b057a-125">XML Serialization 소개</span><span class="sxs-lookup"><span data-stu-id="b057a-125">Introducing XML Serialization</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b057a-126"><see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-126">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b057a-127"><see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-127">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b057a-128">사용 된 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 필드의 serialization을 재정의 하는 경우 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-128">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor when you are overriding the serialization of a field.</span></span> <span data-ttu-id="b057a-129">Serialization을 재정의 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-129">For more details about overriding serialization, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b057a-130"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 생성하는 XML 요소의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-130">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span></span></param>
        <summary><span data-ttu-id="b057a-131"><see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 클래스의 새 인스턴스를 초기화하며 XML 문서에 생성된 XML 요소의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-131">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class and specifies the XML element name generated in the XML document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b057a-132">사용 된 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 필드의 serialization을 재정의 하는 경우 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-132">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor when you are overriding the serialization of a field.</span></span> <span data-ttu-id="b057a-133">Serialization을 재정의 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-133">For more details about overriding serialization, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string * string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute (name, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b057a-134"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 생성하는 XML 요소의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-134">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span></span></param>
        <param name="ns"><span data-ttu-id="b057a-135">XML 요소의 XML 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-135">The XML namespace of the XML element.</span></span></param>
        <summary><span data-ttu-id="b057a-136"><see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 클래스의 새 인스턴스를 초기화하며 XML 문서와 이 문서의 XML 네임스페이스에 생성된 XML 요소의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-136">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class and specifies the XML element name generated in the XML document and its XML namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b057a-137">사용 된 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 필드의 serialization을 재정의 하는 경우 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-137">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor when you are overriding the serialization of a field.</span></span> <span data-ttu-id="b057a-138">Serialization을 재정의 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-138">For more details about overriding serialization, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b057a-139">XML 요소 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-139">Gets or sets the XML element name.</span></span></summary>
        <value><span data-ttu-id="b057a-140">XML 요소의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-140">The name of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b057a-141">지정 하는 경우는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 속성 값 특성을 적용 하는 경우 모든 <xref:System.Xml.XmlElement> 또는 <xref:System.Xml.XmlNode> 배열에 삽입 하는 개체에는 동일한 요소 이름 및 기본 네임 스페이스에 있어야 합니다. 또는 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-141">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value when applying the attribute, all <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects inserted into the array must have the same element name and default namespace, or an exception is thrown.</span></span> <span data-ttu-id="b057a-142">설정 하는 경우를 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 설정한 속성 값을 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 속성 뿐만 및 <xref:System.Xml.XmlElement> 또는 <xref:System.Xml.XmlNode> 개체 이름 및 네임 스페이스 값이 같은 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-142">If you set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value, you must set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property as well, and the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects must also have the same name and namespace values.</span></span> <span data-ttu-id="b057a-143">없으면 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 값을 지정 합니다 <xref:System.Xml.XmlElement> 또는 <xref:System.Xml.XmlNode> 개체 요소 이름을 가질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-143">If no <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value is specified, the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects can have any element name.</span></span>  
  
 <span data-ttu-id="b057a-144">호출 하는 경우는 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 메서드는 <xref:System.Xml.Serialization.XmlSerializer> deserialize 되 고 있는 개체에 해당 멤버가 없는 모든 특성 클래스 배열에서 수집 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-144">When you call the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method of the <xref:System.Xml.Serialization.XmlSerializer> class, all attributes that do not have a corresponding member in the object being deserialized are collected in the array.</span></span> <span data-ttu-id="b057a-145">지정 하는 경우는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 값 배열에는 해당 이름 가진 XML 요소만 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-145">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains only XML elements with that name.</span></span> <span data-ttu-id="b057a-146">지정 하지 않으면 경우는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 값 배열의 해당 멤버가 없는 클래스에 있는 모든 요소를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-146">If you do not specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains all elements that have no corresponding member in the class.</span></span> <span data-ttu-id="b057a-147">특성이 적용 되는 둘 이상의 필드를 포함 하는 클래스를 사용 합니다 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 및 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 배열의 내용을 구분 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-147">If a class contains more than one field to which the attribute is applied, use the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> properties to differentiate between the contents of the arrays.</span></span> <span data-ttu-id="b057a-148">(여러 필드) 하 여 이러한 클래스 구분 속성 값 집합에 하나의 필드를 포함 하는 경우 (즉, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 고 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) 배열 deserialization을 수행 하는 동안 다른 이미 포함 되지 않은 XML 요소를 포함 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-148">If such a class (with multiple fields) also contains one field that has no differentiating property values set (that is, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) during deserialization, the array contains any XML elements that are not already contained in the other arrays.</span></span> <span data-ttu-id="b057a-149">구분 되지 않은 둘 이상의 필드를 추가 하는 경우 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 나 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 설정 값 클래스의 마지막 필드는 다른 배열에 이미 포함 되지 않은 모든 알 수 없는 요소를 포함 하 고 다른 필드로 설정 됩니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-149">If you add more than one field that does not have a differentiating <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> or <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> value set, the last field in the class contains all unknown elements that are not already contained in the other arrays, and any other fields are set to `null`.</span></span>  
  
 <span data-ttu-id="b057a-150">여러 인스턴스를 적용할 수 있습니다 합니다 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 클래스에 멤버를 각 인스턴스는 고유한 있어야 합니다 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-150">You can apply multiple instances of the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a class member, but each instance must have a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value.</span></span> <span data-ttu-id="b057a-151">또는 동일한 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 속성은 고유한 각 인스턴스에 대해 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 각 인스턴스에 대 한 속성 값을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-151">Or, if the same <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property is set for each instance, a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value must be set for each instance.</span></span>  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b057a-152">배열 멤버의 요소 이름이 <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /> 속성으로 지정한 요소 이름과 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="b057a-152">The element name of an array member does not match the element name specified by the <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /> property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b057a-153">XML 문서에 생성된 XML 네임스페이스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-153">Gets or sets the XML namespace generated in the XML document.</span></span></summary>
        <value><span data-ttu-id="b057a-154">XML 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-154">An XML namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b057a-155"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 속성을 사용 하면 XML 특성에 대 한 고유한 이름을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-155">The <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property allows you to set a unique name for the XML attribute.</span></span> <span data-ttu-id="b057a-156"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 속성 규칙을 준수 하는 World Wide Web 컨소시엄 (www.w3.org) 문서의 "xml에서 네임 스페이스입니다."에 있는 XML 네임 스페이스를 만들기 위한</span><span class="sxs-lookup"><span data-stu-id="b057a-156">The <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property conforms to the rules for creating an XML namespace as found in the World Wide Web Consortium (www.w3.org) document, "Namespaces in XML."</span></span>  
  
 <span data-ttu-id="b057a-157">설정 하는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 속성을 접두사 이름 만들기를 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 네임 스페이스 및 XML 문서에 사용 되는 접두사를 포함 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-157">To set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property to a prefixed name, create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="b057a-158">설정 합니다 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 속성을 네임 스페이스 중 하나로 <xref:System.Xml.Serialization.XmlSerializerNamespaces>합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-158">Set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property to one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="b057a-159">XML을 생성 하는 경우 특성 이름이 지정된 된 네임 스페이스를 사용 하 여 관련 된 접두사를 사용 하 여 올바르게 접두사로 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-159">When the XML is generated, the attribute name is correctly prefixed with the prefix associated with the specified namespace.</span></span>  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b057a-160">요소가 serialize 또는 deserialize되는 명시적 순서를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-160">Gets or sets the explicit order in which the elements are serialized or deserialized.</span></span></summary>
        <value><span data-ttu-id="b057a-161">코드가 생성되는 순서입니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-161">The order of the code generation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b057a-162">사용 하 여는 <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> 지시 하는 열거형은 <xref:System.Web.Services.Description.ServiceDescriptionImporter> 설정 하는 코드를 생성 하는 <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="b057a-162">Use the <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeration to instruct the <xref:System.Web.Services.Description.ServiceDescriptionImporter> to generate code that sets the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b057a-163">한 번의 <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> 하나의 공용 속성 또는 필드 형식에서 사용 된 속성, 모든 공용 속성 및 해당 형식 및 상속 된 모든 형식에 대 한 필드에 적용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b057a-163">Once the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>