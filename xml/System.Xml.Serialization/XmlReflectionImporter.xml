<Type Name="XmlReflectionImporter" FullName="System.Xml.Serialization.XmlReflectionImporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30826a3f5d698442666779ae2780acab41df309c" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57915700" /></Metadata><TypeSignature Language="C#" Value="public class XmlReflectionImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlReflectionImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlReflectionImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlReflectionImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReflectionImporter" />
  <TypeSignature Language="F#" Value="type XmlReflectionImporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="02d93-101">WSDL(Web Services Description Language) 문서의 리터럴 XSD(XML 스키마 정의) 메시지 부분을 포함하는 XML 스키마 요소 선언과 .NET Framework 형식 또는 웹 서비스 메서드 정보의 매핑을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-101">Generates mappings to XML schema element declarations, including literal XML Schema Definition (XSD) message parts in a Web Services Description Language (WSDL) document, for .NET Framework types or Web service method information.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02d93-102"><xref:System.Xml.Serialization.XmlReflectionImporter> 클래스는 직접 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-102">The <xref:System.Xml.Serialization.XmlReflectionImporter> class is not used directly.</span></span> <span data-ttu-id="02d93-103">대신 다음과 같이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-103">Instead, it is used as follows:</span></span>  
  
-   <span data-ttu-id="02d93-104">여는 <xref:System.Web.Services.Description.ServiceDescriptionReflector> 생성 되는 동안 클래스 <xref:System.Web.Services.Description.ServiceDescription> 웹 서비스로 식별 되는 클래스의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-104">By the <xref:System.Web.Services.Description.ServiceDescriptionReflector> class while it creates <xref:System.Web.Services.Description.ServiceDescription> objects from classes that are identified as Web services.</span></span>  
  
-   <span data-ttu-id="02d93-105">웹 서비스 또는 클라이언트를 초기화 하는 동안 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-105">By a Web service or client, including during initialization.</span></span>  
  
-   <span data-ttu-id="02d93-106">초기화 하는 <xref:System.Xml.Serialization.XmlSerializer> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-106">To initialize an <xref:System.Xml.Serialization.XmlSerializer> object.</span></span>  
  
-   <span data-ttu-id="02d93-107">이 도구는 동안 XML 스키마 정의 도구 (Xsd.exe)으로 런타임 어셈블리 파일의 형식에서 XML 스키마를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-107">By the XML Schema Definition tool (Xsd.exe) while the tool generates XML schemas from types in a run-time assembly file.</span></span>  
  
-   <span data-ttu-id="02d93-108">도구 하는 동안 웹 서비스 기술 언어 도구 (Wsdl.exe)에서 WSDL 문서에서 클라이언트 프록시 클래스 또는 추상 서버 클래스를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-108">By the Web Services Description Language tool (Wsdl.exe) while the tool generates client proxy classes or abstract server classes from a WSDL document.</span></span>  
  
 <span data-ttu-id="02d93-109"><xref:System.Xml.Serialization.XmlReflectionImporter> 때 웹 서비스에 대 한 클래스는 또는 클라이언트를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-109">The <xref:System.Xml.Serialization.XmlReflectionImporter> class is used for Web services when a service or client specifies:</span></span>  
  
-   <span data-ttu-id="02d93-110">SOAP 메시지 매개 변수 및 반환 값 (또는 요청 및 응답 문서)의 내용을 XML 스키마 정의 사용 하 여 문자 그대로 지정 되어 있는지 여부를 나타내는 리터럴 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-110">Literal use, which indicates that the contents of SOAP message parameters and return values (or request and response documents) are literally specified with XML schema definitions.</span></span>  
  
-   <span data-ttu-id="02d93-111">HTTP-GET 및 HTTP-POST 작업을 사용 하는 웹 서비스의 비-SOAP 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-111">Non-SOAP implementations of Web services using the HTTP-GET and HTTP-POST operations.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02d93-112"><see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-112">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02d93-113"><see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-113">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02d93-114">인스턴스를 만들 필요가 없습니다를 <xref:System.Xml.Serialization.XmlReflectionImporter> 직접 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-114">You do not need to create an instance of an <xref:System.Xml.Serialization.XmlReflectionImporter> object directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlReflectionImporter : string -&gt; System.Xml.Serialization.XmlReflectionImporter" Usage="new System.Xml.Serialization.XmlReflectionImporter defaultNamespace" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="defaultNamespace"><span data-ttu-id="02d93-115">가져온 형식 매핑에 사용할 기본 XML 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-115">The default XML namespace to use for imported type mappings.</span></span></param>
        <summary><span data-ttu-id="02d93-116">지정된 기본 XML 네임스페이스를 사용하여 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class using the specified default XML namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02d93-117">인스턴스를 만드는 데 필요한 것은 <xref:System.Xml.Serialization.XmlReflectionImporter> 클래스를 직접.</span><span class="sxs-lookup"><span data-stu-id="02d93-117">It is not necessary to create an instance of the <xref:System.Xml.Serialization.XmlReflectionImporter> class directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (System.Xml.Serialization.XmlAttributeOverrides attributeOverrides);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlAttributeOverrides attributeOverrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeOverrides As XmlAttributeOverrides)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::Xml::Serialization::XmlAttributeOverrides ^ attributeOverrides);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlReflectionImporter : System.Xml.Serialization.XmlAttributeOverrides -&gt; System.Xml.Serialization.XmlReflectionImporter" Usage="new System.Xml.Serialization.XmlReflectionImporter attributeOverrides" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides"><span data-ttu-id="02d93-118"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스가 매핑 형식을 serialize하는 방법을 재정의하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-118">An object that overrides how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class serializes mapped types.</span></span></param>
        <summary><span data-ttu-id="02d93-119">지정된 XML serialization 재정의를 사용하여 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-119">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class using the specified XML serialization overrides.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02d93-120">인스턴스를 만드는 데 필요한 것은 <xref:System.Xml.Serialization.XmlReflectionImporter> 클래스를 직접.</span><span class="sxs-lookup"><span data-stu-id="02d93-120">It is not necessary to create an instance of the <xref:System.Xml.Serialization.XmlReflectionImporter> class directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (System.Xml.Serialization.XmlAttributeOverrides attributeOverrides, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlAttributeOverrides attributeOverrides, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeOverrides As XmlAttributeOverrides, defaultNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::Xml::Serialization::XmlAttributeOverrides ^ attributeOverrides, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlReflectionImporter : System.Xml.Serialization.XmlAttributeOverrides * string -&gt; System.Xml.Serialization.XmlReflectionImporter" Usage="new System.Xml.Serialization.XmlReflectionImporter (attributeOverrides, defaultNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides"><span data-ttu-id="02d93-121"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스가 매핑 형식을 serialize하는 방법을 재정의하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-121">An object that overrides how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class serializes mapped types.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="02d93-122">가져온 형식 매핑에 사용할 기본 XML 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-122">The default XML namespace to use for imported type mappings.</span></span></param>
        <summary><span data-ttu-id="02d93-123">지정된 XML serialization 재정의와 기본 XML 네임스페이스를 사용하여 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-123">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class using the specified XML serialization overrides and default XML namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02d93-124">인스턴스를 만드는 데 필요한 것은 <xref:System.Xml.Serialization.XmlReflectionImporter> 클래스를 직접.</span><span class="sxs-lookup"><span data-stu-id="02d93-124">It is not necessary to create an instance of the <xref:System.Xml.Serialization.XmlReflectionImporter> class directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportMembersMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02d93-125">웹 서비스 메서드의 정보를 사용하여 내부 형식 매핑을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-125">Returns internal type mappings using information from a Web service method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement);" />
      <MemberSignature Language="F#" Value="member this.ImportMembersMapping : string * string * System.Xml.Serialization.XmlReflectionMember[] * bool -&gt; System.Xml.Serialization.XmlMembersMapping" Usage="xmlReflectionImporter.ImportMembersMapping (elementName, ns, members, hasWrapperElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="02d93-126">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-126">An XML element name produced from the Web service method.</span></span></param>
        <param name="ns"><span data-ttu-id="02d93-127">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-127">An XML element namespace produced from the Web service method.</span></span></param>
        <param name="members"><span data-ttu-id="02d93-128">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티가 포함된 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-128">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</span></span></param>
        <param name="hasWrapperElement"><span data-ttu-id="02d93-129">WSDL(Web Services Description Language) 메시지 부분과 일치하는 요소가 SOAP 메시지의 추가 래퍼 요소로 묶여야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-129"><see langword="true" /> if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="02d93-130">웹 서비스 메서드에서 정보에 대한 내부 형식 매핑을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-130">Generates internal type mappings for information from a Web service method.</span></span></summary>
        <returns><span data-ttu-id="02d93-131">WSDL 메시지 정의의 요소 부분에 대한 매핑이 있는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-131">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> with mappings to the element parts of a WSDL message definition.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02d93-132"><xref:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping%2A> 메서드는 웹 서비스 또는 클라이언트를 초기화 하거나 웹 서비스를 반영 하는 동안 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-132">The <xref:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping%2A> method is called while initializing a Web service or client, or reflecting a Web service.</span></span> <span data-ttu-id="02d93-133">메서드를 직접 호출 하는 데 필요한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-133">It is not necessary to call it directly.</span></span>  
  
 <span data-ttu-id="02d93-134"><xref:System.Xml.Serialization.XmlReflectionMember> 배열 매개 변수 중 하나가 구성 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-134">The <xref:System.Xml.Serialization.XmlReflectionMember> array parameter can consist of any one of the following:</span></span>  
  
-   <span data-ttu-id="02d93-135">웹 서비스 메서드에 입력된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-135">Web service method input parameters.</span></span>  
  
-   <span data-ttu-id="02d93-136">웹 서비스 메서드 출력 매개 변수를 인덱스 0에 반환 형식이 void가 아닌 경우.</span><span class="sxs-lookup"><span data-stu-id="02d93-136">Web service method output parameters, plus the return type, if not void, at index 0.</span></span>  
  
-   <span data-ttu-id="02d93-137">헤더를 입력된 하는 SOAP입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-137">SOAP input headers.</span></span>  
  
-   <span data-ttu-id="02d93-138">SOAP 출력 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-138">SOAP output headers.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc);" />
      <MemberSignature Language="F#" Value="member this.ImportMembersMapping : string * string * System.Xml.Serialization.XmlReflectionMember[] * bool * bool -&gt; System.Xml.Serialization.XmlMembersMapping" Usage="xmlReflectionImporter.ImportMembersMapping (elementName, ns, members, hasWrapperElement, rpc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rpc" Type="System.Boolean" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="02d93-139">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-139">An XML element name produced from the Web service method.</span></span></param>
        <param name="ns"><span data-ttu-id="02d93-140">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-140">An XML element namespace produced from the Web service method.</span></span></param>
        <param name="members"><span data-ttu-id="02d93-141">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티가 포함된 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-141">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</span></span></param>
        <param name="hasWrapperElement"><span data-ttu-id="02d93-142">WSDL(Web Services Description Language) 메시지 부분과 일치하는 요소가 SOAP 메시지의 추가 래퍼 요소로 묶여야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-142"><see langword="true" /> if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, <see langword="false" />.</span></span></param>
        <param name="rpc"><span data-ttu-id="02d93-143">메서드가 원격 프로시저 호출이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-143"><see langword="true" /> if the method is a remote procedure call; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="02d93-144">웹 서비스 메서드의 정보를 사용하여 내부 형식 매핑을 반환하고 XML 요소 이름, XML 네임스페이스 및 기타 옵션을 지정할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-144">Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.</span></span></summary>
        <returns><span data-ttu-id="02d93-145">매핑이 들어 있는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-145">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> that contains the mappings.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean, openModel As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc, bool openModel);" />
      <MemberSignature Language="F#" Value="member this.ImportMembersMapping : string * string * System.Xml.Serialization.XmlReflectionMember[] * bool * bool * bool -&gt; System.Xml.Serialization.XmlMembersMapping" Usage="xmlReflectionImporter.ImportMembersMapping (elementName, ns, members, hasWrapperElement, rpc, openModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rpc" Type="System.Boolean" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="openModel" Type="System.Boolean" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="02d93-146">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-146">An XML element name produced from the Web service method.</span></span></param>
        <param name="ns"><span data-ttu-id="02d93-147">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-147">An XML element namespace produced from the Web service method.</span></span></param>
        <param name="members"><span data-ttu-id="02d93-148">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티가 포함된 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-148">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</span></span></param>
        <param name="hasWrapperElement"><span data-ttu-id="02d93-149">WSDL(Web Services Description Language) 메시지 부분과 일치하는 요소가 SOAP 메시지의 추가 래퍼 요소로 묶여야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-149"><see langword="true" /> if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, <see langword="false" />.</span></span></param>
        <param name="rpc"><span data-ttu-id="02d93-150">메서드가 원격 프로시저 호출이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-150"><see langword="true" /> if the method is a remote procedure call; otherwise, <see langword="false" />.</span></span></param>
        <param name="openModel"><span data-ttu-id="02d93-151">생성된 스키마 형식이 <see langword="true" /> 요소로 표시되도록 지정하려면 <see langword="&lt;xs:anyAttribute&gt;" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-151"><see langword="true" /> to specify that the generated schema type will be marked with the <see langword="&lt;xs:anyAttribute&gt;" /> element; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="02d93-152">웹 서비스 메서드의 정보를 사용하여 내부 형식 매핑을 반환하고 XML 요소 이름, XML 네임스페이스 및 기타 옵션을 지정할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-152">Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.</span></span></summary>
        <returns><span data-ttu-id="02d93-153">매핑이 들어 있는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-153">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> that contains the mappings.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel, System.Xml.Serialization.XmlMappingAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel, valuetype System.Xml.Serialization.XmlMappingAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean, openModel As Boolean, access As XmlMappingAccess) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc, bool openModel, System::Xml::Serialization::XmlMappingAccess access);" />
      <MemberSignature Language="F#" Value="member this.ImportMembersMapping : string * string * System.Xml.Serialization.XmlReflectionMember[] * bool * bool * bool * System.Xml.Serialization.XmlMappingAccess -&gt; System.Xml.Serialization.XmlMembersMapping" Usage="xmlReflectionImporter.ImportMembersMapping (elementName, ns, members, hasWrapperElement, rpc, openModel, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rpc" Type="System.Boolean" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="openModel" Type="System.Boolean" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.Xml.Serialization.XmlMappingAccess" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="02d93-154">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-154">An XML element name produced from the Web service method.</span></span></param>
        <param name="ns"><span data-ttu-id="02d93-155">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-155">An XML element namespace produced from the Web service method.</span></span></param>
        <param name="members"><span data-ttu-id="02d93-156">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티가 포함된 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-156">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</span></span></param>
        <param name="hasWrapperElement"><span data-ttu-id="02d93-157">WSDL(Web Services Description Language) 메시지 부분과 일치하는 요소가 SOAP 메시지의 추가 래퍼 요소로 묶여야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-157"><see langword="true" /> if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, <see langword="false" />.</span></span></param>
        <param name="rpc"><span data-ttu-id="02d93-158">메서드가 원격 프로시저 호출이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-158"><see langword="true" /> if the method is a remote procedure call; otherwise, <see langword="false" />.</span></span></param>
        <param name="openModel"><span data-ttu-id="02d93-159">생성된 스키마 형식이 <see langword="true" /> 요소로 표시되도록 지정하려면 <see langword="&lt;xs:anyAttribute&gt;" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-159"><see langword="true" /> to specify that the generated schema type will be marked with the <see langword="&lt;xs:anyAttribute&gt;" /> element; otherwise, <see langword="false" />.</span></span></param>
        <param name="access"><span data-ttu-id="02d93-160"><see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-160">One of the <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> values.</span></span> <span data-ttu-id="02d93-161">기본값은 <see langword="None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-161">The default is <see langword="None" />.</span></span></param>
        <summary><span data-ttu-id="02d93-162">웹 서비스 메서드에서 정보에 대한 내부 형식 매핑을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-162">Generates internal type mappings for information from a Web service method.</span></span></summary>
        <returns><span data-ttu-id="02d93-163">매핑이 들어 있는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-163">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> that contains the mappings.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportTypeMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02d93-164">지정한 .NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-164">Generates a mapping to an XML Schema element for a specified .NET Framework type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.ImportTypeMapping : Type -&gt; System.Xml.Serialization.XmlTypeMapping" Usage="xmlReflectionImporter.ImportTypeMapping type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="02d93-165">형식 매핑을 생성할 .NET Framework 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-165">The .NET Framework type for which to generate a type mapping.</span></span></param>
        <summary><span data-ttu-id="02d93-166">지정한 .NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-166">Generates a mapping to an XML Schema element for a specified .NET Framework type.</span></span></summary>
        <returns><span data-ttu-id="02d93-167">형식을 XML 스키마 요소에 연결하는 내부 .NET Framework 매핑</span><span class="sxs-lookup"><span data-stu-id="02d93-167">Internal .NET Framework mapping of a type to an XML Schema element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02d93-168">호출 하는 데 필요한 것은 <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> 메서드를 직접.</span><span class="sxs-lookup"><span data-stu-id="02d93-168">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="member this.ImportTypeMapping : Type * string -&gt; System.Xml.Serialization.XmlTypeMapping" Usage="xmlReflectionImporter.ImportTypeMapping (type, defaultNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="02d93-169">형식 매핑을 생성할 .NET Framework 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-169">The .NET Framework type for which to generate a type mapping.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="02d93-170">사용할 기본 XML 네임스페이스입니다. </span><span class="sxs-lookup"><span data-stu-id="02d93-170">The default XML namespace to use.</span></span></param>
        <summary><span data-ttu-id="02d93-171">지정한 형식 및 네임스페이스를 사용하여 .NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-171">Generates a mapping to an XML Schema element for a .NET Framework type, using the specified type and namespace.</span></span></summary>
        <returns><span data-ttu-id="02d93-172">형식을 XML 스키마 요소에 연결하는 내부 .NET Framework 매핑</span><span class="sxs-lookup"><span data-stu-id="02d93-172">Internal .NET Framework mapping of a type to an XML Schema element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02d93-173">호출 하는 데 필요한 것은 <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> 메서드를 직접.</span><span class="sxs-lookup"><span data-stu-id="02d93-173">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, System.Xml.Serialization.XmlRootAttribute root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root);" />
      <MemberSignature Language="F#" Value="member this.ImportTypeMapping : Type * System.Xml.Serialization.XmlRootAttribute -&gt; System.Xml.Serialization.XmlTypeMapping" Usage="xmlReflectionImporter.ImportTypeMapping (type, root)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="02d93-174">형식 매핑을 생성할 .NET Framework 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-174">The .NET Framework type for which to generate a type mapping.</span></span></param>
        <param name="root"><span data-ttu-id="02d93-175">형식에 적용되는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-175">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> attribute that is applied to the type.</span></span></param>
        <summary><span data-ttu-id="02d93-176">지정한 형식 및 특성을 사용하여 .NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-176">Generates a mapping to an XML Schema element for a .NET Framework type, using the specified type and attribute.</span></span></summary>
        <returns><span data-ttu-id="02d93-177">.NET Framework 형식과 XML 스키마 요소의 매핑을 나타내는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-177">An <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that represents a mapping of a .NET Framework type to an XML Schema element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02d93-178">호출 하는 데 필요한 것은 <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> 메서드를 직접.</span><span class="sxs-lookup"><span data-stu-id="02d93-178">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="member this.ImportTypeMapping : Type * System.Xml.Serialization.XmlRootAttribute * string -&gt; System.Xml.Serialization.XmlTypeMapping" Usage="xmlReflectionImporter.ImportTypeMapping (type, root, defaultNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="02d93-179">형식 매핑을 생성할 .NET Framework 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-179">The .NET Framework type for which to generate a type mapping.</span></span></param>
        <param name="root"><span data-ttu-id="02d93-180">형식에 적용되는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-180">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> attribute that is applied to the type.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="02d93-181">사용할 기본 XML 네임스페이스입니다. </span><span class="sxs-lookup"><span data-stu-id="02d93-181">The default XML namespace to use.</span></span></param>
        <summary><span data-ttu-id="02d93-182">지정한 형식, 특성 및 네임스페이스를 사용하여 .NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-182">Generates a mapping to an XML Schema element for a .NET Framework type, using the specified type, attribute, and namespace.</span></span></summary>
        <returns><span data-ttu-id="02d93-183">형식을 XML 스키마 요소에 연결하는 내부 .NET Framework 매핑을 포함하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-183">An <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that contains the internal .NET Framework mapping of a type to an XML Schema element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02d93-184">호출 하는 데 필요한 것은 <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> 메서드를 직접.</span><span class="sxs-lookup"><span data-stu-id="02d93-184">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeType">
      <MemberSignature Language="C#" Value="public void IncludeType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncludeType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.IncludeType : Type -&gt; unit" Usage="xmlReflectionImporter.IncludeType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="02d93-185">형식 매핑 정보를 저장할 .NET Framework 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-185">The .NET Framework type for which to save type mapping information.</span></span></param>
        <summary><span data-ttu-id="02d93-186">나중에 가져오기 메서드를 호출할 때 사용할 형식에 대한 매핑을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-186">Includes mappings for a type for later use when import methods are invoked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02d93-187">호출 하는 데 필요한 것은 <xref:System.Xml.Serialization.XmlReflectionImporter.IncludeType%2A> 메서드를 직접.</span><span class="sxs-lookup"><span data-stu-id="02d93-187">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.IncludeType%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeTypes">
      <MemberSignature Language="C#" Value="public void IncludeTypes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeTypes(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncludeTypes (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncludeTypes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberSignature Language="F#" Value="member this.IncludeTypes : System.Reflection.ICustomAttributeProvider -&gt; unit" Usage="xmlReflectionImporter.IncludeTypes provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02d93-188"><see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 특성에서 파생된 사용자 지정 특성을 포함하는 <see cref="T:System.Reflection.ICustomAttributeProvider" /> 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-188">An instance of the <see cref="T:System.Reflection.ICustomAttributeProvider" /> class that contains custom attributes derived from the <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> attribute.</span></span></param>
        <summary><span data-ttu-id="02d93-189">나중에 가져오기 메서드를 호출할 때 사용할 파생 형식에 대한 매핑을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="02d93-189">Includes mappings for derived types for later use when import methods are invoked.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>