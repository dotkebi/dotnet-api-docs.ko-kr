<Type Name="XmlTextAttribute" FullName="System.Xml.Serialization.XmlTextAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9a15bfa79baec104e9cba79dc92d2971a1625583" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56354184" /></Metadata><TypeSignature Language="C#" Value="public class XmlTextAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTextAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlTextAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="093dd-101">멤버가 포함된 클래스가 serialize되거나 deserialize될 때 멤버를 XML 텍스트로 처리하도록 <see cref="T:System.Xml.Serialization.XmlSerializer" />에 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-101">Indicates to the <see cref="T:System.Xml.Serialization.XmlSerializer" /> that the member must be treated as XML text when the class that contains it is serialized or deserialized.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="093dd-102">합니다 <xref:System.Xml.Serialization.XmlTextAttribute> 제어 하는 특성의 제품군에 속해 하는 방법을 <xref:System.Xml.Serialization.XmlSerializer> serialize 및 deserialize 개체 (통해 해당 <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 및 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 메서드).</span><span class="sxs-lookup"><span data-stu-id="093dd-102">The <xref:System.Xml.Serialization.XmlTextAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes and deserializes an object (through its <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> and <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> methods).</span></span> <span data-ttu-id="093dd-103">비슷한 특성의 전체 목록은 참조 하세요 [는 XML Serialization을 제어 특성](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="093dd-104">인스턴스를 하나만 여 <xref:System.Xml.Serialization.XmlTextAttribute> 클래스에서 클래스를 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-104">Only one instance of the <xref:System.Xml.Serialization.XmlTextAttribute> class can be applied in a class.</span></span>  
  
 <span data-ttu-id="093dd-105">적용할 수는 <xref:System.Xml.Serialization.XmlTextAttribute> public 필드 및 기본 형식 및 열거형을 반환 하는 공용 읽기/쓰기 속성에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-105">You can apply the <xref:System.Xml.Serialization.XmlTextAttribute> to public fields and public read/write properties that return primitive and enumeration types.</span></span>  
  
 <span data-ttu-id="093dd-106">적용할 수는 <xref:System.Xml.Serialization.XmlTextAttribute> 필드 또는 문자열의 배열을 반환 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-106">You can apply the <xref:System.Xml.Serialization.XmlTextAttribute> to a field or property that returns an array of strings.</span></span> <span data-ttu-id="093dd-107">형식의 배열에 특성을 적용할 수도 있습니다 <xref:System.Object> 있지만 설정 해야 합니다 <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> 속성 문자열을 합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-107">You can also apply the attribute to an array of type <xref:System.Object> but you must set the <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> property to string.</span></span> <span data-ttu-id="093dd-108">이 경우 배열에 삽입 하는 모든 문자열을 XML 텍스트로 serialize 됩니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-108">In that case, any strings inserted into the array are serialized as XML text.</span></span>  
  
 <span data-ttu-id="093dd-109">합니다 <xref:System.Xml.Serialization.XmlTextAttribute> 반환 하는 필드에도 적용할 수는 <xref:System.Xml.XmlNode> 또는 배열을 <xref:System.Xml.XmlNode> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-109">The <xref:System.Xml.Serialization.XmlTextAttribute> can also be applied to a field that returns an <xref:System.Xml.XmlNode> or an array of <xref:System.Xml.XmlNode> objects.</span></span>  
  
 <span data-ttu-id="093dd-110">기본적으로 <xref:System.Xml.Serialization.XmlSerializer> XML 요소로 클래스 멤버를 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-110">By default, the <xref:System.Xml.Serialization.XmlSerializer> serializes a class member as an XML element.</span></span> <span data-ttu-id="093dd-111">그러나 적용 하는 경우는 <xref:System.Xml.Serialization.XmlTextAttribute> 멤버에는 <xref:System.Xml.Serialization.XmlSerializer> XML 텍스트를 해당 값을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-111">However, if you apply the <xref:System.Xml.Serialization.XmlTextAttribute> to a member, the <xref:System.Xml.Serialization.XmlSerializer> translates its value into XML text.</span></span> <span data-ttu-id="093dd-112">이 값이 XML 요소의 콘텐츠를 인코딩는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-112">This means that the value is encoded into the content of an XML element.</span></span>  
  
 <span data-ttu-id="093dd-113">[XML 스키마 정의 도구 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) 경우에 따라 생성 된 <xref:System.Xml.Serialization.XmlTextAttribute> XML 스키마 정의 (XSD) 파일에서 클래스를 만들 때.</span><span class="sxs-lookup"><span data-stu-id="093dd-113">The [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) occasionally generates the <xref:System.Xml.Serialization.XmlTextAttribute> when creating classes from an XML Schema definition (XSD) file.</span></span> <span data-ttu-id="093dd-114">스키마에 포함 된 경우 발생 하는이 `complexType` 혼합된 콘텐츠를 사용 하 여 이런 경우 해당 클래스 멤버를 포함 하는 문자열 배열을 반환 하는 <xref:System.Xml.Serialization.XmlTextAttribute> 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-114">This occurs when the schema contains a `complexType` with mixed content; in that case, the corresponding class contains a member that returns a string array to which the <xref:System.Xml.Serialization.XmlTextAttribute> is applied.</span></span> <span data-ttu-id="093dd-115">예를 들어 경우는 `Xml Schema Definition` 이 스키마를 처리 하는 도구:</span><span class="sxs-lookup"><span data-stu-id="093dd-115">For example, when the `Xml Schema Definition` tool processes this schema:</span></span>  
  
```xml  
<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace=""   
xmlns:xs="http://www.w3.org/2001/XMLSchema">  
  <xs:element name="LinkList" type="LinkList" />  
  <xs:complexType name="LinkList" mixed="true">  
    <xs:sequence>  
      <xs:element minOccurs="1" maxOccurs="1" name="id" type="xs:int" />  
      <xs:element minOccurs="0" maxOccurs="1" name="name" type="xs:string" />  
      <xs:element minOccurs="0" maxOccurs="1" name="next" type="LinkList" />  
    </xs:sequence>  
  </xs:complexType>  
</xs:schema>  
```  
  
 <span data-ttu-id="093dd-116">다음 클래스는 생성 된 (공백 및 설명이 제거 됨):</span><span class="sxs-lookup"><span data-stu-id="093dd-116">the following class is generated (extra spaces and remarks have been removed):</span></span>  
  
 [!code-csharp[XmlTextAttribute#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlTextAttribute/cs/source.cs#0)]
 [!code-vb[XmlTextAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlTextAttribute/vb/source.vb#0)]  
  
 <span data-ttu-id="093dd-117">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [특성](~/docs/standard/attributes/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-117">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="093dd-118">단어를 사용할 수 있습니다 `XmlText` 대신 코드에서 <xref:System.Xml.Serialization.XmlTextAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-118">You can use the word `XmlText` in your code instead of the longer <xref:System.Xml.Serialization.XmlTextAttribute>.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="093dd-119">XML Serialization 소개</span><span class="sxs-lookup"><span data-stu-id="093dd-119">Introducing XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="093dd-120">방법: XML 스트림의 대체 요소 이름 지정</span><span class="sxs-lookup"><span data-stu-id="093dd-120">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="093dd-121">특성을 사용하여 XML Serialization 제어</span><span class="sxs-lookup"><span data-stu-id="093dd-121">Controlling XML Serialization Using Attributes</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="093dd-122">XML Serialization 예제</span><span class="sxs-lookup"><span data-stu-id="093dd-122">Examples of XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="093dd-123">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="093dd-123">XML Schema Definition Tool (Xsd.exe)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="093dd-124"><see cref="T:System.Xml.Serialization.XmlTextAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-124">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="093dd-125"><see cref="T:System.Xml.Serialization.XmlTextAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-125">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="093dd-126">서 재정의할 수 있습니다는 <xref:System.Xml.Serialization.XmlSerializer> 만들어 공용 필드 또는 공용 읽기/쓰기 속성을 serialize를 <xref:System.Xml.Serialization.XmlAttributes>, 및 설정을 해당 <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> 속성을는 <xref:System.Xml.Serialization.XmlTextAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-126">You can override the way that the <xref:System.Xml.Serialization.XmlSerializer> serializes a public field or public read/write property by creating an <xref:System.Xml.Serialization.XmlAttributes>, and setting its <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property to an <xref:System.Xml.Serialization.XmlTextAttribute>.</span></span> <span data-ttu-id="093dd-127">자세한 내용은 <xref:System.Xml.Serialization.XmlAttributeOverrides> 클래스를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="093dd-127">For more details, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="093dd-128">다음 예제에서는 라는 public 필드를 포함 하는 클래스를 직렬화 `Comment`합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-128">The following example serializes a class that contains a public field, named `Comment`.</span></span> <span data-ttu-id="093dd-129">예제에 적용 되는 <xref:System.Xml.Serialization.XmlTextAttribute> 필드의 serialization을 XML 요소로 재정의 하므로 하 고 대신 XML 텍스트로 직렬화 합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-129">The example applies an <xref:System.Xml.Serialization.XmlTextAttribute> to the field, thereby overriding its serialization as an XML element, and instead serializing it as XML text.</span></span>  
  
 [!code-cpp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlTextAttribute : Type -&gt; System.Xml.Serialization.XmlTextAttribute" Usage="new System.Xml.Serialization.XmlTextAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="093dd-130">serialize할 개체의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-130">The <see cref="T:System.Type" /> of the member to be serialized.</span></span></param>
        <summary><span data-ttu-id="093dd-131"><see cref="T:System.Xml.Serialization.XmlTextAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-131">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="093dd-132">서 재정의할 수 있습니다는 <xref:System.Xml.Serialization.XmlSerializer> 만들어 공용 필드 또는 공용 읽기/쓰기 속성을 serialize를 <xref:System.Xml.Serialization.XmlAttributes>, 및 설정을 해당 <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> 속성을는 <xref:System.Xml.Serialization.XmlTextAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-132">You can override the way that the <xref:System.Xml.Serialization.XmlSerializer> serializes a public field or public read/write property by creating an <xref:System.Xml.Serialization.XmlAttributes>, and setting its <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property to an <xref:System.Xml.Serialization.XmlTextAttribute>.</span></span> <span data-ttu-id="093dd-133">자세한 내용은 <xref:System.Xml.Serialization.XmlAttributeOverrides> 클래스를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="093dd-133">For more details, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="093dd-134"><see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성된 텍스트의 XSD(XML 스키마 정의) 데이터 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-134">Gets or sets the XML Schema definition language (XSD) data type of the text generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></summary>
        <value><span data-ttu-id="093dd-135">World Wide Web 컨소시엄(www.w3.org) 문서의 "XML Schema Part 2: Datatypes"에 정의된 XSD(XML 스키마 정의) 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-135">An XML Schema (XSD) data type, as defined by the World Wide Web Consortium (www.w3.org) document "XML Schema Part 2: Datatypes".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="093dd-136">설정 된 <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> 속성 XML 스키마 단순 데이터 형식으로 생성된 된 XML 형식의 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-136">Setting the <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> property to an XML Schema simple data type affects the format of the generated XML.</span></span> <span data-ttu-id="093dd-137">예를 들어, "날짜" 속성을 설정 하면 생성 되는 예를 들어 일반 날짜 스타일 서식을 지정할 텍스트: 2001-08-31.</span><span class="sxs-lookup"><span data-stu-id="093dd-137">For example, setting the property to "date" causes the generated text to be formatted in the general date style, for example: 2001-08-31.</span></span> <span data-ttu-id="093dd-138">반면, 속성 설정 "dateTime" 결과를 표준화 문서의 8601, "표현을의 날짜 및 시간", 국제 조직에서 정의 된 대로 특정 인스턴트에 예를 들어: 2001-08-15T06:59:11.0508456-07:00.</span><span class="sxs-lookup"><span data-stu-id="093dd-138">By contrast, setting the property to "dateTime" results in a specific instant as defined by the International Organization for Standardization document 8601, "Representations of Dates and Times", for example: 2001-08-15T06:59:11.0508456-07:00.</span></span>  
  
 <span data-ttu-id="093dd-139">설정의 효과 <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> 사용 하는 경우 속성을 볼 수도 있습니다는 [XML 스키마 정의 도구 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) 컴파일된 파일에 대 한 XML 스키마를 생성 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-139">The effect of setting the <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> property can also be seen when using the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) to generate the XML Schema for a compiled file.</span></span> <span data-ttu-id="093dd-140">도구를 사용 하 여 자세한 내용은 [은 XML 스키마 정의 도구 및 XML Serialization](~/docs/standard/serialization/the-xml-schema-definition-tool-and-xml-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-140">For more information on using the tool, see [The XML Schema Definition Tool and XML Serialization](~/docs/standard/serialization/the-xml-schema-definition-tool-and-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="093dd-141">다음 표에서.net을 사용 하 여 XML 스키마 단순 데이터 형식을 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-141">The following table lists the XML Schema simple data types with their .NET equivalents.</span></span>  
  
 <span data-ttu-id="093dd-142">XML 스키마에 대 한 `base64Binary` 및 `hexBinary` 데이터 형식을 사용 하 여 배열을 <xref:System.Byte> 구조를 및 적용을 <xref:System.Xml.Serialization.XmlTextAttribute> 사용 하 여는 <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> "base64Binary" 또는 "hexBinary" 적절 하 게 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-142">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlTextAttribute> with the <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="093dd-143">XML 스키마에 대 한 `time` 및 `date` 데이터 형식을 사용 하 여는 <xref:System.DateTime> 입력 하 고 적용 합니다 <xref:System.Xml.Serialization.XmlTextAttribute> 사용 하 여는 <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> "date" 또는 "시간"으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-143">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlTextAttribute> with the <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="093dd-144">문자열에 매핑되는 모든 XML 스키마 데이터 형식에 적용 합니다 <xref:System.Xml.Serialization.XmlTextAttribute> 사용 하 여 해당 <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> 속성이 XML 스키마 데이터 형식으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-144">For every XML Schema data type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlTextAttribute> with its <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> property set to the XML Schema data type.</span></span> <span data-ttu-id="093dd-145">Serialization 형식으로 멤버에 대 한 스키마만 변경 되지 않습니다는 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-145">Note that this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="093dd-146">XML 스키마 데이터 형식 중 하나를 정확 하 게 설정 해야 하므로 속성이 대/소문자를 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-146">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="093dd-147">요소를 XML 형식으로 이진 데이터를 전달 합니다. XML 특성으로 전달할 때 보다 더 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-147">Passing binary data as an XML element is more efficient than passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="093dd-148">XML 스키마 데이터 형식에 대 한 자세한 내용은 참조는 World Wide Web 컨소시엄 (www.w3.org) 문서 "XML Schema Part 2: Datatypes "로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-148">For more information about XML Schema data types, see the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span></span>  
  
|<span data-ttu-id="093dd-149">XSD 데이터 형식</span><span class="sxs-lookup"><span data-stu-id="093dd-149">XSD data type</span></span>|<span data-ttu-id="093dd-150">.NET 데이터 형식</span><span class="sxs-lookup"><span data-stu-id="093dd-150">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="093dd-151">anyURI</span><span class="sxs-lookup"><span data-stu-id="093dd-151">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-152">base64Binary</span><span class="sxs-lookup"><span data-stu-id="093dd-152">base64Binary</span></span>|<span data-ttu-id="093dd-153">배열을 <xref:System.Byte> 개체</span><span class="sxs-lookup"><span data-stu-id="093dd-153">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="093dd-154">boolean</span><span class="sxs-lookup"><span data-stu-id="093dd-154">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="093dd-155">byte</span><span class="sxs-lookup"><span data-stu-id="093dd-155">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="093dd-156">date</span><span class="sxs-lookup"><span data-stu-id="093dd-156">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="093dd-157">dateTime</span><span class="sxs-lookup"><span data-stu-id="093dd-157">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="093dd-158">decimal</span><span class="sxs-lookup"><span data-stu-id="093dd-158">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="093dd-159">double</span><span class="sxs-lookup"><span data-stu-id="093dd-159">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="093dd-160">ENTITY</span><span class="sxs-lookup"><span data-stu-id="093dd-160">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-161">엔터티</span><span class="sxs-lookup"><span data-stu-id="093dd-161">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-162">float</span><span class="sxs-lookup"><span data-stu-id="093dd-162">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="093dd-163">gDay</span><span class="sxs-lookup"><span data-stu-id="093dd-163">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-164">gMonth</span><span class="sxs-lookup"><span data-stu-id="093dd-164">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-165">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="093dd-165">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-166">gYear</span><span class="sxs-lookup"><span data-stu-id="093dd-166">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-167">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="093dd-167">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-168">hexBinary</span><span class="sxs-lookup"><span data-stu-id="093dd-168">hexBinary</span></span>|<span data-ttu-id="093dd-169">배열을 <xref:System.Byte> 개체</span><span class="sxs-lookup"><span data-stu-id="093dd-169">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="093dd-170">ID</span><span class="sxs-lookup"><span data-stu-id="093dd-170">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-171">IDREF</span><span class="sxs-lookup"><span data-stu-id="093dd-171">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-172">IDREFS</span><span class="sxs-lookup"><span data-stu-id="093dd-172">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-173">int</span><span class="sxs-lookup"><span data-stu-id="093dd-173">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="093dd-174">정수</span><span class="sxs-lookup"><span data-stu-id="093dd-174">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-175">language</span><span class="sxs-lookup"><span data-stu-id="093dd-175">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-176">long</span><span class="sxs-lookup"><span data-stu-id="093dd-176">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="093dd-177">name</span><span class="sxs-lookup"><span data-stu-id="093dd-177">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-178">NCName</span><span class="sxs-lookup"><span data-stu-id="093dd-178">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-179">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="093dd-179">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-180">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="093dd-180">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-181">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="093dd-181">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-182">normalizedString</span><span class="sxs-lookup"><span data-stu-id="093dd-182">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-183">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="093dd-183">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-184">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="093dd-184">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-185">NOTATION</span><span class="sxs-lookup"><span data-stu-id="093dd-185">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-186">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="093dd-186">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-187">QName</span><span class="sxs-lookup"><span data-stu-id="093dd-187">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="093dd-188">duration</span><span class="sxs-lookup"><span data-stu-id="093dd-188">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-189">string</span><span class="sxs-lookup"><span data-stu-id="093dd-189">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-190">short</span><span class="sxs-lookup"><span data-stu-id="093dd-190">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="093dd-191">시간</span><span class="sxs-lookup"><span data-stu-id="093dd-191">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="093dd-192">token</span><span class="sxs-lookup"><span data-stu-id="093dd-192">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="093dd-193">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="093dd-193">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="093dd-194">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="093dd-194">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="093dd-195">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="093dd-195">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="093dd-196">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="093dd-196">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="093dd-197">지정한 XML 스키마 데이터 형식을 .NET 데이터 형식에 매핑할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="093dd-197">The XML Schema data type you have specified cannot be mapped to the .NET data type.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="093dd-198">지정한 XML 스키마 데이터 형식은 속성에 맞지 않으므로 멤버 형식으로 변환할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="093dd-198">The XML Schema data type you have specified is invalid for the property and cannot be converted to the member type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="093dd-199">멤버의 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-199">Gets or sets the type of the member.</span></span></summary>
        <value><span data-ttu-id="093dd-200">멤버의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-200">The <see cref="T:System.Type" /> of the member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="093dd-201"><xref:System.Type> 속성 형식 및 열거형을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-201">The <xref:System.Type> property can only be set to primitive types and enumerations.</span></span>  
  
 <span data-ttu-id="093dd-202">합니다 <xref:System.Xml.Serialization.XmlTextAttribute> 반환 하는 필드에도 적용할 수는 <xref:System.Xml.XmlNode> 또는 배열을 <xref:System.Xml.XmlNode> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-202">The <xref:System.Xml.Serialization.XmlTextAttribute> can also be applied to a field that returns an <xref:System.Xml.XmlNode> or an array of <xref:System.Xml.XmlNode> objects.</span></span>  
  
 <span data-ttu-id="093dd-203">적용할 수는 <xref:System.Xml.Serialization.XmlTextAttribute> 필드 또는 문자열의 배열을 반환 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-203">You can apply the <xref:System.Xml.Serialization.XmlTextAttribute> to a field or property that returns an array of strings.</span></span> <span data-ttu-id="093dd-204">형식의 배열에 특성을 적용할 수도 있습니다 <xref:System.Object> 있지만 설정 해야 합니다 <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> 속성 문자열을 합니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-204">You can also apply the attribute to an array of type <xref:System.Object> but you must set the <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> property to string.</span></span> <span data-ttu-id="093dd-205">이 경우 배열에 삽입 하는 모든 문자열을 XML 텍스트로 serialize 됩니다.</span><span class="sxs-lookup"><span data-stu-id="093dd-205">In that case, any strings inserted into the array are serialized as XML text.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>