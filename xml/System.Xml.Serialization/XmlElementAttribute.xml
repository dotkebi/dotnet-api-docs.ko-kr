<Type Name="XmlElementAttribute" FullName="System.Xml.Serialization.XmlElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b81bf4f813926d6fdb7eefff0e1128cc84f0ab82" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56346969" /></Metadata><TypeSignature Language="C#" Value="public class XmlElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ffb03-101">공용 필드 또는 속성을 포함하는 개체를 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize하거나 deserialize할 때 해당 필드나 속성이 XML 요소를 나타냄을 의미합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-101">Indicates that a public field or property represents an XML element when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes or deserializes the object that contains it.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffb03-102"><xref:System.Xml.Serialization.XmlElementAttribute> 제어 하는 특성의 제품군에 속해 방법을 <xref:System.Xml.Serialization.XmlSerializer> serialize 하거나 개체를 deserialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-102">The <xref:System.Xml.Serialization.XmlElementAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="ffb03-103">비슷한 특성의 전체 목록은 참조 하세요 [는 XML Serialization을 제어 특성](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="ffb03-104">XML 문서에는 일반적으로 세 부분으로 구성 하는 각 XML 요소를 포함 합니다: 가능한 특성을 사용 하 여 여는 태그, 닫는 태그 및 태그 간의 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-104">An XML document usually contains XML elements, each of which consists of three parts: an opening tag with possible attributes, a closing tag, and the data between the tags.</span></span> <span data-ttu-id="ffb03-105">XML 태그는 중첩 될 수 있습니다, 그리고 태그 사이 데이터는 XML 요소를 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-105">XML tags can be nested--that is, the data between tags can also be XML elements.</span></span> <span data-ttu-id="ffb03-106">묶을 때 다른 하나의 요소로이 용량 문서를를 데이터의 계층 구조가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-106">This capacity of one element to enclose another allows the document to contain hierarchies of data.</span></span> <span data-ttu-id="ffb03-107">XML 요소 특성을 포함할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-107">An XML element can also include attributes.</span></span>  
  
 <span data-ttu-id="ffb03-108">적용 된 <xref:System.Xml.Serialization.XmlElementAttribute> 공용 필드 또는 특성의 요소 이름과 네임 스페이스와 같은 XML 요소를 제어 하는 공용 읽기/쓰기 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-108">Apply the <xref:System.Xml.Serialization.XmlElementAttribute> to public fields or public read/write properties to control characteristics of the XML elements such as the element name and namespace.</span></span>  
  
 <span data-ttu-id="ffb03-109"><xref:System.Xml.Serialization.XmlElementAttribute> 개체의 배열을 반환 하는 필드에 여러 번 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-109">The <xref:System.Xml.Serialization.XmlElementAttribute> can be applied multiple times to a field that returns an array of objects.</span></span> <span data-ttu-id="ffb03-110">지정 하는 것이 목적 (통해를 <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> 속성) 배열에 삽입할 수 있는 다른 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-110">The purpose of this is to specify (through the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property) different types that can be inserted into the array.</span></span> <span data-ttu-id="ffb03-111">예를 들어 다음 C# 코드의 배열에 문자열 및 정수를 둘 다 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-111">For example, the array in the following C# code accepts both strings and integers.</span></span>  
  
```  
public class Things{  
   [XmlElement(Type = typeof(string)),  
   XmlElement(Type = typeof(int))]  
   public object[] StringsAndInts;  
}  
```  
  
 <span data-ttu-id="ffb03-112">이 인해 XML은 다음과 유사 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-112">This results in XML that might resemble the following.</span></span>  
  
```  
<Things>  
   <string>Hello</string>  
   <int>999</int>  
   <string>World</string>  
</Things>  
```  
  
 <span data-ttu-id="ffb03-113">적용할 때 유의 합니다 <xref:System.Xml.Serialization.XmlElementAttribute> 여러 번 지정 하지 않고는 <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> 속성 값 요소는 허용 된 개체의 형식 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-113">Note that when you apply the <xref:System.Xml.Serialization.XmlElementAttribute> multiple times without specifying an <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property value, the elements are named after the type of the acceptable objects.</span></span>  
  
 <span data-ttu-id="ffb03-114">적용 하는 경우는 <xref:System.Xml.Serialization.XmlElementAttribute> 필드 또는 속성이 배열을 반환 하는 배열에 있는 항목 XML 요소의 시퀀스로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-114">If you apply the <xref:System.Xml.Serialization.XmlElementAttribute> to a field or property that returns an array, the items in the array are encoded as a sequence of XML elements.</span></span>  
  
 <span data-ttu-id="ffb03-115">반면 경우는 <xref:System.Xml.Serialization.XmlElementAttribute> 적용 되지 않고 이러한 필드나 속성, 필드 또는 속성의 이름을 딴 요소 아래에 중첩 된 요소의 시퀀스로 배열의 항목 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-115">In contrast if an <xref:System.Xml.Serialization.XmlElementAttribute> is not applied to such a field or property, the items in the array are encoded as a sequence of elements, nested under an element named after the field or property.</span></span> <span data-ttu-id="ffb03-116">(사용 된 <xref:System.Xml.Serialization.XmlArrayAttribute> 및 <xref:System.Xml.Serialization.XmlArrayItemAttribute> 배열을 serialize 되는 방식을 제어 하는 특성입니다.)</span><span class="sxs-lookup"><span data-stu-id="ffb03-116">(Use the <xref:System.Xml.Serialization.XmlArrayAttribute> and <xref:System.Xml.Serialization.XmlArrayItemAttribute> attributes to control how an array is serialized.)</span></span>  
  
 <span data-ttu-id="ffb03-117">설정할 수 있습니다 합니다 <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> 는 원래 필드 또는 속성-의 형식에서 파생 된 형식을 지정 하는 속성, 필드 또는 속성을 적용 합니다 <xref:System.Xml.Serialization.XmlElementAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-117">You can set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a type that is derived from the type of the original field or property--that is, the field or property to which you have applied the <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span>  
  
 <span data-ttu-id="ffb03-118">필드 또는 속성을 반환 하는 경우는 <xref:System.Collections.ArrayList>의 여러 인스턴스를 적용할 수 있습니다는 <xref:System.Xml.Serialization.XmlElementAttribute> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-118">If a field or property returns an <xref:System.Collections.ArrayList>, you can apply multiple instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the member.</span></span> <span data-ttu-id="ffb03-119">각 인스턴스에 대해 설정 된 <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> 속성을 배열에 삽입할 수 있는 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-119">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
 <span data-ttu-id="ffb03-120">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [특성](~/docs/standard/attributes/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-120">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ffb03-121">단어를 사용할 수 있습니다 `XmlElement` 대신 코드에서 <xref:System.Xml.Serialization.XmlElementAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-121">You can use the word `XmlElement` in your code instead of the longer <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ffb03-122">다음 예제에서는 라는 클래스를 직렬화 `Group` 적용을 <xref:System.Xml.Serialization.XmlElementAttribute> 해당 멤버의 여러.</span><span class="sxs-lookup"><span data-stu-id="ffb03-122">The following example serializes a class named `Group` and applies the <xref:System.Xml.Serialization.XmlElementAttribute> to several of its members.</span></span> <span data-ttu-id="ffb03-123">라는 필드 `Employees` 배열을 반환 `Employee` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-123">The field named `Employees` returns an array of `Employee` objects.</span></span> <span data-ttu-id="ffb03-124">이 경우에 <xref:System.Xml.Serialization.XmlElementAttribute> 는 결과 XML은 중첩 될 수 없습니다 (즉, 배열에 있는 항목의 기본 동작)을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-124">In this case, the <xref:System.Xml.Serialization.XmlElementAttribute> specifies that the resulting XML will not be nested (which is the default behavior of items in an array).</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlElementAttributes" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
    <altmember cref="T:System.Xml.Serialization.XmlRootAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="ffb03-125">XML Serialization 소개</span><span class="sxs-lookup"><span data-stu-id="ffb03-125">Introducing XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="ffb03-126">방법: XML 스트림의 대체 요소 이름 지정</span><span class="sxs-lookup"><span data-stu-id="ffb03-126">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="ffb03-127">특성을 사용하여 XML Serialization 제어</span><span class="sxs-lookup"><span data-stu-id="ffb03-127">Controlling XML Serialization Using Attributes</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="ffb03-128">XML Serialization 예제</span><span class="sxs-lookup"><span data-stu-id="ffb03-128">Examples of XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="ffb03-129">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="ffb03-129">XML Schema Definition Tool (Xsd.exe)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ffb03-130"><see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-130">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffb03-131"><see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-131">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ffb03-132">다음 예제에서는 적용 된 <xref:System.Xml.Serialization.XmlElementAttribute> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-132">The following example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to a class.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : string -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="ffb03-133">serialize된 멤버의 XML 요소 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-133">The XML element name of the serialized member.</span></span></param>
        <summary><span data-ttu-id="ffb03-134"><see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 클래스의 새 인스턴스를 초기화하고 XML 요소의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-134">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies the name of the XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffb03-135">기본적으로 <xref:System.Xml.Serialization.XmlSerializer> 클래스 인스턴스를 직렬화 할 때 XML 요소 이름으로 멤버 이름을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-135">By default, the <xref:System.Xml.Serialization.XmlSerializer> uses the member name as the XML element name when serializing a class instance.</span></span> <span data-ttu-id="ffb03-136">예를 들어 라는 필드가 `Vehicle` 이라는 XML 요소를 생성 `Vehicle`합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-136">For example, a field named `Vehicle` generates an XML element named `Vehicle`.</span></span> <span data-ttu-id="ffb03-137">그러나와 같은 다른 요소를 사용 해야 하는 경우 `Cars`를 전달 합니다 `elementName` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-137">However if you need a different element, such as `Cars`, pass it in the `elementName` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ffb03-138">다음 예제에서는 라는 단일 필드를 포함 하는 간단한 클래스를 보여 줍니다. `Vehicles`합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-138">The following example shows a simple class that contains a single field named `Vehicles`.</span></span> <span data-ttu-id="ffb03-139">예제에 적용 됩니다는 <xref:System.Xml.Serialization.XmlElementAttribute> 필드에 포함 합니다 `elementName` 매개 변수를 통해는 <xref:System.Xml.Serialization.XmlSerializer> "차량" 대신 "자동차" 이라는 XML 요소를 생성 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-139">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the field and includes the `elementName` parameter, thereby instructing the <xref:System.Xml.Serialization.XmlSerializer> to generate XML elements named "Cars" rather than "Vehicles".</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : Type -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ffb03-140">멤버의 형식에서 파생된 개체의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-140">The <see cref="T:System.Type" /> of an object derived from the member's type.</span></span></param>
        <summary><span data-ttu-id="ffb03-141"><see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 클래스의 새 인스턴스를 초기화하고 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />가 적용되는 멤버에 대한 형식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-141">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies a type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.</span></span> <span data-ttu-id="ffb03-142">이 형식은 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 이를 포함하는 개체를 serialize하거나 deserialize할 때 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-142">This type is used by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> when serializing or deserializing object that contains it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffb03-143">사용 된 `type` 기본 클래스에서 파생 된 형식을 지정 하려면 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-143">Use the `type` parameter to specify a type that is derived from a base class.</span></span> <span data-ttu-id="ffb03-144">예를 들어 명명 된 속성 `MyAnimal` 반환을 `Animal` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-144">For example, suppose a property named `MyAnimal` returns an `Animal` object.</span></span> <span data-ttu-id="ffb03-145">라는 새 클래스를 만들 개체를 향상 시키려는 `Mammal` 에서 상속 되는 `Animal` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-145">You want to enhance the object, so you create a new class named `Mammal` that inherits from the `Animal` class.</span></span> <span data-ttu-id="ffb03-146">지시 하는 <xref:System.Xml.Serialization.XmlSerializer> 적용할를 `Mammal` serialize 할 때 클래스를 `MyAnimal` 속성을 전달 합니다 <xref:System.Type> 의 `Mammal` 클래스 생성자에.</span><span class="sxs-lookup"><span data-stu-id="ffb03-146">To instruct the <xref:System.Xml.Serialization.XmlSerializer> to accept the `Mammal` class when it serializes the `MyAnimal` property, pass the <xref:System.Type> of the `Mammal` class to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ffb03-147">다음 예제에서는 라는 클래스를 직렬화 `Orchestra` 라는 단일 필드를 포함 하는 `Instruments`의 배열을 반환 하는 `Instrument` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-147">The following example serializes a class named `Orchestra` that contains a single field named `Instruments`, which returns an array of `Instrument` objects.</span></span> <span data-ttu-id="ffb03-148">두 번째 클래스가 `Brass` 에서 상속 되는 `Instrument` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-148">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="ffb03-149">예제에 적용 됩니다는 <xref:System.Xml.Serialization.XmlElementAttribute> 에 `Instruments` 필드 및 지정를 `Brass` 입력을 허용 합니다 `Instruments` 적용할 필드 `Brass` 개체.</span><span class="sxs-lookup"><span data-stu-id="ffb03-149">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the `Instruments` field, and specifies the `Brass` type, allowing the `Instruments` field to accept `Brass` objects.</span></span> <span data-ttu-id="ffb03-150">예제는 또한 XML 요소 이름을 설정 하 여 지정 된 <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-150">The example also specifies the name of the XML element by setting the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : string * Type -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute (elementName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="ffb03-151">serialize된 멤버의 XML 요소 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-151">The XML element name of the serialized member.</span></span></param>
        <param name="type"><span data-ttu-id="ffb03-152">멤버의 형식에서 파생된 개체의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-152">The <see cref="T:System.Type" /> of an object derived from the member's type.</span></span></param>
        <summary><span data-ttu-id="ffb03-153"><see cref="T:System.Xml.Serialization.XmlElementAttribute" />의 새 인스턴스를 초기화하고 XML 요소의 이름을 지정하며 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />가 적용되는 멤버의 파생 형식도 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-153">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> and specifies the name of the XML element and a derived type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.</span></span> <span data-ttu-id="ffb03-154">이 멤버 형식은 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 이를 포함하는 개체를 serialize할 때 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-154">This member type is used when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes the object that contains it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffb03-155">기본적으로 <xref:System.Xml.Serialization.XmlSerializer> 클래스 인스턴스를 직렬화 할 때 XML 요소 이름으로 멤버 이름을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-155">By default, the <xref:System.Xml.Serialization.XmlSerializer> uses the member name as the XML element name when serializing a class instance.</span></span> <span data-ttu-id="ffb03-156">예를 들어 라는 필드가 `Vehicle` 이라는 XML 요소를 생성 `Vehicle`합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-156">For example, a field named `Vehicle` generates an XML element named `Vehicle`.</span></span> <span data-ttu-id="ffb03-157">그러나 같은 다른 요소를 사용 해야 하는 경우 `Cars`를 전달 합니다 `elementName` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-157">However, if you need a different element, such as `Cars`, pass it in the `elementName` parameter.</span></span>  
  
 <span data-ttu-id="ffb03-158">사용 된 `type` 기본 클래스에서 파생 된 형식을 지정 하려면 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-158">Use the `type` parameter to specify a type that is derived from a base class.</span></span> <span data-ttu-id="ffb03-159">예를 들어 명명 된 속성 `MyAnimal` 반환을 `Animal` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-159">For example, suppose a property named `MyAnimal` returns an `Animal` object.</span></span> <span data-ttu-id="ffb03-160">라는 새 클래스를 만들 개체를 향상 시키려는 `Mammal` 에서 상속 되는 `Animal` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-160">You want to enhance the object, so you create a new class named `Mammal` that inherits from the `Animal` class.</span></span> <span data-ttu-id="ffb03-161">지시 하는 <xref:System.Xml.Serialization.XmlSerializer> 적용할를 `Mammal` serialize 할 때 클래스를 `MyAnimal` 속성을 전달 합니다 <xref:System.Type> 의 `Mammal` 클래스 생성자에.</span><span class="sxs-lookup"><span data-stu-id="ffb03-161">To instruct the <xref:System.Xml.Serialization.XmlSerializer> to accept the `Mammal` class when it serializes the `MyAnimal` property, pass the <xref:System.Type> of the `Mammal` class to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ffb03-162">다음 예제에서는 라는 클래스를 직렬화 `Orchestra` 라는 단일 필드를 포함 하는 `Instruments`의 배열을 반환 하는 `Instrument` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-162">The following example serializes a class named `Orchestra` that contains a single field named `Instruments`, which returns an array of `Instrument` objects.</span></span> <span data-ttu-id="ffb03-163">두 번째 클래스가 `Brass` 에서 상속 되는 `Instrument` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-163">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="ffb03-164">예제에 적용 됩니다는 <xref:System.Xml.Serialization.XmlElementAttribute> 에 `Instruments` 필드 및 지정를 `Brass` 입력을 허용 합니다 `Instruments` 적용할 필드 `Brass` 개체.</span><span class="sxs-lookup"><span data-stu-id="ffb03-164">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the `Instruments` field, and specifies the `Brass` type, allowing the `Instruments` field to accept `Brass` objects.</span></span> <span data-ttu-id="ffb03-165">예제는 또한 XML 요소 이름을 설정 하 여 지정 된 <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-165">The example also specifies the name of the XML element by setting the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffb03-166"><see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성된 XML 요소의 XSD(XML 스키마 정의) 데이터 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-166">Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></summary>
        <value><span data-ttu-id="ffb03-167">XML 스키마 데이터 형식에 대한 자세한 내용은 World Wide Web 컨소시엄(www.w3.org) 문서 "XML Schema Part 2: Datatypes"를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="ffb03-167">An XML Schema data type, as defined by the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffb03-168">다음 테이블 및 해당 하는 XML 스키마 단순 데이터 형식을 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-168">The following table lists the XML Schema simple data types with their.NET equivalents.</span></span>  
  
 <span data-ttu-id="ffb03-169">XML 스키마에 대 한 `base64Binary` 및 `hexBinary` 데이터 형식을 사용 하 여 배열을 <xref:System.Byte> 구조를 및 적용을 <xref:System.Xml.Serialization.XmlElementAttribute> 사용 하 여는 <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> "base64Binary" 또는 "hexBinary" 적절 하 게 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-169">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlElementAttribute> with the <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="ffb03-170">XML 스키마에 대 한 `time` 및 `date` 데이터 형식을 사용 하 여는 <xref:System.DateTime> 입력 하 고 적용 합니다 <xref:System.Xml.Serialization.XmlElementAttribute> 사용 하 여는 <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> "date" 또는 "시간"으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-170">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlElementAttribute> with the <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="ffb03-171">문자열에 매핑되는 모든 XML 스키마 형식에 적용 합니다 <xref:System.Xml.Serialization.XmlElementAttribute> 사용 하 여 해당 <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> 속성이 XML 스키마 형식으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-171">For every XML Schema type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlElementAttribute> with its <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> property set to the XML Schema type.</span></span> <span data-ttu-id="ffb03-172">Serialization 형식으로 뿐 아니라 멤버에 대 한 스키마를 변경할 수 있습니다이 가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-172">It is possible that this can change the serialization format, not only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ffb03-173">XML 스키마 데이터 형식 중 하나를 정확 하 게 설정 해야 하므로 속성이 대/소문자를 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-173">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ffb03-174">이진 데이터를 XML 형식으로 전달 요소는 XML 특성으로 전달 보다 더 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-174">Passing binary data as an XML element is more efficient than passing it as an XML Schema attribute.</span></span>  
  
 <span data-ttu-id="ffb03-175">XML 데이터 형식에 대 한 자세한 내용은 참조는 World Wide Web 컨소시엄 (www.w3.org) 문서 "XML Schema Part 2: Datatypes "로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-175">For more information about XML data types, see the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span></span>  
  
|<span data-ttu-id="ffb03-176">XSD 데이터 형식</span><span class="sxs-lookup"><span data-stu-id="ffb03-176">XSD data type</span></span>|<span data-ttu-id="ffb03-177">.NET 데이터 형식</span><span class="sxs-lookup"><span data-stu-id="ffb03-177">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="ffb03-178">anyURI</span><span class="sxs-lookup"><span data-stu-id="ffb03-178">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-179">base64Binary</span><span class="sxs-lookup"><span data-stu-id="ffb03-179">base64Binary</span></span>|<span data-ttu-id="ffb03-180">배열을 <xref:System.Byte> 개체</span><span class="sxs-lookup"><span data-stu-id="ffb03-180">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="ffb03-181">boolean</span><span class="sxs-lookup"><span data-stu-id="ffb03-181">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="ffb03-182">byte</span><span class="sxs-lookup"><span data-stu-id="ffb03-182">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="ffb03-183">date</span><span class="sxs-lookup"><span data-stu-id="ffb03-183">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="ffb03-184">dateTime</span><span class="sxs-lookup"><span data-stu-id="ffb03-184">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="ffb03-185">decimal</span><span class="sxs-lookup"><span data-stu-id="ffb03-185">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="ffb03-186">double</span><span class="sxs-lookup"><span data-stu-id="ffb03-186">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="ffb03-187">ENTITY</span><span class="sxs-lookup"><span data-stu-id="ffb03-187">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-188">엔터티</span><span class="sxs-lookup"><span data-stu-id="ffb03-188">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-189">float</span><span class="sxs-lookup"><span data-stu-id="ffb03-189">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="ffb03-190">gDay</span><span class="sxs-lookup"><span data-stu-id="ffb03-190">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-191">gMonth</span><span class="sxs-lookup"><span data-stu-id="ffb03-191">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-192">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="ffb03-192">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-193">gYear</span><span class="sxs-lookup"><span data-stu-id="ffb03-193">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-194">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="ffb03-194">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-195">hexBinary</span><span class="sxs-lookup"><span data-stu-id="ffb03-195">hexBinary</span></span>|<span data-ttu-id="ffb03-196">배열을 <xref:System.Byte> 개체</span><span class="sxs-lookup"><span data-stu-id="ffb03-196">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="ffb03-197">ID</span><span class="sxs-lookup"><span data-stu-id="ffb03-197">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-198">IDREF</span><span class="sxs-lookup"><span data-stu-id="ffb03-198">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-199">IDREFS</span><span class="sxs-lookup"><span data-stu-id="ffb03-199">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-200">int</span><span class="sxs-lookup"><span data-stu-id="ffb03-200">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="ffb03-201">정수</span><span class="sxs-lookup"><span data-stu-id="ffb03-201">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-202">language</span><span class="sxs-lookup"><span data-stu-id="ffb03-202">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-203">long</span><span class="sxs-lookup"><span data-stu-id="ffb03-203">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="ffb03-204">name</span><span class="sxs-lookup"><span data-stu-id="ffb03-204">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-205">NCName</span><span class="sxs-lookup"><span data-stu-id="ffb03-205">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-206">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="ffb03-206">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-207">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="ffb03-207">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-208">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="ffb03-208">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-209">normalizedString</span><span class="sxs-lookup"><span data-stu-id="ffb03-209">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-210">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="ffb03-210">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-211">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="ffb03-211">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-212">NOTATION</span><span class="sxs-lookup"><span data-stu-id="ffb03-212">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-213">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="ffb03-213">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-214">QName</span><span class="sxs-lookup"><span data-stu-id="ffb03-214">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="ffb03-215">duration</span><span class="sxs-lookup"><span data-stu-id="ffb03-215">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-216">string</span><span class="sxs-lookup"><span data-stu-id="ffb03-216">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-217">short</span><span class="sxs-lookup"><span data-stu-id="ffb03-217">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="ffb03-218">시간</span><span class="sxs-lookup"><span data-stu-id="ffb03-218">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="ffb03-219">token</span><span class="sxs-lookup"><span data-stu-id="ffb03-219">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="ffb03-220">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="ffb03-220">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="ffb03-221">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="ffb03-221">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="ffb03-222">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="ffb03-222">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="ffb03-223">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="ffb03-223">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="ffb03-224">다음 예제에서는 라는 클래스를 직렬화 `Group` 라는 필드를 포함 하는 `ExtraInfo`를 반환 하는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-224">The following example serializes a class named `Group` that contains a field named `ExtraInfo`, which returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="ffb03-225">두 인스턴스를 적용 하는 예제는 <xref:System.Xml.Serialization.XmlElementAttribute> 필드에 다른 지정 <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> 각 인스턴스에 대 한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-225">The example applies two instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the field and specifies different <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> values for each instance.</span></span> <span data-ttu-id="ffb03-226">각 인스턴스를 사용 하도록 설정 된 <xref:System.Xml.Serialization.XmlSerializer> 배열에 삽입 하는 지정된 된 형식을 serialize 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-226">Each instance enables the <xref:System.Xml.Serialization.XmlSerializer> to serialize the specified types inserted into the array.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="ffb03-227">지정한 XML 스키마 데이터 형식을 .NET 데이터 형식에 매핑할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="ffb03-227">The XML Schema data type you have specified cannot be mapped to the.NET data type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffb03-228">생성된 XML 요소의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-228">Gets or sets the name of the generated XML element.</span></span></summary>
        <value><span data-ttu-id="ffb03-229">생성된 XML 요소의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-229">The name of the generated XML element.</span></span> <span data-ttu-id="ffb03-230">기본값은 멤버 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-230">The default is the member identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffb03-231">지정 된 <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> 멤버 식별자는 다르게 생성 된 XML 요소의 이름을 지정 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="ffb03-231">Specify an <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="ffb03-232">동일한를 설정할 수 있습니다 <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> 생성된 된 XML 문서의 XML 네임 스페이스를 사용 하 여 이름이 같은 멤버를 구분 하려면 클래스 멤버에 둘 이상의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-232">You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one class member if the generated XML document uses XML namespaces to distinguish between the identically named members.</span></span> <span data-ttu-id="ffb03-233">XML 문서의 네임 스페이스 및 접두사가 붙은 이름을 사용 하는 방법에 대 한 내용은 참조는 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-233">For details on how to use namespaces and prefixed names in the XML document, see the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ffb03-234">다음 예제에서는 합니다 <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> 의 속성을 <xref:System.Xml.Serialization.XmlElementAttribute> 새 값으로.</span><span class="sxs-lookup"><span data-stu-id="ffb03-234">The following example sets the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property of an <xref:System.Xml.Serialization.XmlElementAttribute> to a new value.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffb03-235">요소가 한정되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-235">Gets or sets a value that indicates whether the element is qualified.</span></span></summary>
        <value><span data-ttu-id="ffb03-236"><see cref="T:System.Xml.Schema.XmlSchemaForm" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-236">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span></span> <span data-ttu-id="ffb03-237">기본값은 <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-237">The default is <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffb03-238"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> 속성 정규화 되거나 정규화 되지 않은 XML 요소 인지를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-238">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element is qualified or unqualified.</span></span> <span data-ttu-id="ffb03-239"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> 속성 "네임 스페이스에서 XML" World Wide Web 컨소시엄 (www.w3.org) 1999 사양을 준수 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-239">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property conforms to the World Wide Web Consortium (www.w3.org) 1999 specification, "Namespaces in XML".</span></span>  
  
 <span data-ttu-id="ffb03-240">경우는 <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> 모든 값을 설정 하는 속성을 <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> 속성을 `XmlSchemaForm.Unqualified` 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-240">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span> <span data-ttu-id="ffb03-241">기본 설정 `XmlSchemaForm.None`, 지시를 <xref:System.Xml.Serialization.XmlSerializer> 네임 스페이스 정규화 있는지 여부를 결정 하는 XML 문서에 대 한 스키마를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-241">The default setting, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="ffb03-242">스키마는 개별 요소 또는 특성에 대 한 값을 지정 하지 않는 경우는 <xref:System.Xml.Serialization.XmlSerializer> 사용 합니다 `elementFormDefault` 및 `attributeFormDefault` 요소 또는 특성을 정규화 되었는지 여부를 결정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-242">If the schema does not specify a value for an individual element or attribute, the <xref:System.Xml.Serialization.XmlSerializer> uses the `elementFormDefault` and `attributeFormDefault` values to determine whether an element or attribute is qualified.</span></span> <span data-ttu-id="ffb03-243">다음 XML 코드에는 스키마를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-243">The following XML code shows a schema:</span></span>  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
 <element name="Name"/>  
 <attribute name="Number"/>  
</schema>  
```  
  
 <span data-ttu-id="ffb03-244">경우는 <xref:System.Xml.Serialization.XmlSerializer> 에서 스키마를 읽으면를 <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> 둘 다에 대 한 값을 `Name` 및 `Number` 는 `XmlSchemaForm.None`, 하지만 `Name` 요소가 한정 되었는지 하는 동안를 `Number` 요소 정규화 되지 않은.</span><span class="sxs-lookup"><span data-stu-id="ffb03-244">When the <xref:System.Xml.Serialization.XmlSerializer> reads the schema, the <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> value for both the `Name` and `Number` is `XmlSchemaForm.None`, but the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ffb03-245">다음 예제에서는 합니다 <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> 속성을 `XmlSchemaForm.Unqualified`입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-245">The following example sets the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified`.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffb03-246"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="null" />로 설정된 멤버를 <see langword="xsi:nil" /> 특성이 <see langword="true" />로 설정된 빈 태그로 serialize해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-246">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member that is set to <see langword="null" /> as an empty tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="ffb03-247"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="true" /> 특성을 생성하면 <see langword="xsi:nil" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-247"><see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffb03-248">구조에 대 한 XML 스키마 사양에는 XML 문서를 요소 콘텐츠 누락 된 명시적으로 신호를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-248">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="ffb03-249">이러한 요소에 특성이 포함 `xsi:nil` 로 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-249">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="ffb03-250">자세한 내용은 World Wide Web 컨소시엄 (www.w3.org) 사양의 참조 하세요. "XML Schema Part 1: 구조 "로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-250">For more information, see the World Wide Web Consortium (www.w3.org) specification, "XML Schema Part 1: Structures".</span></span>  
  
 <span data-ttu-id="ffb03-251">경우는 <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> 속성이 `true`의 `xsi:nil` 특성에 설정 된 클래스 멤버에 대해 생성 됩니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-251">If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is set to `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`.</span></span> <span data-ttu-id="ffb03-252">예를 들어 명명 된 필드를 설정 하는 경우 `MyStringArray` 하 `null`는 <xref:System.Xml.Serialization.XmlSerializer> 다음 XML 코드를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-252">For example if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.</span></span>  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <span data-ttu-id="ffb03-253">경우는 <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> 속성은 `false`에 설정 된 클래스 멤버에 대 한 XML 요소가 생성 됩니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-253">If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is `false`, no XML element is generated for class members that have been set to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ffb03-254">적용할 수 없습니다는 <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> 멤버에 대 한 속성 값 형식을 포함할 수 없습니다 때문에 값 형식으로 입력 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-254">You cannot apply the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`.</span></span> <span data-ttu-id="ffb03-255">이 속성 설정할 수 없습니다 또한 `false` nullable 값 형식에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-255">Additionally, you cannot set this property to `false` for nullable value types.</span></span> <span data-ttu-id="ffb03-256">이러한 형식은 때 `null`를 설정 하 여 직렬화 됩니다 `xsi:nil` 에 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-256">When such types are `null`, they will be serialized by setting `xsi:nil` to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ffb03-257">다음 예제에서는 사용 하 여 필드를 표시 합니다 <xref:System.Xml.Serialization.XmlElementAttribute> 적용 및 <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> 속성이로 설정 `false`.</span><span class="sxs-lookup"><span data-stu-id="ffb03-257">The following example shows a field with the <xref:System.Xml.Serialization.XmlElementAttribute> applied to it, and the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property set to `false`.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffb03-258">클래스가 serialize될 때 결과로 만들어지는 XML 요소에 할당된 네임스페이스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-258">Gets or sets the namespace assigned to the XML element that results when the class is serialized.</span></span></summary>
        <value><span data-ttu-id="ffb03-259">XML 요소의 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-259">The namespace of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffb03-260"><xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> 속성 "네임 스페이스에서 XML" World Wide Web 컨소시엄 (www.w3.org) 사양을 준수 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-260">The <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property conforms to the World Wide Web Consortium (www.w3.org) specification, "Namespaces in XML".</span></span>  
  
 <span data-ttu-id="ffb03-261">접두사와 연결 된 네임 스페이스를 만들려면 만들어야는 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 네임 스페이스 및 XML 문서에 사용 되는 접두사를 포함 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-261">To create namespaces that are associated with a prefix, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="ffb03-262">각 네임 스페이스를 설정 하면 <xref:System.Xml.Serialization.XmlArrayAttribute>에서 네임 스페이스 중 하 나와 일치 해야 합니다 <xref:System.Xml.Serialization.XmlSerializerNamespaces>합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-262">As you set the namespace for each <xref:System.Xml.Serialization.XmlArrayAttribute>, it must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="ffb03-263">XML 생성 되 면 각 배열에 연결 된 지정된 된 네임 스페이스 접두사를 사용 하 여 올바르게 접두사로 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-263">When the XML is generated, each array is correctly prefixed with the prefix associated with the specified namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffb03-264">요소가 serialize 또는 deserialize되는 명시적 순서를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-264">Gets or sets the explicit order in which the elements are serialized or deserialized.</span></span></summary>
        <value><span data-ttu-id="ffb03-265">코드가 생성되는 순서입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-265">The order of the code generation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffb03-266">사용 하 여는 <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> 지시 하는 열거형은 <xref:System.Web.Services.Description.ServiceDescriptionImporter> 설정 하는 코드를 생성 하는 <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="ffb03-266">Use the <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeration to instruct the <xref:System.Web.Services.Description.ServiceDescriptionImporter> to generate code that sets the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ffb03-267">한 번의 <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> 하나의 공용 속성 또는 필드 형식에서 사용 된 속성, 모든 공용 속성 및 해당 형식 및 상속 된 모든 형식에 대 한 필드에 적용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-267">Once the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffb03-268">XML 요소를 나타내는 데 사용되는 개체 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-268">Gets or sets the object type used to represent the XML element.</span></span></summary>
        <value><span data-ttu-id="ffb03-269">멤버의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-269">The <see cref="T:System.Type" /> of the member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffb03-270">사용 된 <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> 필드 또는 속성에 대 한 파생된 형식을 지정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-270">Use the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a derived type for a field or property.</span></span>  
  
 <span data-ttu-id="ffb03-271">필드 또는 속성을 반환 하는 경우는 <xref:System.Collections.ArrayList>의 여러 인스턴스를 적용할 수 있습니다는 <xref:System.Xml.Serialization.XmlElementAttribute> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-271">If a field or property returns an <xref:System.Collections.ArrayList>, you can apply multiple instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the member.</span></span> <span data-ttu-id="ffb03-272">각 인스턴스에 대해 설정 된 <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> 속성을 배열에 삽입할 수 있는 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-272">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ffb03-273">다음 예제에서는 합니다 <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> 파생된 개체를 지정 하는 속성을 <xref:System.Xml.Serialization.XmlElementAttribute>입니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-273">The following example uses the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a derived object for an <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span> <span data-ttu-id="ffb03-274">인스턴스의 수가 세 예제에도 적용 됩니다는 <xref:System.Xml.Serialization.XmlElementAttribute> 를 반환 하는 필드는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-274">The example also applies three instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to a field that returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="ffb03-275">각 인스턴스 필드에 허용 된 형식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ffb03-275">Each instance specifies a type allowed in the field.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>