<Type Name="SoapEnumAttribute" FullName="System.Xml.Serialization.SoapEnumAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b9f568b300f6c2243a8aba7ffe4f3fa6d04d0a77" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58735740" /></Metadata><TypeSignature Language="C#" Value="public class SoapEnumAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapEnumAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapEnumAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapEnumAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapEnumAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapEnumAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8365b-101"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형 멤버를 serialize하는 방식을 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-101">Controls how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration member.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8365b-102"><xref:System.Xml.Serialization.SoapEnumAttribute> 클래스를 제어 하는 특성의 제품군에 속합니다 방법을 <xref:System.Xml.Serialization.XmlSerializer> 직렬화 또는 인코딩된 SOAP XML로 개체를 deserialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-102">The <xref:System.Xml.Serialization.SoapEnumAttribute> class belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object as encoded SOAP XML.</span></span> <span data-ttu-id="8365b-103">결과 XML은 World Wide Web 컨소시엄(www.w3.org) 문서의 5단원 "SOAP(Simple Object Access Protocol) 1.1"을 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-103">The resulting XML conforms to section 5 of the World Wide Web Consortium (www.w3.org) document "Simple Object Access Protocol (SOAP) 1.1".</span></span> <span data-ttu-id="8365b-104">비슷한 특성의 전체 목록은 참조 하세요 [는 인코딩된 SOAP Serialization을 제어 특성](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-104">For a complete list of similar attributes, see [Attributes That Control Encoded SOAP Serialization](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).</span></span>  
  
 <span data-ttu-id="8365b-105">구성 개체를 인코딩된 SOAP 메시지로 serialize 해야 합니다 <xref:System.Xml.Serialization.XmlSerializer> 를 사용 하 여는 <xref:System.Xml.Serialization.XmlTypeMapping> 사용 하 여 만든를 <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> 메서드를 <xref:System.Xml.Serialization.SoapReflectionImporter> 클래스.</span><span class="sxs-lookup"><span data-stu-id="8365b-105">To serialize an object as an encoded SOAP message, you must construct the <xref:System.Xml.Serialization.XmlSerializer> using an <xref:System.Xml.Serialization.XmlTypeMapping> created with the <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> method of the <xref:System.Xml.Serialization.SoapReflectionImporter> class.</span></span>  
  
 <span data-ttu-id="8365b-106">사용 하 여는 <xref:System.Xml.Serialization.SoapEnumAttribute> 열거형을 변경 하는 <xref:System.Xml.Serialization.XmlSerializer> 생성 하거나 (serialize 하거나 각각 클래스 역직렬화) 때 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-106">Use the <xref:System.Xml.Serialization.SoapEnumAttribute> to change the enumeration that the <xref:System.Xml.Serialization.XmlSerializer> generates or recognizes (when it serializes or deserializes a class, respectively).</span></span> <span data-ttu-id="8365b-107">예를 들어 명명 된 멤버를 포함 하는 열거형 `One`, 나오는 XML 출력 이름이 선호 하지만 `Single`를 적용 합니다 <xref:System.Xml.Serialization.SoapEnumAttribute> 열거형 멤버를 집합은 <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> "단일" 속성.</span><span class="sxs-lookup"><span data-stu-id="8365b-107">For example, if an enumeration contains a member named `One`, but you prefer that the XML output be named `Single`, apply the <xref:System.Xml.Serialization.SoapEnumAttribute> to the enumeration member and set the <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> property to "Single".</span></span>  
  
 <span data-ttu-id="8365b-108">재정의할 수 있습니다는 <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> 속성 값을 <xref:System.Xml.Serialization.SoapEnumAttribute> 의 인스턴스를 만들어를 <xref:System.Xml.Serialization.SoapEnumAttribute> 클래스에 할당 하는 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> 속성을 <xref:System.Xml.Serialization.SoapAttributes>.</span><span class="sxs-lookup"><span data-stu-id="8365b-108">You can override the <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> property value of a <xref:System.Xml.Serialization.SoapEnumAttribute> by creating an instance of the <xref:System.Xml.Serialization.SoapEnumAttribute> class and assigning it to the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes>.</span></span> <span data-ttu-id="8365b-109">자세한 내용은 참조는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-109">For details, see the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview.</span></span>  
  
 <span data-ttu-id="8365b-110">구성 개체를 인코딩된 SOAP 메시지로 serialize 해야 합니다 <xref:System.Xml.Serialization.XmlSerializer> 를 사용 하 여는 <xref:System.Xml.Serialization.XmlTypeMapping> 사용 하 여 만든를 <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> 메서드를 <xref:System.Xml.Serialization.SoapReflectionImporter> 클래스.</span><span class="sxs-lookup"><span data-stu-id="8365b-110">To serialize an object as an encoded SOAP message, you must construct the <xref:System.Xml.Serialization.XmlSerializer> using an <xref:System.Xml.Serialization.XmlTypeMapping> created with the <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> method of the <xref:System.Xml.Serialization.SoapReflectionImporter> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8365b-111">단어를 사용할 수 있습니다 `SoapEnum` 대신 코드에서 <xref:System.Xml.Serialization.SoapEnumAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-111">You can use the word `SoapEnum` in your code instead of the longer <xref:System.Xml.Serialization.SoapEnumAttribute>.</span></span>  
  
 <span data-ttu-id="8365b-112">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [특성](~/docs/standard/attributes/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-112">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8365b-113">다음 예제에서는 합니다 <xref:System.Xml.Serialization.XmlSerializer> 라는 클래스를 serialize 할 `Food` 라는 열거형을 포함 하는 `FoodType`합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-113">The following example uses the <xref:System.Xml.Serialization.XmlSerializer> to serialize a class named `Food` that includes an enumeration named `FoodType`.</span></span> <span data-ttu-id="8365b-114">`FoodType` 열거형을 만들어 재정의 <xref:System.Xml.Serialization.SoapEnumAttribute> 설정 및 각 열거형에 대 한는 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> 의 속성을 <xref:System.Xml.Serialization.SoapAttributes> 에 <xref:System.Xml.Serialization.SoapEnumAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8365b-114">The `FoodType` enumeration is overridden by creating a <xref:System.Xml.Serialization.SoapEnumAttribute> for each enumeration and setting the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapEnumAttribute>.</span></span> <span data-ttu-id="8365b-115"><xref:System.Xml.Serialization.SoapAttributes> 에 추가 되는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 만드는 데 사용 되는 <xref:System.Xml.Serialization.XmlSerializer>합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-115">The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8365b-116"><see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapEnumAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapEnumAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8365b-117"><see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-117">Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8365b-118">사용 하 여는 <xref:System.Xml.Serialization.SoapEnumAttribute.%23ctor%2A> 기존 열거형을 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-118">Use the <xref:System.Xml.Serialization.SoapEnumAttribute.%23ctor%2A> to override an existing enumeration.</span></span> <span data-ttu-id="8365b-119">새 <xref:System.Xml.Serialization.SoapEnumAttribute>해당 속성을 설정 하 고 개체를 할당 합니다 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> 의 속성을 <xref:System.Xml.Serialization.SoapAttributes>합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-119">Create a new <xref:System.Xml.Serialization.SoapEnumAttribute>, set its properties and assign the object to the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes>.</span></span> <span data-ttu-id="8365b-120">열거형의 각 멤버에 대 한 새 만들어야 <xref:System.Xml.Serialization.SoapAttributes> 에 추가 된 <xref:System.Xml.Serialization.SoapAttributeOverrides>합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-120">For each member of the enumeration, you must create a new <xref:System.Xml.Serialization.SoapAttributes> and add it to the <xref:System.Xml.Serialization.SoapAttributeOverrides>.</span></span> <span data-ttu-id="8365b-121">자세한 내용은 참조는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-121">For more details, see the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8365b-122">단어를 사용할 수 있습니다 `SoapEnum` 대신 코드에서 <xref:System.Xml.Serialization.SoapEnumAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-122">You can use the word `SoapEnum` in your code instead of the longer <xref:System.Xml.Serialization.SoapEnumAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8365b-123">다음 예제에서는 합니다 <xref:System.Xml.Serialization.XmlSerializer> 라는 클래스를 serialize 할 `Food` 라는 열거형을 포함 하는 `FoodType`합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-123">The following example uses the <xref:System.Xml.Serialization.XmlSerializer> to serialize a class named `Food` that includes an enumeration named `FoodType`.</span></span> <span data-ttu-id="8365b-124">`FoodType` 열거형을 만들어 재정의 <xref:System.Xml.Serialization.SoapEnumAttribute> 설정 및 각 열거형에 대 한는 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> 의 속성을 <xref:System.Xml.Serialization.SoapAttributes> 에 <xref:System.Xml.Serialization.SoapEnumAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8365b-124">The `FoodType` enumeration is overridden by creating a <xref:System.Xml.Serialization.SoapEnumAttribute> for each enumeration and setting the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapEnumAttribute>.</span></span> <span data-ttu-id="8365b-125"><xref:System.Xml.Serialization.SoapAttributes> 에 추가 되는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 만드는 데 사용 되는 <xref:System.Xml.Serialization.XmlSerializer>합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-125">The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapEnumAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapEnumAttribute : string -&gt; System.Xml.Serialization.SoapEnumAttribute" Usage="new System.Xml.Serialization.SoapEnumAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8365b-126"><see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성된 XML 요소 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-126">The XML element name generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></param>
        <summary><span data-ttu-id="8365b-127">지정된 요소 이름을 사용하여 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-127">Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> class using the specified element name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8365b-128">지정 된 <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> 열거형에서 찾은 열거자는 다르게 생성된 된 XML 열거자를 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="8365b-128">Specify the <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> when you want the generated XML enumerator to differ from the enumerator found in the enumeration.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8365b-129">단어를 사용할 수 있습니다 `SoapEnum` 대신 코드에서 <xref:System.Xml.Serialization.SoapEnumAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-129">You can use the word `SoapEnum` in your code instead of the longer <xref:System.Xml.Serialization.SoapEnumAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8365b-130">다음 예제에서는 합니다 <xref:System.Xml.Serialization.XmlSerializer> 라는 클래스를 serialize 할 `Food` 라는 열거형을 포함 하는 `FoodType`합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-130">The following example uses the <xref:System.Xml.Serialization.XmlSerializer> to serialize a class named `Food` that includes an enumeration named `FoodType`.</span></span> <span data-ttu-id="8365b-131">`FoodType` 열거형을 만들어 재정의 <xref:System.Xml.Serialization.SoapEnumAttribute> 설정 및 각 열거형에 대 한는 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> 의 속성을 <xref:System.Xml.Serialization.SoapAttributes> 에 <xref:System.Xml.Serialization.SoapEnumAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8365b-131">The `FoodType` enumeration is overridden by creating a <xref:System.Xml.Serialization.SoapEnumAttribute> for each enumeration and setting the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapEnumAttribute>.</span></span> <span data-ttu-id="8365b-132"><xref:System.Xml.Serialization.SoapAttributes> 에 추가 되는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 만드는 데 사용 되는 <xref:System.Xml.Serialization.XmlSerializer>합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-132">The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapEnumAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Serialization.SoapEnumAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8365b-133"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형을 serialize할 때 XML 문서에서 생성된 값 또는 열거형 멤버를 deserialize할 때 인식된 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-133">Gets or sets the value generated in an XML document when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration, or the value recognized when it deserializes the enumeration member.</span></span></summary>
        <value><span data-ttu-id="8365b-134"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형을 serialize할 때 XML 문서에서 생성된 값 또는 열거형 멤버를 deserialize할 때 인식된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-134">The value generated in an XML document when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes the enumeration, or the value recognized when it deserializes the enumeration member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8365b-135">지정 된 <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> 열거형에서 찾은 열거자는 다르게 생성된 된 XML 열거자를 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="8365b-135">Specify the <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> when you want the generated XML enumerator to differ from the enumerator found in the enumeration.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8365b-136">단어를 사용할 수 있습니다 `SoapEnum` 대신 <xref:System.Xml.Serialization.SoapEnumAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-136">You can use the word `SoapEnum` instead of the longer <xref:System.Xml.Serialization.SoapEnumAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8365b-137">다음 예제에서는 합니다 <xref:System.Xml.Serialization.XmlSerializer> 라는 클래스를 serialize 할 `Food` 라는 열거형을 포함 하는 `FoodType`합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-137">The following example uses the <xref:System.Xml.Serialization.XmlSerializer> to serialize a class named `Food` that includes an enumeration named `FoodType`.</span></span> <span data-ttu-id="8365b-138">`FoodType` 열거형을 만들어 재정의 <xref:System.Xml.Serialization.SoapEnumAttribute> 설정 및 각 열거형에 대 한는 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> 의 속성을 <xref:System.Xml.Serialization.SoapAttributes> 에 <xref:System.Xml.Serialization.SoapEnumAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8365b-138">The `FoodType` enumeration is overridden by creating a <xref:System.Xml.Serialization.SoapEnumAttribute> for each enumeration and setting the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapEnumAttribute>.</span></span> <span data-ttu-id="8365b-139"><xref:System.Xml.Serialization.SoapAttributes> 에 추가 되는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 만드는 데 사용 되는 <xref:System.Xml.Serialization.XmlSerializer>합니다.</span><span class="sxs-lookup"><span data-stu-id="8365b-139">The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>