<Type Name="UriParser" FullName="System.UriParser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b3b0624a7478758b82017dd2e13b3e8b475d3468" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58683604" /></Metadata><TypeSignature Language="C#" Value="public abstract class UriParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract UriParser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.UriParser" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UriParser" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriParser abstract" />
  <TypeSignature Language="F#" Value="type UriParser = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="20f3b-101">새 URI 체계를 구문 분석합니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-101">Parses a new URI scheme.</span></span> <span data-ttu-id="20f3b-102">이 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-102">This is an abstract class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f3b-103">UriParser 클래스를 사용 하면 새 URI 체계에 대 한 파서를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-103">The UriParser class enables you to create parsers for new URI schemes.</span></span> <span data-ttu-id="20f3b-104">이러한 파서 전체적으로 쓰거나 파서 잘 알려진 체계 (HTTP, FTP 및 네트워크 프로토콜을 기반으로 하는 다른 스키마)에서 파생 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-104">You can write these parsers in their entirety, or the parsers can be derived from well-known schemes (HTTP, FTP, and other schemes based on network protocols).</span></span> <span data-ttu-id="20f3b-105">상속 하는 완전히 새로운 파서를 만들려는 경우 <xref:System.GenericUriParser>합니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-105">If you want to create a completely new parser, inherit from <xref:System.GenericUriParser>.</span></span> <span data-ttu-id="20f3b-106">상속 하는 잘 알려진 URI 체계를 확장 하는 파서를 만들지 않으려면 <xref:System.FtpStyleUriParser>, <xref:System.HttpStyleUriParser>를 <xref:System.FileStyleUriParser>를 <xref:System.GopherStyleUriParser>, 또는 <xref:System.LdapStyleUriParser>합니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-106">If you want to create a parser that extends a well-known URI scheme, inherit from <xref:System.FtpStyleUriParser>, <xref:System.HttpStyleUriParser>, <xref:System.FileStyleUriParser>, <xref:System.GopherStyleUriParser>, or <xref:System.LdapStyleUriParser>.</span></span>  
  
 <span data-ttu-id="20f3b-107">.NET을 사용 하 여 제공 하는 파서를 사용 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-107">Microsoft strongly recommends that you use a parser shipped with .NET.</span></span> <span data-ttu-id="20f3b-108">자체 파서를 응용 프로그램의 복잡성 증가 하 고 제공 된 파서와 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-108">Building your own parser increases the complexity of your application, and will not perform as well as the shipped parsers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UriParser ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UriParser();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20f3b-109">기본 URI 파서를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-109">Constructs a default URI parser.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComponents">
      <MemberSignature Language="C#" Value="protected virtual string GetComponents (Uri uri, UriComponents components, UriFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetComponents(class System.Uri uri, valuetype System.UriComponents components, valuetype System.UriFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetComponents(Uri ^ uri, UriComponents components, UriFormat format);" />
      <MemberSignature Language="F#" Value="abstract member GetComponents : Uri * UriComponents * UriFormat -&gt; string&#xA;override this.GetComponents : Uri * UriComponents * UriFormat -&gt; string" Usage="uriParser.GetComponents (uri, components, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="components" Type="System.UriComponents" />
        <Parameter Name="format" Type="System.UriFormat" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="20f3b-110">구문 분석할 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-110">The URI to parse.</span></span></param>
        <param name="components"><span data-ttu-id="20f3b-111"><paramref name="uri" />에서 검색할 <see cref="T:System.UriComponents" />입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-111">The <see cref="T:System.UriComponents" /> to retrieve from <paramref name="uri" />.</span></span></param>
        <param name="format"><span data-ttu-id="20f3b-112">특수 문자가 이스케이프되는 방법을 제어하는 <see cref="T:System.UriFormat" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-112">One of the <see cref="T:System.UriFormat" /> values that controls how special characters are escaped.</span></span></param>
        <summary><span data-ttu-id="20f3b-113">URI에서 구성 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-113">Gets the components from a URI.</span></span></summary>
        <returns><span data-ttu-id="20f3b-114">구성 요소를 포함하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-114">A string that contains the components.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f3b-115">사용 하 여는 <xref:System.UriParser.GetComponents%2A> 와 같은 다양 한 파트 URI의 값을 확인 하는 메서드를 <xref:System.UriComponents.Scheme>, <xref:System.UriComponents.Host>, 또는 <xref:System.UriComponents.Port>합니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-115">Use the <xref:System.UriParser.GetComponents%2A> method to determine the value of various parts of the URI, such as the <xref:System.UriComponents.Scheme>, <xref:System.UriComponents.Host>, or <xref:System.UriComponents.Port>.</span></span>  
  
 <span data-ttu-id="20f3b-116">구성 요소는 URI에 표시 되는 순서 대로 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-116">The components are returned in the order that they appear in the URI.</span></span> <span data-ttu-id="20f3b-117">예를 들어 경우 <xref:System.UriComponents.Scheme> 를 지정 하면 가장 먼저 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-117">For example, if <xref:System.UriComponents.Scheme> is specified, it appears first.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="20f3b-118"><paramref name="uriFormat" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-118"><paramref name="uriFormat" /> is invalid.</span></span>  
  
<span data-ttu-id="20f3b-119">또는</span><span class="sxs-lookup"><span data-stu-id="20f3b-119">-or-</span></span> 
 <span data-ttu-id="20f3b-120"><paramref name="uriComponents" />가 유효한 <see cref="T:System.UriComponents" /> 값의 조합이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="20f3b-120"><paramref name="uriComponents" /> is not a combination of valid <see cref="T:System.UriComponents" /> values.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="20f3b-121"><paramref name="uri" />에 사용자 기반 구문 분석이 필요한 경우</span><span class="sxs-lookup"><span data-stu-id="20f3b-121"><paramref name="uri" /> requires user-driven parsing</span></span> 
<span data-ttu-id="20f3b-122">또는</span><span class="sxs-lookup"><span data-stu-id="20f3b-122">-or-</span></span> 
 <span data-ttu-id="20f3b-123"><paramref name="uri" />가 절대 URI가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-123"><paramref name="uri" /> is not an absolute URI.</span></span> <span data-ttu-id="20f3b-124">상대 URI는 이 메서드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-124">Relative URIs cannot be used with this method.</span></span></exception>
        <altmember cref="T:System.UriComponents" />
        <altmember cref="F:System.UriComponents.Host" />
        <altmember cref="F:System.UriComponents.Port" />
        <altmember cref="F:System.UriComponents.Scheme" />
        <altmember cref="T:System.UriFormat" />
        <altmember cref="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeAndValidate">
      <MemberSignature Language="C#" Value="protected virtual void InitializeAndValidate (Uri uri, out UriFormatException parsingError);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeAndValidate(class System.Uri uri, [out] class System.UriFormatException&amp; parsingError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeAndValidate(Uri ^ uri, [Runtime::InteropServices::Out] UriFormatException ^ % parsingError);" />
      <MemberSignature Language="F#" Value="abstract member InitializeAndValidate : Uri *  -&gt; unit&#xA;override this.InitializeAndValidate : Uri *  -&gt; unit" Usage="uriParser.InitializeAndValidate (uri, parsingError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="parsingError" Type="System.UriFormatException" RefType="out" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="20f3b-125">유효성을 검사할 T:System.Uri입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-125">The T:System.Uri to validate.</span></span></param>
        <param name="parsingError"><span data-ttu-id="20f3b-126">유효성 검사 오류가 발생한 경우 해당 오류입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-126">Validation errors, if any.</span></span></param>
        <summary><span data-ttu-id="20f3b-127">파서의 상태를 초기화하고 URI의 유효성을 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-127">Initialize the state of the parser and validate the URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f3b-128">합니다 <xref:System.UriParser.InitializeAndValidate%2A> 때마다 호출 됩니다는 <xref:System.Uri> 인스턴스화됩니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-128">The <xref:System.UriParser.InitializeAndValidate%2A> method is called every time a <xref:System.Uri> is instantiated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBaseOf">
      <MemberSignature Language="C#" Value="protected virtual bool IsBaseOf (Uri baseUri, Uri relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsBaseOf(class System.Uri baseUri, class System.Uri relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.IsBaseOf(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsBaseOf (baseUri As Uri, relativeUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsBaseOf(Uri ^ baseUri, Uri ^ relativeUri);" />
      <MemberSignature Language="F#" Value="abstract member IsBaseOf : Uri * Uri -&gt; bool&#xA;override this.IsBaseOf : Uri * Uri -&gt; bool" Usage="uriParser.IsBaseOf (baseUri, relativeUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="20f3b-129">기본 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-129">The base URI.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="20f3b-130">테스트할 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-130">The URI to test.</span></span></param>
        <summary><span data-ttu-id="20f3b-131"><paramref name="baseUri" />가 <paramref name="relativeUri" />의 기본 URI인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-131">Determines whether <paramref name="baseUri" /> is a base URI for <paramref name="relativeUri" />.</span></span></summary>
        <returns><span data-ttu-id="20f3b-132"><paramref name="baseUri" />가 <paramref name="relativeUri" />의 기본 URI이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-132"><see langword="true" /> if <paramref name="baseUri" /> is a base URI for <paramref name="relativeUri" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKnownScheme">
      <MemberSignature Language="C#" Value="public static bool IsKnownScheme (string schemeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKnownScheme(string schemeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.IsKnownScheme(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKnownScheme (schemeName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKnownScheme(System::String ^ schemeName);" />
      <MemberSignature Language="F#" Value="static member IsKnownScheme : string -&gt; bool" Usage="System.UriParser.IsKnownScheme schemeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="schemeName"><span data-ttu-id="20f3b-133">확인할 체계 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-133">The scheme name to check.</span></span></param>
        <summary><span data-ttu-id="20f3b-134">체계의 파서가 등록되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-134">Indicates whether the parser for a scheme is registered.</span></span></summary>
        <returns><span data-ttu-id="20f3b-135"><paramref name="schemeName" />이 등록되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-135"><see langword="true" /> if <paramref name="schemeName" /> has been registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="20f3b-136"><paramref name="schemeName" /> 매개 변수가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="20f3b-136">The <paramref name="schemeName" /> parameter is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="20f3b-137"><paramref name="schemeName" /> 매개 변수가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="20f3b-137">The <paramref name="schemeName" /> parameter is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsWellFormedOriginalString">
      <MemberSignature Language="C#" Value="protected virtual bool IsWellFormedOriginalString (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsWellFormedOriginalString(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.IsWellFormedOriginalString(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsWellFormedOriginalString(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member IsWellFormedOriginalString : Uri -&gt; bool&#xA;override this.IsWellFormedOriginalString : Uri -&gt; bool" Usage="uriParser.IsWellFormedOriginalString uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="20f3b-138">확인할 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-138">The URI to check.</span></span></param>
        <summary><span data-ttu-id="20f3b-139">URI가 제대로 구성되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-139">Indicates whether a URI is well-formed.</span></span></summary>
        <returns><span data-ttu-id="20f3b-140"><paramref name="uri" />가 제대로 구성되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-140"><see langword="true" /> if <paramref name="uri" /> is well-formed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f3b-141"><xref:System.UriParser.IsWellFormedOriginalString%2A> 경우 메서드는 false를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-141">The <xref:System.UriParser.IsWellFormedOriginalString%2A> method will return false if:</span></span>  
  
-   <span data-ttu-id="20f3b-142">문자열은 RFC 2396 올바르게 이스케이프 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-142">The string is not correctly escaped per RFC 2396.</span></span>  
  
-   <span data-ttu-id="20f3b-143">문자열 암시적 파일 URI를 참조 하는 절대 URI를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-143">The string represents an absolute URI that references an implicit file URI.</span></span>  
  
-   <span data-ttu-id="20f3b-144">문자열 경로 구성 요소 앞에 슬래시 누락 된 절대 URI를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-144">The string represents an absolute URI that is missing a forward slash before the path component.</span></span>  
  
-   <span data-ttu-id="20f3b-145">슬래시도 간주 됩니다 하는 경우에 이스케이프 되지 않은 백슬래시를 포함 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-145">The string contains unescaped backslashes, even if they will be treated as forward slashes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNewUri">
      <MemberSignature Language="C#" Value="protected virtual UriParser OnNewUri ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.UriParser OnNewUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.OnNewUri" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnNewUri () As UriParser" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual UriParser ^ OnNewUri();" />
      <MemberSignature Language="F#" Value="abstract member OnNewUri : unit -&gt; UriParser&#xA;override this.OnNewUri : unit -&gt; UriParser" Usage="uriParser.OnNewUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20f3b-146"><see cref="T:System.Uri" /> 생성자에 의해 호출되어 <see cref="T:System.UriParser" /> 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-146">Invoked by a <see cref="T:System.Uri" /> constructor to get a <see cref="T:System.UriParser" /> instance</span></span></summary>
        <returns><span data-ttu-id="20f3b-147">생성된 <see cref="T:System.UriParser" />의 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-147">A <see cref="T:System.UriParser" /> for the constructed <see cref="T:System.Uri" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f3b-148">기본 구현은 동일한 <xref:System.UriParser> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="20f3b-148">The default implementation returns the same <xref:System.UriParser> instance.</span></span> <span data-ttu-id="20f3b-149">이 메서드를 재정의 하 고 다른 반환 해야 할 수 있습니다 <xref:System.UriParser> 다중 스레드 환경에서 작동 하는 경우 각 호출에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-149">You may need to override this method and return a different <xref:System.UriParser> for each invocation if you are operating in a multithreaded environment.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRegister">
      <MemberSignature Language="C#" Value="protected virtual void OnRegister (string schemeName, int defaultPort);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRegister(string schemeName, int32 defaultPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.OnRegister(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRegister (schemeName As String, defaultPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRegister(System::String ^ schemeName, int defaultPort);" />
      <MemberSignature Language="F#" Value="abstract member OnRegister : string * int -&gt; unit&#xA;override this.OnRegister : string * int -&gt; unit" Usage="uriParser.OnRegister (schemeName, defaultPort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemeName" Type="System.String" />
        <Parameter Name="defaultPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="schemeName"><span data-ttu-id="20f3b-150">이 <see cref="T:System.UriParser" />와 연결된 체계입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-150">The scheme that is associated with this <see cref="T:System.UriParser" />.</span></span></param>
        <param name="defaultPort"><span data-ttu-id="20f3b-151">체계의 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-151">The port number of the scheme.</span></span></param>
        <summary><span data-ttu-id="20f3b-152"><see cref="T:System.UriParser" /> 메서드가 등록될 때 Framework에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-152">Invoked by the Framework when a <see cref="T:System.UriParser" /> method is registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (UriParser uriParser, string schemeName, int defaultPort);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(class System.UriParser uriParser, string schemeName, int32 defaultPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(UriParser ^ uriParser, System::String ^ schemeName, int defaultPort);" />
      <MemberSignature Language="F#" Value="static member Register : UriParser * string * int -&gt; unit" Usage="System.UriParser.Register (uriParser, schemeName, defaultPort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriParser" Type="System.UriParser" />
        <Parameter Name="schemeName" Type="System.String" />
        <Parameter Name="defaultPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="uriParser"><span data-ttu-id="20f3b-153">등록할 URI 파서입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-153">The URI parser to register.</span></span></param>
        <param name="schemeName"><span data-ttu-id="20f3b-154">이 파서와 연결된 체계의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-154">The name of the scheme that is associated with this parser.</span></span></param>
        <param name="defaultPort"><span data-ttu-id="20f3b-155">지정된 체계의 기본 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-155">The default port number for the specified scheme.</span></span></param>
        <summary><span data-ttu-id="20f3b-156">체계 및 포트 번호와 <see cref="T:System.UriParser" />를 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-156">Associates a scheme and port number with a <see cref="T:System.UriParser" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f3b-157">경우는 `defaultPort` 매개 변수가-1로 설정 된는 <xref:System.UriParser.Register%2A> 메서드 등록 하는 포트 번호에 대 한 기본값은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-157">If the `defaultPort` parameter is set to -1, the <xref:System.UriParser.Register%2A> method registers no default value for the port number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="20f3b-158"><paramref name="uriParser" /> 매개 변수가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-158"><paramref name="uriParser" /> parameter is null</span></span> 
<span data-ttu-id="20f3b-159">또는</span><span class="sxs-lookup"><span data-stu-id="20f3b-159">-or-</span></span> 
 <span data-ttu-id="20f3b-160"><paramref name="schemeName" /> 매개 변수가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-160"><paramref name="schemeName" /> parameter is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="20f3b-161"><paramref name="schemeName" /> 매개 변수가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="20f3b-161"><paramref name="schemeName" /> parameter is not valid</span></span> 
<span data-ttu-id="20f3b-162">또는</span><span class="sxs-lookup"><span data-stu-id="20f3b-162">-or-</span></span> 
 <span data-ttu-id="20f3b-163"><paramref name="defaultPort" /> 매개 변수가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="20f3b-163"><paramref name="defaultPort" /> parameter is not valid.</span></span> <span data-ttu-id="20f3b-164"><paramref name="defaultPort" /> 매개 변수가 -1보다 작거나 65,534보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-164">The <paramref name="defaultPort" /> parameter is less than -1 or greater than 65,534.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="protected virtual string Resolve (Uri baseUri, Uri relativeUri, out UriFormatException parsingError);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string Resolve(class System.Uri baseUri, class System.Uri relativeUri, [out] class System.UriFormatException&amp; parsingError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Resolve (baseUri As Uri, relativeUri As Uri, ByRef parsingError As UriFormatException) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ Resolve(Uri ^ baseUri, Uri ^ relativeUri, [Runtime::InteropServices::Out] UriFormatException ^ % parsingError);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : Uri * Uri *  -&gt; string&#xA;override this.Resolve : Uri * Uri *  -&gt; string" Usage="uriParser.Resolve (baseUri, relativeUri, parsingError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.Uri" />
        <Parameter Name="parsingError" Type="System.UriFormatException" RefType="out" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="20f3b-165">기본 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-165">A base URI.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="20f3b-166">상대 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-166">A relative URI.</span></span></param>
        <param name="parsingError"><span data-ttu-id="20f3b-167">확인 프로세스 중 오류가 발생한 경우 해당 오류입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-167">Errors during the resolve process, if any.</span></span></param>
        <summary><span data-ttu-id="20f3b-168"><see cref="T:System.Uri" /> 생성자와 <see cref="Overload:System.Uri.TryCreate" />에서 호출되어 상대 URI를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-168">Called by <see cref="T:System.Uri" /> constructors and <see cref="Overload:System.Uri.TryCreate" /> to resolve a relative URI.</span></span></summary>
        <returns><span data-ttu-id="20f3b-169">확인된 상대 <see cref="T:System.Uri" />의 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-169">The string of the resolved relative <see cref="T:System.Uri" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f3b-170"><xref:System.Uri> 생성자와 <xref:System.Uri.TryCreate%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.UriParser.Resolve%2A> URI에서 생성 `baseUri` 및 `relativeUri`합니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-170"><xref:System.Uri> constructors and <xref:System.Uri.TryCreate%2A?displayProperty=nameWithType> use <xref:System.UriParser.Resolve%2A> to construct a URI from `baseUri` and `relativeUri`.</span></span>  
  
 <span data-ttu-id="20f3b-171">구문 분석 하는 경우 오류가 발생 확인된 된 상대에 대 한 반환된 된 문자열 <xref:System.Uri> null입니다.</span><span class="sxs-lookup"><span data-stu-id="20f3b-171">If a parsing error occurs, the returned string for the resolved relative <xref:System.Uri> is null.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="20f3b-172"><paramref name="baseUri" /> 매개 변수가 절대 <see cref="T:System.Uri" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="20f3b-172"><paramref name="baseUri" /> parameter is not an absolute <see cref="T:System.Uri" /></span></span>  
  
<span data-ttu-id="20f3b-173">또는</span><span class="sxs-lookup"><span data-stu-id="20f3b-173">-or-</span></span> 
 <span data-ttu-id="20f3b-174"><paramref name="baseUri" /> 매개 변수에 사용자 기반 구문 분석이 필요한 경우</span><span class="sxs-lookup"><span data-stu-id="20f3b-174"><paramref name="baseUri" /> parameter requires user-driven parsing.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>