<Type Name="NotSupportedException" FullName="System.NotSupportedException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37b9e257acdbe320db7690a9ab955adb0dac54c7" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57918274" /></Metadata><TypeSignature Language="C#" Value="public class NotSupportedException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit NotSupportedException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.NotSupportedException" />
  <TypeSignature Language="VB.NET" Value="Public Class NotSupportedException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class NotSupportedException : SystemException" />
  <TypeSignature Language="F#" Value="type NotSupportedException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="67507-101">호출된 메서드가 지원되지 않거나, 호출된 기능을 지원하지 않는 스트림에 읽기, 검색 또는 쓰기를 수행하려고 할 때 throw되는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-101">The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67507-102"><xref:System.NotSupportedException> 호출 된 메서드 또는 속성에 대 한 구현이 있음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="67507-102"><xref:System.NotSupportedException> indicates that no implementation exists for an invoked method or property.</span></span>  
  
 <span data-ttu-id="67507-103"><xref:System.NotSupportedException> 값 0x80131515 HRESULT COR_E_NOTSUPPORTED를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-103"><xref:System.NotSupportedException> uses the HRESULT COR_E_NOTSUPPORTED, which has the value 0x80131515.</span></span>  
  
 <span data-ttu-id="67507-104">인스턴스의 초기 속성 값의 목록을 <xref:System.NotSupportedException>, 참조는 <xref:System.NotSupportedException.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-104">For a list of initial property values for an instance of <xref:System.NotSupportedException>, see the <xref:System.NotSupportedException.%23ctor%2A> constructors.</span></span>  
  
## <a name="throwing-a-notsupportedexception-exception"></a><span data-ttu-id="67507-105">NotSupportedException 예외를 throw</span><span class="sxs-lookup"><span data-stu-id="67507-105">Throwing a NotSupportedException exception</span></span>  
 <span data-ttu-id="67507-106">throw 하는 것이 좋습니다는 <xref:System.NotSupportedException> 다음과 같은 경우에는 예외:</span><span class="sxs-lookup"><span data-stu-id="67507-106">You might consider throwing a <xref:System.NotSupportedException> exception in the following cases:</span></span>  
  
-   <span data-ttu-id="67507-107">범용 인터페이스를 구현 하는 하 고 메서드의 수에 의미 있는 구현이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="67507-107">You are implementing a general-purpose interface, and number of the methods have no meaningful implementation.</span></span> <span data-ttu-id="67507-108">예를 들어, 만드는 경우는 날짜 및 시간 형식을 구현 하는 <xref:System.IConvertible> throw는 인터페이스를 <xref:System.NotSupportedException> 변환을 대부분에 대 한 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-108">For example, if you are creating a date and time type that implements the <xref:System.IConvertible> interface, you would throw a <xref:System.NotSupportedException> exception for most of the conversions.</span></span>  
  
-   <span data-ttu-id="67507-109">필요한 다양 한 메서드를 재정의 하는 추상 클래스에서 상속 했습니다.</span><span class="sxs-lookup"><span data-stu-id="67507-109">You've inherited from an abstract class that requires that you override a number of methods.</span></span> <span data-ttu-id="67507-110">그러나 이러한 하위 집합에 대 한 구현을 제공 준비가 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-110">However, you're only prepared to provide an implementation for a subset of these.</span></span> <span data-ttu-id="67507-111">구현 하지 않기로 결정 하는 메서드의 경우 throw 하도록 선택할 수 있습니다는 <xref:System.NotSupportedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-111">For the methods that you decide not to implement, you can choose to throw a <xref:System.NotSupportedException>.</span></span>  
  
-   <span data-ttu-id="67507-112">일반 용도의 형식 조건에 따라 작업을 사용 하는 상태를 사용 하 여 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="67507-112">You are defining a general-purpose type with a state that enables operations conditionally.</span></span> <span data-ttu-id="67507-113">예를 들어, 읽기 전용 또는 읽기 / 쓰기 형식이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67507-113">For example, your type can be either read-only or read-write.</span></span> <span data-ttu-id="67507-114">이 경우:</span><span class="sxs-lookup"><span data-stu-id="67507-114">In that case:</span></span>  
  
    -   <span data-ttu-id="67507-115">개체가 읽기 전용 이면 throw 해야 인스턴스 상태를 수정 하는 인스턴스 또는 호출 메서드의 속성에 값을 할당 하는 <xref:System.NotSupportedException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-115">If the object is read-only, attempting to assign values to the properties of an instance or call methods that modify instance state should throw  a <xref:System.NotSupportedException> exception.</span></span>  
  
    -   <span data-ttu-id="67507-116">반환 하는 속성을 구현 해야 하는 <xref:System.Boolean> 특정 기능을 사용할 수 있는지 여부를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-116">You should implement a property that returns a <xref:System.Boolean> value that indicates whether particular functionality is available.</span></span> <span data-ttu-id="67507-117">예를 들어, 읽기 전용 또는 읽기 / 쓰기 수 있는 형식의 경우 구현할 수 있습니다는 `IsReadOnly` 읽기 / 쓰기 메서드 집합을 사용할 수 없거나 사용할 수 있는지 여부를 나타내는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-117">For example, for a type that can be either read-only or read-write, you could implement a `IsReadOnly` property that indicates whether the set of read-write methods are available or unavailable.</span></span>  
  
## <a name="handling-a-notsupportedexception-exception"></a><span data-ttu-id="67507-118">NotSupportedException 예외 처리</span><span class="sxs-lookup"><span data-stu-id="67507-118">Handling a NotSupportedException exception</span></span>  
 <span data-ttu-id="67507-119"><xref:System.NotSupportedException> 예외 나타내고 메서드는 구현 되지 않습니다는 호출 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-119">The <xref:System.NotSupportedException> exception indicates that a method has no implementation and that you should not call it.</span></span>  <span data-ttu-id="67507-120">예외를 처리 하지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-120">You should not handle the exception.</span></span> <span data-ttu-id="67507-121">대신 예외의 원인에 따라 다릅니다 무엇을 해야: 구현을 완전히 없는 여부 멤버 호출 개체 하기 위한 목적으로 일치 하지 않습니다 (호출과 같은 합니다 <xref:System.IO.FileStream.Write%2A?displayProperty=nameWithType> 메서드는 읽기 전용 <xref:System.IO.FileStream> 개체 .</span><span class="sxs-lookup"><span data-stu-id="67507-121">Instead, what you should do depends on the cause of the exception:  whether an implementation is completely absent , or the member invocation is inconsistent with the purpose of an object (such as a call to the <xref:System.IO.FileStream.Write%2A?displayProperty=nameWithType> method on a read-only <xref:System.IO.FileStream> object .</span></span>  
  
 <span data-ttu-id="67507-122">**의미 있는 방식으로 작업을 수행할 수 없으므로 구현 하지 제공 되었습니다.**</span><span class="sxs-lookup"><span data-stu-id="67507-122">**An implementation has not been provided because the operation cannot be performed in a meaningful way.**</span></span>  
 <span data-ttu-id="67507-123">범용 인터페이스를 구현 하는 추상 기본 클래스의 메서드에 대 한 구현을 제공 하는 개체의 메서드를 호출 하는 경우이 일반적인 예외 및 메서드 구현이 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-123">This is a common exception when you are calling methods on an object that provides implementations for the methods of an abstract base class, or that implements a general-purpose interface, and the method has no meaningful implementation.</span></span>  
  
 <span data-ttu-id="67507-124">예를 들어 합니다 <xref:System.Convert> 구현 클래스는 <xref:System.IConvertible> 인터페이스를 통해 모든 기본 형식 다른 모든 기본 형식으로 변환 하는 메서드를 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-124">For example, the <xref:System.Convert> class implements the <xref:System.IConvertible> interface, which means that it must include a method to convert every primitive type to every other primitive type.</span></span> <span data-ttu-id="67507-125">하지만 대부분의 이러한 변환, 가능 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="67507-125">Many of those conversions, however, are not possible.</span></span> <span data-ttu-id="67507-126">결과적으로 호출 하는 <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> 메서드를 예를 들어 throw를 <xref:System.NotSupportedException> 예외 간의 가능한 변환이 있기 때문에 <xref:System.DateTime> 및 <xref:System.Boolean> 값</span><span class="sxs-lookup"><span data-stu-id="67507-126">As a result, a call to the <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> method, for instance, throws a <xref:System.NotSupportedException> exception because there is no possible conversion between a <xref:System.DateTime> and a <xref:System.Boolean> value</span></span>  
  
 <span data-ttu-id="67507-127">예외를 제거 하는 메서드 호출을 제거 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-127">To eliminate the exception, you should eliminate the method call.</span></span>  
  
 <span data-ttu-id="67507-128">**메서드 호출이 개체의 상태를 지정 하는 것을 지원 되지 않습니다.**</span><span class="sxs-lookup"><span data-stu-id="67507-128">**The method call is not supported given the state of the object.**</span></span>  
 <span data-ttu-id="67507-129">개체의 상태 때문에 해당 기능을 사용할 수 없는 멤버를 호출 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-129">You are attempting to invoke a member whose functionality is unavailable because of the object's state.</span></span> <span data-ttu-id="67507-130">세 가지 방법 중 하나에서 예외를 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67507-130">You can eliminate the exception in one of three ways:</span></span>  
  
-   <span data-ttu-id="67507-131">개체의 상태를 사전에 알고 있지만 지원 되지 않는 메서드 또는 속성을 호출 했습니다.</span><span class="sxs-lookup"><span data-stu-id="67507-131">You know the state of the object in advance, but you've invoked an unsupported method or property.</span></span> <span data-ttu-id="67507-132">이 경우에 멤버 호출 오류가 이며 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67507-132">In this case, the member invocation is an error, and you can eliminate it.</span></span>  
  
-   <span data-ttu-id="67507-133">이미 아는 개체의 상태 (일반적으로 인스턴스화되기 때문에 코드에 해당), 잘못 구성 된 개체 이지만 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-133">You know the state of the object in advance (usually because your code has instantiated it), but the object is mis-configured.</span></span> <span data-ttu-id="67507-134">다음 예제에서는이 문제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="67507-134">The following example illustrates this issue.</span></span> <span data-ttu-id="67507-135">읽기 전용 키를 만들면 <xref:System.IO.FileStream> 개체 및 쓰기를 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-135">It creates a read-only <xref:System.IO.FileStream> object  and then attempts to write to it.</span></span>  
  
     [!code-csharp[System.NotSupportedException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.NotSupportedException/cs/BadState1.cs#1)]
     [!code-vb[System.NotSupportedException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.NotSupportedException/vb/BadState1.vb#1)]  
  
     <span data-ttu-id="67507-136">인스턴스화된 개체 하려는 기능을 지원 함으로써 예외를 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67507-136">You can eliminate the exception by ensuring that the instantiated object supports the functionality you intend.</span></span> <span data-ttu-id="67507-137">다음 예에서는 읽기 전용 문제를 해결 <xref:System.IO.FileStream> 올바른 인수를 제공 하 여 개체를 <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%29?displayProperty=nameWithType> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-137">The following example addresses the problem of the read-only <xref:System.IO.FileStream> object by providing the correct arguments to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%29?displayProperty=nameWithType> constructor.</span></span>  
  
-   <span data-ttu-id="67507-138">개체의 상태를 사전에 모르는 및 개체는 특정 작업을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="67507-138">You don't know the state of the object in advance, and the object doesn't support a particular operation.</span></span> <span data-ttu-id="67507-139">대부분의 경우, 개체 속성 또는 작업의 특정 집합을 지원 하는지 여부를 나타내는 메서드를 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-139">In most cases, the object should include a property or method that indicates whether it supports a particular set of operations.</span></span> <span data-ttu-id="67507-140">개체의 값을 확인 하 고 적절 한 경우에 멤버를 호출 하 여 예외를 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67507-140">You can eliminate the exception by checking the value of the object and invoking the member only if appropriate.</span></span>  
  
     <span data-ttu-id="67507-141">다음 예제에서는 정의 `DetectEncoding` throw 하는 메서드를 <xref:System.NotSupportedException> 읽기 액세스를 지원 하지 않는 스트림의 시작 부분에서 읽으려고 하는 동안 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-141">The following example defines a `DetectEncoding` method that throws a <xref:System.NotSupportedException> exception when it attempts to read from the beginning of a stream that does not support read access.</span></span>  
  
     [!code-csharp[System.NotSupportedException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.NotSupportedException/cs/TestProp1.cs#3)]
     [!code-vb[System.NotSupportedException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.NotSupportedException/vb/TestProp1.vb#3)]  
  
     <span data-ttu-id="67507-142">값을 검사 하 여 예외를 제거할 수 있습니다는 <xref:System.IO.FileStream.CanRead%2A?displayProperty=nameWithType> 속성과 스트림이 읽기 전용 메서드를 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-142">You can eliminate the exception by examining the value of the <xref:System.IO.FileStream.CanRead%2A?displayProperty=nameWithType> property  and exiting the method if the stream is read-only.</span></span>  
  
     [!code-csharp[System.NotSupportedException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.NotSupportedException/cs/TestProp2.cs#4)]
     [!code-vb[System.NotSupportedException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.NotSupportedException/vb/TestProp2.vb#4)]  
  
## <a name="related-exception-types"></a><span data-ttu-id="67507-143">관련된 예외 형식</span><span class="sxs-lookup"><span data-stu-id="67507-143">Related exception types</span></span>  
 <span data-ttu-id="67507-144"><xref:System.NotSupportedException> 예외와 밀접 한 관련이 다른 두 예외 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-144">The <xref:System.NotSupportedException> exception is closely related to two other exception types;</span></span>  
  
 <span data-ttu-id="67507-145"><xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="67507-145"><xref:System.NotImplementedException>.</span></span>  
 <span data-ttu-id="67507-146">메서드를 구현할 수 있지만 그렇지 않을 경우이 예외가 throw 됩니다 하거나 이후 버전에서 구현 될 멤버, 멤버는 특정 플랫폼에서 사용할 수 없는 또는 멤버가 속한 추상 클래스 및 파생된 클래스는 im을 제공 해야 합니다 plementation 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-146">This exception is thrown when a method could be implemented but is not, either because the member will be implemented in  a later version, the member is not available on  a particular platform, or the member belongs to an abstract class and a derived class must provide an implementation.</span></span>  
  
 <xref:System.InvalidOperationException>  
 <span data-ttu-id="67507-147">이 예외는 throw 하는 것이 일반적으로 가능한 경우가 요청한 작업을 수행 하려면 개체에 대 한 시나리오에서 및 개체 상태는 작업을 수행할 수 있는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-147">This exception is thrown in scenarios in which it is generally sometimes possible for the object to perform the requested operation, and the object state determines whether the operation can be performed.</span></span>  
  
## <a name="net-compact-framework-notes"></a><span data-ttu-id="67507-148">.NET compact Framework 정보</span><span class="sxs-lookup"><span data-stu-id="67507-148">.NET Compact Framework notes</span></span>  
 <span data-ttu-id="67507-149">[!INCLUDE[Compact](~/includes/compact-md.md)] 로 작업하면서 네이티브 함수에 대해 P/Invoke를 사용할 때 다음과 같은 상황에서 이 예외가 throw될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67507-149">When working with the [!INCLUDE[Compact](~/includes/compact-md.md)] and using P/Invoke on a native function, this exception may be thrown if:</span></span>  
  
-   <span data-ttu-id="67507-150">관리 코드의 선언이 올바르지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="67507-150">The declaration in managed code is incorrect.</span></span>  
  
-   <span data-ttu-id="67507-151">수행하려는 작업을 [!INCLUDE[Compact](~/includes/compact-md.md)] 에서 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="67507-151">The [!INCLUDE[Compact](~/includes/compact-md.md)] does not support what you are trying to do.</span></span>  
  
-   <span data-ttu-id="67507-152">내보내기 과정에서 DLL 이름이 손상된 경우</span><span class="sxs-lookup"><span data-stu-id="67507-152">The DLL names are mangled on export.</span></span>  
  
 <span data-ttu-id="67507-153">경우는 <xref:System.NotSupportedException.%23ctor%2A> throw 된 예외 확인:</span><span class="sxs-lookup"><span data-stu-id="67507-153">If a <xref:System.NotSupportedException.%23ctor%2A> exception is thrown, check:</span></span>  
  
-   <span data-ttu-id="67507-154">[!INCLUDE[Compact](~/includes/compact-md.md)] P/Invoke 제한 사항에 대한 위반 여부</span><span class="sxs-lookup"><span data-stu-id="67507-154">For any violations of the [!INCLUDE[Compact](~/includes/compact-md.md)] P/Invoke restrictions.</span></span>  
  
-   <span data-ttu-id="67507-155">메모리를 미리 할당해야 하는 인수가 있는지 여부.</span><span class="sxs-lookup"><span data-stu-id="67507-155">For any arguments that require pre-allocated memory.</span></span> <span data-ttu-id="67507-156">이러한 인수가 있으면 기존 변수에 대한 참조를 전달해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-156">If these exist, you should pass a reference to an existing variable.</span></span>  
  
-   <span data-ttu-id="67507-157">내보낸 함수의 이름이 올바른지 여부.</span><span class="sxs-lookup"><span data-stu-id="67507-157">That the names of the exported functions are correct.</span></span> <span data-ttu-id="67507-158">이 사용 하 여 확인할 수 있습니다 [DumpBin.exe](https://msdn.microsoft.com/library/c1h23y6c.aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-158">This can be verified with [DumpBin.exe](https://msdn.microsoft.com/library/c1h23y6c.aspx).</span></span>  
  
-   <span data-ttu-id="67507-159">너무 많은 인수를 전달하려 하지 않았는지 여부</span><span class="sxs-lookup"><span data-stu-id="67507-159">That you are not attempting to pass too many arguments.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <altmember cref="T:System.IO.FileStream" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="67507-160">.NET의 예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="67507-160">Handling and throwing exceptions in .NET</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="67507-161"><see cref="T:System.NotSupportedException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-161">Initializes a new instance of the <see cref="T:System.NotSupportedException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotSupportedException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotSupportedException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67507-162"><see cref="T:System.NotSupportedException" /> 클래스의 새 인스턴스를 초기화하고, 새 인스턴스의 <see cref="P:System.Exception.Message" /> 속성을 오류를 설명하는 시스템 제공 메시지로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-162">Initializes a new instance of the <see cref="T:System.NotSupportedException" /> class, setting the <see cref="P:System.Exception.Message" /> property of the new instance to a system-supplied message that describes the error.</span></span> <span data-ttu-id="67507-163">이 메시지는 현재 시스템의 문화권을 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="67507-163">This message takes into account the current system culture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67507-164">다음 표에서는 <xref:System.NotSupportedException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="67507-164">The following table shows the initial property values for an instance of <xref:System.NotSupportedException>.</span></span>  
  
|<span data-ttu-id="67507-165">속성</span><span class="sxs-lookup"><span data-stu-id="67507-165">Property</span></span>|<span data-ttu-id="67507-166">값</span><span class="sxs-lookup"><span data-stu-id="67507-166">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="67507-167">`null`.</span><span class="sxs-lookup"><span data-stu-id="67507-167">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="67507-168">지역화된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-168">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotSupportedException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotSupportedException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new NotSupportedException : string -&gt; NotSupportedException" Usage="new System.NotSupportedException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="67507-169">오류를 설명하는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-169">A <see cref="T:System.String" /> that describes the error.</span></span> <span data-ttu-id="67507-170"><paramref name="message" /> 내용은 사용자의 이해를 돕기 위한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-170">The content of <paramref name="message" /> is intended to be understood by humans.</span></span> <span data-ttu-id="67507-171">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-171">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span></param>
        <summary><span data-ttu-id="67507-172">지정된 오류 메시지를 사용하여 <see cref="T:System.NotSupportedException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-172">Initializes a new instance of the <see cref="T:System.NotSupportedException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67507-173">다음 표에서는 <xref:System.NotSupportedException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="67507-173">The following table shows the initial property values for an instance of <xref:System.NotSupportedException>.</span></span>  
  
|<span data-ttu-id="67507-174">속성</span><span class="sxs-lookup"><span data-stu-id="67507-174">Property</span></span>|<span data-ttu-id="67507-175">값</span><span class="sxs-lookup"><span data-stu-id="67507-175">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="67507-176">`null`.</span><span class="sxs-lookup"><span data-stu-id="67507-176">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="67507-177">오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-177">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NotSupportedException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NotSupportedException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new NotSupportedException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; NotSupportedException" Usage="new System.NotSupportedException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="67507-178">serialize된 개체 데이터를 보유하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-178">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="67507-179">원본 또는 대상에 대한 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-179">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="67507-180">serialize된 데이터를 사용하여 <see cref="T:System.NotSupportedException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-180">Initializes a new instance of the <see cref="T:System.NotSupportedException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67507-181">deserialization을 수행하는 동안 이 생성자를 호출하여 스트림을 통해 전송될 예외 개체를 다시 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-181">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="67507-182">자세한 내용은 [XML 및 SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-182">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="67507-183">XML 및 SOAP Serialization</span><span class="sxs-lookup"><span data-stu-id="67507-183">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotSupportedException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotSupportedException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new NotSupportedException : string * Exception -&gt; NotSupportedException" Usage="new System.NotSupportedException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="67507-184">예외에 대한 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-184">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="67507-185">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-185">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="67507-186"><paramref name="innerException" /> 매개 변수가 null 참조가 아닌 경우 내부 예외를 처리하는 <see langword="catch" /> 블록에서 현재 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-186">If the <paramref name="innerException" /> parameter is not a null reference, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="67507-187">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.NotSupportedException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-187">Initializes a new instance of the <see cref="T:System.NotSupportedException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67507-188">이전 예외의 직접적인 결과로 throw되는 예외의 <xref:System.Exception.InnerException%2A> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-188">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="67507-189"><xref:System.Exception.InnerException%2A> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, `null` 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <xref:System.Exception.InnerException%2A>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="67507-189">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="67507-190">다음 표에서는 <xref:System.NotSupportedException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="67507-190">The following table shows the initial property values for an instance of <xref:System.NotSupportedException>.</span></span>  
  
|<span data-ttu-id="67507-191">속성</span><span class="sxs-lookup"><span data-stu-id="67507-191">Property</span></span>|<span data-ttu-id="67507-192">값</span><span class="sxs-lookup"><span data-stu-id="67507-192">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="67507-193">내부 예외 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-193">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="67507-194">오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="67507-194">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="67507-195">.NET의 예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="67507-195">Handling and throwing exceptions in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>