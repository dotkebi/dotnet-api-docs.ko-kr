<Type Name="Version" FullName="System.Version">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4e696702e4a37d5ebf044d6289de08d93de2013d" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57933081" /></Metadata><TypeSignature Language="C#" Value="public sealed class Version : ICloneable, IComparable, IComparable&lt;Version&gt;, IEquatable&lt;Version&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Version extends System.Object implements class System.ICloneable, class System.IComparable, class System.IComparable`1&lt;class System.Version&gt;, class System.IEquatable`1&lt;class System.Version&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Version" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Version&#xA;Implements ICloneable, IComparable, IComparable(Of Version), IEquatable(Of Version)" />
  <TypeSignature Language="C++ CLI" Value="public ref class Version sealed : ICloneable, IComparable, IComparable&lt;Version ^&gt;, IEquatable&lt;Version ^&gt;" />
  <TypeSignature Language="F#" Value="type Version = class&#xA;    interface ICloneable&#xA;    interface IComparable&#xA;    interface IComparable&lt;Version&gt;&#xA;    interface IEquatable&lt;Version&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Version&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Version&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="50e9d-101">어셈블리, 운영 체제 또는 공용 언어 런타임의 버전 번호를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-101">Represents the version number of an assembly, operating system, or the common language runtime.</span></span> <span data-ttu-id="50e9d-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-103">버전 번호 2 ~ 4 개의 구성 요소로 구성 됩니다: 주, 부 버전, 빌드 및 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-103">Version numbers consist of two to four components: major, minor, build, and revision.</span></span> <span data-ttu-id="50e9d-104">주 및 부 구성 요소가 필요 합니다. 빌드 및 수정 버전 구성 요소는 선택 사항 수정 버전 구성 요소에 정의 되어 있으면 빌드 구성 요소 이지만 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-104">The major and minor components are required; the build and revision components are optional, but the build component is required if the revision component is defined.</span></span> <span data-ttu-id="50e9d-105">정의 된 모든 구성 요소에는 0 보다 크거나 정수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-105">All defined components must be integers greater than or equal to 0.</span></span> <span data-ttu-id="50e9d-106">버전 번호의 형식은 다음과 같습니다 (선택적 구성 요소는 대괄호에서 ([및]): 나와</span><span class="sxs-lookup"><span data-stu-id="50e9d-106">The format of the version number is as follows (optional components are shown in square brackets ([ and ]):</span></span>  
  
 <span data-ttu-id="50e9d-107">*major*.*minor*[.*build*[.*revision*]]</span><span class="sxs-lookup"><span data-stu-id="50e9d-107">*major*.*minor*[.*build*[.*revision*]]</span></span>  
  
 <span data-ttu-id="50e9d-108">구성 요소는 다음과 같은 규칙에 따라 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-108">The components are used by convention as follows:</span></span>  
  
-   <span data-ttu-id="50e9d-109">*주요*: 어셈블리 이름은 같지만 다른 주 버전은 교환할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-109">*Major*: Assemblies with the same name but different major versions are not interchangeable.</span></span> <span data-ttu-id="50e9d-110">더 높은 버전 번호는 이전 버전과 호환성을 가정할 수 없습니다 제품의 주요 다시 쓰기를 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-110">A higher version number might indicate a major rewrite of a product where backward compatibility cannot be assumed.</span></span>  
  
-   <span data-ttu-id="50e9d-111">*사소한*: 이름 및 두 어셈블리의 주 버전 번호는 동일 하지만 부 버전 번호는 다른 경우 이전 버전과 호환성을 위해 향상 되었음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-111">*Minor*: If the name and major version number on two assemblies are the same, but the minor version number is different, this indicates significant enhancement with the intention of backward compatibility.</span></span> <span data-ttu-id="50e9d-112">부 버전 번호가 제품의 포인트 릴리스 또는 제품의 이전 버전과 호환 완벽 하 게 새 버전을 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-112">This higher minor version number might indicate a point release of a product or a fully backward-compatible new version of a product.</span></span>  
  
-   <span data-ttu-id="50e9d-113">*빌드:* 빌드 번호가 다른 동일한 소스 다시 컴파일 했음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-113">*Build*: A difference in build number represents a recompilation of the same source.</span></span> <span data-ttu-id="50e9d-114">프로세서, 플랫폼 또는 컴파일러 변경 될 때 다른 빌드 번호를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-114">Different build numbers might be used when the processor, platform, or compiler changes.</span></span>  
  
-   <span data-ttu-id="50e9d-115">*수정 버전*: 동일한 이름의 어셈블리를 주 및 부 버전 번호 하지만 서로 다른 수정 버전 수는 있습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-115">*Revision*: Assemblies with the same name, major, and minor version numbers but different revisions are intended to be fully interchangeable.</span></span> <span data-ttu-id="50e9d-116">더 높은 수정 번호가 이전에 출시 된 어셈블리의 보안 허점을 해결 하는 빌드에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-116">A higher revision number might be used in a build that fixes a security hole in a previously released assembly.</span></span>  
  
 <span data-ttu-id="50e9d-117">핫픽스 업데이트가 이전 버전의 빌드 또는 수정 버전 번호에 의해서만 달라 지는 이후 버전의 어셈블리로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-117">Subsequent versions of an assembly that differ only by build or revision numbers are considered to be Hotfix updates of the prior version.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="50e9d-118">변수의 <xref:System.Version> 속성 없습니다 명시적으로 할당 된 값이 정의 되지 않은 (-1).</span><span class="sxs-lookup"><span data-stu-id="50e9d-118">The value of <xref:System.Version> properties that have not been explicitly assigned a value is undefined (-1).</span></span>  
  
 <span data-ttu-id="50e9d-119">.NET Framework 2.0을 시작 합니다 <xref:System.Version.MajorRevision%2A> 및 <xref:System.Version.MinorRevision%2A> 속성을 사용 하면 예를 들어, 영구적인 해결책에 놓을 때까지 문제를 해결 하는 응용 프로그램의 임시 버전을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-119">Starting with .NET Framework 2.0, the <xref:System.Version.MajorRevision%2A> and <xref:System.Version.MinorRevision%2A> properties enable you to identify a temporary version of your application that, for example, corrects a problem until you can release a permanent solution.</span></span>  <span data-ttu-id="50e9d-120">Windows NT 운영 체제는 또한는 <xref:System.Version.MajorRevision%2A> 서비스 팩 번호를 인코딩할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-120">Furthermore, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.</span></span>  
  
## <a name="assigning-version-information-to-assemblies"></a><span data-ttu-id="50e9d-121">어셈블리에 버전 정보를 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-121">Assigning Version Information to Assemblies</span></span>  
 <span data-ttu-id="50e9d-122">일반적으로 <xref:System.Version> 클래스는 어셈블리에 버전 번호를 할당 하려면 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-122">Ordinarily, the <xref:System.Version> class is not used to assign a version number to an assembly.</span></span> <span data-ttu-id="50e9d-123">대신는 <xref:System.Reflection.AssemblyVersionAttribute> 클래스는이 항목의 예제에에서 나온 것 처럼 어셈블리의 버전을 정의 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-123">Instead, the <xref:System.Reflection.AssemblyVersionAttribute> class is used to define an assembly's version, as illustrated by the example in this topic.</span></span>  
  
## <a name="retrieving-version-information"></a><span data-ttu-id="50e9d-124">버전 정보 검색</span><span class="sxs-lookup"><span data-stu-id="50e9d-124">Retrieving Version Information</span></span>  
 <span data-ttu-id="50e9d-125"><xref:System.Version> 개체는 가장 자주 일부 시스템 또는 응용 프로그램 구성 요소 (예: 운영 체제), 공용 언어 런타임, 현재 응용 프로그램의 실행 파일 또는 특정 어셈블리에 대 한 버전 정보를 저장 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-125"><xref:System.Version> objects are most frequently used to store version information about some system or application component (such as the operating system), the common language runtime, the current application's executable, or a particular assembly.</span></span> <span data-ttu-id="50e9d-126">다음 예제에서는 몇 가지 가장 일반적인 시나리오를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-126">The following examples illustrate some of the most common scenarios:</span></span>  
  
-   <span data-ttu-id="50e9d-127">운영 체제 버전을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-127">Retrieving the operating system version.</span></span> <span data-ttu-id="50e9d-128">다음 예제에서는 <xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType> 운영 체제의 버전 번호를 검색할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-128">The following example uses the <xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType> property to retrieve the version number of the operating system.</span></span>  
  
     [!code-csharp[System.Version.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#1)]
     [!code-vb[System.Version.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#1)]  
  
-   <span data-ttu-id="50e9d-129">공용 언어 런타임의 버전을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-129">Retrieving the version of the common language runtime.</span></span> <span data-ttu-id="50e9d-130">다음 예제에서는 <xref:System.Environment.Version%2A?displayProperty=nameWithType> 속성을 공용 언어 런타임 버전 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-130">The following example uses the <xref:System.Environment.Version%2A?displayProperty=nameWithType> property to retrieve version information about the common language runtime.</span></span>  
  
     [!code-csharp[System.Version.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#2)]
     [!code-vb[System.Version.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#2)]  
  
-   <span data-ttu-id="50e9d-131">현재 응용 프로그램의 어셈블리 버전을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-131">Retrieving the current application's assembly version.</span></span> <span data-ttu-id="50e9d-132">다음 예제에서는 합니다 <xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType> 에 대 한 참조를 얻는 메서드를는 <xref:System.Reflection.Assembly> 해당 어셈블리 버전 번호를 검색 한 다음 응용 프로그램 실행을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-132">The following example uses the <xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType> method to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the application executable and then retrieves its assembly version number.</span></span>  
  
     [!code-csharp[System.Version.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentapp.cs#5)]
     [!code-vb[System.Version.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentapp.vb#5)]  
  
-   <span data-ttu-id="50e9d-133">현재 어셈블리의 어셈블리 버전을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-133">Retrieving the current assembly's assembly version.</span></span> <span data-ttu-id="50e9d-134">다음 예제에서는 합니다 <xref:System.Type.Assembly%2A?displayProperty=nameWithType> 속성에 대 한 참조를 가져오려면는 <xref:System.Reflection.Assembly> 응용 프로그램 진입점을 포함 하 고 그런 다음 해당 버전 정보를 검색 하는 어셈블리를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-134">The following example uses the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the assembly that contains the application entry point, and then retrieves its version information.</span></span>  
  
     [!code-csharp[System.Version.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentassem.cs#4)]
     [!code-vb[System.Version.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentassem.vb#4)]  
  
-   <span data-ttu-id="50e9d-135">특정 어셈블리의 버전을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-135">Retrieving the version of a specific assembly.</span></span> <span data-ttu-id="50e9d-136">다음 예제에서는 합니다 <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType> 에 대 한 참조를 얻는 메서드를는 <xref:System.Reflection.Assembly> 에 특정 파일 이름, 한 다음 해당 버전 정보를 검색 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-136">The following example uses the <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType> method to obtain a reference to an <xref:System.Reflection.Assembly> object that has a particular file name, and then retrieves its version information.</span></span> <span data-ttu-id="50e9d-137">몇 가지 다른 방법도 인스턴스화할 수 있는지 참고는 <xref:System.Reflection.Assembly> 파일 이름 또는 강력한 이름으로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-137">Note that several other methods also exist to instantiate an <xref:System.Reflection.Assembly> object by file name or by strong name.</span></span>  
  
     [!code-csharp[System.Version.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/specificassem.cs#3)]
     [!code-vb[System.Version.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/specificassem.vb#3)]  
  
-   <span data-ttu-id="50e9d-138">ClickOnce 응용 프로그램의 게시 버전을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-138">Retrieving the Publish Version of a ClickOnce application.</span></span> <span data-ttu-id="50e9d-139">다음 예제에서는 <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType> 속성을 응용 프로그램의 게시 버전을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-139">The following example uses the <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType> property to display an application's Publish Version.</span></span> <span data-ttu-id="50e9d-140">성공적으로 실행 예제의 응용 프로그램 id를 설정할 필요는 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-140">Note that its successful execution requires the example's application identity to be set.</span></span> <span data-ttu-id="50e9d-141">이 작업은 Visual Studio 게시 마법사가 자동으로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-141">This is handled automatically by the Visual Studio Publish Wizard.</span></span>  
  
     [!code-csharp[System.Version.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/clickonce.cs#7)]
     [!code-vb[System.Version.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/clickonce.vb#7)]  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="50e9d-142">ClickOnce 배포를 위한 응용 프로그램의 게시 버전은 완전히 별개의 어셈블리 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-142">The Publish Version of an application for ClickOnce deployment is completely independent of its assembly version.</span></span>  
  
## <a name="comparing-version-objects"></a><span data-ttu-id="50e9d-143">버전 개체를 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-143">Comparing Version Objects</span></span>  
 <span data-ttu-id="50e9d-144">사용할 수는 <xref:System.Version.CompareTo%2A> 여부를 결정 하는 방법 <xref:System.Version> 개체 보다 이전 인지, 동일한, 또는 두 번째 이후 <xref:System.Version> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-144">You can use the <xref:System.Version.CompareTo%2A> method to determine whether one <xref:System.Version> object is earlier than, the same as, or later than a second <xref:System.Version> object.</span></span> <span data-ttu-id="50e9d-145">다음 예제에서는 버전 2.1 버전 2.0 이상의 임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-145">The following example indicates that Version 2.1 is later than Version 2.0.</span></span>  
  
 [!code-csharp[System.Version.Class.Comparing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons1.cs#1)]
 [!code-vb[System.Version.Class.Comparing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons1.vb#1)]  
  
 <span data-ttu-id="50e9d-146">주 버전, 같음, 되도록 두 버전에 대 한 부, 빌드 및 수정 번호 첫 번째 <xref:System.Version> 개체의 두 번째 동일 해야 합니다. <xref:System.Version> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-146">For two versions to be equal, the major, minor, build, and revision numbers of the first <xref:System.Version> object must be identical to those of the second <xref:System.Version> object.</span></span> <span data-ttu-id="50e9d-147">경우의 빌드 또는 수정 버전 번호를 <xref:System.Version> 개체 정의 되어 있지는 <xref:System.Version> 개체 보다 이전으로 간주 됩니다는 <xref:System.Version> 해당 빌드를 개체 또는 수정 번호 0입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-147">If the build or revision number of a <xref:System.Version> object is undefined, that <xref:System.Version> object is considered to be earlier than a <xref:System.Version> object whose build or revision number is equal to zero.</span></span> <span data-ttu-id="50e9d-148">다음 예제에서는 3 개를 비교 하 여이 보여 줍니다 <xref:System.Version> 버전 구성 요소 정의 되지 않은 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-148">The following example illustrates this by comparing three <xref:System.Version> objects that have undefined version components.</span></span>  
  
 [!code-csharp[System.Version.Class.Comparing#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons2.cs#2)]
 [!code-vb[System.Version.Class.Comparing#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons2.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="50e9d-149">다음 예제에서는 <xref:System.Reflection.AssemblyVersionAttribute> 특성을 어셈블리에 버전 번호를 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-149">The following example uses the <xref:System.Reflection.AssemblyVersionAttribute> attribute to assign a version number to an assembly.</span></span> <span data-ttu-id="50e9d-150">컴파일 타임에이 버전 정보는 어셈블리의 메타 데이터를 사용 하 여 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-150">At compile time, this version information is stored with the assembly's metadata.</span></span> <span data-ttu-id="50e9d-151">예제에서는 런타임 시 변수의 값을 검색 합니다는 <xref:System.Type.Assembly%2A?displayProperty=nameWithType> 형식의 속성을 실행 중인 어셈블리에 대 한 참조를 가져올 어셈블리에서 찾은에서 어셈블리의 버전 정보를 검색 하는 <xref:System.Reflection.AssemblyName.Version%2A> 의 속성은 <xref:System.Reflection.AssemblyName> 반환 된 개체는 <xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="50e9d-151">At run time, the example retrieves the value of the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property on a type found in the assembly to get a reference to the executing assembly, and it retrieves the assembly's version information from the <xref:System.Reflection.AssemblyName.Version%2A> property of the <xref:System.Reflection.AssemblyName> object returned by the <xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Version.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/example1.cs#6)]
 [!code-vb[System.Version.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/example1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="50e9d-152">지정된 주 버전, 부 버전, 빌드 버전 및 수정 버전 번호를 사용하여 <see cref="T:System.Version" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-152">Initializes a new instance of the <see cref="T:System.Version" /> class with the specified major, minor, build, and revision numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="50e9d-153"><see cref="T:System.Version" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-153">Initializes a new instance of the <see cref="T:System.Version" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-154">이 생성자는 <xref:System.Version> 다음 속성 값을 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-154">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="50e9d-155">속성</span><span class="sxs-lookup"><span data-stu-id="50e9d-155">Property</span></span>|<span data-ttu-id="50e9d-156">값</span><span class="sxs-lookup"><span data-stu-id="50e9d-156">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|<span data-ttu-id="50e9d-157">0</span><span class="sxs-lookup"><span data-stu-id="50e9d-157">0</span></span>|  
|<xref:System.Version.Minor%2A>|<span data-ttu-id="50e9d-158">0</span><span class="sxs-lookup"><span data-stu-id="50e9d-158">0</span></span>|  
|<xref:System.Version.Build%2A>|<span data-ttu-id="50e9d-159">정의 되지 않은 (-1)</span><span class="sxs-lookup"><span data-stu-id="50e9d-159">undefined (-1)</span></span>|  
|<xref:System.Version.Revision%2A>|<span data-ttu-id="50e9d-160">정의 되지 않은 (-1)</span><span class="sxs-lookup"><span data-stu-id="50e9d-160">undefined (-1)</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (version As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(System::String ^ version);" />
      <MemberSignature Language="F#" Value="new Version : string -&gt; Version" Usage="new System.Version version" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version"><span data-ttu-id="50e9d-161">각 번호가 마침표('.')로 구분된 주 버전, 부 버전, 빌드 버전 및 수정 버전이 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-161">A string containing the major, minor, build, and revision numbers, where each number is delimited with a period character ('.').</span></span></param>
        <summary><span data-ttu-id="50e9d-162">지정된 문자열을 사용하여 <see cref="T:System.Version" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-162">Initializes a new instance of the <see cref="T:System.Version" /> class using the specified string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-163">`version` 매개 변수에 구성 요소가 주 버전, 부 버전, 빌드에 포함할 수 및 해당 순서 및 마침표로 구분 하 여 모든 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-163">The `version` parameter can contain only the components major, minor, build, and revision, in that order, and all separated by periods.</span></span> <span data-ttu-id="50e9d-164">두 개 이상의 구성 요소 및 네 개 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-164">There must be at least two components, and at most four.</span></span> <span data-ttu-id="50e9d-165">처음 두 구성 요소는 주 버전과 부 버전으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-165">The first two components are assumed to be major and minor.</span></span> <span data-ttu-id="50e9d-166">지정 되지 않은 구성 요소의 값이 정의 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-166">The value of unspecified components is undefined.</span></span>  
  
 <span data-ttu-id="50e9d-167">버전 번호의 형식은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-167">The format of the version number is as follows.</span></span> <span data-ttu-id="50e9d-168">선택적 구성 요소는 대괄호 안에 표시 됩니다 ('[' 및 ']').</span><span class="sxs-lookup"><span data-stu-id="50e9d-168">Optional components are shown in square brackets ('[' and ']'):</span></span>  
  
 <span data-ttu-id="50e9d-169">주 버전.부 버전[.빌드 버전[.수정 버전]]</span><span class="sxs-lookup"><span data-stu-id="50e9d-169">major.minor[.build[.revision]]</span></span>  
  
 <span data-ttu-id="50e9d-170">정의 된 모든 구성 요소에는 0 보다 크거나 정수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-170">All defined components must be integers greater than or equal to 0.</span></span> <span data-ttu-id="50e9d-171">예를 들어 주 번호 6 인 경우 부 버전 번호가 2, 빌드 번호는 1 이며 수정 번호 3 다음 `version` "6.2.1.3" 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-171">For example, if the major number is 6, the minor number is 2, the build number is 1, and the revision number is 3, then `version` should be "6.2.1.3".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="50e9d-172"><paramref name="version" />에 하나 이하 또는 다섯 개 이상의 구성 요소가 들어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="50e9d-172"><paramref name="version" /> has fewer than two components or more than four components.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="50e9d-173"><paramref name="version" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-173"><paramref name="version" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="50e9d-174">주 버전, 부 버전, 빌드 버전 또는 수정 버전의 구성 요소가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="50e9d-174">A major, minor, build, or revision component is less than zero.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="50e9d-175">하나 이상의 <paramref name="version" /> 구성 요소가 정수로 구문 분석되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="50e9d-175">At least one component of <paramref name="version" /> does not parse to an integer.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="50e9d-176">하나 이상의 <paramref name="version" /> 구성 요소가 <see cref="F:System.Int32.MaxValue" />보다 큰 수를 나타내는 경우</span><span class="sxs-lookup"><span data-stu-id="50e9d-176">At least one component of <paramref name="version" /> represents a number greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (int major, int minor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 major, int32 minor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (major As Integer, minor As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(int major, int minor);" />
      <MemberSignature Language="F#" Value="new Version : int * int -&gt; Version" Usage="new System.Version (major, minor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="major"><span data-ttu-id="50e9d-177">주 버전 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-177">The major version number.</span></span></param>
        <param name="minor"><span data-ttu-id="50e9d-178">부 버전 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-178">The minor version number.</span></span></param>
        <summary><span data-ttu-id="50e9d-179">지정된 주 버전 및 부 버전 값을 사용하여 <see cref="T:System.Version" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-179">Initializes a new instance of the <see cref="T:System.Version" /> class using the specified major and minor values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-180">이 생성자는 <xref:System.Version> 다음 속성 값을 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-180">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="50e9d-181">속성</span><span class="sxs-lookup"><span data-stu-id="50e9d-181">Property</span></span>|<span data-ttu-id="50e9d-182">값</span><span class="sxs-lookup"><span data-stu-id="50e9d-182">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|`major`|  
|<xref:System.Version.Minor%2A>|`minor`|  
|<xref:System.Version.Build%2A>|<span data-ttu-id="50e9d-183">정의 되지 않은 (-1)</span><span class="sxs-lookup"><span data-stu-id="50e9d-183">undefined (-1)</span></span>|  
|<xref:System.Version.Revision%2A>|<span data-ttu-id="50e9d-184">정의 되지 않은 (-1)</span><span class="sxs-lookup"><span data-stu-id="50e9d-184">undefined (-1)</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="50e9d-185"><paramref name="major" /> 또는 <paramref name="minor" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-185"><paramref name="major" /> or <paramref name="minor" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (int major, int minor, int build);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 major, int32 minor, int32 build) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (major As Integer, minor As Integer, build As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(int major, int minor, int build);" />
      <MemberSignature Language="F#" Value="new Version : int * int * int -&gt; Version" Usage="new System.Version (major, minor, build)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
        <Parameter Name="build" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="major"><span data-ttu-id="50e9d-186">주 버전 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-186">The major version number.</span></span></param>
        <param name="minor"><span data-ttu-id="50e9d-187">부 버전 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-187">The minor version number.</span></span></param>
        <param name="build"><span data-ttu-id="50e9d-188">빌드 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-188">The build number.</span></span></param>
        <summary><span data-ttu-id="50e9d-189">지정된 주 버전, 부 버전 및 빌드 버전 값을 사용하여 <see cref="T:System.Version" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-189">Initializes a new instance of the <see cref="T:System.Version" /> class using the specified major, minor, and build values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-190">이 생성자는 <xref:System.Version> 다음 속성 값을 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-190">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="50e9d-191">속성</span><span class="sxs-lookup"><span data-stu-id="50e9d-191">Property</span></span>|<span data-ttu-id="50e9d-192">값</span><span class="sxs-lookup"><span data-stu-id="50e9d-192">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|`major`|  
|<xref:System.Version.Minor%2A>|`minor`|  
|<xref:System.Version.Build%2A>|`build`|  
|<xref:System.Version.Revision%2A>|<span data-ttu-id="50e9d-193">정의 되지 않은 (-1)</span><span class="sxs-lookup"><span data-stu-id="50e9d-193">undefined (-1)</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="50e9d-194"><paramref name="major" />, <paramref name="minor" /> 또는 <paramref name="build" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-194"><paramref name="major" />, <paramref name="minor" />, or <paramref name="build" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (int major, int minor, int build, int revision);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 major, int32 minor, int32 build, int32 revision) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (major As Integer, minor As Integer, build As Integer, revision As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(int major, int minor, int build, int revision);" />
      <MemberSignature Language="F#" Value="new Version : int * int * int * int -&gt; Version" Usage="new System.Version (major, minor, build, revision)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
        <Parameter Name="build" Type="System.Int32" />
        <Parameter Name="revision" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="major"><span data-ttu-id="50e9d-195">주 버전 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-195">The major version number.</span></span></param>
        <param name="minor"><span data-ttu-id="50e9d-196">부 버전 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-196">The minor version number.</span></span></param>
        <param name="build"><span data-ttu-id="50e9d-197">빌드 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-197">The build number.</span></span></param>
        <param name="revision"><span data-ttu-id="50e9d-198">수정 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-198">The revision number.</span></span></param>
        <summary><span data-ttu-id="50e9d-199">지정된 주 버전, 부 버전, 빌드 버전 및 수정 버전 번호를 사용하여 <see cref="T:System.Version" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-199">Initializes a new instance of the <see cref="T:System.Version" /> class with the specified major, minor, build, and revision numbers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-200">이 생성자는 <xref:System.Version> 다음 속성 값을 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-200">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="50e9d-201">속성</span><span class="sxs-lookup"><span data-stu-id="50e9d-201">Property</span></span>|<span data-ttu-id="50e9d-202">값</span><span class="sxs-lookup"><span data-stu-id="50e9d-202">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|`major`|  
|<xref:System.Version.Minor%2A>|`minor`|  
|<xref:System.Version.Build%2A>|`build`|  
|<xref:System.Version.Revision%2A>|`revision`|  
  
   
  
## Examples  
 <span data-ttu-id="50e9d-203">다음 코드 예제는 <xref:System.Version.%23ctor%2A> 생성자 및 <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>를 <xref:System.Version.MajorRevision%2A>, 및 <xref:System.Version.MinorRevision%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="50e9d-203">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="50e9d-204"><paramref name="major" />, <paramref name="minor" />, <paramref name="build" /> 또는 <paramref name="revision" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-204"><paramref name="major" />, <paramref name="minor" />, <paramref name="build" />, or <paramref name="revision" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public int Build { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Build" />
      <MemberSignature Language="DocId" Value="P:System.Version.Build" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Build As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Build { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Build : int" Usage="System.Version.Build" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50e9d-205">현재 <see cref="T:System.Version" /> 개체에 대한 버전 번호의 빌드 버전 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-205">Gets the value of the build component of the version number for the current <see cref="T:System.Version" /> object.</span></span></summary>
        <value><span data-ttu-id="50e9d-206">빌드 번호이며 빌드 번호가 정의되지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-206">The build number, or -1 if the build number is undefined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-207">예를 들어, 버전 번호를 6.2.1.3 경우 빌드 번호는 1입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-207">For example, if the version number is 6.2.1.3, the build number is 1.</span></span> <span data-ttu-id="50e9d-208">6.2 버전 번호가 사용 하는 경우 빌드 번호가 정의 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-208">If the version number is 6.2, the build number is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50e9d-209">다음 코드 예제는 <xref:System.Version.%23ctor%2A> 생성자 및 <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>를 <xref:System.Version.MajorRevision%2A>, 및 <xref:System.Version.MinorRevision%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="50e9d-209">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="version.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="50e9d-210">현재 <see cref="T:System.Version" /> 개체와 같은 값을 갖는 새 <see cref="T:System.Version" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-210">Returns a new <see cref="T:System.Version" /> object whose value is the same as the current <see cref="T:System.Version" /> object.</span></span></summary>
        <returns><span data-ttu-id="50e9d-211">현재 <see cref="T:System.Object" /> 개체의 복사본을 값으로 갖는 새 <see cref="T:System.Version" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-211">A new <see cref="T:System.Object" /> whose values are a copy of the current <see cref="T:System.Version" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-212">반환 값 형식의 중요 한 경우 캐스팅 합니다 <xref:System.Object> 를이 메서드에 의해 반환 되는 인스턴스를 <xref:System.Version> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-212">If the type of the return value is important, cast the <xref:System.Object> instance that is returned by this method to a <xref:System.Version> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="50e9d-213">현재 <see cref="T:System.Version" /> 개체를 지정된 개체나 <see cref="T:System.Version" />과 비교하여 상대 값의 표시를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-213">Compares the current <see cref="T:System.Version" /> object to a specified object or <see cref="T:System.Version" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (version As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ version);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="version.CompareTo version" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="version"><span data-ttu-id="50e9d-214">비교할 개체 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-214">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="50e9d-215">현재 <see cref="T:System.Version" /> 개체를 지정된 개체와 비교하여 상대 값의 표시를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-215">Compares the current <see cref="T:System.Version" /> object to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="50e9d-216">다음 표와 같이 두 개체의 상대 값을 나타내는 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-216">A signed integer that indicates the relative values of the two objects, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="50e9d-217">반환 값</span><span class="sxs-lookup"><span data-stu-id="50e9d-217">Return value</span></span> 
 </term><description> <span data-ttu-id="50e9d-218">의미</span><span class="sxs-lookup"><span data-stu-id="50e9d-218">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="50e9d-219">0보다 작음</span><span class="sxs-lookup"><span data-stu-id="50e9d-219">Less than zero</span></span> 
 </term><description> <span data-ttu-id="50e9d-220">현재 <see cref="T:System.Version" /> 개체가 <paramref name="version" /> 이전의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-220">The current <see cref="T:System.Version" /> object is a version before <paramref name="version" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="50e9d-221">0</span><span class="sxs-lookup"><span data-stu-id="50e9d-221">Zero</span></span> 
 </term><description> <span data-ttu-id="50e9d-222">현재 <see cref="T:System.Version" /> 개체가 <paramref name="version" />와 같은 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-222">The current <see cref="T:System.Version" /> object is the same version as <paramref name="version" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="50e9d-223">0보다 큼</span><span class="sxs-lookup"><span data-stu-id="50e9d-223">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="50e9d-224">현재 <see cref="T:System.Version" /> 개체가 <paramref name="version" /> 이후의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-224">The current <see cref="T:System.Version" /> object is a version subsequent to <paramref name="version" />.</span></span>  
  
<span data-ttu-id="50e9d-225">또는</span><span class="sxs-lookup"><span data-stu-id="50e9d-225">-or-</span></span> 
 <span data-ttu-id="50e9d-226"><paramref name="version" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-226"><paramref name="version" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-227">구성 요소 `Version` 의 내림차순으로 정렬에: 주, 부 버전, 빌드 및 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-227">The components of `Version` in decreasing order of importance are: major, minor, build, and revision.</span></span> <span data-ttu-id="50e9d-228">알 수 없는 구성 요소를 알려진된 모든 구성 요소 보다 오래 된 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-228">An unknown component is assumed to be older than any known component.</span></span>  
  
 <span data-ttu-id="50e9d-229">예:</span><span class="sxs-lookup"><span data-stu-id="50e9d-229">For example:</span></span>  
  
-   <span data-ttu-id="50e9d-230">1.1 버전 1.1.0 버전 보다 오래 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-230">Version 1.1 is older than version 1.1.0</span></span>  
  
-   <span data-ttu-id="50e9d-231">버전 1.1 버전 1.1.1 보다 오래 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-231">Version 1.1 is older than version 1.1.1</span></span>  
  
-   <span data-ttu-id="50e9d-232">버전 1.1 1.1.2.3 버전 보다 오래 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-232">Version 1.1 is older than version 1.1.2.3</span></span>  
  
-   <span data-ttu-id="50e9d-233">1.1.2 버전이 1.1.2.4 버전 보다 이전 버전</span><span class="sxs-lookup"><span data-stu-id="50e9d-233">Version 1.1.2 is older than version 1.1.2.4</span></span>  
  
-   <span data-ttu-id="50e9d-234">1.2.5 버전이 버전 1.2.3.4 보다 최신입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-234">Version 1.2.5 is newer than version 1.2.3.4</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="50e9d-235"><paramref name="version" />이 <see cref="T:System.Version" /> 형식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="50e9d-235"><paramref name="version" /> is not of type <see cref="T:System.Version" />.</span></span></exception>
        <altmember cref="M:System.Version.CompareTo(System.Version)" />
        <altmember cref="Overload:System.Version.Equals" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (Version value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class System.Version value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.CompareTo(System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Version) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(Version ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Version -&gt; int&#xA;override this.CompareTo : Version -&gt; int" Usage="version.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Version" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="50e9d-236">현재 <see cref="T:System.Version" /> 개체와 비교할 <see cref="T:System.Version" /> 개체이거나, <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-236">A <see cref="T:System.Version" /> object to compare to the current <see cref="T:System.Version" /> object, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="50e9d-237">현재 <see cref="T:System.Version" /> 개체를 지정된 <see cref="T:System.Version" /> 개체와 비교하여 상대 값의 표시를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-237">Compares the current <see cref="T:System.Version" /> object to a specified <see cref="T:System.Version" /> object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="50e9d-238">다음 표와 같이 두 개체의 상대 값을 나타내는 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-238">A signed integer that indicates the relative values of the two objects, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="50e9d-239">반환 값</span><span class="sxs-lookup"><span data-stu-id="50e9d-239">Return value</span></span> 
 </term><description> <span data-ttu-id="50e9d-240">의미</span><span class="sxs-lookup"><span data-stu-id="50e9d-240">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="50e9d-241">0보다 작음</span><span class="sxs-lookup"><span data-stu-id="50e9d-241">Less than zero</span></span> 
 </term><description> <span data-ttu-id="50e9d-242">현재 <see cref="T:System.Version" /> 개체가 <paramref name="value" /> 이전의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-242">The current <see cref="T:System.Version" /> object is a version before <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="50e9d-243">0</span><span class="sxs-lookup"><span data-stu-id="50e9d-243">Zero</span></span> 
 </term><description> <span data-ttu-id="50e9d-244">현재 <see cref="T:System.Version" /> 개체가 <paramref name="value" />와 같은 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-244">The current <see cref="T:System.Version" /> object is the same version as <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="50e9d-245">0보다 큼</span><span class="sxs-lookup"><span data-stu-id="50e9d-245">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="50e9d-246">현재 <see cref="T:System.Version" /> 개체가 <paramref name="value" /> 이후의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-246">The current <see cref="T:System.Version" /> object is a version subsequent to <paramref name="value" />.</span></span>  
  
<span data-ttu-id="50e9d-247">또는</span><span class="sxs-lookup"><span data-stu-id="50e9d-247">-or-</span></span> 
 <span data-ttu-id="50e9d-248"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-248"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-249">이 메서드를 구현 하는 <xref:System.IComparable%601?displayProperty=nameWithType> 인터페이스 및 수행 보다 조금 더 나은 합니다 <xref:System.Version.CompareTo%2A> 메서드 unbox 필요가 없기 때문에 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-249">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface, and performs slightly better than the <xref:System.Version.CompareTo%2A> method because it does not have to unbox the `value` parameter.</span></span>  
  
 <span data-ttu-id="50e9d-250">구성 요소 `Version` 의 내림차순으로 정렬에: 주, 부 버전, 빌드 및 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-250">The components of `Version` in decreasing order of importance are: major, minor, build, and revision.</span></span> <span data-ttu-id="50e9d-251">알 수 없는 구성 요소를 알려진된 모든 구성 요소 보다 오래 된 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-251">An unknown component is assumed to be older than any known component.</span></span> <span data-ttu-id="50e9d-252">예:</span><span class="sxs-lookup"><span data-stu-id="50e9d-252">For example:</span></span>  
  
-   <span data-ttu-id="50e9d-253">1.1 버전 1.1.0 버전 보다 오래 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-253">Version 1.1 is older than version 1.1.0.</span></span>  
  
-   <span data-ttu-id="50e9d-254">버전 1.1 버전 1.1.1 보다 오래 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-254">Version 1.1 is older than version 1.1.1.</span></span>  
  
-   <span data-ttu-id="50e9d-255">버전 1.1 1.1.2.3 버전 보다 오래 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-255">Version 1.1 is older than version 1.1.2.3.</span></span>  
  
-   <span data-ttu-id="50e9d-256">버전 1.1.2 1.1.2.4 버전 보다 오래 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-256">Version 1.1.2 is older than version 1.1.2.4.</span></span>  
  
-   <span data-ttu-id="50e9d-257">1.2.5 버전 1.2.3.4 버전 보다 최신입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-257">Version 1.2.5 is newer than version 1.2.3.4.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50e9d-258">다음 코드 예제에서는 제네릭 및 제네릭이 아닌 버전을 보여 줍니다.는 `CompareTo` 여러 값 및 참조 형식에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="50e9d-258">The following code example demonstrates generic and nongeneric versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="50e9d-259">두 가지 <see cref="T:System.Version" /> 개체의 값이 같은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-259">Returns a value indicating whether two <see cref="T:System.Version" /> object represent the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="version.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="50e9d-260">현재 <see cref="T:System.Version" /> 개체와 비교할 개체이거나 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-260">An object to compare with the current <see cref="T:System.Version" /> object, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="50e9d-261">현재 <see cref="T:System.Version" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-261">Returns a value indicating whether the current <see cref="T:System.Version" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="50e9d-262">현재 <see cref="T:System.Version" /> 개체와 <paramref name="obj" />가 <see cref="T:System.Version" /> 개체이고 현재 <see cref="T:System.Version" /> 개체의 모든 구성 요소가 <paramref name="obj" />의 해당 구성 요소와 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-262"><see langword="true" /> if the current <see cref="T:System.Version" /> object and <paramref name="obj" /> are both <see cref="T:System.Version" /> objects, and every component of the current <see cref="T:System.Version" /> object matches the corresponding component of <paramref name="obj" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Version obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Version obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Equals(System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Version ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : Version -&gt; bool" Usage="version.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Version" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="50e9d-263">현재 <see cref="T:System.Version" /> 개체와 비교할 <see cref="T:System.Version" /> 개체이거나, <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-263">A <see cref="T:System.Version" /> object to compare to the current <see cref="T:System.Version" /> object, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="50e9d-264">현재 <see cref="T:System.Version" /> 개체와 지정된 <see cref="T:System.Version" /> 개체의 값이 같은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-264">Returns a value indicating whether the current <see cref="T:System.Version" /> object and a specified <see cref="T:System.Version" /> object represent the same value.</span></span></summary>
        <returns><span data-ttu-id="50e9d-265">현재 <see cref="T:System.Version" /> 개체의 모든 구성 요소가 <paramref name="obj" /> 매개 변수의 해당 구성 요소와 일치히면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-265"><see langword="true" /> if every component of the current <see cref="T:System.Version" /> object matches the corresponding component of the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-266">이 메서드를 구현 하는 <xref:System.IEquatable%601> 인터페이스 및 수행 보다 조금 더 나은 합니다 <xref:System.Version.Equals%2A> 메서드 unbox 필요가 없기 때문에 `obj` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-266">This method implements the <xref:System.IEquatable%601> interface, and performs slightly better than the <xref:System.Version.Equals%2A> method because it does not have to unbox the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="Overload:System.Version.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="version.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="50e9d-267">현재 <see cref="T:System.Version" /> 개체의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-267">Returns a hash code for the current <see cref="T:System.Version" /> object.</span></span></summary>
        <returns><span data-ttu-id="50e9d-268">부호 있는 32비트 정수 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-268">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="50e9d-269">다음 코드 예제는 <xref:System.Version.%23ctor%2A> 생성자 및 <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>를 <xref:System.Version.MajorRevision%2A>, 및 <xref:System.Version.MinorRevision%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="50e9d-269">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Major">
      <MemberSignature Language="C#" Value="public int Major { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Major" />
      <MemberSignature Language="DocId" Value="P:System.Version.Major" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Major As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Major { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Major : int" Usage="System.Version.Major" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50e9d-270">현재 <see cref="T:System.Version" /> 개체에 대한 버전 번호의 주 버전 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-270">Gets the value of the major component of the version number for the current <see cref="T:System.Version" /> object.</span></span></summary>
        <value><span data-ttu-id="50e9d-271">주 버전 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-271">The major version number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-272">예를 들어, 버전 번호를 6.2 인 경우 주 버전은 6입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-272">For example, if the version number is 6.2, the major version is 6.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorRevision">
      <MemberSignature Language="C#" Value="public short MajorRevision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 MajorRevision" />
      <MemberSignature Language="DocId" Value="P:System.Version.MajorRevision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MajorRevision As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short MajorRevision { short get(); };" />
      <MemberSignature Language="F#" Value="member this.MajorRevision : int16" Usage="System.Version.MajorRevision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50e9d-273">수정 버전 번호의 상위 16비트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-273">Gets the high 16 bits of the revision number.</span></span></summary>
        <value><span data-ttu-id="50e9d-274">16비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-274">A 16-bit signed integer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-275">영구 솔루션에 놓을 때까지 일시적으로 문제를 해결 하려면 응용 프로그램의 중간 버전을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-275">Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</span></span> <span data-ttu-id="50e9d-276">임시 버전은 새 수정 버전 번호를 보증 하지는 없지만 다른 버전으로 식별 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-276">The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</span></span> <span data-ttu-id="50e9d-277">이 경우 32 비트 수정 번호를 상위 및 하위 16 비트 부분 식별 정보를 인코딩하십시오.</span><span class="sxs-lookup"><span data-stu-id="50e9d-277">In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</span></span> <span data-ttu-id="50e9d-278">사용 하 여는 <xref:System.Version.Revision%2A> 전체 수정 버전 번호를 사용 하 여 가져올 속성을 <xref:System.Version.MajorRevision%2A> 상위 16 비트를 사용 하는 속성을 <xref:System.Version.MinorRevision%2A> 하위 16 비트를 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-278">Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.</span></span>  
  
 <span data-ttu-id="50e9d-279">.NET Framework 버전 2.0에서 운영 체제에서는 Windows NT부터는 <xref:System.Version.MajorRevision%2A> 서비스 팩 번호를 인코딩할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-279">Starting in the .NET Framework version 2.0, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50e9d-280">다음 코드 예제는 <xref:System.Version.%23ctor%2A> 생성자 및 <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>를 <xref:System.Version.MajorRevision%2A>, 및 <xref:System.Version.MinorRevision%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="50e9d-280">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and the <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Version.MinorRevision" />
      </Docs>
    </Member>
    <Member MemberName="Minor">
      <MemberSignature Language="C#" Value="public int Minor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minor" />
      <MemberSignature Language="DocId" Value="P:System.Version.Minor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minor { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minor : int" Usage="System.Version.Minor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50e9d-281">현재 <see cref="T:System.Version" /> 개체에 대한 버전 번호의 부 버전 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-281">Gets the value of the minor component of the version number for the current <see cref="T:System.Version" /> object.</span></span></summary>
        <value><span data-ttu-id="50e9d-282">부 버전 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-282">The minor version number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-283">예를 들어, 버전 번호를 6.2 인 경우 부 버전은 2.</span><span class="sxs-lookup"><span data-stu-id="50e9d-283">For example, if the version number is 6.2, the minor version is 2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50e9d-284">다음 코드 예제는 <xref:System.Version.%23ctor%2A> 생성자 및 <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>를 <xref:System.Version.MajorRevision%2A>, 및 <xref:System.Version.MinorRevision%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="50e9d-284">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorRevision">
      <MemberSignature Language="C#" Value="public short MinorRevision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 MinorRevision" />
      <MemberSignature Language="DocId" Value="P:System.Version.MinorRevision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorRevision As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short MinorRevision { short get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorRevision : int16" Usage="System.Version.MinorRevision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50e9d-285">수정 버전 번호의 하위 16비트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-285">Gets the low 16 bits of the revision number.</span></span></summary>
        <value><span data-ttu-id="50e9d-286">16비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-286">A 16-bit signed integer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-287">영구 솔루션에 놓을 때까지 일시적으로 문제를 해결 하려면 응용 프로그램의 중간 버전을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-287">Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</span></span> <span data-ttu-id="50e9d-288">임시 버전은 새 수정 버전 번호를 보증 하지는 없지만 다른 버전으로 식별 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-288">The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</span></span> <span data-ttu-id="50e9d-289">이 경우 32 비트 수정 번호를 상위 및 하위 16 비트 부분 식별 정보를 인코딩하십시오.</span><span class="sxs-lookup"><span data-stu-id="50e9d-289">In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</span></span> <span data-ttu-id="50e9d-290">사용 하 여는 <xref:System.Version.Revision%2A> 전체 수정 버전 번호를 사용 하 여 가져올 속성을 <xref:System.Version.MajorRevision%2A> 상위 16 비트를 사용 하는 속성을 <xref:System.Version.MinorRevision%2A> 하위 16 비트를 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-290">Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50e9d-291">다음 코드 예제는 <xref:System.Version.%23ctor%2A> 생성자 및 <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>를 <xref:System.Version.MajorRevision%2A>, 및 <xref:System.Version.MinorRevision%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="50e9d-291">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and the <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Version.MajorRevision" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_Equality(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : Version * Version -&gt; bool" Usage="v1 = v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1"><span data-ttu-id="50e9d-292">첫 번째 <see cref="T:System.Version" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-292">The first <see cref="T:System.Version" /> object.</span></span></param>
        <param name="v2"><span data-ttu-id="50e9d-293">두 번째 <see cref="T:System.Version" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-293">The second <see cref="T:System.Version" /> object.</span></span></param>
        <summary><span data-ttu-id="50e9d-294">지정된 두 <see cref="T:System.Version" /> 개체가 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-294">Determines whether two specified <see cref="T:System.Version" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="50e9d-295"><paramref name="v1" />이 <paramref name="v2" />와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-295"><see langword="true" /> if <paramref name="v1" /> equals <paramref name="v2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="50e9d-296">이 연산자에 대 한 해당 메서드는 <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="50e9d-296">The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_GreaterThan(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Version * Version -&gt; bool" Usage="v1 &gt; v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1"><span data-ttu-id="50e9d-297">첫 번째 <see cref="T:System.Version" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-297">The first <see cref="T:System.Version" /> object.</span></span></param>
        <param name="v2"><span data-ttu-id="50e9d-298">두 번째 <see cref="T:System.Version" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-298">The second <see cref="T:System.Version" /> object.</span></span></param>
        <summary><span data-ttu-id="50e9d-299">지정된 첫 번째 <see cref="T:System.Version" /> 개체가 지정된 두 번째 <see cref="T:System.Version" /> 개체보다 큰지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-299">Determines whether the first specified <see cref="T:System.Version" /> object is greater than the second specified <see cref="T:System.Version" /> object.</span></span></summary>
        <returns><span data-ttu-id="50e9d-300"><see langword="true" />이 <paramref name="v1" />보다 크면 <paramref name="v2" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-300"><see langword="true" /> if <paramref name="v1" /> is greater than <paramref name="v2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="50e9d-301">이 연산자에 대 한 해당 메서드는 <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="50e9d-301">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Version * Version -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1"><span data-ttu-id="50e9d-302">첫 번째 <see cref="T:System.Version" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-302">The first <see cref="T:System.Version" /> object.</span></span></param>
        <param name="v2"><span data-ttu-id="50e9d-303">두 번째 <see cref="T:System.Version" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-303">The second <see cref="T:System.Version" /> object.</span></span></param>
        <summary><span data-ttu-id="50e9d-304">지정된 첫 번째 <see cref="T:System.Version" /> 개체가 지정된 두 번째 <see cref="T:System.Version" /> 개체보다 크거나 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-304">Determines whether the first specified <see cref="T:System.Version" /> object is greater than or equal to the second specified <see cref="T:System.Version" /> object.</span></span></summary>
        <returns><span data-ttu-id="50e9d-305"><paramref name="v1" />가 <paramref name="v2" />보다 크거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-305"><see langword="true" /> if <paramref name="v1" /> is greater than or equal to <paramref name="v2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="50e9d-306">이 연산자에 대 한 해당 메서드는 <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="50e9d-306">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_Inequality(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Version * Version -&gt; bool" Usage="System.Version.op_Inequality (v1, v2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1"><span data-ttu-id="50e9d-307">첫 번째 <see cref="T:System.Version" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-307">The first <see cref="T:System.Version" /> object.</span></span></param>
        <param name="v2"><span data-ttu-id="50e9d-308">두 번째 <see cref="T:System.Version" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-308">The second <see cref="T:System.Version" /> object.</span></span></param>
        <summary><span data-ttu-id="50e9d-309">지정된 두 <see cref="T:System.Version" /> 개체가 같지 않은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-309">Determines whether two specified <see cref="T:System.Version" /> objects are not equal.</span></span></summary>
        <returns><span data-ttu-id="50e9d-310"><paramref name="v1" />이 <paramref name="v2" />와 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-310"><see langword="true" /> if <paramref name="v1" /> does not equal <paramref name="v2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="50e9d-311">이 연산자에 대 한 해당 메서드는 <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="50e9d-311">The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_LessThan(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Version * Version -&gt; bool" Usage="v1 &lt; v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1"><span data-ttu-id="50e9d-312">첫 번째 <see cref="T:System.Version" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-312">The first <see cref="T:System.Version" /> object.</span></span></param>
        <param name="v2"><span data-ttu-id="50e9d-313">두 번째 <see cref="T:System.Version" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-313">The second <see cref="T:System.Version" /> object.</span></span></param>
        <summary><span data-ttu-id="50e9d-314">지정된 첫 번째 <see cref="T:System.Version" /> 개체가 지정된 두 번째 <see cref="T:System.Version" /> 개체보다 작은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-314">Determines whether the first specified <see cref="T:System.Version" /> object is less than the second specified <see cref="T:System.Version" /> object.</span></span></summary>
        <returns><span data-ttu-id="50e9d-315"><paramref name="v1" />가 <paramref name="v2" />보다 작으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-315"><see langword="true" /> if <paramref name="v1" /> is less than <paramref name="v2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="50e9d-316">이 연산자에 대 한 해당 메서드는 <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="50e9d-316">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="50e9d-317"><paramref name="v1" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-317"><paramref name="v1" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Version * Version -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1"><span data-ttu-id="50e9d-318">첫 번째 <see cref="T:System.Version" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-318">The first <see cref="T:System.Version" /> object.</span></span></param>
        <param name="v2"><span data-ttu-id="50e9d-319">두 번째 <see cref="T:System.Version" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-319">The second <see cref="T:System.Version" /> object.</span></span></param>
        <summary><span data-ttu-id="50e9d-320">지정된 첫 번째 <see cref="T:System.Version" /> 개체가 두 번째 <see cref="T:System.Version" /> 개체보다 작거나 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-320">Determines whether the first specified <see cref="T:System.Version" /> object is less than or equal to the second <see cref="T:System.Version" /> object.</span></span></summary>
        <returns><span data-ttu-id="50e9d-321"><paramref name="v1" />가 <paramref name="v2" />보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-321"><see langword="true" /> if <paramref name="v1" /> is less than or equal to <paramref name="v2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="50e9d-322">이 연산자에 대 한 해당 메서드는 <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="50e9d-322">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="50e9d-323"><paramref name="v1" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-323"><paramref name="v1" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Version Parse (ReadOnlySpan&lt;char&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Version Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Parse(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As ReadOnlySpan(Of Char)) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Version ^ Parse(ReadOnlySpan&lt;char&gt; input);" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; -&gt; Version" Usage="System.Version.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Version Parse (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Version Parse(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Version ^ Parse(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; Version" Usage="System.Version.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="50e9d-324">변환할 버전 번호가 들어 있는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-324">A string that contains a version number to convert.</span></span></param>
        <summary><span data-ttu-id="50e9d-325">버전 번호의 문자열 표현을 해당하는 <see cref="T:System.Version" /> 개체로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-325">Converts the string representation of a version number to an equivalent <see cref="T:System.Version" /> object.</span></span></summary>
        <returns><span data-ttu-id="50e9d-326"><paramref name="input" /> 매개 변수에 지정된 버전 번호에 해당하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-326">An object that is equivalent to the version number specified in the <paramref name="input" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-327">`input` 매개 변수는 다음 형식 이어야 합니다.:</span><span class="sxs-lookup"><span data-stu-id="50e9d-327">The `input` parameter must have the following format:</span></span>  
  
```  
  
major.minor[.build[.revision]]  
```  
  
 <span data-ttu-id="50e9d-328">여기서 *주요*를 *부*를 *빌드*, 및 *수정* 버전의 문자열 표현을 숫자의 네 가지 구성 요소는: 주 버전 번호, 부 버전 번호, 빌드 번호 및 수정 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-328">where *major*, *minor*, *build*, and *revision* are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</span></span> <span data-ttu-id="50e9d-329">선택적 구성 요소는 대괄호 안에 표시 됩니다 ([및]).</span><span class="sxs-lookup"><span data-stu-id="50e9d-329">Optional components are shown in square brackets ([ and ]).</span></span> <span data-ttu-id="50e9d-330">구성 요소가 지정 된 순서로 나타나야 하며 마침표로 구분 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-330">The components must appear in the specified order, and must be separated by periods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="50e9d-331">버전 번호의 문자열 표현을 인식 가능한 패턴을 따라야 하므로 응용 프로그램 해야 항상 사용 하 여 예외 처리를 호출할 때를 <xref:System.Version.Parse%2A> 사용자 입력을 구문 분석 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-331">Because the string representation of a version number must conform to a recognized pattern, applications should always use exception handling when calling the <xref:System.Version.Parse%2A> method to parse user input.</span></span> <span data-ttu-id="50e9d-332">호출할 수 있습니다는 <xref:System.Version.TryParse%2A> 방법 버전 번호의 문자열 표현을 구문 분석 하 고 구문 분석 작업이 성공 했는지를 나타내는 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-332">Alternatively, you can call the <xref:System.Version.TryParse%2A> method to parse the string representation of a version number and return a value that indicates whether the parse operation succeeded.</span></span>  
  
 <span data-ttu-id="50e9d-333">합니다 <xref:System.Version.Parse%2A> 메서드는 편의 메서드는 호출 하는 것과 같습니다는 <xref:System.Version.%23ctor%28System.String%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-333">The <xref:System.Version.Parse%2A> method is a convenience method; it is equivalent to calling the <xref:System.Version.%23ctor%28System.String%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50e9d-334">다음 예제에서는 <xref:System.Version.Parse%2A> 다양 한 버전 정보를 포함 하는 문자열을 구문 분석 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-334">The following example uses the <xref:System.Version.Parse%2A> method to parse a number of strings that contain version information.</span></span>  
  
 [!code-csharp[System.Version.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.parse/cs/parse1.cs#1)]
 [!code-vb[System.Version.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="50e9d-335"><paramref name="input" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-335"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="50e9d-336"><paramref name="input" />에 하나 이하 또는 다섯 개 이상의 버전 구성 요소가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="50e9d-336"><paramref name="input" /> has fewer than two or more than four version components.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="50e9d-337"><paramref name="input" />의 구성 요소 하나 이상이 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="50e9d-337">At least one component in <paramref name="input" /> is less than zero.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="50e9d-338"><paramref name="input" />의 구성 요소 하나 이상이 정수가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="50e9d-338">At least one component in <paramref name="input" /> is not an integer.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="50e9d-339"><paramref name="input" />의 구성 요소 하나 이상이 <see cref="F:System.Int32.MaxValue" />보다 큰 수를 나타내는 경우</span><span class="sxs-lookup"><span data-stu-id="50e9d-339">At least one component in <paramref name="input" /> represents a number that is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Version.ToString" />
        <altmember cref="M:System.Version.TryParse(System.String,System.Version@)" />
      </Docs>
    </Member>
    <Member MemberName="Revision">
      <MemberSignature Language="C#" Value="public int Revision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Revision" />
      <MemberSignature Language="DocId" Value="P:System.Version.Revision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Revision As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Revision { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Revision : int" Usage="System.Version.Revision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50e9d-340">현재 <see cref="T:System.Version" /> 개체에 대한 버전 번호의 수정 버전 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-340">Gets the value of the revision component of the version number for the current <see cref="T:System.Version" /> object.</span></span></summary>
        <value><span data-ttu-id="50e9d-341">수정 번호이며 수정 번호가 정의되지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-341">The revision number, or -1 if the revision number is undefined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-342">예를 들어, 버전 번호를 6.2.1.3 인 수정 번호는 3입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-342">For example, if the version number is 6.2.1.3, the revision number is 3.</span></span> <span data-ttu-id="50e9d-343">6.2 버전 번호가 사용 하는 경우 수정 번호가 정의 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-343">If the version number is 6.2, the revision number is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50e9d-344">다음 코드 예제는 <xref:System.Version.%23ctor%2A> 생성자 및 <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>를 <xref:System.Version.MajorRevision%2A>, 및 <xref:System.Version.MinorRevision%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="50e9d-344">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object version);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (version As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ version) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="50e9d-345">현재 <see cref="T:System.Version" /> 개체의 값을 해당하는 <see cref="T:System.String" /> 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-345">Converts the value of the current <see cref="T:System.Version" /> object to its equivalent <see cref="T:System.String" /> representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="version.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="50e9d-346">현재 <see cref="T:System.Version" /> 개체의 값을 해당하는 <see cref="T:System.String" /> 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-346">Converts the value of the current <see cref="T:System.Version" /> object to its equivalent <see cref="T:System.String" /> representation.</span></span></summary>
        <returns><span data-ttu-id="50e9d-347">현재 <see cref="T:System.String" /> 개체의 주 버전, 부 버전, 빌드 버전 및 수정 버전 구성 요소의 값에 대한 <see cref="T:System.Version" /> 표현으로, 다음 형식과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-347">The <see cref="T:System.String" /> representation of the values of the major, minor, build, and revision components of the current <see cref="T:System.Version" /> object, as depicted in the following format.</span></span> <span data-ttu-id="50e9d-348">각 구성 요소는 마침표('.')로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-348">Each component is separated by a period character ('.').</span></span> <span data-ttu-id="50e9d-349">구성 요소가 정의되지 않았을 경우 반환 값에 표시되지 않는 구성 요소는 대괄호('['와 ']')로 묶습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-349">Square brackets ('[' and ']') indicate a component that will not appear in the return value if the component is not defined:</span></span> 
<span data-ttu-id="50e9d-350">주 버전.부 버전[.빌드 버전[.수정 버전]]</span><span class="sxs-lookup"><span data-stu-id="50e9d-350">major.minor[.build[.revision]]</span></span> 
<span data-ttu-id="50e9d-351">예를 들어, 생성자 <c>버전(1,1)</c>을 사용하여 <see cref="T:System.Version" /> 개체를 만드는 경우 반환되는 문자열은 "1.1"입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-351">For example, if you create a <see cref="T:System.Version" /> object using the constructor <c>Version(1,1)</c>, the returned string is "1.1".</span></span> <span data-ttu-id="50e9d-352">생성자 <c>버전(1,3,4,2)</c>를 사용하여 <see cref="T:System.Version" /> 개체를 만드는 경우 반환되는 문자열은 "1.3.4.2"입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-352">If you create a <see cref="T:System.Version" /> object using the constructor <c>Version(1,3,4,2)</c>, the returned string is "1.3.4.2".</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int fieldCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 fieldCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.ToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (fieldCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(int fieldCount);" />
      <MemberSignature Language="F#" Value="override this.ToString : int -&gt; string" Usage="version.ToString fieldCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fieldCount"><span data-ttu-id="50e9d-353">반환할 구성 요소의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-353">The number of components to return.</span></span> <span data-ttu-id="50e9d-354"><paramref name="fieldCount" />의 범위는 0에서 4까지입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-354">The <paramref name="fieldCount" /> ranges from 0 to 4.</span></span></param>
        <summary><span data-ttu-id="50e9d-355">현재 <see cref="T:System.Version" /> 개체의 값을 해당하는 <see cref="T:System.String" /> 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-355">Converts the value of the current <see cref="T:System.Version" /> object to its equivalent <see cref="T:System.String" /> representation.</span></span> <span data-ttu-id="50e9d-356">지정된 개수는 반환할 구성 요소의 수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-356">A specified count indicates the number of components to return.</span></span></summary>
        <returns><span data-ttu-id="50e9d-357">마침표('.')로 구분된 현재 <see cref="T:System.String" /> 개체의 주 버전, 부 버전, 빌드 버전 및 수정 버전 구성 요소의 값에 대한 <see cref="T:System.Version" /> 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-357">The <see cref="T:System.String" /> representation of the values of the major, minor, build, and revision components of the current <see cref="T:System.Version" /> object, each separated by a period character ('.').</span></span> <span data-ttu-id="50e9d-358"><paramref name="fieldCount" /> 매개 변수는 반환될 구성 요소의 개수를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-358">The <paramref name="fieldCount" /> parameter determines how many components are returned.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="50e9d-359">fieldCount</span><span class="sxs-lookup"><span data-stu-id="50e9d-359">fieldCount</span></span> 
 </term><description> <span data-ttu-id="50e9d-360">반환 값</span><span class="sxs-lookup"><span data-stu-id="50e9d-360">Return Value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="50e9d-361">0</span><span class="sxs-lookup"><span data-stu-id="50e9d-361">0</span></span> 
 </term><description> <span data-ttu-id="50e9d-362">빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-362">An empty string ("").</span></span>  
  
 </description></item><item><term> <span data-ttu-id="50e9d-363">1</span><span class="sxs-lookup"><span data-stu-id="50e9d-363">1</span></span> 
 </term><description> <span data-ttu-id="50e9d-364">주 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-364">major</span></span> 
 </description></item><item><term> <span data-ttu-id="50e9d-365">2</span><span class="sxs-lookup"><span data-stu-id="50e9d-365">2</span></span> 
 </term><description> <span data-ttu-id="50e9d-366">주 버전.부 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-366">major.minor</span></span> 
 </description></item><item><term> <span data-ttu-id="50e9d-367">3</span><span class="sxs-lookup"><span data-stu-id="50e9d-367">3</span></span> 
 </term><description> <span data-ttu-id="50e9d-368">주 버전.부 버전.빌드 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-368">major.minor.build</span></span> 
 </description></item><item><term> <span data-ttu-id="50e9d-369">4</span><span class="sxs-lookup"><span data-stu-id="50e9d-369">4</span></span> 
 </term><description> <span data-ttu-id="50e9d-370">주 버전.부 버전.빌드 버전.수정 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-370">major.minor.build.revision</span></span> 
 </description></item></list>  

 <span data-ttu-id="50e9d-371">예를 들어, 생성자 <c>Version(1,3,5)</c>를 사용하여 <see cref="T:System.Version" /> 개체를 만드는 경우 <c>ToString(2)</c>에서는 "1.3"이 반환되고 <c>ToString(4)</c>에서는 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-371">For example, if you create <see cref="T:System.Version" /> object using the constructor <c>Version(1,3,5)</c>, <c>ToString(2)</c> returns "1.3" and <c>ToString(4)</c> throws an exception.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="50e9d-372"><paramref name="fieldCount" />가 0보다 작거나 4보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="50e9d-372"><paramref name="fieldCount" /> is less than 0, or more than 4.</span></span>  
  
<span data-ttu-id="50e9d-373">또는</span><span class="sxs-lookup"><span data-stu-id="50e9d-373">-or-</span></span> 
 <span data-ttu-id="50e9d-374"><paramref name="fieldCount" />가 현재 <see cref="T:System.Version" /> 개체에 정의된 구성 요소의 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="50e9d-374"><paramref name="fieldCount" /> is more than the number of components defined in the current <see cref="T:System.Version" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryFormat(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  -&gt; bool" Usage="version.TryFormat (destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, int fieldCount, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, int32 fieldCount, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryFormat(System.Span{System.Char},System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), fieldCount As Integer, ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, int fieldCount, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int *  -&gt; bool" Usage="version.TryFormat (destination, fieldCount, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="fieldCount" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="fieldCount">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, out Version result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, [out] class System.Version&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryParse(System.ReadOnlySpan{System.Char},System.Version@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), ByRef result As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, [Runtime::InteropServices::Out] Version ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.Version.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="result" Type="System.Version" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out Version result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] class System.Version&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryParse(System.String,System.Version@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] Version ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.Version.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Version" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="50e9d-375">변환할 버전 번호가 들어 있는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-375">A string that contains a version number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="50e9d-376">이 메서드가 반환되면 변환에 성공한 경우 <paramref name="input" />에 포함된 숫자에 해당하는 <see cref="T:System.Version" />이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-376">When this method returns, contains the <see cref="T:System.Version" /> equivalent of the number that is contained in <paramref name="input" />, if the conversion succeeded.</span></span> <span data-ttu-id="50e9d-377"><paramref name="input" />이 <see langword="null" />인 경우 <see cref="F:System.String.Empty" />이거나 변환에 실패하는 경우 메서드가 반환되면 <paramref name="result" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-377">If <paramref name="input" /> is <see langword="null" />, <see cref="F:System.String.Empty" />, or if the conversion fails, <paramref name="result" /> is <see langword="null" /> when the method returns.</span></span></param>
        <summary><span data-ttu-id="50e9d-378">버전 번호의 문자열 표현을 해당하는 <see cref="T:System.Version" /> 개체로 변환하려고 시도하고, 변환에 성공했는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-378">Tries to convert the string representation of a version number to an equivalent <see cref="T:System.Version" /> object, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="50e9d-379"><see langword="true" /> 매개 변수가 변환되었으면 <paramref name="input" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-379"><see langword="true" /> if the <paramref name="input" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e9d-380"><xref:System.Version.TryParse%2A> 메서드는 비슷합니다는 <xref:System.Version.Parse%2A> 메서드와 변환에 실패 하면 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-380">The <xref:System.Version.TryParse%2A> method is similar to the <xref:System.Version.Parse%2A> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="50e9d-381">대신, 반환 `false` 경우 `input` 가 null 이므로 미만 두 개 이상의 네 가지 구성 요소 보다 정수가 아닌 하나 이상의 요소가 0 보다 작은 하나 이상의 구성 요소 이거나 보다큰하나이상의요소가<xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="50e9d-381">Instead, it returns `false` if `input` is null, has fewer than two or more than four components, has at least one component that is not an integer, has at least one component that is less than zero, or has at least one component that is greater than <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="50e9d-382">구문 분석 작업이 성공 하는 `input` 매개 변수는 다음과 같은 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-382">For the parse operation to succeed, the `input` parameter must be in the following format:</span></span>  
  
```  
  
major.minor[.build[.revision]]  
```  
  
 <span data-ttu-id="50e9d-383">여기서 *주요*를 *부*를 *빌드*, 및 *수정* 버전의 문자열 표현을 숫자의 네 가지 구성 요소는: 주 버전 번호, 부 버전 번호, 빌드 번호 및 수정 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-383">where *major*, *minor*, *build*, and *revision* are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</span></span> <span data-ttu-id="50e9d-384">선택적 구성 요소는 대괄호 안에 표시 됩니다 ([및]).</span><span class="sxs-lookup"><span data-stu-id="50e9d-384">Optional components are shown in square brackets ([ and ]).</span></span> <span data-ttu-id="50e9d-385">구성 요소 순서 대로 나타나야 하며 마침표로 구분 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-385">The components must appear in order, and must be separated by periods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50e9d-386">다음 예제에서는 <xref:System.Version.TryParse%2A> 다양 한 버전 정보를 포함 하는 문자열을 구문 분석 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="50e9d-386">The following example uses the <xref:System.Version.TryParse%2A> method to parse a number of strings that contain version information.</span></span>  
  
 [!code-csharp[System.Version.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.Version.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Version.Parse(System.String)" />
        <altmember cref="Overload:System.Version.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>