<Type Name="NullReferenceException" FullName="System.NullReferenceException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f1616b6e1beac61424a5de5350cb476e32d31ac" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57946296" /></Metadata><TypeSignature Language="C#" Value="public class NullReferenceException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit NullReferenceException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.NullReferenceException" />
  <TypeSignature Language="VB.NET" Value="Public Class NullReferenceException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class NullReferenceException : SystemException" />
  <TypeSignature Language="F#" Value="type NullReferenceException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bc584-101">null 개체 참조를 역참조하려고 할 때 throw되는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-101">The exception that is thrown when there is an attempt to dereference a null object reference.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc584-102">A <xref:System.NullReferenceException> 값인 형식의 멤버에 액세스 하려고 할 때 예외가 throw 됩니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-102">A <xref:System.NullReferenceException> exception is thrown when you try to access a member on a type whose value is `null`.</span></span> <span data-ttu-id="bc584-103"><xref:System.NullReferenceException> 예외에서 일반적으로 개발자 오류를 반영 하 고 다음과 같은 시나리오에서 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-103">A <xref:System.NullReferenceException> exception typically reflects developer error and is thrown in the following scenarios:</span></span>  
  
-   <span data-ttu-id="bc584-104">참조 형식을 인스턴스화할 하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-104">You've forgotten to instantiate a reference type.</span></span> <span data-ttu-id="bc584-105">다음 예에서 `names` 선언 되었지만 인스턴스화되지:</span><span class="sxs-lookup"><span data-stu-id="bc584-105">In the following example, `names` is declared but never instantiated:</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/example1.cs#1)]
     [!code-vb[System.NullReferenceException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/example1.vb#1)]  
  
     <span data-ttu-id="bc584-106">일부 컴파일러에서는이 코드를 컴파일하면 경고가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-106">Some compilers issue a warning when they compile this code.</span></span> <span data-ttu-id="bc584-107">다른 오류가 고 컴파일이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-107">Others issue an error, and the compilation fails.</span></span> <span data-ttu-id="bc584-108">이 문제를 해결 하기 위해 개체를 인스턴스화한 후 해당 값은 더 이상 있도록 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-108">To address this problem, instantiate the object so that its value is no longer `null`.</span></span> <span data-ttu-id="bc584-109">다음 예제에서는 형식의 클래스 생성자를 호출 하 여이 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-109">The following example does this by calling a type's class constructor.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/example1a.cs#2)]
     [!code-vb[System.NullReferenceException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/example1a.vb#2)]  
  
-   <span data-ttu-id="bc584-110">배열 초기화 하기 전에 차원 하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-110">You've forgotten to dimension an array before initializing it.</span></span> <span data-ttu-id="bc584-111">다음 예에서 `values` 정수 배열로 선언 됩니다 하지만 포함 된 요소 수가 지정 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-111">In the following example, `values` is declared to be an integer array, but the number of elements that it contains is never specified.</span></span> <span data-ttu-id="bc584-112">발생 하므로 해당 값을 초기화 하려는 시도 <xref:System.NullReferenceException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-112">The attempt to initialize its values therefore thrown a  <xref:System.NullReferenceException> exception.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Array3.cs#10)]
     [!code-vb[System.NullReferenceException.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Array3.vb#10)]  
  
     <span data-ttu-id="bc584-113">다음 예제와 같이 배열의 요소 수를 초기화 하기 전에 선언 하 여 예외를 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-113">You can eliminate the exception by declaring the number of elements in the array before initializing it, as the following example does.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Array4.cs#11)]
     [!code-vb[System.NullReferenceException.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Array4.vb#11)]  
  
     <span data-ttu-id="bc584-114">선언 하 고 배열 초기화에 대 한 자세한 내용은 참조 하세요. [배열을](~/docs/csharp/programming-guide/arrays/index.md) 하 고 [배열](~/docs/visual-basic/programming-guide/language-features/arrays/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-114">For more information on declaring and initializing arrays, see [Arrays](~/docs/csharp/programming-guide/arrays/index.md) and [Arrays](~/docs/visual-basic/programming-guide/language-features/arrays/index.md).</span></span>  
  
-   <span data-ttu-id="bc584-115">표시 된 **null** 메서드에서 값을 반환 하 고 다음 반환 된 형식에서 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-115">You get a **null** return value from a method, and then call a method on the returned type.</span></span> <span data-ttu-id="bc584-116">이 경우에 따라 결과인 설명서 오류입니다. 설명서가 메서드 호출을 반환할 수 못했습니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-116">This sometimes is the result of a documentation error; the documentation fails to note that a method call can return `null`.</span></span> <span data-ttu-id="bc584-117">다른 경우에 코드 잘못 가정 하는 메서드는 항상 반환 이외**null** 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-117">In other cases, your code erroneously assumes that the method will always return a non-**null** value.</span></span>  
  
     <span data-ttu-id="bc584-118">다음 예제에서 코드를 가정 합니다 <xref:System.Array.Find%2A?displayProperty=nameWithType> 메서드는 항상 반환 `Person` 개체 `FirstName` 필드 검색 문자열과 일치 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-118">The code in the following example assumes that the <xref:System.Array.Find%2A?displayProperty=nameWithType> method always returns `Person` object whose `FirstName` field matches a search string.</span></span> <span data-ttu-id="bc584-119">일치 하는 항목에 있기 때문에 런타임에서 throw 된 <xref:System.NullReferenceException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-119">Because there is no match, the runtime throws a <xref:System.NullReferenceException> exception.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/nullreturn2.cs#4)]
     [!code-vb[System.NullReferenceException.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/nullreturn2.vb#4)]  
  
     <span data-ttu-id="bc584-120">이 문제를 해결 하기 위해 있다는 것을 확인 하는 메서드의 반환 값을 테스트 `null` 를 호출 하기 전에 모든 해당 멤버의 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-120">To address this problem, test the method's return value to ensure that it is not `null` before calling any of its members, as the following example does.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/nullreturn2a.cs#5)]
     [!code-vb[System.NullReferenceException.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/nullreturn2a.vb#5)]  
  
-   <span data-ttu-id="bc584-121">식을 사용 하는 (예를 들어 연결 메서드 또는 속성의 목록을 함께) 값을 검색 하 고 값이 있는지 여부를 확인 하 고 있지만 `null`, 런타임에서 계속 throw를 <xref:System.NullReferenceException> 예외.</span><span class="sxs-lookup"><span data-stu-id="bc584-121">You're using an expression (for example, you're chaining a list of methods or properties together) to retrieve a value and, although you're checking whether the value is `null`, the runtime still throws a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="bc584-122">식의 중간 값 중 하나를 반환 하기 때문에 이런 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-122">This occurs because one of the intermediate values in the expression returns `null`.</span></span> <span data-ttu-id="bc584-123">결과적으로 테스트 `null` 계산 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-123">As a result, your test for `null` is never evaluated.</span></span>  
  
     <span data-ttu-id="bc584-124">다음 예제에서는 정의 `Pages` 에서 제공 되는 웹 페이지에 대 한 정보를 캐시 하는 개체 `Page` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-124">The following example defines a `Pages` object that  caches information about web pages, which are presented by `Page` objects.</span></span> <span data-ttu-id="bc584-125">`Example.Main` 있는지 여부를 현재 웹 페이지에 null이 아닌 제목이,이 경우 제목을 표시 하는 메서드를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-125">The `Example.Main` method checks whether the current web page has a non-null title and, if it does, displays the title.</span></span> <span data-ttu-id="bc584-126">하지만 메서드에서 throw이 검사에도 불구 하 고는 <xref:System.NullReferenceException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-126">Despite this check, however, the method throws a <xref:System.NullReferenceException> exception.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Chain1.cs#6)]
     [!code-vb[System.NullReferenceException.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Chain1.vb#6)]  
  
     <span data-ttu-id="bc584-127">때문에 예외가 throw 됩니다 `pages.CurrentPage` 반환 `null` 페이지 정보가 없는 캐시에 저장 된 경우.</span><span class="sxs-lookup"><span data-stu-id="bc584-127">The exception is thrown because `pages.CurrentPage` returns `null` if no page information is  stored in the cache.</span></span> <span data-ttu-id="bc584-128">값을 테스트 하 여이 예외를 수정할 수 있습니다 합니다 `CurrentPage` 현재 검색 하기 전에 속성 `Page` 개체의 `Title` 속성을 다음 예제와 같이 않습니다:</span><span class="sxs-lookup"><span data-stu-id="bc584-128">This exception can be corrected by testing the value of the `CurrentPage` property before retrieving the current `Page` object's `Title` property, as the following example does:</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Chain2.cs#7)]
     [!code-vb[System.NullReferenceException.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Chain2.vb#7)]  
  
-   <span data-ttu-id="bc584-129">참조 형식 및 요소 중 하나를 throw 하는 프로세스 시도 포함 하는 배열의 요소를 열거 하는 <xref:System.NullReferenceException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-129">You're enumerating the elements of an array that contains reference types, and your attempt to process one of the elements throws a <xref:System.NullReferenceException> exception.</span></span>  
  
     <span data-ttu-id="bc584-130">다음 예제에서는 문자열 배열을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-130">The following example defines a string array.</span></span> <span data-ttu-id="bc584-131">A `for` 문이 배열의 요소를 열거 하 고 각 문자열의 호출 <xref:System.String.Trim%2A> 메서드 문자열을 표시 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-131">A `for` statement enumerates the elements in the array and calls each string's <xref:System.String.Trim%2A> method before displaying the string.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Array1.cs#8)]
     [!code-vb[System.NullReferenceException.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Array1.vb#8)]  
  
     <span data-ttu-id="bc584-132">배열의 각 요소는 null이 아닌 값이 있어야 합니다. 하 고 배열 요소의 값이 실제로 가정 하는 경우이 예외가 발생 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-132">This exception occurs if you assume that each element of the array must contain a non-null value, and the value of the array element is in fact `null`.</span></span> <span data-ttu-id="bc584-133">요소 인지 여부를 테스트 하 여 예외를 제거할 수 있습니다 `null` 요소에 대 한 작업을 수행 하기 전에 다음 예제와 같이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-133">The exception can be eliminated by testing whether the element is `null` before performing any operation on that element, as the following example shows.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Array2.cs#9)]
     [!code-vb[System.NullReferenceException.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Array2.vb#9)]  
  
-   <span data-ttu-id="bc584-134">A <xref:System.NullReferenceException> 전달 되는 메서드에서 예외가 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-134">A <xref:System.NullReferenceException> exception is thrown by a method that is passed `null`.</span></span> <span data-ttu-id="bc584-135">일부 메서드는 전달 되는 인수를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-135">Some methods validate the arguments that are passed to them.</span></span> <span data-ttu-id="bc584-136">경우는 인수 중 하나가 `null`, 메서드가 throw는 <xref:System.ArgumentNullException?displayProperty=nameWithType> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-136">If they do and one of the arguments is `null`, the method throws an <xref:System.ArgumentNullException?displayProperty=nameWithType> exception.</span></span> <span data-ttu-id="bc584-137">그렇지 않으면 throw 된 <xref:System.NullReferenceException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-137">Otherwise, it throws a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="bc584-138">다음 예제에서는이 시나리오를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-138">The following example illustrates this scenario.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/example2.cs#3)]
     [!code-vb[System.NullReferenceException.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/example2.vb#3)]  
  
     <span data-ttu-id="bc584-139">이 문제를 해결 하려면 메서드에 전달 된 인수가 없습니다 인지 확인 `null`에서 throw 된 예외를 처리 하는 또는 `try…catch…finally` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-139">To address this issue, make sure that the argument passed to the method is not `null`, or handle the thrown exception in a `try…catch…finally` block.</span></span> <span data-ttu-id="bc584-140">자세한 내용은 [예외](~/docs/standard/exceptions/index.md)에 정의된 인터페이스의 private C++ 관련 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-140">For more information, see [Exceptions](~/docs/standard/exceptions/index.md).</span></span>  
  
 <span data-ttu-id="bc584-141">다음 Microsoft intermediate language (MSIL) 명령의 throw <xref:System.NullReferenceException>: `callvirt`, `cpblk`, `cpobj`, `initblk`를 `ldelem.<type>`, `ldelema`, `ldfld`, `ldflda`, `ldind.<type>` 를 `ldlen`, `stelem.<type>`를 `stfld`, `stind.<type>`를 `throw`, 및 `unbox`합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-141">The following Microsoft intermediate language (MSIL) instructions throw <xref:System.NullReferenceException>: `callvirt`, `cpblk`, `cpobj`, `initblk`, `ldelem.<type>`, `ldelema`, `ldfld`, `ldflda`, `ldind.<type>`, `ldlen`, `stelem.<type>`, `stfld`, `stind.<type>`, `throw`, and `unbox`.</span></span>  
  
 <span data-ttu-id="bc584-142"><xref:System.NullReferenceException> 값 0x80004003 HRESULT COR_E_NULLREFERENCE를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-142"><xref:System.NullReferenceException> uses the HRESULT COR_E_NULLREFERENCE, which has the value 0x80004003.</span></span>  
  
 <span data-ttu-id="bc584-143">인스턴스의 초기 속성 값의 목록을 <xref:System.NullReferenceException>, 참조는 <xref:System.NullReferenceException.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-143">For a list of initial property values for an instance of <xref:System.NullReferenceException>, see the <xref:System.NullReferenceException.%23ctor%2A> constructors.</span></span>  
  
 <span data-ttu-id="bc584-144">**릴리스 코드에서 NullReferenceException 처리**</span><span class="sxs-lookup"><span data-stu-id="bc584-144">**Handling NullReferenceException in release code**</span></span>  
  
 <span data-ttu-id="bc584-145">일반적으로 발생 후 처리를 보다 nullreferenceexception이 발생을 방지 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-145">It's usually better to avoid a NullReferenceException than to handle it after it occurs.</span></span> <span data-ttu-id="bc584-146">예외 처리로 인해 코드는 유지 관리하고 이해하기가 더 어려워지며 때로는 다른 버그가 발생할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-146">Handling an exception can make your code harder to maintain and understand, and can sometimes introduce other bugs.</span></span> <span data-ttu-id="bc584-147">NullReferenceException은 대개 복구할 수 없는 오류입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-147">A NullReferenceException is often a non-recoverable error.</span></span> <span data-ttu-id="bc584-148">이러한 경우 예외로 인해 앱이 중지되도록 하는 것이 최상의 방법일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-148">In these cases, letting the exception stop the app might be the best alternative.</span></span>  
  
 <span data-ttu-id="bc584-149">하지만 오류 처리가 유용한 경우도 많이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-149">However, there are many situations where handling the error can be useful:</span></span>  
  
-   <span data-ttu-id="bc584-150">앱에서 null 개체를 무시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-150">Your app can ignore objects that are null.</span></span> <span data-ttu-id="bc584-151">예를 들어 앱에서 데이터베이스의 레코드를 검색하고 처리하는 경우 null 개체를 발생시키는 잘못된 레코드를 무시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-151">For example, if your app retrieves and processes records in a database, you might be able to ignore some number of bad records that result in null objects.</span></span> <span data-ttu-id="bc584-152">로그 파일이나 애플리케이션 UI에 있는 잘못된 데이터를 기록하기만 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-152">Recording the bad data in a log file or in the application UI might be all you have to do.</span></span>  
  
-   <span data-ttu-id="bc584-153">예외에서 복구할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-153">You can recover from the exception.</span></span> <span data-ttu-id="bc584-154">예를 들어 참조 형식을 반환하는 웹 서비스에 대한 호출은 연결이 끊어졌거나 연결 시간이 초과된 경우 null을 반환할 수 있습니다. 연결을 다시 설정한 다음 다시 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-154">For example, a call to a web service that returns a reference type might return null if the connection is lost or the connection times out. You can attempt to reestablish the connection and try the call again.</span></span>  
  
-   <span data-ttu-id="bc584-155">앱 상태를 올바른 상태로 복원할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-155">You can restore the state of your app to a valid state.</span></span> <span data-ttu-id="bc584-156">예를 들어 NullReferenceException을 throw하는 메서드를 호출하기 전에 정보를 데이터 저장소에 저장하도록 하는 다단계 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-156">For example, you might be performing a multi-step task that requires you to save information to a data store before you call a method that throws a NullReferenceException.</span></span> <span data-ttu-id="bc584-157">초기화되지 않은 개체로 인해 데이터 레코드가 손상될 경우 앱을 종료하기 전에 이전 데이터를 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-157">If the uninitialized object would corrupt the data record, you can remove the previous data before you close the app.</span></span>  
  
-   <span data-ttu-id="bc584-158">그리고 예외 보고를 원할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-158">You want to report the exception.</span></span> <span data-ttu-id="bc584-159">예를 들어 앱 사용자의 실수로 오류가 발생한 경우 사용자가 올바른 정보를 제공할 수 있도록 도와 주는 메시지를 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-159">For example, if the error was caused by a mistake from the user of your app, you can generate a message to help him supply the correct information.</span></span> <span data-ttu-id="bc584-160">문제를 해결할 수 있도록 오류에 대한 정보를 기록할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-160">You can also log information about the error to help you fix the problem.</span></span> <span data-ttu-id="bc584-161">ASP.NET과 같은 일부 프레임워크에는 앱이 충돌하지 않도록 모든 오류를 캡처하는 수준 높은 예외 처리기가 포함되어 있습니다. 이러한 경우 예외 발생 여부를 확인할 수 있는 방법은 예외를 로깅하는 것뿐입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-161">Some frameworks, like ASP.NET, have a high-level exception handler that captures all errors to that the app never crashes; in that case, logging the exception might be the only way you can know that it occurs.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="bc584-162">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="bc584-162">Handling and Throwing Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bc584-163"><see cref="T:System.NullReferenceException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-163">Initializes a new instance of the <see cref="T:System.NullReferenceException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NullReferenceException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NullReferenceException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NullReferenceException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bc584-164"><see cref="T:System.NullReferenceException" /> 클래스의 새 인스턴스를 초기화하고, 새 인스턴스의 <see cref="P:System.Exception.Message" /> 속성을 오류를 설명하는 시스템 제공 메시지(예: "개체 인스턴스가 있어야 하는 곳에 'null' 값이 있습니다.")로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-164">Initializes a new instance of the <see cref="T:System.NullReferenceException" /> class, setting the <see cref="P:System.Exception.Message" /> property of the new instance to a system-supplied message that describes the error, such as "The value 'null' was found where an instance of an object was required."</span></span> <span data-ttu-id="bc584-165">이 메시지는 현재 시스템의 문화권을 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-165">This message takes into account the current system culture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc584-166">다음 표에서는 <xref:System.NullReferenceException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-166">The following table shows the initial property values for an instance of <xref:System.NullReferenceException>.</span></span>  
  
|<span data-ttu-id="bc584-167">속성</span><span class="sxs-lookup"><span data-stu-id="bc584-167">Property</span></span>|<span data-ttu-id="bc584-168">값</span><span class="sxs-lookup"><span data-stu-id="bc584-168">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="bc584-169">`null`.</span><span class="sxs-lookup"><span data-stu-id="bc584-169">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="bc584-170">지역화된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-170">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NullReferenceException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NullReferenceException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NullReferenceException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new NullReferenceException : string -&gt; NullReferenceException" Usage="new System.NullReferenceException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="bc584-171">오류를 설명하는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-171">A <see cref="T:System.String" /> that describes the error.</span></span> <span data-ttu-id="bc584-172"><paramref name="message" /> 내용은 사용자의 이해를 돕기 위한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-172">The content of <paramref name="message" /> is intended to be understood by humans.</span></span> <span data-ttu-id="bc584-173">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-173">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span></param>
        <summary><span data-ttu-id="bc584-174">지정된 오류 메시지를 사용하여 <see cref="T:System.NullReferenceException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-174">Initializes a new instance of the <see cref="T:System.NullReferenceException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc584-175">다음 표에서는 <xref:System.NullReferenceException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-175">The following table shows the initial property values for an instance of <xref:System.NullReferenceException>.</span></span>  
  
|<span data-ttu-id="bc584-176">속성</span><span class="sxs-lookup"><span data-stu-id="bc584-176">Property</span></span>|<span data-ttu-id="bc584-177">값</span><span class="sxs-lookup"><span data-stu-id="bc584-177">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="bc584-178">`null`.</span><span class="sxs-lookup"><span data-stu-id="bc584-178">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="bc584-179">오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-179">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NullReferenceException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NullReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NullReferenceException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new NullReferenceException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; NullReferenceException" Usage="new System.NullReferenceException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="bc584-180">serialize된 개체 데이터를 보유하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-180">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="bc584-181">원본 또는 대상에 대한 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-181">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="bc584-182">serialize된 데이터를 사용하여 <see cref="T:System.NullReferenceException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-182">Initializes a new instance of the <see cref="T:System.NullReferenceException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc584-183">deserialization을 수행하는 동안 이 생성자를 호출하여 스트림을 통해 전송될 예외 개체를 다시 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-183">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="bc584-184">자세한 내용은 [XML 및 SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-184">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="bc584-185">XML 및 SOAP Serialization</span><span class="sxs-lookup"><span data-stu-id="bc584-185">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NullReferenceException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NullReferenceException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NullReferenceException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new NullReferenceException : string * Exception -&gt; NullReferenceException" Usage="new System.NullReferenceException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="bc584-186">예외에 대한 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-186">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="bc584-187">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-187">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="bc584-188"><paramref name="innerException" /> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-188">If the <paramref name="innerException" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="bc584-189">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.NullReferenceException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-189">Initializes a new instance of the <see cref="T:System.NullReferenceException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc584-190">이전 예외의 직접적인 결과로 throw되는 예외의 <xref:System.Exception.InnerException%2A> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-190">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="bc584-191"><xref:System.Exception.InnerException%2A> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, `null` 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <xref:System.Exception.InnerException%2A>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-191">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="bc584-192">다음 표에서는 <xref:System.NullReferenceException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-192">The following table shows the initial property values for an instance of <xref:System.NullReferenceException>.</span></span>  
  
|<span data-ttu-id="bc584-193">속성</span><span class="sxs-lookup"><span data-stu-id="bc584-193">Property</span></span>|<span data-ttu-id="bc584-194">값</span><span class="sxs-lookup"><span data-stu-id="bc584-194">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="bc584-195">내부 예외 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-195">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="bc584-196">오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="bc584-196">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="bc584-197">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="bc584-197">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>