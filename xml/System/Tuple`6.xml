<Type Name="Tuple&lt;T1,T2,T3,T4,T5,T6&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4,T5,T6&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ad472dec3b20121490869f8150e8ca3c3a57af01" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58729727" /></Metadata><TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5,T6&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`6&lt;T1, T2, T3, T4, T5, T6&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`6" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5, T6)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="2cd9b-101">튜플의 첫 번째 구성 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="2cd9b-102">튜플의 두 번째 구성 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-102">The type of the tuple's second component.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="2cd9b-103">튜플의 세 번째 구성 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-103">The type of the tuple's third component.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="2cd9b-104">튜플의 네 번째 구성 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-104">The type of the tuple's fourth component.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="2cd9b-105">튜플의 다섯 번째 구성 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-105">The type of the tuple's fifth component.</span></span></typeparam>
    <typeparam name="T6"><span data-ttu-id="2cd9b-106">튜플의 여섯 번째 구성 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-106">The type of the tuple's sixth component.</span></span></typeparam>
    <summary><span data-ttu-id="2cd9b-107">6개의 요소로 구성된 튜플을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-107">Represents a 6-tuple, or sextuple.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cd9b-108">튜플은 값의 시퀀스를 특정 수 있는 데이터 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-108">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="2cd9b-109"><xref:System.Tuple%606> 클래스 나타냅니다 6-튜플 또는 6 중는 6 개 구성 요소가 있는 튜플을 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-109">The <xref:System.Tuple%606> class represents a 6-tuple, or sextuple, which is a tuple that has six components.</span></span>  
  
 <span data-ttu-id="2cd9b-110">인스턴스화할 수 있습니다는 <xref:System.Tuple%606> 중 하나를 호출 하 여 개체를 <xref:System.Tuple%606.%23ctor%2A> 또는 정적 <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-110">You can instantiate a <xref:System.Tuple%606> object by calling either the <xref:System.Tuple%606.%23ctor%2A> or the static  <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2cd9b-111">읽기 전용을 사용 하 여 튜플 구성 요소의 값을 검색할 수 있습니다 <xref:System.Tuple%606.Item1%2A>, <xref:System.Tuple%606.Item2%2A>를 <xref:System.Tuple%606.Item3%2A>, <xref:System.Tuple%606.Item4%2A>에 <xref:System.Tuple%606.Item5%2A>, 및 <xref:System.Tuple%606.Item6%2A> 인스턴스 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-111">You can retrieve the value of the tuple's components by using the read-only <xref:System.Tuple%606.Item1%2A>, <xref:System.Tuple%606.Item2%2A>, <xref:System.Tuple%606.Item3%2A>, <xref:System.Tuple%606.Item4%2A>, <xref:System.Tuple%606.Item5%2A>, and <xref:System.Tuple%606.Item6%2A> instance properties.</span></span>  
  
 <span data-ttu-id="2cd9b-112">튜플의 네 가지 방법으로 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-112">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="2cd9b-113">단일 데이터 집합을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-113">To represent a single set of data.</span></span> <span data-ttu-id="2cd9b-114">예를 들어, 튜플을 데이터베이스 레코드를 나타내고 해당 구성 요소 레코드의 개별 필드를 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-114">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="2cd9b-115">쉽게 액세스 및 조작, 데이터 집합을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-115">To provide easy access to, and manipulation of, a data set.</span></span> <span data-ttu-id="2cd9b-116">다음 예제에서는 정의 <xref:System.Tuple%606> 뉴욕시부터 2000 1960 년부터 각 인구에 대 한 인구 데이터가 포함 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-116">The following example defines a <xref:System.Tuple%606> object that contains population data for New York City for each census from 1960 through 2000.</span></span> <span data-ttu-id="2cd9b-117">6 중에 전달 되는 `ComputePopulationChange` 전체 50 년 동안의 연간 변동률 뿐만 아니라, 인구 조사 간의 연간 변동률을 계산 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-117">The sextuple is passed to the `ComputePopulationChange` method, which calculates the annual rate of change between censuses, as well as the annual rate of change for the entire 50 year period.</span></span>  
  
     [!code-csharp[System.Tuple\`6.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`6.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.class/vb/example1.vb#1)]  
  
-   <span data-ttu-id="2cd9b-118">사용 하지 않고 메서드에서 여러 값을 반환할 `out` 매개 변수 (C#) 또는 `ByRef` 매개 변수 (Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2cd9b-118">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="2cd9b-119">이전 예제에서 도시 이름과 함께 계산된 된 통계를 반환 하는 예를 들어, 한 <xref:System.Tuple%606> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-119">For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%606> object.</span></span>  
  
-   <span data-ttu-id="2cd9b-120">단일 매개 변수를 통해 메서드에 여러 값을 전달 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-120">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="2cd9b-121">예를 들어를 <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> 메서드 시작 시에 스레드가 실행 되는 메서드에 하나의 값을 제공할 수 있는 단일 매개 변수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-121">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="2cd9b-122">제공 하는 경우는 <xref:System.Tuple%606> 개체의 메서드 인수를 6 개 데이터 항목을 사용 하 여 스레드의 시작 루틴을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-122">If you supply a <xref:System.Tuple%606> object as the method argument, you can supply the thread's startup routine with six items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5, !T6 item6) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 -&gt; Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;" Usage="new System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; (item1, item2, item3, item4, item5, item6)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="2cd9b-123">튜플의 첫 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-123">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="2cd9b-124">튜플의 두 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-124">The value of the tuple's second component.</span></span></param>
        <param name="item3"><span data-ttu-id="2cd9b-125">튜플의 세 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-125">The value of the tuple's third component.</span></span></param>
        <param name="item4"><span data-ttu-id="2cd9b-126">튜플의 네 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-126">The value of the tuple's fourth component</span></span></param>
        <param name="item5"><span data-ttu-id="2cd9b-127">튜플의 다섯 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-127">The value of the tuple's fifth component.</span></span></param>
        <param name="item6"><span data-ttu-id="2cd9b-128">튜플의 여섯 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-128">The value of the tuple's sixth component.</span></span></param>
        <summary><span data-ttu-id="2cd9b-129"><see cref="T:System.Tuple`6" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-129">Initializes a new instance of the <see cref="T:System.Tuple`6" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cd9b-130">정적 사용할 수도 있습니다 <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> 메서드를 명시적으로 해당 구성 요소의 형식을 지정 하지 않고도 6-튜플 개체를 인스턴스화합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-130">You can also use the static <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> method to instantiate a 6-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="2cd9b-131">다음 예제에서는 <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> 메서드를 인스턴스화할 형식입니다. 해당 첫 번째 구성 요소는 6 튜플을 <xref:System.String> 형식의 나머지 구성 되며 <xref:System.Int32>합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-131">The following example uses the <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> method to instantiate a 6-tuple whose first component is of type <xref:System.String> and whose remaining components are of type <xref:System.Int32>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#11)]
 [!code-vb[System.Tuple.Create#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#11)]  
  
 <span data-ttu-id="2cd9b-132">이 다음 호출에 해당 하는 <xref:System.Tuple%606.%23ctor%2A> 클래스 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-132">This is equivalent to the following call to the <xref:System.Tuple%606.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#12)]
 [!code-vb[System.Tuple.Create#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2cd9b-133">이 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-133">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="2cd9b-134">현재 <see cref="T:System.Tuple`6" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-134">Returns a value that indicates whether the current <see cref="T:System.Tuple`6" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="2cd9b-135">현재 인스턴스가 지정된 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-135"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cd9b-136">`obj` 매개 변수는 다음과 같은 경우 현재 인스턴스와 같으면 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-136">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="2cd9b-137">것을 <xref:System.Tuple%606> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-137">It is a <xref:System.Tuple%606> object.</span></span>  
  
-   <span data-ttu-id="2cd9b-138">6 개의 구성 요소는 현재 인스턴스와 동일한 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-138">Its six components are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="2cd9b-139">6 개의 구성 요소에는 현재 인스턴스와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-139">Its six components are equal to those of the current instance.</span></span> <span data-ttu-id="2cd9b-140">일치 여부는 각 구성 요소에 대한 기본 개체 같음 비교 연산자에 따라 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-140">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cd9b-141">다음 예에서는 채우기 대 한 데이터가 있는 로스앤젤레스, 뉴욕 1960 년부터 2000 로스엔젤레스와 6의 배열을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-141">The following example defines an array of sextuples that contain population data for Los Angeles and New York from 1960 to 2000.</span></span> <span data-ttu-id="2cd9b-142">각 6 중의 첫 번째 구성 요소는 도시를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-142">The first component of each sextuple identifies the city.</span></span> <span data-ttu-id="2cd9b-143">첫 번째, 세 번째 및 네 번째 뉴욕 뉴욕에 대 한 데이터가 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-143">The first, third, and fourth sextuples contain data for New York.</span></span> <span data-ttu-id="2cd9b-144">첫 번째 6 중 네 번째 여섯 중복 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-144">The first sextuple is a duplicate of the fourth sextuple.</span></span> <span data-ttu-id="2cd9b-145">세 번째 여섯 "New York" 대신 "New York City"를 도시를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-145">The third sextuple identifies the city as "New York City" instead of "New York".</span></span> <span data-ttu-id="2cd9b-146">이 예제에서 알 수 있듯이, 네 번째 6 중 첫 번째 여섯 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-146">As the example shows, only the fourth sextuple is equal to the first sextuple.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`6.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2cd9b-147">현재 <see cref="T:System.Tuple`6" /> 개체에 대한 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-147">Returns the hash code for the current <see cref="T:System.Tuple`6" /> object.</span></span></summary>
        <returns><span data-ttu-id="2cd9b-148">부호 있는 32비트 정수 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-148">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cd9b-149">현재 <see cref="T:System.Tuple`6" /> 개체의 첫 번째 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-149">Gets the value of the current <see cref="T:System.Tuple`6" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="2cd9b-150">현재 <see cref="T:System.Tuple`6" /> 개체의 첫 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-150">The value of the current <see cref="T:System.Tuple`6" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cd9b-151">형식의 동적으로 결정할 수는 <xref:System.Tuple%606.Item1%2A> 두 가지 방법 중 하나에서 구성 요소:</span><span class="sxs-lookup"><span data-stu-id="2cd9b-151">You can dynamically determine the type of the <xref:System.Tuple%606.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2cd9b-152">호출 하 여 합니다 `GetType` 메서드에 의해 반환 되는 값에는 <xref:System.Tuple%606.Item1%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-152">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="2cd9b-153">검색 하 여는 <xref:System.Type> 나타내는 개체를 <xref:System.Tuple%606> 개체를 통해 반환 되는 배열에서 첫 번째 요소를 검색 합니다. 해당 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-153">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cd9b-154">다음 예제에서는 배열을 정의 <xref:System.Tuple%606> 부터 2000 1960 년부터 세 개 미국 도시 (뉴욕, 시카고 및 로스앤젤레스)에 대 한 인구 데이터를 포함 하는 구성 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-154">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="2cd9b-155">다음 표는 데이터를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-155">It then displays a table that lists the data.</span></span> <span data-ttu-id="2cd9b-156">도시 이름을 표시할의 값을 검색 합니다 <xref:System.Tuple%606.Item1%2A> 각 속성이 <xref:System.Tuple%606> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-156">To display the city name, it retrieves the value of the <xref:System.Tuple%606.Item1%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cd9b-157">현재 <see cref="T:System.Tuple`6" /> 개체의 두 번째 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-157">Gets the value of the current <see cref="T:System.Tuple`6" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="2cd9b-158">현재 <see cref="T:System.Tuple`6" /> 개체의 두 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-158">The value of the current <see cref="T:System.Tuple`6" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cd9b-159">형식의 동적으로 결정할 수는 <xref:System.Tuple%606.Item2%2A> 두 가지 방법 중 하나에서 구성 요소:</span><span class="sxs-lookup"><span data-stu-id="2cd9b-159">You can dynamically determine the type of the <xref:System.Tuple%606.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2cd9b-160">호출 하 여 합니다 `GetType` 메서드에 의해 반환 되는 값에는 <xref:System.Tuple%606.Item2%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-160">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="2cd9b-161">검색 하 여는 <xref:System.Type> 나타내는 개체를 <xref:System.Tuple%606> 개체를 통해 반환 되는 배열에서 첫 번째 요소를 검색 합니다. 해당 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-161">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cd9b-162">다음 예제에서는 배열을 정의 <xref:System.Tuple%606> 부터 2000 1960 년부터 세 개 미국 도시 (뉴욕, 시카고 및 로스앤젤레스)에 대 한 인구 데이터를 포함 하는 구성 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-162">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="2cd9b-163">다음 표는 데이터를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-163">It then displays a table that lists the data.</span></span> <span data-ttu-id="2cd9b-164">1960의 인구를 표시 하려면 값을 검색 하는 <xref:System.Tuple%606.Item2%2A> 각 속성이 <xref:System.Tuple%606> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-164">To display the population in 1960, it retrieves the value of the <xref:System.Tuple%606.Item2%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item3 : 'T3" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;.Item3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cd9b-165">현재 <see cref="T:System.Tuple`6" /> 개체의 세 번째 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-165">Gets the value of the current <see cref="T:System.Tuple`6" /> object's third component.</span></span></summary>
        <value><span data-ttu-id="2cd9b-166">현재 <see cref="T:System.Tuple`6" /> 개체의 세 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-166">The value of the current <see cref="T:System.Tuple`6" /> object's third component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cd9b-167">형식의 동적으로 결정할 수는 <xref:System.Tuple%606.Item3%2A> 두 가지 방법 중 하나에서 구성 요소:</span><span class="sxs-lookup"><span data-stu-id="2cd9b-167">You can dynamically determine the type of the <xref:System.Tuple%606.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2cd9b-168">호출 하 여 합니다 `GetType` 메서드에 의해 반환 되는 값에는 <xref:System.Tuple%606.Item3%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-168">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="2cd9b-169">검색 하 여는 <xref:System.Type> 나타내는 개체를 <xref:System.Tuple%606> 개체를 통해 반환 되는 배열에서 첫 번째 요소를 검색 합니다. 해당 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-169">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cd9b-170">다음 예제에서는 배열을 정의 <xref:System.Tuple%606> 부터 2000 1960 년부터 세 개 미국 도시 (뉴욕, 시카고 및 로스앤젤레스)에 대 한 인구 데이터를 포함 하는 구성 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-170">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="2cd9b-171">다음 표는 데이터를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-171">It then displays a table that lists the data.</span></span> <span data-ttu-id="2cd9b-172">1970의 인구를 표시 하려면 값을 검색 하는 <xref:System.Tuple%606.Item3%2A> 각 속성이 <xref:System.Tuple%606> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-172">To display the population in 1970, it retrieves the value of the <xref:System.Tuple%606.Item3%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item4 : 'T4" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;.Item4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cd9b-173">현재 <see cref="T:System.Tuple`6" /> 개체의 네 번째 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-173">Gets the value of the current <see cref="T:System.Tuple`6" /> object's fourth component.</span></span></summary>
        <value><span data-ttu-id="2cd9b-174">현재 <see cref="T:System.Tuple`6" /> 개체의 네 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-174">The value of the current <see cref="T:System.Tuple`6" /> object's fourth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cd9b-175">형식의 동적으로 결정할 수는 <xref:System.Tuple%606.Item4%2A> 두 가지 방법 중 하나에서 구성 요소:</span><span class="sxs-lookup"><span data-stu-id="2cd9b-175">You can dynamically determine the type of the <xref:System.Tuple%606.Item4%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2cd9b-176">호출 하 여 합니다 `GetType` 메서드에 의해 반환 되는 값에는 <xref:System.Tuple%606.Item4%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-176">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item4%2A> property.</span></span>  
  
-   <span data-ttu-id="2cd9b-177">검색 하 여는 <xref:System.Type> 나타내는 개체를 <xref:System.Tuple%606> 개체를 통해 반환 되는 배열에서 첫 번째 요소를 검색 합니다. 해당 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-177">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cd9b-178">다음 예제에서는 배열을 정의 <xref:System.Tuple%606> 부터 2000 1960 년부터 세 개 미국 도시 (뉴욕, 시카고 및 로스앤젤레스)에 대 한 인구 데이터를 포함 하는 구성 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-178">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="2cd9b-179">다음 표는 데이터를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-179">It then displays a table that lists the data.</span></span> <span data-ttu-id="2cd9b-180">값은 1980 년대에서 인구를 표시 하려면 검색을 <xref:System.Tuple%606.Item4%2A> 각 속성이 <xref:System.Tuple%606> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-180">To display the population in 1980, it retrieves the value of the <xref:System.Tuple%606.Item4%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T5 Item5" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item5 As T5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T5 Item5 { T5 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item5 : 'T5" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;.Item5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cd9b-181">현재 <see cref="T:System.Tuple`6" /> 개체의 다섯 번째 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-181">Gets the value of the current <see cref="T:System.Tuple`6" /> object's fifth component.</span></span></summary>
        <value><span data-ttu-id="2cd9b-182">현재 값 <see cref="T:System.Tuple`6" /> 개체의 다섯 번째 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-182">The value of the current <see cref="T:System.Tuple`6" /> object's fifth  component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cd9b-183">형식의 동적으로 결정할 수는 <xref:System.Tuple%606.Item5%2A> 두 가지 방법 중 하나에서 구성 요소:</span><span class="sxs-lookup"><span data-stu-id="2cd9b-183">You can dynamically determine the type of the <xref:System.Tuple%606.Item5%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2cd9b-184">호출 하 여 합니다 `GetType` 메서드에 의해 반환 되는 값에는 <xref:System.Tuple%606.Item5%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-184">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item5%2A> property.</span></span>  
  
-   <span data-ttu-id="2cd9b-185">검색 하 여는 <xref:System.Type> 나타내는 개체를 <xref:System.Tuple%606> 개체를 통해 반환 되는 배열에서 첫 번째 요소를 검색 합니다. 해당 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-185">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cd9b-186">다음 예제에서는 배열을 정의 <xref:System.Tuple%606> 부터 2000 1960 년부터 세 개 미국 도시 (뉴욕, 시카고 및 로스앤젤레스)에 대 한 인구 데이터를 포함 하는 구성 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-186">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="2cd9b-187">다음 표는 데이터를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-187">It then displays a table that lists the data.</span></span> <span data-ttu-id="2cd9b-188">1990 년에서 인구를 표시 하려면 값을 검색 하는 <xref:System.Tuple%606.Item5%2A> 각 속성이 <xref:System.Tuple%606> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-188">To display the population in 1990, it retrieves the value of the <xref:System.Tuple%606.Item5%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item6">
      <MemberSignature Language="C#" Value="public T6 Item6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T6 Item6" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item6" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item6 As T6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T6 Item6 { T6 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item6 : 'T6" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;.Item6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cd9b-189">현재 <see cref="T:System.Tuple`6" /> 개체의 여섯 번째 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-189">Gets the value of the current <see cref="T:System.Tuple`6" /> object's sixth component.</span></span></summary>
        <value><span data-ttu-id="2cd9b-190">현재 <see cref="T:System.Tuple`6" /> 개체의 여섯 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-190">The value of the current <see cref="T:System.Tuple`6" /> object's sixth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cd9b-191">형식의 동적으로 결정할 수는 <xref:System.Tuple%606.Item6%2A> 두 가지 방법 중 하나에서 구성 요소:</span><span class="sxs-lookup"><span data-stu-id="2cd9b-191">You can dynamically determine the type of the <xref:System.Tuple%606.Item6%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2cd9b-192">호출 하 여 합니다 `GetType` 메서드에 의해 반환 되는 값에는 <xref:System.Tuple%606.Item6%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-192">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item6%2A> property.</span></span>  
  
-   <span data-ttu-id="2cd9b-193">검색 하 여는 <xref:System.Type> 나타내는 개체를 <xref:System.Tuple%606> 개체를 통해 반환 되는 배열에서 첫 번째 요소를 검색 합니다. 해당 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-193">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cd9b-194">다음 예제에서는 배열을 정의 <xref:System.Tuple%606> 부터 2000 1960 년부터 세 개 미국 도시 (뉴욕, 시카고 및 로스앤젤레스)에 대 한 인구 데이터를 포함 하는 구성 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-194">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="2cd9b-195">다음 표는 데이터를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-195">It then displays a table that lists the data.</span></span> <span data-ttu-id="2cd9b-196">2000의 인구를 표시 하려면 값을 검색 하는 <xref:System.Tuple%606.Item6%2A> 각 속성이 <xref:System.Tuple%606> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-196">To display the population in 2000, it retrieves the value of the <xref:System.Tuple%606.Item6%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="2cd9b-197">현재 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-197">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="2cd9b-198">비교를 위한 사용자 지정 규칙을 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-198">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="2cd9b-199">지정된 비교자를 사용하여 현재 <see cref="T:System.Tuple`6" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-199">Compares the current <see cref="T:System.Tuple`6" /> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="2cd9b-200">다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="other" />의 상대적 위치를 나타내는 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-200">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="2cd9b-201">값</span><span class="sxs-lookup"><span data-stu-id="2cd9b-201">Value</span></span> 
 </term><description> <span data-ttu-id="2cd9b-202">설명</span><span class="sxs-lookup"><span data-stu-id="2cd9b-202">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="2cd9b-203">음의 정수</span><span class="sxs-lookup"><span data-stu-id="2cd9b-203">A negative integer</span></span> 
 </term><description> <span data-ttu-id="2cd9b-204">이 인스턴스가 <paramref name="other" /> 앞에 오는 경우</span><span class="sxs-lookup"><span data-stu-id="2cd9b-204">This instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2cd9b-205">0</span><span class="sxs-lookup"><span data-stu-id="2cd9b-205">Zero</span></span> 
 </term><description> <span data-ttu-id="2cd9b-206">이 인스턴스와 <paramref name="other" />의 위치가 정렬 순서에서 같은 경우</span><span class="sxs-lookup"><span data-stu-id="2cd9b-206">This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2cd9b-207">양의 정수</span><span class="sxs-lookup"><span data-stu-id="2cd9b-207">A positive integer</span></span> 
 </term><description> <span data-ttu-id="2cd9b-208">이 인스턴스가 <paramref name="other" /> 다음에 오는 경우</span><span class="sxs-lookup"><span data-stu-id="2cd9b-208">This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cd9b-209">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="2cd9b-209">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2cd9b-210"><xref:System.Tuple%606> 인스턴스가 <xref:System.Collections.IStructuralComparable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-210">It can be used only when the <xref:System.Tuple%606> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="2cd9b-211">이 메서드를 사용 하면 사용자 지정된 비교의 정의 <xref:System.Tuple%606> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-211">This method lets you define customized comparisons of <xref:System.Tuple%606> objects.</span></span> <span data-ttu-id="2cd9b-212">예를 들어,이 메서드는 순서를 따르면 <xref:System.Tuple%606> 특정 구성 요소 값을 기반으로 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-212">For example, you can use this method to order <xref:System.Tuple%606> objects based on the value of a specific component.</span></span>  
  
 <span data-ttu-id="2cd9b-213">이 메서드를 직접 호출할 수 있지만 가장 일반적으로 라고 컬렉션 정렬 하 여 포함 하는 메서드 <xref:System.Collections.IComparer> 매개 변수를 컬렉션의 멤버를 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-213">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="2cd9b-214">예를 들어에 의해 호출 됩니다는 <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> 메서드 및 <xref:System.Collections.SortedList.Add%2A> 메서드를 <xref:System.Collections.SortedList> 사용 하 여 인스턴스화된 개체는 <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-214">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2cd9b-215"><xref:System.Tuple%606.System%23Collections%23IStructuralComparable%23CompareTo%2A> 메서드 정렬 작업에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-215">The <xref:System.Tuple%606.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="2cd9b-216">비교의 주요 목적은 두 개체가 같은지 여부를 결정할 때 하지 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-216">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="2cd9b-217">두 개체가 같은지를 확인 하려면 호출을 <xref:System.Tuple%606.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-217">To determine whether two objects are equal, call the <xref:System.Tuple%606.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cd9b-218">다음 예제에서는 배열을 <xref:System.Tuple%606> 1960 년부터 2000 세 미국 도시 인구 데이터를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-218">The following example creates an array of <xref:System.Tuple%606> objects that contains population data for three U.S. cities from 1960 to 2000.</span></span> <span data-ttu-id="2cd9b-219">6 중의 첫 번째 구성 요소에는 도시 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-219">The sextuple's first component is the city name.</span></span> <span data-ttu-id="2cd9b-220">나머지 5 개의 구성 요소를 2000 1960 년부터 10 년 간 간격 인구를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-220">The remaining five components represent the population at 10-year intervals from 1960 to 2000.</span></span>  
  
 <span data-ttu-id="2cd9b-221">합니다 `PopulationComparer` 클래스를 제공는 <xref:System.Collections.IComparer> 배열을 로스엔젤레스와 6 중 하나라도 해당 구성 요소를 정렬할 수 있도록 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-221">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of sextuples to be sorted by any one of its components.</span></span> <span data-ttu-id="2cd9b-222">두 값에 제공 되는 `PopulationComparer` 클래스 생성자에서: 정렬 순서를 정의 하는 구성 요소의 위치 및 <xref:System.Boolean> 튜플 개체를 오름차순 또는 내림차순으로 정렬할지 여부를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-222">Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="2cd9b-223">예제에서는 다음 정렬 되지 않은 순서로 배열에 요소를 표시, 세 번째 구성 요소 (1970에서 채우기)을 기준으로 정렬 및 표시 하 다음 여섯 번째 구성 요소 (2000에서 채우기)을 기준으로 정렬 및 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-223">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1970) and displays them, and then sorts them by the sixth component (the population in 2000) and displays them.</span></span>  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2cd9b-224"><paramref name="other" />이 <see cref="T:System.Tuple`6" /> 개체가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-224"><paramref name="other" /> is not a <see cref="T:System.Tuple`6" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="2cd9b-225">이 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-225">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="2cd9b-226">두 개체가 같은지 여부를 평가하는 데 사용할 방법을 정의하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-226">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="2cd9b-227">지정된 비교 메서드를 기반으로 현재 <see cref="T:System.Tuple`6" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-227">Returns a value that indicates whether the current <see cref="T:System.Tuple`6" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns><span data-ttu-id="2cd9b-228">현재 인스턴스가 지정된 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-228"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cd9b-229">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="2cd9b-229">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2cd9b-230"><xref:System.Tuple%606> 인스턴스가 <xref:System.Collections.IStructuralEquatable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-230">It can be used only when the <xref:System.Tuple%606> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="2cd9b-231"><xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> 경우에 구현이 호출 됩니다 `other` 아닙니다 `null`, 성공적으로 될 수 있습니다 및 캐스팅 (C#) 또는 변환 (Visual Basic)을 <xref:System.Tuple%606> 구성 요소가 현재 인스턴스와 동일한 형식의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-231">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%606> object whose components are of the same types as the current instance.</span></span> <span data-ttu-id="2cd9b-232"><xref:System.Tuple%606.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> 메서드가 첫 번째 전달을 <xref:System.Tuple%606.Item1%2A> 의 값을 <xref:System.Tuple%606> 비교할 개체를 <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-232">The <xref:System.Tuple%606.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%606.Item1%2A> values of the <xref:System.Tuple%606> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="2cd9b-233">이 메서드 호출에서 반환 하는 경우 `true`, 메서드가 다시 호출 되어 전달 되는 <xref:System.Tuple%606.Item2%2A> 두 값 <xref:System.Tuple%606> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-233">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%606.Item2%2A> values of the two <xref:System.Tuple%606> objects.</span></span> <span data-ttu-id="2cd9b-234">메서드 호출이 반환 될 때까지이 과정이 계속 `false` 의 특정 쌍을 비교할 때 `Item` 값 또는 두 <xref:System.Tuple%606.Item6%2A> 값 메서드에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-234">This continues until the method call returns `false` when it compares a specific pair of `Item` values, or the two <xref:System.Tuple%606.Item6%2A> values are passed to the method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cd9b-235">다음 예제에서는 정의 `RateComparer` 같음에 대 한 사용자 지정 테스트를 수행 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-235">The following example defines a `RateComparer` class that performs a custom test for equality.</span></span> <span data-ttu-id="2cd9b-236">경우에 전달 되는 값을 해당 <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> 메서드는 형식의 <xref:System.Single> 또는 <xref:System.Double>, 최대 3 개의 소수 자릿수를 사용 하 여 같음 테스트 메서드.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-236">If the values that are passed to its <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method are of type <xref:System.Single> or <xref:System.Double>, the method tests for equality by using only up to three fractional digits.</span></span> <span data-ttu-id="2cd9b-237">를 단순히 호출 합니다 `x` 매개 변수의 `Equals` 메서드.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-237">Otherwise, it simply calls the `x` parameter's `Equals` method.</span></span> <span data-ttu-id="2cd9b-238">이 예제에서는 <xref:System.Collections.IEqualityComparer> 4 여부를 확인 하려면 구현 <xref:System.Tuple%606> 1960에서 2000 사이의 인구 변화 속도의 데이터를 포함 하는 개체는 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-238">The example uses this <xref:System.Collections.IEqualityComparer> implementation to determine whether four <xref:System.Tuple%606> objects that contain data on the rate of population change between 1960 and 2000 are equal.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`6.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="2cd9b-239"><see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 메서드를 사용하여 현재 <see cref="T:System.Tuple`6" /> 개체의 해시 코드를 계산하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-239">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`6" /> object.</span></span></param>
        <summary><span data-ttu-id="2cd9b-240">지정된 계산 메서드를 사용하여 현재 <see cref="T:System.Tuple`6" /> 개체에 대한 해시 코드를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-240">Calculates the hash code for the current <see cref="T:System.Tuple`6" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="2cd9b-241">부호 있는 32비트 정수 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-241">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cd9b-242">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="2cd9b-242">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2cd9b-243"><xref:System.Tuple%606> 인스턴스가 <xref:System.Collections.IStructuralEquatable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-243">It can be used only when the <xref:System.Tuple%606> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="2cd9b-244">메서드 호출을 래핑한 단순히 합니다 `comparer` 개체의 <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-244">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="2cd9b-245">해시 코드를 계산 하는 데 사용 하는 알고리즘을 두는 같은 해시 코드를 반환 해야 <xref:System.Tuple%606> 것으로 간주 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-245">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%606> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2cd9b-246">현재 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-246">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="2cd9b-247">현재 <see cref="T:System.Tuple`6" /> 개체를 지정된 개체와 비교하고 현재 개체가 정렬 순서에 지정된 개체보다 이전인지, 이후인지 또는 같은 위치인지를 나타내는 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-247">Compares the current <see cref="T:System.Tuple`6" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="2cd9b-248">다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 상대적 위치를 나타내는 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-248">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="2cd9b-249">값</span><span class="sxs-lookup"><span data-stu-id="2cd9b-249">Value</span></span> 
 </term><description> <span data-ttu-id="2cd9b-250">설명</span><span class="sxs-lookup"><span data-stu-id="2cd9b-250">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="2cd9b-251">음의 정수</span><span class="sxs-lookup"><span data-stu-id="2cd9b-251">A negative integer</span></span> 
 </term><description> <span data-ttu-id="2cd9b-252">이 인스턴스가 <paramref name="obj" /> 앞에 오는 경우</span><span class="sxs-lookup"><span data-stu-id="2cd9b-252">This instance precedes <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2cd9b-253">0</span><span class="sxs-lookup"><span data-stu-id="2cd9b-253">Zero</span></span> 
 </term><description> <span data-ttu-id="2cd9b-254">이 인스턴스와 <paramref name="obj" />의 위치가 정렬 순서에서 같은 경우</span><span class="sxs-lookup"><span data-stu-id="2cd9b-254">This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2cd9b-255">양의 정수</span><span class="sxs-lookup"><span data-stu-id="2cd9b-255">A positive integer</span></span> 
 </term><description> <span data-ttu-id="2cd9b-256">이 인스턴스가 <paramref name="obj" /> 다음에 오는 경우</span><span class="sxs-lookup"><span data-stu-id="2cd9b-256">This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cd9b-257">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="2cd9b-257">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2cd9b-258"><xref:System.Tuple%606> 인스턴스가 <xref:System.IComparable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-258">It can be used only when the <xref:System.Tuple%606> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="2cd9b-259">이 메서드를 제공 합니다 <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> 에 대 한 구현을 <xref:System.Tuple%606> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-259">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%606> class.</span></span> <span data-ttu-id="2cd9b-260">메서드를 직접 호출할 수 있지만 가장 일반적으로 컬렉션 정렬 기본 오버 로드에 의해 호출 됩니다 메서드 같은 <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> 및 <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>를 컬렉션의 멤버를 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-260">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2cd9b-261"><xref:System.Tuple%606.System%23IComparable%23CompareTo%2A> 메서드 정렬 작업에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-261">The <xref:System.Tuple%606.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="2cd9b-262">비교의 주요 목적은 두 개체가 같은지 여부를 결정할 때 하지 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-262">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="2cd9b-263">두 개체가 같은지를 확인 하려면 호출을 <xref:System.Tuple%606.Equals%28System.Object%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-263">To determine whether two objects are equal, call the <xref:System.Tuple%606.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2cd9b-264"><xref:System.Tuple%606.System%23IComparable%23CompareTo%28System.Object%29> 메서드는 각 구성 요소를 비교할 기본 개체 비교자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-264">The <xref:System.Tuple%606.System%23IComparable%23CompareTo%28System.Object%29> method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cd9b-265">다음 예제에서는 배열을 <xref:System.Tuple%606> 1960 년 2000 년까지 미국의 세 도시 인구 데이터가 포함 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-265">The following example creates an array of <xref:System.Tuple%606> objects that contain population data for three cities in the United States from 1960 to 2000.</span></span> <span data-ttu-id="2cd9b-266">6 개의 구성 요소는 도시 이름 뒤에 10 년 간격으로 도시 인구 1960 년부터 2000으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-266">The six components consist of the city name followed by the city's population at 10-year intervals from 1960 to 2000.</span></span> <span data-ttu-id="2cd9b-267">이 예제에서는 정렬 되지 않은 순서로 배열에 있는 각 튜플의 구성 요소를 표시 합니다. 배열의 정렬 하 고 호출를 <xref:System.Tuple%606.ToString%2A> 의 각 튜플에 표시할 메서드의 순서를 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-267">The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls the <xref:System.Tuple%606.ToString%2A> method to display each tuple in sorted order.</span></span> <span data-ttu-id="2cd9b-268">출력 배열에 첫 번째 구성 요소인 이름순으로 정렬 된 것을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-268">The output shows that the array has been sorted by name, which is the first component.</span></span> <span data-ttu-id="2cd9b-269">이 예제에서는 직접 호출 하지 않는 참고를 <xref:System.Tuple%606.System%23IComparable%23CompareTo%28System.Object%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-269">Note that the example does not directly call the <xref:System.Tuple%606.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="2cd9b-270">이 메서드는 암시적으로 여는 <xref:System.Array.Sort%28System.Array%29> 배열의 각 요소에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-270">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`6.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`6.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2cd9b-271"><paramref name="obj" />이 <see cref="T:System.Tuple`6" /> 개체가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-271"><paramref name="obj" /> is not a <see cref="T:System.Tuple`6" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2cd9b-272">지정한 <see langword="Tuple" /> 요소의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-272">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="2cd9b-273"><paramref name="index" />의 범위는 0~5일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-273"><paramref name="index" /> can range from 0 to 5.</span></span></param>
        <summary><span data-ttu-id="2cd9b-274">지정한 <see langword="Tuple" /> 요소의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-274">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="2cd9b-275">지정한 위치에 있는 <see langword="Tuple" /> 요소의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-275">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cd9b-276"><xref:System.Tuple%606.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> 속성은 명시적 인터페이스 구현.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-276">The <xref:System.Tuple%606.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="2cd9b-277">를 호출 하려면 캐스팅 하거나 변환 해야 합니다 <xref:System.Tuple%606> 개체는 <xref:System.Runtime.CompilerServices.ITuple> 인터페이스 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-277">To call it, you must cast or convert the <xref:System.Tuple%606> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="2cd9b-278"><paramref name="index" />가 0보다 작거나 5보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-278"><paramref name="index" /> is less than 0 or greater than 5.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cd9b-279"><see langword="Tuple" />의 요소 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-279">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="2cd9b-280"><see cref="T:System.Tuple`6" /> 개체의 요소 수는 6입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-280">6, the number of elements in a <see cref="T:System.Tuple`6" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cd9b-281"><xref:System.Tuple%606.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> 속성은 명시적 인터페이스 구현.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-281">The <xref:System.Tuple%606.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="2cd9b-282">를 호출 하려면 캐스팅 하거나 변환 해야 합니다 <xref:System.Tuple%606> 개체는 <xref:System.Runtime.CompilerServices.ITuple> 인터페이스 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-282">To call it, you must cast or convert the <xref:System.Tuple%606> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2cd9b-283">이 <see cref="T:System.Tuple`6" /> 인스턴스의 값을 나타내는 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-283">Returns a string that represents the value of this <see cref="T:System.Tuple`6" /> instance.</span></span></summary>
        <returns><span data-ttu-id="2cd9b-284">이 <see cref="T:System.Tuple`6" /> 개체의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-284">The string representation of this <see cref="T:System.Tuple`6" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cd9b-285">이 메서드에서 반환 된 문자열의 형식을 사용 (*Item1*, *Item2*합니다 *Item3*를 *Item4*, `Item5, Item6`) 여기서 *Item1*, *Item2*를 *Item3*합니다 *Item4*, *Item5*, 및 *Item6*의 값을 나타냅니다 합니다 <xref:System.Tuple%606.Item1%2A>, <xref:System.Tuple%606.Item2%2A>를 <xref:System.Tuple%606.Item3%2A>를 <xref:System.Tuple%606.Item4%2A>, <xref:System.Tuple%606.Item5%2A>, 및 <xref:System.Tuple%606.Item6%2A> 속성을 각각.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-285">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6`), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, and *Item6* represent the values of the <xref:System.Tuple%606.Item1%2A>, <xref:System.Tuple%606.Item2%2A>, <xref:System.Tuple%606.Item3%2A>, <xref:System.Tuple%606.Item4%2A>, <xref:System.Tuple%606.Item5%2A>, and <xref:System.Tuple%606.Item6%2A> properties, respectively.</span></span> <span data-ttu-id="2cd9b-286">속성 값 중 하나에 해당 하는 경우 `null`로 표시 됩니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-286">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cd9b-287">다음 예제에서는 정의 <xref:System.Tuple%606> 뉴욕시부터 2000 1960 년부터 각 인구에 대 한 인구 데이터가 포함 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-287">The following example defines a <xref:System.Tuple%606> object that contains population data for New York City for each census from 1960 through 2000.</span></span> <span data-ttu-id="2cd9b-288">6 중의 구성 요소에 대 한 호출으로 표시 됩니다는 <xref:System.Tuple%606.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2cd9b-288">The components of the sextuple are then displayed by a call to the <xref:System.Tuple%606.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`6.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`6.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>