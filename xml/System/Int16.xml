<Type Name="Int16" FullName="System.Int16">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5610f712722196d7c2463aa3fce8eed1b5ed4fc8" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56347411" /></Metadata><TypeSignature Language="C#" Value="public struct Int16 : IComparable, IComparable&lt;short&gt;, IConvertible, IEquatable&lt;short&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int16 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int16&gt;, class System.IConvertible, class System.IEquatable`1&lt;int16&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Int16" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int16&#xA;Implements IComparable, IComparable(Of Short), IConvertible, IEquatable(Of Short), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Int16 : IComparable, IComparable&lt;short&gt;, IConvertible, IEquatable&lt;short&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type int16 = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e93dd-101">부호 있는 16비트 정수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-101">Represents a 16-bit signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-102"><xref:System.Int16> 값 형식은 음수 32768에서 양수 32767 까지의 값을 가진 부호 있는 정수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-102">The <xref:System.Int16> value type represents signed integers with values ranging from negative 32768 through positive 32767.</span></span>  
  
 <span data-ttu-id="e93dd-103">이 형식은이 형식의 인스턴스 값이 형식의 인스턴스에 숫자의 문자열 표현을 변환 하 고이 형식의 인스턴스를 비교 하려면 해당 문자열 표현으로 변환 하는 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-103">This type provides methods to convert the value of an instance of this type to its string representation, to convert the string representation of a number to an instance of this type, and to compare instances of this type.</span></span>  
  
 <span data-ttu-id="e93dd-104">멤버를 호출할 수도 있습니다는 <xref:System.Math> 광범위 한 시작 숫자의 몫과 정수 나누기의 나머지를 계산 합니다. 최대값 또는 최소값 값 2의 절대 값을 포함 하 여 숫자 작업을 수행 하는 클래스 정수, 숫자의 부호를 가져오고 숫자로 반올림입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-104">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</span></span>  
  
 <span data-ttu-id="e93dd-105">형식 사양 코드 값 형식의 문자열 표현을 제어 하는 방법에 대 한 내용은 참조 하세요 [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-105">For information about how format specification codes control the string representation of value types, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="e93dd-106">이 유형의 모든 멤버는 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-106">All members of this type are thread safe.</span></span> <span data-ttu-id="e93dd-107">인스턴스 상태를 수정 하려면 표시 되는 멤버는 실제로 새 값을 사용 하 여 초기화 된 새 인스턴스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-107">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="e93dd-108">으로 다른 형식을 사용 하 여이 형식의 인스턴스를 포함 하는 공유 변수를 읽고 쓰는로 보호 되어야 스레드로부터 안전을 보장 하려면 잠금.</span><span class="sxs-lookup"><span data-stu-id="e93dd-108">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.UInt16" />
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="e93dd-109">샘플: .NET Framework 4 서식 유틸리티</span><span class="sxs-lookup"><span data-stu-id="e93dd-109">Sample: .NET Framework 4 Formatting Utility</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e93dd-110">이 인스턴스를 지정된 개체나 다른 <see cref="T:System.Int16" /> 인스턴스와 비교하고 이 인스턴스의 값이 지정된 개체나 다른 <see cref="T:System.Int16" /> 인스턴스의 값보다 작은지, 같은지 또는 큰지를 나타내는 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-110">Compares this instance to a specified object or another <see cref="T:System.Int16" /> instance and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object or the other <see cref="T:System.Int16" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.CompareTo(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(short value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : int16 -&gt; int&#xA;override this.CompareTo : int16 -&gt; int" Usage="int16.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e93dd-111">비교할 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-111">An integer to compare.</span></span></param>
        <summary><span data-ttu-id="e93dd-112">이 인스턴스를 지정된 16비트 부호 있는 정수와 비교하고 이 인스턴스의 값이 지정된 16비트 부호 있는 정수보다 작은지, 같은지 또는 큰지를 나타내는 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-112">Compares this instance to a specified 16-bit signed integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="e93dd-113">이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-113">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="e93dd-114">반환 값</span><span class="sxs-lookup"><span data-stu-id="e93dd-114">Return Value</span></span> 
 </term><description> <span data-ttu-id="e93dd-115">설명</span><span class="sxs-lookup"><span data-stu-id="e93dd-115">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="e93dd-116">0보다 작음</span><span class="sxs-lookup"><span data-stu-id="e93dd-116">Less than zero</span></span> 
 </term><description> <span data-ttu-id="e93dd-117">이 인스턴스는 <paramref name="value" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-117">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e93dd-118">0</span><span class="sxs-lookup"><span data-stu-id="e93dd-118">Zero</span></span> 
 </term><description> <span data-ttu-id="e93dd-119">이 인스턴스가 <paramref name="value" />와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-119">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e93dd-120">0보다 큼</span><span class="sxs-lookup"><span data-stu-id="e93dd-120">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="e93dd-121">이 인스턴스는 <paramref name="value" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-121">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-122">이 메서드를 구현 하는 <xref:System.IComparable%601?displayProperty=nameWithType> 인터페이스 및 수행 보다 조금 더 나은 <xref:System.Int16.CompareTo%2A?displayProperty=nameWithType> 메서드 변환할 필요가 없기 때문에 `value` 개체에 대 한 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="e93dd-122">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int16.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="e93dd-123">프로그래밍 언어에 따라 코딩할 수 있습니다는 <xref:System.Int16.CompareTo%2A> 메서드 매개 변수 형식은 비트 수가 적은 보다 인스턴스 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-123">Depending on your programming language, it might be possible to code a <xref:System.Int16.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="e93dd-124">일부 프로그래밍 언어 매개 변수를 나타내는 형식으로 비트 수 인스턴스로 암시적 확대 변환을 수행 하기 때문에 이것이 가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-124">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="e93dd-125">예를 들어, 인스턴스 유형이 <xref:System.Int32> 매개 변수 형식이 고 <xref:System.Byte>입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-125">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="e93dd-126">Microsoft C# 컴파일러는 매개 변수의 값을 표시 하는 명령을 생성는 <xref:System.Int32> 개체를 만든 다음 생성 된 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 의 값을 비교 하는 메서드를 <xref:System.Int32> 인스턴스 및 <xref:System.Int32> 매개 변수 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-126">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="e93dd-127">해당 컴파일러에서 숫자 형식에 암시적 확대 변환은 수행 여부를 확인 하려면 프로그래밍 언어의 설명서를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-127">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93dd-128">다음 코드 예제에서는 제네릭 및 제네릭이 아닌 버전을 보여 줍니다.는 <xref:System.Int16.CompareTo%2A> 여러 값 및 참조 형식에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-128">The following code example demonstrates generic and nongeneric versions of the <xref:System.Int16.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
        <altmember cref="M:System.Int16.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="int16.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e93dd-129">비교할 개체 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-129">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e93dd-130">이 인스턴스를 지정된 개체와 비교하고 이 인스턴스의 값이 개체의 값보다 작은지, 같은지 또는 큰지를 나타내는 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-130">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the object.</span></span></summary>
        <returns><span data-ttu-id="e93dd-131">이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-131">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="e93dd-132">반환 값</span><span class="sxs-lookup"><span data-stu-id="e93dd-132">Return Value</span></span> 
 </term><description> <span data-ttu-id="e93dd-133">설명</span><span class="sxs-lookup"><span data-stu-id="e93dd-133">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="e93dd-134">0보다 작음</span><span class="sxs-lookup"><span data-stu-id="e93dd-134">Less than zero</span></span> 
 </term><description> <span data-ttu-id="e93dd-135">이 인스턴스는 <paramref name="value" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-135">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e93dd-136">0</span><span class="sxs-lookup"><span data-stu-id="e93dd-136">Zero</span></span> 
 </term><description> <span data-ttu-id="e93dd-137">이 인스턴스가 <paramref name="value" />와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-137">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e93dd-138">0보다 큼</span><span class="sxs-lookup"><span data-stu-id="e93dd-138">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="e93dd-139">이 인스턴스는 <paramref name="value" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-139">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="e93dd-140">또는</span><span class="sxs-lookup"><span data-stu-id="e93dd-140">-or-</span></span> 
 <span data-ttu-id="e93dd-141"><paramref name="value" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e93dd-141"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-142"><xref:System.Int16>, 해당 값에 관계 없이 null 참조일 보다 큰 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-142">An <xref:System.Int16>, regardless of its value, is considered greater than a null reference.</span></span>  
  
 <span data-ttu-id="e93dd-143">합니다 `value` 매개 변수 여야 합니다 `null` 인스턴스나 <xref:System.Int16>고, 그렇지 않으면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-143">The `value` parameter must be `null` or an instance of <xref:System.Int16>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e93dd-144"><paramref name="value" />이 <see cref="T:System.Int16" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="e93dd-144"><paramref name="value" /> is not an <see cref="T:System.Int16" />.</span></span></exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e93dd-145">이 인스턴스가 지정된 개체나 <see cref="T:System.Int16" />과 같은지를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-145">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Int16" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (short obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int16 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Equals(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(short obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : int16 -&gt; bool" Usage="int16.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e93dd-146">이 인스턴스와 비교할 <see cref="T:System.Int16" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-146">An <see cref="T:System.Int16" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="e93dd-147">이 인스턴스가 지정된 <see cref="T:System.Int16" /> 값과 같은지를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-147">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int16" /> value.</span></span></summary>
        <returns><span data-ttu-id="e93dd-148"><see langword="true" />가 이 인터페이스와 같은 값을 가지면 <paramref name="obj" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-148"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-149">이 메서드를 구현 하는 <xref:System.IEquatable%601?displayProperty=nameWithType> 인터페이스 및 수행 보다 조금 더 나은 <xref:System.Int16.Equals%2A> 변환할 필요가 없기 때문에 `obj` 개체에 대 한 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="e93dd-149">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int16.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="e93dd-150">컴파일러 오버 로드 확인 두 동작에는 명백한 차이점에 대 한 계정 수 <see cref="M:System.Int16.Equals(System.Int16)" /> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-150">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int16.Equals(System.Int16)" /> method overloads.</span></span> <span data-ttu-id="e93dd-151">간에 암시적 변환이 발생 하는 경우는 <paramref name="obj" /> 인수 및 <see cref="T:System.Int16" /> 정의 된 인수로 형식화 되지 않은 및는 <see cref="T:System.Object" />, 컴파일러는 암시적 변환 및 호출을 수행 합니다 <see cref="M:System.Int16.Equals(System.Int16)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-151">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int16.Equals(System.Int16)" /> method.</span></span> <span data-ttu-id="e93dd-152">호출이 고, 그렇지 합니다 <see cref="M:System.Int16.Equals(System.Object)" /> 메서드를 항상 반환 <see langword="false" /> 경우 해당 <paramref name="obj" /> 인수가 아닙니다는 <see cref="T:System.Int16" /> 값.</span><span class="sxs-lookup"><span data-stu-id="e93dd-152">Otherwise, they call the <see cref="M:System.Int16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int16" /> value.</span></span> <span data-ttu-id="e93dd-153">다음 예제에서는 두 개의 메서드 오버 로드 간의 동작 차이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-153">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="e93dd-154">경우는 <see cref="T:System.Byte" /> 하 고 <see cref="T:System.SByte" /> 값을 반환 하는 첫 번째 비교 <see langword="true" /> 컴파일러가 확대 변환 및 호출에 자동으로 수행 하기 때문에 <see cref="M:System.Int16.Equals(System.Int16)" /> 메서드를 반면 두 번째 비교 를반환합니다.<see langword="false" />컴파일러를 호출 하기 때문에 <see cref="M:System.Int16.Equals(System.Object)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-154">In the case of the <see cref="T:System.Byte" /> and <see cref="T:System.SByte" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int16.Equals(System.Int16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int16.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="e93dd-155">[! 코드 csharp[System.Int16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int16.equals/cs/equalsoverl.cs#1)] [! 코드 vb[System.Int16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int16.equals/vb/equalsoverl.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="e93dd-155">[!code-csharp[System.Int16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int16.equals/cs/equalsoverl.cs#1)] [!code-vb[System.Int16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int16.equals/vb/equalsoverl.vb#1)]</span></span></para></block>
        <altmember cref="M:System.Int16.Equals(System.Object)" />
        <altmember cref="Overload:System.Int16.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="int16.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e93dd-156">이 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-156">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="e93dd-157">이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-157">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="e93dd-158"><see langword="true" />가 <paramref name="obj" />의 인스턴스이고 이 인스턴스의 값과 같으면 <see cref="T:System.Int16" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-158"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Int16" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e93dd-159">다음 코드 예제에서는 `Equals` 컨텍스트에서 `Int16`, 두 개의 짧은 값을 비교 하 고 반환 `true` 동일한 번호를 나타내는 경우 또는 `false` 아닌 경우.</span><span class="sxs-lookup"><span data-stu-id="e93dd-159">The following code example illustrates the use of `Equals` in the context of `Int16`, comparing two short values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  
  
 [!code-cpp[Int16_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/Int16_Equals/CPP/int16_equals.cpp#1)]
 [!code-csharp[Int16_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Int16_Equals/CS/int16_equals.cs#1)]
 [!code-vb[Int16_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Int16_Equals/VB/int16_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="e93dd-160">컴파일러 오버 로드 확인 두 동작에는 명백한 차이점에 대 한 계정 수 <see cref="M:System.Int16.Equals(System.Int16)" /> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-160">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int16.Equals(System.Int16)" /> method overloads.</span></span> <span data-ttu-id="e93dd-161">간에 암시적 변환이 발생 하는 경우는 <paramref name="obj" /> 인수 및 <see cref="T:System.Int16" /> 정의 된 인수로 형식화 되지 않은 및는 <see cref="T:System.Object" />, 컴파일러는 암시적 변환 및 호출을 수행 합니다 <see cref="M:System.Int16.Equals(System.Int16)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-161">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int16.Equals(System.Int16)" /> method.</span></span> <span data-ttu-id="e93dd-162">호출이 고, 그렇지 합니다 <see cref="M:System.Int16.Equals(System.Object)" /> 메서드를 항상 반환 <see langword="false" /> 경우 해당 <paramref name="obj" /> 인수가 아닙니다는 <see cref="T:System.Int16" /> 값.</span><span class="sxs-lookup"><span data-stu-id="e93dd-162">Otherwise, they call the <see cref="M:System.Int16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int16" /> value.</span></span> <span data-ttu-id="e93dd-163">다음 예제에서는 두 개의 메서드 오버 로드 간의 동작 차이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-163">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="e93dd-164">경우는 <see cref="T:System.Byte" /> 하 고 <see cref="T:System.SByte" /> 값을 반환 하는 첫 번째 비교 <see langword="true" /> 컴파일러가 확대 변환 및 호출에 자동으로 수행 하기 때문에 <see cref="M:System.Int16.Equals(System.Int16)" /> 메서드를 반면 두 번째 비교 를반환합니다.<see langword="false" />컴파일러를 호출 하기 때문에 <see cref="M:System.Int16.Equals(System.Object)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-164">In the case of the <see cref="T:System.Byte" /> and <see cref="T:System.SByte" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int16.Equals(System.Int16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int16.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="e93dd-165">[! 코드 csharp[System.Int16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int16.equals/cs/equalsoverl.cs#1)] [! 코드 vb[System.Int16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int16.equals/vb/equalsoverl.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="e93dd-165">[!code-csharp[System.Int16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int16.equals/cs/equalsoverl.cs#1)] [!code-vb[System.Int16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int16.equals/vb/equalsoverl.vb#1)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="int16.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e93dd-166">이 인스턴스의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-166">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="e93dd-167">부호 있는 32비트 정수 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-167">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="int16.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e93dd-168"><see cref="T:System.TypeCode" /> 값 형식에 대한 <see cref="T:System.Int16" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-168">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int16" />.</span></span></summary>
        <returns><span data-ttu-id="e93dd-169">열거형 상수인 <see cref="F:System.TypeCode.Int16" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-169">The enumerated constant, <see cref="F:System.TypeCode.Int16" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const short MaxValue = 32767;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 MaxValue = int16(32767)" />
      <MemberSignature Language="DocId" Value="F:System.Int16.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Short  = 32767" />
      <MemberSignature Language="C++ CLI" Value="public: short MaxValue = 32767;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : int16" Usage="System.int16.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>32767</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e93dd-170"><see cref="T:System.Int16" />의 최대값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-170">Represents the largest possible value of an <see cref="T:System.Int16" />.</span></span> <span data-ttu-id="e93dd-171">이 필드는 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-171">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-172">이 상수의 값이 32767; 즉, 16 진수 0x7FFF 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-172">The value of this constant is 32767; that is, hexadecimal 0x7FFF.</span></span>  
  
 <span data-ttu-id="e93dd-173"><xref:System.Int16.MaxValue> 속성은 대개 방지 하기 위해 사용 됩니다는 <xref:System.OverflowException> 상한이 더 높은 사용 하 여 숫자 형식에서 변환 하는 경우 (같은 <xref:System.UInt16> 또는 <xref:System.Int32>)에 <xref:System.Int16>합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-173">The <xref:System.Int16.MaxValue> property is typically used to prevent an <xref:System.OverflowException> when converting from a numeric type with a greater upper range (such as a <xref:System.UInt16> or a <xref:System.Int32>) to an <xref:System.Int16>.</span></span> <span data-ttu-id="e93dd-174">이 예제에서는이 사용법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-174">The example illustrates this usage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93dd-175">다음 예제에서는 합니다 <xref:System.Int16.MaxValue> 를 방지 하려면 속성을 <xref:System.OverflowException> 변환할 때는 <xref:System.Int16> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-175">The following example uses the <xref:System.Int16.MaxValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int16> value.</span></span>  
  
 [!code-cpp[System.Int16.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.MaxValue/cpp/minvalue.cpp#1)]
 [!code-csharp[System.Int16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.Int16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int16.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const short MinValue = -32768;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 MinValue = int16(-32768)" />
      <MemberSignature Language="DocId" Value="F:System.Int16.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Short  = -32768" />
      <MemberSignature Language="C++ CLI" Value="public: short MinValue = -32768;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : int16" Usage="System.int16.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>-32768</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e93dd-176"><see cref="T:System.Int16" />의 가능한 최소값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-176">Represents the smallest possible value of <see cref="T:System.Int16" />.</span></span> <span data-ttu-id="e93dd-177">이 필드는 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-177">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-178">이 상수의 값은-32768; 즉, 16 진수 0x8000 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-178">The value of this constant is -32768; that is, hexadecimal 0x8000.</span></span>  
  
 <span data-ttu-id="e93dd-179"><xref:System.Int16.MinValue> 속성은 대개 방지 하기 위해 사용 됩니다는 <xref:System.OverflowException> 큰 하위 범위를 사용 하 여 숫자 형식에서 변환 하는 경우 (같은 <xref:System.Int32> 또는 <xref:System.Int64>)에 <xref:System.Int16>.</span><span class="sxs-lookup"><span data-stu-id="e93dd-179">The <xref:System.Int16.MinValue> property is typically used to prevent an <xref:System.OverflowException> when converting from a numeric type with a greater lower range (such as an <xref:System.Int32> or an <xref:System.Int64>) to an <xref:System.Int16>.</span></span> <span data-ttu-id="e93dd-180">이 예제에서는이 사용법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-180">The example illustrates this usage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93dd-181">다음 예제에서는 합니다 <xref:System.Int16.MinValue> 를 방지 하려면 속성을 <xref:System.OverflowException> 변환할 때는 <xref:System.Int16> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-181">The following example uses the <xref:System.Int16.MinValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int16> value.</span></span>  
  
 [!code-cpp[System.Int16.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.MaxValue/cpp/minvalue.cpp#1)]
 [!code-csharp[System.Int16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.Int16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int16.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e93dd-182">숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-182">Converts the string representation of a number to its 16-bit signed integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.Int16.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; int16" Usage="System.int16.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e93dd-183">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-183">A string containing a number to convert.</span></span></param>
        <summary><span data-ttu-id="e93dd-184">숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-184">Converts the string representation of a number to its 16-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="e93dd-185"><paramref name="s" />에 있는 수에 해당하는 16비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-185">A 16-bit signed integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-186">`s` 매개 변수 형식의 숫자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-186">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="e93dd-187">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="e93dd-187">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="e93dd-188">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-188">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="e93dd-189">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-189">The following table describes each element.</span></span>  
  
|<span data-ttu-id="e93dd-190">요소</span><span class="sxs-lookup"><span data-stu-id="e93dd-190">Element</span></span>|<span data-ttu-id="e93dd-191">설명</span><span class="sxs-lookup"><span data-stu-id="e93dd-191">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="e93dd-192">*ws*</span><span class="sxs-lookup"><span data-stu-id="e93dd-192">*ws*</span></span>|<span data-ttu-id="e93dd-193">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-193">Optional white space.</span></span>|  
|<span data-ttu-id="e93dd-194">*sign*</span><span class="sxs-lookup"><span data-stu-id="e93dd-194">*sign*</span></span>|<span data-ttu-id="e93dd-195">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-195">An optional sign.</span></span>|  
|<span data-ttu-id="e93dd-196">*digits*</span><span class="sxs-lookup"><span data-stu-id="e93dd-196">*digits*</span></span>|<span data-ttu-id="e93dd-197">0에서 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-197">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="e93dd-198">합니다 `s` 매개 변수를 사용 하 여 해석 되는 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-198">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="e93dd-199">정수 값의 소수 자릿수 외에도 선행 및 후행 공백을 선행 기호 함께 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-199">In addition to the integer value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="e93dd-200">에 나타날 수 있는 스타일 요소를 명시적으로 정의 하려면 `s`를 사용 하 여 합니다 <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> 또는 <xref:System.Int16.Parse%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-200">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int16.Parse%2A> method.</span></span>  
  
 <span data-ttu-id="e93dd-201">`s` 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <xref:System.Globalization.NumberFormatInfo> 현재 시스템 문화권에 대 한 초기화 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-201">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="e93dd-202">자세한 내용은 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-202">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="e93dd-203">다른 문화권의 서식 지정 정보를 사용 하 여 문자열 구문 분석을 사용 합니다 <xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 또는 <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-203">To parse a string using the formatting information of some other culture, use the <xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93dd-204">다음 예제에서는 문자열 값을 사용 하 여 16 비트 부호 있는 정수 값으로 변환 하는 방법에 설명 합니다 <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-204">The following example demonstrates how to convert a string value into a 16-bit signed integer value using the <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e93dd-205">결과 정수 값을 콘솔에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-205">The resulting integer value is then displayed to the console.</span></span>  
  
 [!code-cpp[System.Int16.Parse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse1.cpp#1)]
 [!code-csharp[System.Int16.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse.cs#1)]
 [!code-vb[System.Int16.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e93dd-206"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e93dd-206"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e93dd-207"><paramref name="s" />가 올바른 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-207"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="e93dd-208"><paramref name="s" />는 <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큰 숫자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-208"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int16.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="e93dd-209">.NET에서 숫자 문자열 구문 분석</span><span class="sxs-lookup"><span data-stu-id="e93dd-209">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; int16" Usage="System.int16.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e93dd-210">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-210">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="e93dd-211"><paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-211">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="e93dd-212">지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-212">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="e93dd-213">지정된 스타일로 된 숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-213">Converts the string representation of a number in a specified style to its 16-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="e93dd-214"><paramref name="s" />에 지정된 수에 해당하는 16비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-214">A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-215">합니다 `style` 매개 변수 (예: 공백 또는 부호 기호)에 사용할 수 있는 스타일 요소를 정의 합니다 `s` 구문 분석 작업이 성공 하기 위해 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-215">The `style` parameter defines the style elements (such as white space or a sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="e93dd-216">비트 플래그 조합 이어야 합니다는 <xref:System.Globalization.NumberStyles> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-216">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="e93dd-217">값에 따라 `style`, `s` 매개 변수는 다음 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-217">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="e93dd-218">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="e93dd-218">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="e93dd-219">또는 `style` 포함 <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="e93dd-219">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="e93dd-220">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="e93dd-220">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="e93dd-221">대괄호 ([및])는 선택 사항에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-221">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="e93dd-222">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-222">The following table describes each element.</span></span>  
  
|<span data-ttu-id="e93dd-223">요소</span><span class="sxs-lookup"><span data-stu-id="e93dd-223">Element</span></span>|<span data-ttu-id="e93dd-224">설명</span><span class="sxs-lookup"><span data-stu-id="e93dd-224">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="e93dd-225">*ws*</span><span class="sxs-lookup"><span data-stu-id="e93dd-225">*ws*</span></span>|<span data-ttu-id="e93dd-226">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-226">Optional white space.</span></span> <span data-ttu-id="e93dd-227">맨 앞에 공백이 나타날 수 `s` 경우 `style` 포함 합니다 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 플래그를 또는 끝에 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-227">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="e93dd-228">Culture 별 통화 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-228">A culture-specific currency symbol.</span></span> <span data-ttu-id="e93dd-229">문자열에 해당 위치는 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> 현재 문화권의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-229">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> property of the current culture.</span></span> <span data-ttu-id="e93dd-230">현재 문화권의 통화 기호에 나타날 수 있습니다 `s` 하는 경우 `style` 포함 된 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 플래그 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-230">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e93dd-231">*sign*</span><span class="sxs-lookup"><span data-stu-id="e93dd-231">*sign*</span></span>|<span data-ttu-id="e93dd-232">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-232">An optional sign.</span></span> <span data-ttu-id="e93dd-233">부호의 시작 부분에 나타날 수 있습니다 `s` 경우 `style` 포함 합니다 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 끝에 있고, 나타날 수 있습니다 `s` 경우 `style` 포함를 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 플래그 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-233">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="e93dd-234">괄호를 사용할 수 있습니다 `s` 경우 음수 값을 나타내는 데 `style` 포함 된 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-234">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e93dd-235">*digits*</span><span class="sxs-lookup"><span data-stu-id="e93dd-235">*digits*</span></span>|<span data-ttu-id="e93dd-236">0부터 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-236">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="e93dd-237">*,*</span><span class="sxs-lookup"><span data-stu-id="e93dd-237">*,*</span></span>|<span data-ttu-id="e93dd-238">문화권별 천 단위 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-238">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="e93dd-239">현재 문화권의 천 단위 구분 기호에 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-239">The current culture's thousands separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e93dd-240">*.*</span><span class="sxs-lookup"><span data-stu-id="e93dd-240">*.*</span></span>|<span data-ttu-id="e93dd-241">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-241">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="e93dd-242">현재 문화권의 소수점 기호에 나타날 수 있습니다 `s` 경우 `style` 포함 된 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-242">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e93dd-243">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="e93dd-243">*fractional_digits*</span></span>|<span data-ttu-id="e93dd-244">0 진수의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-244">A sequence of the 0 digit.</span></span> <span data-ttu-id="e93dd-245">소수 자릿수에 나타날 수 있습니다 `s` 하는 경우 `style` 포함 된 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-245">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="e93dd-246">에 0이 아닌 모든 숫자를 표시 하는 경우 *소수 자릿수*에 메서드가 throw는 <xref:System.OverflowException>합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-246">If any digit other than 0 appears in *fractional_digits*, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="e93dd-247">*e*</span><span class="sxs-lookup"><span data-stu-id="e93dd-247">*e*</span></span>|<span data-ttu-id="e93dd-248">'E' 또는 'E' 문자를 나타내는 `s` 지 수 표기법으로 표현 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-248">The 'e' or 'E' character, which indicates that `s` can be represented in exponential notation.</span></span> <span data-ttu-id="e93dd-249">`s` 매개 변수는 경우 지 수 표기법으로 숫자를 나타낼 수 `style` 포함 된 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그.</span><span class="sxs-lookup"><span data-stu-id="e93dd-249">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="e93dd-250">그러나 합니다 `s` 매개 변수 범위의 숫자를 나타내야 합니다.는 <xref:System.Int16> 데이터 입력 하 고 0이 아닌 소수 부분을 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-250">However, the `s` parameter must represent a number in the range of the <xref:System.Int16> data type and cannot have a non-zero fractional component.</span></span>|  
|<span data-ttu-id="e93dd-251">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="e93dd-251">*hexdigits*</span></span>|<span data-ttu-id="e93dd-252">16 진수 숫자 0 ~ f 또는 0 ~ 6. 시퀀스</span><span class="sxs-lookup"><span data-stu-id="e93dd-252">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="e93dd-253">종료 NUL (U + 0000)에 임의 문자를 `s` 의 값에 관계 없이 구문 분석 작업에서 무시 되는 `style` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-253">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="e93dd-254">문자열 *자릿수* 만 (해당 하는 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 스타일) 항상 성공적으로 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-254">A string with *digits* only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="e93dd-255">나머지 대부분 <xref:System.Globalization.NumberStyles> 멤버 수 있지만이 입력된 문자열에 있이 필요가 없습니다 있는 요소를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-255">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="e93dd-256">다음 표에서 개별 <xref:System.Globalization.NumberStyles> 멤버에 나타날 수 있는 요소에 영향을 줄 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-256">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="e93dd-257">비 복합 NumberStyles 값</span><span class="sxs-lookup"><span data-stu-id="e93dd-257">Non-composite NumberStyles values</span></span>|<span data-ttu-id="e93dd-258">숫자 외에도 s에 허용 되는 요소</span><span class="sxs-lookup"><span data-stu-id="e93dd-258">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="e93dd-259">소수 자릿수에만 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-259">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="e93dd-260">*.*</span><span class="sxs-lookup"><span data-stu-id="e93dd-260">The *.*</span></span> <span data-ttu-id="e93dd-261">및 *소수 자릿수* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-261">and *fractional_digits* elements.</span></span> <span data-ttu-id="e93dd-262">그러나 *소수 자릿수* 0 숫자가 하나 이상 구성 해야 합니다 또는 <xref:System.OverflowException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-262">However, *fractional_digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="e93dd-263">`s` 매개 변수 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-263">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="e93dd-264">합니다 *ws* 맨 앞에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-264">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="e93dd-265">합니다 *ws* 의 끝에 있는 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-265">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="e93dd-266">로그인 하기 전에 나타날 수 있습니다 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-266">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="e93dd-267">로그인 후 나타날 수 있습니다 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-267">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="e93dd-268">합니다 *기호* 형식의 숫자 값을 묶는 괄호는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-268">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="e93dd-269">합니다 *,* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-269">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="e93dd-270">합니다 *$* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-270">The *$* element.</span></span>|  
  
 <span data-ttu-id="e93dd-271">경우는 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 플래그를 사용할 `s` 접두사 없이 16 진수 값의 문자열 표현 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-271">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be the string representation of a hexadecimal value without a prefix.</span></span> <span data-ttu-id="e93dd-272">예를 들어, "9AF3" 성공적으로 구문 분석 하지만 "0x9AF3" 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-272">For example, "9AF3" parses successfully, but "0x9AF3" does not.</span></span> <span data-ttu-id="e93dd-273">만 다른 플래그에 있을 수 있는 `style` 됩니다 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 고 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-273">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e93dd-274">(합니다 <xref:System.Globalization.NumberStyles> 열거형에는 복합 숫자 스타일 <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, 모두 공백 플래그를 포함 하는.)</span><span class="sxs-lookup"><span data-stu-id="e93dd-274">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="e93dd-275">`s` 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <xref:System.Globalization.NumberFormatInfo> 현재 시스템 문화권에 대 한 초기화 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-275">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="e93dd-276">자세한 내용은 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-276">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e93dd-277">구문 분석할 `s` 호출 하 여 특정 문화권의 서식 지정 정보를 <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-277">To parse `s` using the formatting information of a specific culture, call the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93dd-278">다음 예제에서는 합니다 <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> 의 문자열 표현을 구문 분석 방법 <xref:System.Int16> EN-US 문화권을 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-278">The following example uses the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of <xref:System.Int16> values using the en-US culture.</span></span>  
  
 [!code-cpp[System.Int16.Parse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse2.cpp#2)]
 [!code-csharp[System.Int16.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse2.cs#2)]
 [!code-vb[System.Int16.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e93dd-279"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e93dd-279"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e93dd-280"><paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-280"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="e93dd-281">또는</span><span class="sxs-lookup"><span data-stu-id="e93dd-281">-or-</span></span> 
 <span data-ttu-id="e93dd-282"><paramref name="style" />이 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 및 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 값의 조합이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-282"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e93dd-283"><paramref name="s" />가 <paramref name="style" /> 규격 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-283"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="e93dd-284"><paramref name="s" />는 <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큰 숫자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-284"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
<span data-ttu-id="e93dd-285">또는</span><span class="sxs-lookup"><span data-stu-id="e93dd-285">-or-</span></span> 
 <span data-ttu-id="e93dd-286"><paramref name="s" />에는 0이 아닌 소수 자릿수가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-286"><paramref name="s" /> includes non-zero fractional digits.</span></span></exception>
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int16.ToString" />
        <altmember cref="Overload:System.Int16.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="e93dd-287">.NET에서 숫자 문자열 구문 분석</span><span class="sxs-lookup"><span data-stu-id="e93dd-287">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; int16" Usage="System.int16.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e93dd-288">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-288">A string containing a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="e93dd-289"><see cref="T:System.IFormatProvider" />에 대한 문화권별 형식 지정 정보를 제공하는 <paramref name="s" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-289">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="e93dd-290">지정된 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-290">Converts the string representation of a number in a specified culture-specific format to its 16-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="e93dd-291"><paramref name="s" />에 지정된 수에 해당하는 16비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-291">A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-292">`s` 매개 변수 형식의 숫자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-292">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="e93dd-293">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="e93dd-293">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="e93dd-294">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-294">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="e93dd-295">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-295">The following table describes each element.</span></span>  
  
|<span data-ttu-id="e93dd-296">요소</span><span class="sxs-lookup"><span data-stu-id="e93dd-296">Element</span></span>|<span data-ttu-id="e93dd-297">설명</span><span class="sxs-lookup"><span data-stu-id="e93dd-297">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="e93dd-298">ws</span><span class="sxs-lookup"><span data-stu-id="e93dd-298">ws</span></span>|<span data-ttu-id="e93dd-299">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-299">An optional white space.</span></span>|  
|<span data-ttu-id="e93dd-300">sign</span><span class="sxs-lookup"><span data-stu-id="e93dd-300">sign</span></span>|<span data-ttu-id="e93dd-301">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-301">An optional sign.</span></span>|  
|<span data-ttu-id="e93dd-302">digits</span><span class="sxs-lookup"><span data-stu-id="e93dd-302">digits</span></span>|<span data-ttu-id="e93dd-303">0에서 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-303">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="e93dd-304">합니다 `s` 매개 변수를 사용 하 여 해석 되는 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-304">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="e93dd-305">에 선행 및 후행 공백을 선행 기호 함께 10 진수 숫자, 외에도 허용 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-305">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed in `s`.</span></span> <span data-ttu-id="e93dd-306">분명 하 게 함께 culture 별 서식 지정 정보에 포함 될 수 있는 스타일 요소를 정의할 `s`를 사용 하 여를 <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-306">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e93dd-307">`provider` 매개 변수는는 <xref:System.IFormatProvider> 가져옵니다 구현을 <xref:System.Globalization.NumberFormatInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-307">The `provider` parameter is an <xref:System.IFormatProvider> implementation that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="e93dd-308">합니다 <xref:System.Globalization.NumberFormatInfo> 의 형식에 대 한 문화권별 형식 정보를 제공 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-308">The <xref:System.Globalization.NumberFormatInfo> provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="e93dd-309">하는 경우 `provider` 됩니다 `null`, <xref:System.Globalization.NumberFormatInfo> 현재 문화권이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-309">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93dd-310">다음 예제에서는의 문자열 표현을 구문 분석 <xref:System.Int16> 값을 <xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-310">The following example parses string representations of <xref:System.Int16> values with the <xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Int16.Parse#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse4.cpp#4)]
 [!code-csharp[System.Int16.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse.cs#4)]
 [!code-vb[System.Int16.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e93dd-311"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e93dd-311"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e93dd-312"><paramref name="s" />가 올바른 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-312"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="e93dd-313"><paramref name="s" />는 <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큰 숫자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-313"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int16.ToString" />
        <altmember cref="Overload:System.Int16.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="e93dd-314">.NET에서 숫자 문자열 구문 분석</span><span class="sxs-lookup"><span data-stu-id="e93dd-314">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Short" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; int16" Usage="System.int16.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; int16" Usage="System.int16.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e93dd-315">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-315">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="e93dd-316"><paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-316">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="e93dd-317">지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-317">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="e93dd-318"><see cref="T:System.IFormatProvider" />에 대한 문화권별 형식 지정 정보를 제공하는 <paramref name="s" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-318">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="e93dd-319">지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-319">Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="e93dd-320"><paramref name="s" />에 지정된 수에 해당하는 16비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-320">A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-321">합니다 `style` 매개 변수 (예: 공백 또는 양수 부호)에 사용할 수 있는 스타일 요소를 정의 합니다 `s` 구문 분석 작업이 성공 하기 위해 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-321">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="e93dd-322">비트 플래그 조합 이어야 합니다는 <xref:System.Globalization.NumberStyles> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-322">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="e93dd-323">값에 따라 `style`, `s` 매개 변수는 다음 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-323">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="e93dd-324">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="e93dd-324">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="e93dd-325">또는 `style` 포함 <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="e93dd-325">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="e93dd-326">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="e93dd-326">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="e93dd-327">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-327">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="e93dd-328">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-328">The following table describes each element.</span></span>  
  
|<span data-ttu-id="e93dd-329">요소</span><span class="sxs-lookup"><span data-stu-id="e93dd-329">Element</span></span>|<span data-ttu-id="e93dd-330">설명</span><span class="sxs-lookup"><span data-stu-id="e93dd-330">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="e93dd-331">*ws*</span><span class="sxs-lookup"><span data-stu-id="e93dd-331">*ws*</span></span>|<span data-ttu-id="e93dd-332">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-332">Optional white space.</span></span> <span data-ttu-id="e93dd-333">맨 앞에 공백이 나타날 수 `s` 경우 `style` 포함 합니다 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 플래그를 또는 끝에 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-333">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="e93dd-334">Culture 별 통화 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-334">A culture-specific currency symbol.</span></span> <span data-ttu-id="e93dd-335">문자열에 해당 위치는 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> 현재 문화권의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-335">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> property of the current culture.</span></span> <span data-ttu-id="e93dd-336">현재 문화권의 통화 기호에 나타날 수 있습니다 `s` 하는 경우 `style` 포함 된 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 플래그 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-336">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e93dd-337">*sign*</span><span class="sxs-lookup"><span data-stu-id="e93dd-337">*sign*</span></span>|<span data-ttu-id="e93dd-338">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-338">An optional sign.</span></span> <span data-ttu-id="e93dd-339">부호의 시작 부분에 나타날 수 있습니다 `s` 경우 `style` 포함 합니다 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 끝에 있고, 나타날 수 있습니다 `s` 경우 `style` 포함를 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 플래그 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-339">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="e93dd-340">괄호를 사용할 수 있습니다 `s` 경우 음수 값을 나타내는 데 `style` 포함 된 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-340">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e93dd-341">*digits*</span><span class="sxs-lookup"><span data-stu-id="e93dd-341">*digits*</span></span>|<span data-ttu-id="e93dd-342">0부터 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-342">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="e93dd-343">*,*</span><span class="sxs-lookup"><span data-stu-id="e93dd-343">*,*</span></span>|<span data-ttu-id="e93dd-344">문화권별 천 단위 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-344">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="e93dd-345">현재 문화권의 천 단위 구분 기호에 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-345">The current culture's thousands separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e93dd-346">*.*</span><span class="sxs-lookup"><span data-stu-id="e93dd-346">*.*</span></span>|<span data-ttu-id="e93dd-347">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-347">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="e93dd-348">현재 문화권의 소수점 기호에 나타날 수 있습니다 `s` 경우 `style` 포함 된 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-348">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e93dd-349">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="e93dd-349">*fractional_digits*</span></span>|<span data-ttu-id="e93dd-350">0 진수의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-350">A sequence of the 0 digit.</span></span> <span data-ttu-id="e93dd-351">소수 자릿수에 나타날 수 있습니다 `s` 하는 경우 `style` 포함 된 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-351">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="e93dd-352">에 0이 아닌 모든 숫자를 표시 하는 경우 *소수 자릿수*에 메서드가 throw는 <xref:System.OverflowException>합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-352">If any digit other than 0 appears in *fractional_digits*, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="e93dd-353">*e*</span><span class="sxs-lookup"><span data-stu-id="e93dd-353">*e*</span></span>|<span data-ttu-id="e93dd-354">'E' 또는 'E' 문자를 나타내는 `s` 지 수 표기법으로 표현 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-354">The 'e' or 'E' character, which indicates that `s` can be represented in exponential notation.</span></span> <span data-ttu-id="e93dd-355">`s` 매개 변수는 경우 지 수 표기법으로 숫자를 나타낼 수 `style` 포함 된 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그.</span><span class="sxs-lookup"><span data-stu-id="e93dd-355">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="e93dd-356">그러나 합니다 `s` 매개 변수 범위의 숫자를 나타내야 합니다.는 <xref:System.Int16> 데이터 입력 하 고 0이 아닌 소수 부분을 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-356">However, the `s` parameter must represent a number in the range of the <xref:System.Int16> data type and cannot have a non-zero fractional component.</span></span>|  
|<span data-ttu-id="e93dd-357">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="e93dd-357">*hexdigits*</span></span>|<span data-ttu-id="e93dd-358">16 진수 숫자 0 ~ f 또는 0 ~ 6. 시퀀스</span><span class="sxs-lookup"><span data-stu-id="e93dd-358">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="e93dd-359">종료 NUL (U + 0000)에 임의 문자를 `s` 의 값에 관계 없이 구문 분석 작업에서 무시 되는 `style` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-359">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="e93dd-360">문자열 *자릿수* 만 (해당 하는 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 스타일) 항상 성공적으로 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-360">A string with *digits* only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="e93dd-361">나머지 대부분 <xref:System.Globalization.NumberStyles> 멤버 수 있지만이 입력된 문자열에 있이 필요가 없습니다 있는 요소를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-361">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="e93dd-362">다음 표에서 개별 <xref:System.Globalization.NumberStyles> 멤버에 나타날 수 있는 요소에 영향을 줄 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-362">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="e93dd-363">비 복합 NumberStyles 값</span><span class="sxs-lookup"><span data-stu-id="e93dd-363">Non-composite NumberStyles values</span></span>|<span data-ttu-id="e93dd-364">숫자 외에도 s에 허용 되는 요소</span><span class="sxs-lookup"><span data-stu-id="e93dd-364">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="e93dd-365">소수 자릿수에만 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-365">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="e93dd-366">*.*</span><span class="sxs-lookup"><span data-stu-id="e93dd-366">The *.*</span></span> <span data-ttu-id="e93dd-367">및 *소수 자릿수* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-367">and *fractional_digits* elements.</span></span> <span data-ttu-id="e93dd-368">그러나 *소수 자릿수* 0 숫자가 하나 이상 구성 해야 합니다 또는 <xref:System.OverflowException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-368">However, *fractional_digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="e93dd-369">`s` 매개 변수 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-369">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="e93dd-370">합니다 *ws* 맨 앞에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-370">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="e93dd-371">합니다 *ws* 의 끝에 있는 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-371">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="e93dd-372">로그인 하기 전에 나타날 수 있습니다 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-372">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="e93dd-373">로그인 후 나타날 수 있습니다 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-373">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="e93dd-374">합니다 *기호* 형식의 숫자 값을 묶는 괄호는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-374">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="e93dd-375">합니다 *,* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-375">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="e93dd-376">합니다 *$* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-376">The *$* element.</span></span>|  
  
 <span data-ttu-id="e93dd-377">경우는 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 플래그를 사용할 `s` 접두사 없이 16 진수 값의 문자열 표현 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-377">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be the string representation of a hexadecimal value without a prefix.</span></span> <span data-ttu-id="e93dd-378">예를 들어, "9AF3" 성공적으로 구문 분석 하지만 "0x9AF3" 하지 않습니다...</span><span class="sxs-lookup"><span data-stu-id="e93dd-378">For example, "9AF3" parses successfully, but "0x9AF3" does not..</span></span> <span data-ttu-id="e93dd-379">만 다른 플래그에 있을 수 있는 `style` 됩니다 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 고 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-379">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e93dd-380">(합니다 <xref:System.Globalization.NumberStyles> 열거형에는 복합 숫자 스타일 <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, 모두 공백 플래그를 포함 하는.)</span><span class="sxs-lookup"><span data-stu-id="e93dd-380">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="e93dd-381">합니다 `provider` 매개 변수는는 <xref:System.IFormatProvider> 구현입니다 <xref:System.IFormatProvider.GetFormat%2A> 메서드를 가져옵니다는 <xref:System.Globalization.NumberFormatInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-381">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="e93dd-382">합니다 <xref:System.Globalization.NumberFormatInfo> 개체의 형식에 대 한 문화권별 형식 정보를 제공 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-382">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="e93dd-383">하는 경우 `provider` 됩니다 `null`는 <xref:System.Globalization.NumberFormatInfo> 개체가 현재 문화권이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-383">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93dd-384">다음 예제에서는 여러 가지 `style` 하 고 `provider` 의 문자열 표현을 구문 분석 하는 매개 변수 <xref:System.Int16> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-384">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int16> values.</span></span>  
  
 [!code-cpp[System.Int16.Parse#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse3.cpp#3)]
 [!code-csharp[System.Int16.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse.cs#3)]
 [!code-vb[System.Int16.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e93dd-385"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e93dd-385"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e93dd-386"><paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-386"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="e93dd-387">또는</span><span class="sxs-lookup"><span data-stu-id="e93dd-387">-or-</span></span> 
 <span data-ttu-id="e93dd-388"><paramref name="style" />이 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 및 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 값의 조합이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-388"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e93dd-389"><paramref name="s" />가 <paramref name="style" /> 규격 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-389"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="e93dd-390"><paramref name="s" />는 <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큰 숫자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-390"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
<span data-ttu-id="e93dd-391">또는</span><span class="sxs-lookup"><span data-stu-id="e93dd-391">-or-</span></span> 
 <span data-ttu-id="e93dd-392"><paramref name="s" />에는 0이 아닌 소수 자릿수가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-392"><paramref name="s" /> includes non-zero fractional digits.</span></span></exception>
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int16.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="e93dd-393">.NET에서 숫자 문자열 구문 분석</span><span class="sxs-lookup"><span data-stu-id="e93dd-393">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e93dd-394">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-394">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e93dd-395">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-395">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e93dd-396">현재 인스턴스의 값이 0이 아니면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-396"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-397">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e93dd-397">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e93dd-398"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-398">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e93dd-399">권장된 대안 호출 하는 것은 <xref:System.Convert.ToBoolean%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-399">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e93dd-400">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-400">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e93dd-401">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-401">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e93dd-402"><see cref="T:System.Byte" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-402">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-403">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e93dd-403">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e93dd-404"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-404">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e93dd-405">권장된 대안 호출 하는 것은 <xref:System.Convert.ToByte%28System.Int16%29?displayProperty=nameWithType> 메서드</span><span class="sxs-lookup"><span data-stu-id="e93dd-405">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int16%29?displayProperty=nameWithType> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e93dd-406">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-406">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e93dd-407">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-407">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e93dd-408"><see cref="T:System.Char" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-408">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-409">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e93dd-409">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e93dd-410"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-410">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e93dd-411">권장된 대안 호출 하는 것은 <xref:System.Convert.ToChar%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-411">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e93dd-412">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-412">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e93dd-413">이 변환은 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-413">This conversion is not supported.</span></span> <span data-ttu-id="e93dd-414">이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-414">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="e93dd-415">이 변환은 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-415">This conversion is not supported.</span></span> <span data-ttu-id="e93dd-416">값이 반환되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-416">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e93dd-417">모든 경우</span><span class="sxs-lookup"><span data-stu-id="e93dd-417">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e93dd-418">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-418">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e93dd-419">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-419">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e93dd-420"><see cref="T:System.Decimal" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-420">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-421">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e93dd-421">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e93dd-422"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-422">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e93dd-423">권장된 대안 호출 하는 것은 <xref:System.Convert.ToDecimal%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-423">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e93dd-424">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-424">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e93dd-425">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-425">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e93dd-426"><see cref="T:System.Double" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-426">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-427">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e93dd-427">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e93dd-428"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-428">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e93dd-429">권장된 대안 호출 하는 것은 <xref:System.Convert.ToDouble%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-429">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e93dd-430">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-430">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e93dd-431">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-431">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e93dd-432">변경되지 않은 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-432">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-433">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e93dd-433">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e93dd-434"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-434">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e93dd-435">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-435">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e93dd-436">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-436">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e93dd-437"><see cref="T:System.Int32" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-437">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-438">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e93dd-438">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e93dd-439"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-439">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e93dd-440">권장된 대안 호출 하는 것은 <xref:System.Convert.ToInt32%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-440">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e93dd-441">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-441">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e93dd-442">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-442">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e93dd-443"><see cref="T:System.Int64" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-443">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-444">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e93dd-444">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e93dd-445"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-445">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e93dd-446">권장된 대안 호출 하는 것은 <xref:System.Convert.ToInt64%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-446">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e93dd-447">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-447">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e93dd-448">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-448">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e93dd-449"><see cref="T:System.SByte" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-449">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-450">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e93dd-450">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e93dd-451"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-451">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e93dd-452">권장된 대안 호출 하는 것은 <xref:System.Convert.ToSByte%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-452">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e93dd-453">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-453">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e93dd-454">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-454">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e93dd-455"><see cref="T:System.Single" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-455">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-456">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e93dd-456">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e93dd-457"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-457">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e93dd-458">권장된 대안 호출 하는 것은 <xref:System.Convert.ToSingle%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-458">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e93dd-459">이 <see cref="T:System.Int16" /> 값을 변환할 대상 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-459">The type to which to convert this <see cref="T:System.Int16" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="e93dd-460">반환된 값의 형식에 대한 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-460">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="e93dd-461">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-461">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e93dd-462"><paramref name="type" />으로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-462">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-463">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e93dd-463">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e93dd-464"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-464">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e93dd-465">권장된 대안 호출 하는 것을 `static` (`Shared` Visual basic에서) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-465">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e93dd-466">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-466">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e93dd-467">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-467">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e93dd-468">변경되지 않은 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-468">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-469">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e93dd-469">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e93dd-470"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-470">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e93dd-471">권장된 대안 호출 하는 것은 <xref:System.Convert.ToUInt16%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-471">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e93dd-472">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-472">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e93dd-473">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-473">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e93dd-474"><see cref="T:System.UInt32" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-474">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-475">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e93dd-475">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e93dd-476"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-476">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e93dd-477">권장된 대안 호출 하는 것은 <xref:System.Convert.ToUInt32%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-477">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e93dd-478">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-478">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e93dd-479">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-479">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e93dd-480"><see cref="T:System.UInt64" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-480">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-481">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e93dd-481">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e93dd-482"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-482">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e93dd-483">권장된 대안 호출 하는 것은 <xref:System.Convert.ToUInt64%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-483">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e93dd-484">이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-484">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="int16.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e93dd-485">이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-485">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="e93dd-486">음수 부호(값이 음수일 경우)와 0부터 9 사이의 숫자(앞에 오는 0은 사용하지 않음)들로 구성된 이 인스턴스의 값에 대한 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-486">The string representation of the value of this instance, consisting of a minus sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-487"><xref:System.Int16.ToString> 메서드 형식을 <xref:System.Int16> 값 ("G" 또는 일반) 기본 형식을 사용 하 여를 <xref:System.Globalization.NumberFormatInfo> 현재 문화권의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-487">The <xref:System.Int16.ToString> method formats an <xref:System.Int16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="e93dd-488">다른 형식으로 또는 문화권을 지정 하려는 경우 사용 하 여 다른 오버 로드는 <xref:System.Int16.ToString%2A> 메서드를 다음과 같이:</span><span class="sxs-lookup"><span data-stu-id="e93dd-488">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="e93dd-489">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="e93dd-489">To use format</span></span>|<span data-ttu-id="e93dd-490">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="e93dd-490">For culture</span></span>|<span data-ttu-id="e93dd-491">오버 로드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-491">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="e93dd-492">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="e93dd-492">Default ("G") format</span></span>|<span data-ttu-id="e93dd-493">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="e93dd-493">A specific culture</span></span>|<xref:System.Int16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="e93dd-494">특정 형식</span><span class="sxs-lookup"><span data-stu-id="e93dd-494">A specific format</span></span>|<span data-ttu-id="e93dd-495">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="e93dd-495">Default (current) culture</span></span>|<xref:System.Int16.ToString%28System.String%29>|  
|<span data-ttu-id="e93dd-496">특정 형식</span><span class="sxs-lookup"><span data-stu-id="e93dd-496">A specific format</span></span>|<span data-ttu-id="e93dd-497">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="e93dd-497">A specific culture</span></span>|<xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="e93dd-498">다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 하는.NET Framework:</span><span class="sxs-lookup"><span data-stu-id="e93dd-498">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="e93dd-499">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-499">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="e93dd-500">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-500">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93dd-501">다음 예제에서는 합니다 <xref:System.Int16.ToString> 배열을 표시 하는 메서드 <xref:System.Int16> 콘솔에는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-501">The following example uses the <xref:System.Int16.ToString> method to display an array of <xref:System.Int16> values to the console.</span></span>  
  
 [!code-csharp[System.Int16.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.Int16.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="e93dd-502">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="e93dd-502">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="int16.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e93dd-503">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-503">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e93dd-504">지정된 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-504">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="e93dd-505">이 인스턴스의 값을 <paramref name="provider" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-505">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-506"><xref:System.Int16.ToString%28System.IFormatProvider%29> 메서드 형식을 <xref:System.Int16> 값 ("G" 또는 일반) 기본 형식을 사용 하 여를 <xref:System.Globalization.NumberFormatInfo> 지정된 된 문화권의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-506">The <xref:System.Int16.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="e93dd-507">다른 오버 로드를 사용 하 여 현재 문화권 또는 다른 형식으로 지정 하려는 경우를 <xref:System.Int16.ToString%2A> 메서드를 다음과 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-507">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="e93dd-508">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="e93dd-508">To use format</span></span>|<span data-ttu-id="e93dd-509">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="e93dd-509">For culture</span></span>|<span data-ttu-id="e93dd-510">오버 로드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-510">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="e93dd-511">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="e93dd-511">Default ("G") format</span></span>|<span data-ttu-id="e93dd-512">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="e93dd-512">Default (current) culture</span></span>|<xref:System.Int16.ToString>|  
|<span data-ttu-id="e93dd-513">특정 형식</span><span class="sxs-lookup"><span data-stu-id="e93dd-513">A specific format</span></span>|<span data-ttu-id="e93dd-514">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="e93dd-514">Default (current) culture</span></span>|<xref:System.Int16.ToString%28System.String%29>|  
|<span data-ttu-id="e93dd-515">특정 형식</span><span class="sxs-lookup"><span data-stu-id="e93dd-515">A specific format</span></span>|<span data-ttu-id="e93dd-516">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="e93dd-516">A specific culture</span></span>|<xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="e93dd-517">다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 하는.NET Framework:</span><span class="sxs-lookup"><span data-stu-id="e93dd-517">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="e93dd-518">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-518">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="e93dd-519">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-519">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="e93dd-520">`provider` 매개 변수는는 <xref:System.IFormatProvider> 구현입니다 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 개체.</span><span class="sxs-lookup"><span data-stu-id="e93dd-520">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="e93dd-521">일반적으로 `provider` 되는 <xref:System.Globalization.NumberFormatInfo> 개체 또는 <xref:System.Globalization.CultureInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-521">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> object or a <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="e93dd-522"><xref:System.Globalization.NumberFormatInfo> 이 메서드에서 반환 된 문자열의 형식에 대 한 문화권별 형식 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-522">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="e93dd-523">경우 `provider` 됩니다 `null`로 포맷 된이 인스턴스는 <xref:System.Globalization.NumberFormatInfo> 현재 문화권에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-523">If `provider` is `null`, this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93dd-524">다음 예제에서는 배열을 반복 <xref:System.Int16> 값 및 각각을 호출 하 여 콘솔에 표시 된 <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 다양 한 형식 공급자를 사용 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-524">The following example iterates an array of <xref:System.Int16> values and displays each of them to the console by calling the <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method with different format providers.</span></span> <span data-ttu-id="e93dd-525">기본 "G" 형식 지정자에 의해 정의 되는 형식은 단순 하므로 각각에 대 한 서식이 지정 된 문자열을 생성 <xref:System.Int16> 값의 값에 관계 없이 동일 합니다 `provider` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-525">Because of the simple formatting defined by the default "G" format specifier, the formatted strings produced for each <xref:System.Int16> value are identical regardless of the value of the `provider` parameter.</span></span>  
  
 [!code-csharp[System.Int16.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#2)]
 [!code-vb[System.Int16.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="e93dd-526">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="e93dd-526">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="int16.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e93dd-527">숫자 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-527">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="e93dd-528">지정된 형식을 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-528">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="e93dd-529">이 인스턴스의 값을 <paramref name="format" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-529">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-530">합니다 <xref:System.Int16.ToString%28System.String%29> 메서드 형식을 <xref:System.Int16> 사용 하 여 지정 된 형식으로 값을 <xref:System.Globalization.NumberFormatInfo> 현재 문화권의 규칙을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-530">The <xref:System.Int16.ToString%28System.String%29> method formats an <xref:System.Int16> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="e93dd-531">기본값 ("G" 또는 일반)을 사용 하려는 경우 형식 또는 다른 문화권을 지정 하 고, 다른 오버 로드를 사용 하 여를 <xref:System.Int16.ToString%2A> 메서드를 다음과 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-531">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="e93dd-532">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="e93dd-532">To use format</span></span>|<span data-ttu-id="e93dd-533">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="e93dd-533">For culture</span></span>|<span data-ttu-id="e93dd-534">오버 로드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-534">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="e93dd-535">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="e93dd-535">Default ("G") format</span></span>|<span data-ttu-id="e93dd-536">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="e93dd-536">Default (current) culture</span></span>|<xref:System.Int16.ToString>|  
|<span data-ttu-id="e93dd-537">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="e93dd-537">Default ("G") format</span></span>|<span data-ttu-id="e93dd-538">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="e93dd-538">A specific culture</span></span>|<xref:System.Int16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="e93dd-539">특정 형식</span><span class="sxs-lookup"><span data-stu-id="e93dd-539">A specific format</span></span>|<span data-ttu-id="e93dd-540">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="e93dd-540">A specific culture</span></span>|<xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="e93dd-541">`format` 표준 또는 사용자 지정 숫자 서식 문자열을 매개 변수 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-541">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="e93dd-542">모든 사용자 지정 숫자 서식 문자 "R" (또는 "r") 이외의 모든 표준 숫자 서식 문자열은 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-542">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="e93dd-543">하는 경우 `format` 는 `null` 이거나 빈 문자열인 경우 반환 값이 인스턴스의 일반 숫자 서식 지정자 ("G")를 사용 하 여 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-543">If `format` is `null` or an empty string, the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="e93dd-544">다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 하는.NET Framework:</span><span class="sxs-lookup"><span data-stu-id="e93dd-544">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="e93dd-545">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-545">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="e93dd-546">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-546">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="e93dd-547">이 인스턴스는 반환 값 형식은로 <xref:System.Globalization.NumberFormatInfo> 현재 문화권에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-547">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93dd-548">다음 예제에서는 두 개의 <xref:System.Int16> 값 및 각 지원 되는 표준 형식 문자열 및 몇 가지 사용자 지정 형식 문자열을 사용 하 여 콘솔에 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-548">The following example initializes two <xref:System.Int16> values and displays them to the console using each of the supported standard format strings and several custom format strings.</span></span> <span data-ttu-id="e93dd-549">이 예제에서는 현재 문화권으로 EN-US를 사용 하 여 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-549">The example is run with en-US as the current culture.</span></span>  
  
 [!code-csharp[System.Int16.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#3)]
 [!code-vb[System.Int16.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="e93dd-550">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="e93dd-550">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="e93dd-551">표준 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="e93dd-551">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="e93dd-552">사용자 지정 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="e93dd-552">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="e93dd-553">방법: 숫자 앞에 0으로 채우기</span><span class="sxs-lookup"><span data-stu-id="e93dd-553">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="int16.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e93dd-554">숫자 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-554">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="e93dd-555">문화권별 서식 지정 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-555">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e93dd-556">지정된 형식 및 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-556">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="e93dd-557"><paramref name="format" /> 및 <paramref name="provider" />로 지정된 이 인스턴스 값의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-557">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-558"><xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29> 메서드 형식을 <xref:System.Int16> 를 사용 하 여 지정 된 형식으로 값을 <xref:System.Globalization.NumberFormatInfo> 지정된 된 문화권의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-558">The <xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int16> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="e93dd-559">다른 오버 로드를 사용 하 여 기본 형식 또는 문화권 설정을 사용 하려는 경우는 <xref:System.Int16.ToString%2A> 메서드를 다음과 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-559">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="e93dd-560">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="e93dd-560">To use format</span></span>|<span data-ttu-id="e93dd-561">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="e93dd-561">For culture</span></span>|<span data-ttu-id="e93dd-562">오버 로드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-562">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="e93dd-563">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="e93dd-563">Default ("G") format</span></span>|<span data-ttu-id="e93dd-564">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="e93dd-564">Default (current) culture</span></span>|<xref:System.Int16.ToString>|  
|<span data-ttu-id="e93dd-565">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="e93dd-565">Default ("G") format</span></span>|<span data-ttu-id="e93dd-566">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="e93dd-566">A specific culture</span></span>|<xref:System.Int16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="e93dd-567">특정 형식</span><span class="sxs-lookup"><span data-stu-id="e93dd-567">A specific format</span></span>|<span data-ttu-id="e93dd-568">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="e93dd-568">Default (current) culture</span></span>|<xref:System.Int16.ToString%28System.String%29>|  
  
 <span data-ttu-id="e93dd-569">`format` 표준 또는 사용자 지정 숫자 서식 문자열을 매개 변수 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-569">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="e93dd-570">모든 사용자 지정 숫자 서식 문자 "R" (또는 "r") 이외의 모든 표준 숫자 서식 문자열은 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-570">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="e93dd-571">경우 `format` 는 `null` 또는 빈 문자열 (""),이 메서드에서 반환 된 문자열의 일반 숫자 서식 지정자 ("G")를 사용 하 여 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-571">If `format` is `null` or an empty string (""), the string returned by this method is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="e93dd-572">다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 하는.NET Framework:</span><span class="sxs-lookup"><span data-stu-id="e93dd-572">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="e93dd-573">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-573">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="e93dd-574">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-574">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="e93dd-575">합니다 `provider` 매개 변수는 <xref:System.IFormatProvider> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-575">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="e93dd-576">해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 이 메서드에서 반환 되는 문자열의 형식에 대 한 문화권별 형식 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-576">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="e93dd-577">구현 하는 개체 <xref:System.IFormatProvider> 다음 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-577">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="e93dd-578"><xref:System.Globalization.CultureInfo> 서식 지정 규칙에 사용 하려는 문화권을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-578">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="e93dd-579"><xref:System.Globalization.NumberFormatInfo> 이 값에 대 한 특정 숫자 형식 지정 정보를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-579">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="e93dd-580">구현 하는 사용자 지정 개체 <xref:System.IFormatProvider>합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-580">A custom object that implements <xref:System.IFormatProvider>.</span></span>  
  
 <span data-ttu-id="e93dd-581">경우 `provider` 됩니다 `null`, 또는 <xref:System.Globalization.NumberFormatInfo> 개체에서 가져올 수 없습니다 `provider`, 반환 값을 사용 하 여 형식이 <xref:System.Globalization.NumberFormatInfo> 현재 문화권에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-581">If `provider` is `null`, or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93dd-582">다음 예제에서는 표시는 <xref:System.Int16> 네 가지 문화권에서 각 지원 되는 표준 형식 문자열을 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-582">The following example displays an <xref:System.Int16> value using each of the supported standard format strings in four different cultures.</span></span>  
  
 [!code-csharp[System.Int16.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#4)]
 [!code-vb[System.Int16.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="e93dd-583">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="e93dd-583">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="e93dd-584">표준 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="e93dd-584">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="e93dd-585">사용자 지정 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="e93dd-585">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="e93dd-586">방법: 숫자 앞에 0으로 채우기</span><span class="sxs-lookup"><span data-stu-id="e93dd-586">How to: Pad a Number with Leading Zeros</span></span></related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="e93dd-587">샘플: .NET Framework 4 서식 유틸리티</span><span class="sxs-lookup"><span data-stu-id="e93dd-587">Sample: .NET Framework 4 Formatting Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="int16.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e93dd-588">숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-588">Converts the string representation of a number to its 16-bit signed integer equivalent.</span></span> <span data-ttu-id="e93dd-589">반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-589">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.Int16.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.ReadOnlySpan{System.Char},System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] short % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.int16.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.String,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] short % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.int16.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e93dd-590">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-590">A string containing a number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="e93dd-591">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자에 해당하는 16비트 부호 있는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-591">When this method returns, contains the 16-bit signed integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="e93dd-592"><paramref name="s" /> 매개 변수가 <see langword="null" /> 또는 <see cref="F:System.String.Empty" />이거나, 형식이 올바르지 않거나, <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-592">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span> <span data-ttu-id="e93dd-593">이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-593">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="e93dd-594">숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-594">Converts the string representation of a number to its 16-bit signed integer equivalent.</span></span> <span data-ttu-id="e93dd-595">반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-595">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="e93dd-596"><see langword="true" />가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-596"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-597">합니다 <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType> 에서 다른 메서드를 <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> 구문 분석 된 반환 하는 대신 구문 분석 작업이 성공 했는지를 나타내는 부울 값을 반환 하 여 메서드 <xref:System.Int16> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-597">The <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType> method differs from the <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed <xref:System.Int16> value.</span></span> <span data-ttu-id="e93dd-598">테스트 하기 위해 예외 처리를 사용할 필요가 한 <xref:System.FormatException> 이벤트에 `s` 잘못 되었으며 성공적으로 구문 분석할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-598">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="e93dd-599">`s` 매개 변수 형태로 숫자의 문자열 표현 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-599">The `s` parameter should be the string representation of a number in the form:</span></span>  
  
 <span data-ttu-id="e93dd-600">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="e93dd-600">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="e93dd-601">대괄호 ([및])는 선택 사항에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-601">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="e93dd-602">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-602">The following table describes each element.</span></span>  
  
|<span data-ttu-id="e93dd-603">요소</span><span class="sxs-lookup"><span data-stu-id="e93dd-603">Element</span></span>|<span data-ttu-id="e93dd-604">설명</span><span class="sxs-lookup"><span data-stu-id="e93dd-604">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="e93dd-605">*ws*</span><span class="sxs-lookup"><span data-stu-id="e93dd-605">*ws*</span></span>|<span data-ttu-id="e93dd-606">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-606">Optional white space.</span></span>|  
|<span data-ttu-id="e93dd-607">*sign*</span><span class="sxs-lookup"><span data-stu-id="e93dd-607">*sign*</span></span>|<span data-ttu-id="e93dd-608">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-608">An optional sign.</span></span>|  
|<span data-ttu-id="e93dd-609">*digits*</span><span class="sxs-lookup"><span data-stu-id="e93dd-609">*digits*</span></span>|<span data-ttu-id="e93dd-610">0에서 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-610">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="e93dd-611">합니다 `s` 매개 변수를 사용 하 여 해석 되는 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-611">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="e93dd-612">10 진수 숫자, 이외에 선행 및 후행 공백을 선행 기호 함께 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-612">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="e93dd-613">분명 하 게 함께 culture 별 서식 지정 정보에 포함 될 수 있는 스타일 요소를 정의할 `s`를 사용 하 여를 <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-613">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e93dd-614">`s` 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <xref:System.Globalization.NumberFormatInfo> 현재 시스템 문화권에 대 한 초기화 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-614">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="e93dd-615">자세한 내용은 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e93dd-615">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="e93dd-616">이 오버 로드는 <xref:System.Int16.TryParse%2A> 의 모든 숫자를 해석 하는 메서드는 `s` 소수 자릿수 매개 변수에 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-616">This overload of the <xref:System.Int16.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="e93dd-617">16 진수 숫자의 문자열 표현으로 구문 분석 하려면 호출을 <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-617">To parse the string representation of a hexadecimal number, call the <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93dd-618">다음 예제에서는 <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType> 다른 문자열 값의 개수를 사용 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-618">The following example calls the <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-csharp[System.Int16.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.Int16.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.TryParse/vb/TryParse1.vb#1)]  
  
 <span data-ttu-id="e93dd-619">문자열의 일부는 <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29> 방법은이 예제는 변환할 수는:</span><span class="sxs-lookup"><span data-stu-id="e93dd-619">Some of the strings that the <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="e93dd-620">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="e93dd-620">"9432.0".</span></span> <span data-ttu-id="e93dd-621">문자열에서 소수 구분 기호로;를 포함할 수 없습니다 때문에 변환에 실패 정수 계열 숫자만 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-621">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="e93dd-622">"16,667".</span><span class="sxs-lookup"><span data-stu-id="e93dd-622">"16,667".</span></span> <span data-ttu-id="e93dd-623">문자열에는 그룹 구분 기호; 포함할 수 없습니다 때문에 변환에 실패 정수 계열 숫자만 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-623">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="e93dd-624">"(100)".</span><span class="sxs-lookup"><span data-stu-id="e93dd-624">"(100)".</span></span> <span data-ttu-id="e93dd-625">문자열에서 현재 문화권에 의해 정의 된 것 이외의 음수 기호를 포함할 수 없습니다 때문에 변환에 실패 <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> 고 <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-625">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="e93dd-626">"01FA"입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-626">"01FA".</span></span> <span data-ttu-id="e93dd-627">문자열에 16 진수; 포함할 수 없습니다 때문에 변환에 실패 진수만 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-627">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="M:System.Int16.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="e93dd-628">.NET에서 숫자 문자열 구문 분석</span><span class="sxs-lookup"><span data-stu-id="e93dd-628">Parsing Numeric Strings in .NET</span></span></related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="e93dd-629">샘플: .NET Framework 4 서식 유틸리티</span><span class="sxs-lookup"><span data-stu-id="e93dd-629">Sample: .NET Framework 4 Formatting Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] short % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.int16.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] short % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.int16.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e93dd-630">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-630">A string containing a number to convert.</span></span> <span data-ttu-id="e93dd-631">이 문자열은 <paramref name="style" />이 지정하는 스타일을 사용하여 해석됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-631">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="e93dd-632"><paramref name="s" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-632">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="e93dd-633">지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-633">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="e93dd-634"><paramref name="s" />에 대한 문화권별 서식 지정 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-634">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="e93dd-635">이 메서드는 변환이 성공한 경우 <paramref name="s" />에 포함된 숫자에 해당하는 16비트 부호 있는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-635">When this method returns, contains the 16-bit signed integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="e93dd-636"><paramref name="s" /> 매개 변수가 <see langword="null" /> 또는 <see cref="F:System.String.Empty" />이거나, 형식이 <paramref name="style" />과 호환되지 않거나, <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-636">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span> <span data-ttu-id="e93dd-637">이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <paramref name="result" />에 제공된 모든 값을 덮어쓰게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-637">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="e93dd-638">지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-638">Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent.</span></span> <span data-ttu-id="e93dd-639">반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-639">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="e93dd-640"><see langword="true" />가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-640"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93dd-641">합니다 <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> 에서 다른 메서드를 <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 구문 분석 된 반환 하는 대신 구문 분석 작업이 성공 했는지를 나타내는 부울 값을 반환 하 여 메서드 <xref:System.Int16> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-641">The <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> method differs from the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed <xref:System.Int16> value.</span></span> <span data-ttu-id="e93dd-642">테스트 하기 위해 예외 처리를 사용할 필요가 한 <xref:System.FormatException> 이벤트에 `s` 잘못 되었으며 성공적으로 구문 분석할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-642">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="e93dd-643">합니다 `style` 매개 변수 (예: 공백 또는 양수 또는 음수 기호)에 사용할 수 있는 스타일 요소를 정의 합니다 `s` 구문 분석 작업이 성공 하기 위해 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-643">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="e93dd-644">비트 플래그 조합 이어야 합니다는 <xref:System.Globalization.NumberStyles> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-644">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="e93dd-645">스타일의 값에 따라는 `s` 매개 변수는 다음 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-645">Depending on the value of style, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="e93dd-646">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="e93dd-646">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="e93dd-647">또는 경우에는 `style` 매개 변수 포함 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="e93dd-647">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>:</span></span>  
  
 <span data-ttu-id="e93dd-648">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="e93dd-648">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="e93dd-649">대괄호 ([및])는 선택 사항에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-649">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="e93dd-650">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-650">The following table describes each element.</span></span>  
  
|<span data-ttu-id="e93dd-651">요소</span><span class="sxs-lookup"><span data-stu-id="e93dd-651">Element</span></span>|<span data-ttu-id="e93dd-652">설명</span><span class="sxs-lookup"><span data-stu-id="e93dd-652">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="e93dd-653">*ws*</span><span class="sxs-lookup"><span data-stu-id="e93dd-653">*ws*</span></span>|<span data-ttu-id="e93dd-654">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-654">Optional white space.</span></span> <span data-ttu-id="e93dd-655">맨 앞에 공백이 나타날 수 `s` 경우 `style` 포함 합니다 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 플래그를 또는 끝에 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-655">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="e93dd-656">Culture 별 통화 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-656">A culture-specific currency symbol.</span></span> <span data-ttu-id="e93dd-657">문자열의 해당 위치에서 정의 됩니다는 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> 의 속성을 <xref:System.Globalization.NumberFormatInfo> 에서 반환 된 개체를 <xref:System.IFormatProvider.GetFormat%2A> 메서드의 `provider` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="e93dd-657">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="e93dd-658">통화 기호에 나타날 수 있습니다 `s` 경우 `style` 포함 된 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-658">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e93dd-659">*sign*</span><span class="sxs-lookup"><span data-stu-id="e93dd-659">*sign*</span></span>|<span data-ttu-id="e93dd-660">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-660">An optional sign.</span></span>|  
|<span data-ttu-id="e93dd-661">*digits*</span><span class="sxs-lookup"><span data-stu-id="e93dd-661">*digits*</span></span>|<span data-ttu-id="e93dd-662">0부터 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-662">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="e93dd-663">*,*</span><span class="sxs-lookup"><span data-stu-id="e93dd-663">*,*</span></span>|<span data-ttu-id="e93dd-664">문화권별 천 단위 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-664">A culture-specific thousands separator.</span></span> <span data-ttu-id="e93dd-665">1000 단위 구분 기호에 지정 된 문화권의 `provider` 에 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-665">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e93dd-666">*.*</span><span class="sxs-lookup"><span data-stu-id="e93dd-666">*.*</span></span>|<span data-ttu-id="e93dd-667">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-667">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="e93dd-668">에 지정 된 문화권의 소수점 기호가 `provider` 에 나타날 수 있습니다 `s` 경우 `style` 포함 된 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그.</span><span class="sxs-lookup"><span data-stu-id="e93dd-668">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e93dd-669">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="e93dd-669">*fractional_digits*</span></span>|<span data-ttu-id="e93dd-670">숫자 0 개 이상의 발견 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-670">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="e93dd-671">소수 자릿수에 나타날 수 있습니다 `s` 경우에만 `style` 포함 된 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-671">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e93dd-672">*e*</span><span class="sxs-lookup"><span data-stu-id="e93dd-672">*e*</span></span>|<span data-ttu-id="e93dd-673">'E' 또는 'E' 문자 값은 지 수 표기법으로 표현 됨을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-673">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="e93dd-674">`s` 매개 변수는 경우 지 수 표기법으로 숫자를 나타낼 수 `style` 포함 된 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그.</span><span class="sxs-lookup"><span data-stu-id="e93dd-674">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e93dd-675">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="e93dd-675">*hexdigits*</span></span>|<span data-ttu-id="e93dd-676">16 진수 숫자 0 ~ f 또는 0 ~ 6. 시퀀스</span><span class="sxs-lookup"><span data-stu-id="e93dd-676">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="e93dd-677">종료 NUL (U + 0000)에 임의 문자를 `s` 의 값에 관계 없이 구문 분석 작업에서 무시 되는 `style` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-677">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="e93dd-678">진수만 포함 된 문자열 (해당 하는 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 플래그) 항상 성공적으로 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-678">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="e93dd-679">나머지 대부분 <xref:System.Globalization.NumberStyles> 멤버 수 있지만이 입력된 문자열에 있이 필요가 없습니다 있는 요소를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-679">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="e93dd-680">다음 표에서 개별 <xref:System.Globalization.NumberStyles> 멤버에 나타날 수 있는 요소에 영향을 줄 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-680">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="e93dd-681">비 복합 NumberStyles 값</span><span class="sxs-lookup"><span data-stu-id="e93dd-681">Non-composite NumberStyles values</span></span>|<span data-ttu-id="e93dd-682">숫자 외에도 s에 허용 되는 요소</span><span class="sxs-lookup"><span data-stu-id="e93dd-682">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="e93dd-683">소수 자릿수에만 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-683">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="e93dd-684">*.*</span><span class="sxs-lookup"><span data-stu-id="e93dd-684">The *.*</span></span> <span data-ttu-id="e93dd-685">및 *소수 자릿수* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-685">and *fractional_digits* elements.</span></span> <span data-ttu-id="e93dd-686">그러나 *소수 자릿수* 하나 이상의 0 자릿수 또는 메서드 반환으로 구성 되어야 합니다 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-686">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="e93dd-687">`s` 매개 변수 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-687">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="e93dd-688">하는 경우 `s` 지 수 표기법으로에서 숫자를 나타내는 범위 내의 정수 나타내야 합니다는 <xref:System.Int16> 0이 아닌 소수 부분이 없는 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-688">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int16> data type without a non-zero fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="e93dd-689">합니다 *ws* 맨 앞에 요소 *s*입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-689">The *ws* element at the beginning of *s*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="e93dd-690">합니다 *ws* 의 끝에 있는 요소 *s*입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-690">The *ws* element at the end of *s*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="e93dd-691">로그인 하기 전에 나타날 수 있습니다 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-691">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="e93dd-692">로그인 후 나타날 수 있습니다 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-692">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="e93dd-693">합니다 *기호* 형식의 숫자 값을 묶는 괄호는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-693">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="e93dd-694">합니다 *,* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-694">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="e93dd-695">합니다 *$* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-695">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="e93dd-696">모든 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-696">All elements.</span></span> <span data-ttu-id="e93dd-697">합니다 *s* 매개 변수를 16 진수 또는 지 수 표기법으로 숫자를에서 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-697">The *s* parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="e93dd-698">*ws* 시작과 끝 요소 `s`, *로그인* 의 시작 부분 `s`, 및 *합니다.*</span><span class="sxs-lookup"><span data-stu-id="e93dd-698">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="e93dd-699">기호입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-699">symbol.</span></span> <span data-ttu-id="e93dd-700">`s` 매개 변수 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-700">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="e93dd-701">*ws*, *로그인*, 천 단위 구분 기호 (*,*), 소수점 및 (*.*) 요소.</span><span class="sxs-lookup"><span data-stu-id="e93dd-701">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="e93dd-702">모든 스타일을 제외 하 고 `s` 16 진수 숫자를 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-702">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="e93dd-703">경우는 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 플래그를 사용할 `s` 접두사 없이 16 진수 값 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-703">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="e93dd-704">예를 들어, "9AF3" 성공적으로 구문 분석 하지만 "0x9AF3" 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-704">For example, "9AF3" parses successfully, but "0x9AF3" does not.</span></span> <span data-ttu-id="e93dd-705">만 다른 플래그에 있을 수 있는 `style` 됩니다 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 고 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-705">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e93dd-706">(합니다 <xref:System.Globalization.NumberStyles> 열거형에는 복합 스타일 인 <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, 모두 공백 플래그를 포함 하는.)</span><span class="sxs-lookup"><span data-stu-id="e93dd-706">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="e93dd-707">`provider` 매개 변수는는 <xref:System.IFormatProvider> 구현와 같은 <xref:System.Globalization.CultureInfo> 개체 또는 <xref:System.Globalization.NumberFormatInfo> 개체입니다 <xref:System.IFormatProvider.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 개체.</span><span class="sxs-lookup"><span data-stu-id="e93dd-707">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="e93dd-708">합니다 <xref:System.Globalization.NumberFormatInfo> 개체의 형식에 대 한 문화권별 형식 정보를 제공 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-708">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="e93dd-709">하는 경우 `provider` 됩니다 `null`는 <xref:System.Globalization.NumberFormatInfo> 개체가 현재 문화권이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-709">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93dd-710">다음 예제에서는 <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> 다른 문자열 값의 개수를 사용 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="e93dd-710">The following example calls the <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-csharp[System.Int16.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Int16.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e93dd-711"><paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-711"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="e93dd-712">또는</span><span class="sxs-lookup"><span data-stu-id="e93dd-712">-or-</span></span> 
 <span data-ttu-id="e93dd-713"><paramref name="style" />이 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 및 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 값의 조합이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e93dd-713"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="Overload:System.Int16.Parse" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int16.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="e93dd-714">.NET에서 숫자 문자열 구문 분석</span><span class="sxs-lookup"><span data-stu-id="e93dd-714">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>