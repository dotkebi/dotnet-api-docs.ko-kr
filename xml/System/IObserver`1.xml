<Type Name="IObserver&lt;T&gt;" FullName="System.IObserver&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="366b57b3cd7204fdba04d286c4bf8bfdc67f60c1" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58729520" /></Metadata><TypeSignature Language="C#" Value="public interface IObserver&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObserver`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObserver`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObserver(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObserver" />
  <TypeSignature Language="F#" Value="type IObserver&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="7cb40-101">알림 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-101">The object that provides notification information.</span></span></typeparam>
    <summary><span data-ttu-id="7cb40-102">푸시 기반 알림을 받기 위한 메커니즘을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-102">Provides a mechanism for receiving push-based notifications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cb40-103">합니다 <xref:System.IObserver%601> 고 <xref:System.IObservable%601> 인터페이스 푸시 기반 알림의 경우 관찰자 디자인 패턴 라고도 일반화 메커니즘을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-103">The <xref:System.IObserver%601> and <xref:System.IObservable%601> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern.</span></span> <span data-ttu-id="7cb40-104">합니다 <xref:System.IObservable%601> 인터페이스 (공급자); 알림을 전송 하는 클래스를 나타냅니다는 <xref:System.IObserver%601> 인터페이스를 수신 합니다 (관찰자)는 클래스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-104">The <xref:System.IObservable%601> interface represents the class that sends notifications (the provider); the <xref:System.IObserver%601> interface represents the class that receives them (the observer).</span></span> <span data-ttu-id="7cb40-105">`T` 알림 정보를 제공 하는 클래스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-105">`T` represents the class that provides the notification information.</span></span>  
  
 <span data-ttu-id="7cb40-106"><xref:System.IObserver%601> 구현 공급자 로부터 알림을 수신 하도록 정렬 (을 <xref:System.IObservable%601> 구현)를 공급자의 자체 인스턴스를 전달 하 여 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="7cb40-106">An <xref:System.IObserver%601> implementation arranges to receive notifications from a provider (an <xref:System.IObservable%601> implementation) by passing an instance of itself to the provider's <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7cb40-107">이 메서드가 반환을 <xref:System.IDisposable> 공급자 하기 전에 관찰자를 구독 취소를 사용할 수 있는 개체가 완료 알림을 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-107">This method returns an <xref:System.IDisposable> object that can be used to unsubscribe the observer before the provider finishes sending notifications.</span></span>  
  
 <span data-ttu-id="7cb40-108"><xref:System.IObserver%601> 인터페이스 관찰자 구현 해야 하는 다음 세 가지 메서드를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-108">The <xref:System.IObserver%601> interface defines the following three methods that the observer must implement:</span></span>  
  
-   <span data-ttu-id="7cb40-109"><xref:System.IObserver%601.OnNext%2A> 메서드는 일반적으로 공급자는 관찰자에 게 새 데이터 또는 상태 정보를 제공 하 여 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-109">The <xref:System.IObserver%601.OnNext%2A> method, which is typically called by the provider to supply the observer with new data or state information.</span></span>  
  
-   <span data-ttu-id="7cb40-110"><xref:System.IObserver%601.OnError%2A> 일반적으로 공급자에 액세스할 수 없거나 손상 된 데이터 임을 나타내려면에 의해 호출 되는 메서드 또는 공급자에 일부 오류 조건이 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-110">The <xref:System.IObserver%601.OnError%2A> method, which is typically called by the provider to indicate that data is unavailable, inaccessible, or corrupted, or that the provider has experienced some other error condition.</span></span>  
  
-   <span data-ttu-id="7cb40-111"><xref:System.IObserver%601.OnCompleted%2A> 메서드는 일반적으로 관찰자가 알림 보내기를 완료 했음을 나타내기 위해 공급자에 의해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-111">The <xref:System.IObserver%601.OnCompleted%2A> method, which is typically called by the provider to indicate that it has finished sending notifications to observers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cb40-112">다음 예제에서는 관찰자 디자인 패턴을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-112">The following example illustrates the observer design pattern.</span></span> <span data-ttu-id="7cb40-113">정의 `Location` 위도 및 경도 정보를 포함 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-113">It defines a `Location` class that contains latitude and longitude information.</span></span>  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 <span data-ttu-id="7cb40-114">합니다 `LocationReporter` 클래스를 제공 합니다 <xref:System.IObserver%601> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-114">The `LocationReporter` class provides the <xref:System.IObserver%601> implementation.</span></span> <span data-ttu-id="7cb40-115">현재 위치에 대 한 정보를 콘솔에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-115">It displays information about the current location to the console.</span></span> <span data-ttu-id="7cb40-116">해당 생성자를 포함 한 `name` 매개 변수를를 `LocationReporter` 문자열 출력에서 자신을 식별 하는 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="7cb40-116">Its constructor includes a `name` parameter, which allows the `LocationReporter` instance to identify itself in its string output.</span></span> <span data-ttu-id="7cb40-117">또한를 `Subscribe` 메서드는 공급자에 대 한 호출을 래핑하는 <xref:System.IObservable%601.Subscribe%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="7cb40-117">It also includes a `Subscribe` method, which wraps a call to the provider's <xref:System.IObservable%601.Subscribe%2A> method.</span></span> <span data-ttu-id="7cb40-118">이렇게 하면 반환 된 방법 <xref:System.IDisposable> private 변수를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-118">This enables the method to assign the returned <xref:System.IDisposable> reference to a private variable.</span></span> <span data-ttu-id="7cb40-119">`LocationReporter` 클래스도 포함 되어 있습니다를 `Unsubscribe` 메서드를 호출 하는 합니다 <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> 반환 하는 개체의 메서드는 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="7cb40-119">The `LocationReporter` class also includes an `Unsubscribe` method, which calls the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method of the object returned by the <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7cb40-120">다음 코드는 정의 된 `LocationReporter` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-120">The following code defines the `LocationReporter` class.</span></span>  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 <span data-ttu-id="7cb40-121">합니다 `LocationTracker` 클래스를 제공 합니다 <xref:System.IObservable%601> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-121">The `LocationTracker` class provides the <xref:System.IObservable%601> implementation.</span></span> <span data-ttu-id="7cb40-122">해당 `TrackLocation` 메서드는 null을 허용 되는지를 `Location` 위도 및 경도 데이터가 들어 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-122">Its `TrackLocation` method is passed a nullable `Location` object that contains the latitude and longitude data.</span></span> <span data-ttu-id="7cb40-123">경우는 `Location` 값이 아닙니다 `null`의 `TrackLocation` 메서드 호출을 <xref:System.IObserver%601.OnNext%2A> 각 관찰자의 메서드.</span><span class="sxs-lookup"><span data-stu-id="7cb40-123">If the `Location` value is not `null`, the `TrackLocation` method calls the <xref:System.IObserver%601.OnNext%2A> method of each observer.</span></span>  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 <span data-ttu-id="7cb40-124">경우는 `Location` 값이 `null`, `TrackLocation` 메서드를 만드는 데는 `LocationNotFoundException` 다음 예제에 나와 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-124">If the `Location` value is `null`, the `TrackLocation` method instantiates a `LocationNotFoundException` object, which is shown in the following example.</span></span> <span data-ttu-id="7cb40-125">그런 다음 각 관찰자를 호출 <xref:System.IObserver%601.OnError%2A> 메서드를 전달 합니다 `LocationNotFoundException` 개체.</span><span class="sxs-lookup"><span data-stu-id="7cb40-125">It then calls each observer's <xref:System.IObserver%601.OnError%2A> method and passes it the `LocationNotFoundException` object.</span></span> <span data-ttu-id="7cb40-126">사실은 `LocationNotFoundException` 에서 파생 <xref:System.Exception> 하지만 새 멤버를 추가 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-126">Note that `LocationNotFoundException` derives from <xref:System.Exception> but does not add any new members.</span></span>  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 <span data-ttu-id="7cb40-127">관찰자에서 알림을 받으려면 등록을 `TrackLocation` 개체를 호출 하 여 해당 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> private 제네릭 observer 개체에 대 한 참조를 할당 하는 메서드를 <xref:System.Collections.Generic.List%601> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-127">Observers register to receive notifications from a `TrackLocation` object by calling its <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method, which assigns a reference to the observer object to a private generic <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="7cb40-128">메서드는 `Unsubscriber` 개체 이며는 <xref:System.IDisposable> 관찰자가 알림 수신을 중지할 수 있도록 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-128">The method returns an `Unsubscriber` object, which is an <xref:System.IDisposable> implementation that enables observers to stop receiving notifications.</span></span> <span data-ttu-id="7cb40-129">합니다 `LocationTracker` 클래스도 포함 되어 있습니다를 `EndTransmission` 메서드.</span><span class="sxs-lookup"><span data-stu-id="7cb40-129">The `LocationTracker` class also includes an `EndTransmission` method.</span></span> <span data-ttu-id="7cb40-130">메서드 호출 된 각 관찰자의 추가 위치 데이터가 없음을 사용할 수 있는 경우 <xref:System.IObserver%601.OnCompleted%2A> 메서드 관찰자의 내부 목록을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-130">When no further location data is available, the method calls each observer's <xref:System.IObserver%601.OnCompleted%2A> method and then clears the internal list of observers.</span></span>  
  
 <span data-ttu-id="7cb40-131">다음 코드는 다음 공급자와 관찰자를 인스턴스화합니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-131">The following code then instantiates the provider and the observer.</span></span>  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObservable`1" />
  </Docs>
  <Members>
    <Member MemberName="OnCompleted">
      <MemberSignature Language="C#" Value="public void OnCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnCompleted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnCompleted();" />
      <MemberSignature Language="F#" Value="abstract member OnCompleted : unit -&gt; unit" Usage="iObserver.OnCompleted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7cb40-132">공급자가 푸시 기반 알림 전송을 완료했음을 관찰자에게 알립니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-132">Notifies the observer that the provider has finished sending push-based notifications.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cb40-133">때 관찰자의 <xref:System.IObserver%601.OnCompleted%2A> 구현이 호출 됩니다를 <xref:System.IObserver%601.OnCompleted%2A> 메서드 호출 수를 <xref:System.IDisposable.Dispose%2A> 메서드의 <xref:System.IDisposable> 호출한 경우 관찰자에 게 반환 된 개체를 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="7cb40-133">When the observer's <xref:System.IObserver%601.OnCompleted%2A> implementation is called, the <xref:System.IObserver%601.OnCompleted%2A> method can optionally call the <xref:System.IDisposable.Dispose%2A> method of the <xref:System.IDisposable> object that was returned to the observer when it called the <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cb40-134">다음 예제에서는 구현을 제공 합니다 <xref:System.IObserver%601.OnCompleted%2A> 응용 프로그램을 추적 하는 위도/경도에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="7cb40-134">The following example provides an implementation of the <xref:System.IObserver%601.OnCompleted%2A> method in a latitude/longitude tracking application.</span></span> <span data-ttu-id="7cb40-135">추가 데이터가 없음을 제공 되며 공급자의 호출 메서드에 보고 <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-135">The method simply reports that no further data is available and calls the provider's <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="7cb40-136">예제 섹션을 참조 합니다 <xref:System.IObserver%601> 전체 예제에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-136">See the Example section of the <xref:System.IObserver%601> topic for the complete example.</span></span>  
  
 [!code-csharp[System.IObserver.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#11)]
 [!code-vb[System.IObserver.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public void OnError (Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnError(class System.Exception error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnError (error As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnError(Exception ^ error);" />
      <MemberSignature Language="F#" Value="abstract member OnError : Exception -&gt; unit" Usage="iObserver.OnError error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="7cb40-137">오류에 대한 추가 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-137">An object that provides additional information about the error.</span></span></param>
        <summary><span data-ttu-id="7cb40-138">공급자에 오류 조건이 있음을 옵서버에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-138">Notifies the observer that the provider has experienced an error condition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cb40-139">하지만 `error` 에서 파생 되는 개체인 <xref:System.Exception?displayProperty=nameWithType>를 공급자에 의해 throw 되는 예외가 반드시 나타내지는지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-139">Although `error` is an object that is derived from <xref:System.Exception?displayProperty=nameWithType>, it does not necessarily represent an exception that is thrown by the provider.</span></span> <span data-ttu-id="7cb40-140">누락 되었거나 사용할 수 없게 하는 데이터와 같은 루틴 또는 예상 오류 조건을 나타낼 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-140">It can also represent a routine or expected error condition, such as data that is missing or unavailable.</span></span> <span data-ttu-id="7cb40-141"><xref:System.IObserver%601.OnError%2A> 메서드 정보,으로 이해 되어야 합니다 및 오류 처리를 제공 하는 관찰자는 공급자를 기대할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-141">The <xref:System.IObserver%601.OnError%2A> method should be seen as informational, and the provider should not expect the observer to provide error handling.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cb40-142">다음 예제에서는 구현을 제공 합니다 <xref:System.IObserver%601.OnError%2A> 응용 프로그램을 추적 하는 위도/경도에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="7cb40-142">The following example provides an implementation of the <xref:System.IObserver%601.OnError%2A> method in a latitude/longitude tracking application.</span></span> <span data-ttu-id="7cb40-143">메서드를 보고 데이터는 현재 사용할 수 있습니다. 않는 사용은 <xref:System.Exception> 개체를 매개 변수로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-143">The method simply reports that data is currently unavailable; it does not make use of the <xref:System.Exception> object passed to it as a parameter.</span></span> <span data-ttu-id="7cb40-144">예제 섹션을 참조 합니다 <xref:System.IObserver%601> 전체 예제에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-144">See the Example section of the <xref:System.IObserver%601> topic for the complete example.</span></span>  
  
 [!code-csharp[System.IObserver.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#10)]
 [!code-vb[System.IObserver.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c834760f-ddd4-417f-abb7-a059679d5b8c"><span data-ttu-id="7cb40-145">관찰자 디자인 패턴 모범 사례</span><span class="sxs-lookup"><span data-stu-id="7cb40-145">Observer Design Pattern Best Practices</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnNext">
      <MemberSignature Language="C#" Value="public void OnNext (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNext(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnNext(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnNext (value As T)" />
      <MemberSignature Language="F#" Value="abstract member OnNext : 'T -&gt; unit" Usage="iObserver.OnNext value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7cb40-146">현재 알림 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-146">The current notification information.</span></span></param>
        <summary><span data-ttu-id="7cb40-147">관찰자에게 새 데이터를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-147">Provides the observer with new data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cb40-148">관찰자는 공급자의 호출한 후 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> 호출, 공급자는 관찰자의 <xref:System.IObserver%601.OnNext%2A> 알림을 제공 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-148">After an observer has called a provider's <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method, the provider calls the observer's <xref:System.IObserver%601.OnNext%2A> method to provide notifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cb40-149">다음 예제에서는 구현을 제공 합니다 <xref:System.IObserver%601.OnNext%2A> 응용 프로그램을 추적 하는 위도/경도에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="7cb40-149">The following example provides an implementation of the <xref:System.IObserver%601.OnNext%2A> method in a latitude/longitude tracking application.</span></span> <span data-ttu-id="7cb40-150">예제 섹션을 참조 합니다 <xref:System.IObserver%601> 전체 예제에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="7cb40-150">See the Example section of the <xref:System.IObserver%601> topic for the complete example.</span></span>  
  
 [!code-csharp[System.IObserver.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#12)]
 [!code-vb[System.IObserver.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>