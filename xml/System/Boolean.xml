<Type Name="Boolean" FullName="System.Boolean">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ac4a039a9c81389529fdd4c092b3a19c567ed8c" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56351099" /></Metadata><TypeSignature Language="C#" Value="public struct Boolean : IComparable, IComparable&lt;bool&gt;, IConvertible, IEquatable&lt;bool&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit bool extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;bool&gt;, class System.IConvertible, class System.IEquatable`1&lt;bool&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Boolean" />
  <TypeSignature Language="VB.NET" Value="Public Structure Boolean&#xA;Implements IComparable, IComparable(Of Boolean), IConvertible, IEquatable(Of Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public value class Boolean : IComparable, IComparable&lt;bool&gt;, IConvertible, IEquatable&lt;bool&gt;" />
  <TypeSignature Language="F#" Value="type bool = struct&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Boolean&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Boolean&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a58e9-101">부울(<see langword="true" /> 또는 <see langword="false" />) 값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-101">Represents a Boolean (<see langword="true" /> or <see langword="false" />) value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-102">A <xref:System.Boolean> 인스턴스 두 값 중 하나를 가질 수 있습니다: `true`, 또는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-102">A <xref:System.Boolean> instance can have either of two values: `true`, or `false`.</span></span>  
  
 <span data-ttu-id="a58e9-103"><xref:System.Boolean> 구조는 다음과 같은 작업을 지 원하는 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-103">The <xref:System.Boolean> structure provides methods that support the following tasks:</span></span>  
  
-   <span data-ttu-id="a58e9-104">부울 값을 문자열로 변환 합니다. <xref:System.Boolean.ToString%2A></span><span class="sxs-lookup"><span data-stu-id="a58e9-104">Converting Boolean values to strings: <xref:System.Boolean.ToString%2A></span></span>  
  
-   <span data-ttu-id="a58e9-105">부울 값으로 변환할 문자열을 구문 분석: <xref:System.Boolean.Parse%2A> 및 <xref:System.Boolean.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="a58e9-105">Parsing strings to convert them to Boolean values: <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A></span></span>  
  
-   <span data-ttu-id="a58e9-106">값 비교: <xref:System.Boolean.CompareTo%2A> 및 <xref:System.Boolean.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="a58e9-106">Comparing values: <xref:System.Boolean.CompareTo%2A> and <xref:System.Boolean.Equals%2A></span></span>  
  
 <span data-ttu-id="a58e9-107">다음 섹션에서는 이러한 태스크 및 기타 사용 현황 세부 정보를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-107">The following sections explain these tasks and other usage details:</span></span>  
  
 <span data-ttu-id="a58e9-108">[부울 값의 서식 지정](#Formatting) </span><span class="sxs-lookup"><span data-stu-id="a58e9-108">[Formatting Boolean values](#Formatting) </span></span>  
 <span data-ttu-id="a58e9-109">[부울 값 사이의 변환](#Converting) </span><span class="sxs-lookup"><span data-stu-id="a58e9-109">[Converting to and from Boolean values](#Converting) </span></span>  
 <span data-ttu-id="a58e9-110">[부울 값을 구문 분석](#Parsing) </span><span class="sxs-lookup"><span data-stu-id="a58e9-110">[Parsing Boolean values](#Parsing) </span></span>  
 <span data-ttu-id="a58e9-111">[부울 값 비교](#Comparing) </span><span class="sxs-lookup"><span data-stu-id="a58e9-111">[Comparing Boolean values](#Comparing) </span></span>  
 <span data-ttu-id="a58e9-112">[이진 값으로 부울을 사용 하 여 작동합니다.](#Binary) </span><span class="sxs-lookup"><span data-stu-id="a58e9-112">[Working with Booleans as binary values](#Binary) </span></span>  
 <span data-ttu-id="a58e9-113">[부울 값을 사용 하 여 작업을 수행합니다.](#Operations) </span><span class="sxs-lookup"><span data-stu-id="a58e9-113">[Performing operations with Boolean values](#Operations) </span></span>  
 [<span data-ttu-id="a58e9-114">않음은 Booleans 및 Interop</span><span class="sxs-lookup"><span data-stu-id="a58e9-114">Booleans and Interop</span></span>](#Interop)  
  
<a name="Formatting"></a>   
## <a name="formatting-boolean-values"></a><span data-ttu-id="a58e9-115">부울 값의 서식 지정</span><span class="sxs-lookup"><span data-stu-id="a58e9-115">Formatting Boolean values</span></span>  
 <span data-ttu-id="a58e9-116">문자열 표현을 <xref:System.Boolean> 은 "True"에 대 한는 `true` 값 또는 "False"에 대 한는 `false` 값.</span><span class="sxs-lookup"><span data-stu-id="a58e9-116">The string representation of a <xref:System.Boolean> is either "True" for a `true` value or "False" for a `false` value.</span></span> <span data-ttu-id="a58e9-117">문자열 표현 된 <xref:System.Boolean> 값의 읽기 전용으로 정의 됩니다 <xref:System.Boolean.TrueString> 및 <xref:System.Boolean.FalseString> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-117">The string representation of a <xref:System.Boolean> value is defined by the read-only <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields.</span></span>  
  
 <span data-ttu-id="a58e9-118">사용 된 <xref:System.Boolean.ToString%2A> 부울 값을 문자열로 변환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-118">You use the <xref:System.Boolean.ToString%2A> method to convert Boolean values to strings.</span></span> <span data-ttu-id="a58e9-119">두 부울 구조 포함 <xref:System.Boolean.ToString%2A> 오버 로드: 매개 변수가 없는 <xref:System.Boolean.ToString> 메서드 및 <xref:System.Boolean.ToString%28System.IFormatProvider%29> 서식 지정을 제어 하는 매개 변수를 포함 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-119">The Boolean structure includes two <xref:System.Boolean.ToString%2A> overloads: the parameterless <xref:System.Boolean.ToString> method and the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method, which includes a parameter that controls formatting.</span></span> <span data-ttu-id="a58e9-120">그러나이 매개 변수는 무시 되므로 두 오버 로드는 동일한 문자열을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-120">However, because this parameter is ignored, the two overloads produce identical strings.</span></span> <span data-ttu-id="a58e9-121"><xref:System.Boolean.ToString%28System.IFormatProvider%29> 메서드 문화권 구분 서식 지정을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-121">The <xref:System.Boolean.ToString%28System.IFormatProvider%29> method does not support culture-sensitive formatting.</span></span>  
  
 <span data-ttu-id="a58e9-122">다음 예제를 사용 하 여 서식 지정을 <xref:System.Boolean.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-122">The following example illustrates formatting with the <xref:System.Boolean.ToString%2A> method.</span></span> <span data-ttu-id="a58e9-123">예제를 사용 하는 참고 합니다 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md) 기능을 하므로 <xref:System.Boolean.ToString%2A> 메서드는 암시적으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-123">Note that the example uses the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature, so the <xref:System.Boolean.ToString%2A> method is called implicitly.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring1.cs#3)]
 [!code-vb[System.Boolean.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring1.vb#3)]  
  
 <span data-ttu-id="a58e9-124">때문에 <xref:System.Boolean> 구조는 두 개의 값을 가질 수, 사용자 지정 서식 지정을 추가 하기 쉽습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-124">Because the <xref:System.Boolean> structure can have only two values, it is easy to add custom formatting.</span></span> <span data-ttu-id="a58e9-125">간단한 사용자 지정 서식 지정을 위해 다른 문자열 리터럴 "True" 및 "False"에 대 한 대체는 같은 언어를 지 원하는 모든 조건부 평가 기능을 사용할 수 있습니다 합니다 [조건부 연산자](~/docs/csharp/language-reference/operators/conditional-operator.md) C# 또는 합니다 [경우 연산자](~/docs/visual-basic/language-reference/operators/if-operator.md) Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-125">For simple custom formatting in which other string literals are substituted for "True" and "False", you can use any conditional evaluation feature supported by your language, such as the [conditional operator](~/docs/csharp/language-reference/operators/conditional-operator.md) in C# or the [If operator](~/docs/visual-basic/language-reference/operators/if-operator.md) in Visual Basic.</span></span> <span data-ttu-id="a58e9-126">다음 예제에서는이 기술을 사용 하 여 서식을 지정 하려면 <xref:System.Boolean> 값 "Yes" 및 "No" 대신 "True" 및 "False"입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-126">The following example uses this technique to format <xref:System.Boolean> values as "Yes" and "No" rather than "True" and "False".</span></span>  
  
 [!code-csharp[System.Boolean.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring2.cs#4)]
 [!code-vb[System.Boolean.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring2.vb#4)]  
  
 <span data-ttu-id="a58e9-127">더 복잡 한 사용자 지정 서식 지정 작업에 대 한 문화권 구분 서식 지정을 포함 하 여 호출할 수 있습니다는 <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 메서드를 제공 하 고는 <xref:System.ICustomFormatter> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-127">For more complex custom formatting operations, including culture-sensitive formatting, you can call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method and provide an <xref:System.ICustomFormatter> implementation.</span></span> <span data-ttu-id="a58e9-128">다음 예에서는 구현 하는 <xref:System.ICustomFormatter> 및 <xref:System.IFormatProvider> 영어 (미국), 프랑스어 (프랑스) 및 러시아어 (러시아) 문화권에 대 한 문화권별 부울 문자열을 제공 하는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-128">The following example implements the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces to provide culture-sensitive Boolean strings for the English (United States), French (France), and Russian (Russia) cultures.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/format3.cs#5)]
 [!code-vb[System.Boolean.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/format3.vb#5)]  
  
 <span data-ttu-id="a58e9-129">사용할 수 있습니다 [리소스 파일](https://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890) 문화권별 부울 문자열을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-129">Optionally, you can use [resource files](https://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890) to define culture-specific Boolean strings.</span></span>  
  
<a name="Converting"></a>   
## <a name="converting-to-and-from-boolean-values"></a><span data-ttu-id="a58e9-130">부울 값 사이의 변환</span><span class="sxs-lookup"><span data-stu-id="a58e9-130">Converting to and from Boolean values</span></span>  
 <span data-ttu-id="a58e9-131">합니다 <xref:System.Boolean> 구현 구조체는 <xref:System.IConvertible> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-131">The <xref:System.Boolean> structure implements the <xref:System.IConvertible> interface.</span></span>  <span data-ttu-id="a58e9-132">결과적으로 사용할 수 있습니다는 <xref:System.Convert> 간에 변환을 수행 하는 클래스를 <xref:System.Boolean> 값과.NET Framework의 다른 기본 형식을 호출할 수는 <xref:System.Boolean> 구조체의 명시적 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-132">As a result, you can use the <xref:System.Convert> class to perform conversions between a <xref:System.Boolean> value and any other primitive type in the .NET Framework, or you can call the <xref:System.Boolean> structure's explicit implementations.</span></span> <span data-ttu-id="a58e9-133">그러나 간의 변환을 <xref:System.Boolean> 및 다음 종류는 지원 되지 않으므로 해당 변환 메서드까지 throw는 <xref:System.InvalidCastException> 예외:</span><span class="sxs-lookup"><span data-stu-id="a58e9-133">However, conversions between a <xref:System.Boolean> and the following types are not supported, so the corresponding conversion methods throw an <xref:System.InvalidCastException> exception:</span></span>  
  
-   <span data-ttu-id="a58e9-134">간의 변환을 <xref:System.Boolean> 하 고 <xref:System.Char> (합니다 <xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType> 및 <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> 메서드)</span><span class="sxs-lookup"><span data-stu-id="a58e9-134">Conversion between <xref:System.Boolean> and <xref:System.Char> (the <xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType> and <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> methods)</span></span>  
  
-   <span data-ttu-id="a58e9-135">간의 변환을 <xref:System.Boolean> 하 고 <xref:System.DateTime> (합니다 <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> 및 <xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType> 메서드)</span><span class="sxs-lookup"><span data-stu-id="a58e9-135">Conversion between <xref:System.Boolean> and <xref:System.DateTime> (the <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> and <xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType> methods)</span></span>  
  
 <span data-ttu-id="a58e9-136">부울 값으로 모든 변환은 정수 계열 또는 부동 소수점 숫자에서 0이 아닌 값으로 변환 `true` 및 0 값을 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-136">All conversions from integral or floating-point numbers to Boolean values convert non-zero values to `true` and zero values to `false`.</span></span>  <span data-ttu-id="a58e9-137">다음 예제에서는 선택한 오버 로드를 호출 하 여이 설명 합니다 <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-137">The following example illustrates this by calling selected overloads of the <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> class.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion1.cs#6)]
 [!code-vb[System.Boolean.Structure#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion1.vb#6)]  
  
 <span data-ttu-id="a58e9-138">부동 소수점 값에서 부울 값으로 변환할 때 변환 메서드 0 사용 하 여 정확한 비교를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-138">When converting from floating-point values to Boolean values, the conversion methods perform an exact comparison with zero.</span></span> <span data-ttu-id="a58e9-139">부동 소수점 값에 전체 자릿수 손실 결과 예상 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-139">If the floating-point value has lost precision, the result can be unexpected.</span></span> <span data-ttu-id="a58e9-140">이는 다음 예제에서는 나와 <xref:System.Double> 해당 값은 0 이어야 하는 변수에 부울 값으로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-140">This is illustrated in the following example, in which a <xref:System.Double> variable whose value should be zero is converted to a Boolean value.</span></span> <span data-ttu-id="a58e9-141">결과 위의 예제와 같이 `true` 0.2 추가 전체 자릿수 손실이 발생 했을 반복 하기 때문에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-141">As the example shows, the result is `true` because repeated additions of 0.2 have resulted in a loss of precision.</span></span>  
  
 <span data-ttu-id="a58e9-142">부울의 변환 메서드는 숫자 값에서 변환할 때 합니다 <xref:System.Convert> 클래스 변환 `true` 1 및 `false` 0으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-142">When converting from Boolean to numeric values, the conversion methods of the <xref:System.Convert> class convert `true` to 1 and `false` to 0.</span></span> <span data-ttu-id="a58e9-143">그러나 Visual Basic 변환 함수 변환 `true` 하거나 255 (변환을 <xref:System.Byte> 값) 또는-1 (다른 모든 숫자 변환의).</span><span class="sxs-lookup"><span data-stu-id="a58e9-143">However, Visual Basic conversion functions convert `true` to either 255 (for conversions to <xref:System.Byte> values) or -1 (for all other numeric conversions).</span></span> <span data-ttu-id="a58e9-144">다음 예제에서는 변환 `true` 을 사용 하 여 숫자 값을 <xref:System.Convert> 메서드 및 Visual Basic 예제에서는 Visual Basic 언어의 자체 변환 연산자를 사용 하 여의 경우.</span><span class="sxs-lookup"><span data-stu-id="a58e9-144">The following example converts `true` to numeric values by using a <xref:System.Convert> method, and, in the case of the Visual Basic example, by using the Visual Basic language's own conversion operator.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion3.cs#8)]
 [!code-vb[System.Boolean.Structure#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion3.vb#8)]  
  
 <span data-ttu-id="a58e9-145">변환에 대 한 <xref:System.Boolean> 문자열 값을 참조 합니다 [부울 값 서식 지정](#Formatting) 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-145">For conversions from <xref:System.Boolean> to string values, see the [Formatting Boolean Values](#Formatting) section.</span></span> <span data-ttu-id="a58e9-146">문자열에서 변환에 대 한 <xref:System.Boolean> 값을 참조 합니다 [부울 값을 구문 분석](#Parsing) 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-146">For conversions from strings to <xref:System.Boolean> values, see the [Parsing Boolean Values](#Parsing) section.</span></span>  
  
<a name="Parsing"></a>   
## <a name="parsing-boolean-values"></a><span data-ttu-id="a58e9-147">부울 값을 구문 분석</span><span class="sxs-lookup"><span data-stu-id="a58e9-147">Parsing Boolean values</span></span>  
 <span data-ttu-id="a58e9-148">합니다 <xref:System.Boolean> 구조체에는 두 개의 정적 구문 분석 메서드를 포함 <xref:System.Boolean.Parse%2A> 및 <xref:System.Boolean.TryParse%2A>, 문자열을 부울 값을 변환 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-148">The <xref:System.Boolean> structure includes two static parsing methods, <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A>, that convert a string to a Boolean value.</span></span> <span data-ttu-id="a58e9-149">부울 값의 문자열 표현을 값의 해당 하는 대/소문자가 정의한 합니다 <xref:System.Boolean.TrueString> 및 <xref:System.Boolean.FalseString> 필드를 "True" 및 "False", 각각.</span><span class="sxs-lookup"><span data-stu-id="a58e9-149">The string representation of a Boolean value is defined by the case-insensitive equivalents of the values of the <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields, which are "True" and "False", respectively.</span></span> <span data-ttu-id="a58e9-150">즉, 성공적으로 구문 분석 하는 문자열만 "True", "False", "true", "false" 또는 일부 소문자에 해당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-150">In other words, the only strings that parse successfully are "True", "False", "true", "false", or some mixed-case equivalent.</span></span> <span data-ttu-id="a58e9-151">성공적으로 "0" 또는 "1"와 같은 숫자 문자열을 구문 분석할 수 없습니다. 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-151">You cannot successfully parse numeric strings such as "0" or "1".</span></span> <span data-ttu-id="a58e9-152">문자열 비교를 수행 하는 경우에 선행 또는 후행 공백 문자 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-152">Leading or trailing white-space characters are not considered when performing the string comparison.</span></span>  
  
 <span data-ttu-id="a58e9-153">다음 예제에서는 합니다 <xref:System.Boolean.Parse%2A> 고 <xref:System.Boolean.TryParse%2A> 많은 문자열을 구문 분석 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-153">The following example uses the <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A> methods to parse a number of strings.</span></span> <span data-ttu-id="a58e9-154">"True" 및 "False"의 해당 항목에 대/소문자 구분을 성공적으로 구문 분석할 수는 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-154">Note that only the case-insensitive equivalents of "True" and "False" can be successfully parsed.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse2.cs#2)]
 [!code-vb[System.Boolean.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse2.vb#2)]  
  
 <span data-ttu-id="a58e9-155">Visual Basic의 프로그래밍 하는 경우 사용할 수는 `CBool` 부울 값으로 숫자의 문자열 표현으로 변환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-155">If you are programming in Visual Basic, you can use the `CBool` function to convert the string representation of a number to a Boolean value.</span></span> <span data-ttu-id="a58e9-156">"0"으로 변환할 `false`를 0이 아닌 모든 값의 문자열 표현으로 변환 됩니다 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-156">"0" is converted to `false`, and the string representation of any non-zero value is converted to `true`.</span></span> <span data-ttu-id="a58e9-157">하지를 프로그래밍 하는 Visual Basic의 경우 부울으로 변환 하기 전에 숫자 문자열을 숫자로 변환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-157">If you are not programming in Visual Basic, you must convert your numeric string to a number before converting it to a Boolean.</span></span> <span data-ttu-id="a58e9-158">다음 예제에서는 정수의 배열을 부울 값으로 변환 하 여이 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-158">The following example illustrates this by converting an array of integers to Boolean values.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse3.cs#9)]
 [!code-vb[System.Boolean.Structure#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse3.vb#9)]  
  
<a name="Comparing"></a>   
## <a name="comparing-boolean-values"></a><span data-ttu-id="a58e9-159">부울 값 비교</span><span class="sxs-lookup"><span data-stu-id="a58e9-159">Comparing Boolean values</span></span>  
 <span data-ttu-id="a58e9-160">부울 값 중 하나 이므로 `true` 또는 `false`를 명시적으로 호출 이유가 <xref:System.Boolean.CompareTo%2A> 인지 여부를 나타내는 인스턴스 보다 큼, 보다 작음, 메서드 또는 지정된 된 값 같음.</span><span class="sxs-lookup"><span data-stu-id="a58e9-160">Because Boolean values are either `true` or `false`, there is little reason to explicitly call the <xref:System.Boolean.CompareTo%2A> method, which indicates whether an instance is greater than, less than, or equal to a specified value.</span></span> <span data-ttu-id="a58e9-161">일반적으로 두 개의 부울 변수를 비교 하려면 호출를 <xref:System.Boolean.Equals%2A> 메서드 또는 언어의 같음 연산자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-161">Typically, to compare two Boolean variables, you call the <xref:System.Boolean.Equals%2A> method or use your language's equality operator.</span></span>  
  
 <span data-ttu-id="a58e9-162">그러나 하려는 경우 부울 리터럴 값을 사용 하 여 부울 변수 비교 `true` 또는 `false`,이 아니므로 명시적 비교를 수행 하는 데 필요한 부울 값을 평가 하는 결과 해당 부울 값입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-162">However, when you want to compare a Boolean variable with the literal Boolean value `true` or `false`, it is not necessary to do an explicit comparison, because the result of evaluating a Boolean value is that Boolean value.</span></span> <span data-ttu-id="a58e9-163">예를 들어 식</span><span class="sxs-lookup"><span data-stu-id="a58e9-163">For example, the expressions</span></span>  
  
 [!code-csharp[System.Boolean.Structure#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#12)]
 [!code-vb[System.Boolean.Structure#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#12)]  
  
 <span data-ttu-id="a58e9-164">를 갖는</span><span class="sxs-lookup"><span data-stu-id="a58e9-164">and</span></span>  
  
 [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]
 [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]  
  
 <span data-ttu-id="a58e9-165">동일 하지만 두 번째는 간결 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-165">are equivalent, but the second is more compact.</span></span> <span data-ttu-id="a58e9-166">그러나 두 기법 모두 비슷한 성능을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-166">However, both techniques offer comparable performance.</span></span>  
  
<a name="Binary"></a>   
## <a name="working-with-booleans-as-binary-values"></a><span data-ttu-id="a58e9-167">이진 값으로 부울을 사용 하 여 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-167">Working with Booleans as binary values</span></span>  
 <span data-ttu-id="a58e9-168">다음 C# 예제와 같이 1 바이트의 메모리를 차지 하는 부울 값을 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-168">A Boolean value occupies one byte of memory, as the following C# example shows.</span></span> <span data-ttu-id="a58e9-169">예제를 사용 하 여 컴파일해야 합니다 `/unsafe` 전환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-169">The example must be compiled with the `/unsafe` switch.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/size1.cs#14)]  
  
 <span data-ttu-id="a58e9-170">바이트의 낮은 비트는 해당 값을 나타내는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-170">The byte's low-order bit is used to represent its value.</span></span> <span data-ttu-id="a58e9-171">값이 1 나타냅니다 `true`0 나타냅니다. 값 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-171">A value of 1 represents `true`; a value of 0 represents `false`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="a58e9-172">사용할 수는 <xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> 부울 값의 집합으로 작업 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-172">You can use the <xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> structure to work with sets of Boolean values.</span></span>  
  
 <span data-ttu-id="a58e9-173">호출 하 여 부울 값을 이진 표현으로 변환할 수 있습니다는 <xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-173">You can convert a Boolean value to its binary representation by calling the <xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a58e9-174">메서드는 단일 요소를 사용 하 여 바이트 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-174">The method returns a byte array with a single element.</span></span> <span data-ttu-id="a58e9-175">부울 값을 이진 표현에서 복원 하려면 호출할 수 있습니다는 <xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-175">To restore a Boolean value from its binary representation, you can call the <xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a58e9-176">다음 예제에서는 합니다 <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> 해당 이진 표현 및 표시 값 및 호출의 개별 비트에 부울 값을 변환 하는 메서드는 <xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType> 이진 표현에서 값을 복원 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-176">The following example calls the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method to convert a Boolean value to its binary representation and displays the individual bits of the value, and then calls the <xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType> method to restore the value from its binary representation.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/binary1.cs#1)]
 [!code-vb[System.Boolean.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/binary1.vb#1)]  
  
<a name="Operations"></a>   
## <a name="performing-operations-with-boolean-values"></a><span data-ttu-id="a58e9-177">부울 값을 사용 하 여 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-177">Performing operations with Boolean values</span></span>  
 <span data-ttu-id="a58e9-178">이 섹션에서는 어떻게 부울 값을 보여 줍니다. 앱에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-178">This section illustrates how Boolean values are used in apps.</span></span> <span data-ttu-id="a58e9-179">첫 번째 섹션에는 용도 플래그를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-179">The first section discusses its use as a flag.</span></span> <span data-ttu-id="a58e9-180">두 번째 산술 연산에 대 한 용도를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-180">The second illustrates its use for arithmetic operations.</span></span>  
  
### <a name="boolean-values-as-flags"></a><span data-ttu-id="a58e9-181">부울 플래그 값</span><span class="sxs-lookup"><span data-stu-id="a58e9-181">Boolean values as flags</span></span>  
 <span data-ttu-id="a58e9-182">부울 변수 상황의 유무를 알리기 위해 플래그로, 가장 자주 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-182">Boolean variables are most commonly used as flags, to signal the presence or absence of some condition.</span></span> <span data-ttu-id="a58e9-183">예를 들어, 합니다 <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> 메서드를 마지막 매개 `ignoreCase`, 두 문자열의 비교는 대/소문자 구분 여부를 나타내는 플래그 (`ignoreCase` 는 `true`) 또는 대/소문자 구분 (`ignoreCase` 는 `false`).</span><span class="sxs-lookup"><span data-stu-id="a58e9-183">For example, in the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> method, the final parameter, `ignoreCase`, is a flag that indicates whether the comparison of two strings is case-insensitive (`ignoreCase` is `true`) or case-sensitive (`ignoreCase` is `false`).</span></span> <span data-ttu-id="a58e9-184">그런 다음 조건부 문에 플래그의 값을 평가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-184">The value of the flag can then be evaluated in a conditional statement.</span></span>  
  
 <span data-ttu-id="a58e9-185">다음 예제에서는 간단한 콘솔 앱을를 사용 하 여 플래그로 부울 변수 사용법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-185">The following example uses a simple console app to illustrate the use of Boolean variables as flags.</span></span> <span data-ttu-id="a58e9-186">에 지정된 된 파일에 출력을 사용 하도록 설정 하는 명령줄 매개 변수를 허용 하는 앱 (합니다 `/f` 전환), 출력 및 콘솔 모두 지정된 된 파일에 보낼 수 있는 (합니다 `/b` 전환).</span><span class="sxs-lookup"><span data-stu-id="a58e9-186">The app accepts command-line parameters that enable output to be redirected to a specified file (the `/f` switch), and that enable output to be sent both to a specified file and to the console (the `/b` switch).</span></span> <span data-ttu-id="a58e9-187">라는 플래그를 정의 하는 앱 `isRedirected` 출력 파일을 전송할 수 있도록 이며 플래그 이름이 있는지 여부를 나타내기 위해 `isBoth` 출력을 콘솔에 보내야 한다고 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-187">The app defines a flag named `isRedirected` to indicate whether output is to be sent to a file, and a flag named `isBoth` to indicate that output should be sent to the console.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#10)]
 [!code-vb[System.Boolean.Structure#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#10)]  
  
### <a name="booleans-and-arithmetic-operations"></a><span data-ttu-id="a58e9-188">부울 및 산술 연산</span><span class="sxs-lookup"><span data-stu-id="a58e9-188">Booleans and arithmetic operations</span></span>  
 <span data-ttu-id="a58e9-189">부울 값을 수학적 계산을 트리거하는 조건의 있음을 표시 하기 위해 때때로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-189">A Boolean value is sometimes used to indicate the presence of a condition that triggers a mathematical calculation.</span></span> <span data-ttu-id="a58e9-190">예를 들어, 한 `hasShippingCharge` 변수를 전달 요금 청구서 금액에 추가할지 여부를 나타내는 플래그를 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-190">For example, a `hasShippingCharge` variable might serve as a flag to indicate whether to add shipping charges to an invoice amount.</span></span>  
  
 <span data-ttu-id="a58e9-191">때문에 사용 하 여 작업을 `false` 값에 영향을 주지 않습니다 연산의 결과 대해 필요 없는 부울 수학 연산에서 사용 하는 정수 값으로 변환 하려면.</span><span class="sxs-lookup"><span data-stu-id="a58e9-191">Because an operation with a `false` value has no effect on the result of an operation, it is not necessary to convert the Boolean to an integral value to use in the mathematical operation.</span></span> <span data-ttu-id="a58e9-192">대신, 조건부 논리를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-192">Instead, you can use conditional logic.</span></span>  
  
 <span data-ttu-id="a58e9-193">다음 예제에서는 부분합을, 배송 비용 및 선택적 서비스 요금을 구성 하는 금액을 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-193">The following example computes an amount that consists of a subtotal, a shipping charge, and an optional service charge.</span></span> <span data-ttu-id="a58e9-194">`hasServiceCharge` 변수 서비스 요금은 적용 되는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-194">The `hasServiceCharge` variable determines whether the service charge is applied.</span></span> <span data-ttu-id="a58e9-195">변환 하는 대신 `hasServiceCharge` 숫자 값을 서비스 요금은 양을 기준으로 곱한 예제를 사용 하 여 조건부 논리 적용 가능한 경우 서비스 요금 금액을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-195">Instead of converting `hasServiceCharge` to a numeric value and multiplying it by the amount of the service charge, the example uses conditional logic to add the service charge amount if it is applicable.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]
 [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]  
  
<a name="Interop"></a>   
### <a name="booleans-and-interop"></a><span data-ttu-id="a58e9-196">않음은 Booleans 및 interop</span><span class="sxs-lookup"><span data-stu-id="a58e9-196">Booleans and interop</span></span>  
 <span data-ttu-id="a58e9-197">기본 데이터 형식을 COM 마샬링 하는 것은 일반적으로 간단 하지만 <xref:System.Boolean> 데이터 형식은 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-197">While marshaling base data types to COM is generally straightforward, the <xref:System.Boolean> data type is an exception.</span></span> <span data-ttu-id="a58e9-198">적용할 수 있습니다는 <xref:System.Runtime.InteropServices.MarshalAsAttribute> 특성을 마샬링하는 <xref:System.Boolean> 다음 표현에는 형식:</span><span class="sxs-lookup"><span data-stu-id="a58e9-198">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to marshal the <xref:System.Boolean> type to any of the following representations:</span></span>  
  
|<span data-ttu-id="a58e9-199">열거형 형식</span><span class="sxs-lookup"><span data-stu-id="a58e9-199">Enumeration type</span></span>|<span data-ttu-id="a58e9-200">관리 되지 않는 형식</span><span class="sxs-lookup"><span data-stu-id="a58e9-200">Unmanaged format</span></span>|  
|----------------------|----------------------|  
|<xref:System.Runtime.InteropServices.UnmanagedType.Bool?displayProperty=nameWithType>|<span data-ttu-id="a58e9-201">4 바이트 정수 값을 0이 아닌 모든 값을 나타냅니다 `true` 0 나타냅니다 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-201">A 4-byte integer value, where any nonzero value represents `true` and 0 represents `false`.</span></span> <span data-ttu-id="a58e9-202">기본 형식은이 <xref:System.Boolean> 및 구조의 필드를 <xref:System.Boolean> 플랫폼에서 매개 변수 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-202">This is the default format of a <xref:System.Boolean> field in a structure and of a <xref:System.Boolean> parameter in platform invoke calls.</span></span>|  
|<xref:System.Runtime.InteropServices.UnmanagedType.U1?displayProperty=nameWithType>|<span data-ttu-id="a58e9-203">여기서 1은 1 바이트 정수 값을 `true` 0 나타냅니다 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-203">A 1-byte integer value, where the 1 represents `true` and 0 represents `false`.</span></span>|  
|<xref:System.Runtime.InteropServices.UnmanagedType.VariantBool?displayProperty=nameWithType>|<span data-ttu-id="a58e9-204">2 바이트 정수 값, 여기서-1 나타냅니다 `true` 0 나타냅니다 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-204">A 2-byte integer value, where -1 represents `true` and 0 represents `false`.</span></span> <span data-ttu-id="a58e9-205">기본 형식은 <xref:System.Boolean> COM interop 호출에 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-205">This is the default format of a <xref:System.Boolean> parameter in COM interop calls.</span></span>|  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="a58e9-206">이 유형의 모든 멤버는 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-206">All members of this type are thread safe.</span></span> <span data-ttu-id="a58e9-207">인스턴스 상태를 수정 하려면 표시 되는 멤버는 실제로 새 값을 사용 하 여 초기화 된 새 인스턴스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-207">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="a58e9-208">으로 다른 형식을 사용 하 여이 형식의 인스턴스를 포함 하는 공유 변수를 읽고 쓰는로 보호 되어야 스레드로부터 안전을 보장 하려면 잠금.</span><span class="sxs-lookup"><span data-stu-id="a58e9-208">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a58e9-209">이 인스턴스를 지정된 개체 또는 <see cref="T:System.Boolean" /> 개체와 비교하고 서로의 관계를 나타내는 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-209">Compares this instance to a specified object or <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.CompareTo(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(bool value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : bool -&gt; int&#xA;override this.CompareTo : bool -&gt; int" Usage="bool.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a58e9-210">이 인스턴스와 비교할 <see cref="T:System.Boolean" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-210">A <see cref="T:System.Boolean" /> object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="a58e9-211">이 인스턴스와 지정된 <see cref="T:System.Boolean" /> 개체를 비교하고 서로의 관계를 나타내는 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-211">Compares this instance to a specified <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span></span></summary>
        <returns><span data-ttu-id="a58e9-212">이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-212">A signed integer that indicates the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="a58e9-213">반환 값</span><span class="sxs-lookup"><span data-stu-id="a58e9-213">Return Value</span></span> 
 </term><description> <span data-ttu-id="a58e9-214">조건</span><span class="sxs-lookup"><span data-stu-id="a58e9-214">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="a58e9-215">0보다 작음</span><span class="sxs-lookup"><span data-stu-id="a58e9-215">Less than zero</span></span> 
 </term><description> <span data-ttu-id="a58e9-216">이 인스턴스는 <see langword="false" />이고 <paramref name="value" />는 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-216">This instance is <see langword="false" /> and <paramref name="value" /> is <see langword="true" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="a58e9-217">0</span><span class="sxs-lookup"><span data-stu-id="a58e9-217">Zero</span></span> 
 </term><description> <span data-ttu-id="a58e9-218">이 인스턴스와 <paramref name="value" />는 같습니다. 즉, 둘 다 <see langword="true" />이거나 둘 다 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-218">This instance and <paramref name="value" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).</span></span>  
  
 </description></item><item><term> <span data-ttu-id="a58e9-219">0보다 큼</span><span class="sxs-lookup"><span data-stu-id="a58e9-219">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="a58e9-220">이 인스턴스는 <see langword="true" />이고 <paramref name="value" />는 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-220">This instance is <see langword="true" /> and <paramref name="value" /> is <see langword="false" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-221">이 메서드를 구현 하는 <xref:System.IComparable%601?displayProperty=nameWithType> 인터페이스 및 수행 보다 조금 더 나은 <xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType> 메서드 변환할 필요가 없기 때문에 `value` 개체에 대 한 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="a58e9-221">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="a58e9-222">경우 `value` 비트 수가 적은 인스턴스 유형을 보다 일부 프로그래밍 언어는 더 많은 비트가 값으로 매개 변수의 값을 변환 하는 암시적 확대 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-222">If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="a58e9-223">예를 들어, 인스턴스 유형이 <xref:System.Int32> 매개 변수 형식이 고 <xref:System.Byte>입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-223">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="a58e9-224">Microsoft C# 컴파일러는 매개 변수의 값을 표시 하는 명령을 생성를 <xref:System.Int32> 개체를 만든 다음 생성을 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 비교할 메서드는 <xref:System.Int32> 매개 변수에 표시 된 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="a58e9-224">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the <xref:System.Int32> instance and parameter representation.</span></span>  
  
 <span data-ttu-id="a58e9-225">해당 컴파일러에서 숫자 형식에 암시적 확대 변환은 수행 여부를 확인 하려면 프로그래밍 언어의 설명서를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="a58e9-225">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a58e9-226">다음 코드 예제에서는 제네릭 및 제네릭이 아닌 버전을 보여 줍니다.는 <xref:System.Boolean.CompareTo%2A> 여러 값 및 참조 형식에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-226">The following code example demonstrates generic and nongeneric versions of the <xref:System.Boolean.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.CompareTo(System.Object)" />
        <altmember cref="Overload:System.Boolean.Equals" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="bool.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a58e9-227">이 인스턴스와 비교할 개체 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-227">An object to compare to this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a58e9-228">이 인스턴스와 지정된 개체를 비교하고 서로의 관계를 나타내는 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-228">Compares this instance to a specified object and returns an integer that indicates their relationship to one another.</span></span></summary>
        <returns><span data-ttu-id="a58e9-229">이 인스턴스와 <paramref name="obj" />의 상대 순서를 나타내는 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-229">A signed integer that indicates the relative order of this instance and <paramref name="obj" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="a58e9-230">반환 값</span><span class="sxs-lookup"><span data-stu-id="a58e9-230">Return Value</span></span> 
 </term><description> <span data-ttu-id="a58e9-231">조건</span><span class="sxs-lookup"><span data-stu-id="a58e9-231">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="a58e9-232">0보다 작음</span><span class="sxs-lookup"><span data-stu-id="a58e9-232">Less than zero</span></span> 
 </term><description> <span data-ttu-id="a58e9-233">이 인스턴스는 <see langword="false" />이고 <paramref name="obj" />는 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-233">This instance is <see langword="false" /> and <paramref name="obj" /> is <see langword="true" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="a58e9-234">0</span><span class="sxs-lookup"><span data-stu-id="a58e9-234">Zero</span></span> 
 </term><description> <span data-ttu-id="a58e9-235">이 인스턴스와 <paramref name="obj" />는 같습니다. 즉, 둘 다 <see langword="true" />이거나 둘 다 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-235">This instance and <paramref name="obj" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).</span></span>  
  
 </description></item><item><term> <span data-ttu-id="a58e9-236">0보다 큼</span><span class="sxs-lookup"><span data-stu-id="a58e9-236">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="a58e9-237">이 인스턴스는 <see langword="true" />이고 <paramref name="obj" />는 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-237">This instance is <see langword="true" /> and <paramref name="obj" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="a58e9-238">또는</span><span class="sxs-lookup"><span data-stu-id="a58e9-238">-or-</span></span> 
 <span data-ttu-id="a58e9-239"><paramref name="obj" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-239"><paramref name="obj" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-240">`obj` 여야 `null` 인스턴스나 `Boolean`고, 그렇지 않으면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-240">`obj` must be `null` or an instance of `Boolean`; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="a58e9-241">이 메서드를 구현 하는 <xref:System.IComparable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-241">This method implements the <xref:System.IComparable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a58e9-242"><paramref name="obj" />가 <see cref="T:System.Boolean" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="a58e9-242"><paramref name="obj" /> is not a <see cref="T:System.Boolean" />.</span></span></exception>
        <altmember cref="M:System.Boolean.CompareTo(System.Boolean)" />
        <altmember cref="Overload:System.Boolean.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a58e9-243">이 인스턴스가 지정된 개체나 <see cref="T:System.Boolean" />과 같은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-243">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Boolean" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (bool obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(bool obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Equals(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(bool obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : bool -&gt; bool" Usage="bool.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a58e9-244">이 인스턴스와 비교할 <see cref="T:System.Boolean" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-244">A <see cref="T:System.Boolean" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="a58e9-245">이 인스턴스가 지정된 <see cref="T:System.Boolean" /> 개체와 같은지를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-245">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Boolean" /> object.</span></span></summary>
        <returns><span data-ttu-id="a58e9-246"><paramref name="obj" />가 이 인터페이스와 같은 값을 가지면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-246"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-247">이 메서드를 구현 하는 <xref:System.IEquatable%601?displayProperty=nameWithType> 인터페이스 및 수행 보다 조금 더 나은 <xref:System.Boolean.Equals%2A> 변환할 필요가 없기 때문에 `obj` 개체에 대 한 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="a58e9-247">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Boolean.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Equals(System.Object)" />
        <altmember cref="Overload:System.Boolean.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bool.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a58e9-248">이 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-248">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="a58e9-249">이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-249">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="a58e9-250"><paramref name="obj" />가 <see cref="T:System.Boolean" />이고 이 인스턴스와 같은 값을 가지면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-250"><see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Boolean" /> and has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-251">이 메서드는 <xref:System.Object.Equals%2A>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-251">This method overrides <xref:System.Object.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Equals(System.Boolean)" />
        <altmember cref="Overload:System.Boolean.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="FalseString">
      <MemberSignature Language="C#" Value="public static readonly string FalseString;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string FalseString" />
      <MemberSignature Language="DocId" Value="F:System.Boolean.FalseString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FalseString As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ FalseString;" />
      <MemberSignature Language="F#" Value=" staticval mutable FalseString : string" Usage="System.bool.FalseString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a58e9-252">부울 값 <see langword="false" />를 문자열로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-252">Represents the Boolean value <see langword="false" /> as a string.</span></span> <span data-ttu-id="a58e9-253">이 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-253">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-254">이 필드는 문자열 "False"입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-254">This field is equal to the string "False".</span></span>  
  
 <span data-ttu-id="a58e9-255">합니다 <xref:System.Boolean.FalseString> 속성의 문자열 표현을 정의 `False` <xref:System.Boolean> 서식 지정 및 구문 분석 작업의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-255">The <xref:System.Boolean.FalseString> property defines the string representation of a `False` <xref:System.Boolean> value in formatting and parsing operations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="F:System.Boolean.TrueString" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bool.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a58e9-256">이 인스턴스의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-256">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="a58e9-257">현재 <see cref="T:System.Boolean" />의 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-257">A hash code for the current <see cref="T:System.Boolean" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-258"><xref:System.Boolean> 클래스 구현 `true` integer로 하나의 및 `false` 를 정수로 0.</span><span class="sxs-lookup"><span data-stu-id="a58e9-258">The <xref:System.Boolean> class implements `true` as the integer, one, and `false` as the integer, zero.</span></span> <span data-ttu-id="a58e9-259">그러나 특정 프로그래밍 언어를 나타낼 수 있습니다 `true` 고 `false` 다른 값을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-259">However, a particular programming language might represent `true` and `false` with other values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="bool.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a58e9-260"><see cref="T:System.Boolean" /> 값 형식에 대한 형식 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-260">Returns the type code for the <see cref="T:System.Boolean" /> value type.</span></span></summary>
        <returns><span data-ttu-id="a58e9-261">열거형 상수인 <see cref="F:System.TypeCode.Boolean" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-261">The enumerated constant <see cref="F:System.TypeCode.Boolean" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static bool Parse (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Parse(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Parse(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="System.bool.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static bool Parse (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Parse(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; bool" Usage="System.bool.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a58e9-262">변환할 값이 들어 있는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-262">A string containing the value to convert.</span></span></param>
        <summary><span data-ttu-id="a58e9-263">논리 값의 지정된 문자열 표현을 해당하는 <see cref="T:System.Boolean" /> 값으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-263">Converts the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="a58e9-264"><paramref name="value" />가 <see cref="F:System.Boolean.TrueString" />과 같으면 <see langword="true" />이고, <paramref name="value" />가 <see cref="F:System.Boolean.FalseString" />과 같으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-264"><see langword="true" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.TrueString" />; <see langword="false" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.FalseString" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-265">합니다 `value` 매개 변수를 필요에 따라 선행 또는 후행 공백을 포함 해야 <xref:System.Boolean.TrueString> 또는 <xref:System.Boolean.FalseString>고, 그렇지 않으면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-265">The `value` parameter, optionally preceded or trailed by white space, must contain either <xref:System.Boolean.TrueString> or <xref:System.Boolean.FalseString>; otherwise, an exception is thrown.</span></span> <span data-ttu-id="a58e9-266">비교는 대/소문자 구분.</span><span class="sxs-lookup"><span data-stu-id="a58e9-266">The comparison is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a58e9-267">다음 코드 예제에서는 <xref:System.Boolean.Parse%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-267">The following code example illustrates the use of <xref:System.Boolean.Parse%2A> method.</span></span>  
  
 [!code-cpp[System.Boolean#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Boolean/CPP/booleanmembers.cpp#2)]
 [!code-csharp[System.Boolean#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Boolean/CS/booleanmembers.cs#2)]
 [!code-vb[System.Boolean#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Boolean/VB/booleanmembers.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a58e9-268"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-268"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="a58e9-269"><paramref name="value" />가 <see cref="F:System.Boolean.TrueString" /> 또는 <see cref="F:System.Boolean.FalseString" />과 같지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="a58e9-269"><paramref name="value" /> is not equivalent to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></exception>
        <altmember cref="F:System.Boolean.TrueString" />
        <altmember cref="F:System.Boolean.FalseString" />
        <related type="Article" href="https://msdn.microsoft.com/library/d139bc00-3c4e-4d78-ac9a-5c951b258d28"><span data-ttu-id="a58e9-270">기타 문자열 구문 분석</span><span class="sxs-lookup"><span data-stu-id="a58e9-270">Parsing Other Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a58e9-271">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-271">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a58e9-272">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="a58e9-272">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a58e9-273"><see langword="true" /> 또는 <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a58e9-273"><see langword="true" /> or <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-274">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="a58e9-274">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a58e9-275"><xref:System.Boolean> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-275">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a58e9-276">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-276">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a58e9-277">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="a58e9-277">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a58e9-278">이 인스턴스의 값이 <see langword="true" />이면 1이고, 그렇지 않으면 0입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-278">1 if the value of this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-279">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="a58e9-279">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a58e9-280"><xref:System.Boolean> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-280">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a58e9-281">권장된 대안 호출 하는 것은 <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-281">The recommended alternative is to call the <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Convert.ToByte(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a58e9-282">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-282">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a58e9-283">이 변환은 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-283">This conversion is not supported.</span></span> <span data-ttu-id="a58e9-284">이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-284">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="a58e9-285">이 변환은 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-285">This conversion is not supported.</span></span> <span data-ttu-id="a58e9-286">값이 반환되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-286">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="a58e9-287"><see cref="T:System.Boolean" /> 값을 <see cref="T:System.Char" /> 값으로 변환하려고 한 경우.</span><span class="sxs-lookup"><span data-stu-id="a58e9-287">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.Char" /> value.</span></span> <span data-ttu-id="a58e9-288">이 변환은 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-288">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a58e9-289">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-289">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a58e9-290">이 변환은 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-290">This conversion is not supported.</span></span> <span data-ttu-id="a58e9-291">이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-291">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="a58e9-292">이 변환은 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-292">This conversion is not supported.</span></span> <span data-ttu-id="a58e9-293">값이 반환되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-293">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="a58e9-294"><see cref="T:System.Boolean" /> 값을 <see cref="T:System.DateTime" /> 값으로 변환하려고 한 경우.</span><span class="sxs-lookup"><span data-stu-id="a58e9-294">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.DateTime" /> value.</span></span> <span data-ttu-id="a58e9-295">이 변환은 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-295">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a58e9-296">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-296">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a58e9-297">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="a58e9-297">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a58e9-298">이 인스턴스가 <see langword="true" />이면 1이고, 그렇지 않으면 0입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-298">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-299">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="a58e9-299">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a58e9-300"><xref:System.Boolean> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-300">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a58e9-301">권장된 대안 호출 하는 것은 <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-301">The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a58e9-302">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-302">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a58e9-303">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="a58e9-303">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a58e9-304">이 인스턴스가 <see langword="true" />이면 1이고, 그렇지 않으면 0입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-304">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-305">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="a58e9-305">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a58e9-306"><xref:System.Boolean> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-306">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a58e9-307">권장된 대안 호출 하는 것은 <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-307">The recommended alternative is to call the <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a58e9-308">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-308">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a58e9-309">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="a58e9-309">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a58e9-310">이 인스턴스가 <see langword="true" />이면 1이고, 그렇지 않으면 0입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-310">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-311">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="a58e9-311">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a58e9-312"><xref:System.Boolean> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-312">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a58e9-313">권장된 대안 호출 하는 것은 <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-313">The recommended alternative is to call the <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a58e9-314">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-314">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a58e9-315">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="a58e9-315">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a58e9-316">이 인스턴스가 <see langword="true" />이면 1이고, 그렇지 않으면 0입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-316">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-317">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="a58e9-317">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a58e9-318"><xref:System.Boolean> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-318">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a58e9-319">권장된 대안 호출 하는 것은 <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-319">The recommended alternative is to call the <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a58e9-320">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-320">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a58e9-321">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="a58e9-321">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a58e9-322">이 인스턴스가 <see langword="true" />이면 1이고, 그렇지 않으면 0입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-322">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-323">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="a58e9-323">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a58e9-324"><xref:System.Boolean> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-324">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a58e9-325">권장된 대안 호출 하는 것은 <xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-325">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a58e9-326">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-326">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a58e9-327">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="a58e9-327">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a58e9-328">이 인스턴스가 <see langword="true" />이면 1이고, 그렇지 않으면 0입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-328">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-329">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="a58e9-329">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a58e9-330"><xref:System.Boolean> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-330">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a58e9-331">권장된 대안 호출 하는 것은 <xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-331">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a58e9-332">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-332">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a58e9-333">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="a58e9-333">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a58e9-334">이 인스턴스가 <see langword="true" />이면 1이고, 그렇지 않으면 0입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-334">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-335">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="a58e9-335">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a58e9-336"><xref:System.Boolean> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-336">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a58e9-337">권장된 대안 호출 하는 것은 <xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-337">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a58e9-338">필요한 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-338">The desired type.</span></span></param>
        <param name="provider"><span data-ttu-id="a58e9-339">반환된 값의 형식에 대한 문화권별 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-339">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="a58e9-340">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="a58e9-340">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a58e9-341">이 <see langword="Boolean" /> 개체의 값과 같은 값이 들어 있는 지정된 형식의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-341">An object of the specified type, with a value that is equivalent to the value of this <see langword="Boolean" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-342">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="a58e9-342">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a58e9-343"><xref:System.Boolean> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-343">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a58e9-344">권장된 대안 호출 하는 것은 <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-344">The recommended alternative is to call the <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a58e9-345"><paramref name="type" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-345"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="a58e9-346">요청된 형식 변환이 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="a58e9-346">The requested type conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a58e9-347">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-347">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a58e9-348">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="a58e9-348">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a58e9-349">이 인스턴스가 <see langword="true" />이면 1이고, 그렇지 않으면 0입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-349">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-350">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="a58e9-350">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a58e9-351"><xref:System.Boolean> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-351">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a58e9-352">권장된 대안 호출 하는 것은 <xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-352">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
        <altmember cref="M:System.Convert.ToUInt16(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a58e9-353">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-353">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a58e9-354">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="a58e9-354">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a58e9-355">이 인스턴스가 <see langword="true" />이면 1이고, 그렇지 않으면 0입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-355">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-356">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="a58e9-356">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a58e9-357"><xref:System.Boolean> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-357">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a58e9-358">권장된 대안 호출 하는 것은 <xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-358">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Convert.ToUInt32(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a58e9-359">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-359">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a58e9-360">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="a58e9-360">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a58e9-361">이 인스턴스가 <see langword="true" />이면 1이고, 그렇지 않으면 0입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-361">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-362">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="a58e9-362">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a58e9-363"><xref:System.Boolean> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-363">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a58e9-364">권장된 대안 호출 하는 것은 <xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-364">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
        <altmember cref="M:System.Convert.ToUInt64(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a58e9-365">이 인스턴스의 값을 해당하는 문자열 표현("True" 또는 "False")으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-365">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bool.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a58e9-366">이 인스턴스의 값을 해당하는 문자열 표현("True" 또는 "False")으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-366">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span></span></summary>
        <returns><span data-ttu-id="a58e9-367">이 인스턴스의 값이 <see langword="true" />이면 "True"(<see cref="F:System.Boolean.TrueString" /> 속성의 값)이고, 이 인스턴스의 값이 <see langword="false" />이면 "False"(<see cref="F:System.Boolean.FalseString" /> 속성의 값)입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-367">"True" (the value of the <see cref="F:System.Boolean.TrueString" /> property) if the value of this instance is <see langword="true" />, or "False" (the value of the <see cref="F:System.Boolean.FalseString" /> property) if the value of this instance is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-368">이 메서드는 "True" 또는 "False" 상수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-368">This method returns the constants "True" or "False".</span></span>  
  
 <span data-ttu-id="a58e9-369">XML은 대/소문자를 구분 하 고 XML 사양 "true" 및 "false" 유효한 집합으로 부울 값을 인식 하는지 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-369">Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</span></span> <span data-ttu-id="a58e9-370">문자열에서 반환 하는 경우는 <xref:System.Boolean.ToString> 메서드는 XML 파일을 쓸 수 있도록 해당 <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> 를 소문자로 변환 메서드를 먼저 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-370">If the string returned by the <xref:System.Boolean.ToString> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> method should be called first to convert it to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a58e9-371">다음 예제는 <xref:System.Boolean.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a58e9-371">The following example illustrates the <xref:System.Boolean.ToString%2A> method.</span></span>  
  
 [!code-cpp[System.Boolean#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Boolean/CPP/booleanmembers.cpp#1)]
 [!code-csharp[System.Boolean#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Boolean/CS/booleanmembers.cs#1)]
 [!code-vb[System.Boolean#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Boolean/VB/booleanmembers.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="bool.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a58e9-372">(예약됨) <see cref="T:System.IFormatProvider" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-372">(Reserved) An <see cref="T:System.IFormatProvider" /> object.</span></span></param>
        <summary><span data-ttu-id="a58e9-373">이 인스턴스의 값을 해당하는 문자열 표현("True" 또는 "False")으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-373">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span></span></summary>
        <returns><span data-ttu-id="a58e9-374">이 인스턴스의 값이 <see langword="true" />이면 <see cref="F:System.Boolean.TrueString" />이고, 이 인스턴스의 값이 <see langword="false" />이면 <see cref="F:System.Boolean.FalseString" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-374"><see cref="F:System.Boolean.TrueString" /> if the value of this instance is <see langword="true" />, or <see cref="F:System.Boolean.FalseString" /> if the value of this instance is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-375">`provider` 매개 변수가 예약 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-375">The `provider` parameter is reserved.</span></span> <span data-ttu-id="a58e9-376">이 메서드의 실행에 참여 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-376">It does not participate in the execution of this method.</span></span> <span data-ttu-id="a58e9-377">즉 합니다 <xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 메서드를 사용 하 여 대부분의 메서드와 달리를 `provider` 매개 변수에서 문화권별 설정을 반영 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-377">This means that the <xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method, unlike most methods with a `provider` parameter, does not reflect culture-specific settings.</span></span>  
  
 <span data-ttu-id="a58e9-378">이 메서드는 "True" 또는 "False" 상수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-378">This method returns the constants "True" or "False".</span></span> <span data-ttu-id="a58e9-379">XML은 대/소문자를 구분 하 고 XML 사양 "true" 및 "false" 유효한 집합으로 부울 값을 인식 하는지 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-379">Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</span></span> <span data-ttu-id="a58e9-380">경우는 <xref:System.String> 에서 반환 된 개체를 <xref:System.Boolean.ToString%28System.IFormatProvider%29> 메서드는 XML 파일을 쓸 수 있도록 해당 <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> 를 소문자로 변환 메서드를 먼저 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-380">If the <xref:System.String> object returned by the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> method should be called first to convert it to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrueString">
      <MemberSignature Language="C#" Value="public static readonly string TrueString;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string TrueString" />
      <MemberSignature Language="DocId" Value="F:System.Boolean.TrueString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TrueString As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ TrueString;" />
      <MemberSignature Language="F#" Value=" staticval mutable TrueString : string" Usage="System.bool.TrueString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a58e9-381">부울 값 <see langword="true" />를 문자열로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-381">Represents the Boolean value <see langword="true" /> as a string.</span></span> <span data-ttu-id="a58e9-382">이 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-382">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-383">이 필드는 문자열 "True"와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-383">This field is equal to the string "True".</span></span>  
  
 <span data-ttu-id="a58e9-384">합니다 <xref:System.Boolean.TrueString> 속성의 문자열 표현을 정의 `True` <xref:System.Boolean> 서식 지정 및 구문 분석 작업의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-384">The <xref:System.Boolean.TrueString> property defines the string representation of a `True` <xref:System.Boolean> value in formatting and parsing operations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="F:System.Boolean.FalseString" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryFormat(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  -&gt; bool" Usage="bool.TryFormat (destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryParse(System.ReadOnlySpan{System.Char},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, [Runtime::InteropServices::Out] bool % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.bool.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryParse(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] bool % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.bool.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a58e9-385">변환할 값이 들어 있는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-385">A string containing the value to convert.</span></span></param>
        <param name="result"><span data-ttu-id="a58e9-386">변환이 성공하는 경우 이 메서드에서 반환될 때 <paramref name="value" />가 <see cref="F:System.Boolean.TrueString" />과 같으면 <see langword="true" />가 포함되고, <paramref name="value" />가 <see cref="F:System.Boolean.FalseString" />과 같으면 <see langword="false" />가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-386">When this method returns, if the conversion succeeded, contains <see langword="true" /> if <paramref name="value" /> is equal to <see cref="F:System.Boolean.TrueString" /> or <see langword="false" /> if <paramref name="value" /> is equal to <see cref="F:System.Boolean.FalseString" />.</span></span> <span data-ttu-id="a58e9-387">변환이 실패한 경우에는 <see langword="false" />가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-387">If the conversion failed, contains <see langword="false" />.</span></span> <span data-ttu-id="a58e9-388"><paramref name="value" />가 <see langword="null" />이거나 <see cref="F:System.Boolean.TrueString" /> 또는 <see cref="F:System.Boolean.FalseString" /> 필드 값과 동일하지 않으면 변환이 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-388">The conversion fails if <paramref name="value" /> is <see langword="null" /> or is not equal to the value of either the <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" /> field.</span></span></param>
        <summary><span data-ttu-id="a58e9-389">논리 값의 지정된 문자열 표현을 해당하는 <see cref="T:System.Boolean" />으로 변환하려고 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-389">Tries to convert the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span></span> <span data-ttu-id="a58e9-390">반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-390">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="a58e9-391"><see langword="true" />가 성공적으로 변환되었으면 <paramref name="value" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-391"><see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a58e9-392">합니다 <xref:System.Boolean.TryParse%2A> 메서드와 비슷합니다는 <xref:System.Boolean.Parse%2A> 메서드를 제외 하 고는 <xref:System.Boolean.TryParse%2A> 메서드 변환에 실패 하면 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-392">The <xref:System.Boolean.TryParse%2A> method is like the <xref:System.Boolean.Parse%2A> method, except the <xref:System.Boolean.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="a58e9-393">`value` 매개 변수 앞 이나 뒤에 공백이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-393">The `value` parameter can be preceded or followed by white space.</span></span> <span data-ttu-id="a58e9-394">비교는 서 수 이며 대/소문자 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-394">The comparison is ordinal and case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a58e9-395">다음 예제에서는 <xref:System.Boolean.TryParse%2A> 문자열의 배열을 구문 분석 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-395">The following example calls the <xref:System.Boolean.TryParse%2A> method to parse an array of strings.</span></span> <span data-ttu-id="a58e9-396">구문 분석 될 문자열은 "true 로" 하는 경우에 구문 분석 작업이 성공 하는 (값을 <xref:System.Boolean.TrueString> 필드) 또는 "False" (값을 <xref:System.Boolean.FalseString> 필드)는 대/소문자 구분 비교에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="a58e9-396">Note that the parse operation succeeds only if the string to be parsed is "True" (the value of the <xref:System.Boolean.TrueString> field) or "False" (the value of the <xref:System.Boolean.FalseString> field) in a case-insensitive comparison.</span></span>  
  
 [!code-csharp[System.Boolean.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.tryparse/cs/tryparseex.cs#1)]
 [!code-vb[System.Boolean.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.tryparse/vb/tryparseex.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Parse(System.String)" />
        <altmember cref="F:System.Boolean.TrueString" />
        <altmember cref="F:System.Boolean.FalseString" />
        <related type="Article" href="https://msdn.microsoft.com/library/d139bc00-3c4e-4d78-ac9a-5c951b258d28"><span data-ttu-id="a58e9-397">.NET Framework의 기타 문자열 구문 분석</span><span class="sxs-lookup"><span data-stu-id="a58e9-397">Parsing Other Strings in the .NET Framework</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>