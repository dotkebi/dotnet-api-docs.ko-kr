<Type Name="Console" FullName="System.Console">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b45b0560dc716e0659aa7778d7482dc7006ef05e" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57934141" /></Metadata><TypeSignature Language="C#" Value="public static class Console" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Console extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Console" />
  <TypeSignature Language="VB.NET" Value="Public Class Console" />
  <TypeSignature Language="C++ CLI" Value="public ref class Console abstract sealed" />
  <TypeSignature Language="F#" Value="type Console = class" />
  <AssemblyInfo>
    <AssemblyName>System.Console</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2787a-101">콘솔 응용 프로그램에 대한 표준 입력, 출력 및 오류 스트림을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-101">Represents the standard input, output, and error streams for console applications.</span></span> <span data-ttu-id="2787a-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-103">콘솔에 있는 사용자 상호 작용 텍스트 기반 콘솔 응용 프로그램 또는 운영 체제를 사용 하 여 컴퓨터 키보드를 통해 텍스트 입력을 입력 하 여 및 컴퓨터 터미널에서 텍스트 출력을 참조 하 여 운영 체제 창입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-103">The console is an operating system window where users interact with the operating system or with a text-based console application by entering text input through the computer keyboard, and by reading text output from the computer terminal.</span></span> <span data-ttu-id="2787a-104">예를 들어 Windows 운영 체제 콘솔 명령 프롬프트 창 이라고 하며 MS-DOS 명령을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-104">For example, in the Windows operating system, the console is called the Command Prompt window and accepts MS-DOS commands.</span></span> <span data-ttu-id="2787a-105"><xref:System.Console> 클래스는 문자를 읽고 콘솔에 문자 쓰기는 응용 프로그램에 대 한 기본 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-105">The <xref:System.Console> class provides basic support for applications that read characters from, and write characters to, the console.</span></span>  
  
 <span data-ttu-id="2787a-106">사용 하 여 개발 하는 것에 대 한 자세한는 <xref:System.Console> 클래스에 다음 섹션을 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="2787a-106">For information about developing with the <xref:System.Console> class, see the following sections:</span></span>  
  
-   [<span data-ttu-id="2787a-107">콘솔 I/O 스트림</span><span class="sxs-lookup"><span data-stu-id="2787a-107">Console I/O Streams</span></span>](#Streams)  
  
-   [<span data-ttu-id="2787a-108">화면 버퍼 및 콘솔 창</span><span class="sxs-lookup"><span data-stu-id="2787a-108">Screen Buffer and Console Window</span></span>](#Buffer)  
  
-   [<span data-ttu-id="2787a-109">콘솔에 대 한 유니코드 지원</span><span class="sxs-lookup"><span data-stu-id="2787a-109">Unicode Support for the Console</span></span>](#Unicode)  
  
-   [<span data-ttu-id="2787a-110">일반 작업</span><span class="sxs-lookup"><span data-stu-id="2787a-110">Common Operations</span></span>](#Operations)  
  
-   [<span data-ttu-id="2787a-111">.NET core 정보</span><span class="sxs-lookup"><span data-stu-id="2787a-111">.NET Core Notes</span></span>](#Core)  
  
<a name="Streams"></a>   
## <a name="console-io-streams"></a><span data-ttu-id="2787a-112">콘솔 I/O 스트림</span><span class="sxs-lookup"><span data-stu-id="2787a-112">Console I/O Streams</span></span>  
 <span data-ttu-id="2787a-113">콘솔 응용 프로그램을 시작할 때 운영 체제 자동 세 I/O 스트림 콘솔: 표준 스트림, 표준 출력 스트림 및 표준 오류 출력 스트림을 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-113">When a console application starts, the operating system automatically associates three I/O streams with the console: standard input stream, standard output stream, and standard error output stream.</span></span> <span data-ttu-id="2787a-114">응용 프로그램이 표준 입력 스트림에서; 사용자 입력을 읽을 수 있습니다. 표준 출력 스트림에 일반 데이터 쓰기 및 표준 오류 출력 스트림에 오류 데이터를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-114">Your application can read user input from the standard input stream; write normal data to the standard output stream; and write error data to the standard error output stream.</span></span> <span data-ttu-id="2787a-115">이러한 스트림은 응용 프로그램의 값으로는 <xref:System.Console.In%2A?displayProperty=nameWithType>, <xref:System.Console.Out%2A?displayProperty=nameWithType>, 및 <xref:System.Console.Error%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-115">These streams are presented to your application as the values of the <xref:System.Console.In%2A?displayProperty=nameWithType>, <xref:System.Console.Out%2A?displayProperty=nameWithType>, and <xref:System.Console.Error%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="2787a-116">기본적으로 값을 <xref:System.Console.In%2A> 속성은는 <xref:System.IO.TextReader?displayProperty=nameWithType> 키보드 및의 값을 나타내는 개체를 <xref:System.Console.Out%2A> 및 <xref:System.Console.Error%2A> 속성은 <xref:System.IO.TextWriter?displayProperty=nameWithType> 콘솔 창을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-116">By default, the value of the <xref:System.Console.In%2A> property is a <xref:System.IO.TextReader?displayProperty=nameWithType> object that represents the keyboard, and the values of the <xref:System.Console.Out%2A> and <xref:System.Console.Error%2A> properties are <xref:System.IO.TextWriter?displayProperty=nameWithType> objects that represent a console window.</span></span> <span data-ttu-id="2787a-117">그러나 콘솔 창이 나 키보드;을 나타내지 않는 스트림에 이러한 속성을 설정할 수 있습니다. 예를 들어 파일을 나타내는 스트림으로 이러한 속성을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-117">However, you can set these properties to streams that do not represent the console window or keyboard; for example, you can set these properties to streams that represent files.</span></span> <span data-ttu-id="2787a-118">표준 입력, 표준 출력 또는 표준 오류 스트림에서 리디렉션를 호출 합니다 <xref:System.Console.SetIn%2A?displayProperty=nameWithType>, <xref:System.Console.SetOut%2A?displayProperty=nameWithType>, 또는 <xref:System.Console.SetError%2A?displayProperty=nameWithType> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="2787a-118">To redirect the standard input, standard output, or standard error stream, call the <xref:System.Console.SetIn%2A?displayProperty=nameWithType>, <xref:System.Console.SetOut%2A?displayProperty=nameWithType>, or <xref:System.Console.SetError%2A?displayProperty=nameWithType> method, respectively.</span></span> <span data-ttu-id="2787a-119">이러한 스트림을 사용 하는 I/O 작업 즉,는 여러 스레드를 읽거나 쓸 수는 스트림을에 동기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-119">I/O operations that use these streams are synchronized, which means that multiple threads can read from, or write to, the streams.</span></span> <span data-ttu-id="2787a-120">즉, 같은 일반적으로 비동기 메서드 <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType>, 개체가 나타내는 콘솔 스트림에 동기적으로 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-120">This means that methods that are ordinarily asynchronous, such as <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType>, execute synchronously if the object represents a console stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2787a-121">사용 하지 마십시오는 <xref:System.Console> 무인 응용 프로그램에서 서버 응용 프로그램과 같은 출력을 표시 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-121">Do not use the <xref:System.Console> class to display output in unattended applications, such as server applications.</span></span> <span data-ttu-id="2787a-122">와 같은 메서드를 호출 <xref:System.Console.Write%2A?displayProperty=nameWithType> 고 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> GUI 응용 프로그램에는 아무런 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-122">Calls to methods such as <xref:System.Console.Write%2A?displayProperty=nameWithType> and <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> have no effect in GUI applications.</span></span>  
  
 <span data-ttu-id="2787a-123"><xref:System.Console> 리디렉션되면 스트림, 예를 들어 파일을 내부 스트림에 콘솔에 지시 하는 경우 정상적으로 작동 하는 클래스 멤버에서 예외를 throw 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-123"><xref:System.Console> class members that work normally when the underlying stream is directed to a console might throw an exception if the stream is redirected, for example, to a file.</span></span> <span data-ttu-id="2787a-124">Catch 하도록 응용 프로그램 프로그램 <xref:System.IO.IOException?displayProperty=nameWithType> 표준 스트림을 리디렉션하는 경우는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-124">Program your application to catch <xref:System.IO.IOException?displayProperty=nameWithType> exceptions if you redirect a standard stream.</span></span> <span data-ttu-id="2787a-125">사용할 수도 있습니다는 <xref:System.Console.IsOutputRedirected%2A>, <xref:System.Console.IsInputRedirected%2A>, 및 <xref:System.Console.IsErrorRedirected%2A> 표준 스트림에 throw 하는 작업을 수행 하기 전에 리디렉션되는지 여부를 결정 하는 속성을 <xref:System.IO.IOException?displayProperty=nameWithType> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-125">You can also use the <xref:System.Console.IsOutputRedirected%2A>, <xref:System.Console.IsInputRedirected%2A>, and <xref:System.Console.IsErrorRedirected%2A> properties to determine whether a standard stream is redirected before performing an operation that throws an <xref:System.IO.IOException?displayProperty=nameWithType> exception.</span></span>  
  
 <span data-ttu-id="2787a-126">명시적으로 나타내는 스트림 개체의 멤버를 호출 하는 유용한 경우가 합니다 <xref:System.Console.In%2A>, <xref:System.Console.Out%2A>, 및 <xref:System.Console.Error%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-126">It is sometimes useful to explicitly call the members of the stream objects represented by the <xref:System.Console.In%2A>, <xref:System.Console.Out%2A>, and <xref:System.Console.Error%2A> properties.</span></span> <span data-ttu-id="2787a-127">예를 들어, 기본적으로 <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> 메서드는 표준 입력 스트림에서 입력을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-127">For example, by default, the <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method reads input from the standard input stream.</span></span> <span data-ttu-id="2787a-128">마찬가지로,는 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 메서드는 표준 출력 스트림에 쓸 데이터 및 데이터 뒤에 기본 줄 종료 문자열은 캐리지 리턴 및 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="2787a-128">Similarly, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method writes data to the standard output stream, and the data is followed by the default line termination string, which is  a carriage return and line feed ("\r\n").</span></span> <span data-ttu-id="2787a-129">그러나는 <xref:System.Console> 클래스는 표준 오류 출력 스트림에 해당 스트림에 기록 된 데이터에 대 한 줄 종료 문자열을 변경 하는 속성에 데이터를 작성 하는 해당 메서드를 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-129">However, the <xref:System.Console> class does not provide a corresponding method to write data to the standard error output stream, or a property to change the line termination string for data written to that stream.</span></span>  
  
 <span data-ttu-id="2787a-130">설정 하 여이 문제를 해결할 수 있습니다 합니다 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 의 속성을 <xref:System.Console.Out%2A> 또는 <xref:System.Console.Error%2A> 속성을 다른 줄 종료 문자열로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-130">You can solve this problem by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property of the <xref:System.Console.Out%2A> or <xref:System.Console.Error%2A> property to another line termination string.</span></span> <span data-ttu-id="2787a-131">예를 들어 다음 C# 문을 두 캐리지 리턴 및 줄 바꿈 시퀀스를 표준 오류 출력 스트림에 대 한 줄 종료 문자열을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-131">For example, the following C# statement sets the line termination string for the standard error output stream to two carriage return and line feed sequences:</span></span>  
  
 `Console.Error.NewLine = "\r\n\r\n";`  
  
 <span data-ttu-id="2787a-132">명시적으로 호출할 수 있습니다는 <xref:System.IO.TextWriter.WriteLine%2A> 다음 C# 문에서 오류 출력 스트림 개체의 메서드:</span><span class="sxs-lookup"><span data-stu-id="2787a-132">You can then explicitly call the <xref:System.IO.TextWriter.WriteLine%2A> method of the error output stream object, as in the following C# statement:</span></span>  
  
 `Console.Error.WriteLine();`  
  
<a name="Buffer"></a>   
## <a name="screen-buffer-and-console-window"></a><span data-ttu-id="2787a-133">화면 버퍼 및 콘솔 창</span><span class="sxs-lookup"><span data-stu-id="2787a-133">Screen Buffer and Console Window</span></span>  
 <span data-ttu-id="2787a-134">콘솔의 밀접 한 관련이 있는 두 가지 기능은 화면 버퍼 및 콘솔 창입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-134">Two closely related features of the console are the screen buffer and the console window.</span></span> <span data-ttu-id="2787a-135">텍스트는 실제로 읽기 또는 콘솔을 소유 하는 스트림에 기록 되지만에서 읽거나 쓸 화면 버퍼를 호출 하는 콘솔에서 소유한 영역으로 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-135">Text is actually read from or written to streams owned by the console, but appear to be read from or written to an area owned by the console called the screen buffer.</span></span> <span data-ttu-id="2787a-136">화면 버퍼는 콘솔의 특성 및 행과 열의 각 그리드 교집합 또는 문자 셀은 문자를 사용할 수 있는 사각형 그리드로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-136">The screen buffer is an attribute of the console, and is organized as a rectangular grid of rows and columns where each grid intersection, or character cell, can contain a character.</span></span> <span data-ttu-id="2787a-137">각 문자에는 자체 전경색 있고 각 문자 셀 자체 배경색입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-137">Each character has its own foreground color, and each character cell has its own background color.</span></span>  
  
 <span data-ttu-id="2787a-138">화면 버퍼가 콘솔 창 이라는 사각형 영역에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-138">The screen buffer is viewed through a rectangular region called the console window.</span></span> <span data-ttu-id="2787a-139">콘솔 창은; 콘솔의 다른 특성 콘솔 자체는 운영 체제 창 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-139">The console window is another attribute of the console; it is not the console itself, which is an operating system window.</span></span> <span data-ttu-id="2787a-140">콘솔 창의 행과 열으로 정렬 된, 화면 버퍼의 크기 보다 작거나 및 보기 기본 화면 버퍼의 다른 영역으로 이동할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-140">The console window is arranged in rows and columns, is less than or equal to the size of the screen buffer, and can be moved to view different areas of the underlying screen buffer.</span></span> <span data-ttu-id="2787a-141">화면 버퍼 보다 크면 콘솔 창, 콘솔 창 화면 버퍼 영역 위치가 변경 될 수 있도록 콘솔이 자동으로 스크롤 막대 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-141">If the screen buffer is larger than the console window, the console automatically displays scroll bars so the console window can be repositioned over the screen buffer area.</span></span>  
  
 <span data-ttu-id="2787a-142">커서는 텍스트는 현재 읽기 또는 쓰기 화면 버퍼 위치를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-142">A cursor indicates the screen buffer position where text is currently read or written.</span></span> <span data-ttu-id="2787a-143">커서를 숨기 거 나 표시할 수 있습니다 및 높이 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-143">The cursor can be hidden or made visible, and its height can be changed.</span></span> <span data-ttu-id="2787a-144">커서를 표시 하는 경우 콘솔 창 위치는 뷰에서 커서는 항상 자동으로 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-144">If the cursor is visible, the console window position is moved automatically so the cursor is always in view.</span></span>  
  
 <span data-ttu-id="2787a-145">화면 버퍼에서 문자 셀 좌표에 대 한 원점은 왼쪽된 위 모퉁이 콘솔 창과 커서의 위치는 원점을 기준으로 측정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-145">The origin for character cell coordinates in the screen buffer is the upper left corner, and the positions of the cursor and the console window are measured relative to that origin.</span></span> <span data-ttu-id="2787a-146">0부터 시작 인덱스를 사용 하 여 위치;를 지정 합니다. 즉, 0 행과 0 열으로 맨 왼쪽 열 맨 위 행을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-146">Use zero-based indexes to specify positions; that is, specify the topmost row as row 0, and the leftmost column as column 0.</span></span> <span data-ttu-id="2787a-147">행 및 열 인덱스에 대 한 최대값은 <xref:System.Int16.MaxValue?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-147">The maximum value for the row and column indexes is <xref:System.Int16.MaxValue?displayProperty=nameWithType>.</span></span>  
  
<a name="Unicode"></a>   
## <a name="unicode-support-for-the-console"></a><span data-ttu-id="2787a-148">콘솔에 대 한 유니코드 지원</span><span class="sxs-lookup"><span data-stu-id="2787a-148">Unicode Support for the Console</span></span>  
 <span data-ttu-id="2787a-149">일반적으로 콘솔 입력 읽고 시스템 로캘을 기본적으로 정의 하는 현재 콘솔 코드 페이지를 사용 하 여 출력을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-149">In general, the console reads input and writes output by using the current console code page, which the system locale defines by default.</span></span> <span data-ttu-id="2787a-150">모든 문자를 표시 하거나 자신을 정확 하 게 나타내는 콘솔 특정 코드 페이지에 의해 매핑되지 않는 문자 표시 없게 하려고 하면 되므로 코드 페이지를 사용할 수 있는 유니코드 문자 집합만 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-150">A code page can handle only a subset of available Unicode characters, so if you try to display characters that are not mapped by a particular code page, the console won't be able to display all characters or represent them accurately.</span></span> <span data-ttu-id="2787a-151">다음 예제에서는 이 문제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-151">The following example illustrates this problem.</span></span> <span data-ttu-id="2787a-152">콘솔에 U + 044F 하에서 U + 0410 키릴 자모 문자를 표시 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-152">It tries to display the characters of the Cyrillic alphabet from U+0410 to U+044F to the console.</span></span> <span data-ttu-id="2787a-153">콘솔 코드 페이지 437을 사용 하는 시스템에서 예제를 실행 하는 경우 키릴 자모 코드 페이지 437의에서 문자에 매핑되지 않는 때문에 각 문자는 물음표 (?)로 대체 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-153">If you run the example on a system that uses console code page 437, each character is replaced by a question mark (?), because Cyrillic characters do not map to the characters in code page 437.</span></span>  
  
 [!code-csharp[System.Console.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/unicode1.cs#1)]
 [!code-vb[System.Console.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/unicode1.vb#1)]  
  
 <span data-ttu-id="2787a-154">코드 페이지 지원 외에도 합니다 <xref:System.Console> 클래스는 u t F-8 인코딩을 지원 합니다 <xref:System.Text.UTF8Encoding> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-154">In addition to supporting code pages, the <xref:System.Console> class supports UTF-8 encoding with the <xref:System.Text.UTF8Encoding> class.</span></span> <span data-ttu-id="2787a-155">.NET Framework 4.5부터 합니다 <xref:System.Console> 클래스에는 utf-16 인코딩을 지원 합니다 <xref:System.Text.UnicodeEncoding> 클래스.</span><span class="sxs-lookup"><span data-stu-id="2787a-155">Beginning with the .NET Framework 4.5, the <xref:System.Console> class also supports UTF-16 encoding with the <xref:System.Text.UnicodeEncoding> class.</span></span> <span data-ttu-id="2787a-156">콘솔에 유니코드 문자를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-156">To display Unicode characters to the console.</span></span> <span data-ttu-id="2787a-157">설정 된 <xref:System.Console.OutputEncoding%2A> 속성을 <xref:System.Text.UTF8Encoding> 또는 <xref:System.Text.UnicodeEncoding>합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-157">you set the <xref:System.Console.OutputEncoding%2A> property to either <xref:System.Text.UTF8Encoding> or  <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 <span data-ttu-id="2787a-158">유니코드 문자에 대 한 지원 특정 유니코드 문자를 인식 하도록 인코더와 해당 문자를 렌더링 하는 데 필요한 문자 모양이 있는 글꼴도 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-158">Support for Unicode characters requires the encoder to recognize a particular Unicode character, and also requires a font that has the glyphs needed to render that character.</span></span> <span data-ttu-id="2787a-159">유니코드 문자를 콘솔로 성공적으로 표시 하려면 콘솔 글꼴 비 래스터 또는 Consolas 등 Lucida Console 트루타입 글꼴 설정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-159">To successfully display Unicode characters to the console, the console font must be set to a non-raster or TrueType font such as Consolas or Lucida Console.</span></span> <span data-ttu-id="2787a-160">다음 예제에서는 변경 하는 방법을 프로그래밍 방식으로 글꼴 래스터 글꼴에서 Lucida Console를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-160">The following example shows how you can programmatically change the font from a raster font to Lucida Console.</span></span>  
  
 [!code-csharp[System.Console.Class.Unsafe#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class.unsafe/cs/setfont1.cs#3)]
 [!code-vb[System.Console.Class.Unsafe#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class.unsafe/vb/setfont1.vb#3)]  
  
 <span data-ttu-id="2787a-161">그러나 트루타입 글꼴 문자 모양 하위 집합만 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-161">However, TrueType fonts can display only a subset of glyphs.</span></span> <span data-ttu-id="2787a-162">예를 들어, Lucida Console 글꼴 U + FB02를 사용할 수 있는 약 64,000 문자 (u+0021을 643만 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-162">For example, the Lucida Console font displays only 643 of the approximately 64,000 available characters from U+0021 to U+FB02.</span></span> <span data-ttu-id="2787a-163">열, 특정 글꼴 문자는 참조를 지원 합니다 **글꼴** 제어판에 애플릿을 선택는 **문자를 찾습니다** 옵션을 선택한 합니다 에서검사할문자집합수글꼴선택 **글꼴** 목록을 합니다 **문자표** 창입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-163">To see which characters a particular font supports, open the **Fonts** applet in Control Panel, choose the **Find a character** option, and choose the font whose character set you'd like to examine in the **Font** list of the **Character Map** window.</span></span>  
  
 <span data-ttu-id="2787a-164">Windows에서는 특정 글꼴에 사용할 수 없는 문자 모양을 표시할 글꼴 연결을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-164">Windows uses font linking to display glyphs that are not available in a particular font.</span></span> <span data-ttu-id="2787a-165">추가 문자 집합을 표시할 글꼴 연결 하는 방법에 대 한 내용은 [세계화 단계별 연습: 글꼴](https://go.microsoft.com/fwlink/?LinkId=229111)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-165">For information about font linking to display additional character sets, see [Globalization Step-by-Step: Fonts](https://go.microsoft.com/fwlink/?LinkId=229111).</span></span> <span data-ttu-id="2787a-166">연결 된 글꼴 레지스트리 HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink 하위 키에 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-166">Linked fonts are defined in the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink subkey of the registry.</span></span> <span data-ttu-id="2787a-167">이 하위 키와 연결 된 각 항목 이름에 해당 하는 기본 글꼴 및 해당 값은 기본 글꼴에 연결 된 글꼴과 글꼴 파일을 정의 하는 문자열 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-167">Each entry associated with this subkey corresponds to the name of a base font, and its value is a string array that defines the font files and the fonts that are linked to the base font.</span></span> <span data-ttu-id="2787a-168">배열의 각 멤버가 연결 된 글꼴을 정의 하 고 형식은 *글꼴 파일 이름*를*글꼴 이름*합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-168">Each member of the array defines a linked font and takes the form *font-file-name*,*font-name*.</span></span> <span data-ttu-id="2787a-169">다음 예제에서는 라는 SimSun simsun.ttc Han 간체 문자를 표시 하는 명명 된 글꼴 파일에 연결 된 글꼴을 프로그래밍 방식으로 정의 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-169">The following example illustrates how you can programmatically define a linked font named SimSun found in a font file named simsun.ttc that displays Simplified Han characters.</span></span>  
  
 [!code-csharp[System.Console.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/fontlink1.cs#2)]
 [!code-vb[System.Console.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/fontlink1.vb#2)]  
  
 <span data-ttu-id="2787a-170">콘솔에 대 한 유니코드 지원에 다음 제한이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-170">Unicode support for the console has the following limitations:</span></span>  
  
-   <span data-ttu-id="2787a-171">UTF-32 인코딩은 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-171">UTF-32 encoding is not supported.</span></span> <span data-ttu-id="2787a-172">유니코드는 인코딩은 utf-8 및 u t F-16이 고으로 표현 되는 경우에 지원 합니다 <xref:System.Text.UTF8Encoding> 및 <xref:System.Text.UnicodeEncoding> 클래스 각각.</span><span class="sxs-lookup"><span data-stu-id="2787a-172">The only supported Unicode encodings are UTF-8 and UTF-16, which are represented by the <xref:System.Text.UTF8Encoding> and <xref:System.Text.UnicodeEncoding> classes, respectively.</span></span>  
  
-   <span data-ttu-id="2787a-173">양방향 출력 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-173">Bidirectional output is not supported.</span></span>  
  
-   <span data-ttu-id="2787a-174">Basic Multilingual Plane 밖의 문자 표시 (즉, 서로게이트 쌍) 연결 된 글꼴 파일에 정의 된 경우에는 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-174">Display of characters outside the Basic Multilingual Plane (that is, of surrogate pairs) is not supported, even if they are defined in a linked font file.</span></span>  
  
-   <span data-ttu-id="2787a-175">양방향 텍스트의 문자 표시 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-175">Display of characters in complex scripts is not supported.</span></span>  
  
-   <span data-ttu-id="2787a-176">결합 문자 시퀀스 (즉, 기본 문자와 조합 문자를 하나 이상의 구성 된 문자)는 별도 문자로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-176">Combining character sequences (that is, characters that consist of a base character and one or more combining characters) are displayed as separate characters.</span></span> <span data-ttu-id="2787a-177">이 제한을 해결 하려면 호출 하 여 표시할 문자열을 정규화 할 수는 <xref:System.String.Normalize%2A?displayProperty=nameWithType> 콘솔에 출력을 보내기 전에 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-177">To work around this limitation, you can normalize the string to be displayed by calling the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method before sending output to the console.</span></span> <span data-ttu-id="2787a-178">다음 예제에서 조합 문자를 포함 하는 문자열 시퀀스 단어로 후 단일 문자를 출력 문자열은 정규화 하기 전에 두 개의 문자로 + 0308 콘솔에 표시 되는 <xref:System.String.Normalize%2A?displayProperty=nameWithType> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-178">In the following example, a string that contains the combining character sequence U+0061 U+0308 is displayed to the console as two characters before the output string is normalized, and as a single character after the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method is called.</span></span>  
  
     [!code-csharp[System.Console.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/normalize1.cs#5)]
     [!code-vb[System.Console.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/normalize1.vb#5)]  
  
     <span data-ttu-id="2787a-179">Combining 특정에 해당 하는 미리 구성된 된 폼을 포함 하는 문자 표준 유니코드 문자 시퀀스 하는 경우에 정규화는 실행 가능한 솔루션을 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-179">Note that normalization is a viable solution only if the Unicode standard for the character includes a pre-composed form that corresponds to a particular combining character sequence.</span></span>  
  
-   <span data-ttu-id="2787a-180">개인 사용 영역에 있는 코드 포인트에 대 한 문자 모양을 제공 하는 글꼴, 해당 문자 모양 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-180">If a font provides a glyph for a code point in the private use area, that glyph will be displayed.</span></span> <span data-ttu-id="2787a-181">그러나 개인 사용 영역의 문자 응용 프로그램별 이기 때문에이 아닐 예상된 문자 모양입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-181">However, because characters in the private use area are application-specific, this may not be the expected glyph.</span></span>  
  
 <span data-ttu-id="2787a-182">다음 예제에서는 콘솔에는 유니코드 문자의 범위를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-182">The following example displays a range of Unicode characters to the console.</span></span> <span data-ttu-id="2787a-183">이 예제에서는 세 개의 명령줄 매개 변수: 표시 및 현재 콘솔 인코딩을 사용할지 여부를 범위의 끝을 표시 하려면 범위의 시작 (`false`) 또는 utf-16 인코딩 (`true`).</span><span class="sxs-lookup"><span data-stu-id="2787a-183">The example accepts three command-line parameters: the start of the range to display, the end of the range to display, and whether to use the current console encoding (`false`) or UTF-16 encoding (`true`).</span></span> <span data-ttu-id="2787a-184">콘솔 트루타입 글꼴을 사용 하 고 있음을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-184">It assumes that the console is using a TrueType font.</span></span>  
  
 [!code-csharp[System.Console.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/example3.cs#4)]
 [!code-vb[System.Console.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/example3.vb#4)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a><span data-ttu-id="2787a-185">일반 작업</span><span class="sxs-lookup"><span data-stu-id="2787a-185">Common Operations</span></span>  
 <span data-ttu-id="2787a-186"><xref:System.Console> 클래스 콘솔 입력을 읽고 쓰며 콘솔 출력에 대 한 다음 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-186">The <xref:System.Console> class contains the following methods for reading console input and writing console output:</span></span>  
  
-   <span data-ttu-id="2787a-187">오버 로드는 <xref:System.Console.ReadKey%2A> 메서드는 개별 문자를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-187">The overloads of the <xref:System.Console.ReadKey%2A> method read an individual character.</span></span>  
  
-   <span data-ttu-id="2787a-188"><xref:System.Console.ReadLine%2A> 메서드 입력의 전체 줄을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-188">The <xref:System.Console.ReadLine%2A> method reads an entire line of input.</span></span>  
  
-   <span data-ttu-id="2787a-189"><xref:System.Console.Write%2A> 메서드 오버 로드 값 형식, 문자 배열 또는 개체 집합의 인스턴스 서식이 지정 되거나 지정 되지 않은 문자열로 변환한 다음 해당 문자열을 콘솔에 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-189">The <xref:System.Console.Write%2A> method overloads convert an instance of a value type, an array of characters, or a set of objects to a formatted or unformatted string, and then write that string to the console.</span></span>  
  
-   <span data-ttu-id="2787a-190">병렬 집합이 <xref:System.Console.WriteLine%2A> 메서드 출력으로 문자열을 동일한 오버 로드는 <xref:System.Console.Write%2A> 오버 로드 하지만 줄 종료 문자열을 추가할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-190">A parallel set of <xref:System.Console.WriteLine%2A> method overloads output the same string as the <xref:System.Console.Write%2A> overloads but also add a line termination string.</span></span>  
  
 <span data-ttu-id="2787a-191"><xref:System.Console> 클래스도 다음 작업을 수행 하는 속성과 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-191">The <xref:System.Console> class also contains methods and properties to perform the following operations:</span></span>  
  
-   <span data-ttu-id="2787a-192">가져오거나 화면 버퍼의 크기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-192">Get or set the size of the screen buffer.</span></span> <span data-ttu-id="2787a-193"><xref:System.Console.BufferHeight%2A> 하 고 <xref:System.Console.BufferWidth%2A> 속성을 사용 하면 가져오거나 버퍼 높이 너비를 각각 설정할 수 있습니다 및 <xref:System.Console.SetBufferSize%2A> 메서드를 사용 하는 단일 메서드 호출에서 버퍼 크기를 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-193">The <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties let you get or set the buffer height and width, respectively, and the <xref:System.Console.SetBufferSize%2A> method lets you set the buffer size in a single method call.</span></span>  
  
-   <span data-ttu-id="2787a-194">가져오거나 콘솔 창의 크기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-194">Get or set the size of the console window.</span></span> <span data-ttu-id="2787a-195"><xref:System.Console.WindowHeight%2A> 하 고 <xref:System.Console.WindowWidth%2A> 속성을 사용 하면 가져오거나 창 높이 너비를 각각 설정할 수 있습니다 및 <xref:System.Console.SetWindowSize%2A> 메서드는 단일 메서드 호출의 창 크기를 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-195">The <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties let you get or set the window height and width, respectively, and the <xref:System.Console.SetWindowSize%2A> method lets you set the window size in a single method call.</span></span>  
  
-   <span data-ttu-id="2787a-196">Get 또는 커서의 크기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-196">Get or set the size of the cursor.</span></span> <span data-ttu-id="2787a-197"><xref:System.Console.CursorSize%2A> 속성 문자 셀에 커서의 높이 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-197">The <xref:System.Console.CursorSize%2A> property specifies the height of the cursor in a character cell.</span></span>  
  
-   <span data-ttu-id="2787a-198">가져오거나 화면 버퍼에 상대적인 콘솔 창의 위치를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-198">Get or set the position of the console window relative to the screen buffer.</span></span> <span data-ttu-id="2787a-199"><xref:System.Console.WindowTop%2A> 하 고 <xref:System.Console.WindowLeft%2A> 속성을 사용 하면 가져오거나 맨 위 행과 콘솔 창에 표시 되는 화면 버퍼의 가장 왼쪽 열에 설정 및 <xref:System.Console.SetWindowPosition%2A> 메서드를 사용 하면 단일 메서드 호출에서 이러한 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-199">The <xref:System.Console.WindowTop%2A> and <xref:System.Console.WindowLeft%2A> properties let you get or set the top row and leftmost column of the screen buffer that appears in the console window, and the <xref:System.Console.SetWindowPosition%2A> method lets you set these values in a single method call.</span></span>  
  
-   <span data-ttu-id="2787a-200">Get 또는 가져오기 설정 하 여 커서의 위치를 설정 합니다 <xref:System.Console.CursorTop%2A> 및 <xref:System.Console.CursorLeft%2A> 속성 또는 set를 호출 하 여 커서의 위치는 <xref:System.Console.SetCursorPosition%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-200">Get or set the position of the cursor by getting or setting the <xref:System.Console.CursorTop%2A> and <xref:System.Console.CursorLeft%2A> properties, or set the position of the cursor by calling the <xref:System.Console.SetCursorPosition%2A> method.</span></span>  
  
-   <span data-ttu-id="2787a-201">이동 하거나 호출 하 여 화면 버퍼에서 데이터를 선택 취소 합니다 <xref:System.Console.MoveBufferArea%2A> 또는 <xref:System.Console.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-201">Move or clear data in the screen buffer by calling the <xref:System.Console.MoveBufferArea%2A> or <xref:System.Console.Clear%2A> method.</span></span>  
  
-   <span data-ttu-id="2787a-202">가져오거나 사용 하 여 전경색 및 배경색을 설정 합니다 <xref:System.Console.ForegroundColor%2A> 및 <xref:System.Console.BackgroundColor%2A> 속성 또는 해당 기본 색을 배경색과 전경색을 호출 하 여 다시 설정 합니다 <xref:System.Console.ResetColor%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-202">Get or set the foreground and background colors by using the <xref:System.Console.ForegroundColor%2A> and <xref:System.Console.BackgroundColor%2A> properties, or reset the background and foreground to their default colors by calling the <xref:System.Console.ResetColor%2A> method.</span></span>  
  
-   <span data-ttu-id="2787a-203">호출 하 여 콘솔 스피커를 통해 경고음의 소리를 재생 합니다 <xref:System.Console.Beep%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-203">Play the sound of a beep through the console speaker by calling the <xref:System.Console.Beep%2A> method.</span></span>  
  
<a name="Core"></a>   
## <a name="includenetcoreincludesnet-core-mdmd-notes"></a>[!INCLUDE[net_core](~/includes/net-core-md.md)] <span data-ttu-id="2787a-204">참고 사항</span><span class="sxs-lookup"><span data-stu-id="2787a-204">Notes</span></span>  
 <span data-ttu-id="2787a-205">바탕 화면에서.NET Framework에는 <xref:System.Console> 클래스에서 반환 된 인코딩을 사용 하 여 `GetConsoleCP` 및 `GetConsoleOutputCP`, 일반적으로 코드 페이지 인코딩.</span><span class="sxs-lookup"><span data-stu-id="2787a-205">In the .NET Framework on the desktop, the <xref:System.Console> class uses the encoding returned by `GetConsoleCP` and `GetConsoleOutputCP`, which typically is a code page encoding.</span></span> <span data-ttu-id="2787a-206">예를 들어 영어 (미국), 코드 페이지 437 문화권이 시스템에서 코드는 기본적으로 사용 되는 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-206">For example code, on systems whose culture is English (United States), code page 437 is the encoding that is used by default.</span></span> <span data-ttu-id="2787a-207">그러나 [!INCLUDE[net_core](~/includes/net-core-md.md)] 이러한 인코딩의 제한 된 하위 집합만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-207">However, [!INCLUDE[net_core](~/includes/net-core-md.md)] may make only a limited subset of these encodings available.</span></span> <span data-ttu-id="2787a-208">이 경우 여기서 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> 콘솔에 대 한 기본 인코딩을으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-208">Where this is the case, <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> is used as the default encoding for the console.</span></span>  
  
 <span data-ttu-id="2787a-209">앱 특정 코드 페이지 인코딩을 의존 하는 경우 있습니다 수 여전히 사용할 수 있도록 다음을 수행 하 여 *하기 전에* 하나를 호출 하면 <xref:System.Console> 메서드:</span><span class="sxs-lookup"><span data-stu-id="2787a-209">If your app depends on specific code page encodings, you can still make them available by doing the following *before* you call any <xref:System.Console> methods:</span></span>  
  
1.  <span data-ttu-id="2787a-210">프로젝트에 System.Text.Encoding.CodePages.dll 어셈블리에 대 한 참조를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-210">Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</span></span>  
  
2.  <span data-ttu-id="2787a-211">검색 된 <xref:System.Text.EncodingProvider> 에서 개체를 <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-211">Retrieve the <xref:System.Text.EncodingProvider> object from the <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="2787a-212">전달 된 <xref:System.Text.EncodingProvider> 개체를 <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> 메서드를 사용할 수 있는 인코딩 공급자가 지 원하는 추가 인코딩.</span><span class="sxs-lookup"><span data-stu-id="2787a-212">Pass the <xref:System.Text.EncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method to make the additional encodings supported by the encoding provider available.</span></span>  
  
 <span data-ttu-id="2787a-213">합니다 <xref:System.Console> 클래스 자동으로 사용 하 여 기본 시스템 인코딩이 UTF8 대신 호출 하기 전에 인코딩 공급자를 등록 된 <xref:System.Console> 메서드를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-213">The <xref:System.Console> class will then automatically use the default system encoding rather than UTF8, provided that you have registered the encoding provider before calling any <xref:System.Console> output methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-214">다음 예제에서는 데이터를 읽을 데이터를 표준 입력 및 출력 스트림을 작성 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-214">The following example demonstrates how to read data from, and write data to, the standard input and output streams.</span></span> <span data-ttu-id="2787a-215">이러한 스트림을 사용 하 여 리디렉션될 수를 확인 합니다 <xref:System.Console.SetIn%2A> 및 <xref:System.Console.SetOut%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-215">Note that these streams can be redirected by using the <xref:System.Console.SetIn%2A> and <xref:System.Console.SetOut%2A> methods.</span></span>  
  
 [!code-cpp[Classic Console Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Console Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Console Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Console Example/CS/source.cs#1)]
 [!code-vb[Classic Console Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Console Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="2787a-216">이 형식은 스레드로부터 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-216">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public static ConsoleColor BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ConsoleColor BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Console.BackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BackgroundColor As ConsoleColor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property ConsoleColor BackgroundColor { ConsoleColor get(); void set(ConsoleColor value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : ConsoleColor with get, set" Usage="System.Console.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-217">콘솔의 배경색을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-217">Gets or sets the background color of the console.</span></span></summary>
        <value><span data-ttu-id="2787a-218">각 문자의 배경에 표시되는 콘솔의 배경색을 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-218">A value that specifies the background color of the console; that is, the color that appears behind each character.</span></span> <span data-ttu-id="2787a-219">기본값은 검정입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-219">The default is black.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-220">변경 된 <xref:System.Console.BackgroundColor%2A> 배경색 변경 된 후 개별 문자 셀에 기록 되는 유일한 출력 하는 속성에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-220">A change to the <xref:System.Console.BackgroundColor%2A> property affects only output that is written to individual character cells after the background color is changed.</span></span> <span data-ttu-id="2787a-221">전체 콘솔 창의 배경색을 변경 하려면 설정 합니다 <xref:System.Console.BackgroundColor%2A> 속성과 호출은 <xref:System.Console.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-221">To change the background color of the console window as a whole, set the <xref:System.Console.BackgroundColor%2A> property and call the <xref:System.Console.Clear%2A> method.</span></span> <span data-ttu-id="2787a-222">다음 예제에서 이에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-222">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.Console.BackgroundColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.backgroundcolor/cs/backgroundcolor1.cs#1)]
 [!code-vb[System.Console.BackgroundColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.backgroundcolor/vb/backgroundcolor1.vb#1)]  
  
 <span data-ttu-id="2787a-223">Windows 기반 응용 프로그램의 경우에 콘솔을 존재 하지 않는 가져오기 작업을 반환 합니다 <xref:System.ConsoleColor.Black?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-223">A get operation for a Windows-based application, in which a console does not exist, returns <xref:System.ConsoleColor.Black?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-224">값을 저장 하는 다음 예제는 <xref:System.ConsoleColor> 배열에는 열거형의 현재 값을 저장 하 고는 <xref:System.Console.BackgroundColor%2A> 및 <xref:System.Console.ForegroundColor%2A> 변수에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-224">The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables.</span></span> <span data-ttu-id="2787a-225">각 색의 전경색을 다음 변경 합니다 <xref:System.ConsoleColor> 열거형 색과 일치 하는 현재 백그라운드를 제외한 각 색에 배경색을 변경 하는 <xref:System.ConsoleColor> 열거형을 제외 하 고 일치 하는 색을를 현재 전경색입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-225">It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground.</span></span> <span data-ttu-id="2787a-226">(전경색 배경색으로 동일한 경우 텍스트가 표시 되지 않습니다.) 마지막으로 호출 하 여 <xref:System.Console.ResetColor%2A> 원래 콘솔 색을 복원 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-226">(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.</span></span>  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2787a-227">집합 작업에서 지정된 색이 <see cref="T:System.ConsoleColor" />의 유효한 멤버가 아닙니다. </span><span class="sxs-lookup"><span data-stu-id="2787a-227">The color specified in a set operation is not a valid member of <see cref="T:System.ConsoleColor" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-228">사용자에게 이 작업을 수행할 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-228">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-229">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-229">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-230">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-230">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-231">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-231">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Beep">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2787a-232">콘솔 스피커를 통해 경고음을 재생합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-232">Plays the sound of a beep through the console speaker.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Beep" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Beep ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep();" />
      <MemberSignature Language="F#" Value="static member Beep : unit -&gt; unit" Usage="System.Console.Beep " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2787a-233">콘솔 스피커를 통해 경고음을 재생합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-233">Plays the sound of a beep through the console speaker.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-234">기본적으로 경고음 800 헤르츠 빈도로 200 밀리초 동안 재생 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-234">By default, the beep plays at a frequency of 800 hertz for a duration of 200 milliseconds.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2787a-235"><xref:System.Console.Beep%2A> 메서드가 64 비트 버전의 Windows Vista 및 Windows XP에서 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-235">The <xref:System.Console.Beep%2A> method is not supported on the 64-bit editions of Windows Vista and Windows XP.</span></span>  
  
 <span data-ttu-id="2787a-236"><xref:System.Console.Beep%2A> Windows에 대 한 호출을 래핑하고 [함수에 경고음을](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-236"><xref:System.Console.Beep%2A> wraps a call to the Windows [Beep function](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx).</span></span> <span data-ttu-id="2787a-237">여부를 <xref:System.Console.Beep%2A> Windows 7 8254 프로그램 가능 간격 타이머 칩에 의존 하기 전에 버전의 Windows에서 소리를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-237">Whether <xref:System.Console.Beep%2A> produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</span></span> <span data-ttu-id="2787a-238">Windows 7부터 기본 사운드 장치에 따라 다르겠지요.</span><span class="sxs-lookup"><span data-stu-id="2787a-238">Starting with Windows 7, it depends on the default sound device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-239">다음 예제는 <xref:System.Console.Beep%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-239">The following example demonstrates the <xref:System.Console.Beep%2A> method.</span></span> <span data-ttu-id="2787a-240">이 예제에서는 명령줄 인수로 1부터 9 까지의 숫자를 받고 해당 횟수를 경고음을 재생 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-240">The example accepts a number from 1 through 9 as a command line argument, and plays the beep that number of times.</span></span>  
  
 [!code-cpp[console.beep#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.beep/CPP/beep.cpp#1)]
 [!code-csharp[console.beep#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.beep/CS/beep.cs#1)]
 [!code-vb[console.beep#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.beep/VB/beep.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.HostProtectionException"><span data-ttu-id="2787a-241">이 메서드가 사용자 인터페이스에 대한 액세스를 허용하지 않는 SQL Server와 같은 서버에서 실행되었습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-241">This method was executed on a server, such as SQL Server, that does not permit access to a user interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep (int frequency, int duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep(int32 frequency, int32 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Beep(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Beep (frequency As Integer, duration As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep(int frequency, int duration);" />
      <MemberSignature Language="F#" Value="static member Beep : int * int -&gt; unit" Usage="System.Console.Beep (frequency, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frequency" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="duration" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="frequency"><span data-ttu-id="2787a-242">경고음의 주파수이며 해당 범위는 37 - 32767헤르츠입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-242">The frequency of the beep, ranging from 37 to 32767 hertz.</span></span></param>
        <param name="duration"><span data-ttu-id="2787a-243">경고음의 지속 시간(밀리초)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-243">The duration of the beep measured in milliseconds.</span></span></param>
        <summary><span data-ttu-id="2787a-244">지정한 시간 동안 지정한 주파수로 콘솔 스피커를 통해 경고음을 재생합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-244">Plays the sound of a beep of a specified frequency and duration through the console speaker.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-245"><xref:System.Console.Beep%2A> Windows에 대 한 호출을 래핑하고 [함수에 경고음을](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-245"><xref:System.Console.Beep%2A> wraps a call to the Windows [Beep function](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx).</span></span> <span data-ttu-id="2787a-246">여부를 <xref:System.Console.Beep%2A> Windows 7 8254 프로그램 가능 간격 타이머 칩에 의존 하기 전에 버전의 Windows에서 소리를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-246">Whether <xref:System.Console.Beep%2A> produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</span></span> <span data-ttu-id="2787a-247">Windows 7부터 기본 사운드 장치에 따라 다르겠지요.</span><span class="sxs-lookup"><span data-stu-id="2787a-247">Starting with Windows 7, it depends on the default sound device.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2787a-248"><xref:System.Console.Beep%2A> 메서드가 64 비트 버전의 Windows Vista 및 Windows XP에서 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-248">The <xref:System.Console.Beep%2A> method is not supported on the 64-bit editions of Windows Vista and Windows XP.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-249">이 예제에서는 <xref:System.Console.Beep%2A> 콘솔 스피커를 통해 song의 첫 번째 몇 메모를 재생 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-249">This example demonstrates the <xref:System.Console.Beep%2A> method by playing the first few notes of a song through the console speaker.</span></span>  
  
 [!code-cpp[console.beep2#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.beep2/CPP/b2.cpp#1)]
 [!code-csharp[console.beep2#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.beep2/CS/b2.cs#1)]
 [!code-vb[console.beep2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.beep2/VB/b2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-250"><paramref name="frequency" />가 37헤르츠보다 작거나 32767헤르츠보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-250"><paramref name="frequency" /> is less than 37 or more than 32767 hertz.</span></span>  
  
<span data-ttu-id="2787a-251">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-251">-or-</span></span> 
 <span data-ttu-id="2787a-252"><paramref name="duration" />가 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-252"><paramref name="duration" /> is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.Security.HostProtectionException"><span data-ttu-id="2787a-253">이 메서드가 콘솔에 대한 액세스를 허용하지 않는 SQL Server와 같은 서버에서 실행되었습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-253">This method was executed on a server, such as SQL Server, that does not permit access to the console.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BufferHeight">
      <MemberSignature Language="C#" Value="public static int BufferHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BufferHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.BufferHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BufferHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int BufferHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BufferHeight : int with get, set" Usage="System.Console.BufferHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-254">버퍼 영역의 높이를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-254">Gets or sets the height of the buffer area.</span></span></summary>
        <value><span data-ttu-id="2787a-255">버퍼 영역의 현재 높이(행)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-255">The current height, in rows, of the buffer area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-256">이 속성의 콘솔 모드 창에 의해 액세스 되는 버퍼에 저장 된 행 (또는 줄)를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-256">This property defines the number of rows (or lines) stored in the buffer that is accessed by a console mode window.</span></span> <span data-ttu-id="2787a-257">반면,는 <xref:System.Console.WindowHeight%2A> 속성은 특정 시간에 실제로 콘솔 창에 표시 되는 행의 수를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-257">In contrast, the <xref:System.Console.WindowHeight%2A> property defines the number of rows that are actually displayed in the console window at any particular time.</span></span> <span data-ttu-id="2787a-258">의해 정의 된 행의 수를 초과 하는 버퍼에 실제로 기록 된 행의 수를 <xref:System.Console.WindowHeight%2A> 속성을 행과 동일한 연속 숫자로 표시 하는 창이 세로로 스크롤할 수 있는 <xref:System.Console.WindowHeight%2A> 되며 속성이 있는 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-258">If the number of rows actually written to the buffer exceeds the number of rows defined by the <xref:System.Console.WindowHeight%2A> property, the window can be scrolled vertically so that it displays a contiguous number of rows that are equal to the <xref:System.Console.WindowHeight%2A> property and are located anywhere in the buffer.</span></span>  
  
 <span data-ttu-id="2787a-259">Set 작업의 값을 감소 하는 경우는 <xref:System.Console.BufferHeight%2A> 속성인 위 줄이 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-259">If a set operation decreases the value of the <xref:System.Console.BufferHeight%2A> property, the uppermost lines are removed.</span></span> <span data-ttu-id="2787a-260">예를 들어 250 줄 수가 300에서 감소, 0 ~ 49 줄 제거 되 고 될 299 통해 50 줄 기존 줄 경우 0 통해 249입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-260">For example, if the number of lines is reduced from 300 to 250, lines 0 through 49 are removed, and the existing lines 50 through 299 become lines 0 through 249.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-261">이 예제에서는 합니다 <xref:System.Console.BufferHeight%2A> 고 <xref:System.Console.BufferWidth%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-261">This example demonstrates the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="2787a-262">이 예제에서는 300 행 및 열 85의 버퍼 크기를 설정 하는 운영 체제 창의 크기를 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-262">The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.</span></span>  
  
 [!code-cpp[console.bufferHW#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.bufferHW/CPP/hw.cpp#1)]
 [!code-csharp[console.bufferHW#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.bufferHW/CS/hw.cs#1)]
 [!code-vb[console.bufferHW#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.bufferHW/VB/hw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-263">집합 작업의 값이 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-263">The value in a set operation is less than or equal to zero.</span></span>  
  
<span data-ttu-id="2787a-264">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-264">-or-</span></span> 
<span data-ttu-id="2787a-265">집합 작업의 값이 <see cref="F:System.Int16.MaxValue" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-265">The value in a set operation is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
<span data-ttu-id="2787a-266">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-266">-or-</span></span> 
<span data-ttu-id="2787a-267">집합 작업의 값이 <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-267">The value in a set operation is less than <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-268">사용자에게 이 작업을 수행할 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-268">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-269">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-269">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-270">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-270">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-271">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-271">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BufferWidth">
      <MemberSignature Language="C#" Value="public static int BufferWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BufferWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.BufferWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BufferWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int BufferWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BufferWidth : int with get, set" Usage="System.Console.BufferWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-272">버퍼 영역의 너비를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-272">Gets or sets the width of the buffer area.</span></span></summary>
        <value><span data-ttu-id="2787a-273">버퍼 영역의 현재 너비(열)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-273">The current width, in columns, of the buffer area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-274">Set 작업의 값을 감소 하는 경우는 <xref:System.Console.BufferWidth%2A> 속성 오른쪽에 있는 열이 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-274">If a set operation decreases the value of the <xref:System.Console.BufferWidth%2A> property, the rightmost columns are removed.</span></span> <span data-ttu-id="2787a-275">예를 들어, 80에서 60으로 열 수를 줄이면 60 ~ 79 각 행의 열이 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-275">For example, if the number of columns is reduced from 80 to 60, columns 60 through 79 of each row are removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-276">이 예제에서는 합니다 <xref:System.Console.BufferHeight%2A> 고 <xref:System.Console.BufferWidth%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-276">This example demonstrates the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="2787a-277">이 예제에서는 300 행 및 열 85의 버퍼 크기를 설정 하는 운영 체제 창의 크기를 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-277">The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.</span></span>  
  
 [!code-cpp[console.bufferHW#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.bufferHW/CPP/hw.cpp#1)]
 [!code-csharp[console.bufferHW#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.bufferHW/CS/hw.cs#1)]
 [!code-vb[console.bufferHW#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.bufferHW/VB/hw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-278">집합 작업의 값이 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-278">The value in a set operation is less than or equal to zero.</span></span>  
  
<span data-ttu-id="2787a-279">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-279">-or-</span></span> 
<span data-ttu-id="2787a-280">집합 작업의 값이 <see cref="F:System.Int16.MaxValue" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-280">The value in a set operation is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
<span data-ttu-id="2787a-281">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-281">-or-</span></span> 
<span data-ttu-id="2787a-282">집합 작업의 값이 <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-282">The value in a set operation is less than <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-283">사용자에게 이 작업을 수행할 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-283">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-284">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-284">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-285">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-285">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-286">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-286">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CancelKeyPress">
      <MemberSignature Language="C#" Value="public static event ConsoleCancelEventHandler CancelKeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ConsoleCancelEventHandler CancelKeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Console.CancelKeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CancelKeyPress As ConsoleCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event ConsoleCancelEventHandler ^ CancelKeyPress;" />
      <MemberSignature Language="F#" Value="member this.CancelKeyPress : ConsoleCancelEventHandler " Usage="member this.CancelKeyPress : System.ConsoleCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-287"><see cref="F:System.ConsoleModifiers.Control" /> 보조 키(Ctrl)와 <see cref="F:System.ConsoleKey.C" /> 콘솔 키(C) 또는 Break 키를 동시에 누르면(Ctrl+C 또는 Ctrl+Break) 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-287">Occurs when the <see cref="F:System.ConsoleModifiers.Control" /> modifier key (Ctrl) and either the <see cref="F:System.ConsoleKey.C" /> console key (C) or the Break key are pressed simultaneously (Ctrl+C or Ctrl+Break).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-288">이 이벤트와 함께에서 사용 됩니다 <xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType> 고 <xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-288">This event is used in conjunction with <xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType> and <xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2787a-289"><xref:System.Console.CancelKeyPress> 이벤트에 이벤트 처리기는 계속 실행 또는 종료 여부를 결정할 수 있도록 Ctrl + C 신호를 가로채 콘솔 응용 프로그램을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-289">The <xref:System.Console.CancelKeyPress> event enables a console application to intercept the Ctrl+C signal so the event handler can decide whether to continue executing or terminate.</span></span> <span data-ttu-id="2787a-290">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="2787a-290">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2787a-291">사용자가 Ctrl + Break 또는 Ctrl + C를 누를 때를 <xref:System.Console.CancelKeyPress> 이벤트가 발생 하 고 응용 프로그램의 <xref:System.ConsoleCancelEventHandler> 이벤트 처리기가 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-291">When the user presses either Ctrl+C or Ctrl+Break, the <xref:System.Console.CancelKeyPress> event is fired and the application's <xref:System.ConsoleCancelEventHandler> event handler is executed.</span></span> <span data-ttu-id="2787a-292">이벤트 처리기에 전달 되는 <xref:System.ConsoleCancelEventArgs> 두 가지 유용한 속성이 있는 개체:</span><span class="sxs-lookup"><span data-stu-id="2787a-292">The event handler is passed a <xref:System.ConsoleCancelEventArgs> object that has two useful properties:</span></span>  
  
-   <span data-ttu-id="2787a-293"><xref:System.ConsoleCancelEventArgs.SpecialKey%2A>Ctrl + C를 누르면 사용자로 인해 처리기가 호출 여부를 확인할 수 있습니다 (속성 값이 <xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType>) 또는 Ctrl + Break (속성 값이 <xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="2787a-293"><xref:System.ConsoleCancelEventArgs.SpecialKey%2A>, which allows you to determine whether the handler was invoked as a result of the user pressing Ctrl+C (the property value is <xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType>) or Ctrl+Break (the property value is <xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType>).</span></span>  
  
-   <span data-ttu-id="2787a-294"><xref:System.ConsoleCancelEventArgs.Cancel%2A>를 어떻게 응용 프로그램에 사용자에 게 응답 키를 눌러 Ctrl + C 또는 Ctrl + Break를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-294"><xref:System.ConsoleCancelEventArgs.Cancel%2A>, which allows you to determine how to your application should respond to the user pressing Ctrl+C or Ctrl+Break.</span></span> <span data-ttu-id="2787a-295">기본적으로 <xref:System.ConsoleCancelEventArgs.Cancel%2A> 속성은 `false`, 프로그램 종료 이벤트 처리기가 종료 될 때 실행이 원인입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-295">By default, the <xref:System.ConsoleCancelEventArgs.Cancel%2A> property is `false`, which causes program execution to terminate when the event handler exits.</span></span> <span data-ttu-id="2787a-296">해당 속성을 변경 `true` 응용 프로그램 실행을 계속 되도록 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-296">Changing its property to `true` specifies that the application should continue to execute.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="2787a-297">응용 프로그램의 요구 사항이 단순한, 하는 경우 사용할 수 있습니다는 <xref:System.Console.TreatControlCAsInput%2A> 대신이 이벤트는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-297">If your application has simple requirements, you can use the <xref:System.Console.TreatControlCAsInput%2A> property instead of this event.</span></span> <span data-ttu-id="2787a-298">이 속성을 설정 하 여 `false`, 사용자가 Ctrl + C를 누르면 응용 프로그램을 항상 종료 되는 것을 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-298">By setting this property to `false`, you can ensure that your application always exits if the user presses Ctrl+C.</span></span> <span data-ttu-id="2787a-299">로 설정 하 여 `true`, Ctrl + C를 눌러 응용 프로그램을 종료 하지는 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-299">By setting it to `true`, you can ensure that pressing Ctrl+C will not terminate the application.</span></span>  
  
 <span data-ttu-id="2787a-300">이 이벤트에 대 한 이벤트 처리기는 스레드 풀 스레드에서 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-300">The event handler for this event is executed on a thread pool thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-301">다음 예제에서는 방법을 <xref:System.Console.CancelKeyPress> 이벤트가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-301">The following example demonstrates how the <xref:System.Console.CancelKeyPress> event is used.</span></span> <span data-ttu-id="2787a-302">읽기 작업이 중단 되는 Ctrl + C를 누르면 및 `myHandler` 이벤트 처리기가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-302">When you press Ctrl+C, the read operation is interrupted and the `myHandler` event handler is invoked.</span></span> <span data-ttu-id="2787a-303">이벤트 처리기에 진입할 때 합니다 <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> 속성은 `false`, 즉, 이벤트 처리기가 종료 될 때 현재 프로세스가 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-303">Upon entry to the event handler, the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> property is `false`, which means that the current process will terminate when the event handler terminates.</span></span> <span data-ttu-id="2787a-304">그러나 이벤트 처리기를 설정 합니다는 <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> 속성을 `true`, 프로세스 종료 되지는 것입니다. 읽기 작업은 다시 시작을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-304">However, the event handler sets the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> property to `true`, which means that the process will not terminate and the read operation will resume.</span></span>  
  
 [!code-cpp[console.cancelkeypress#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cancelkeypress/cpp/ckp.cpp#1)]
 [!code-csharp[console.cancelkeypress#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cancelkeypress/cs/ckp.cs#1)]
 [!code-vb[console.cancelkeypress#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cancelkeypress/vb/ckp.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-305">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-305">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-306">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-306">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="T:System.ConsoleCancelEventArgs" />
        <altmember cref="T:System.ConsoleCancelEventHandler" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
      </Docs>
    </Member>
    <Member MemberName="CapsLock">
      <MemberSignature Language="C#" Value="public static bool CapsLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CapsLock" />
      <MemberSignature Language="DocId" Value="P:System.Console.CapsLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CapsLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CapsLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CapsLock : bool" Usage="System.Console.CapsLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-307">Caps Lock 키보드 토글의 설정 또는 해제 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-307">Gets a value indicating whether the CAPS LOCK keyboard toggle is turned on or turned off.</span></span></summary>
        <value><span data-ttu-id="2787a-308">Caps Lock이 설정되어 있으면 <see langword="true" />이고, Caps Lock이 해제되어 있으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-308"><see langword="true" /> if CAPS LOCK is turned on; <see langword="false" /> if CAPS LOCK is turned off.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberSignature Language="F#" Value="static member Clear : unit -&gt; unit" Usage="System.Console.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2787a-309">콘솔 버퍼와 해당 콘솔 창에서 표시 정보를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-309">Clears the console buffer and corresponding console window of display information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-310">사용 하는 <xref:System.Console.Clear%2A> 메서드는 MS-DOS 호출 `cls` 명령 프롬프트 창에서 명령을 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-310">Using the <xref:System.Console.Clear%2A> method is equivalent invoking the MS-DOS `cls` command in the command prompt window.</span></span> <span data-ttu-id="2787a-311">경우는 <xref:System.Console.Clear%2A> 메서드 호출 되 면 커서 창의 왼쪽 위 모퉁이에 자동으로 스크롤 하 고 화면 버퍼의 내용을 현재 전경 배경색을 사용 하 여 공백으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-311">When the <xref:System.Console.Clear%2A> method is called, the cursor automatically scrolls to the top-left corner of the window and the contents of the screen buffer are set to blanks using the current foreground background colors.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2787a-312">호출을 시도 합니다 <xref:System.Console.Clear%2A> 메서드는 콘솔 응용 프로그램의 출력을 파일로 리디렉션되는 경우 throw를 <xref:System.IO.IOException>입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-312">Attempting to call the <xref:System.Console.Clear%2A> method when a console application's output is redirected to a file throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="2787a-313">이 방지 하려면 항상 호출을 래핑하는 <xref:System.Console.Clear%2A> 에서 메서드를 `try`...`catch`</span><span class="sxs-lookup"><span data-stu-id="2787a-313">To prevent this, always wrap a call to the <xref:System.Console.Clear%2A> method in a `try`…`catch`</span></span> <span data-ttu-id="2787a-314">블록입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-314">block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-315">다음 예제에서는 <xref:System.Console.Clear%2A> 루프를 실행 하기 전에 콘솔의 선택을 취소 하는 방법 사용자 전경 및 배경 색을 선택 하 고 표시할 문자열을 입력 하 라는 메시지가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-315">The following example uses the <xref:System.Console.Clear%2A> method to clear the console before it executes a loop, prompts the user to select a foreground and background color and to enter a string to display.</span></span> <span data-ttu-id="2787a-316">사용자는 프로그램을 종료 하지 않도록 선택 하면 콘솔의 원래 배경색과 전경색 복원 됩니다 및 <xref:System.Console.Clear%2A> 루프를 다시 실행 하기 전에 다시 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-316">If the user chooses not to exit the program, the console's original foreground and background colors are restored and the <xref:System.Console.Clear%2A> method is called again before re-executing the loop.</span></span>  
  
 [!code-csharp[System.Console.Clear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.clear/cs/clear1.cs#1)]
 [!code-vb[System.Console.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.clear/vb/clear1.vb#1)]  
  
 <span data-ttu-id="2787a-317">의존 하는 예제는 `GetKeyPress` 전경 및 배경 색을 사용자의 선택의 유효성을 검사 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-317">The example relies on a `GetKeyPress` method to validate the user's selection of a foreground and background color.</span></span>  
  
 <span data-ttu-id="2787a-318">이 예제에서는 합니다 <xref:System.Console.CursorLeft%2A> 하 고 <xref:System.Console.CursorTop%2A> 속성 및 <xref:System.Console.SetCursorPosition%2A> 및 <xref:System.Console.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-318">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="2787a-319">이 예제에서는 5 개 문자를 조합 하 여 5 문자가 사각형으로 그릴 다음 쓰기 발생할 위치를 결정 하는 커서를 배치 "+", "&#124;", 및 "-" 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-319">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="2787a-320">다른 문자열의 조합을 사용 하 여 더 적은 단계로 사각형을 그릴 수는 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-320">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-321">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-321">An I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CursorLeft">
      <MemberSignature Language="C#" Value="public static int CursorLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorLeft" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorLeft { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CursorLeft : int with get, set" Usage="System.Console.CursorLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-322">버퍼 영역 내에서 커서의 열 위치를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-322">Gets or sets the column position of the cursor within the buffer area.</span></span></summary>
        <value><span data-ttu-id="2787a-323">커서의 현재 위치(열)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-323">The current position, in columns, of the cursor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2787a-324">이 예제에서는 합니다 <xref:System.Console.CursorLeft%2A> 하 고 <xref:System.Console.CursorTop%2A> 속성 및 <xref:System.Console.SetCursorPosition%2A> 및 <xref:System.Console.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-324">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="2787a-325">이 예제에서는 5 개 문자를 조합 하 여 5 문자가 사각형으로 그릴 다음 쓰기 발생할 위치를 결정 하는 커서를 배치 "+", "&#124;", 및 "-" 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-325">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="2787a-326">다른 문자열의 조합을 사용 하 여 더 적은 단계로 사각형을 그릴 수는 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-326">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-327">Set 작업의 값이 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-327">The value in a set operation is less than zero.</span></span>  
  
<span data-ttu-id="2787a-328">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-328">-or-</span></span> 
<span data-ttu-id="2787a-329">집합 작업의 값이 <see cref="P:System.Console.BufferWidth" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-329">The value in a set operation is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-330">사용자에게 이 작업을 수행할 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-330">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-331">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-331">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-332">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-332">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-333">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-333">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CursorSize">
      <MemberSignature Language="C#" Value="public static int CursorSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorSize" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CursorSize : int with get, set" Usage="System.Console.CursorSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-334">문자 셀 내부의 커서 높이를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-334">Gets or sets the height of the cursor within a character cell.</span></span></summary>
        <value><span data-ttu-id="2787a-335">문자 셀 높이의 백분율로 표시되는 커서의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-335">The size of the cursor expressed as a percentage of the height of a character cell.</span></span> <span data-ttu-id="2787a-336">속성 값의 범위는 1에서 100까지입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-336">The property value ranges from 1 to 100.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-337">커서 모양을 속성 값이 1, 속성 값 100이 셀을 완전히 채우는 셀의 맨 아래에 가로줄에서 이르기까지 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-337">The cursor appearance varies, ranging from a horizontal line at the bottom of the cell when the property value is 1, to completely filling the cell when the property value is 100.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-338">이 예제에서는 <xref:System.Console.CursorSize%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-338">This example demonstrates the <xref:System.Console.CursorSize%2A> property.</span></span> <span data-ttu-id="2787a-339">이 예제에서는 때마다 콘솔 키를 누른 다음 종료 하기 전에 원래 크기로 커서가 복원 커서의 크기를 늘립니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-339">The example increases the size of the cursor each time any console key is pressed, then restores the cursor to its original size before terminating.</span></span>  
  
 [!code-cpp[console.cursorsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorsize/CPP/csize.cpp#1)]
 [!code-csharp[console.cursorsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorsize/CS/csize.cs#1)]
 [!code-vb[console.cursorsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorsize/VB/csize.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-340">set 작업에 지정된 값이 1보다 작거나 100보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-340">The value specified in a set operation is less than 1 or greater than 100.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-341">사용자에게 이 작업을 수행할 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-341">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-342">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-342">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-343">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-343">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-344">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-344">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CursorTop">
      <MemberSignature Language="C#" Value="public static int CursorTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorTop" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorTop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorTop { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CursorTop : int with get, set" Usage="System.Console.CursorTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-345">버퍼 영역 내에서 커서의 행 위치를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-345">Gets or sets the row position of the cursor within the buffer area.</span></span></summary>
        <value><span data-ttu-id="2787a-346">커서의 현재 위치(행)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-346">The current position, in rows, of the cursor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2787a-347">이 예제에서는 합니다 <xref:System.Console.CursorLeft%2A> 하 고 <xref:System.Console.CursorTop%2A> 속성 및 <xref:System.Console.SetCursorPosition%2A> 및 <xref:System.Console.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-347">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="2787a-348">이 예제에서는 5 개 문자를 조합 하 여 5 문자가 사각형으로 그릴 다음 쓰기 발생할 위치를 결정 하는 커서를 배치 "+", "&#124;", 및 "-" 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-348">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="2787a-349">다른 문자열의 조합을 사용 하 여 더 적은 단계로 사각형을 그릴 수는 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-349">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-350">Set 작업의 값이 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-350">The value in a set operation is less than zero.</span></span>  
  
<span data-ttu-id="2787a-351">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-351">-or-</span></span> 
<span data-ttu-id="2787a-352">집합 작업의 값이 <see cref="P:System.Console.BufferHeight" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-352">The value in a set operation is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-353">사용자에게 이 작업을 수행할 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-353">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-354">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-354">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-355">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-355">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-356">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-356">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CursorVisible">
      <MemberSignature Language="C#" Value="public static bool CursorVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CursorVisible" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorVisible" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CursorVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CursorVisible : bool with get, set" Usage="System.Console.CursorVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-357">커서가 표시되는지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-357">Gets or sets a value indicating whether the cursor is visible.</span></span></summary>
        <value><span data-ttu-id="2787a-358">커서가 표시되면 <see langword="true" />이고, 표시되지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-358"><see langword="true" /> if the cursor is visible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2787a-359">이 예제에서는 <xref:System.Console.CursorVisible%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-359">This example demonstrates the <xref:System.Console.CursorVisible%2A> property.</span></span> <span data-ttu-id="2787a-360">입력의 첫 번째 열이 '+' 문자를 표시 되거나 입력이 숨겨지도록 예제에서는 커서는 '-' 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-360">The example makes the cursor visible if the first column of input is a '+' character or invisible if the input is a '-' character.</span></span>  
  
 [!code-cpp[console.cursorvis#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorvis/CPP/vis.cpp#1)]
 [!code-csharp[console.cursorvis#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorvis/CS/vis.cs#1)]
 [!code-vb[console.cursorvis#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorvis/VB/vis.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-361">사용자에게 이 작업을 수행할 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-361">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-362">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-362">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-363">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-363">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-364">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-364">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextWriter Error" />
      <MemberSignature Language="DocId" Value="P:System.Console.Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Error As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextWriter ^ Error { System::IO::TextWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Error : System.IO.TextWriter" Usage="System.Console.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-365">표준 오류 출력 스트림을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-365">Gets the standard error output stream.</span></span></summary>
        <value><span data-ttu-id="2787a-366">표준 오류 출력 스트림을 나타내는 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-366">A <see cref="T:System.IO.TextWriter" /> that represents the standard error output stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-367">이 표준 오류 스트림에 기본적으로 콘솔에 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-367">This standard error stream is set to the console by default.</span></span> <span data-ttu-id="2787a-368">사용 하 여 다른 스트림에 설정할 수는 <xref:System.Console.SetError%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-368">It can be set to another stream with the <xref:System.Console.SetError%2A> method.</span></span> <span data-ttu-id="2787a-369">다시 호출 하 여 수 후 표준 오류 스트림에 리디렉션되는 <xref:System.Console.OpenStandardError%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-369">After the standard error stream is redirected, it can be reacquired by calling the <xref:System.Console.OpenStandardError%2A> method.</span></span>  
  
 <span data-ttu-id="2787a-370">정보 제공 용 이므로 해당 출력을 파일로 리디렉션되 종종는 콘솔 응용 프로그램 표준 오류 스트림의 통해 사용할 수는 <xref:System.Console.Error%2A> 출력을 리디렉션할 경우에 콘솔에 정보를 표시 하려면 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-370">In console applications whose informational output is often redirected to a file, the standard error stream available through the <xref:System.Console.Error%2A> property can be used to display information to the console even if output is redirected.</span></span> <span data-ttu-id="2787a-371">다음 예제에서는 1부터 시작 하는 한 번에 10 개의 번호에 대 한 제품 테이블을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-371">The following example displays product tables for 10 numbers at a time starting with 1.</span></span> <span data-ttu-id="2787a-372">모든 집합 10 개의 숫자가 포함 한 후의 <xref:System.Console.Error%2A> 속성을 다음 집합을 표시할지 여부를 사용자에 게 요청 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-372">After every set of 10 numbers, the <xref:System.Console.Error%2A> property is used to ask the user whether to display the next set.</span></span> <span data-ttu-id="2787a-373">표준 출력을 파일로 리디렉션되는 경우 사용자가 루틴 제품의 다음 집합을 생성할지 여부를 묻습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-373">If the standard output is redirected to a file, the user is still asked whether the routine should generate the next set of products.</span></span>  
  
 [!code-csharp[System.Console.Error#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.error/cs/error1.cs#1)]
 [!code-vb[System.Console.Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.error/vb/error1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="2787a-374">다음 예제는 네 개의 공백을 의해 정의 된 값을 사용 하 여 텍스트 파일에서 탭 문자를 대체 하는 ExpandTabs 라는 명령줄 유틸리티는 `tabSize` 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-374">The following example is a command line utility named ExpandTabs that replaces tab characters in a text file with four spaces, the value defined by the `tabSize` variable.</span></span> <span data-ttu-id="2787a-375">리디렉션합니다 표준 입력 및 출력 파일, 스트림 하지만 사용 하 여는 <xref:System.Console.Error%2A> 콘솔에 표준 오류 스트림에 쓸 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-375">It redirects the standard input and output streams to files, but uses the <xref:System.Console.Error%2A> property to write the standard error stream to the console.</span></span> <span data-ttu-id="2787a-376">탭 문자를 포함 하는 파일의 이름 및 출력 파일의 이름을 제공 하 여 명령줄에서 시작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-376">It can be launched from the command line by supplying the name of the file that contains tab characters and the name of the output file.</span></span>  
  
 [!code-cpp[Console-EXPANDTABSEX#1](~/samples/snippets/cpp/VS_Snippets_CLR/Console-EXPANDTABSEX/CPP/expandtabsex.cpp#1)]
 [!code-csharp[Console-EXPANDTABSEX#1](~/samples/snippets/csharp/VS_Snippets_CLR/Console-EXPANDTABSEX/CS/expandtabsex.cs#1)]
 [!code-vb[Console-EXPANDTABSEX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Console-EXPANDTABSEX/VB/expandtabsex.vb#1)]  
  
 <span data-ttu-id="2787a-377">다음 예제에는 하나 이상의 텍스트 파일의 내용을 콘솔에 표시 하는 간단한 텍스트 파일 뷰어입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-377">The following example is a simple text file viewer that displays the contents of one or more text files to the console.</span></span> <span data-ttu-id="2787a-378">명령줄 인수가 없습니다 또는 명령줄 인수로 전달 된 모든 파일이 존재 하지 않는 경우이 예제에서는 호출 하는 경우는 <xref:System.Console.SetError%2A> 오류 정보를 파일로 리디렉션하는 메서드를 호출 합니다 <xref:System.Console.OpenStandardError%2A> 표준 오류를 썼는지 중 메서드 스트림, 및 오류 정보를 파일에 작성 된 임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-378">If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the <xref:System.Console.OpenStandardError%2A> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.</span></span>  
  
 [!code-csharp[System.Console.OpenStandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.openstandarderror/cs/viewtextfile.cs#1)]
 [!code-vb[System.Console.OpenStandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.openstandarderror/vb/viewtextfile.vb#1)]  
  
 <span data-ttu-id="2787a-379">합니다 <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> 속성이 `true` 오류 스트림에 썼는지 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-379">Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property is set to `true` before reacquiring the error stream.</span></span> <span data-ttu-id="2787a-380">이렇게 하면는 출력은 콘솔에 즉시 전송 되지 않고 버퍼링 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-380">This ensures that output will be sent to the console immediately rather than buffered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ForegroundColor">
      <MemberSignature Language="C#" Value="public static ConsoleColor ForegroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ConsoleColor ForegroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Console.ForegroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ForegroundColor As ConsoleColor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property ConsoleColor ForegroundColor { ConsoleColor get(); void set(ConsoleColor value); };" />
      <MemberSignature Language="F#" Value="member this.ForegroundColor : ConsoleColor with get, set" Usage="System.Console.ForegroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-381">콘솔의 전경색을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-381">Gets or sets the foreground color of the console.</span></span></summary>
        <value><span data-ttu-id="2787a-382">표시되는 각 문자의 색인 콘솔의 전경색을 지정하는 <see cref="T:System.ConsoleColor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-382">A <see cref="T:System.ConsoleColor" /> that specifies the foreground color of the console; that is, the color of each character that is displayed.</span></span> <span data-ttu-id="2787a-383">기본값은 회색입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-383">The default is gray.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-384">Windows 기반 응용 프로그램의 경우에 콘솔을 존재 하지 않는 가져오기 작업을 반환 합니다 <xref:System.ConsoleColor.Gray>합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-384">A get operation for a Windows-based application, in which a console does not exist, returns <xref:System.ConsoleColor.Gray>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-385">다음 예제에서는 확인 하는지 여부를 콘솔의 배경 색은 검정, 인 경우에 배경색이 빨간색과 검정색 전경색을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-385">The following example checks whether the console's background color is black and, if it is, it changes the background color to red and the foreground color to black.</span></span>  
  
 [!code-csharp[System.ConsoleColor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/Example2.cs#2)] 
 [!code-vb[System.ConsoleColor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/Example2.vb#2)]  
  
 <span data-ttu-id="2787a-386">값을 저장 하는 다음 예제는 <xref:System.ConsoleColor> 배열에는 열거형의 현재 값을 저장 하 고는 <xref:System.Console.BackgroundColor%2A> 및 <xref:System.Console.ForegroundColor%2A> 변수에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-386">The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables.</span></span> <span data-ttu-id="2787a-387">각 색의 전경색을 다음 변경 합니다 <xref:System.ConsoleColor> 열거형 색과 일치 하는 현재 백그라운드를 제외한 각 색에 배경색을 변경 하는 <xref:System.ConsoleColor> 열거형을 제외 하 고 일치 하는 색을를 현재 전경색입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-387">It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground.</span></span> <span data-ttu-id="2787a-388">(전경색 배경색으로 동일한 경우 텍스트가 표시 되지 않습니다.) 마지막으로 호출 하 여 <xref:System.Console.ResetColor%2A> 원래 콘솔 색을 복원 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-388">(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.</span></span>  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2787a-389">집합 작업에서 지정된 색이 <see cref="T:System.ConsoleColor" />의 유효한 멤버가 아닙니다. </span><span class="sxs-lookup"><span data-stu-id="2787a-389">The color specified in a set operation is not a valid member of <see cref="T:System.ConsoleColor" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-390">사용자에게 이 작업을 수행할 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-390">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-391">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-391">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-392">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-392">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-393">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-393">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="In">
      <MemberSignature Language="C#" Value="public static System.IO.TextReader In { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextReader In" />
      <MemberSignature Language="DocId" Value="P:System.Console.In" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property In As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextReader ^ In { System::IO::TextReader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.In : System.IO.TextReader" Usage="System.Console.In" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-394">표준 입력 스트림을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-394">Gets the standard input stream.</span></span></summary>
        <value><span data-ttu-id="2787a-395">표준 입력 스트림을 나타내는 <see cref="T:System.IO.TextReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-395">A <see cref="T:System.IO.TextReader" /> that represents the standard input stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-396">이 속성은 기본적으로 표준 입력 스트림으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-396">This property is set to the standard input stream by default.</span></span> <span data-ttu-id="2787a-397">이 속성을 사용 하 여 다른 스트림에 <xref:System.Console.SetIn%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-397">This property can be set to another stream with the <xref:System.Console.SetIn%2A> method.</span></span>  
  
 <span data-ttu-id="2787a-398">표준 입력 스트림에서 읽기 작업을 동기적으로 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-398">Read operations on the standard input stream execute synchronously.</span></span> <span data-ttu-id="2787a-399">즉, 지정 된 읽기 작업이 완료 될 때까지 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-399">That is, they block until the specified read operation has completed.</span></span> <span data-ttu-id="2787a-400">그렇습니다 심지어 경우 비동기 메서드를 같은 <xref:System.IO.TextReader.ReadLineAsync%2A>, 라고 하는 <xref:System.IO.TextReader> 에서 반환 된 개체는 <xref:System.Console.In%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-400">This is true even if an asynchronous method, such as <xref:System.IO.TextReader.ReadLineAsync%2A>, is called on the <xref:System.IO.TextReader> object returned by the <xref:System.Console.In%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-401">다음 샘플에서는 사용 된 `In` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-401">The following sample illustrates the use of the `In` property.</span></span>  
  
 [!code-cpp[consolein#1](~/samples/snippets/cpp/VS_Snippets_CLR/consolein/CPP/consolein.cpp#1)]
 [!code-csharp[consolein#1](~/samples/snippets/csharp/VS_Snippets_CLR/consolein/CS/consolein.cs#1)]
 [!code-vb[consolein#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/consolein/VB/consolein.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Console.OpenStandardInput" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="InputEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding InputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding InputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Console.InputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property InputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ InputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InputEncoding : System.Text.Encoding with get, set" Usage="System.Console.InputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-402">콘솔이 입력을 읽기 위해 사용하는 인코딩을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-402">Gets or sets the encoding the console uses to read input.</span></span></summary>
        <value><span data-ttu-id="2787a-403">콘솔 입력을 읽는 데 사용되는 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-403">The encoding used to read console input.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-404">콘솔 입력 키보드 입력을 해당 문자로 변환 인코딩을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-404">The console uses the input encoding to translate keyboard input into a corresponding character.</span></span> <span data-ttu-id="2787a-405">입력 인코딩을 코드 페이지를 통합 256 키보드 문자 코드를 개별 문자에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-405">The input encoding incorporates a code page that maps 256 keyboard character codes to individual characters.</span></span> <span data-ttu-id="2787a-406">여러 코드 페이지에는 일반적으로 언어 또는 언어 그룹에 대해 사용자 지정된 여러 특수 문자가 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-406">Different code pages include different special characters, typically customized for a language or a group of languages.</span></span>  
  
 <span data-ttu-id="2787a-407">부터 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 속성 가져오기 작업에는 콘솔의 현재 입력 인코딩하는 대신 캐시 된 값을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-407">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], a property get operation may return a cached value instead of the console's current input encoding.</span></span> <span data-ttu-id="2787a-408">경우 발생할 수 있습니다 값을 <xref:System.Console.InputEncoding%2A> 할당 이외의 다른 수단으로 속성을 수정 합니다 <xref:System.Console.InputEncoding%2A> 는 Windows를 호출 하는 등의 속성을 `SetConsoleCP` 함수 또는 사용 하 여를 `chcp` PowerShell 스크립트에서 명령을 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-408">This can occur if the value of the <xref:System.Console.InputEncoding%2A> property is modified by some means other than an assignment to the <xref:System.Console.InputEncoding%2A> property, such as calling the Windows `SetConsoleCP` function or using the `chcp` command from a PowerShell script.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-409">설정 작업에서 <see langword="null" /> 속성 값이 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-409">The property value in a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-410">이 작업을 실행하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-410">An error occurred during the execution of this operation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-411">응용 프로그램에 이 작업을 수행할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-411">Your application does not have permission to perform this operation.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-412">읽기 및 최상위 창 및 하위 창에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-412">for reading and writing to top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-413">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-413">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="IsErrorRedirected">
      <MemberSignature Language="C#" Value="public static bool IsErrorRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsErrorRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsErrorRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsErrorRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsErrorRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsErrorRedirected : bool" Usage="System.Console.IsErrorRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-414">오류 출력 스트림이 표준 오류 스트림에서 리디렉션되었는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-414">Gets a value that indicates whether the error output stream has been redirected from the standard error stream.</span></span></summary>
        <value><span data-ttu-id="2787a-415">오류 출력이 리디렉션되면 <see langword="true" />이고, 리디렉션되지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-415"><see langword="true" /> if error output is redirected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
        <altmember cref="M:System.Console.OpenStandardError" />
      </Docs>
    </Member>
    <Member MemberName="IsInputRedirected">
      <MemberSignature Language="C#" Value="public static bool IsInputRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInputRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsInputRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsInputRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsInputRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputRedirected : bool" Usage="System.Console.IsInputRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-416">입력이 표준 입력 스트림에서 리디렉션되었는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-416">Gets a value that indicates whether input has been redirected from the standard input stream.</span></span></summary>
        <value><span data-ttu-id="2787a-417">입력이 리디렉션되면 <see langword="true" />이고, 리디렉션되지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-417"><see langword="true" /> if input is redirected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
        <altmember cref="M:System.Console.OpenStandardInput" />
      </Docs>
    </Member>
    <Member MemberName="IsOutputRedirected">
      <MemberSignature Language="C#" Value="public static bool IsOutputRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsOutputRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsOutputRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsOutputRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsOutputRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutputRedirected : bool" Usage="System.Console.IsOutputRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-418">출력이 표준 출력 스트림에서 리디렉션되었는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-418">Gets a value that indicates whether output has been redirected from the standard output stream.</span></span></summary>
        <value><span data-ttu-id="2787a-419">출력이 리디렉션되면 <see langword="true" />이고, 리디렉션되지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-419"><see langword="true" /> if output is redirected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
        <altmember cref="M:System.Console.OpenStandardError" />
      </Docs>
    </Member>
    <Member MemberName="KeyAvailable">
      <MemberSignature Language="C#" Value="public static bool KeyAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeyAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Console.KeyAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property KeyAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool KeyAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyAvailable : bool" Usage="System.Console.KeyAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-420">입력 스트림에서 키 누름을 사용할 수 있는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-420">Gets a value indicating whether a key press is available in the input stream.</span></span></summary>
        <value><span data-ttu-id="2787a-421">키 누름을 사용할 수 있으면 <see langword="true" />이고, 사용할 수 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-421"><see langword="true" /> if a key press is available; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-422">속성 값을 즉시 반환 됩니다. 즉,는 <xref:System.Console.KeyAvailable%2A> 속성 키 누름을 사용할 때까지 입력을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-422">The property value is returned immediately; that is, the <xref:System.Console.KeyAvailable%2A> property does not block input until a key press is available.</span></span>  
  
 <span data-ttu-id="2787a-423">사용 하 여는 <xref:System.Console.KeyAvailable%2A> 만 함께에서 속성을 <xref:System.Console.ReadKey%2A> 메서드를 하지는 <xref:System.Console.Read%2A> 또는 <xref:System.Console.ReadLine%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-423">Use the <xref:System.Console.KeyAvailable%2A> property in conjunction with only the <xref:System.Console.ReadKey%2A> method, not the <xref:System.Console.Read%2A> or <xref:System.Console.ReadLine%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-424">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Console.KeyAvailable%2A> 키를 누를 때까지 실행 되는 루프를 만들 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-424">The following example demonstrates how to use the <xref:System.Console.KeyAvailable%2A> property to create a loop that runs until a key is pressed.</span></span>  
  
 [!code-cpp[console.keyavailable#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.keyavailable/CPP/ka.cpp#1)]
 [!code-csharp[console.keyavailable#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.keyavailable/CS/ka.cs#1)]
 [!code-vb[console.keyavailable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.keyavailable/VB/ka.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-425">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-425">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2787a-426">표준 입력이 키보드 대신에 파일로 리디렉션됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-426">Standard input is redirected to a file instead of the keyboard.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LargestWindowHeight">
      <MemberSignature Language="C#" Value="public static int LargestWindowHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LargestWindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.LargestWindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LargestWindowHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LargestWindowHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LargestWindowHeight : int" Usage="System.Console.LargestWindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-427">현재 글꼴 및 화면 해상도에 따라 콘솔 창 행의 가능한 최대 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-427">Gets the largest possible number of console window rows, based on the current font and screen resolution.</span></span></summary>
        <value><span data-ttu-id="2787a-428">콘솔 창의 가능한 최대 높이(행)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-428">The height of the largest possible console window measured in rows.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargestWindowWidth">
      <MemberSignature Language="C#" Value="public static int LargestWindowWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LargestWindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.LargestWindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LargestWindowWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LargestWindowWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LargestWindowWidth : int" Usage="System.Console.LargestWindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-429">현재 글꼴 및 화면 해상도에 따라 콘솔 창 열의 가능한 최대 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-429">Gets the largest possible number of console window columns, based on the current font and screen resolution.</span></span></summary>
        <value><span data-ttu-id="2787a-430">콘솔 창의 가능한 최대 너비(열)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-430">The width of the largest possible console window measured in columns.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveBufferArea">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2787a-431">화면 버퍼의 지정한 소스 영역을 지정한 대상 영역에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-431">Copies a specified source area of the screen buffer to a specified destination area.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveBufferArea">
      <MemberSignature Language="C#" Value="public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveBufferArea(int32 sourceLeft, int32 sourceTop, int32 sourceWidth, int32 sourceHeight, int32 targetLeft, int32 targetTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveBufferArea (sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);" />
      <MemberSignature Language="F#" Value="static member MoveBufferArea : int * int * int * int * int * int -&gt; unit" Usage="System.Console.MoveBufferArea (sourceLeft, sourceTop, sourceWidth, sourceHeight, targetLeft, targetTop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLeft" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceTop" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceWidth" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceHeight" Type="System.Int32" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetLeft" Type="System.Int32" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetTop" Type="System.Int32" Index="5" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceLeft"><span data-ttu-id="2787a-432">소스 영역의 맨 왼쪽 열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-432">The leftmost column of the source area.</span></span></param>
        <param name="sourceTop"><span data-ttu-id="2787a-433">소스 영역의 맨 위 행입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-433">The topmost row of the source area.</span></span></param>
        <param name="sourceWidth"><span data-ttu-id="2787a-434">소스 영역에 있는 열의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-434">The number of columns in the source area.</span></span></param>
        <param name="sourceHeight"><span data-ttu-id="2787a-435">소스 영역에 있는 행의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-435">The number of rows in the source area.</span></span></param>
        <param name="targetLeft"><span data-ttu-id="2787a-436">대상 영역의 맨 왼쪽 열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-436">The leftmost column of the destination area.</span></span></param>
        <param name="targetTop"><span data-ttu-id="2787a-437">대상 영역의 맨 위 행입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-437">The topmost row of the destination area.</span></span></param>
        <summary><span data-ttu-id="2787a-438">화면 버퍼의 지정한 소스 영역을 지정한 대상 영역에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-438">Copies a specified source area of the screen buffer to a specified destination area.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-439">원본 및 대상 매개 변수를 현재 화면 버퍼의 경계를 벗어난 위치를 지정 하는 경우 대상 영역에 포함 되는 원본 영역의 부분만 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-439">If the destination and source parameters specify a position located outside the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</span></span> <span data-ttu-id="2787a-440">즉, 원본 영역을 현재 화면 버퍼에 맞게 잘립니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-440">That is, the source area is clipped to fit the current screen buffer.</span></span>  
  
 <span data-ttu-id="2787a-441"><xref:System.Console.MoveBufferArea%2A> 메서드 대상 영역에 소스 영역을 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-441">The <xref:System.Console.MoveBufferArea%2A> method copies the source area to the destination area.</span></span> <span data-ttu-id="2787a-442">대상 영역의 소스 영역을 교차 하지 않는, 소스 영역을 사용 하 여 현재 전경색 및 배경색 공백으로 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-442">If the destination area does not intersect the source area, the source area is filled with blanks using the current foreground and background colors.</span></span> <span data-ttu-id="2787a-443">그렇지 않으면 소스 영역에 교차 부분이 채워지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-443">Otherwise, the intersected portion of the source area is not filled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-444">하나 이상의 매개 변수가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-444">One or more of the parameters is less than zero.</span></span>  
  
<span data-ttu-id="2787a-445">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-445">-or-</span></span> 
 <span data-ttu-id="2787a-446"><paramref name="sourceLeft" /> 또는 <paramref name="targetLeft" />가 <see cref="P:System.Console.BufferWidth" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-446"><paramref name="sourceLeft" /> or <paramref name="targetLeft" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span>  
  
<span data-ttu-id="2787a-447">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-447">-or-</span></span> 
 <span data-ttu-id="2787a-448"><paramref name="sourceTop" /> 또는 <paramref name="targetTop" />가 <see cref="P:System.Console.BufferHeight" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-448"><paramref name="sourceTop" /> or <paramref name="targetTop" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span>  
  
<span data-ttu-id="2787a-449">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-449">-or-</span></span> 
 <span data-ttu-id="2787a-450"><paramref name="sourceTop" /> + <paramref name="sourceHeight" />가 <see cref="P:System.Console.BufferHeight" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-450"><paramref name="sourceTop" /> + <paramref name="sourceHeight" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span>  
  
<span data-ttu-id="2787a-451">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-451">-or-</span></span> 
 <span data-ttu-id="2787a-452"><paramref name="sourceLeft" /> + <paramref name="sourceWidth" />가 <see cref="P:System.Console.BufferWidth" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-452"><paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-453">사용자에게 이 작업을 수행할 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-453">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-454">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-454">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-455">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-455">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-456">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-456">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="MoveBufferArea">
      <MemberSignature Language="C#" Value="public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveBufferArea(int32 sourceLeft, int32 sourceTop, int32 sourceWidth, int32 sourceHeight, int32 targetLeft, int32 targetTop, char sourceChar, valuetype System.ConsoleColor sourceForeColor, valuetype System.ConsoleColor sourceBackColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveBufferArea (sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer, sourceChar As Char, sourceForeColor As ConsoleColor, sourceBackColor As ConsoleColor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);" />
      <MemberSignature Language="F#" Value="static member MoveBufferArea : int * int * int * int * int * int * char * ConsoleColor * ConsoleColor -&gt; unit" Usage="System.Console.MoveBufferArea (sourceLeft, sourceTop, sourceWidth, sourceHeight, targetLeft, targetTop, sourceChar, sourceForeColor, sourceBackColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLeft" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceTop" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceWidth" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceHeight" Type="System.Int32" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetLeft" Type="System.Int32" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetTop" Type="System.Int32" Index="5" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceChar" Type="System.Char" Index="6" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceForeColor" Type="System.ConsoleColor" Index="7" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceBackColor" Type="System.ConsoleColor" Index="8" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceLeft"><span data-ttu-id="2787a-457">소스 영역의 맨 왼쪽 열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-457">The leftmost column of the source area.</span></span></param>
        <param name="sourceTop"><span data-ttu-id="2787a-458">소스 영역의 맨 위 행입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-458">The topmost row of the source area.</span></span></param>
        <param name="sourceWidth"><span data-ttu-id="2787a-459">소스 영역에 있는 열의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-459">The number of columns in the source area.</span></span></param>
        <param name="sourceHeight"><span data-ttu-id="2787a-460">소스 영역에 있는 행의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-460">The number of rows in the source area.</span></span></param>
        <param name="targetLeft"><span data-ttu-id="2787a-461">대상 영역의 맨 왼쪽 열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-461">The leftmost column of the destination area.</span></span></param>
        <param name="targetTop"><span data-ttu-id="2787a-462">대상 영역의 맨 위 행입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-462">The topmost row of the destination area.</span></span></param>
        <param name="sourceChar"><span data-ttu-id="2787a-463">소스 영역을 채우는 데 사용되는 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-463">The character used to fill the source area.</span></span></param>
        <param name="sourceForeColor"><span data-ttu-id="2787a-464">소스 영역을 채우는 데 사용되는 전경색입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-464">The foreground color used to fill the source area.</span></span></param>
        <param name="sourceBackColor"><span data-ttu-id="2787a-465">소스 영역을 채우는 데 사용되는 배경색입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-465">The background color used to fill the source area.</span></span></param>
        <summary><span data-ttu-id="2787a-466">화면 버퍼의 지정한 소스 영역을 지정한 대상 영역에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-466">Copies a specified source area of the screen buffer to a specified destination area.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-467">원본 및 대상 매개 변수를 현재 화면 버퍼의 경계를 벗어난 위치를 지정 하는 경우 대상 영역에 포함 되는 원본 영역의 부분만 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-467">If the destination and source parameters specify a position located beyond the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</span></span> <span data-ttu-id="2787a-468">즉, 원본 영역을 현재 화면 버퍼에 맞게 잘립니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-468">That is, the source area is clipped to fit the current screen buffer.</span></span>  
  
 <span data-ttu-id="2787a-469"><xref:System.Console.MoveBufferArea%2A> 메서드 대상 영역에 소스 영역을 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-469">The <xref:System.Console.MoveBufferArea%2A> method copies the source area to the destination area.</span></span> <span data-ttu-id="2787a-470">대상 영역의 소스 영역을 교차 하지 않는, 소스 영역에서 지정 된 문자로 채워집니다 `sourceChar`, 하 여 지정 된 색을 사용 하 여 `sourceForeColor` 고 `sourceBackColor`입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-470">If the destination area does not intersect the source area, the source area is filled with the character specified by `sourceChar`, using the colors specified by `sourceForeColor` and `sourceBackColor`.</span></span> <span data-ttu-id="2787a-471">그렇지 않으면 소스 영역에 교차 부분이 채워지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-471">Otherwise, the intersected portion of the source area is not filled.</span></span>  
  
 <span data-ttu-id="2787a-472">합니다 <xref:System.Console.MoveBufferArea%2A> 아무 작업도 수행 하는 경우 `sourceWidth` 또는 `sourceHeight` 은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-472">The <xref:System.Console.MoveBufferArea%2A> method performs no operation if `sourceWidth` or `sourceHeight` is zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-473">하나 이상의 매개 변수가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-473">One or more of the parameters is less than zero.</span></span>  
  
<span data-ttu-id="2787a-474">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-474">-or-</span></span> 
 <span data-ttu-id="2787a-475"><paramref name="sourceLeft" /> 또는 <paramref name="targetLeft" />가 <see cref="P:System.Console.BufferWidth" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-475"><paramref name="sourceLeft" /> or <paramref name="targetLeft" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span>  
  
<span data-ttu-id="2787a-476">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-476">-or-</span></span> 
 <span data-ttu-id="2787a-477"><paramref name="sourceTop" /> 또는 <paramref name="targetTop" />가 <see cref="P:System.Console.BufferHeight" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-477"><paramref name="sourceTop" /> or <paramref name="targetTop" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span>  
  
<span data-ttu-id="2787a-478">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-478">-or-</span></span> 
 <span data-ttu-id="2787a-479"><paramref name="sourceTop" /> + <paramref name="sourceHeight" />가 <see cref="P:System.Console.BufferHeight" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-479"><paramref name="sourceTop" /> + <paramref name="sourceHeight" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span>  
  
<span data-ttu-id="2787a-480">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-480">-or-</span></span> 
 <span data-ttu-id="2787a-481"><paramref name="sourceLeft" /> + <paramref name="sourceWidth" />가 <see cref="P:System.Console.BufferWidth" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-481"><paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2787a-482">색 매개 변수 중 하나 또는 둘 다가 <see cref="T:System.ConsoleColor" /> 열거형의 멤버가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-482">One or both of the color parameters is not a member of the <see cref="T:System.ConsoleColor" /> enumeration.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-483">사용자에게 이 작업을 수행할 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-483">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-484">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-484">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-485">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-485">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-486">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-486">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="NumberLock">
      <MemberSignature Language="C#" Value="public static bool NumberLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool NumberLock" />
      <MemberSignature Language="DocId" Value="P:System.Console.NumberLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NumberLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool NumberLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberLock : bool" Usage="System.Console.NumberLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-487">Num Lock 키보드 토글의 설정 또는 해제 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-487">Gets a value indicating whether the NUM LOCK keyboard toggle is turned on or turned off.</span></span></summary>
        <value><span data-ttu-id="2787a-488">Num Lock이 설정되어 있으면 <see langword="true" />이고, Num Lock이 해제되어 있으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-488"><see langword="true" /> if NUM LOCK is turned on; <see langword="false" /> if NUM LOCK is turned off.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardError">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2787a-489">표준 오류 스트림을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-489">Acquires the standard error stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardError">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardError ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardError" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardError () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardError();" />
      <MemberSignature Language="F#" Value="static member OpenStandardError : unit -&gt; System.IO.Stream" Usage="System.Console.OpenStandardError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2787a-490">표준 오류 스트림을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-490">Acquires the standard error stream.</span></span></summary>
        <returns><span data-ttu-id="2787a-491">표준 오류 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-491">The standard error stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-492">이 메서드는에서 변경 된 후 표준 오류 스트림에 다시 가져오는 데 사용할 수는 <xref:System.Console.SetError%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-492">This method can be used to reacquire the standard error stream after it has been changed by the <xref:System.Console.SetError%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-493">다음 예제에는 하나 이상의 텍스트 파일의 내용을 콘솔에 표시 하는 간단한 텍스트 파일 뷰어입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-493">The following example is a simple text file viewer that displays the contents of one or more text files to the console.</span></span> <span data-ttu-id="2787a-494">명령줄 인수가 없습니다 또는 명령줄 인수로 전달 된 모든 파일이 존재 하지 않는 경우이 예제에서는 호출 하는 경우는 <xref:System.Console.SetError%2A> 오류 정보를 파일로 리디렉션하는 메서드를 호출 합니다 <xref:System.Console.OpenStandardError%2A> 표준 오류를 썼는지 중 메서드 스트림, 및 오류 정보를 파일에 작성 된 임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-494">If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the <xref:System.Console.OpenStandardError%2A> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.</span></span>  
  
 [!code-csharp[System.Console.OpenStandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.openstandarderror/cs/viewtextfile.cs#1)]
 [!code-vb[System.Console.OpenStandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.openstandarderror/vb/viewtextfile.vb#1)]  
  
 <span data-ttu-id="2787a-495">합니다 <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> 속성이 `true` 오류 스트림에 썼는지 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-495">Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property is set to `true` before reacquiring the error stream.</span></span> <span data-ttu-id="2787a-496">이렇게 하면는 출력은 콘솔에 즉시 전송 되지 않고 버퍼링 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-496">This ensures that output will be sent to the console immediately rather than buffered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardError">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardError (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardError(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardError (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardError(int bufferSize);" />
      <MemberSignature Language="F#" Value="static member OpenStandardError : int -&gt; System.IO.Stream" Usage="System.Console.OpenStandardError bufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bufferSize"><span data-ttu-id="2787a-497">내부 스트림 버퍼 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-497">The internal stream buffer size.</span></span></param>
        <summary><span data-ttu-id="2787a-498">표준 오류 스트림을 가져와 지정한 버퍼 크기로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-498">Acquires the standard error stream, which is set to a specified buffer size.</span></span></summary>
        <returns><span data-ttu-id="2787a-499">표준 오류 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-499">The standard error stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-500">이 메서드는에서 변경 된 후 표준 오류 스트림에 다시 가져오는 데 사용할 수는 <xref:System.Console.SetError%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-500">This method can be used to reacquire the standard error stream after it has been changed by the <xref:System.Console.SetError%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-501"><paramref name="bufferSize" />가 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-501"><paramref name="bufferSize" /> is less than or equal to zero.</span></span></exception>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardInput">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2787a-502">표준 입력 스트림을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-502">Acquires the standard input stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardInput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardInput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardInput () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardInput();" />
      <MemberSignature Language="F#" Value="static member OpenStandardInput : unit -&gt; System.IO.Stream" Usage="System.Console.OpenStandardInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2787a-503">표준 입력 스트림을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-503">Acquires the standard input stream.</span></span></summary>
        <returns><span data-ttu-id="2787a-504">표준 입력 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-504">The standard input stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-505">이 메서드는에서 변경 된 후 표준 입력된 스트림을 다시 가져오는 데 사용할 수는 <xref:System.Console.SetIn%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-505">This method can be used to reacquire the standard input stream after it has been changed by the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-506">다음 예제를 사용 하 여 `OpenStandardInput` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-506">The following example illustrates the use of the `OpenStandardInput` property.</span></span>  
  
 [!code-cpp[System.Console.OpenStandartInput#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CPP/decode.cpp#1)]
 [!code-csharp[System.Console.OpenStandartInput#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CS/decode.cs#1)]
 [!code-vb[System.Console.OpenStandartInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.OpenStandartInput/VB/decode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardInput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardInput (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardInput(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardInput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardInput (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardInput(int bufferSize);" />
      <MemberSignature Language="F#" Value="static member OpenStandardInput : int -&gt; System.IO.Stream" Usage="System.Console.OpenStandardInput bufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bufferSize"><span data-ttu-id="2787a-507">내부 스트림 버퍼 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-507">The internal stream buffer size.</span></span></param>
        <summary><span data-ttu-id="2787a-508">표준 입력 스트림을 가져와 지정한 버퍼 크기로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-508">Acquires the standard input stream, which is set to a specified buffer size.</span></span></summary>
        <returns><span data-ttu-id="2787a-509">표준 입력 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-509">The standard input stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-510">변경 된 후에 표준 출력 스트림에 다시 가져오는 데 사용할 수 있습니다이 메서드는 <xref:System.Console.SetIn%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-510">This method can be used to reacquire the standard output stream after it has been changed by the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-511">다음 예제를 사용 하 여 `OpenStandardInput` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-511">The following example illustrates the use of the `OpenStandardInput` property.</span></span>  
  
 [!code-cpp[System.Console.OpenStandartInput#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CPP/decode.cpp#1)]
 [!code-csharp[System.Console.OpenStandartInput#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CS/decode.cs#1)]
 [!code-vb[System.Console.OpenStandartInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.OpenStandartInput/VB/decode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-512"><paramref name="bufferSize" />가 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-512"><paramref name="bufferSize" /> is less than or equal to zero.</span></span></exception>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardOutput">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2787a-513">표준 출력 스트림을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-513">Acquires the standard output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardOutput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardOutput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardOutput () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardOutput();" />
      <MemberSignature Language="F#" Value="static member OpenStandardOutput : unit -&gt; System.IO.Stream" Usage="System.Console.OpenStandardOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2787a-514">표준 출력 스트림을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-514">Acquires the standard output stream.</span></span></summary>
        <returns><span data-ttu-id="2787a-515">표준 출력 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-515">The standard output stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-516">변경 된 후에 표준 출력 스트림에 다시 가져오는 데 사용할 수 있습니다이 메서드는 <xref:System.Console.SetOut%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-516">This method can be used to reacquire the standard output stream after it has been changed by the <xref:System.Console.SetOut%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-517">다음 예제에서는 <xref:System.Console.OpenStandardOutput%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-517">The following example illustrates the use of the <xref:System.Console.OpenStandardOutput%2A> method.</span></span> <span data-ttu-id="2787a-518">탭 문자가 있는 문자열에서 4개의 연속된 공백 문자를 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-518">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="2787a-519">도구를 실행 하려면 두 명령줄 인수를 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-519">To run it, you must supply two command-line arguments.</span></span> <span data-ttu-id="2787a-520">첫 번째는 표준 입력 스트림을 리디렉션하려는 기존 텍스트 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-520">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="2787a-521">두 번째는 표준 출력 스트림을 리디렉션하려는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-521">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="2787a-522">이 파일이 있을 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-522">This file need not exist.</span></span> <span data-ttu-id="2787a-523">그러한 경우 해당 내용은 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-523">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsOutputRedirected" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardOutput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardOutput (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardOutput(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardOutput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardOutput (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardOutput(int bufferSize);" />
      <MemberSignature Language="F#" Value="static member OpenStandardOutput : int -&gt; System.IO.Stream" Usage="System.Console.OpenStandardOutput bufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bufferSize"><span data-ttu-id="2787a-524">내부 스트림 버퍼 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-524">The internal stream buffer size.</span></span></param>
        <summary><span data-ttu-id="2787a-525">표준 출력 스트림을 가져와 지정한 버퍼 크기로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-525">Acquires the standard output stream, which is set to a specified buffer size.</span></span></summary>
        <returns><span data-ttu-id="2787a-526">표준 출력 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-526">The standard output stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-527">변경 된 후에 표준 출력 스트림에 다시 가져오는 데 사용할 수 있습니다이 메서드는 <xref:System.Console.SetOut%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-527">This method can be used to reacquire the standard output stream after it has been changed by the <xref:System.Console.SetOut%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-528">다음 예제에서는 <xref:System.Console.OpenStandardOutput%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-528">The following example illustrates the use of the <xref:System.Console.OpenStandardOutput%2A> method.</span></span> <span data-ttu-id="2787a-529">탭 문자가 있는 문자열에서 4개의 연속된 공백 문자를 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-529">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="2787a-530">도구를 실행 하려면 두 명령줄 인수를 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-530">To run it, you must supply two command line arguments.</span></span> <span data-ttu-id="2787a-531">첫 번째는 표준 입력 스트림을 리디렉션하려는 기존 텍스트 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-531">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="2787a-532">두 번째는 표준 출력 스트림을 리디렉션하려는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-532">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="2787a-533">이 파일이 있을 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-533">This file need not exist.</span></span> <span data-ttu-id="2787a-534">그러한 경우 해당 내용은 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-534">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-535"><paramref name="bufferSize" />가 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-535"><paramref name="bufferSize" /> is less than or equal to zero.</span></span></exception>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsOutputRedirected" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Out">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Out { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextWriter Out" />
      <MemberSignature Language="DocId" Value="P:System.Console.Out" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Out As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextWriter ^ Out { System::IO::TextWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Out : System.IO.TextWriter" Usage="System.Console.Out" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-536">표준 출력 스트림을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-536">Gets the standard output stream.</span></span></summary>
        <value><span data-ttu-id="2787a-537">표준 출력 스트림을 나타내는 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-537">A <see cref="T:System.IO.TextWriter" /> that represents the standard output stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-538">이 속성은 기본적으로 표준 출력 스트림에 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-538">This property is set to the standard output stream by default.</span></span> <span data-ttu-id="2787a-539">이 속성을 사용 하 여 다른 스트림에 <xref:System.Console.SetOut%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-539">This property can be set to another stream with the <xref:System.Console.SetOut%2A> method.</span></span>  
  
 <span data-ttu-id="2787a-540">호출은 `Console.Out.WriteLine` 메서드는 해당 하는 호출에 해당 하는 <xref:System.Console.WriteLine%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-540">Note that calls to `Console.Out.WriteLine` methods are equivalent to calls to the corresponding <xref:System.Console.WriteLine%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-541">다음 예제에서는 <xref:System.Console.Out%2A> 속성을 표준 출력 장치에 응용 프로그램의 현재 디렉터리에서 파일의 이름이 포함 된 배열을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-541">The following example uses the <xref:System.Console.Out%2A> property to display an array containing the names of files in the application's current directory to the standard output device.</span></span> <span data-ttu-id="2787a-542">Files.txt 라는 파일에 표준 출력을 설정 하 고 파일에 대 한 배열 요소를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-542">It then sets the standard output to a file named Files.txt and lists the array elements to the file.</span></span> <span data-ttu-id="2787a-543">마지막으로, 표준 출력 스트림에 출력을 설정 하 고 다시 배열 요소를 표준 출력 장치에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-543">Finally, it sets the output to the standard output stream and again displays the array elements to the standard output device.</span></span>  
  
 [!code-csharp[System.Console.Out#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.out/cs/out1.cs#1)]
 [!code-vb[System.Console.Out#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.out/vb/out1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.In" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OutputEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding OutputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding OutputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Console.OutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property OutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ OutputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OutputEncoding : System.Text.Encoding with get, set" Usage="System.Console.OutputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-544">콘솔이 출력을 쓰기 위해 사용하는 인코딩을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-544">Gets or sets the encoding the console uses to write output.</span></span></summary>
        <value><span data-ttu-id="2787a-545">콘솔 출력을 쓰는 데 사용되는 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-545">The encoding used to write console output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-546">콘솔 해당 콘솔 표시 문자로 응용 프로그램에서 작성 된 문자를 변환 출력 인코딩을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-546">The console uses the output encoding to translate characters written by an application into corresponding console display characters.</span></span> <span data-ttu-id="2787a-547">콘솔을 사용 하는 기본 코드 페이지는 시스템 로캘에서 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-547">The default code page that the console uses is determined by the system locale.</span></span>  
  
 <span data-ttu-id="2787a-548">부터 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 속성 가져오기 작업에는 콘솔의 현재 출력 인코딩이 대신 캐시 된 값을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-548">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], a property get operation may return a cached value instead of the console's current output encoding.</span></span> <span data-ttu-id="2787a-549">경우 발생할 수 있습니다 값을 <xref:System.Console.OutputEncoding%2A> 할당 이외의 다른 수단으로 속성을 수정 합니다 <xref:System.Console.OutputEncoding%2A> 는 Windows를 호출 하는 등의 속성을 `SetConsoleOutputCP` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-549">This can occur if the value of the <xref:System.Console.OutputEncoding%2A> property is modified by some means other than an assignment to the <xref:System.Console.OutputEncoding%2A> property, such as calling the Windows `SetConsoleOutputCP` function.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-550">설정 작업에서 <see langword="null" /> 속성 값이 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-550">The property value in a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-551">이 작업을 실행하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-551">An error occurred during the execution of this operation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-552">응용 프로그램에 이 작업을 수행할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-552">Your application does not have permission to perform this operation.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-553">읽기 및 최상위 창 및 하위 창에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-553">for reading and writing to top-level windows and subwindows.</span></span>  <span data-ttu-id="2787a-554">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-554">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <block subset="none" type="usage"><para><span data-ttu-id="2787a-555">유니코드 인코딩를 <see cref="T:System.Console" /> 클래스는 u t F-8로 인코딩 지원를 <see cref="T:System.Text.UTF8Encoding" /> 클래스를 사용 하 여 시작 합니다 [!INCLUDE[net_v45](~/includes/net-v45-md.md)], utf-16 인코딩을 지원는 <see cref="T:System.Text.UnicodeEncoding" /> 클래스.</span><span class="sxs-lookup"><span data-stu-id="2787a-555">Of the Unicode encodings, the <see cref="T:System.Console" /> class supports UTF-8 encoding with the <see cref="T:System.Text.UTF8Encoding" /> class and, starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it supports UTF-16 encoding with the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span> <span data-ttu-id="2787a-556">UTF-32 인코딩을 <see cref="T:System.Text.UTF32Encoding" /> 클래스가 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-556">UTF-32 encoding with the <see cref="T:System.Text.UTF32Encoding" /> class is not supported.</span></span> <span data-ttu-id="2787a-557">UTF-32 throw 출력 인코딩을 설정 하려고 한 <see cref="T:System.IO.IOException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-557">Attempting to set the output encoding to UTF-32 throws an <see cref="T:System.IO.IOException" />.</span></span>  
  
<span data-ttu-id="2787a-558">참고는 콘솔에 유니코드 문자를 표시 했습니다. 다음이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-558">Note that successfully displaying Unicode characters to the console requires the following:</span></span> 
<span data-ttu-id="2787a-559">-콘솔 문자가 표시 되려면 Lucida Console 또는 Consolas, 같은 트루타입 글꼴을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-559">-   The console must use a TrueType font, such as Lucida Console or Consolas, to display characters.</span></span>  
  
<span data-ttu-id="2787a-560">콘솔에서 사용 되는-글꼴 특정 문자 또는 문자 모양을 표시할 수를 정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-560">-   A font used by the console must define the particular glyph or glyphs to be displayed.</span></span> <span data-ttu-id="2787a-561">콘솔 글꼴 기본 글꼴에 해당 문자에 대 한 정의가 없는 경우 연결 된 글꼴의 문자 모양에 표시할 연결의 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-561">The console can take advantage of font linking to display glyphs from linked fonts if the base font does not contain a definition for that glyph.</span></span>  
  
<span data-ttu-id="2787a-562">유니코드 지원에 대 한 자세한 내용은 "유니코드 지원에 대 한 the 콘솔" 섹션에서 참조는 콘솔이 인코딩는 <see cref="T:System.Console" /> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-562">For more information about support for Unicode encoding by the console, see the "Unicode Support for the Console" section in the <see cref="T:System.Console" /> class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Read" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Read();" />
      <MemberSignature Language="F#" Value="static member Read : unit -&gt; int" Usage="System.Console.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2787a-563">표준 입력 스트림에서 다음 문자를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-563">Reads the next character from the standard input stream.</span></span></summary>
        <returns><span data-ttu-id="2787a-564">입력 스트림의 다음 문자를 반환하거나 현재 읽을 문자가 더 이상 없으면 -1을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-564">The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-565">합니다 <xref:System.Console.Read%2A> 메서드는 입력된 문자를 입력 하는 동안 반환 차단; 누르면 종료는 <xref:System.ConsoleKey.Enter> 키입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-565">The <xref:System.Console.Read%2A> method blocks its return while you type input characters; it terminates when you press the <xref:System.ConsoleKey.Enter> key.</span></span> <span data-ttu-id="2787a-566">플랫폼별 줄 종료 시퀀스를 입력 추가 Enter 키를 눌러 (예: Windows 캐리지 리턴-줄 바꿈 시퀀스 추가).</span><span class="sxs-lookup"><span data-stu-id="2787a-566">Pressing Enter appends a platform-dependent line termination sequence to your input (for example, Windows appends a carriage return-linefeed sequence).</span></span> <span data-ttu-id="2787a-567">에 대 한 후속 호출을 <xref:System.Console.Read%2A> 메서드는 한 번에 사용자 입력된 한 문자를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-567">Subsequent calls to the <xref:System.Console.Read%2A> method retrieve your input one character at a time.</span></span> <span data-ttu-id="2787a-568">마지막 문자를 검색 한 후 <xref:System.Console.Read%2A> 반환 차단 다시 고 주기가 반복 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-568">After the final character is retrieved, <xref:System.Console.Read%2A> blocks its return again and the cycle repeats.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2787a-569">합니다 <xref:System.Console.ReadLine%2A> 메서드 또는 <xref:System.Console.KeyAvailable%2A> 속성 및 <xref:System.Console.ReadKey%2A> 메서드는 사용 하는 것이 좋습니다는 <xref:System.Console.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-569">The <xref:System.Console.ReadLine%2A> method, or the <xref:System.Console.KeyAvailable%2A> property and <xref:System.Console.ReadKey%2A> method are preferable to using the <xref:System.Console.Read%2A> method.</span></span>  
  
 <span data-ttu-id="2787a-570">메서드는 다음 작업 중 하나를 수행 하지 않으면-1 반환 하지 않는 note:</span><span class="sxs-lookup"><span data-stu-id="2787a-570">Note that the method does not return -1 unless you perform one of the following actions:</span></span>  
  
-   <span data-ttu-id="2787a-571">동시에 키를 눌러 합니다 <xref:System.ConsoleModifiers.Control> 보조키 및 <xref:System.ConsoleKey.Z> 콘솔 키 (Ctrl + Z), 파일 끝 조건을 신호를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-571">Simultaneously press the <xref:System.ConsoleModifiers.Control> modifier key and <xref:System.ConsoleKey.Z> console key (Ctrl+Z), which signals the end-of-file condition.</span></span>  
  
-   <span data-ttu-id="2787a-572">파일 끝 조건에서 Windows F6 함수 키 등을 알리는 동일한 키를 누릅니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-572">Press an equivalent key that signals the end-of-file condition, such as the F6 function key in Windows.</span></span>  
  
-   <span data-ttu-id="2787a-573">실제 파일의 끝 문자에는 텍스트 파일과 같은 원본에 입력된 스트림을 리디렉션하려 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-573">Redirect the input stream to a source, such as a text file, that has an actual end-of-file character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-574">다음 예제는 <xref:System.Console.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-574">The following example demonstrates the <xref:System.Console.Read%2A> method.</span></span>  
  
 [!code-cpp[console.read#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.read/CPP/read.cpp#1)]
 [!code-csharp[console.read#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.read/CS/read.cs#1)]
 [!code-vb[console.read#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.read/VB/read.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-575">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-575">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadKey">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2787a-576">다음 문자나 사용자가 누른 기능 키를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-576">Obtains the next character or function key pressed by the user.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadKey">
      <MemberSignature Language="C#" Value="public static ConsoleKeyInfo ReadKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ConsoleKeyInfo ReadKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadKey () As ConsoleKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ConsoleKeyInfo ReadKey();" />
      <MemberSignature Language="F#" Value="static member ReadKey : unit -&gt; ConsoleKeyInfo" Usage="System.Console.ReadKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2787a-577">다음 문자나 사용자가 누른 기능 키를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-577">Obtains the next character or function key pressed by the user.</span></span> <span data-ttu-id="2787a-578">누른 키는 콘솔 창에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-578">The pressed key is displayed in the console window.</span></span></summary>
        <returns><span data-ttu-id="2787a-579">누른 콘솔 키에 해당하는 <see cref="T:System.ConsoleKey" /> 상수 및 유니코드 문자(있을 경우)를 설명하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-579">An object that describes the <see cref="T:System.ConsoleKey" /> constant and Unicode character, if any, that correspond to the pressed console key.</span></span> <span data-ttu-id="2787a-580"><see cref="T:System.ConsoleKeyInfo" /> 개체는 하나 이상의 Shift, Alt 또는 Ctrl 보조키를 콘솔 키와 동시에 눌렀는지 여부를 나타내는 <see cref="T:System.ConsoleModifiers" /> 값을 비트 조합으로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-580">The <see cref="T:System.ConsoleKeyInfo" /> object also describes, in a bitwise combination of <see cref="T:System.ConsoleModifiers" /> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-581">합니다 <xref:System.Console.ReadKey%2A> 메서드 기다리고, 즉, 스레드 실행 블록을 <xref:System.Console.ReadKey%2A> 문자나 함수 키를 누를 때까지 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-581">The <xref:System.Console.ReadKey%2A> method waits, that is, blocks on the thread issuing the <xref:System.Console.ReadKey%2A> method, until a character or function key is pressed.</span></span> <span data-ttu-id="2787a-582">하나 이상의 Alt, Ctrl 또는 Shift 보조키를 사용 하 여 조합에서 문자 또는 함수 키를 누를 수입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-582">A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</span></span> <span data-ttu-id="2787a-583">그러나 자체적으로 보조 키를 누르면 발생 하지 것입니다는 <xref:System.Console.ReadKey%2A> 메서드를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-583">However, pressing a modifier key by itself will not cause the <xref:System.Console.ReadKey%2A> method to return.</span></span>  
  
 <span data-ttu-id="2787a-584">응용 프로그램에 따라 사용 하려는 합니다 <xref:System.Console.ReadKey%2A> 와 함께에서 메서드는 <xref:System.Console.KeyAvailable%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-584">Depending on your application, you might want to use the <xref:System.Console.ReadKey%2A> method in conjunction with the <xref:System.Console.KeyAvailable%2A> property.</span></span>  
  
 <span data-ttu-id="2787a-585">합니다 <xref:System.Console.ReadKey%2A> 표준 입력 파일을 리디렉션되는 경우에 키보드에서 읽고 메서드는 <xref:System.Console.SetIn%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-585">The <xref:System.Console.ReadKey%2A> method reads from the keyboard even if the standard input is redirected to a file with the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-586">가장 일반적인 이유 중 하나가 사용 하는 <xref:System.Console.ReadKey> 방법은 키를 누르면와 앱을 종료 하거나 정보는 추가 창이 표시 될 때까지 프로그램 실행을 중단 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-586">One of the most common uses of the <xref:System.Console.ReadKey> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information.</span></span> <span data-ttu-id="2787a-587">다음 예제에서는 <xref:System.Console.ReadKey> 사용자를 앱을 종료 하기 전에 Enter 키를 누를 때까지 대기 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-587">The following example uses the  <xref:System.Console.ReadKey> method to wait for the user to press the Enter key before terminating the app.</span></span>  
  
 [!code-csharp[System.Console.ReadKey#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Console.ReadKey/cs/ReadKey1.cs#1)]
 [!code-vb[System.Console.ReadKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Console.ReadKey/vb/ReadKey1.vb#1)]  
  
 <span data-ttu-id="2787a-588">이 오버 로드는 <xref:System.Console.ReadKey%2A> 기본적으로 메서드를 누르면 콘솔에 표시할 수 있는 모든 키는 에코 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-588">Note that this overload of the <xref:System.Console.ReadKey%2A> method by default echoes any displayable keys that the user presses to the console.</span></span> <span data-ttu-id="2787a-589">경고를 호출 합니다 <xref:System.Console.ReadKey%2A> 메서드는 `intercept` 인수의 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-589">To suppress them, call the  <xref:System.Console.ReadKey%2A> method with an `intercept` argument of `true`.</span></span>  
  
 <span data-ttu-id="2787a-590">다음 예제에서는 <xref:System.Console.ReadKey> 사용자가 누른 키에 대 한 정보를 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-590">The following example uses the <xref:System.Console.ReadKey> method to display information about which key the user pressed.</span></span> 
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2787a-591"><see cref="P:System.Console.In" /> 속성이 콘솔 이외의 다른 스트림에서 리디렉션됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-591">The <see cref="P:System.Console.In" /> property is redirected from some stream other than the console.</span></span></exception>
        <altmember cref="T:System.ConsoleKey" />
        <altmember cref="P:System.Console.KeyAvailable" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="ReadKey">
      <MemberSignature Language="C#" Value="public static ConsoleKeyInfo ReadKey (bool intercept);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ConsoleKeyInfo ReadKey(bool intercept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadKey(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadKey (intercept As Boolean) As ConsoleKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ConsoleKeyInfo ReadKey(bool intercept);" />
      <MemberSignature Language="F#" Value="static member ReadKey : bool -&gt; ConsoleKeyInfo" Usage="System.Console.ReadKey intercept" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intercept" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="intercept"><span data-ttu-id="2787a-592">누른 키를 콘솔 창에 표시할지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-592">Determines whether to display the pressed key in the console window.</span></span> <span data-ttu-id="2787a-593">누른 키를 표시하지 않으려면 <see langword="true" />이고 표시하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-593"><see langword="true" /> to not display the pressed key; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2787a-594">다음 문자나 사용자가 누른 기능 키를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-594">Obtains the next character or function key pressed by the user.</span></span> <span data-ttu-id="2787a-595">누른 키는 선택적으로 콘솔 창에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-595">The pressed key is optionally displayed in the console window.</span></span></summary>
        <returns><span data-ttu-id="2787a-596">누른 콘솔 키에 해당하는 <see cref="T:System.ConsoleKey" /> 상수 및 유니코드 문자(있을 경우)를 설명하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-596">An object that describes the <see cref="T:System.ConsoleKey" /> constant and Unicode character, if any, that correspond to the pressed console key.</span></span> <span data-ttu-id="2787a-597"><see cref="T:System.ConsoleKeyInfo" /> 개체는 하나 이상의 Shift, Alt 또는 Ctrl 보조키를 콘솔 키와 동시에 눌렀는지 여부를 나타내는 <see cref="T:System.ConsoleModifiers" /> 값을 비트 조합으로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-597">The <see cref="T:System.ConsoleKeyInfo" /> object also describes, in a bitwise combination of <see cref="T:System.ConsoleModifiers" /> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-598">합니다 <xref:System.Console.ReadKey%2A> 메서드 기다리고, 즉, 스레드 실행 블록을 <xref:System.Console.ReadKey%2A> 문자나 함수 키를 누를 때까지 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-598">The <xref:System.Console.ReadKey%2A> method waits, that is, blocks on the thread issuing the <xref:System.Console.ReadKey%2A> method, until a character or function key is pressed.</span></span> <span data-ttu-id="2787a-599">하나 이상의 Alt, Ctrl 또는 Shift 보조키를 사용 하 여 조합에서 문자 또는 함수 키를 누를 수입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-599">A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</span></span> <span data-ttu-id="2787a-600">그러나 자체적으로 보조 키를 누르면 발생 하지 것입니다는 <xref:System.Console.ReadKey%2A> 메서드를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-600">However, pressing a modifier key by itself will not cause the <xref:System.Console.ReadKey%2A> method to return.</span></span>  
  
 <span data-ttu-id="2787a-601">경우는 `intercept` 매개 변수는 `true`, 누른된 키를 가로채 고 하지 콘솔 창에 표시 된이 고 그렇지 않으면, 누른된 키 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-601">If the `intercept` parameter is `true`, the pressed key is intercepted and not displayed in the console window; otherwise, the pressed key is displayed.</span></span>  
  
 <span data-ttu-id="2787a-602">응용 프로그램에 따라 사용 하려는 합니다 <xref:System.Console.ReadKey%2A> 와 함께에서 메서드는 <xref:System.Console.KeyAvailable%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-602">Depending on your application, you might want to use the <xref:System.Console.ReadKey%2A> method in conjunction with the <xref:System.Console.KeyAvailable%2A> property.</span></span>  
  
 <span data-ttu-id="2787a-603">합니다 <xref:System.Console.ReadKey%2A> 표준 입력 파일을 리디렉션되는 경우에 키보드에서 읽고 메서드는 <xref:System.Console.SetIn%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-603">The <xref:System.Console.ReadKey%2A> method reads from the keyboard even if the standard input is redirected to a file with the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-604">가장 일반적인 이유 중 하나가 사용 하는 <xref:System.Console.ReadKey%2A> 방법은 키를 누르면와 앱을 종료 하거나 정보는 추가 창이 표시 될 때까지 프로그램 실행을 중단 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-604">One of the most common uses of the <xref:System.Console.ReadKey%2A> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information.</span></span> <span data-ttu-id="2787a-605">다음 예제에서는 <xref:System.Console.ReadKey%28System.Boolean%29> 사용자를 앱을 종료 하기 전에 Enter 키를 누를 때까지 대기 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-605">The following example uses the  <xref:System.Console.ReadKey%28System.Boolean%29> method to wait for the user to press the Enter key before terminating the app.</span></span> <span data-ttu-id="2787a-606">사용자가 다른 키를 누르면이 표시 됩니다 콘솔로 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-606">Note that, if the user presses any other key, it is not echoed to the console.</span></span>  
  
 [!code-csharp[System.Console.ReadKey#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Console.ReadKey/cs/ReadKey2.cs#2)]
 [!code-vb[System.Console.ReadKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Console.ReadKey/vb/ReadKey2.vb#2)]  
  
 <span data-ttu-id="2787a-607">다음 예제에서는 <xref:System.Console.ReadKey%28System.Boolean%29> 콘솔에 해당 키를 에코 하지 않고 사용자가 누른 키에 대 한 정보를 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-607">The following example uses the <xref:System.Console.ReadKey%28System.Boolean%29> method to display information about the key pressed by a user without echoing that key to the console.</span></span>  
  
 [!code-cpp[console.readkey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey2/CPP/rkbool.cpp#1)]
 [!code-csharp[console.readkey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey2/CS/rkbool.cs#1)]
 [!code-vb[console.readkey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey2/VB/rkbool.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2787a-608"><see cref="P:System.Console.In" /> 속성이 콘솔 이외의 다른 스트림에서 리디렉션됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-608">The <see cref="P:System.Console.In" /> property is redirected from some stream other than the console.</span></span></exception>
        <altmember cref="T:System.ConsoleKey" />
        <altmember cref="P:System.Console.KeyAvailable" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public static string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="static member ReadLine : unit -&gt; string" Usage="System.Console.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2787a-609">표준 입력 스트림에서 다음 줄의 문자를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-609">Reads the next line of characters from the standard input stream.</span></span></summary>
        <returns><span data-ttu-id="2787a-610">입력 스트림의 다음 줄 문자를 반환하거나 사용할 수 있는 줄이 더 이상 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-610">The next line of characters from the input stream, or <see langword="null" /> if no more lines are available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-611"><xref:System.Console.ReadLine%2A> 메서드는 표준 입력 스트림에서 한 줄을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-611">The <xref:System.Console.ReadLine%2A> method reads a line from the standard input stream.</span></span> <span data-ttu-id="2787a-612">(줄의 정의 대 한 참조를 단락 다음 목록 뒤). 이는 다음을 의미합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-612">(For the definition of a line, see the paragraph after the following list.) This means that:</span></span>  
  
-   <span data-ttu-id="2787a-613">장치가 있는 경우 표준 입력 키보드를 <xref:System.Console.ReadLine%2A> 사용자가 될 때까지 차단 메서드를 **Enter** 키입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-613">If the standard input device is the keyboard, the <xref:System.Console.ReadLine%2A> method blocks until the user presses the **Enter** key.</span></span>  
  
     <span data-ttu-id="2787a-614">가장 일반적인 이유 중 하나가 사용 하는 <xref:System.Console.ReadLine%2A> 메서드는 콘솔의 선택을 취소 하 고 새 정보를 표시 하기 전에 프로그램 실행을 일시 중지 또는 응용 프로그램을 종료 하기 전에 Enter 키를 눌러 사용자에 게 프롬프트.</span><span class="sxs-lookup"><span data-stu-id="2787a-614">One of the most common uses of the <xref:System.Console.ReadLine%2A> method is to pause program execution before clearing the console and displaying new information to it, or to prompt the user to press the Enter key before terminating the application.</span></span> <span data-ttu-id="2787a-615">다음은 이에 대한 예입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-615">The following example illustrates this.</span></span>  
  
     [!code-cpp[System.Console.ReadLine#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.ReadLine/cpp/ReadLineSimple.cpp#6)]
     [!code-csharp[System.Console.ReadLine#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLineSimple.cs#6)]
     [!code-vb[System.Console.ReadLine#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLineSimple.vb#6)]  
  
-   <span data-ttu-id="2787a-616">표준 입력을 파일로 리디렉션되는 경우는 <xref:System.Console.ReadLine%2A> 메서드 파일에서 텍스트 줄을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-616">If standard input is redirected to a file, the <xref:System.Console.ReadLine%2A> method reads a line of text from a file.</span></span> <span data-ttu-id="2787a-617">예를 들어, 다음은 ReadLine1.txt 라는 텍스트 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-617">For example, the following is a text file named ReadLine1.txt:</span></span>  
  
    ```  
  
    This is the first line.  
    This is the second line.  
    This is the third line.  
    This is the fourth line.  
  
    ```  
  
     <span data-ttu-id="2787a-618">다음 예제에서는 <xref:System.Console.ReadLine%2A> 파일에서 리디렉션되는 입력을 읽는 방법.</span><span class="sxs-lookup"><span data-stu-id="2787a-618">The following example uses the <xref:System.Console.ReadLine%2A> method to read input that is redirected from a file.</span></span> <span data-ttu-id="2787a-619">메서드가 반환 될 때 읽기 작업 종료 `null`, 줄이 더 남아 읽을 수 있는지 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-619">The read operation terminates when the  method returns `null`, which indicates that no lines remain to be read.</span></span>  
  
     [!code-csharp[System.Console.ReadLine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLine3.cs#3)]
     [!code-vb[System.Console.ReadLine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLine3.vb#3)]  
  
     <span data-ttu-id="2787a-620">이 예제를 실행 하는 명명 된 ReadLine1.exe 컴파일한 후 실행할 수 있습니다 구문 사용 하 여 명령줄에서</span><span class="sxs-lookup"><span data-stu-id="2787a-620">After compiling the example to an executable named ReadLine1.exe, you can run it from the command line with the syntax</span></span>  
  
    ```  
    ReadLine1 < ReadLine1.txt  
    ```  
  
     <span data-ttu-id="2787a-621">파일의 내용을 읽고 콘솔에 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-621">to read the contents of the file and display them to the console.</span></span>  
  
 <span data-ttu-id="2787a-622">줄 문자가 뒤에 캐리지 리턴 (16 진수 0x000d), 줄 바꿈 (16 진수 0x000a) 또는 값의 시퀀스로 정의 됩니다는 <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-622">A line is defined as a sequence of characters followed by a carriage return (hexadecimal 0x000d), a line feed (hexadecimal 0x000a), or the value of the <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2787a-623">반환된 된 문자열에는 종결 문자가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-623">The returned string does not contain the terminating character(s).</span></span> <span data-ttu-id="2787a-624">기본적으로 메서드를 256 자 입력된 버퍼에서 입력을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-624">By default, the method reads input from a 256-character input buffer.</span></span> <span data-ttu-id="2787a-625">이 포함 되어 있으므로 <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> 문자를 메서드 최대 254 자의 문자를 포함 하는 줄을 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-625">Because this includes the <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> character(s), the method can read lines that contain up to 254 characters.</span></span> <span data-ttu-id="2787a-626">긴 줄을 읽으려면 호출을 <xref:System.Console.OpenStandardInput%28System.Int32%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-626">To read longer lines, call the <xref:System.Console.OpenStandardInput%28System.Int32%29> method.</span></span>  
  
 <span data-ttu-id="2787a-627"><xref:System.Console.ReadLine%2A> 메서드가 동기적으로 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-627">The <xref:System.Console.ReadLine%2A> method executes synchronously.</span></span> <span data-ttu-id="2787a-628">즉, 줄 읽기 또는 Ctrl + Z 키를 누를 때까지 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-628">That is, it blocks until a line is read or the Ctrl+Z keyboard combination is pressed.</span></span> <span data-ttu-id="2787a-629"><xref:System.Console.In%2A> 속성이 반환을 <xref:System.IO.TextReader> 표준 입력된 스트림을 나타내는 했으며 동기를 개체 <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> 메서드와 비동기 <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-629">The <xref:System.Console.In%2A> property returns a <xref:System.IO.TextReader> object that represents the standard input stream and that has both a synchronous <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> method and an asynchronous <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2787a-630">그러나 콘솔의 표준 입력된 스트림을 사용 하는 경우는 <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> 비동기가 아닌 동기적으로 실행 하 고 반환을 `Task<String>` 읽기 작업이 완료 된 후에 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-630">However, when used as the console's standard input stream, the <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> executes synchronously rather than asynchronously and returns a `Task<String>` only after the read operation has completed.</span></span>  
  
 <span data-ttu-id="2787a-631">이 메서드가 throw 하는 경우는 <xref:System.OutOfMemoryException> 예외, 기본 판독기의 위치가 <xref:System.IO.Stream> 개체는 메서드를 읽지 못한 자 이지만 내부에 이미 읽은 문자 수 만큼 앞에 <xref:System.Console.ReadLine%2A> 버퍼는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-631">If this method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.Console.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="2787a-632">이미 읽은 문자를 복구할 수 없는 및 다시 초기화에 의해서만 액세스할 수 있습니다 스트림에서 판독기의 위치를 변경할 수 없으므로는 <xref:System.IO.TextReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-632">Since the position of the reader in the stream cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="2787a-633">스트림 내에서 처음 위치를 알 수 없는 경우는 스트림이 검색을 기본 지원 하지 않는 <xref:System.IO.Stream> 도 다시 초기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-633">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span> <span data-ttu-id="2787a-634">이러한 상황을 피하려면 및 강력한 코드를 생성 하기 위해 사용 해야 합니다 <xref:System.Console.KeyAvailable%2A> 속성 및 <xref:System.Console.ReadKey%2A> 읽기 미리 할당 된 버퍼의 문자 메서드와 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-634">To avoid such a situation and to produce robust code, you should use the <xref:System.Console.KeyAvailable%2A> property and <xref:System.Console.ReadKey%2A> method and store the read characters in a pre-allocated buffer.</span></span>  
  
 <span data-ttu-id="2787a-635">메서드가 반환 하는 경우 메서드는 콘솔에서 입력을 읽기 경우 Ctrl + Z 문자를 눌렀는지를 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-635">If the Ctrl+Z character is pressed when the method is reading input from the console, the method returns `null`.</span></span> <span data-ttu-id="2787a-636">이 그러면 추가 키보드를 방지 하기 위해 사용자 입력 될 때를 <xref:System.Console.ReadLine%2A> 루프에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-636">This enables the user to prevent further keyboard input when the <xref:System.Console.ReadLine%2A> method is called in a loop.</span></span> <span data-ttu-id="2787a-637">다음 예제에서는이 시나리오를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-637">The following example illustrates this scenario.</span></span>  
  
 [!code-cpp[System.Console.ReadLine#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.ReadLine/cpp/readline2.cpp#1)]
 [!code-csharp[System.Console.ReadLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLine2.cs#1)]
 [!code-vb[System.Console.ReadLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLine2.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="2787a-638">다음 예제에서는 두 명령줄 인수: 기존 텍스트 파일의 이름 및 출력을 쓸 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-638">The following example requires two command line arguments: the name of an existing text file, and the name of a file to write the output to.</span></span> <span data-ttu-id="2787a-639">기존 텍스트 파일을 열고 해당 파일에 표준 키보드에서 입력을 리디렉션합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-639">It opens the existing text file and redirects the standard input from the keyboard to that file.</span></span> <span data-ttu-id="2787a-640">또한 출력 파일에 콘솔에서 표준 출력을으로 리디렉션합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-640">It also redirects the standard output from the console to the output file.</span></span> <span data-ttu-id="2787a-641">사용 하 여는 <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> 파일에서 각 줄을 읽을 메서드는 탭 문자를 사용 하 여 네 개의 공백의 모든 시퀀스를 대체 하며 사용은 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 출력 파일에 결과 기록 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-641">It then uses the <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method to read each line in the file, replaces every sequence of four spaces with a tab character, and uses the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method to write the result to the output file.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-642">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-642">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="2787a-643">메모리가 부족하여 반환된 문자열의 버퍼를 할당할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-643">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-644">다음 줄의 문자 수가 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-644">The number of characters in the next line of characters is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="ResetColor">
      <MemberSignature Language="C#" Value="public static void ResetColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ResetColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetColor();" />
      <MemberSignature Language="F#" Value="static member ResetColor : unit -&gt; unit" Usage="System.Console.ResetColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2787a-645">콘솔의 전경색과 배경색을 해당 기본값으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-645">Sets the foreground and background console colors to their defaults.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-646">현재 프로세스를 시작 했을 때 존재 하는 색 전경색 및 배경색 복원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-646">The foreground and background colors are restored to the colors that existed when the current process began.</span></span> <span data-ttu-id="2787a-647">자세한 내용은 참조는 <xref:System.Console.ForegroundColor%2A> 및 <xref:System.Console.BackgroundColor%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-647">For more information, see the <xref:System.Console.ForegroundColor%2A> and <xref:System.Console.BackgroundColor%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-648">값을 저장 하는 다음 예제는 <xref:System.ConsoleColor> 배열에는 열거형의 현재 값을 저장 하 고는 <xref:System.Console.BackgroundColor%2A> 및 <xref:System.Console.ForegroundColor%2A> 변수에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-648">The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables.</span></span> <span data-ttu-id="2787a-649">각 색의 전경색을 다음 변경 합니다 <xref:System.ConsoleColor> 열거형 색과 일치 하는 현재 백그라운드를 제외한 각 색에 배경색을 변경 하는 <xref:System.ConsoleColor> 열거형을 제외 하 고 일치 하는 색을를 현재 전경색입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-649">It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground.</span></span> <span data-ttu-id="2787a-650">(전경색 배경색으로 동일한 경우 텍스트가 표시 되지 않습니다.) 마지막으로 호출 하 여 <xref:System.Console.ResetColor%2A> 원래 콘솔 색을 복원 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-650">(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.</span></span>  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-651">사용자에게 이 작업을 수행할 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-651">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-652">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-652">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-653">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-653">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-654">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-654">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetBufferSize">
      <MemberSignature Language="C#" Value="public static void SetBufferSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBufferSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetBufferSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetBufferSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetBufferSize(int width, int height);" />
      <MemberSignature Language="F#" Value="static member SetBufferSize : int * int -&gt; unit" Usage="System.Console.SetBufferSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="height" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="2787a-655">측정된 버퍼 영역의 너비(열)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-655">The width of the buffer area measured in columns.</span></span></param>
        <param name="height"><span data-ttu-id="2787a-656">측정된 버퍼 영역의 높이(행)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-656">The height of the buffer area measured in rows.</span></span></param>
        <summary><span data-ttu-id="2787a-657">화면 버퍼의 높이와 너비를 지정한 값으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-657">Sets the height and width of the screen buffer area to the specified values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2787a-658">다음 예제는 <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, 및 <xref:System.Console.CursorVisible%2A> 속성 및 <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, 및 <xref:System.Console.ReadKey%2A> 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-658">The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods.</span></span> <span data-ttu-id="2787a-659">이 예제에서는 화면 버퍼 너비를 기준으로 화면 버퍼에서을 표 패턴을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-659">The example draws a grid pattern in the screen buffer based on the screen buffer width.</span></span> <span data-ttu-id="2787a-660">다음 예제에서는 콘솔 창에서 아래쪽 화살표, 왼쪽 화살표 또는 오른쪽 화살표 콘솔 키를 누르면 위쪽 화살표는 응답을 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-660">Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</span></span> <span data-ttu-id="2787a-661">Grid 패턴을 사용 하면 화면 버퍼에 상대적인 콘솔 창의 이동 상태를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-661">The grid pattern helps you see the movement of the console window relative to the screen buffer.</span></span>  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-662"><paramref name="height" /> 또는 <paramref name="width" />가 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-662"><paramref name="height" /> or <paramref name="width" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="2787a-663">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-663">-or-</span></span> 
 <span data-ttu-id="2787a-664"><paramref name="height" /> 또는 <paramref name="width" />가 <see cref="F:System.Int16.MaxValue" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-664"><paramref name="height" /> or <paramref name="width" /> is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
<span data-ttu-id="2787a-665">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-665">-or-</span></span> 
 <span data-ttu-id="2787a-666"><paramref name="width" />가 <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-666"><paramref name="width" /> is less than <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />.</span></span>  
  
<span data-ttu-id="2787a-667">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-667">-or-</span></span> 
 <span data-ttu-id="2787a-668"><paramref name="height" />가 <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-668"><paramref name="height" /> is less than <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-669">사용자에게 이 작업을 수행할 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-669">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-670">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-670">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-671">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-671">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-672">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-672">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPosition">
      <MemberSignature Language="C#" Value="public static void SetCursorPosition (int left, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCursorPosition(int32 left, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetCursorPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCursorPosition (left As Integer, top As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCursorPosition(int left, int top);" />
      <MemberSignature Language="F#" Value="static member SetCursorPosition : int * int -&gt; unit" Usage="System.Console.SetCursorPosition (left, top)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="top" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="2787a-673">커서의 열 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-673">The column position of the cursor.</span></span> <span data-ttu-id="2787a-674">열은 0부터 시작하여 왼쪽부터 오른쪽까지 번호가 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-674">Columns are numbered from left to right starting at 0.</span></span></param>
        <param name="top"><span data-ttu-id="2787a-675">커서의 행 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-675">The row position of the cursor.</span></span> <span data-ttu-id="2787a-676">행은 0부터 시작하여 위에서 아래로 번호가 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-676">Rows are numbered from top to bottom starting at 0.</span></span></param>
        <summary><span data-ttu-id="2787a-677">커서의 위치를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-677">Sets the position of the cursor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-678">사용 된 <xref:System.Console.SetCursorPosition%2A> 콘솔 창에 다음 쓰기 작업을 시작할 위치를 지정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-678">Use the <xref:System.Console.SetCursorPosition%2A> method to specify where the next write operation in the console window is to begin.</span></span> <span data-ttu-id="2787a-679">지정 된 커서 위치를 콘솔 창에 현재 표시 되는 영역 밖에 창 원본 커서가 표시 되도록 자동으로 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-679">If the specified cursor position is outside the area that is currently visible in the console window, the window origin changes automatically to make the cursor visible.</span></span>  
  
 <span data-ttu-id="2787a-680">콘솔 창에 문자를 쓸 때마다 다음 문자 위치에 커서를 자동으로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-680">The cursor automatically moves to the next character position each time a character is written to the console window.</span></span> <span data-ttu-id="2787a-681">커서 콘솔 창의 맨 아래 오른쪽 문자 위치에 있는 경우 다음 쓰기 작업을 수행 하면 스크롤 커서가 계속 표시 되므로 콘솔 창</span><span class="sxs-lookup"><span data-stu-id="2787a-681">If the cursor is at the bottom right character position of the console window, the next write operation causes the console window to scroll so the cursor remains visible.</span></span> <span data-ttu-id="2787a-682">스크롤을 사용 하 여 콘솔 창을 않고 아래 오른쪽 문자 위치에 문자를 쓸 것인지는 <xref:System.Console.MoveBufferArea%2A> 문자를 해당 위치로 이동 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-682">If you want to write a character to the bottom right character position without causing the console window to scroll, use the <xref:System.Console.MoveBufferArea%2A> method to move a character to that position.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-683">이 예제에서는 합니다 <xref:System.Console.CursorLeft%2A> 하 고 <xref:System.Console.CursorTop%2A> 속성 및 <xref:System.Console.SetCursorPosition%2A> 및 <xref:System.Console.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-683">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="2787a-684">이 예제에서는 5 개 문자를 조합 하 여 5 문자가 사각형으로 그릴 다음 쓰기 발생할 위치를 결정 하는 커서를 배치 "+", "&#124;", 및 "-" 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-684">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="2787a-685">다른 문자열의 조합을 사용 하 여 더 적은 단계로 사각형을 그릴 수는 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-685">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-686"><paramref name="left" /> 또는 <paramref name="top" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-686"><paramref name="left" /> or <paramref name="top" /> is less than zero.</span></span>  
  
<span data-ttu-id="2787a-687">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-687">-or-</span></span> 
 <span data-ttu-id="2787a-688"><paramref name="left" />가 <see cref="P:System.Console.BufferWidth" />보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="2787a-688"><paramref name="left" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span>  
  
<span data-ttu-id="2787a-689">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-689">-or-</span></span> 
 <span data-ttu-id="2787a-690"><paramref name="top" />가 <see cref="P:System.Console.BufferHeight" />보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="2787a-690"><paramref name="top" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-691">사용자에게 이 작업을 수행할 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-691">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-692">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-692">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-693">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-693">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-694">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-694">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetError">
      <MemberSignature Language="C#" Value="public static void SetError (System.IO.TextWriter newError);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetError(class System.IO.TextWriter newError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetError(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetError (newError As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetError(System::IO::TextWriter ^ newError);" />
      <MemberSignature Language="F#" Value="static member SetError : System.IO.TextWriter -&gt; unit" Usage="System.Console.SetError newError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newError" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="newError"><span data-ttu-id="2787a-695">새 표준 오류 출력을 나타내는 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-695">A stream that is the new standard error output.</span></span></param>
        <summary><span data-ttu-id="2787a-696"><see cref="P:System.Console.Error" /> 속성을 지정한 <see cref="T:System.IO.TextWriter" /> 개체로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-696">Sets the <see cref="P:System.Console.Error" /> property to the specified <see cref="T:System.IO.TextWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-697">기본적으로 <xref:System.Console.Error%2A> 속성을 표준 오류 출력 스트림을로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-697">By default, the <xref:System.Console.Error%2A> property is set to the standard error output stream.</span></span>  
  
 <span data-ttu-id="2787a-698">A <xref:System.IO.StreamWriter> 캡슐화 하는 <xref:System.IO.FileStream> 파일에 오류 메시지를 보내는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-698">A <xref:System.IO.StreamWriter> that encapsulates a <xref:System.IO.FileStream> can be used to send error messages to a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-699">다음 예제에서는 표준 오류 스트림에 파일로 리디렉션하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-699">The following example shows how to redirect the standard error stream to a file.</span></span>  
  
 [!code-cpp[System.Console.SetError#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.SetError/cpp/seterror1.cpp#1)]
 [!code-csharp[System.Console.SetError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.SetError/cs/SetError1.cs#1)]
 [!code-vb[System.Console.SetError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.SetError/vb/SetError1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-700"><paramref name="newError" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-700"><paramref name="newError" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-701">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="2787a-701">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2787a-702">비관리 코드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-702">for calling unmanaged code.</span></span> <span data-ttu-id="2787a-703">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2787a-703">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="P:System.Console.Error" />
      </Docs>
    </Member>
    <Member MemberName="SetIn">
      <MemberSignature Language="C#" Value="public static void SetIn (System.IO.TextReader newIn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIn(class System.IO.TextReader newIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetIn(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIn (newIn As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIn(System::IO::TextReader ^ newIn);" />
      <MemberSignature Language="F#" Value="static member SetIn : System.IO.TextReader -&gt; unit" Usage="System.Console.SetIn newIn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newIn" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="newIn"><span data-ttu-id="2787a-704">새 표준 입력을 나타내는 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-704">A stream that is the new standard input.</span></span></param>
        <summary><span data-ttu-id="2787a-705"><see cref="P:System.Console.In" /> 속성을 지정한 <see cref="T:System.IO.TextReader" /> 개체로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-705">Sets the <see cref="P:System.Console.In" /> property to the specified <see cref="T:System.IO.TextReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-706">기본적으로 <xref:System.Console.In%2A> 표준 입력 스트림으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-706">By default, the <xref:System.Console.In%2A> property is set to the standard input stream.</span></span>  
  
 <span data-ttu-id="2787a-707">A <xref:System.IO.StreamReader> 캡슐화 하는 <xref:System.IO.FileStream> 파일에서 입력을 받는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-707">A <xref:System.IO.StreamReader> that encapsulates a <xref:System.IO.FileStream> can be used to receive input from a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-708">다음 예제에서는 <xref:System.Console.SetIn%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-708">The following example illustrates the use of the <xref:System.Console.SetIn%2A> method.</span></span> <span data-ttu-id="2787a-709">탭 문자가 있는 문자열에서 4개의 연속된 공백 문자를 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-709">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="2787a-710">도구를 실행 하려면 두 명령줄 인수를 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-710">To run it, you must supply two command line arguments.</span></span> <span data-ttu-id="2787a-711">첫 번째는 표준 입력 스트림을 리디렉션하려는 기존 텍스트 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-711">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="2787a-712">두 번째는 표준 출력 스트림을 리디렉션하려는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-712">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="2787a-713">이 파일이 있을 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-713">This file need not exist.</span></span> <span data-ttu-id="2787a-714">그러한 경우 해당 내용은 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-714">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-715"><paramref name="newIn" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-715"><paramref name="newIn" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-716">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="2787a-716">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2787a-717">비관리 코드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-717">for calling unmanaged code.</span></span> <span data-ttu-id="2787a-718">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2787a-718">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Console.In" />
      </Docs>
    </Member>
    <Member MemberName="SetOut">
      <MemberSignature Language="C#" Value="public static void SetOut (System.IO.TextWriter newOut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetOut(class System.IO.TextWriter newOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetOut(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetOut (newOut As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetOut(System::IO::TextWriter ^ newOut);" />
      <MemberSignature Language="F#" Value="static member SetOut : System.IO.TextWriter -&gt; unit" Usage="System.Console.SetOut newOut" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newOut" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="newOut"><span data-ttu-id="2787a-719">새 표준 출력을 나타내는 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-719">A stream that is the new standard output.</span></span></param>
        <summary><span data-ttu-id="2787a-720"><see cref="P:System.Console.Out" /> 속성을 지정한 <see cref="T:System.IO.TextWriter" /> 개체로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-720">Sets the <see cref="P:System.Console.Out" /> property to the specified <see cref="T:System.IO.TextWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-721">기본적으로 <xref:System.Console.Out%2A> 속성을 표준 출력 스트림에로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-721">By default, the <xref:System.Console.Out%2A> property is set to the standard output stream.</span></span>  
  
 <span data-ttu-id="2787a-722">A <xref:System.IO.StreamWriter> 캡슐화 하는 <xref:System.IO.FileStream> 파일로 출력을 보내는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-722">A <xref:System.IO.StreamWriter> that encapsulates a <xref:System.IO.FileStream> can be used to send output to a file.</span></span> <span data-ttu-id="2787a-723">예:</span><span class="sxs-lookup"><span data-stu-id="2787a-723">For example:</span></span>  
  
 [!code-cpp[System.Console.SetOut#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.setout/cpp/source.cpp#1)]
 [!code-csharp[System.Console.SetOut#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.setout/cs/source.cs#1)]
 [!code-vb[System.Console.SetOut#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.setout/vb/source.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="2787a-724">다음 예제에서는 <xref:System.Console.SetOut%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-724">The following example illustrates the use of the <xref:System.Console.SetOut%2A> method.</span></span> <span data-ttu-id="2787a-725">탭 문자가 있는 문자열에서 4개의 연속된 공백 문자를 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-725">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="2787a-726">도구를 실행 하려면 두 명령줄 인수를 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-726">To run it, you must supply two command line arguments.</span></span> <span data-ttu-id="2787a-727">첫 번째는 표준 입력 스트림을 리디렉션하려는 기존 텍스트 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-727">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="2787a-728">두 번째는 표준 출력 스트림을 리디렉션하려는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-728">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="2787a-729">이 파일이 있을 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-729">This file need not exist.</span></span> <span data-ttu-id="2787a-730">그러한 경우 해당 내용은 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-730">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-731"><paramref name="newOut" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-731"><paramref name="newOut" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-732">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="2787a-732">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2787a-733">비관리 코드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-733">for calling unmanaged code.</span></span> <span data-ttu-id="2787a-734">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2787a-734">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Console.Out" />
      </Docs>
    </Member>
    <Member MemberName="SetWindowPosition">
      <MemberSignature Language="C#" Value="public static void SetWindowPosition (int left, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindowPosition(int32 left, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetWindowPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWindowPosition (left As Integer, top As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWindowPosition(int left, int top);" />
      <MemberSignature Language="F#" Value="static member SetWindowPosition : int * int -&gt; unit" Usage="System.Console.SetWindowPosition (left, top)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="top" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="2787a-735">콘솔 창에서 왼쪽 위 모퉁이의 열 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-735">The column position of the upper left  corner of the console window.</span></span></param>
        <param name="top"><span data-ttu-id="2787a-736">콘솔 창에서 왼쪽 위 모퉁이의 행 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-736">The row position of the upper left corner of the console window.</span></span></param>
        <summary><span data-ttu-id="2787a-737">화면 버퍼에 상대적인 콘솔 창의 위치를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-737">Sets the position of the console window relative to the screen buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-738">운영 체제 창 콘솔 창에 표시 되 고 콘솔 창에 화면 버퍼 일부가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-738">The operating system window displays the console window, and the console window displays a portion of the screen buffer.</span></span> <span data-ttu-id="2787a-739"><xref:System.Console.SetWindowPosition%2A> 메서드 화면 버퍼에 상대적인 콘솔 창의 위치를 영향을 주지만 바탕 화면을 기준으로 운영 체제 창의 위치는 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-739">The <xref:System.Console.SetWindowPosition%2A> method affects the position of the console window relative to the screen buffer, but does not affect the position of the operating system window relative to the desktop.</span></span>  
  
 <span data-ttu-id="2787a-740">콘솔 및 운영 체제 windows 일반적으로 영향을 주지 않습니다 서로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-740">The console and operating system windows generally do not affect each other.</span></span> <span data-ttu-id="2787a-741">그러나 콘솔 창의 현재 경계에서 화면 버퍼를 표시할 수 없습니다, 하는 경우 운영 체제 스크롤 막대 운영 체제 창에 자동으로 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-741">However, if the screen buffer cannot be displayed in the current boundaries of the console window, the operating system automatically appends scroll bars to the operating system window.</span></span> <span data-ttu-id="2787a-742">이런 경우 운영 체제 창 스크롤 막대의 콘솔 창 위치에 영향을 이동 하 고 콘솔 창으로 이동 합니다 <xref:System.Console.SetWindowPosition%2A> 메서드 운영 체제 창 스크롤 막대의 위치에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-742">In that case, moving the operating system window scroll bars affects the position of the console window, and moving the console window with the <xref:System.Console.SetWindowPosition%2A> method affects the position of the operating system window scroll bars.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-743">다음 예제는 <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, 및 <xref:System.Console.CursorVisible%2A> 속성 및 <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, 및 <xref:System.Console.ReadKey%2A> 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-743">The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods.</span></span> <span data-ttu-id="2787a-744">이 예제에서는 화면 버퍼 너비를 기준으로 화면 버퍼에서을 표 패턴을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-744">The example draws a grid pattern in the screen buffer based on the screen buffer width.</span></span> <span data-ttu-id="2787a-745">다음 예제에서는 콘솔 창에서 아래쪽 화살표, 왼쪽 화살표 또는 오른쪽 화살표 콘솔 키를 누르면 위쪽 화살표는 응답을 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-745">Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</span></span> <span data-ttu-id="2787a-746">Grid 패턴을 사용 하면 화면 버퍼에 상대적인 콘솔 창의 이동 상태를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-746">The grid pattern helps you see the movement of the console window relative to the screen buffer.</span></span>  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-747"><paramref name="left" /> 또는 <paramref name="top" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-747"><paramref name="left" /> or <paramref name="top" /> is less than zero.</span></span>  
  
<span data-ttu-id="2787a-748">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-748">-or-</span></span> 
 <span data-ttu-id="2787a-749"><paramref name="left" /> + <see cref="P:System.Console.WindowWidth" />가 <see cref="P:System.Console.BufferWidth" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-749"><paramref name="left" /> + <see cref="P:System.Console.WindowWidth" /> is greater than <see cref="P:System.Console.BufferWidth" />.</span></span>  
  
<span data-ttu-id="2787a-750">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-750">-or-</span></span> 
 <span data-ttu-id="2787a-751"><paramref name="top" /> + <see cref="P:System.Console.WindowHeight" />가 <see cref="P:System.Console.BufferHeight" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-751"><paramref name="top" /> + <see cref="P:System.Console.WindowHeight" /> is greater than <see cref="P:System.Console.BufferHeight" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-752">사용자에게 이 작업을 수행할 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-752">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-753">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-753">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-754">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-754">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-755">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-755">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetWindowSize">
      <MemberSignature Language="C#" Value="public static void SetWindowSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindowSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetWindowSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWindowSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWindowSize(int width, int height);" />
      <MemberSignature Language="F#" Value="static member SetWindowSize : int * int -&gt; unit" Usage="System.Console.SetWindowSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="height" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="2787a-756">콘솔 창의 너비(열)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-756">The width of the console window measured in columns.</span></span></param>
        <param name="height"><span data-ttu-id="2787a-757">콘솔 창의 높이(행)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-757">The height of the console window measured in rows.</span></span></param>
        <summary><span data-ttu-id="2787a-758">콘솔 창의 높이와 너비를 지정한 값으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-758">Sets the height and width of the console window to the specified values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2787a-759">이 예제에서는 합니다 <xref:System.Console.SetWindowSize%2A> 메서드 및 <xref:System.Console.WindowWidth%2A> 및 <xref:System.Console.WindowHeight%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-759">This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties.</span></span> <span data-ttu-id="2787a-760">콘솔 창 크기를 변경 하는 모든 결과 보려면이 예제를 실행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-760">You must run the example to see the full effect of changing the console window size.</span></span>  
  
 <span data-ttu-id="2787a-761">이 예제에서는 85 열과 43 행으로 설정 하는 콘솔 창의 크기를 보고 키를 누를 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-761">The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key to be pressed.</span></span> <span data-ttu-id="2787a-762">모든 키를 누르면 콘솔 창의 크기는 50% 감소, 새로 차원을 보고 되 고이 예제에서는 다른 키를 누를 때까지 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-762">When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</span></span> <span data-ttu-id="2787a-763">마지막으로, 모든 키를 누르면 콘솔 창 원래 크기로 복원 되 고 예제를 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-763">Finally, when any key is pressed, the console window is restored to its original dimensions and the example terminates.</span></span>  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-764"><paramref name="width" /> 또는 <paramref name="height" />가 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-764"><paramref name="width" /> or <paramref name="height" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="2787a-765">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-765">-or-</span></span> 
 <span data-ttu-id="2787a-766"><paramref name="width" /> + <see cref="P:System.Console.WindowLeft" /> 또는 <paramref name="height" /> + <see cref="P:System.Console.WindowTop" />이 <see cref="F:System.Int16.MaxValue" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-766"><paramref name="width" /> plus <see cref="P:System.Console.WindowLeft" /> or <paramref name="height" /> plus <see cref="P:System.Console.WindowTop" /> is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
<span data-ttu-id="2787a-767">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-767">-or-</span></span> 
 <span data-ttu-id="2787a-768"><paramref name="width" /> 또는 <paramref name="height" />가 최대 창 너비 또는 현재 화면 해상도 및 콘솔 글꼴의 높이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-768"><paramref name="width" /> or <paramref name="height" /> is greater than the largest possible window width or height for the current screen resolution and console font.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2787a-769">사용자에게 이 작업을 수행할 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-769">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-770">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-770">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-771">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-771">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-772">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-772">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public static string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string Title" />
      <MemberSignature Language="DocId" Value="P:System.Console.Title" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Console.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-773">콘솔 제목 표시줄에 표시할 제목을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-773">Gets or sets the title to display in the console title bar.</span></span></summary>
        <value><span data-ttu-id="2787a-774">콘솔의 제목 표시줄에 표시될 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-774">The string to be displayed in the title bar of the console.</span></span> <span data-ttu-id="2787a-775">최대 제목 문자열 길이는 24500자입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-775">The maximum length of the title string is 24500 characters.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2787a-776">이 예제에서는 <xref:System.Console.Title%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-776">This example demonstrates the <xref:System.Console.Title%2A> property.</span></span> <span data-ttu-id="2787a-777">이 예제에서는 현재 운영 체제 창의 제목을 표시 하 고 키 입력을 기다립니다 다음 새 제목을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-777">The example displays the current title of the operating system window, waits for a key press, then displays a new title.</span></span>  
  
 [!code-cpp[console.title#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.title/CPP/mytitle.cpp#1)]
 [!code-csharp[console.title#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.title/CS/mytitle.cs#1)]
 [!code-vb[console.title#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.title/VB/mytitle.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2787a-778">가져오기 작업에서 검색된 제목이 24500자 보다 깁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-778">In a get operation, the retrieved title is longer than 24500 characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-779">설정 작업에서 검색된 제목이 24500자 보다 깁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-779">In a set operation, the specified title is longer than 24500 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-780">설정 작업에서 지정된 제목이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-780">In a set operation, the specified title is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-781">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-781">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-782">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-782">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-783">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-783">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="TreatControlCAsInput">
      <MemberSignature Language="C#" Value="public static bool TreatControlCAsInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool TreatControlCAsInput" />
      <MemberSignature Language="DocId" Value="P:System.Console.TreatControlCAsInput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property TreatControlCAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool TreatControlCAsInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TreatControlCAsInput : bool with get, set" Usage="System.Console.TreatControlCAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-784"><see cref="F:System.ConsoleModifiers.Control" /> 보조키와 <see cref="F:System.ConsoleKey.C" /> 콘솔 키의 조합(Ctrl+C)이 일반 입력으로 처리되는지 운영 체제에서 처리하는 충돌로 처리되는지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-784">Gets or sets a value indicating whether the combination of the <see cref="F:System.ConsoleModifiers.Control" /> modifier key and <see cref="F:System.ConsoleKey.C" /> console key (Ctrl+C) is treated as ordinary input or as an interruption that is handled by the operating system.</span></span></summary>
        <value><span data-ttu-id="2787a-785">Ctrl+C가 일반 입력으로 처리되면 <see langword="true" />이고, 처리되지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-785"><see langword="true" /> if Ctrl+C is treated as ordinary input; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-786">경우 값은 <xref:System.Console.TreatControlCAsInput%2A> 속성은 `false` 및 Ctrl + C를 누르면 누른된 키를 입력된 버퍼에 저장 되지 않습니다 및 운영 체제에서 현재 실행 중인 프로세스를 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-786">If the value of the <xref:System.Console.TreatControlCAsInput%2A> property is `false` and Ctrl+C is pressed, the pressed keys are not stored in the input buffer and the operating system terminates the currently executing process.</span></span> <span data-ttu-id="2787a-787">기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-787">This is the default value.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2787a-788">로 설정 하기 때문에이 속성을 주의 해 서 사용 `true` 크게 영향을 미칩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-788">Use this property judiciously because setting it to `true` has such a dramatic effect.</span></span> <span data-ttu-id="2787a-789">대부분의 사용자는 콘솔 응용 프로그램을 종료 하려면 Ctrl + C를 기대 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-789">Most users expect Ctrl+C to terminate a console application.</span></span> <span data-ttu-id="2787a-790">Ctrl + C의 효과 해제 하면 사용자는 덜 친숙 한 키 조합 하는 응용 프로그램을 종료 하려면 Ctrl + Break를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-790">If you disable the effect of Ctrl+C, the user must remember to use Ctrl+Break to terminate the application, which is a less familiar key combination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-791">다음 예제는 <xref:System.Console.TreatControlCAsInput%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-791">The following example demonstrates the <xref:System.Console.TreatControlCAsInput%2A> property.</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-792">콘솔 입력 버퍼의 입력 모드를 가져오거나 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-792">Unable to get or set the input mode of the console input buffer.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-793">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-793">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-794">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-794">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="F:System.ConsoleModifiers.Control" />
        <altmember cref="F:System.ConsoleKey.C" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="WindowHeight">
      <MemberSignature Language="C#" Value="public static int WindowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowHeight : int with get, set" Usage="System.Console.WindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-795">콘솔 창 영역의 높이를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-795">Gets or sets the height of the console window area.</span></span></summary>
        <value><span data-ttu-id="2787a-796">콘솔 창의 높이(행)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-796">The height of the console window measured in rows.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-797">값을 설정 하려고 합니다 <xref:System.Console.WindowHeight%2A> 출력을 리디렉션할 때 속성 중 하나를 throw 합니다.는 <xref:System.ArgumentOutOfRangeException> 또는 <xref:System.IO.IOException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-797">Attempting to set the value of the <xref:System.Console.WindowHeight%2A> property when output is redirected throws either an <xref:System.ArgumentOutOfRangeException> or an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="2787a-798">예외를 방지 하려면 경우에만이 속성의 값을 설정할 수 있습니다 합니다 <xref:System.Console.IsOutputRedirected%2A> 속성이 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-798">To prevent an exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-799">이 예제에서는 합니다 <xref:System.Console.SetWindowSize%2A> 메서드 및 <xref:System.Console.WindowWidth%2A> 및 <xref:System.Console.WindowHeight%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-799">This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties.</span></span> <span data-ttu-id="2787a-800">콘솔 창 크기를 변경 하는 모든 결과 보려면이 예제를 실행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-800">You must run the example to see the full effect of changing the console window size.</span></span>  
  
 <span data-ttu-id="2787a-801">이 예제에서는 85 열과 43 행으로 설정 하는 콘솔 창의 크기를 보고 키를 누를 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-801">The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press.</span></span> <span data-ttu-id="2787a-802">모든 키를 누르면 콘솔 창의 크기는 50% 감소, 새로 차원을 보고 되 고이 예제에서는 다른 키를 누를 때까지 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-802">When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</span></span> <span data-ttu-id="2787a-803">마지막으로, 모든 키를 누를 때 콘솔 창 원래 크기로 복원 되 고 예제를 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-803">Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.</span></span>  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-804"><see cref="P:System.Console.WindowWidth" /> 속성 값 또는 <see cref="P:System.Console.WindowHeight" /> 속성 값이 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-804">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is less than or equal to 0.</span></span>  
  
<span data-ttu-id="2787a-805">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-805">-or-</span></span> 
<span data-ttu-id="2787a-806"><see cref="P:System.Console.WindowHeight" /> 속성 값과 <see cref="P:System.Console.WindowTop" /> 속성 값의 합이 <see cref="F:System.Int16.MaxValue" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-806">The value of the <see cref="P:System.Console.WindowHeight" /> property plus the value of the <see cref="P:System.Console.WindowTop" /> property is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
<span data-ttu-id="2787a-807">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-807">-or-</span></span> 
<span data-ttu-id="2787a-808"><see cref="P:System.Console.WindowWidth" /> 속성 값 또는 <see cref="P:System.Console.WindowHeight" /> 속성 값이 현재 화면 해상도 및 콘솔 글꼴에 가장 클 수 있는 창의 너비 또는 높이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-808">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is greater than the largest possible window width or height for the current screen resolution and console font.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-809">정보를 읽거나 쓰는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-809">Error reading or writing information.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WindowLeft">
      <MemberSignature Language="C#" Value="public static int WindowLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowLeft" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowLeft { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowLeft : int with get, set" Usage="System.Console.WindowLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-810">화면 버퍼에 상대적인 콘솔 창 영역의 맨 왼쪽 위치를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-810">Gets or sets the leftmost position of the console window area relative to the screen buffer.</span></span></summary>
        <value><span data-ttu-id="2787a-811">맨 왼쪽 콘솔 창 위치(열)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-811">The leftmost console window position measured in columns.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-812">콘솔에 더 큰 버퍼 사각형 영역을 사각형 창을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-812">The console represents a rectangular window into a larger rectangular buffer area.</span></span> <span data-ttu-id="2787a-813">행의 수 및 열 번호로 가로로 창 및 버퍼를 모두 세로 방향으로 측정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-813">Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</span></span> <span data-ttu-id="2787a-814">버퍼 영역의 크기에 의해 정의 됩니다 합니다 <xref:System.Console.BufferHeight%2A> 고 <xref:System.Console.BufferWidth%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-814">The dimensions of the buffer area are defined by the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="2787a-815">콘솔 영역의 크기에 의해 정의 됩니다 합니다 <xref:System.Console.WindowHeight%2A> 고 <xref:System.Console.WindowWidth%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-815">The dimensions of the console area are defined by the <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties.</span></span> <span data-ttu-id="2787a-816"><xref:System.Console.WindowLeft%2A> 속성 결정 열 버퍼 영역의 첫 번째 열의 콘솔 창에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-816">The <xref:System.Console.WindowLeft%2A> property determines which column of the buffer area is displayed in the first column of the console window.</span></span> <span data-ttu-id="2787a-817">값을 <xref:System.Console.WindowLeft%2A> 속성의 범위는 0 ~ <xref:System.Console.BufferWidth%2A>  -  <xref:System.Console.WindowWidth%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-817">The value of the <xref:System.Console.WindowLeft%2A> property can range from 0 to <xref:System.Console.BufferWidth%2A> - <xref:System.Console.WindowWidth%2A>.</span></span> <span data-ttu-id="2787a-818">Throw 범위를 벗어나는 값으로 설정 하려고 한 <xref:System.ArgumentOutOfRangeException>합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-818">Attempting to set it to a value outside that range throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="2787a-819">콘솔 창이 처음 열리면, 기본값인은 <xref:System.Console.WindowLeft%2A> 속성은 0 이며이 콘솔에 표시 된 첫 번째 열 버퍼 영역에서 첫 번째 열 (위치 0에 있는 열)에 해당 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-819">When a console window first opens, the default value of the <xref:System.Console.WindowLeft%2A> property is zero, which indicates that the first column shown by the console corresponds to the first column (the column at position zero) in the buffer area.</span></span> <span data-ttu-id="2787a-820">콘솔 창과 버퍼 영역 모두의 기본 너비는 80 열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-820">The default width of both the console window and the buffer area is 80 columns.</span></span> <span data-ttu-id="2787a-821">즉는 <xref:System.Console.WindowLeft%2A> 콘솔 창 좁힐 하거나 버퍼 영역을 더 만들 경우에 속성을 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-821">This means that the <xref:System.Console.WindowLeft%2A> property can be modified only if the console window is made narrower or the buffer area is made wider.</span></span>  
  
 <span data-ttu-id="2787a-822">버퍼 영역의 너비 값 콘솔 창의 너비를 초과 하는 경우는 <xref:System.Console.WindowLeft%2A> 속성에는 사용자 버퍼 영역에 창의 관계를 정의 하는 가로 스크롤 막대를 사용 하는 경우 자동으로 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-822">Note that if the width of the buffer area exceeds the width of the console window, the value of the <xref:System.Console.WindowLeft%2A> property is automatically adjusted when the user uses the horizontal scroll bar to define the window's relationship to the buffer area.</span></span>  
  
 <span data-ttu-id="2787a-823">값을 설정 하려고 합니다 <xref:System.Console.WindowLeft%2A> 출력 되 면 속성 리디렉션 throw는 <xref:System.IO.IOException> 예외.</span><span class="sxs-lookup"><span data-stu-id="2787a-823">Attempting to set the value of the <xref:System.Console.WindowLeft%2A> property when output is redirected throws an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="2787a-824">예외를 방지 하려면 경우에만이 속성의 값을 설정할 수 있습니다 합니다 <xref:System.Console.IsOutputRedirected%2A> 속성이 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-824">To prevent the exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-825">다음 예제에서는 80 열 콘솔 창을 열고 120 열 버퍼 영역을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-825">The following example opens an 80-column console window and defines a buffer area that is 120 columns wide.</span></span> <span data-ttu-id="2787a-826">창 및 버퍼 크기에 따라 정보를 표시 하 고 사용자를 왼쪽 화살표 키 또는 오른쪽 화살표 키를 누를 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-826">It displays information on window and buffer size, and then waits for the user to press either the LEFT ARROW key or the RIGHT ARROW key.</span></span> <span data-ttu-id="2787a-827">전자의 경우에이 감소 값을 <xref:System.Console.WindowLeft%2A> 속성을 결과 법적 값 이면 1 씩 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-827">In the former case, it decrements the value of the <xref:System.Console.WindowLeft%2A> property by one if the result is a legal value.</span></span> <span data-ttu-id="2787a-828">후자의 경우에 값을 증가 하는 <xref:System.Console.WindowLeft%2A> 속성을 결과 법적 되는 경우 1입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-828">In the latter case, it increases the value of the <xref:System.Console.WindowLeft%2A> property by one if the result would be legal.</span></span> <span data-ttu-id="2787a-829">예제를 처리할 필요가 없습니다는 <xref:System.ArgumentOutOfRangeException>확인 하기 때문에에 할당할 값을 <xref:System.Console.WindowLeft%2A> 속성이 음수 이며의 합계를 발생 하지 않습니다는 <xref:System.Console.WindowLeft%2A> 및 <xref:System.Console.WindowWidth%2A> 초과 하는 속성을 <xref:System.Console.BufferWidth%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-829">Note that the example does not have to handle an <xref:System.ArgumentOutOfRangeException>, because it checks that the value to be assigned to the <xref:System.Console.WindowLeft%2A> property is not negative and does not cause the sum of the <xref:System.Console.WindowLeft%2A> and <xref:System.Console.WindowWidth%2A> properties to exceed the <xref:System.Console.BufferWidth%2A> property value.</span></span>  
  
 [!code-cpp[System.Console.WindowLeft#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.windowleft/cpp/windowleft1.cpp#1)]
 [!code-csharp[System.Console.WindowLeft#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.windowleft/cs/windowleft1.cs#1)]
 [!code-vb[System.Console.WindowLeft#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.windowleft/vb/windowleft1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-830">집합 작업에서 할당할 값이 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-830">In a set operation, the value to be assigned is less than zero.</span></span>  
  
<span data-ttu-id="2787a-831">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-831">-or-</span></span> 
<span data-ttu-id="2787a-832">할당 결과, <see cref="P:System.Console.WindowLeft" />과 <see cref="P:System.Console.WindowWidth" />의 합이 <see cref="P:System.Console.BufferWidth" />를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-832">As a result of the assignment, <see cref="P:System.Console.WindowLeft" /> plus <see cref="P:System.Console.WindowWidth" /> would exceed <see cref="P:System.Console.BufferWidth" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-833">정보를 읽거나 쓰는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-833">Error reading or writing information.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WindowTop">
      <MemberSignature Language="C#" Value="public static int WindowTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowTop" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowTop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowTop { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowTop : int with get, set" Usage="System.Console.WindowTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-834">화면 버퍼에 상대적인 콘솔 창 영역의 위쪽 위치를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-834">Gets or sets the top position of the console window area relative to the screen buffer.</span></span></summary>
        <value><span data-ttu-id="2787a-835">맨 위 콘솔 창 위치(행)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-835">The uppermost console window position measured in rows.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-836">콘솔에 더 큰 버퍼 사각형 영역을 사각형 창을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-836">The console represents a rectangular window into a larger rectangular buffer area.</span></span> <span data-ttu-id="2787a-837">행의 수 및 열 번호로 가로로 창 및 버퍼를 모두 세로 방향으로 측정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-837">Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</span></span> <span data-ttu-id="2787a-838">버퍼 영역의 크기에 의해 정의 됩니다 합니다 <xref:System.Console.BufferHeight%2A> 고 <xref:System.Console.BufferWidth%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-838">The dimensions of the buffer area are defined by the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="2787a-839">콘솔 영역의 크기에 의해 정의 됩니다 합니다 <xref:System.Console.WindowHeight%2A> 고 <xref:System.Console.WindowWidth%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-839">The dimensions of the console area are defined by the <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties.</span></span> <span data-ttu-id="2787a-840"><xref:System.Console.WindowTop%2A> 속성 결정 버퍼 영역의 행에서 첫 번째 열의 콘솔 창에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-840">The <xref:System.Console.WindowTop%2A> property determines which row of the buffer area is displayed in the first column of the console window.</span></span> <span data-ttu-id="2787a-841">값을 <xref:System.Console.WindowTop%2A> 속성의 범위는 0 ~ <xref:System.Console.BufferHeight%2A>  -  <xref:System.Console.WindowHeight%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-841">The value of the <xref:System.Console.WindowTop%2A> property can range from 0 to <xref:System.Console.BufferHeight%2A> - <xref:System.Console.WindowHeight%2A>.</span></span> <span data-ttu-id="2787a-842">Throw 범위를 벗어나는 값으로 설정 하려고 한 <xref:System.ArgumentOutOfRangeException>합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-842">Attempting to set it to a value outside that range throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="2787a-843">값을 설정 하려고 합니다 <xref:System.Console.WindowTop%2A> 출력 되 면 속성 리디렉션 throw는 <xref:System.IO.IOException> 예외.</span><span class="sxs-lookup"><span data-stu-id="2787a-843">Attempting to set the value of the <xref:System.Console.WindowTop%2A> property when output is redirected throws an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="2787a-844">예외를 방지 하려면 경우에만이 속성의 값을 설정할 수 있습니다 합니다 <xref:System.Console.IsOutputRedirected%2A> 속성이 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-844">To prevent the exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-845">다음 예제는 <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, 및 <xref:System.Console.CursorVisible%2A> 속성 및 <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, 및 <xref:System.Console.ReadKey%2A> 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-845">The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods.</span></span> <span data-ttu-id="2787a-846">이 예제에서는 화면 버퍼 너비를 기준으로 화면 버퍼에서을 표 패턴을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-846">The example draws a grid pattern in the screen buffer based on the screen buffer width.</span></span> <span data-ttu-id="2787a-847">다음 예제에서는 콘솔 창에서 아래쪽 화살표, 왼쪽 화살표 또는 오른쪽 화살표 콘솔 키를 누르면 위쪽 화살표는 응답을 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-847">Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</span></span> <span data-ttu-id="2787a-848">Grid 패턴을 사용 하면 화면 버퍼에 상대적인 콘솔 창의 이동 상태를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-848">The grid pattern helps you see the movement of the console window relative to the screen buffer.</span></span>  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-849">집합 작업에서 할당할 값이 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-849">In a set operation, the value to be assigned is less than zero.</span></span>  
  
<span data-ttu-id="2787a-850">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-850">-or-</span></span> 
<span data-ttu-id="2787a-851">할당 결과, <see cref="P:System.Console.WindowTop" />과 <see cref="P:System.Console.WindowHeight" />의 합이 <see cref="P:System.Console.BufferHeight" />를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-851">As a result of the assignment, <see cref="P:System.Console.WindowTop" /> plus <see cref="P:System.Console.WindowHeight" /> would exceed <see cref="P:System.Console.BufferHeight" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-852">정보를 읽거나 쓰는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-852">Error reading or writing information.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WindowWidth">
      <MemberSignature Language="C#" Value="public static int WindowWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowWidth : int with get, set" Usage="System.Console.WindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2787a-853">콘솔 창의 컨트롤의 너비를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-853">Gets or sets the width of the console window.</span></span></summary>
        <value><span data-ttu-id="2787a-854">콘솔 창의 너비(열)입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-854">The width of the console window measured in columns.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-855">값을 설정 하려고 합니다 <xref:System.Console.WindowWidth%2A> 출력을 리디렉션할 때 속성 중 하나를 throw 합니다.는 <xref:System.ArgumentOutOfRangeException> 또는 <xref:System.IO.IOException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-855">Attempting to set the value of the <xref:System.Console.WindowWidth%2A> property when output is redirected throws either an <xref:System.ArgumentOutOfRangeException> or an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="2787a-856">예외를 방지 하려면 경우에만이 속성의 값을 설정할 수 있습니다 합니다 <xref:System.Console.IsOutputRedirected%2A> 속성이 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-856">To prevent an exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-857">이 예제에서는 합니다 <xref:System.Console.SetWindowSize%2A> 메서드 및 <xref:System.Console.WindowWidth%2A> 및 <xref:System.Console.WindowHeight%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-857">This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties.</span></span> <span data-ttu-id="2787a-858">콘솔 창 크기를 변경 하는 모든 결과 보려면이 예제를 실행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-858">You must run the example to see the full effect of changing the console window size.</span></span>  
  
 <span data-ttu-id="2787a-859">이 예제에서는 85 열과 43 행으로 설정 하는 콘솔 창의 크기를 보고 키를 누를 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-859">The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press.</span></span> <span data-ttu-id="2787a-860">모든 키를 누르면 콘솔 창의 크기는 50% 감소, 새로 차원을 보고 되 고이 예제에서는 다른 키를 누를 때까지 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-860">When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</span></span> <span data-ttu-id="2787a-861">마지막으로, 모든 키를 누를 때 콘솔 창 원래 크기로 복원 되 고 예제를 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-861">Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.</span></span>  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-862"><see cref="P:System.Console.WindowWidth" /> 속성 값 또는 <see cref="P:System.Console.WindowHeight" /> 속성 값이 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-862">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is less than or equal to 0.</span></span>  
  
<span data-ttu-id="2787a-863">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-863">-or-</span></span> 
<span data-ttu-id="2787a-864"><see cref="P:System.Console.WindowHeight" /> 속성 값과 <see cref="P:System.Console.WindowTop" /> 속성 값의 합이 <see cref="F:System.Int16.MaxValue" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-864">The value of the <see cref="P:System.Console.WindowHeight" /> property plus the value of the <see cref="P:System.Console.WindowTop" /> property is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
<span data-ttu-id="2787a-865">또는</span><span class="sxs-lookup"><span data-stu-id="2787a-865">-or-</span></span> 
<span data-ttu-id="2787a-866"><see cref="P:System.Console.WindowWidth" /> 속성 값 또는 <see cref="P:System.Console.WindowHeight" /> 속성 값이 현재 화면 해상도 및 콘솔 글꼴에 가장 클 수 있는 창의 너비 또는 높이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-866">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is greater than the largest possible window width or height for the current screen resolution and console font.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-867">정보를 읽거나 쓰는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-867">Error reading or writing information.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2787a-868">지정한 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-868">Writes the text representation of the specified value or values to the standard output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(bool value);" />
      <MemberSignature Language="F#" Value="static member Write : bool -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-869">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-869">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-870">지정한 부울 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-870">Writes the text representation of the specified Boolean value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-871">텍스트 표현을 `value` 를 호출 하 여 생성 됩니다 <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>을 출력 하 <xref:System.Boolean.TrueString?displayProperty=nameWithType> 또는 <xref:System.Boolean.FalseString?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-871">The text representation of `value` is produced by calling <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>, which outputs either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-872">다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-872">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-873">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-873">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-874">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-874">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-875">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-875">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(char value);" />
      <MemberSignature Language="F#" Value="static member Write : char -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-876">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-876">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-877">지정한 유니코드 문자 값을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-877">Writes the specified Unicode character value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2787a-878">다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-878">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-879">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-879">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-880">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-880">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-881">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-881">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="static member Write : char[] -&gt; unit" Usage="System.Console.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="2787a-882">유니코드 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-882">A Unicode character array.</span></span></param>
        <summary><span data-ttu-id="2787a-883">지정한 유니코드 문자의 배열을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-883">Writes the specified array of Unicode characters to the standard output stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-884">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-884">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-885">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-885">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-886">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-886">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Write : decimal -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-887">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-887">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-888">지정한 <see cref="T:System.Decimal" /> 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-888">Writes the text representation of the specified <see cref="T:System.Decimal" /> value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-889">텍스트 표현을 `value` 를 호출 하 여 생성 됩니다 <xref:System.Decimal.ToString%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-889">The text representation of `value` is produced by calling <xref:System.Decimal.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-890">다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-890">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-891">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-891">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-892">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-892">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-893">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-893">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(double value);" />
      <MemberSignature Language="F#" Value="static member Write : double -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-894">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-894">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-895">지정한 배정밀도 부동 소수점 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-895">Writes the text representation of the specified double-precision floating-point value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-896">텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Double.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-896">The text representation of `value` is produced by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-897">다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-897">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-898">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-898">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-899">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-899">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-900">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-900">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int value);" />
      <MemberSignature Language="F#" Value="static member Write : int -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-901">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-901">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-902">지정한 부호 있는 32비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-902">Writes the text representation of the specified 32-bit signed integer value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-903">텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Int32.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-903">The text representation of `value` is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-904">다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-904">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-905">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-905">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-906">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-906">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-907">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-907">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(long value);" />
      <MemberSignature Language="F#" Value="static member Write : int64 -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-908">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-908">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-909">지정한 부호 있는 64비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-909">Writes the text representation of the specified 64-bit signed integer value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-910">텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Int64.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-910">The text representation of `value` is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-911">다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-911">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-912">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-912">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-913">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-913">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-914">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-914">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-915">쓸 값이거나 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-915">The value to write, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="2787a-916">지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-916">Writes the text representation of the specified object to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-917">하는 경우 `value` 는 `null`, 아무 것도 쓰지 및 예외가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-917">If `value` is `null`, nothing is written and no exception is thrown.</span></span> <span data-ttu-id="2787a-918">이 고, 그렇지는 `ToString` 메서드의 `value` 를 해당 문자열 표현 호출 되어 결과 문자열을 표준 출력 스트림에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-918">Otherwise, the `ToString` method of `value` is called to produce its string representation, and the resulting string is written to the standard output stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-919">다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-919">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-920">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-920">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-921">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-921">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-922">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-922">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(float value);" />
      <MemberSignature Language="F#" Value="static member Write : single -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-923">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-923">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-924">지정한 단정밀도 부동 소수점 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-924">Writes the text representation of the specified single-precision floating-point value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-925">텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Single.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-925">The text representation of `value` is produced by calling the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-926">다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-926">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-927">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-927">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-928">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-928">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-929">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-929">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-930">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-930">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-931">지정한 문자열 값을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-931">Writes the specified string value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-932">값이 `null`를 표준 출력 스트림에 쓰여지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-932">If value is `null`, nothing is written to the standard output stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-933">다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-933">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-934">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-934">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-935">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-935">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-936">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-936">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member Write : uint32 -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-937">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-937">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-938">지정한 부호 없는 32비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-938">Writes the text representation of the specified 32-bit unsigned integer value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-939">텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-939">The text representation of `value` is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-940">다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-940">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-941">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-941">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-942">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-942">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-943">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-943">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member Write : uint64 -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-944">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-944">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-945">지정한 부호 없는 64비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-945">Writes the text representation of the specified 64-bit unsigned integer value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-946">텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-946">The text representation of `value` is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-947">다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-947">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-948">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-948">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-949">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-949">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-950">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-950">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj -&gt; unit" Usage="System.Console.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="2787a-951">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-951">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="2787a-952"><paramref name="format" />을 사용하여 쓸 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-952">An object to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="2787a-953">지정한 형식 정보를 사용하여 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-953">Writes the text representation of the specified object to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-954">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-954">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="2787a-955">결과 문자열을 출력 스트림에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-955">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="2787a-956">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-956">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="2787a-957">포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-957">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="2787a-958">형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-958">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="2787a-959">.NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-959">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="2787a-960">와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-960">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="2787a-961">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-961">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-962">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-962">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-963">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-963">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-964">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-964">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-965">다음 예제에서는 `WriteLine` 메서드를 사용하여 숫자, 날짜 및 열거형에 대한 표준 형식 지정자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-965">The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)] 
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="2787a-966">다음 예제에서는 <xref:System.Console.Write%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-966">The following example illustrates the use of the <xref:System.Console.Write%2A> method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-967">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-967">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-968"><paramref name="format" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-968"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="2787a-969"><paramref name="format" />의 형식 사양이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-969">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-970">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-970">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-971">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-971">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="2787a-972">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="2787a-972">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="2787a-973">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="2787a-973">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj[] -&gt; unit" Usage="System.Console.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="2787a-974">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-974">A composite format string.</span></span></param>
        <param name="arg"><span data-ttu-id="2787a-975"><paramref name="format" />을 사용하여 쓸 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-975">An array of objects to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="2787a-976">지정한 형식 정보를 사용하여 지정한 개체 배열의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-976">Writes the text representation of the specified array of objects to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-977">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-977">This method uses the  [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="2787a-978">결과 문자열을 출력 스트림에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-978">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="2787a-979">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-979">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="2787a-980">포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-980">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="2787a-981">형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-981">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="2787a-982">.NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-982">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="2787a-983">와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-983">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="2787a-984">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-984">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-985">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-985">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-986">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-986">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-987">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-987">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="2787a-988">`arg` 매개 변수는 매개 변수 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-988">The `arg` parameter is a parameter array.</span></span> <span data-ttu-id="2787a-989">5 개 이상의 항목 목록 또는 배열로 메서드에 인수를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-989">Arguments  can be passed to the method either as an array or as list of five or more items.</span></span> <span data-ttu-id="2787a-990">예제에서는 메서드 호출의 두 형태를 모두 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-990">The examples illustrate both forms of method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-991">다음 예제에서는 정의 `Person` 다양 한 사용자에 대 한 정보를 제공 하는 속성을 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-991">The following example defines a `Person` class with a number of properties that provide information about a person.</span></span> <span data-ttu-id="2787a-992">해당 `GetDescription` 메서드 하나를 제외 하 고 속성 값이 모두 포함 하는 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-992">Its `GetDescription` method returns an array that contains all of the property values except one.</span></span> <span data-ttu-id="2787a-993">이 예제에서는 다음 사용 하 여 반환 하는 배열은 `GetDescription` Person 개체의 값을 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-993">The example then uses the array returned by the  `GetDescription` method  to display the values of the Person object.</span></span>  
  
 [!code-csharp[System.Console.Write#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.write/cs/WriteParams1.cs#1)]
 [!code-vb[System.Console.Write#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.write/vb/WriteParams1.vb#1)]  
  
 <span data-ttu-id="2787a-994">예제를 호출 하는 참고 합니다 <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29> 메서드 대신 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29> 메서드의 값을 표시 하려고 했기 때문에 `Person.Remarks` 같은 줄에는 속성.</span><span class="sxs-lookup"><span data-stu-id="2787a-994">Note that the example calls the <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29> method rather than the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29> method because it attempts to display the value of the `Person.Remarks` property on the same line.</span></span> <span data-ttu-id="2787a-995">이 위해 값을 검사 하는 <xref:System.Console.CursorLeft%2A> 고 <xref:System.Console.WindowWidth%2A> 맞게 묶어 표시에 대 한 충분 한 공간이 있는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-995">To do this, it examines the value of the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.WindowWidth%2A> properties to determine whether there is enough space for the remark to fit.</span></span>  <span data-ttu-id="2787a-996">없는 경우, 줄을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-996">If there is, it displays the line.</span></span> <span data-ttu-id="2787a-997">그러지 않으면 줄을 쓰는, 세 개의 공백 들여쓰기로 처리 하 고는 설명을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-997">If not, it writes a line, indents three spaces, and displays the remark.</span></span>  
  
 <span data-ttu-id="2787a-998">다음 예제는 5 개 항목 목록으로 제공 한다는 점을 제외 하면 첫 번째 동일 합니다 `arg` 대신 매개 변수 배열 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-998">The following example is identical to the first, except that it supplies a five-item list as the `arg` argument instead of a parameter array.</span></span>  
  
 [!code-csharp[System.Console.Write#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.write/cs/WriteParams2.cs#2)]
 [!code-vb[System.Console.Write#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.write/vb/WriteParams2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-999">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-999">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-1000"><paramref name="format" /> 또는 <paramref name="arg" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="2787a-1000"><paramref name="format" /> or <paramref name="arg" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="2787a-1001"><paramref name="format" />의 형식 사양이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1001">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1002">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1002">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1003">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1003">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <block subset="none" type="usage"><para><span data-ttu-id="2787a-1004">이 메서드는 c + + 코드에서 호출 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1004">This method is not called by C++ code.</span></span> <span data-ttu-id="2787a-1005">C + + 컴파일러에 대 한 호출을 확인 [System.Console.Write](xref:System.Console.Write*) 호출으로 문자열 및 4 개 이상의 개체 매개 변수 목록을 포함 하는 <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1005">The C++ compiler resolves calls to [System.Console.Write](xref:System.Console.Write*) that include a string and a list of four or more object parameters as a call to <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />.</span></span> <span data-ttu-id="2787a-1006">에 대 한 호출을 확인할 [System.Console.Write](xref:System.Console.Write*) 포함 하는 개체 배열 및 문자열에 대 한 호출으로 <see cref="M:System.Console.Write(System.String,System.Object)" />합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1006">It resolves calls to [System.Console.Write](xref:System.Console.Write*) that include a string and an object array as a call to <see cref="M:System.Console.Write(System.String,System.Object)" />.</span></span></para></block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="2787a-1007">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="2787a-1007">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="2787a-1008">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="2787a-1008">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="static member Write : char[] * int * int -&gt; unit" Usage="System.Console.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="2787a-1009">유니코드 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1009">An array of Unicode characters.</span></span></param>
        <param name="index"><span data-ttu-id="2787a-1010"><paramref name="buffer" />의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1010">The starting position in <paramref name="buffer" />.</span></span></param>
        <param name="count"><span data-ttu-id="2787a-1011">쓸 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1011">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="2787a-1012">지정한 유니코드 문자의 하위 배열을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1012">Writes the specified subarray of Unicode characters to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1013">이 메서드를 씁니다 `count` 문자 위치부터 `index` 의 `buffer` 표준 출력 스트림에 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1013">This method writes `count` characters starting at position `index` of `buffer` to the standard output stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-1014"><paramref name="buffer" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1014"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-1015"><paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1015"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2787a-1016"><paramref name="index" /> + <paramref name="count" />가 <paramref name="buffer" />에 없는 위치를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1016"><paramref name="index" /> plus <paramref name="count" /> specify a position that is not within <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1017">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1017">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1018">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1018">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1019">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1019">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj * obj -&gt; unit" Usage="System.Console.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="2787a-1020">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1020">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="2787a-1021"><paramref name="format" />을 사용하여 쓸 첫 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1021">The first object to write using <paramref name="format" />.</span></span></param>
        <param name="arg1"><span data-ttu-id="2787a-1022"><paramref name="format" />을 사용하여 쓸 두 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1022">The second object to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="2787a-1023">지정한 형식 정보를 사용하여 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1023">Writes the text representation of the specified objects to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1024">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1024">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="2787a-1025">결과 문자열을 출력 스트림에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1025">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="2787a-1026">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1026">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="2787a-1027">포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1027">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="2787a-1028">형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1028">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="2787a-1029">.NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1029">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="2787a-1030">와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1030">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="2787a-1031">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1031">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1032">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1032">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1033">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1033">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1034">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1034">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1035">다음 예제에서는 `WriteLine` 메서드를 사용하여 숫자, 날짜 및 열거형에 대한 표준 형식 지정자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1035">The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="2787a-1036">다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1036">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1037">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1037">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-1038"><paramref name="format" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1038"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="2787a-1039"><paramref name="format" />의 형식 사양이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1039">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1040">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1040">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1041">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1041">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="2787a-1042">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="2787a-1042">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="2787a-1043">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="2787a-1043">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj * obj * obj -&gt; unit" Usage="System.Console.Write (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="2787a-1044">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1044">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="2787a-1045"><paramref name="format" />을 사용하여 쓸 첫 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1045">The first object to write using <paramref name="format" />.</span></span></param>
        <param name="arg1"><span data-ttu-id="2787a-1046"><paramref name="format" />을 사용하여 쓸 두 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1046">The second object to write using <paramref name="format" />.</span></span></param>
        <param name="arg2"><span data-ttu-id="2787a-1047"><paramref name="format" />을 사용하여 쓸 세 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1047">The third object to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="2787a-1048">지정한 형식 정보를 사용하여 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1048">Writes the text representation of the specified objects to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1049">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1049">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="2787a-1050">결과 문자열을 출력 스트림에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1050">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="2787a-1051">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1051">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="2787a-1052">포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1052">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="2787a-1053">형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1053">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="2787a-1054">.NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1054">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="2787a-1055">와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1055">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="2787a-1056">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1056">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1057">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1057">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1058">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1058">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1059">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1059">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1060">다음 예제에서는 `WriteLine` 메서드를 사용하여 숫자, 날짜 및 열거형에 대한 표준 형식 지정자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1060">The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="2787a-1061">다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1061">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1062">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1062">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-1063"><paramref name="format" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1063"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="2787a-1064"><paramref name="format" />의 형식 사양이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1064">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1065">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1065">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1066">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1066">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="2787a-1067">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="2787a-1067">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="2787a-1068">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="2787a-1068">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object, arg3 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj * obj * obj * obj -&gt; unit" Usage="System.Console.Write (format, arg0, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg3" Type="System.Object" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="2787a-1069">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1069">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="2787a-1070"><paramref name="format" />을 사용하여 쓸 첫 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1070">The first object to write using <paramref name="format" />.</span></span></param>
        <param name="arg1"><span data-ttu-id="2787a-1071"><paramref name="format" />을 사용하여 쓸 두 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1071">The second object to write using <paramref name="format" />.</span></span></param>
        <param name="arg2"><span data-ttu-id="2787a-1072"><paramref name="format" />을 사용하여 쓸 세 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1072">The third object to write using <paramref name="format" />.</span></span></param>
        <param name="arg3"><span data-ttu-id="2787a-1073"><paramref name="format" />을 사용하여 쓸 네 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1073">The fourth object to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="2787a-1074">지정한 형식 정보를 사용하여 지정한 개체 및 가변 길이 매개 변수 목록의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1074">Writes the text representation of the specified objects and variable-length parameter list to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2787a-1075">이 API는 CLS 규격이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1075">This API is not CLS-compliant.</span></span> <span data-ttu-id="2787a-1076">CLS 규격 대체 항목은 <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1076">The CLS-compliant alternative is <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2787a-1077">C# 및 Visual Basic 컴파일러에 대 한 호출으로이 메서드에 대 한 호출을 자동으로 해결 <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1077">The C# and Visual Basic compilers automatically resolve a call to this method as a call to <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2787a-1078">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1078">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="2787a-1079">결과 문자열을 출력 스트림에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1079">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="2787a-1080">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1080">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="2787a-1081">포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1081">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="2787a-1082">형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1082">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="2787a-1083">.NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1083">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="2787a-1084">와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1084">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="2787a-1085">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1085">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1086">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1086">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1087">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1087">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1088">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1088">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1089">다음 예제를 사용 하 여 변수 매개 변수를 사용 합니다 <xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-1089">The following example illustrates the use of variable parameters with the <xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="2787a-1090">메서드는 복합 형식 문자열 및 다섯 개의 형식 항목을 사용 하 여 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1090">The method is called with a composite format string and five format items.</span></span>  
  
 [!code-cpp[System.Console.Write#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.write/cpp/con_write.cpp#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1091">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1091">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-1092"><paramref name="format" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1092"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="2787a-1093"><paramref name="format" />의 형식 사양이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1093">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1094">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1094">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1095">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1095">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <block subset="none" type="usage"><para><span data-ttu-id="2787a-1096">이 메서드가로 표시는 <see langword="vararg" /> 가변 개수의 매개 변수를 지원함을 의미 하는 키워드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1096">This method is marked with the <see langword="vararg" /> keyword, which means that it supports a variable number of parameters.</span></span> <span data-ttu-id="2787a-1097">Visual c + +에서 메서드를 호출할 수 있지만 C# 또는 Visual Basic 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1097">The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code.</span></span> <span data-ttu-id="2787a-1098">C# 및 Visual Basic 컴파일러에 대 한 호출을 해결할 <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /> 호출로 <see cref="M:System.Console.Write(System.String,System.Object[])" />합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1098">The C# and Visual Basic compilers resolve calls to <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /> as calls to <see cref="M:System.Console.Write(System.String,System.Object[])" />.</span></span></para></block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="2787a-1099">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="2787a-1099">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="2787a-1100">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="2787a-1100">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2787a-1101">뒤에 현재 줄 종결자가 오는, 지정한 데이터를 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1101">Writes the specified data, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1102">기본 줄 종결자는 캐리지 리턴 뒤에 줄 바꿈 값인 문자열 (C#에서 "\r\n" 또는 `vbCrLf` Visual basic에서).</span><span class="sxs-lookup"><span data-stu-id="2787a-1102">The default line terminator is a string whose value is a carriage return followed by a line feed ("\r\n" in C#, or `vbCrLf` in Visual Basic).</span></span> <span data-ttu-id="2787a-1103">줄 종결자를 설정 하 여 변경할 수 있습니다는 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 의 속성을 <xref:System.Console.Out%2A> 속성을 다른 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1103">You can change the line terminator by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property of the <xref:System.Console.Out%2A> property to another string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine();" />
      <MemberSignature Language="F#" Value="static member WriteLine : unit -&gt; unit" Usage="System.Console.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2787a-1104">현재 줄 종결자를 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1104">Writes the current line terminator to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1105">기본 줄 종결자는 캐리지 리턴 뒤에 줄 바꿈 값인 문자열 (C#에서 "\r\n" 또는 `vbCrLf` Visual basic에서).</span><span class="sxs-lookup"><span data-stu-id="2787a-1105">The default line terminator is a string whose value is a carriage return followed by a line feed ("\r\n" in C#, or `vbCrLf` in Visual Basic).</span></span> <span data-ttu-id="2787a-1106">줄 종결자를 설정 하 여 변경할 수 있습니다는 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 의 속성을 <xref:System.Console.Out%2A> 속성을 다른 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1106">You can change the line terminator by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property of the <xref:System.Console.Out%2A> property to another string.</span></span> <span data-ttu-id="2787a-1107">예제에서는 그림을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1107">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1108">이 예제에서는 해당 기본값은 "\r\n"에서 줄 종결자를 변경 하거나 `vbCrLf` "\r\n\r\n"를 또는 `vbCrLf`  +  `vbCrLf`합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1108">The example changes the line terminator from its default value of "\r\n" or `vbCrLf` to "\r\n\r\n" or `vbCrLf` + `vbCrLf`.</span></span> <span data-ttu-id="2787a-1109">그런 다음 호출 하는 <xref:System.Console.WriteLine> 및 <xref:System.Console.WriteLine%28System.String%29> 콘솔에 출력을 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1109">It then calls the <xref:System.Console.WriteLine> and <xref:System.Console.WriteLine%28System.String%29> methods to display output to the console.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/newline1.cpp#2)]
 [!code-csharp[System.Console.WriteLine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/newline1.cs#2)]
 [!code-vb[System.Console.WriteLine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/newline1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1110">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1110">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1111">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1111">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1112">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1112">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
        <altmember cref="P:System.Console.Out" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : bool -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-1113">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1113">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-1114">뒤에 현재 줄 종결자가 오는, 지정한 부울 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1114">Writes the text representation of the specified Boolean value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1115">텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-1115">The text representation of `value` is produced by calling the <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2787a-1116">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1116">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1117">다음 예제에서는 10 개 난수를 생성 하 고 사용 하는 <xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType> 도 지 여부를 나타내는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1117">The following example generates ten random integers and uses the <xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType> method to indicate whether they are even.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_boolean1.cpp#4)]
 [!code-csharp[System.Console.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/writeline_boolean1.cs#4)]
 [!code-vb[System.Console.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/writeline_boolean1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1118">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1118">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1119">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1119">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1120">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1120">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : char -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-1121">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1121">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-1122">뒤에 현재 줄 종결자가 오는, 지정한 유니코드 문자 값을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1122">Writes the specified Unicode character, followed by the current line terminator, value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1123">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1123">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1124">다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1124">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="2787a-1125">예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1125">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1126">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1126">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1127">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1127">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1128">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1128">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="static member WriteLine : char[] -&gt; unit" Usage="System.Console.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="2787a-1129">유니코드 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1129">A Unicode character array.</span></span></param>
        <summary><span data-ttu-id="2787a-1130">뒤에 현재 줄 종결자가 오는, 지정한 유니코드 문자의 배열을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1130">Writes the specified array of Unicode characters, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1131">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1131">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1132">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1132">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1133">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1133">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1134">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1134">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : decimal -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-1135">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1135">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-1136">뒤에 현재 줄 종결자가 오는, 지정한 <see cref="T:System.Decimal" /> 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1136">Writes the text representation of the specified <see cref="T:System.Decimal" /> value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1137">텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Decimal.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-1137">The text representation of `value` is produced by calling the <xref:System.Decimal.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2787a-1138">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1138">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1139">다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1139">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="2787a-1140">예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1140">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1141">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1141">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1142">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1142">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1143">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1143">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : double -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-1144">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1144">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-1145">뒤에 현재 줄 종결자가 오는, 지정한 배정밀도 부동 소수점 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1145">Writes the text representation of the specified double-precision floating-point value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1146">텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Double.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-1146">The text representation of `value` is produced by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2787a-1147">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1147">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1148">다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1148">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="2787a-1149">예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1149">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1150">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1150">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1151">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1151">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1152">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1152">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : int -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-1153">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1153">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-1154">뒤에 현재 줄 종결자가 오는, 부호 있는 32비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1154">Writes the text representation of the specified 32-bit signed integer value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1155">텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Int32.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-1155">The text representation of `value` is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2787a-1156">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1156">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1157">다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1157">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="2787a-1158">예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1158">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1159">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1159">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1160">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1160">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1161">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1161">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : int64 -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-1162">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1162">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-1163">뒤에 현재 줄 종결자가 오는, 부호 있는 64비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1163">Writes the text representation of the specified 64-bit signed integer value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1164">텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Int64.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-1164">The text representation of `value` is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2787a-1165">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1165">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1166">다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1166">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="2787a-1167">예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1167">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1168">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1168">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1169">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1169">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1170">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1170">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-1171">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1171">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-1172">뒤에 현재 줄 종결자가 오는, 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1172">Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1173">`value`가 `null`이면 줄 종결자만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1173">If `value` is `null`, only the line terminator is written.</span></span> <span data-ttu-id="2787a-1174">이 고, 그렇지는 `ToString` 메서드의 `value` 를 해당 문자열 표현 호출 되어 결과 문자열을 표준 출력 스트림에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1174">Otherwise, the `ToString` method of `value` is called to produce its string representation, and the resulting string is written to the standard output stream.</span></span>  
  
 <span data-ttu-id="2787a-1175">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1175">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1176">다음 예제에서는 <xref:System.Console.WriteLine%28System.Object%29> 콘솔로 개체 배열의 각 값을 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1176">The following example uses the <xref:System.Console.WriteLine%28System.Object%29> method to display each value in an object array to the console.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_obj1.cpp#3)]
 [!code-csharp[System.Console.WriteLine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/writeline_obj1.cs#3)]
 [!code-vb[System.Console.WriteLine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/writeline_obj1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1177">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1177">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1178">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1178">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1179">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1179">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : single -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-1180">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1180">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-1181">뒤에 현재 줄 종결자가 오는, 지정한 단정밀도 부동 소수점 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1181">Writes the text representation of the specified single-precision floating-point value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1182">텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Single.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-1182">The text representation of `value` is produced by calling the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2787a-1183">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1183">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1184">다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1184">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="2787a-1185">예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1185">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1186">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1186">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1187">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1187">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1188">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1188">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-1189">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1189">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-1190">뒤에 현재 줄 종결자가 오는, 지정한 문자열 값을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1190">Writes the specified string value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1191">값이 `null`, 표준 출력 스트림에 줄 종결자만 쓰여집니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1191">If value is `null`, only the line terminator is written to the standard output stream.</span></span>  
  
 <span data-ttu-id="2787a-1192">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-1192">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1193">이 예제에서는 해당 기본값은 "\r\n"에서 줄 종결자를 변경 하거나 `vbCrLf` "\r\n\r\n"를 또는 `vbCrLf`  +  `vbCrLf`합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1193">The example changes the line terminator from its default value of "\r\n" or `vbCrLf` to "\r\n\r\n" or `vbCrLf` + `vbCrLf`.</span></span> <span data-ttu-id="2787a-1194">그런 다음 호출 하는 <xref:System.Console.WriteLine> 및 <xref:System.Console.WriteLine%28System.String%29> 콘솔에 출력을 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1194">It then calls the <xref:System.Console.WriteLine> and <xref:System.Console.WriteLine%28System.String%29> methods to display output to the console.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/newline1.cpp#2)]
 [!code-csharp[System.Console.WriteLine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/newline1.cs#2)]
 [!code-vb[System.Console.WriteLine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/newline1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1195">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1195">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1196">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1196">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1197">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1197">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : uint32 -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-1198">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1198">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-1199">뒤에 현재 줄 종결자가 오는, 부호 없는 32비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1199">Writes the text representation of the specified 32-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1200">텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-1200">The text representation of `value` is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2787a-1201">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1201">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1202">다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1202">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="2787a-1203">예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1203">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1204">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1204">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1205">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1205">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1206">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1206">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : uint64 -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2787a-1207">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1207">The value to write.</span></span></param>
        <summary><span data-ttu-id="2787a-1208">뒤에 현재 줄 종결자가 오는, 부호 없는 64비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1208">Writes the text representation of the specified 64-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1209">텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-1209">The text representation of `value` is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2787a-1210">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1210">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1211">다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1211">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="2787a-1212">예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1212">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1213">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1213">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1214">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1214">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1215">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1215">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="2787a-1216">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1216">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="2787a-1217"><paramref name="format" />을 사용하여 쓸 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1217">An object to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="2787a-1218">지정한 형식 정보를 사용하여 뒤에 현재 줄 종결자가 오는, 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1218">Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1219">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1219">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="2787a-1220">결과 문자열을 출력 스트림에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1220">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="2787a-1221">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1221">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="2787a-1222">포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1222">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="2787a-1223">형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1223">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="2787a-1224">.NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1224">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="2787a-1225">와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1225">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="2787a-1226">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1226">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1227">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1227">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1228">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1228">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1229">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1229">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="2787a-1230">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1230">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1231">다음 예제에서는 합니다 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> 임의로 생성 된 5 개를 표시 하는 메서드 <xref:System.Boolean> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1231">The following example calls the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> method to display five randomly generated <xref:System.Boolean> values.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/WriteLine6.cs#6)]
 [!code-vb[System.Console.WriteLine#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/WriteLine6.vb#6)]  
  
 <span data-ttu-id="2787a-1232">다음 예제에서는 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> 현재 날짜를 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1232">The following example calls the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> method to display the current date.</span></span>   <span data-ttu-id="2787a-1233">형식 항목에 합니다 `format` 인수 사용 "D" [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 현재 문화권의 자세한 날짜 형식으로 날짜를 표시 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1233">Note that the format item in the `format` argument uses the "D" [standard date and time format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) to display the date in the long date format of the current culture.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/WriteLine7.cs#7)]
 [!code-vb[System.Console.WriteLine#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/WriteLine7.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1234">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1234">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-1235"><paramref name="format" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1235"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="2787a-1236"><paramref name="format" />의 형식 사양이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1236">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1237">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1237">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1238">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1238">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="2787a-1239">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="2787a-1239">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="2787a-1240">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="2787a-1240">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj[] -&gt; unit" Usage="System.Console.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="2787a-1241">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1241">A composite format string.</span></span></param>
        <param name="arg"><span data-ttu-id="2787a-1242"><paramref name="format" />을 사용하여 쓸 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1242">An array of objects to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="2787a-1243">지정한 형식 정보를 사용하여 뒤에 현재 줄 종결자가 오는, 지정한 개체 배열의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1243">Writes the text representation of the specified array of objects, followed by the current line terminator, to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1244">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1244">This method uses the  [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="2787a-1245">결과 문자열을 출력 스트림에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1245">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="2787a-1246">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1246">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="2787a-1247">포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1247">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="2787a-1248">형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1248">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="2787a-1249">.NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1249">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="2787a-1250">와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1250">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="2787a-1251">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1251">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1252">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1252">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1253">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1253">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1254">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1254">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="2787a-1255">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1255">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1256">다음 예제에서는 숫자, 날짜 및 열거형의 표준 형식 지정자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1256">The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="2787a-1257">다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1257">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="2787a-1258">예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1258">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1259">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1259">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-1260"><paramref name="format" /> 또는 <paramref name="arg" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="2787a-1260"><paramref name="format" /> or <paramref name="arg" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="2787a-1261"><paramref name="format" />의 형식 사양이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1261">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1262">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1262">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1263">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1263">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <block subset="none" type="usage"><para><span data-ttu-id="2787a-1264">이 메서드는 c + + 코드에서 호출 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1264">This method is not called by C++ code.</span></span> <span data-ttu-id="2787a-1265">C + + 컴파일러에 대 한 호출을 확인 [System.Console.WriteLine](xref:System.Console.WriteLine*) 호출으로 문자열 및 4 개 이상의 개체 매개 변수 목록을 포함 하는 <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1265">The C++ compiler resolves calls to [System.Console.WriteLine](xref:System.Console.WriteLine*) that include a string and a list of four or more object parameters as a call to <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />.</span></span> <span data-ttu-id="2787a-1266">에 대 한 호출을 확인할 [System.Console.WriteLine](xref:System.Console.WriteLine*) 포함 하는 개체 배열 및 문자열에 대 한 호출으로 <see cref="M:System.Console.WriteLine(System.String,System.Object)" />합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1266">It resolves calls to [System.Console.WriteLine](xref:System.Console.WriteLine*) that include a string and an object array as a call to <see cref="M:System.Console.WriteLine(System.String,System.Object)" />.</span></span></para></block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="2787a-1267">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="2787a-1267">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="2787a-1268">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="2787a-1268">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="static member WriteLine : char[] * int * int -&gt; unit" Usage="System.Console.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="2787a-1269">유니코드 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1269">An array of Unicode characters.</span></span></param>
        <param name="index"><span data-ttu-id="2787a-1270"><paramref name="buffer" />의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1270">The starting position in <paramref name="buffer" />.</span></span></param>
        <param name="count"><span data-ttu-id="2787a-1271">쓸 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1271">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="2787a-1272">뒤에 현재 줄 종결자가 오는, 지정한 유니코드 문자의 하위 배열을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1272">Writes the specified subarray of Unicode characters, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1273">이 메서드를 씁니다 `count` 문자 위치부터 `index` 의 `buffer` 표준 출력 스트림에 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1273">This method writes `count` characters starting at position `index` of `buffer` to the standard output stream.</span></span>  
  
 <span data-ttu-id="2787a-1274">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1274">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-1275"><paramref name="buffer" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1275"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2787a-1276"><paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1276"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2787a-1277"><paramref name="index" /> + <paramref name="count" />가 <paramref name="buffer" />에 없는 위치를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1277"><paramref name="index" /> plus <paramref name="count" /> specify a position that is not within <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1278">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1278">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1279">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1279">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1280">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1280">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="2787a-1281">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1281">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="2787a-1282"><paramref name="format" />을 사용하여 쓸 첫 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1282">The first object to write using <paramref name="format" />.</span></span></param>
        <param name="arg1"><span data-ttu-id="2787a-1283"><paramref name="format" />을 사용하여 쓸 두 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1283">The second object to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="2787a-1284">지정한 형식 정보를 사용하여 뒤에 현재 줄 종결자가 오는, 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1284">Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1285">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1285">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="2787a-1286">결과 문자열을 출력 스트림에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1286">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="2787a-1287">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1287">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="2787a-1288">포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1288">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="2787a-1289">형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1289">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="2787a-1290">.NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1290">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="2787a-1291">와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1291">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="2787a-1292">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1292">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1293">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1293">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1294">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1294">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1295">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1295">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="2787a-1296">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1296">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1297">다음 예제에서는 숫자, 날짜 및 열거형의 표준 형식 지정자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1297">The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="2787a-1298">다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1298">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="2787a-1299">예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1299">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1300">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1300">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-1301"><paramref name="format" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1301"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="2787a-1302"><paramref name="format" />의 형식 사양이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1302">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1303">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1303">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1304">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1304">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="2787a-1305">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="2787a-1305">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="2787a-1306">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="2787a-1306">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj * obj * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="2787a-1307">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1307">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="2787a-1308"><paramref name="format" />을 사용하여 쓸 첫 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1308">The first object to write using <paramref name="format" />.</span></span></param>
        <param name="arg1"><span data-ttu-id="2787a-1309"><paramref name="format" />을 사용하여 쓸 두 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1309">The second object to write using <paramref name="format" />.</span></span></param>
        <param name="arg2"><span data-ttu-id="2787a-1310"><paramref name="format" />을 사용하여 쓸 세 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1310">The third object to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="2787a-1311">지정한 형식 정보를 사용하여 뒤에 현재 줄 종결자가 오는, 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1311">Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2787a-1312">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1312">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="2787a-1313">결과 문자열을 출력 스트림에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1313">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="2787a-1314">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1314">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="2787a-1315">포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1315">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="2787a-1316">형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1316">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="2787a-1317">.NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1317">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="2787a-1318">와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1318">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="2787a-1319">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1319">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1320">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1320">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1321">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1321">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1322">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1322">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="2787a-1323">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1323">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1324">다음 예제에서는 숫자, 날짜 및 열거형의 표준 형식 지정자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1324">The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="2787a-1325">다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1325">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="2787a-1326">예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1326">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1327">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1327">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-1328"><paramref name="format" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1328"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="2787a-1329"><paramref name="format" />의 형식 사양이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1329">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1330">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1330">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1331">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1331">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="2787a-1332">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="2787a-1332">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="2787a-1333">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="2787a-1333">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object, arg3 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj * obj * obj * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg3" Type="System.Object" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="2787a-1334">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1334">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="2787a-1335"><paramref name="format" />을 사용하여 쓸 첫 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1335">The first object to write using <paramref name="format" />.</span></span></param>
        <param name="arg1"><span data-ttu-id="2787a-1336"><paramref name="format" />을 사용하여 쓸 두 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1336">The second object to write using <paramref name="format" />.</span></span></param>
        <param name="arg2"><span data-ttu-id="2787a-1337"><paramref name="format" />을 사용하여 쓸 세 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1337">The third object to write using <paramref name="format" />.</span></span></param>
        <param name="arg3"><span data-ttu-id="2787a-1338"><paramref name="format" />을 사용하여 쓸 네 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1338">The fourth object to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="2787a-1339">지정한 형식 정보를 사용하여 뒤에 현재 줄 종결자가 오는, 지정한 개체 및 가변 길이 매개 변수 목록의 텍스트 표현을 표준 출력 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1339">Writes the text representation of the specified objects and variable-length parameter list, followed by the current line terminator, to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2787a-1340">이 API는 CLS 규격이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1340">This API is not CLS-compliant.</span></span> <span data-ttu-id="2787a-1341">CLS 규격 대체 항목은 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1341">The CLS-compliant alternative is <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2787a-1342">C# 및 Visual Basic 컴파일러에 대 한 호출으로이 메서드에 대 한 호출을 자동으로 해결 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1342">The C# and Visual Basic compilers automatically resolve a call to this method as a call to <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2787a-1343">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1343">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="2787a-1344">결과 문자열을 출력 스트림에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1344">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="2787a-1345">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1345">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="2787a-1346">포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1346">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="2787a-1347">형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1347">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="2787a-1348">.NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1348">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="2787a-1349">와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1349">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="2787a-1350">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1350">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1351">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1351">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1352">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1352">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="2787a-1353">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1353">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="2787a-1354">줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1354">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2787a-1355">다음 예제에서는 변수 인수를 사용 합니다 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2787a-1355">The following example illustrates the use of variable arguments with the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="2787a-1356">메서드는 복합 형식 문자열 및 다섯 개의 형식 항목을 사용 하 여 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1356">The method is called with a composite format string and five format items.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_vararg.cpp#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2787a-1357">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1357">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2787a-1358"><paramref name="format" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1358"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="2787a-1359"><paramref name="format" />의 형식 사양이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1359">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2787a-1360">안전한 최상위 창 및 하위 창을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1360">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="2787a-1361">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="2787a-1361">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <block subset="none" type="usage"><para><span data-ttu-id="2787a-1362">이 메서드가로 표시는 <see langword="vararg" /> 가변 개수의 매개 변수를 지원함을 의미 하는 키워드입니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1362">This method is marked with the <see langword="vararg" /> keyword, which means that it supports a variable number of parameters.</span></span> <span data-ttu-id="2787a-1363">Visual c + +에서 메서드를 호출할 수 있지만 C# 또는 Visual Basic 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1363">The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code.</span></span> <span data-ttu-id="2787a-1364">C# 및 Visual Basic 컴파일러에 대 한 호출을 해결할 <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /> 호출로 <see cref="M:System.Console.WriteLine(System.String,System.Object[])" />합니다.</span><span class="sxs-lookup"><span data-stu-id="2787a-1364">The C# and Visual Basic compilers resolve calls to <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /> as calls to <see cref="M:System.Console.WriteLine(System.String,System.Object[])" />.</span></span></para></block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="2787a-1365">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="2787a-1365">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="2787a-1366">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="2787a-1366">Composite Formatting</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>