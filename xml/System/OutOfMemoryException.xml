<Type Name="OutOfMemoryException" FullName="System.OutOfMemoryException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7b05f4026a0945a8550337ea6763feda0be457fd" /><Meta Name="ms.sourcegitcommit" Value="8bc3ac200cc1c4fb5daa8f9787e66801575530d2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/21/2019" /><Meta Name="ms.locfileid" Value="56583045" /></Metadata><TypeSignature Language="C#" Value="public class OutOfMemoryException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit OutOfMemoryException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.OutOfMemoryException" />
  <TypeSignature Language="VB.NET" Value="Public Class OutOfMemoryException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutOfMemoryException : SystemException" />
  <TypeSignature Language="F#" Value="type OutOfMemoryException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f54af-101">프로그램을 계속 실행하기 위한 메모리가 부족할 때 throw되는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-101">The exception that is thrown when there is not enough memory to continue the execution of a program.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="f54af-102"><xref:System.OutOfMemoryException> HRESULT를 사용 하 여 `COR_E_OUTOFMEMORY`, 0x8007000E 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-102"><xref:System.OutOfMemoryException> uses the HRESULT `COR_E_OUTOFMEMORY`, which has the value 0x8007000E.</span></span>  
  
<span data-ttu-id="f54af-103">인스턴스의 초기 속성 값의 목록을 <xref:System.OutOfMemoryException>, 참조는 <xref:System.OutOfMemoryException.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-103">For a list of initial property values for an instance of <xref:System.OutOfMemoryException>, see the <xref:System.OutOfMemoryException.%23ctor%2A> constructors.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f54af-104">상속 된 값 <xref:System.Exception.Data%2A> 속성은 항상 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-104">The value of the inherited <xref:System.Exception.Data%2A> property is always `null`.</span></span>  
  
<span data-ttu-id="f54af-105"><xref:System.OutOfMemoryException> 예외는 두 가지 주요 원인:</span><span class="sxs-lookup"><span data-stu-id="f54af-105">An <xref:System.OutOfMemoryException> exception has two major causes:</span></span>  
  
-   <span data-ttu-id="f54af-106">확장 하려는 <xref:System.Text.StringBuilder> 정의한 길이 초과 하는 개체는 <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-106">You are attempting to expand a <xref:System.Text.StringBuilder> object beyond the length defined by its <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="f54af-107">공용 언어 런타임에서 성공적으로 작업을 수행 하려면 충분 한 인접 한 메모리를 할당할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-107">The common language runtime cannot allocate enough contiguous memory to successfully perform an operation.</span></span> <span data-ttu-id="f54af-108">메모리를 할당 해야 하는 모든 속성 할당 또는 메서드 호출에서이 예외가 throw 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-108">This exception can be thrown by any property assignment or method call that requires a memory allocation.</span></span> <span data-ttu-id="f54af-109">원인에 대 한 자세한 내용은 합니다 <xref:System.OutOfMemoryException> 예외를 참조 하세요 ["Out of Memory" 실제 메모리를 가리키지 않습니다](https://blogs.msdn.com/b/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-109">For more information on the cause of the <xref:System.OutOfMemoryException> exception, see ["Out of Memory" Does Not Refer to Physical Memory](https://blogs.msdn.com/b/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx).</span></span>  
  
     <span data-ttu-id="f54af-110">이 유형의 <xref:System.OutOfMemoryException> 예외는 치명적인 오류를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-110">This type of <xref:System.OutOfMemoryException> exception represents a catastrophic failure.</span></span> <span data-ttu-id="f54af-111">예외를 처리 하려는 경우를 포함 해야는 `catch` 호출 하는 블록을 <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> 앱을 종료 하 고 다음 예제와 같이 시스템 이벤트 로그에 항목을 추가 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="f54af-111">If you choose to handle the exception, you should include a `catch` block that calls the <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> method to terminate your app and add an entry to the system event log, as the following example does.</span></span>  
  
     [!code-csharp[System.OutOfMemoryException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/failfast1.cs#2)]
     [!code-vb[System.OutOfMemoryException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/failfast1.vb#2)]  
  
 <span data-ttu-id="f54af-112">일부 조건은는 예외가 throw 되 고 제거 하기 위해 수행할 수 있는 작업에는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-112">Some of the conditions under which the exception is thrown and the actions you can take to eliminate it include the following:</span></span>  
  
<span data-ttu-id="f54af-113">**호출 하 여 <xref:System.Text.StringBuilder.Insert%2A?displayProperty=nameWithType> 메서드.**</span><span class="sxs-lookup"><span data-stu-id="f54af-113">**You are calling the <xref:System.Text.StringBuilder.Insert%2A?displayProperty=nameWithType> method.**</span></span>  

<span data-ttu-id="f54af-114">길이 늘립니다 하려는 <xref:System.Text.StringBuilder> 개체에서 지정 된 크기 보다 해당 <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-114">You are attempting to increase the length of a <xref:System.Text.StringBuilder> object beyond the size specified by its <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f54af-115">다음 예제는 <xref:System.OutOfMemoryException> 에 대 한 호출에서 throw 된 예외를 <xref:System.Text.StringBuilder.Insert%28System.Int32%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> 메서드는 예제는 개체의 문자열을 삽입 하려고 할 때 <xref:System.Text.StringBuilder.Length%2A> 최대 용량을 초과 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-115">The following example illustrates the <xref:System.OutOfMemoryException> exception thrown by a call to the <xref:System.Text.StringBuilder.Insert%28System.Int32%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> method when the example tries to insert a string that would cause the object's <xref:System.Text.StringBuilder.Length%2A> property to exceed its maximum capacity.</span></span>  
  
[!code-csharp[System.OutOfMemoryException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/sb_example1.cs#1)]
[!code-vb[System.OutOfMemoryException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/sb_example1.vb#1)]  
  
<span data-ttu-id="f54af-116">오류를 해결 하기 위해 다음 중 하나를 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-116">You can do either of the following to address the error:</span></span>  
  
-   <span data-ttu-id="f54af-117">에 대 한 호출을 대체 합니다 <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> 생성자를 호출 하 여 다른 <xref:System.Text.StringBuilder> 생성자 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-117">Replace the call to the <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor with a call any other <xref:System.Text.StringBuilder> constructor overload.</span></span> <span data-ttu-id="f54af-118">최대 용량에 <xref:System.Text.StringBuilder> 개체는 해당 기본값으로 설정 됩니다 <xref:System.Int32.MaxValue?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-118">The maximum capacity of your <xref:System.Text.StringBuilder> object will be set to its default value, which is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  

-   <span data-ttu-id="f54af-119">호출을 <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> 생성자를 `maxCapacity` 는 모든 확장을 수용 하기에 충분히 큰 값을 <xref:System.Text.StringBuilder> 개체.</span><span class="sxs-lookup"><span data-stu-id="f54af-119">Call the <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor with a `maxCapacity` value that is large enough to accommodate any expansions to the <xref:System.Text.StringBuilder> object.</span></span>  
  
<span data-ttu-id="f54af-120">**응용 프로그램을 32 비트 프로세스로 실행 됩니다.**</span><span class="sxs-lookup"><span data-stu-id="f54af-120">**Your app runs as a 32-bit process.**</span></span>

<span data-ttu-id="f54af-121">32 비트 프로세스는 최대 2GB의 32 비트 시스템에서는 사용자 모드 가상 메모리 및 4GB의 64 비트 시스템에서 사용자 모드 가상 메모리를 할당할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-121">32-bit processes can allocate a maximum of 2GB of virtual user-mode memory on 32-bit systems, and 4GB of virtual user-mode memory on 64-bit systems.</span></span> <span data-ttu-id="f54af-122">이 어려울 수 있습니다 보다 큰 할당을 필요할 때 충분 한 인접 한 메모리를 할당할 공용 언어 런타임에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-122">This can make it more difficult for the common language runtime to allocate sufficient contiguous memory when a large allocation is needed.</span></span> <span data-ttu-id="f54af-123">반면, 64 비트 프로세스는 최대 8TB의 가상 메모리를 할당할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-123">In contrast, 64-bit processes can allocate up to 8TB of virtual memory.</span></span> <span data-ttu-id="f54af-124">이 예외를 해결 하기 위해 64 비트 플랫폼을 대상으로 앱을 다시 컴파일하십시오.</span><span class="sxs-lookup"><span data-stu-id="f54af-124">To address this exception, recompile your app to target a 64-bit platform.</span></span> <span data-ttu-id="f54af-125">Visual Studio에서 특정 플랫폼을 대상으로 지정 하는 내용은 [방법: 플랫폼을 대상으로 한 프로젝트 구성](https://msdn.microsoft.com/library/845302fc-273d-4f81-820a-7296ce91bd76)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f54af-125">For information on targeting specific platforms in Visual Studio, see [How to: Configure Projects to Target Platforms](https://msdn.microsoft.com/library/845302fc-273d-4f81-820a-7296ce91bd76).</span></span>  
  
<span data-ttu-id="f54af-126">**앱 관리 되지 않는 리소스 누수를 발생합니다**</span><span class="sxs-lookup"><span data-stu-id="f54af-126">**Your app is leaking unmanaged resources**</span></span> 

<span data-ttu-id="f54af-127">가비지 수집기가 관리 되는 형식에 할당 된 메모리를 해제할 수 있지만,이 관리 하지 않는 운영 체제 파일, 메모리 매핑된 파일, 파이프, 레지스트리 키 및 대기 핸들에 대 한 핸들 등 처리와 같은 관리 되지 않는 리소스에 할당 된 메모리 와 같은 Windows API 호출에 의해 직접 또는 메모리 할당 함수를 호출 하 여 할당 된 메모리 블록 `malloc`합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-127">Although the garbage collector is able to free memory allocated to managed types, it does not manage memory allocated to unmanaged resources such as operating system handles (including handles to files, memory-mapped files, pipes, registry keys, and wait handles) and memory blocks allocated directly by Windows API calls or by calls to memory allocation functions such as `malloc`.</span></span> <span data-ttu-id="f54af-128">관리 되지 않는 리소스를 소비 하는 형식은 구현 된 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-128">Types that consume unmanaged resources implement the <xref:System.IDisposable> interface.</span></span>  

<span data-ttu-id="f54af-129">관리 되지 않는 리소스를 사용 하는 형식을 사용 하는 경우에 호출 해야 해야 해당 <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> 메서드를 사용 하는 것이 했으면 합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-129">If you are consuming a type that uses unmanaged resources, you should be sure to call its <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method when you have finished using it.</span></span> <span data-ttu-id="f54af-130">(일부 형식은 또한 구현 하는 `Close` 메서드입니다 기능상에서 동일를 `Dispose` 메서드.) 자세한 내용은 참조는 [를 사용 하 여 개체는 구현 IDisposable](~/docs/standard/garbage-collection/using-objects.md) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-130">(Some types also implement a `Close` method that is identical in function to a `Dispose` method.) For more information, see the [Using Objects That Implement IDisposable](~/docs/standard/garbage-collection/using-objects.md) topic.</span></span>  

<span data-ttu-id="f54af-131">관리 되지 않는 리소스를 사용 하는 형식을 만든 경우 Dispose 패턴을 구현 했으며, 필요한 경우 종료자를 제공 하는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-131">If you have created a type that uses unmanaged resources, make sure that you have implemented the Dispose pattern and, if necessary, supplied a finalizer.</span></span> <span data-ttu-id="f54af-132">자세한 내용은 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md) 고 <xref:System.Object.Finalize%2A?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-132">For more information, see  [Implementing a Dispose method](~/docs/standard/garbage-collection/implementing-dispose.md) and <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span>  
  
<span data-ttu-id="f54af-133">**64 비트 프로세스에서 큰 배열을 만들 하려고 합니다.**</span><span class="sxs-lookup"><span data-stu-id="f54af-133">**You are attempting to create a large array in a 64-bit process**</span></span>

<span data-ttu-id="f54af-134">기본적으로.NET Framework의 공용 언어 런타임 크기가 2 GB를 초과 하는 단일 개체를 허용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-134">By default, the common language runtime in .NET Framework does not allow single objects whose size exceeds 2GB.</span></span> <span data-ttu-id="f54af-135">이 기본값을 재정의 하려면 사용 합니다 [ \<gcAllowVeryLargeObjects >](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) 총 크기가 2GB를 초과 하는 배열에 있도록 구성 파일 설정.</span><span class="sxs-lookup"><span data-stu-id="f54af-135">To override this default, you can use the [\<gcAllowVeryLargeObjects>](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration file setting to enable arrays whose total size exceeds 2 GB.</span></span> <span data-ttu-id="f54af-136">.NET Core에서 2GB는 기본적으로 사용 하는 보다 큰 배열에 대 한 지원.</span><span class="sxs-lookup"><span data-stu-id="f54af-136">On .NET Core, support for arrays of greater than 2 GB is enabled by default.</span></span> 
  
<span data-ttu-id="f54af-137">**메모리에서 매우 큰 집합의 데이터 (예: 배열, 컬렉션 또는 데이터베이스 데이터 집합)를 사용 하 여 작업할 합니다.**</span><span class="sxs-lookup"><span data-stu-id="f54af-137">**You are working with very large sets of data (such as arrays, collections, or database data sets) in memory.**</span></span>

<span data-ttu-id="f54af-138">데이터 구조 또는 메모리에 상주 하는 데이터 집합이 너무 커져 공용 언어 런타임, 충분 한 인접 한 메모리를 할당할 수 없는 경우는 <xref:System.OutOfMemoryException> 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-138">When data structures or data sets that reside in memory become so large that the common language runtime is unable to allocate enough contiguous memory for them, an <xref:System.OutOfMemoryException> exception results.</span></span>  

<span data-ttu-id="f54af-139">방지 하기 위해는 <xref:System.OutOfMemoryException> 예외 적은 데이터를 메모리에 상주 하거나 데이터 구분 되어 세그먼트로 작은 메모리 할당을 필요로 하는 애플리케이션을 수정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-139">To prevent the <xref:System.OutOfMemoryException> exceptions, you must modify your application so that less data is resident in memory, or the data is divided into segments that require smaller memory allocations.</span></span> <span data-ttu-id="f54af-140">예:</span><span class="sxs-lookup"><span data-stu-id="f54af-140">For example:</span></span>  

-   <span data-ttu-id="f54af-141">데이터베이스에서 모든 데이터를 검색 하 고 다음 서버에 왕복을 최소화 하기 위해 앱에서 필터링 하는 경우 앱에 필요한 데이터의 하위 집합만 반환 하도록 쿼리를 수정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-141">If you are retrieving all of the data from a database and then filtering it in your app to minimize trips to the server, you should modify your queries to return only the subset of data that your app needs.</span></span> <span data-ttu-id="f54af-142">대형 테이블에서 작업할 때는 여러 쿼리는 거의 항상 더 단일 테이블에 데이터를 검색 하 고 조작 하는 것 보다 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-142">When working with large tables, multiple queries are almost always more efficient than retrieving all of the data in a single table and then manipulating it.</span></span>  

-   <span data-ttu-id="f54af-143">사용자가 동적으로 만든 쿼리를 실행 하는 경우 쿼리에서 반환 된 레코드 수가 제한 된다는 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-143">If you are executing queries that users create dynamically, you should ensure that the number of records returned by the query is limited.</span></span>  

-   <span data-ttu-id="f54af-144">대형 배열을 사용 하는 경우 또는 다른 컬렉션의 크기가 결과 개체는 <xref:System.OutOfMemoryException> 예외를 한 번에 모두 사용 하기 보다는 데이터 하위 집합에서 작동 하도록 애플리케이션을 수정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-144">If you are using large arrays or other collection objects whose size results in an <xref:System.OutOfMemoryException> exception, you should modify your application to work the data in subsets rather than to work with it all at once.</span></span>  
  
<span data-ttu-id="f54af-145">다음 예제에서는 200 백만 부동 소수점 값으로 구성 됩니다 한 후 평균을 계산 하는 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-145">The following example gets a array that consists of 200 million floating-point values and then calculates their mean.</span></span> <span data-ttu-id="f54af-146">예제의 출력에 따르면,이 예제에서는 평균을 계산 하기 전에 메모리에 배열 전체를 저장 하기 때문에 <xref:System.OutOfMemoryException> 가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-146">The output from the example shows that, because the example stores the entire array in memory before it calculates the mean, an <xref:System.OutOfMemoryException> is is thrown.</span></span>  

[!code-csharp[System.OutOfMemoryException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/data1.cs#3)]
[!code-vb[System.OutOfMemoryException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/data1.vb#3)]  
  
<span data-ttu-id="f54af-147">다음 예제에서는 제거 된 <xref:System.OutOfMemoryException> (이러한 줄은 주석 처리 된 예제에서는 추가 처리를 허용 하는 데 필요한 경우 파일에 데이터를 직렬화 하는 메모리에 전체 데이터 집합을 저장 하지 않고 들어오는 데이터를 처리 하 여 예외 하므로 여기서 생성 크기가 1GB 보다 큽니다. 파일)를 호출 하는 루틴 계산 된 평균 및 사례 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-147">The following example eliminates the <xref:System.OutOfMemoryException> exception by processing the incoming data without storing the entire data set in memory, serializing the data to a file if necessary to permit further processing (these lines are commented out in the example, since in this case they produce a file whose size is greater than 1GB), and returning the calculated mean and the number of cases to the calling routine.</span></span>  

[!code-csharp[System.OutOfMemoryException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/data2.cs#4)]
[!code-vb[System.OutOfMemoryException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/data2.vb#4)]  
  
<span data-ttu-id="f54af-148">**반복 해 서 큰 문자열을 연결 하는 있습니다.**</span><span class="sxs-lookup"><span data-stu-id="f54af-148">**You are repeatedly concatenating large strings.**</span></span> 

<span data-ttu-id="f54af-149">문자열을 변경할 수 없기 때문에 각 문자열 연결 작업에는 새 문자열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-149">Because strings are immutable, each string concatenation operation creates a new string.</span></span> <span data-ttu-id="f54af-150">작은 문자열 또는 소수의 연결 작업에 주는 영향은 매우 적습니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-150">The impact for small strings, or for a small number of concatenation operations, is negligible.</span></span> <span data-ttu-id="f54af-151">큰 문자열 또는 연결 작업 수가 매우 많은 경우 문자열 연결 수가 많은 메모리 할당 및 메모리 조각화로 성능 저하를 발생할 수 있습니다 하지만 및 <xref:System.OutOfMemoryException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-151">But for large strings or a very large number of concatenation operations, string concatenation can lead to a large number of memory allocations and memory fragmentation, poor performance, and possibly <xref:System.OutOfMemoryException> exceptions.</span></span>  

<span data-ttu-id="f54af-152">큰 문자열 연결 또는 다 수의 연결 작업을 수행 해야 사용 하는 경우는 <xref:System.Text.StringBuilder> 대신 클래스는 <xref:System.String> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-152">When concatenating large strings or performing a large number of concatenation operations, you should use the <xref:System.Text.StringBuilder> class instead of the <xref:System.String> class.</span></span> <span data-ttu-id="f54af-153">완료 한 후 문자열을 조작 하는 경우 변환 된 <xref:System.Text.StringBuilder> 인스턴스를 호출 하 여 문자열로 <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f54af-153">When you have finished manipulating the string, convert the <xref:System.Text.StringBuilder> instance to a string by calling the <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
<span data-ttu-id="f54af-154">**메모리에 다 수의 개체를 고정 합니다.**</span><span class="sxs-lookup"><span data-stu-id="f54af-154">**You pin a large number of objects in memory.**</span></span>  
 
<span data-ttu-id="f54af-155">오랫동안 메모리에 다 수의 개체를 고정 어려울 수 있습니다 연속 메모리 블록을 할당할 가비지 수집기에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-155">Pinning a large number of objects in memory for long periods can make it difficult for the garbage collector to allocate contiguous blocks of memory.</span></span> <span data-ttu-id="f54af-156">한 고정 한 경우 많은 수의 개체를 메모리에 예를 들어 사용 하 여는 `fixed` C#의 문이나 호출 하 여는 <xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType> 핸들 형식의 메서드 <xref:System.Runtime.InteropServices.GCHandleType.Pinned?displayProperty=nameWithType>, 주소로 다음을 수행할 수는 <xref:System.OutOfMemoryException> 예외.</span><span class="sxs-lookup"><span data-stu-id="f54af-156">If you've pinned a large number of objects in memory, for example by using the `fixed` statement in C# or by calling the <xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType> method with a handle type of <xref:System.Runtime.InteropServices.GCHandleType.Pinned?displayProperty=nameWithType>, you can do the following to address the <xref:System.OutOfMemoryException> exception.</span></span>  
  
-   <span data-ttu-id="f54af-157">각 개체는 실제로 고정할 수 해야 하는지 여부를 평가합니다</span><span class="sxs-lookup"><span data-stu-id="f54af-157">Evaluate whether each object really needs to be pinned,</span></span>  

-   <span data-ttu-id="f54af-158">각 개체 아님을 고정 가능한 한 빨리 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-158">Ensure that each object is unpinned as soon as possible.</span></span>  

-   <span data-ttu-id="f54af-159">호출할 때마다 있는지 확인 합니다 <xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType> pin 메모리 메서드가 해당 호출을 <xref:System.Runtime.InteropServices.GCHandle.Free%2A?displayProperty=nameWithType> 해당 메모리를 고정 해제 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-159">Make sure that each call to the <xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType> method to pin memory has a corresponding call to the <xref:System.Runtime.InteropServices.GCHandle.Free%2A?displayProperty=nameWithType> method to unpin that memory.</span></span>  

<span data-ttu-id="f54af-160">중간 (MSIL) 명령은 throw 다음 Microsoft는 <xref:System.OutOfMemoryException> 예외:</span><span class="sxs-lookup"><span data-stu-id="f54af-160">The following Microsoft intermediate (MSIL) instructions throw an <xref:System.OutOfMemoryException> exception:</span></span>  
  
-   [<span data-ttu-id="f54af-161">상자</span><span class="sxs-lookup"><span data-stu-id="f54af-161">box</span></span>](https://msdn.microsoft.com/library/system.reflection.emit.opcodes.box.aspx)  
-   [<span data-ttu-id="f54af-162">newarr</span><span class="sxs-lookup"><span data-stu-id="f54af-162">newarr</span></span>](https://msdn.microsoft.com/library/system.reflection.emit.opcodes.newarr.aspx)  

-   <span data-ttu-id="f54af-163">[newobj](https://msdn.microsoft.com/library/system.reflection.emit.opcodes.newobj.aspx)newobj</span><span class="sxs-lookup"><span data-stu-id="f54af-163">[newobj](https://msdn.microsoft.com/library/system.reflection.emit.opcodes.newobj.aspx)newobj</span></span>  


 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="f54af-164">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="f54af-164">Handling and Throwing Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f54af-165"><see cref="T:System.OutOfMemoryException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-165">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f54af-166"><see cref="T:System.OutOfMemoryException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-166">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f54af-167">이 생성자는 <xref:System.Exception.Message%2A> "메모리가 충분 한 하 여 프로그램의 실행을 계속 있습니다."와 같은 오류를 설명 하는 시스템 제공 메시지로 새 인스턴스의 속성</span><span class="sxs-lookup"><span data-stu-id="f54af-167">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "There was not enough memory to continue the execution of the program."</span></span> <span data-ttu-id="f54af-168">이 메시지는 현재 시스템의 문화권을 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-168">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="f54af-169">다음 표에서는 <xref:System.OutOfMemoryException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-169">The following table shows the initial property values for an instance of <xref:System.OutOfMemoryException>.</span></span>  
  
|<span data-ttu-id="f54af-170">속성</span><span class="sxs-lookup"><span data-stu-id="f54af-170">Property</span></span>|<span data-ttu-id="f54af-171">값</span><span class="sxs-lookup"><span data-stu-id="f54af-171">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="f54af-172">`null`.</span><span class="sxs-lookup"><span data-stu-id="f54af-172">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="f54af-173">지역화된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-173">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new OutOfMemoryException : string -&gt; OutOfMemoryException" Usage="new System.OutOfMemoryException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="f54af-174">오류를 설명하는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-174">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="f54af-175">지정된 오류 메시지를 사용하여 <see cref="T:System.OutOfMemoryException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-175">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f54af-176">`message` 매개 변수의 내용은 사용자가 이해할 수 있도록 만들어졌습니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-176">The content of the `message` parameter is intended to be understood by humans.</span></span> <span data-ttu-id="f54af-177">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-177">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="f54af-178">다음 표에서는 <xref:System.OutOfMemoryException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-178">The following table shows the initial property values for an instance of <xref:System.OutOfMemoryException>.</span></span>  
  
|<span data-ttu-id="f54af-179">속성</span><span class="sxs-lookup"><span data-stu-id="f54af-179">Property</span></span>|<span data-ttu-id="f54af-180">값</span><span class="sxs-lookup"><span data-stu-id="f54af-180">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="f54af-181">null 참조(Visual Basic의 경우 `Nothing`)</span><span class="sxs-lookup"><span data-stu-id="f54af-181">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="f54af-182">오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-182">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OutOfMemoryException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OutOfMemoryException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new OutOfMemoryException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; OutOfMemoryException" Usage="new System.OutOfMemoryException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="f54af-183">serialize된 개체 데이터를 보유하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-183">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="f54af-184">원본 또는 대상에 대한 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-184">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="f54af-185">serialize된 데이터를 사용하여 <see cref="T:System.OutOfMemoryException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-185">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f54af-186">deserialization을 수행하는 동안 이 생성자를 호출하여 스트림을 통해 전송될 예외 개체를 다시 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-186">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="f54af-187">자세한 내용은 [XML 및 SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-187">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="f54af-188">XML 및 SOAP Serialization</span><span class="sxs-lookup"><span data-stu-id="f54af-188">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new OutOfMemoryException : string * Exception -&gt; OutOfMemoryException" Usage="new System.OutOfMemoryException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="f54af-189">예외에 대한 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-189">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="f54af-190">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-190">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="f54af-191"><paramref name="innerException" /> 매개 변수가 null 참조(Visual Basic에서는 <see langword="Nothing" />)가 아니면, 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-191">If the <paramref name="innerException" /> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="f54af-192">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.OutOfMemoryException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-192">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f54af-193">이전 예외의 직접적인 결과로 throw되는 예외는 <xref:System.Exception.InnerException%2A> 속성에 이전 예외에 대한 참조를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-193">An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="f54af-194"><xref:System.Exception.InnerException%2A> 속성은 생성자에 전달된 값과 같은 값을 반환하거나 `Nothing` 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 null 참조(Visual Basic의 경우 <xref:System.Exception.InnerException%2A>)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-194">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="f54af-195">다음 표에서는 <xref:System.OutOfMemoryException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-195">The following table shows the initial property values for an instance of <xref:System.OutOfMemoryException>.</span></span>  
  
|<span data-ttu-id="f54af-196">속성</span><span class="sxs-lookup"><span data-stu-id="f54af-196">Property</span></span>|<span data-ttu-id="f54af-197">값</span><span class="sxs-lookup"><span data-stu-id="f54af-197">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="f54af-198">내부 예외 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-198">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="f54af-199">오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="f54af-199">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="f54af-200">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="f54af-200">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>