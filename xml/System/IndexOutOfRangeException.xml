<Type Name="IndexOutOfRangeException" FullName="System.IndexOutOfRangeException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5d8fe7d4a73ee7c4e119ce51d0d38b262de5a544" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58745359" /></Metadata><TypeSignature Language="C#" Value="public sealed class IndexOutOfRangeException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit IndexOutOfRangeException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.IndexOutOfRangeException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IndexOutOfRangeException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class IndexOutOfRangeException sealed : SystemException" />
  <TypeSignature Language="F#" Value="type IndexOutOfRangeException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f7222-101">해당 범위 외부에 있는 인덱스를 사용하여 배열 또는 컬렉션의 요소에 액세스하려고 할 때 발생하는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-101">The exception that is thrown when an attempt is made to access an element of an array or collection with an index that is outside its bounds.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7222-102"><xref:System.IndexOutOfRangeException> 잘못 된 인덱스가 배열 또는 컬렉션의 멤버에 액세스 하거나 버퍼의 특정 위치에서 읽거나 쓰는를 사용 하는 경우 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-102">An <xref:System.IndexOutOfRangeException> exception is thrown when an invalid index is used to access a member of an array or a collection, or to read or write from a particular location in a buffer.</span></span> <span data-ttu-id="f7222-103">이 예외에서 상속 된 <xref:System.Exception> 클래스에는 있지만 고유한 멤버가 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-103">This exception  inherits from the <xref:System.Exception> class but adds no unique members.</span></span>  
  
 <span data-ttu-id="f7222-104">일반적으로 <xref:System.IndexOutOfRangeException> 개발자 오류 결과로 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-104">Typically, an <xref:System.IndexOutOfRangeException> exception is thrown as a result of developer error.</span></span> <span data-ttu-id="f7222-105">대신 예외를 처리 하면 오류의 원인을 진단 하 고 코드를 수정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-105">Instead of handling the exception, you should diagnose the cause of the error and correct your code.</span></span> <span data-ttu-id="f7222-106">오류의 가장 일반적인 원인은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-106">The most common causes of the error are:</span></span>  
  
-   <span data-ttu-id="f7222-107">다음 예제와 같이 멤버 또는 요소를 해당 개수 보다 작거나 컬렉션의 첫 번째 열 상한 하나 임을 무시 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-107">Forgetting that the upper bound of a collection or a zero-based array is one less than its number of members or elements, as the following example illustrates.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/length1.cs#3)]
     [!code-vb[System.IndexOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/length1.vb#3)]  
  
     <span data-ttu-id="f7222-108">오류를 해결 하려면 다음과 같은 코드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-108">To correct the error, you can use code like the following.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/length2.cs#4)]
     [!code-vb[System.IndexOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/length2.vb#4)]  
  
     <span data-ttu-id="f7222-109">또는 해당 인덱스에서 배열의 모든 요소를 반복을 대신 사용할 수는 `foreach` 문 (C#) 또는 `For Each` 문 (Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="f7222-109">Alternately, instead of iterating all the elements in the array by their index, you can use the `foreach` statement (in C#) or the `For Each` statement (in Visual Basic).</span></span>  
  
-   <span data-ttu-id="f7222-110">에 다른 배열 하는 되어 적절 하 게 차원이 구분 되지 않습니다 및 원래 배열 보다 적은 요소가 있는 배열 요소를 할당 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-110">Attempting to assign an array element to another array that has not been adequately dimensioned and that has fewer elements than the original array.</span></span> <span data-ttu-id="f7222-111">마지막 요소를 할당 하려면 다음 예제에서는 합니다 `value1` 의 같은 요소를 배열 합니다 `value2` 배열.</span><span class="sxs-lookup"><span data-stu-id="f7222-111">The following example attempts to assign the last element in the `value1` array to the same element in the `value2` array.</span></span> <span data-ttu-id="f7222-112">그러나는 `value2` 배열에 된 차원이 제대로 구분 되지 7 개 요소 대신 6 개 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-112">However, the `value2` array has been incorrectly dimensioned to have six instead of seven elements.</span></span> <span data-ttu-id="f7222-113">결과적으로, 할당 throw는 <xref:System.IndexOutOfRangeException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-113">As a result, the assignment throws an <xref:System.IndexOutOfRangeException> exception.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/Uninit1.cs#10)]
     [!code-vb[System.IndexOutOfRangeException#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/Uninit1.vb#10)]  
  
-   <span data-ttu-id="f7222-114">배열 또는 특정 인덱스 위치에서 시작 하는 컬렉션의 일부를 반복 하는 검색 메서드에서 반환 값을 사용 하 여.</span><span class="sxs-lookup"><span data-stu-id="f7222-114">Using a value returned by a search method to iterate a portion of an array or collection starting at a particular index position.</span></span> <span data-ttu-id="f7222-115">런타임에서 throw 검색 작업에 일치 항목을 찾을 수 있는지 여부를 확인 해야 하는 경우는 <xref:System.IndexOutOfRangeException> 이 예와 같이 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-115">If you forget to check whether the search operation found a match, the runtime throws an <xref:System.IndexOutOfRangeException> exception, as shown in this example.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/negative1.cs#5)]
     [!code-vb[System.IndexOutOfRangeException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/negative1.vb#5)]  
  
     <span data-ttu-id="f7222-116">이 경우에 <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType> 일치 항목을 찾지 못하면 잘못 된 인덱스 값에는-1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-116">In this case, the <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType> method returns -1, which is an invalid index value, when it fails to find a match.</span></span> <span data-ttu-id="f7222-117">이 오류를 해결 하려면이 예와 같이 배열 반복 하기 전에 검색 메서드의 반환 값을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-117">To correct this error, check the search method's return value before iterating the array, as shown in this example.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/negative2.cs#6)]
     [!code-vb[System.IndexOutOfRangeException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/negative2.vb#6)]  
  
-   <span data-ttu-id="f7222-118">사용 하 여 또는 열거 결과 집합, 컬렉션 또는 배열 쿼리에서 반환된 된 개체에 유효한 데이터가 있는지 여부를 테스트 하지 않고 반환 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-118">Trying to use or enumerate a result set, collection, or array returned by a query without testing whether the returned object has any valid data.</span></span>  
  
-   <span data-ttu-id="f7222-119">시작, 끝 인덱스를 인덱스나 반복할 항목의 수를 정의 하는 계산된 값을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-119">Using a computed value to define the starting index, the ending index, or the number of items to be iterated.</span></span> <span data-ttu-id="f7222-120">계산의 결과가 예기치 않은 경우 발생할 수 있는 <xref:System.IndexOutOfRangeException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-120">If the result of the computation is unexpected, it might result in an <xref:System.IndexOutOfRangeException> exception.</span></span> <span data-ttu-id="f7222-121">인덱스 값을 계산 하면 프로그램의 논리를 검사 하 고 값 배열 또는 컬렉션을 반복 하기 전에 유효성을 검사 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-121">You should check your program's logic in calculating the index value and validate the value before iterating the array or collection.</span></span> <span data-ttu-id="f7222-122">다음 조건이 모두 true 여야 합니다. 그렇지 않은 경우는 <xref:System.IndexOutOfRangeException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-122">The following conditions must all be true; otherwise, an <xref:System.IndexOutOfRangeException> exception is thrown:</span></span>  
  
    -   <span data-ttu-id="f7222-123">시작 인덱스는 보다 크거나 같아야 합니다. <xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType> 반복 하려는 배열의 차원에 대 한 또는 컬렉션에 대해 0 보다 크거나 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-123">The starting index must be greater than or equal to <xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType> for the dimension of the array that you want to iterate, or greater than or equal to 0 for a collection.</span></span>  
  
    -   <span data-ttu-id="f7222-124">끝 인덱스를 초과할 수 없습니다 <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> 반복 또는 보다 클 수 없거나 같음 하려는 배열의 차원에 대 한는 `Count` 컬렉션의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-124">The ending index cannot exceed <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> for the dimension of the array that you want to iterate, or cannot be greater than or equal to the `Count` property of a collection.</span></span>  
  
    -   <span data-ttu-id="f7222-125">다음 수식을 반복 하려는 배열의 차원에 대 한 참 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-125">The following equation must be true for the dimension of the array that you want to iterate:</span></span>  
  
        ```  
        start_index >= lower_bound And start_index + items_to_iterate - 1 <= upper_bound  
        ```  
  
         <span data-ttu-id="f7222-126">컬렉션에 대해 다음 수식을 적용 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-126">For a collection, the following equation must be true:</span></span>  
  
        ```  
        start_index >= 0 And start_index + items_to_iterate <= Count  
        ```  
  
        > [!TIP]
        >  <span data-ttu-id="f7222-127">배열 또는 컬렉션의 시작 인덱스는 음수일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-127">The starting index of an array or collection can never be a negative number.</span></span>  
  
-   <span data-ttu-id="f7222-128">배열의 0부터 시작 해야 하는 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-128">Assuming that an array must be zero-based.</span></span> <span data-ttu-id="f7222-129">0부터 시작 하지 않는 배열을 만들 수 있습니다는 <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType> 메서드는 CLS 규격이 아닌 있지만 COM interop를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-129">Arrays that are not zero-based can be created by the <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType> method and can be returned by COM interop, although they aren't CLS-compliant.</span></span> <span data-ttu-id="f7222-130">다음 예제는 <xref:System.IndexOutOfRangeException> 에서 생성 하는 비 0 기반 배열 반복 하려고 할 때 throw 되는 <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7222-130">The following example illustrates the <xref:System.IndexOutOfRangeException> that is thrown when you try to iterate a non-zero-based array created by the <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/nonzero1.cs#1)]
     [!code-vb[System.IndexOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/nonzero1.vb#1)]  
  
     <span data-ttu-id="f7222-131">다음 예제와 같이 오류를 해결 하려면 호출할 수 있습니다를 <xref:System.Array.GetLowerBound%2A> 메서드 대신 배열의 시작 인덱스에 대 한 가정을 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-131">To correct the error, as the following example does, you can call the <xref:System.Array.GetLowerBound%2A> method instead of making assumptions about the starting index of an array.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/nonzero2.cs#2)]
     [!code-vb[System.IndexOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/nonzero2.vb#2)]  
  
     <span data-ttu-id="f7222-132">문의할 때는 <xref:System.Array.GetLowerBound%2A> 메서드는 배열의 시작 인덱스를 호출 해야는 <xref:System.Array.GetUpperBound%28System.Int32%29?displayProperty=nameWithType> 메서드 끝 인덱스를 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-132">Note that when you call the <xref:System.Array.GetLowerBound%2A> method to get the starting index of an array, you should also call the <xref:System.Array.GetUpperBound%28System.Int32%29?displayProperty=nameWithType> method to get its ending index.</span></span>  
  
-   <span data-ttu-id="f7222-133">인덱스 및 해당 인덱스는 숫자 배열 또는 컬렉션에 있는 값이 혼동을 줄.</span><span class="sxs-lookup"><span data-stu-id="f7222-133">Confusing an index and the value at that index in a numeric array or collection.</span></span> <span data-ttu-id="f7222-134">이 문제는 일반적으로 사용 하는 경우 발생 합니다 `foreach` 문 (C#) 또는 `For Each` 문 (Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="f7222-134">This issue usually occurs when using the `foreach` statement (in C#) or the `For Each` statement (in Visual Basic).</span></span> <span data-ttu-id="f7222-135">다음 예제에서 이 문제를 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-135">The following example illustrates the problem.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/foreach1.cs#7)]
     [!code-vb[System.IndexOutOfRangeException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/foreach1.vb#7)]  
  
     <span data-ttu-id="f7222-136">반복 구문을 인덱스가 배열 또는 컬렉션에서 각 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-136">The iteration construct returns each value in an array or collection, not its index.</span></span> <span data-ttu-id="f7222-137">예외를 제거 하려면이 코드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-137">To eliminate the exception, use this code.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/foreach2.cs#8)]
     [!code-vb[System.IndexOutOfRangeException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/foreach2.vb#8)]  
  
-   <span data-ttu-id="f7222-138">에 잘못 된 열 이름을 제공 하는 <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-138">Providing an invalid column name to the <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="f7222-139">스레드로부터의 안전성을 위반 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-139">Violating thread safety.</span></span> <span data-ttu-id="f7222-140">같은 읽기 등의 작업 <xref:System.IO.StreamReader> 개체를 동일 하 게 작성 <xref:System.IO.StreamWriter> 여러 스레드에서 개체 또는 개체를 열거를 <xref:System.Collections.Hashtable> 다른 스레드에서 throw 할 수는 <xref:System.IndexOutOfRangeException> 개체에 액세스 되지 경우는 스레드로부터 안전한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-140">Operations such as reading from the same <xref:System.IO.StreamReader> object, writing to the same <xref:System.IO.StreamWriter> object from multiple threads, or enumerating the objects in a <xref:System.Collections.Hashtable> from different threads can throw an <xref:System.IndexOutOfRangeException> if the object isn't accessed in a thread-safe way.</span></span> <span data-ttu-id="f7222-141">이 예외는 경합 조건에 사용 하기 때문에 일반적으로 간헐적으로 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-141">This exception is typically intermittent because it relies on a race condition.</span></span>  
  
 <span data-ttu-id="f7222-142">인덱스 값이 잘못 되었거나 잘못 된 경우 또는 조작 중인 배열의 크기에 예기치 않은 경우 예외를 throw 할 경우 하드 코드 된 인덱스 값을 사용 하 여 배열을 조작합니다</span><span class="sxs-lookup"><span data-stu-id="f7222-142">Using hard-coded index values to manipulate an array is likely to throw an exception if the index value is incorrect or invalid, or if the size of the array being manipulation is unexpected.</span></span> <span data-ttu-id="f7222-143">throw 작업을 방지 하기 위해는 <xref:System.IndexOutOfRangeException> 예외, 다음을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-143">To prevent an operation from throwing an  <xref:System.IndexOutOfRangeException> exception, you can do the following:</span></span>  
  
-   <span data-ttu-id="f7222-144">사용 하 여 배열 요소를 반복 합니다 [foreach](https://msdn.microsoft.com/library/ttw7t8t6.aspx) 문 (C#) 또는 [각각에 대 한 중... 다음](https://msdn.microsoft.com/library/5ebk1751.aspx) 인덱스로 요소를 반복 하는 대신 (Visual Basic)에서는 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-144">Iterate the elements of the array using the [foreach](https://msdn.microsoft.com/library/ttw7t8t6.aspx) statement (in C#) or the [For Each...Next](https://msdn.microsoft.com/library/5ebk1751.aspx) construct (in Visual Basic)  instead of iterating elements by index.</span></span>  
  
-   <span data-ttu-id="f7222-145">반환 하는 인덱스를 사용 하 여 시작 하는 인덱스에서 요소를 반복 합니다 <xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType> 메서드와에서 반환 하는 인덱스를 사용 하 여 종료를 <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7222-145">Iterate the elements by index starting with the index returned by the <xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType> method and ending with the index returned by the <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="f7222-146">다른 하나는 배열에서 요소를 지정 하는 경우를 갖도록 대상 배열 이상의 요소 소스 배열과 비교 하 여 해당 <xref:System.Array.Length%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-146">If you are assigning elements in one array to another, ensure that  the target array has at least as many elements as the source array by comparing their <xref:System.Array.Length%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="f7222-147">인스턴스의 초기 속성 값의 목록을 <xref:System.IndexOutOfRangeException>, 참조는 <xref:System.IndexOutOfRangeException> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-147">For a list of initial property values for an instance of <xref:System.IndexOutOfRangeException>, see the <xref:System.IndexOutOfRangeException> constructors.</span></span>  
  
 <span data-ttu-id="f7222-148">다음 IL (중간 언어) 지침을 throw <xref:System.IndexOutOfRangeException>:</span><span class="sxs-lookup"><span data-stu-id="f7222-148">The following intermediate language (IL) instructions throw <xref:System.IndexOutOfRangeException>:</span></span>  
  
-   <span data-ttu-id="f7222-149">ldelem.\<type></span><span class="sxs-lookup"><span data-stu-id="f7222-149">ldelem.\<type></span></span>  
  
-   <span data-ttu-id="f7222-150">ldelema</span><span class="sxs-lookup"><span data-stu-id="f7222-150">ldelema</span></span>  
  
-   <span data-ttu-id="f7222-151">stelem.\<type></span><span class="sxs-lookup"><span data-stu-id="f7222-151">stelem.\<type></span></span>  
  
 <span data-ttu-id="f7222-152"><xref:System.IndexOutOfRangeException> 값 0x80131508 HRESULT COR_E_INDEXOUTOFRANGE를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-152"><xref:System.IndexOutOfRangeException> uses the HRESULT COR_E_INDEXOUTOFRANGE, which has the value 0x80131508.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="f7222-153">.NET의 예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="f7222-153">Handling and throwing exceptions in .NET</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7222-154"><see cref="T:System.IndexOutOfRangeException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-154">Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexOutOfRangeException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IndexOutOfRangeException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IndexOutOfRangeException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7222-155"><see cref="T:System.IndexOutOfRangeException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-155">Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7222-156">이 생성자는 <xref:System.Exception.Message%2A> "배열 인덱스가 범위를 벗어났습니다."와 같은 오류를 설명 하는 시스템 제공 메시지로 새 인스턴스의 속성</span><span class="sxs-lookup"><span data-stu-id="f7222-156">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "An array index is out of range."</span></span> <span data-ttu-id="f7222-157">이 메시지는 현재 시스템의 문화권을 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-157">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="f7222-158">다음 표에서는 <xref:System.IndexOutOfRangeException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-158">The following table shows the initial property values for an instance of <xref:System.IndexOutOfRangeException>.</span></span>  
  
|<span data-ttu-id="f7222-159">속성</span><span class="sxs-lookup"><span data-stu-id="f7222-159">Property</span></span>|<span data-ttu-id="f7222-160">값</span><span class="sxs-lookup"><span data-stu-id="f7222-160">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="f7222-161">null 참조(Visual Basic의 경우 `Nothing`)</span><span class="sxs-lookup"><span data-stu-id="f7222-161">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="f7222-162">지역화된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-162">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexOutOfRangeException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IndexOutOfRangeException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IndexOutOfRangeException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new IndexOutOfRangeException : string -&gt; IndexOutOfRangeException" Usage="new System.IndexOutOfRangeException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="f7222-163">오류를 설명하는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-163">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="f7222-164">지정된 오류 메시지를 사용하여 <see cref="T:System.IndexOutOfRangeException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-164">Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7222-165">이 생성자는 <xref:System.Exception.Message%2A?displayProperty=nameWithType> 속성을 사용 하 여 새 예외를 `message` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-165">This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=nameWithType> property of the new exception using the `message` parameter.</span></span> <span data-ttu-id="f7222-166">`message` 내용은 사용자의 이해를 돕기 위한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-166">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="f7222-167">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-167">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="f7222-168">다음 표에서는 <xref:System.IndexOutOfRangeException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-168">The following table shows the initial property values for an instance of <xref:System.IndexOutOfRangeException>.</span></span>  
  
|<span data-ttu-id="f7222-169">속성</span><span class="sxs-lookup"><span data-stu-id="f7222-169">Property</span></span>|<span data-ttu-id="f7222-170">값</span><span class="sxs-lookup"><span data-stu-id="f7222-170">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="f7222-171">null 참조(Visual Basic의 경우 `Nothing`)</span><span class="sxs-lookup"><span data-stu-id="f7222-171">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="f7222-172">오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-172">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexOutOfRangeException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IndexOutOfRangeException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new IndexOutOfRangeException : string * Exception -&gt; IndexOutOfRangeException" Usage="new System.IndexOutOfRangeException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="f7222-173">예외에 대한 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-173">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="f7222-174">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-174">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="f7222-175"><paramref name="innerException" /> 매개 변수가 null 참조(Visual Basic에서는 <see langword="Nothing" />)가 아니면, 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-175">If the <paramref name="innerException" /> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="f7222-176">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.IndexOutOfRangeException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-176">Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7222-177">이전 예외의 직접적인 결과로 throw되는 예외의 <xref:System.Exception.InnerException%2A> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-177">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="f7222-178">`InnerException` 속성은 생성자에 전달된 값과 같은 값을 반환하거나 `Nothing` 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 null 참조(Visual Basic의 경우 `InnerException`)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-178">The `InnerException` property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the `InnerException` property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="f7222-179">다음 표에서는 <xref:System.IndexOutOfRangeException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-179">The following table shows the initial property values for an instance of <xref:System.IndexOutOfRangeException>.</span></span>  
  
|<span data-ttu-id="f7222-180">속성</span><span class="sxs-lookup"><span data-stu-id="f7222-180">Property</span></span>|<span data-ttu-id="f7222-181">값</span><span class="sxs-lookup"><span data-stu-id="f7222-181">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="f7222-182">내부 예외 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-182">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="f7222-183">오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7222-183">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>