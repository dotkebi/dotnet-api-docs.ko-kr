<Type Name="BitConverter" FullName="System.BitConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="474b733bc5e905a6d56bb36fe92a6f8209bcbd77" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56386107" /></Metadata><TypeSignature Language="C#" Value="public static class BitConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BitConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.BitConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class BitConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitConverter abstract sealed" />
  <TypeSignature Language="F#" Value="type BitConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="00f39-101">기본 데이터 형식을 바이트의 배열로, 바이트의 배열을 기본 데이터 형식으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-101">Converts base data types to an array of bytes, and an array of bytes to base data types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-102"><xref:System.BitConverter> 클래스에 기본 형식으로 값 형식으로 일련의 바이트로 조작 하는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-102">The <xref:System.BitConverter> class helps manipulate value types in their fundamental form, as a series of bytes.</span></span> <span data-ttu-id="00f39-103">바이트는 8 비트 부호 없는 정수로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-103">A byte is defined as an 8-bit unsigned integer.</span></span> <span data-ttu-id="00f39-104"><xref:System.BitConverter> 다음 테이블에서 볼 수 있듯이 클래스는 바이트 배열에서 각 기본 형식의 변환 하는 정적 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-104">The <xref:System.BitConverter> class includes static methods to convert each of the primitive types to and from an array of bytes, as the following table illustrates.</span></span>  
  
|<span data-ttu-id="00f39-105">형식</span><span class="sxs-lookup"><span data-stu-id="00f39-105">Type</span></span>|<span data-ttu-id="00f39-106">바이트 변환 하려면</span><span class="sxs-lookup"><span data-stu-id="00f39-106">To byte conversion</span></span>|<span data-ttu-id="00f39-107">바이트 변환에서</span><span class="sxs-lookup"><span data-stu-id="00f39-107">From byte conversion</span></span>|  
|----------|------------------------|--------------------------|  
|<xref:System.Boolean>|<xref:System.BitConverter.GetBytes%28System.Boolean%29>|<xref:System.BitConverter.ToBoolean%2A>|  
|<xref:System.Char>|<xref:System.BitConverter.GetBytes%28System.Char%29>|<xref:System.BitConverter.ToChar%2A>|  
|<xref:System.Double>|<xref:System.BitConverter.GetBytes%28System.Double%29><br /><br /> <span data-ttu-id="00f39-108">또는</span><span class="sxs-lookup"><span data-stu-id="00f39-108">-or-</span></span><br /><br /> <xref:System.BitConverter.DoubleToInt64Bits%28System.Double%29>|<xref:System.BitConverter.ToDouble%2A><br /><br /> <span data-ttu-id="00f39-109">또는</span><span class="sxs-lookup"><span data-stu-id="00f39-109">-or-</span></span><br /><br /> <xref:System.BitConverter.Int64BitsToDouble%2A>|  
|<xref:System.Int16>|<xref:System.BitConverter.GetBytes%28System.Int16%29>|<xref:System.BitConverter.ToInt16%2A>|  
|<xref:System.Int32>|<xref:System.BitConverter.GetBytes%28System.Int32%29>|<xref:System.BitConverter.ToInt32%2A>|  
|<xref:System.Int64>|<xref:System.BitConverter.GetBytes%28System.Int64%29>|<xref:System.BitConverter.ToInt64%2A>|  
|<xref:System.Single>|<xref:System.BitConverter.GetBytes%28System.Single%29>|<xref:System.BitConverter.ToSingle%2A>|  
|<xref:System.UInt16>|<xref:System.BitConverter.GetBytes%28System.UInt16%29>|<xref:System.BitConverter.ToUInt16%2A>|  
|<xref:System.UInt32>|<xref:System.BitConverter.GetBytes%28System.UInt32%29>|<xref:System.BitConverter.ToUInt32%2A>|  
|<xref:System.UInt64>|<xref:System.BitConverter.GetBytes%28System.UInt64%29>|<xref:System.BitConverter.ToUInt64%2A>|  
  
 <span data-ttu-id="00f39-110">사용 하는 경우 <xref:System.BitConverter> 라운드트립 데이터 방법 확인 합니다 <xref:System.BitConverter.GetBytes%2A> 오버 로드 및 `To` *형식* 메서드 같은 유형을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-110">If you use <xref:System.BitConverter> methods to round-trip data, make sure that the <xref:System.BitConverter.GetBytes%2A> overload and the `To`*Type* method specify the same type.</span></span> <span data-ttu-id="00f39-111">다음 예제와 같이 호출 하 여 부호 있는 정수를 나타내는 배열을 복원 된 <xref:System.BitConverter.ToUInt32%2A> 메서드는 원래 값에서 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-111">As the following example illustrates, restoring an array that represents a signed integer by calling the <xref:System.BitConverter.ToUInt32%2A> method can result in a value that is different from the original.</span></span> <span data-ttu-id="00f39-112">자세한 내용은 항목을 참조 하세요 [소수가 아닌 서명 및 비트 값을 사용 하 여 작업](https://go.microsoft.com/fwlink/?LinkId=186999) BCL 팀 블로그의 합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-112">For more information, see the entry [Working with Signed Non-Decimal and Bitwise Values](https://go.microsoft.com/fwlink/?LinkId=186999) in the BCL Team Blog.</span></span>  
  
 [!code-csharp[System.BitConverter.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/example1.cs#3)]
 [!code-vb[System.BitConverter.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/example1.vb#3)]  
  
 <span data-ttu-id="00f39-113">반환 된 배열의 바이트의 순서를 <xref:System.BitConverter.GetBytes%2A> 메서드 오버 로드 (에서 반환한 정수 비트 순서와는 <xref:System.BitConverter.DoubleToInt64Bits%2A> 메서드와에서 반환 하는 16 진수 문자열의 순서는 <xref:System.BitConverter.ToString%28System.Byte%5B%5D%29> 메서드) 여부에 따라 달라 집니다는 컴퓨터 아키텍처에 little endian 인지 big endian 합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-113">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method overloads (as well as the order of bits in the integer returned by the <xref:System.BitConverter.DoubleToInt64Bits%2A> method and the order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%28System.Byte%5B%5D%29> method) depends on whether the computer architecture is little-endian or big-endian.</span></span> <span data-ttu-id="00f39-114">마찬가지로, 배열의 바이트 순서에서 반환 하 고는 `To` *IntegerValue* 메서드 및 <xref:System.BitConverter.ToChar%2A> 방법은 컴퓨터 아키텍처 little endian 인지 big endian 인지에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-114">Similarly, the order of bytes in the array and returned by the `To`*IntegerValue* methods and the <xref:System.BitConverter.ToChar%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span> <span data-ttu-id="00f39-115">아키텍처의 엔디언 나타난 합니다 <xref:System.BitConverter.IsLittleEndian> 반환 하는 속성 `true` little endian 시스템 및 `false` big endian 시스템에서.</span><span class="sxs-lookup"><span data-stu-id="00f39-115">The endianness of an architecture is indicated by the <xref:System.BitConverter.IsLittleEndian> property, which returns `true` on little-endian systems and `false` on big-endian systems.</span></span> <span data-ttu-id="00f39-116">하위 바이트 little endian 시스템에서 상위 바이트 앞에 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-116">On little-endian systems, lower-order bytes precede higher-order bytes.</span></span> <span data-ttu-id="00f39-117">고차 바이트 big endian 시스템에서 낮은 순서 바이트 앞에 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-117">On big-endian system, higher-order bytes precede lower-order bytes.</span></span> <span data-ttu-id="00f39-118">다음 테이블에는 정수 (0x499602D2) 1234567890에서 발생 하는 바이트 배열에서 차이점을 보여 줍니다는 <xref:System.BitConverter.GetBytes%28System.Int32%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-118">The following table illustrates the difference in the byte arrays that result from passing the integer 1,234,567,890 (0x499602D2) to the <xref:System.BitConverter.GetBytes%28System.Int32%29> method.</span></span> <span data-ttu-id="00f39-119">바이트는 인덱스 3에 바이트를 인덱스 0 바이트에서 순서로 나열 됩니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-119">The bytes are listed in order from the byte at index 0 to the byte at index 3.</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="00f39-120">Little endian</span><span class="sxs-lookup"><span data-stu-id="00f39-120">Little-endian</span></span>|<span data-ttu-id="00f39-121">D2-02-96-49</span><span class="sxs-lookup"><span data-stu-id="00f39-121">D2-02-96-49</span></span>|  
|<span data-ttu-id="00f39-122">Big endian</span><span class="sxs-lookup"><span data-stu-id="00f39-122">Big-endian</span></span>|<span data-ttu-id="00f39-123">49-96-02-D2</span><span class="sxs-lookup"><span data-stu-id="00f39-123">49-96-02-D2</span></span>|  
  
 <span data-ttu-id="00f39-124">시스템 아키텍처에 따라 일부 메서드의 반환 값 때문에 컴퓨터 경계를 벗어나 바이트 데이터를 전송할 때는 주의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-124">Because the return value of some methods depends on system architecture, be careful when transmitting byte data beyond machine boundaries:</span></span>  
  
-   <span data-ttu-id="00f39-125">모든 시스템 데이터를 보내고 동일한 엔디언 하도록 보장 되므로 아무 데이터에 수행 했습니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-125">If all systems sending and receiving data are guaranteed to have the same endianness, nothing has be done to the data.</span></span>  
  
-   <span data-ttu-id="00f39-126">시스템 데이터를 보내고 다른 엔디언 수 있으면 항상 특정 순서로 데이터를 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-126">If systems sending and receiving data can have different endianness, always transmit data in a particular order.</span></span> <span data-ttu-id="00f39-127">즉, 배열의 바이트 순서의 보내기 전이나 후 받은 후 되돌릴 수 해야 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-127">This means that the order of bytes in the array may have to be reversed either before sending them or after receiving them.</span></span> <span data-ttu-id="00f39-128">일반적인 규칙을 네트워크 바이트 순서 (big endian 순서)는 데이터를 전송 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-128">A common convention is to transmit data in network byte order (big-endian order).</span></span> <span data-ttu-id="00f39-129">다음 예제에서는 정수 값을 네트워크 바이트 순서로 전송에 대 한 구현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-129">The following example provides an implementation for sending an integer value in network byte order.</span></span>  
  
     [!code-csharp[System.BitConverter.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/networkorder1.cs#4)]
     [!code-vb[System.BitConverter.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/networkorder1.vb#4)]  
  
-   <span data-ttu-id="00f39-130">시스템 데이터 보내기 및 받기 수 다른 엔디언 있고 부호 있는 정수 구성 데이터를 전송할 경우 호출 된 <xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType> 네트워크 바이트 순서로 데이터를 변환 하는 방법 및 <xref:System.Net.IPAddress.NetworkToHostOrder%2A?displayProperty=nameWithType> 필요한 순서를 변환 하는 방법 받는 사람이 합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-130">If systems sending and receiving data can have different endianness and the data to be transmitted consists of signed integers, call the <xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType> method to convert the data to network byte order and the <xref:System.Net.IPAddress.NetworkToHostOrder%2A?displayProperty=nameWithType> method to convert it to the order required by the recipient.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-131">다음 코드 예제에는 일부의 사용 방법을 보여 줍니다. <xref:System.BitConverter> 메서드 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-131">The following code example illustrates the use of several <xref:System.BitConverter> class methods.</span></span>  
  
 [!code-cpp[System.BitConverter.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.Class/CPP/bitconv.cpp#1)]
 [!code-csharp[System.BitConverter.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/bitconv.cs#1)]
 [!code-vb[System.BitConverter.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/bitconv.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Byte" />
  </Docs>
  <Members>
    <Member MemberName="DoubleToInt64Bits">
      <MemberSignature Language="C#" Value="public static long DoubleToInt64Bits (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DoubleToInt64Bits(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.DoubleToInt64Bits(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DoubleToInt64Bits (value As Double) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DoubleToInt64Bits(double value);" />
      <MemberSignature Language="F#" Value="static member DoubleToInt64Bits : double -&gt; int64" Usage="System.BitConverter.DoubleToInt64Bits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-132">변환할 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-132">The number to convert.</span></span></param>
        <summary><span data-ttu-id="00f39-133">지정된 배정밀도 부동 소수점 숫자를 64비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-133">Converts the specified double-precision floating point number to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="00f39-134"><paramref name="value" />의 값에 해당하는 64비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-134">A 64-bit signed integer whose value is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-135">반환한 정수 비트의 순서는 <xref:System.BitConverter.DoubleToInt64Bits%2A> 방법은 컴퓨터 아키텍처 little endian 인지 big endian 인지에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-135">The order of bits in the integer returned by the <xref:System.BitConverter.DoubleToInt64Bits%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-136">다음 코드 예제에서는 변환의 여러 비트 패턴 <xref:System.Double> 값을 <xref:System.Int64> 값으로 `DoubleToInt64Bits` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-136">The following code example converts the bit patterns of several <xref:System.Double> values to <xref:System.Int64> values with the `DoubleToInt64Bits` method.</span></span>  
  
 [!code-cpp[System.BitConverter.DoubleInt64#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CPP/dbltobits.cpp#2)]
 [!code-csharp[System.BitConverter.DoubleInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CS/dbltobits.cs#2)]
 [!code-vb[System.BitConverter.DoubleInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/VB/dbltobits.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.Int64BitsToDouble(System.Int64)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00f39-137">지정된 데이터를 바이트 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-137">Converts the specified data to an array of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(bool value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : bool -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-138">부울 값입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-138">A Boolean value.</span></span></param>
        <summary><span data-ttu-id="00f39-139">지정된 부울 값을 바이트 배열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-139">Returns the specified Boolean value as a byte array.</span></span></summary>
        <returns><span data-ttu-id="00f39-140">길이가 1 인 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-140">A byte array with length 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-141">바이트 배열로 변환할 수 있습니다 다시를 <xref:System.Boolean> 를 호출 하 여 값을 <xref:System.BitConverter.ToBoolean%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-141">You can convert a byte array back to a <xref:System.Boolean> value by calling the <xref:System.BitConverter.ToBoolean%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-142">다음 예제에서는 변환의 비트 패턴 <xref:System.Boolean> 값을 <xref:System.Byte> 사용 하 여 배열을 `GetBytes` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-142">The following example converts the bit patterns of <xref:System.Boolean> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/bytesbool.cpp#1)]
 [!code-csharp[System.BitConverter.GetBytes.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/bytesbool.cs#1)]
 [!code-vb[System.BitConverter.GetBytes.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/bytesbool.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Char) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(char value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : char -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-143">변환할 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-143">A character to convert.</span></span></param>
        <summary><span data-ttu-id="00f39-144">지정된 유니코드 문자 값을 바이트 배열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-144">Returns the specified Unicode character value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="00f39-145">길이가 2인 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-145">An array of bytes with length 2.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-146">반환 된 배열의 바이트의 순서는 <xref:System.BitConverter.GetBytes%2A> 방법은 컴퓨터 아키텍처 little endian 인지 big endian 인지에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-146">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-147">다음 코드 예제에서는 변환의 비트 패턴 <xref:System.Char> (유니코드 문자) 값 <xref:System.Byte> 사용 하 여 배열을 `GetBytes` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-147">The following code example converts the bit patterns of <xref:System.Char> values (Unicode characters) to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.Others#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/byteschar.cpp#2)]
 [!code-csharp[System.BitConverter.GetBytes.Others#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/byteschar.cs#2)]
 [!code-vb[System.BitConverter.GetBytes.Others#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/byteschar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToChar(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Double) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(double value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : double -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-148">변환할 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-148">The number to convert.</span></span></param>
        <summary><span data-ttu-id="00f39-149">지정된 배정밀도 부동 소수점 값을 바이트 배열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-149">Returns the specified double-precision floating point value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="00f39-150">길이가 8인 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-150">An array of bytes with length 8.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-151">반환 된 배열의 바이트의 순서는 <xref:System.BitConverter.GetBytes%2A> 방법은 컴퓨터 아키텍처 little endian 인지 big endian 인지에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-151">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-152">다음 코드 예제에서는 변환의 비트 패턴 <xref:System.Double> 값을 <xref:System.Byte> 사용 하 여 배열을 `GetBytes` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-152">The following code example converts the bit patterns of <xref:System.Double> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.Others#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/bytesdouble.cpp#4)]
 [!code-csharp[System.BitConverter.GetBytes.Others#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/bytesdouble.cs#4)]
 [!code-vb[System.BitConverter.GetBytes.Others#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/bytesdouble.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Short) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(short value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : int16 -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-153">변환할 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-153">The number to convert.</span></span></param>
        <summary><span data-ttu-id="00f39-154">지정된 16비트 부호 있는 정수 값을 바이트 배열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-154">Returns the specified 16-bit signed integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="00f39-155">길이가 2인 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-155">An array of bytes with length 2.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-156">반환 된 배열의 바이트의 순서는 <xref:System.BitConverter.GetBytes%2A> 방법은 컴퓨터 아키텍처 little endian 인지 big endian 인지에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-156">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-157">다음 코드 예제에서는 변환의 비트 패턴 <xref:System.Int16> 값을 <xref:System.Byte> 사용 하 여 배열을 `GetBytes` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-157">The following code example converts the bit patterns of <xref:System.Int16> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CPP/bytesint16.cpp#3)]
 [!code-csharp[System.BitConverter.GetBytes.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CS/bytesint16.cs#3)]
 [!code-vb[System.BitConverter.GetBytes.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/VB/bytesint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(int value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : int -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-158">변환할 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-158">The number to convert.</span></span></param>
        <summary><span data-ttu-id="00f39-159">지정된 32비트 부호 있는 정수 값을 바이트 배열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-159">Returns the specified 32-bit signed integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="00f39-160">길이가 4인 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-160">An array of bytes with length 4.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-161">반환 된 배열의 바이트의 순서는 <xref:System.BitConverter.GetBytes%2A> 방법은 컴퓨터 아키텍처 little endian 인지 big endian 인지에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-161">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-162">다음 코드 예제에서는 변환의 비트 패턴 <xref:System.Int32> 값을 <xref:System.Byte> 사용 하 여 배열을 `GetBytes` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-162">The following code example converts the bit patterns of <xref:System.Int32> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.SInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CPP/bytesint32.cpp#2)]
 [!code-csharp[System.BitConverter.GetBytes.SInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CS/bytesint32.cs#2)]
 [!code-vb[System.BitConverter.GetBytes.SInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/VB/bytesint32.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Long) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(long value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : int64 -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-163">변환할 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-163">The number to convert.</span></span></param>
        <summary><span data-ttu-id="00f39-164">지정된 64비트 부호 있는 정수 값을 바이트 배열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-164">Returns the specified 64-bit signed integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="00f39-165">길이가 8인 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-165">An array of bytes with length 8.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-166">반환 된 배열의 바이트의 순서는 <xref:System.BitConverter.GetBytes%2A> 방법은 컴퓨터 아키텍처 little endian 인지 big endian 인지에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-166">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-167">다음 예제에서는 합니다 <xref:System.BitConverter.GetBytes%2A> 의 각 요소를 변환 하는 메서드는 <xref:System.Int64> 배열을 <xref:System.Byte> 배열.</span><span class="sxs-lookup"><span data-stu-id="00f39-167">The following example calls the <xref:System.BitConverter.GetBytes%2A> method to convert each element in an <xref:System.Int64> array to a <xref:System.Byte> arrays.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CPP/bytesint64.cpp#1)]
 [!code-csharp[System.BitConverter.GetBytes.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CS/bytesint64.cs#1)]
 [!code-vb[System.BitConverter.GetBytes.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/VB/bytesint64.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Single) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(float value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : single -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-168">변환할 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-168">The number to convert.</span></span></param>
        <summary><span data-ttu-id="00f39-169">지정된 단정밀도 부동 소수점 값을 바이트 배열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-169">Returns the specified single-precision floating point value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="00f39-170">길이가 4인 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-170">An array of bytes with length 4.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-171">반환 된 배열의 바이트의 순서는 <xref:System.BitConverter.GetBytes%2A> 방법은 컴퓨터 아키텍처 little endian 인지 big endian 인지에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-171">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-172">다음 코드 예제에서는 변환의 비트 패턴 <xref:System.Single> 값을 <xref:System.Byte> 사용 하 여 배열을 `GetBytes` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-172">The following code example converts the bit patterns of <xref:System.Single> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.Others#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/bytessingle.cpp#3)]
 [!code-csharp[System.BitConverter.GetBytes.Others#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/bytessingle.cs#3)]
 [!code-vb[System.BitConverter.GetBytes.Others#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/bytessingle.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As UShort) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : uint16 -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-173">변환할 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-173">The number to convert.</span></span></param>
        <summary><span data-ttu-id="00f39-174">지정된 16비트 부호 없는 정수 값을 바이트 배열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-174">Returns the specified 16-bit unsigned integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="00f39-175">길이가 2인 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-175">An array of bytes with length 2.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-176">반환 된 배열의 바이트의 순서는 <xref:System.BitConverter.GetBytes%2A> 방법은 컴퓨터 아키텍처 little endian 인지 big endian 인지에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-176">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-177">다음 코드 예제에서는 변환의 비트 패턴 <xref:System.UInt16> 값을 <xref:System.Byte> 사용 하 여 배열을 `GetBytes` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-177">The following code example converts the bit patterns of <xref:System.UInt16> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CPP/bytesuint16.cpp#3)]
 [!code-csharp[System.BitConverter.GetBytes.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CS/bytesuint16.cs#3)]
 [!code-vb[System.BitConverter.GetBytes.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/VB/bytesuint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As UInteger) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : uint32 -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-178">변환할 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-178">The number to convert.</span></span></param>
        <summary><span data-ttu-id="00f39-179">지정된 32비트 부호 없는 정수 값을 바이트 배열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-179">Returns the specified 32-bit unsigned integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="00f39-180">길이가 4인 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-180">An array of bytes with length 4.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-181">반환 된 배열의 바이트의 순서는 <xref:System.BitConverter.GetBytes%2A> 방법은 컴퓨터 아키텍처 little endian 인지 big endian 인지에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-181">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-182">다음 코드 예제에서는 변환의 비트 패턴 <xref:System.UInt32> 값을 <xref:System.Byte> 사용 하 여 배열을 `GetBytes` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-182">The following code example converts the bit patterns of <xref:System.UInt32> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CPP/bytesuint32.cpp#2)]
 [!code-csharp[System.BitConverter.GetBytes.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CS/bytesuint32.cs#2)]
 [!code-vb[System.BitConverter.GetBytes.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/VB/bytesuint32.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As ULong) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : uint64 -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-183">변환할 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-183">The number to convert.</span></span></param>
        <summary><span data-ttu-id="00f39-184">지정된 64비트 부호 없는 정수 값을 바이트 배열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-184">Returns the specified 64-bit unsigned integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="00f39-185">길이가 8인 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-185">An array of bytes with length 8.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-186">반환 된 배열의 바이트의 순서는 <xref:System.BitConverter.GetBytes%2A> 방법은 컴퓨터 아키텍처 little endian 인지 big endian 인지에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-186">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-187">다음 코드 예제에서는 변환의 비트 패턴 <xref:System.UInt64> 값을 <xref:System.Byte> 사용 하 여 배열을 `GetBytes` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-187">The following code example converts the bit patterns of <xref:System.UInt64> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CPP/bytesuint64.cpp#1)]
 [!code-csharp[System.BitConverter.GetBytes.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CS/bytesuint64.cs#1)]
 [!code-vb[System.BitConverter.GetBytes.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/VB/bytesuint64.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Int32BitsToSingle">
      <MemberSignature Language="C#" Value="public static float Int32BitsToSingle (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Int32BitsToSingle(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.Int32BitsToSingle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Int32BitsToSingle (value As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Int32BitsToSingle(int value);" />
      <MemberSignature Language="F#" Value="static member Int32BitsToSingle : int -&gt; single" Usage="System.BitConverter.Int32BitsToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Int64BitsToDouble">
      <MemberSignature Language="C#" Value="public static double Int64BitsToDouble (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Int64BitsToDouble(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.Int64BitsToDouble(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Int64BitsToDouble (value As Long) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Int64BitsToDouble(long value);" />
      <MemberSignature Language="F#" Value="static member Int64BitsToDouble : int64 -&gt; double" Usage="System.BitConverter.Int64BitsToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-188">변환할 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-188">The number to convert.</span></span></param>
        <summary><span data-ttu-id="00f39-189">지정된 64비트 부호 있는 정수를 배정밀도 부동 소수점 숫자로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-189">Converts the specified 64-bit signed integer to a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="00f39-190"><paramref name="value" />에 해당하는 배정밀도 부동 소수점 수입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-190">A double-precision floating point number whose value is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-191">일반적으로 `value` 에서 반환 되는 정수가 <xref:System.BitConverter.DoubleToInt64Bits%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-191">Typically, `value` is an integer that is returned by the <xref:System.BitConverter.DoubleToInt64Bits%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-192">다음 코드 예제에서는 변환의 여러 비트 패턴 <xref:System.Int64> 값을 <xref:System.Double> 값으로 `Int64BitsToDouble` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-192">The following code example converts the bit patterns of several <xref:System.Int64> values to <xref:System.Double> values with the `Int64BitsToDouble` method.</span></span>  
  
 [!code-cpp[System.BitConverter.DoubleInt64#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CPP/bitstodbl.cpp#1)]
 [!code-csharp[System.BitConverter.DoubleInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CS/bitstodbl.cs#1)]
 [!code-vb[System.BitConverter.DoubleInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/VB/bitstodbl.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.DoubleToInt64Bits(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="IsLittleEndian">
      <MemberSignature Language="C#" Value="public static readonly bool IsLittleEndian;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly bool IsLittleEndian" />
      <MemberSignature Language="DocId" Value="F:System.BitConverter.IsLittleEndian" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsLittleEndian As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly bool IsLittleEndian;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsLittleEndian : bool" Usage="System.BitConverter.IsLittleEndian" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00f39-193">이 컴퓨터 아키텍처에서 데이터가 저장되는 바이트 순서("endian")를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-193">Indicates the byte order ("endianness") in which data is stored in this computer architecture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-194">여러 컴퓨터 아키텍처는 서로 다른 바이트 순서를 사용 하 여 데이터를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-194">Different computer architectures store data using different byte orders.</span></span> <span data-ttu-id="00f39-195">"Big-endian" 최상위 바이트는 단어의 왼쪽된 끝을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-195">"Big-endian" means the most significant byte is on the left end of a word.</span></span> <span data-ttu-id="00f39-196">"Little-endian" 단어의 오른쪽 끝에서 가장 중요 한 바이트는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-196">"Little-endian" means the most significant byte is on the right end of a word.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00f39-197">값을 검색 하지 않고 바이트 순서는 호스트 컴퓨터의 네트워크 바이트 순서에서 변환할 수는 <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> 16 비트, 32 비트 또는 64 비트 정수를 전달 하 여 필드를 <xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-197">You can convert from network byte order to the byte order of the host computer without retrieving  the value of the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> field by passing a 16-bit, 32-bit, or 64 bit integer to the <xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-198">다음 코드 예제에서는 `IsLittleEndian` 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-198">The following code example illustrates the use of the `IsLittleEndian` field.</span></span>  
  
 [!code-cpp[System.BitConverter.Class#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.Class/CPP/littleend.cpp#2)]
 [!code-csharp[System.BitConverter.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/littleend.cs#2)]
 [!code-vb[System.BitConverter.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/littleend.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleToInt32Bits">
      <MemberSignature Language="C#" Value="public static int SingleToInt32Bits (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SingleToInt32Bits(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.SingleToInt32Bits(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SingleToInt32Bits (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SingleToInt32Bits(float value);" />
      <MemberSignature Language="F#" Value="static member SingleToInt32Bits : single -&gt; int" Usage="System.BitConverter.SingleToInt32Bits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToBoolean(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="System.BitConverter.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Byte(), startIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : byte[] * int -&gt; bool" Usage="System.BitConverter.ToBoolean (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-199">바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-199">A byte array.</span></span></param>
        <param name="startIndex"><span data-ttu-id="00f39-200"><paramref name="value" /> 내에 있는 바이트의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-200">The index of the byte within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="00f39-201">바이트에서 변환된 부울 값을 바이트 배열의 지정된 위치에 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-201">Returns a Boolean value converted from the byte at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="00f39-202"><paramref name="startIndex" />의 <paramref name="value" />에 있는 바이트가 0이 아니면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-202"><see langword="true" /> if the byte at <paramref name="startIndex" /> in <paramref name="value" /> is nonzero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-203">변환 하는 <xref:System.Boolean> 값을 바이트 표현, 호출을 <xref:System.BitConverter.ToBoolean%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-203">To convert a <xref:System.Boolean> value to its byte representation, call the <xref:System.BitConverter.ToBoolean%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-204">요소를 변환 하는 다음 코드 예제 <xref:System.Byte> 배열의 <xref:System.Boolean> 값으로 `ToBoolean` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-204">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Boolean> values with the `ToBoolean` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batobool.cpp#1)]
 [!code-csharp[System.BitConverter.ToXXX.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batobool.cs#1)]
 [!code-vb[System.BitConverter.ToXXX.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batobool.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00f39-205"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-205"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00f39-206"><paramref name="startIndex" />가 0보다 작거나 <paramref name="value" /> - 1의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-206"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToChar(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As ReadOnlySpan(Of Byte)) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToChar : ReadOnlySpan&lt;byte&gt; -&gt; char" Usage="System.BitConverter.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToChar(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Byte(), startIndex As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToChar : byte[] * int -&gt; char" Usage="System.BitConverter.ToChar (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-207">배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-207">An array.</span></span></param>
        <param name="startIndex"><span data-ttu-id="00f39-208"><paramref name="value" /> 내의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-208">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="00f39-209">2바이트에서 변환된 유니코드 문자를 바이트 배열의 지정된 위치에 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-209">Returns a Unicode character converted from two bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="00f39-210"><paramref name="startIndex" />에서 시작하고 2바이트로 형성된 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-210">A character formed by two bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-211"><xref:System.BitConverter.ToChar%2A> 메서드는 바이트 인덱스에서 변환 `startIndex` 를 `startIndex` + 1을 <xref:System.Char> 값.</span><span class="sxs-lookup"><span data-stu-id="00f39-211">The <xref:System.BitConverter.ToChar%2A> method converts the bytes from index `startIndex` to `startIndex` + 1 to a <xref:System.Char> value.</span></span> <span data-ttu-id="00f39-212">배열의 바이트의 순서는 컴퓨터 시스템의 아키텍처의 엔디언 반영 해야 합니다. 자세한 내용은의 설명 섹션을 참조 하십시오.는 <xref:System.BitConverter> 클래스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-212">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-213">요소를 변환 하는 다음 코드 예제 <xref:System.Byte> 배열의 <xref:System.Char> 값 (유니코드 문자)는 `ToChar` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-213">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Char> values (Unicode characters) with the `ToChar` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.Others#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batochar.cpp#2)]
 [!code-csharp[System.BitConverter.ToXXX.Others#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batochar.cs#2)]
 [!code-vb[System.BitConverter.ToXXX.Others#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batochar.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="00f39-214"><paramref name="startIndex" />가 <paramref name="value" />의 길이에서 1을 뺀 값과 같은 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-214"><paramref name="startIndex" /> equals the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00f39-215"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-215"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00f39-216"><paramref name="startIndex" />가 0보다 작거나 <paramref name="value" /> - 1의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-216"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToDouble(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As ReadOnlySpan(Of Byte)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : ReadOnlySpan&lt;byte&gt; -&gt; double" Usage="System.BitConverter.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Byte(), startIndex As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToDouble : byte[] * int -&gt; double" Usage="System.BitConverter.ToDouble (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-217">바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-217">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="00f39-218"><paramref name="value" /> 내의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-218">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="00f39-219">8바이트에서 변환된 배정밀도 부동 소수점 숫자를 바이트 배열의 지정된 위치에 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-219">Returns a double-precision floating point number converted from eight bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="00f39-220"><paramref name="startIndex" />에서 시작하고 8바이트로 형성된 배정밀도 부동 소수점 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-220">A double precision floating point number formed by eight bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-221"><xref:System.BitConverter.ToDouble%2A> 메서드는 바이트 인덱스에서 변환 `startIndex` 에 `startIndex` + 7를 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-221">The <xref:System.BitConverter.ToDouble%2A> method converts the bytes from index `startIndex` to `startIndex` + 7 to a <xref:System.Double> value.</span></span> <span data-ttu-id="00f39-222">배열의 바이트의 순서는 컴퓨터 시스템의 아키텍처의 엔디언 반영 해야 합니다. 자세한 내용은의 설명 섹션을 참조 하십시오.는 <xref:System.BitConverter> 클래스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-222">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-223">요소를 변환 하는 다음 코드 예제 <xref:System.Byte> 배열의 <xref:System.Double> 값으로 `ToDouble` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-223">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Double> values with the `ToDouble` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.Others#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batodouble.cpp#3)]
 [!code-csharp[System.BitConverter.ToXXX.Others#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batodouble.cs#3)]
 [!code-vb[System.BitConverter.ToXXX.Others#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batodouble.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="00f39-224"><paramref name="startIndex" />가 <paramref name="value" />의 길이에서 7을 뺀 값보다 크거나 같고 <paramref name="value" />의 길이에서 1을 뺀 값보다 작거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-224"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 7, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00f39-225"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-225"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00f39-226"><paramref name="startIndex" />가 0보다 작거나 <paramref name="value" /> - 1의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-226"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt16(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As ReadOnlySpan(Of Byte)) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : ReadOnlySpan&lt;byte&gt; -&gt; int16" Usage="System.BitConverter.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Byte(), startIndex As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : byte[] * int -&gt; int16" Usage="System.BitConverter.ToInt16 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-227">바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-227">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="00f39-228"><paramref name="value" /> 내의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-228">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="00f39-229">2바이트에서 변환된 16비트 부호 있는 정수를 바이트 배열의 지정된 위치에 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-229">Returns a 16-bit signed integer converted from two bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="00f39-230"><paramref name="startIndex" />에서 시작하고 2바이트로 형성된 16비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-230">A 16-bit signed integer formed by two bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-231"><xref:System.BitConverter.ToInt16%2A> 메서드는 바이트 인덱스에서 변환 `startIndex` 를 `startIndex` + 1로는 <xref:System.Int16> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-231">The <xref:System.BitConverter.ToInt16%2A> method converts the bytes from index `startIndex` to `startIndex` + 1 to an <xref:System.Int16> value.</span></span> <span data-ttu-id="00f39-232">배열의 바이트의 순서는 컴퓨터 시스템의 아키텍처의 엔디언 반영 해야 합니다. 자세한 내용은의 설명 섹션을 참조 하십시오.는 <xref:System.BitConverter> 클래스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-232">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-233">요소를 변환 하는 다음 코드 예제 <xref:System.Byte> 배열의 <xref:System.Int16> 값으로 `ToInt16` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-233">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Int16> values with the `ToInt16` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CPP/batoint16.cpp#1)]
 [!code-csharp[System.BitConverter.ToXXX.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CS/batoint16.cs#1)]
 [!code-vb[System.BitConverter.ToXXX.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/VB/batoint16.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="00f39-234"><paramref name="startIndex" />가 <paramref name="value" />의 길이에서 1을 뺀 값과 같은 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-234"><paramref name="startIndex" /> equals the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00f39-235"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-235"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00f39-236"><paramref name="startIndex" />가 0보다 작거나 <paramref name="value" /> - 1의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-236"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Int16)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt32(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="System.BitConverter.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Byte(), startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : byte[] * int -&gt; int" Usage="System.BitConverter.ToInt32 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-237">바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-237">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="00f39-238"><paramref name="value" /> 내의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-238">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="00f39-239">4바이트에서 변환된 32비트 부호 있는 정수를 바이트 배열의 지정된 위치에 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-239">Returns a 32-bit signed integer converted from four bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="00f39-240"><paramref name="startIndex" />에서 시작하고 4바이트로 형성된 32비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-240">A 32-bit signed integer formed by four bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-241"><xref:System.BitConverter.ToInt32%2A> 메서드는 바이트 인덱스에서 변환 `startIndex` 에 `startIndex` + 3는 <xref:System.Int32> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-241">The <xref:System.BitConverter.ToInt32%2A> method converts the bytes from index `startIndex` to `startIndex` + 3 to an <xref:System.Int32> value.</span></span> <span data-ttu-id="00f39-242">배열의 바이트의 순서는 컴퓨터 시스템의 아키텍처의 엔디언 반영 해야 합니다. 자세한 내용은의 설명 섹션을 참조 하세요. <xref:System.BitConverter>합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-242">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of <xref:System.BitConverter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-243">다음 예제에서는 합니다 <xref:System.BitConverter.ToInt32%2A> 메서드를 <xref:System.Int32> 4 바이트 배열에서 8 바이트 배열을 위 4 바이트 값입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-243">The following example uses the <xref:System.BitConverter.ToInt32%2A> method to create <xref:System.Int32> values from a four-byte array and from the upper four bytes of an eight-byte array.</span></span> <span data-ttu-id="00f39-244">또한 사용 하 여는 <xref:System.BitConverter.GetBytes%28System.Int32%29> 하 고 <xref:System.BitConverter.ToInt32%2A> 라운드트립 하는 메서드는 <xref:System.Int32> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-244">It also uses the <xref:System.BitConverter.GetBytes%28System.Int32%29> and <xref:System.BitConverter.ToInt32%2A> methods to round-trip an <xref:System.Int32> value.</span></span>  
  
 [!code-csharp[System.BitConverter.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.bitconverter.toint32/cs/toint32.cs#1)]
 [!code-vb[System.BitConverter.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.bitconverter.toint32/vb/toint32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="00f39-245"><paramref name="startIndex" />가 <paramref name="value" />의 길이에서 3을 뺀 값보다 크거나 같고 <paramref name="value" />의 길이에서 1을 뺀 값보다 작거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-245"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 3, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00f39-246"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-246"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00f39-247"><paramref name="startIndex" />가 0보다 작거나 <paramref name="value" /> - 1의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-247"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt64(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As ReadOnlySpan(Of Byte)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : ReadOnlySpan&lt;byte&gt; -&gt; int64" Usage="System.BitConverter.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Byte(), startIndex As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : byte[] * int -&gt; int64" Usage="System.BitConverter.ToInt64 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-248">바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-248">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="00f39-249"><paramref name="value" /> 내의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-249">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="00f39-250">8바이트에서 변환된 64비트 부호 있는 정수를 바이트 배열의 지정된 위치에 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-250">Returns a 64-bit signed integer converted from eight bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="00f39-251"><paramref name="startIndex" />에서 시작하고 8바이트로 형성된 64비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-251">A 64-bit signed integer formed by eight bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-252"><xref:System.BitConverter.ToInt64%2A> 메서드는 바이트 인덱스에서 변환 `startIndex` 에 `startIndex` + 7를 <xref:System.Int64> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-252">The <xref:System.BitConverter.ToInt64%2A> method converts the bytes from index `startIndex` to `startIndex` + 7 to a <xref:System.Int64> value.</span></span> <span data-ttu-id="00f39-253">배열의 바이트의 순서는 컴퓨터 시스템의 아키텍처의 엔디언 반영 해야 합니다. 자세한 내용은의 설명 섹션을 참조 하십시오.는 <xref:System.BitConverter> 클래스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-253">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-254">요소를 변환 하는 다음 코드 예제 <xref:System.Byte> 배열의 <xref:System.Int64> 값으로 `ToInt64` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-254">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Int64> values with the `ToInt64` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CPP/batoint64.cpp#3)]
 [!code-csharp[System.BitConverter.ToXXX.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CS/batoint64.cs#3)]
 [!code-vb[System.BitConverter.ToXXX.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/VB/batoint64.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="00f39-255"><paramref name="startIndex" />가 <paramref name="value" />의 길이에서 7을 뺀 값보다 크거나 같고 <paramref name="value" />의 길이에서 1을 뺀 값보다 작거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-255"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 7, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00f39-256"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-256"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00f39-257"><paramref name="startIndex" />가 0보다 작거나 <paramref name="value" /> - 1의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-257"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToSingle(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As ReadOnlySpan(Of Byte)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : ReadOnlySpan&lt;byte&gt; -&gt; single" Usage="System.BitConverter.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Byte(), startIndex As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToSingle : byte[] * int -&gt; single" Usage="System.BitConverter.ToSingle (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-258">바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-258">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="00f39-259"><paramref name="value" /> 내의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-259">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="00f39-260">4바이트에서 변환된 단정밀도 부동 소수점 숫자를 바이트 배열의 지정된 위치에 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-260">Returns a single-precision floating point number converted from four bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="00f39-261"><paramref name="startIndex" />에서 시작하고 4바이트로 형성된 단정밀도 부동 소수점 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-261">A single-precision floating point number formed by four bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-262"><xref:System.BitConverter.ToSingle%2A> 메서드는 바이트 인덱스에서 변환 `startIndex` 를 `startIndex` + 3을 <xref:System.Single> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-262">The <xref:System.BitConverter.ToSingle%2A> method converts the bytes from index `startIndex` to `startIndex` + 3 to a <xref:System.Single> value.</span></span> <span data-ttu-id="00f39-263">배열의 바이트의 순서는 컴퓨터 시스템의 아키텍처의 엔디언 반영 해야 합니다. 자세한 내용은의 설명 섹션을 참조 하세요. <xref:System.BitConverter>합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-263">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of <xref:System.BitConverter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-264">요소를 변환 하는 다음 코드 예제 <xref:System.Byte> 배열의 <xref:System.Single> 값으로 `ToSingle` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-264">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Single> values with the `ToSingle` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.Others#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batosingle.cpp#4)]
 [!code-csharp[System.BitConverter.ToXXX.Others#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batosingle.cs#4)]
 [!code-vb[System.BitConverter.ToXXX.Others#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batosingle.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="00f39-265"><paramref name="startIndex" />가 <paramref name="value" />의 길이에서 3을 뺀 값보다 크거나 같고 <paramref name="value" />의 길이에서 1을 뺀 값보다 작거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-265"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 3, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00f39-266"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-266"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00f39-267"><paramref name="startIndex" />가 0보다 작거나 <paramref name="value" /> - 1의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-267"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Single)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00f39-268">지정된 바이트 배열의 각 요소 숫자 값을 해당하는 16진수 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-268">Converts the numeric value of each element of a specified array of bytes to its equivalent hexadecimal string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToString(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToString : byte[] -&gt; string" Usage="System.BitConverter.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-269">바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-269">An array of bytes.</span></span></param>
        <summary><span data-ttu-id="00f39-270">지정된 바이트 배열의 각 요소 숫자 값을 해당하는 16진수 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-270">Converts the numeric value of each element of a specified array of bytes to its equivalent hexadecimal string representation.</span></span></summary>
        <returns><span data-ttu-id="00f39-271">하이픈으로 구분된 16진수 쌍의 문자열이며 여기에서 각 쌍은 <paramref name="value" />;의 해당 요소(예: "7F-2C-4A-00")를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-271">A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in <paramref name="value" />; for example, "7F-2C-4A-00".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-272">모든 요소가 `value` 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-272">All the elements of `value` are converted.</span></span> <span data-ttu-id="00f39-273">반환 하는 16 진수 문자열의 순서는 <xref:System.BitConverter.ToString%2A> 방법은 컴퓨터 아키텍처 little endian 인지 big endian 인지에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-273">The order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-274">다음 코드 예제에서는 <xref:System.Byte> 배열의 <xref:System.String> 사용 하 여 개체를 `ToString` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-274">The following code example converts <xref:System.Byte> arrays to <xref:System.String> objects with the `ToString` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToString/CPP/batostring.cpp#1)]
 [!code-csharp[System.BitConverter.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToString/CS/batostring.cs#1)]
 [!code-vb[System.BitConverter.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToString/VB/batostring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00f39-275"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-275"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToString(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte(), startIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToString : byte[] * int -&gt; string" Usage="System.BitConverter.ToString (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-276">바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-276">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="00f39-277"><paramref name="value" /> 내의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-277">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="00f39-278">지정된 바이트 하위 배열의 각 요소 숫자 값을 해당하는 16진수 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-278">Converts the numeric value of each element of a specified subarray of bytes to its equivalent hexadecimal string representation.</span></span></summary>
        <returns><span data-ttu-id="00f39-279">하이픈으로 구분된 16진수 쌍의 문자열이며 여기에서 각 쌍은 <paramref name="value" />;의 하위 배열에서 해당 요소(예: "7F-2C-4A-00")를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-279">A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in a subarray of <paramref name="value" />; for example, "7F-2C-4A-00".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-280">배열 위치에서 요소 `startIndex` 배열의 끝에 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-280">The elements from array position `startIndex` to the end of the array are converted.</span></span> <span data-ttu-id="00f39-281">반환 하는 16 진수 문자열의 순서는 <xref:System.BitConverter.ToString%2A> 방법은 컴퓨터 아키텍처 little endian 인지 big endian 인지에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-281">The order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-282">일부를 변환 하는 다음 코드 예제는 <xref:System.Byte> 배열의 지정 된 시작 `startIndex` 에 <xref:System.String> 사용 하 여는 `ToString` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-282">The following code example converts the part of a <xref:System.Byte> array starting at the specified `startIndex` to a <xref:System.String> with the `ToString` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToString/CPP/batostringii.cpp#2)]
 [!code-csharp[System.BitConverter.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToString/CS/batostringii.cs#2)]
 [!code-vb[System.BitConverter.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToString/VB/batostringii.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00f39-283"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-283"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00f39-284"><paramref name="startIndex" />가 0보다 작거나 <paramref name="value" /> - 1의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-284"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte[] value, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8[] value, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte(), startIndex As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;System::Byte&gt; ^ value, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member ToString : byte[] * int * int -&gt; string" Usage="System.BitConverter.ToString (value, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-285">바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-285">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="00f39-286"><paramref name="value" /> 내의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-286">The starting position within <paramref name="value" />.</span></span></param>
        <param name="length"><span data-ttu-id="00f39-287"><paramref name="value" />의 배열 요소 중에서 변환할 배열 요소의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-287">The number of array elements in <paramref name="value" /> to convert.</span></span></param>
        <summary><span data-ttu-id="00f39-288">지정된 바이트 하위 배열의 각 요소 숫자 값을 해당하는 16진수 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-288">Converts the numeric value of each element of a specified subarray of bytes to its equivalent hexadecimal string representation.</span></span></summary>
        <returns><span data-ttu-id="00f39-289">하이픈으로 구분된 16진수 쌍의 문자열이며 여기에서 각 쌍은 <paramref name="value" />;의 하위 배열에서 해당 요소(예: "7F-2C-4A-00")를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-289">A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in a subarray of <paramref name="value" />; for example, "7F-2C-4A-00".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-290">합니다 `length` 배열 위치에서 요소 `startIndex` 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-290">The `length` elements from array position `startIndex` are converted.</span></span> <span data-ttu-id="00f39-291">하는 경우 `length` 가 0 이면 메서드는 반환 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-291">If `length` equals zero, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="00f39-292">반환 하는 16 진수 문자열의 순서는 <xref:System.BitConverter.ToString%2A> 방법은 컴퓨터 아키텍처 little endian 인지 big endian 인지에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-292">The order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-293">다음 예제에서는 합니다 <xref:System.BitConverter.ToString%2A> 부터 지정 된 바이트 배열의 일부를 변환 하는 방법 `startIndex` 지정 된 `length`, 문자열로 합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-293">The following example uses the <xref:System.BitConverter.ToString%2A> method to convert part of a byte array, starting at the specified `startIndex` and with the specified `length`, to a string.</span></span>  
  
 [!code-cpp[System.BitConverter.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToString/CPP/batostringii.cpp#2)]
 [!code-csharp[System.BitConverter.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToString/CS/batostringii.cs#2)]
 [!code-vb[System.BitConverter.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToString/VB/batostringii.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00f39-294"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-294"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00f39-295"><paramref name="startIndex" /> 또는 <paramref name="length" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-295"><paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span></span>  
  
<span data-ttu-id="00f39-296">또는</span><span class="sxs-lookup"><span data-stu-id="00f39-296">-or-</span></span> 
 <span data-ttu-id="00f39-297"><paramref name="startIndex" />가 0보다 크고 <paramref name="value" />의 길이보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-297"><paramref name="startIndex" /> is greater than zero and is greater than or equal to the length of <paramref name="value" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="00f39-298"><paramref name="startIndex" />와 <paramref name="length" />를 합하면 <paramref name="value" /> 내에 위치를 지정할 수 없는 경우. 즉, <paramref name="startIndex" /> 매개 변수가 <paramref name="value" />의 길이에서 <paramref name="length" /> 매개 변수를 뺀 값보다 큰 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-298">The combination of <paramref name="startIndex" /> and <paramref name="length" /> does not specify a position within <paramref name="value" />; that is, the <paramref name="startIndex" /> parameter is greater than the length of <paramref name="value" /> minus the <paramref name="length" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt16(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As ReadOnlySpan(Of Byte)) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : ReadOnlySpan&lt;byte&gt; -&gt; uint16" Usage="System.BitConverter.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Byte(), startIndex As Integer) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : byte[] * int -&gt; uint16" Usage="System.BitConverter.ToUInt16 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-299">바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-299">The array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="00f39-300"><paramref name="value" /> 내의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-300">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="00f39-301">2바이트에서 변환된 16비트 부호 없는 정수를 바이트 배열의 지정된 위치에 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-301">Returns a 16-bit unsigned integer converted from two bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="00f39-302"><paramref name="startIndex" />에서 시작하고 2바이트로 형성된 16비트 부호 없는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-302">A 16-bit unsigned integer formed by two bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-303"><xref:System.BitConverter.ToUInt16%2A> 메서드는 바이트 인덱스에서 변환 `startIndex` 를 `startIndex` + 1을 <xref:System.UInt16> 값.</span><span class="sxs-lookup"><span data-stu-id="00f39-303">The <xref:System.BitConverter.ToUInt16%2A> method converts the bytes from index `startIndex` to `startIndex` + 1 to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="00f39-304">배열의 바이트의 순서는 컴퓨터 시스템의 아키텍처의 엔디언 반영 해야 합니다. 자세한 내용은의 설명 섹션을 참조 하십시오.는 <xref:System.BitConverter> 클래스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-304">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-305">요소를 변환 하는 다음 코드 예제 <xref:System.Byte> 배열의 <xref:System.UInt16> 값으로 `ToUInt16` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-305">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.UInt16> values with the `ToUInt16` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CPP/batouint16.cpp#1)]
 [!code-csharp[System.BitConverter.ToXXX.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CS/batouint16.cs#1)]
 [!code-vb[System.BitConverter.ToXXX.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/VB/batouint16.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="00f39-306"><paramref name="startIndex" />가 <paramref name="value" />의 길이에서 1을 뺀 값과 같은 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-306"><paramref name="startIndex" /> equals the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00f39-307"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-307"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00f39-308"><paramref name="startIndex" />가 0보다 작거나 <paramref name="value" /> - 1의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-308"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.UInt16)" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt32(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As ReadOnlySpan(Of Byte)) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : ReadOnlySpan&lt;byte&gt; -&gt; uint32" Usage="System.BitConverter.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Byte(), startIndex As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : byte[] * int -&gt; uint32" Usage="System.BitConverter.ToUInt32 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-309">바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-309">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="00f39-310"><paramref name="value" /> 내의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-310">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="00f39-311">4바이트에서 변환된 32비트 부호 없는 정수를 바이트 배열의 지정된 위치에 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-311">Returns a 32-bit unsigned integer converted from four bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="00f39-312"><paramref name="startIndex" />에서 시작하고 4바이트로 형성된 32비트 부호 없는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-312">A 32-bit unsigned integer formed by four bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-313"><xref:System.BitConverter.ToUInt32%2A> 메서드는 바이트 인덱스에서 변환 `startIndex` 를 `startIndex` + 3을 <xref:System.UInt32> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-313">The <xref:System.BitConverter.ToUInt32%2A> method converts the bytes from index `startIndex` to `startIndex` + 3 to a <xref:System.UInt32> value.</span></span> <span data-ttu-id="00f39-314">배열의 바이트의 순서는 컴퓨터 시스템의 아키텍처의 엔디언 반영 해야 합니다. 자세한 내용은의 설명 섹션을 참조 하십시오.는 <xref:System.BitConverter> 클래스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-314">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-315">요소를 변환 하는 다음 코드 예제 <xref:System.Byte> 배열의 <xref:System.UInt32> 값으로 `ToUInt32` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-315">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.UInt32> values with the `ToUInt32` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CPP/batouint32.cpp#2)]
 [!code-csharp[System.BitConverter.ToXXX.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CS/batouint32.cs#2)]
 [!code-vb[System.BitConverter.ToXXX.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/VB/batouint32.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="00f39-316"><paramref name="startIndex" />가 <paramref name="value" />의 길이에서 3을 뺀 값보다 크거나 같고 <paramref name="value" />의 길이에서 1을 뺀 값보다 작거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-316"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 3, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00f39-317"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-317"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00f39-318"><paramref name="startIndex" />가 0보다 작거나 <paramref name="value" /> - 1의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-318"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.UInt32)" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt64(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As ReadOnlySpan(Of Byte)) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : ReadOnlySpan&lt;byte&gt; -&gt; uint64" Usage="System.BitConverter.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Byte(), startIndex As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : byte[] * int -&gt; uint64" Usage="System.BitConverter.ToUInt64 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00f39-319">바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-319">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="00f39-320"><paramref name="value" /> 내의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-320">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="00f39-321">8바이트에서 변환된 64비트 부호 없는 정수를 바이트 배열의 지정된 위치에 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-321">Returns a 64-bit unsigned integer converted from eight bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="00f39-322"><paramref name="startIndex" />에서 시작하고 8바이트로 형성된 64비트 부호 없는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-322">A 64-bit unsigned integer formed by the eight bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f39-323"><xref:System.BitConverter.ToUInt64%2A> 메서드는 바이트 인덱스에서 변환 `startIndex` 에 `startIndex` + 7를 <xref:System.UInt64> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-323">The <xref:System.BitConverter.ToUInt64%2A> method converts the bytes from index `startIndex` to `startIndex` + 7 to a <xref:System.UInt64> value.</span></span> <span data-ttu-id="00f39-324">배열의 바이트의 순서는 컴퓨터 시스템의 아키텍처의 엔디언 반영 해야 합니다. 자세한 내용은의 설명 섹션을 참조 하십시오.는 <xref:System.BitConverter> 클래스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-324">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f39-325">요소를 변환 하는 다음 코드 예제 <xref:System.Byte> 배열의 <xref:System.UInt64> 값으로 `ToUInt64` 메서드.</span><span class="sxs-lookup"><span data-stu-id="00f39-325">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.UInt64> values with the `ToUInt64` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CPP/batouint64.cpp#3)]
 [!code-csharp[System.BitConverter.ToXXX.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CS/batouint64.cs#3)]
 [!code-vb[System.BitConverter.ToXXX.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/VB/batouint64.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="00f39-326"><paramref name="startIndex" />가 <paramref name="value" />의 길이에서 7을 뺀 값보다 크거나 같고 <paramref name="value" />의 길이에서 1을 뺀 값보다 작거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-326"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 7, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00f39-327"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="00f39-327"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00f39-328"><paramref name="startIndex" />가 0보다 작거나 <paramref name="value" /> - 1의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="00f39-328"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.UInt64)" />
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, bool value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * bool -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, char value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * char -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, double value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * double -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, short value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * int16 -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, int value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * int -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, long value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * int64 -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, float value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * single -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * uint16 -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * uint32 -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * uint64 -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>