<Type Name="IObservable&lt;T&gt;" FullName="System.IObservable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b254aa9b58fa22bb12d126a5a11607096ee177a5" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58717589" /></Metadata><TypeSignature Language="C#" Value="public interface IObservable&lt;out T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObservable`1&lt;+ T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObservable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObservable(Of Out T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObservable" />
  <TypeSignature Language="F#" Value="type IObservable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="bd872-101">알림 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-101">The object that provides notification information.</span></span></typeparam>
    <summary><span data-ttu-id="bd872-102">푸시 기반 알림을 위한 공급자를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-102">Defines a provider for push-based notification.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd872-103">합니다 <xref:System.IObserver%601> 고 <xref:System.IObservable%601> 인터페이스 푸시 기반 알림의 경우 관찰자 디자인 패턴 라고도 일반화 메커니즘을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-103">The <xref:System.IObserver%601> and <xref:System.IObservable%601> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern.</span></span> <span data-ttu-id="bd872-104">합니다 <xref:System.IObservable%601> 인터페이스 (공급자); 알림을 전송 하는 클래스를 나타냅니다는 <xref:System.IObserver%601> 인터페이스를 수신 합니다 (관찰자)는 클래스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-104">The <xref:System.IObservable%601> interface represents the class that sends notifications (the provider); the <xref:System.IObserver%601> interface represents the class that receives them (the observer).</span></span> <span data-ttu-id="bd872-105">`T` 알림 정보를 제공 하는 클래스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-105">`T` represents the class that provides the notification information.</span></span> <span data-ttu-id="bd872-106">일부 푸시 기반 알림의 합니다 <xref:System.IObserver%601> 구현 및 `T` 동일한 형식을 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-106">In some push-based notifications, the <xref:System.IObserver%601> implementation and `T` can represent the same type.</span></span>  
  
 <span data-ttu-id="bd872-107">공급자는 단일 메서드를 구현 해야 <xref:System.IObservable%601.Subscribe%2A>, 관찰자가 푸시 기반 알림을 수신 하는 것이 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-107">The provider must implement a single method, <xref:System.IObservable%601.Subscribe%2A>, that indicates that an observer wants to receive push-based notifications.</span></span> <span data-ttu-id="bd872-108">메서드 호출자 관찰자의 인스턴스를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-108">Callers to the method pass an instance of the observer.</span></span> <span data-ttu-id="bd872-109">메서드는 <xref:System.IDisposable> 관찰자가 알림을 공급자가 보내기를 중지 하기 전에 언제 든 지 취소할 수 있도록 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-109">The method returns an <xref:System.IDisposable> implementation that enables observers to cancel notifications at any time before the provider has stopped sending them.</span></span>  
  
 <span data-ttu-id="bd872-110">지정된 된 시간에 지정된 된 공급자에는 0 개 또는 하나 이상의 관찰자가 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-110">At any given time, a given provider may have zero, one, or multiple observers.</span></span> <span data-ttu-id="bd872-111">공급자는 관찰자에 대 한 참조를 저장 하 고 유효한 지 알림을 보내기 전에 확인 하는 일을 담당 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-111">The provider is responsible for storing references to observers and ensuring that they are valid before it sends notifications.</span></span> <span data-ttu-id="bd872-112"><xref:System.IObservable%601> 인터페이스 관찰자의 알림을 전송 되는 순서 번호에 대 한 가정을 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-112">The <xref:System.IObservable%601> interface does not make any assumptions about the number of observers or the order in which notifications are sent.</span></span>  
  
 <span data-ttu-id="bd872-113">공급자를 호출 하 여 관찰자에 게 다음과 같은 세 가지 유형의 알림 보냅니다 <xref:System.IObserver%601> 메서드:</span><span class="sxs-lookup"><span data-stu-id="bd872-113">The provider sends the following three kinds of notifications to the observer by calling <xref:System.IObserver%601> methods:</span></span>  
  
-   <span data-ttu-id="bd872-114">현재 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-114">The current data.</span></span> <span data-ttu-id="bd872-115">공급자를 호출할 수 있습니다는 <xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType> 관찰자를 전달할 메서드를 `T` 현재 데이터, 데이터 변경된 또는 새 데이터를 가진 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-115">The provider can call the <xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType> method to pass the observer a `T` object that has current data, changed data, or fresh data.</span></span>  
  
-   <span data-ttu-id="bd872-116">오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-116">An error condition.</span></span> <span data-ttu-id="bd872-117">공급자를 호출할 수는 <xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType> 메서드를 일부 오류 조건이 발생 했음을 관찰자에 게 알립니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-117">The provider can call the <xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType> method to notify the observer that some error condition has occurred.</span></span>  
  
-   <span data-ttu-id="bd872-118">추가 데이터가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-118">No further data.</span></span> <span data-ttu-id="bd872-119">공급자를 호출할 수는 <xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType> 알림 전송을 완료 했음을 관찰자에 게 알림 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-119">The provider can call the <xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType> method to notify the observer that it has finished sending notifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bd872-120">다음 예제에서는 관찰자 디자인 패턴을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-120">The following example illustrates the observer design pattern.</span></span> <span data-ttu-id="bd872-121">정의 `Location` 위도 및 경도 정보를 포함 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-121">It defines a `Location` class that contains latitude and longitude information.</span></span>  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 <span data-ttu-id="bd872-122">합니다 `LocationTracker` 클래스를 제공 합니다 <xref:System.IObservable%601> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-122">The `LocationTracker` class provides the <xref:System.IObservable%601> implementation.</span></span> <span data-ttu-id="bd872-123">해당 `TrackLocation` 메서드는 null을 허용 되는지를 `Location` 위도 및 경도 데이터가 들어 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-123">Its `TrackLocation` method is passed a nullable `Location` object that contains the latitude and longitude data.</span></span> <span data-ttu-id="bd872-124">경우는 `Location` 값이 아닙니다 `null`의 `TrackLocation` 메서드 호출을 <xref:System.IObserver%601.OnNext%2A> 각 관찰자의 메서드.</span><span class="sxs-lookup"><span data-stu-id="bd872-124">If the `Location` value is not `null`, the `TrackLocation` method calls the <xref:System.IObserver%601.OnNext%2A> method of each observer.</span></span>  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 <span data-ttu-id="bd872-125">경우는 `Location` 값이 `null`, `TrackLocation` 메서드를 만드는 데는 `LocationUnknownException` 다음 예제에 나와 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-125">If the `Location` value is `null`, the `TrackLocation` method instantiates a `LocationUnknownException` object, which is shown in the following example.</span></span> <span data-ttu-id="bd872-126">그런 다음 각 관찰자를 호출 <xref:System.IObserver%601.OnError%2A> 메서드를 전달 합니다 `LocationUnknownException` 개체.</span><span class="sxs-lookup"><span data-stu-id="bd872-126">It then calls each observer's <xref:System.IObserver%601.OnError%2A> method and passes it the `LocationUnknownException` object.</span></span> <span data-ttu-id="bd872-127">사실은 `LocationUnknownException` 에서 파생 <xref:System.Exception>, 하지만 새 멤버를 추가 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-127">Note that `LocationUnknownException` derives from <xref:System.Exception>, but does not add any new members.</span></span>  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 <span data-ttu-id="bd872-128">관찰자에서 알림을 받으려면 등록을 `TrackLocation` 개체를 호출 하 여 해당 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> private 제네릭 observer 개체에 대 한 참조를 할당 하는 메서드를 <xref:System.Collections.Generic.List%601> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-128">Observers register to receive notifications from a `TrackLocation` object by calling its <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method, which assigns a reference to the observer object to a private generic <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="bd872-129">메서드는 `Unsubscriber` 개체 이며는 <xref:System.IDisposable> 관찰자가 알림 수신을 중지할 수 있도록 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-129">The method returns an `Unsubscriber` object, which is an <xref:System.IDisposable> implementation that enables observers to stop receiving notifications.</span></span> <span data-ttu-id="bd872-130">합니다 `LocationTracker` 클래스도 포함 되어 있습니다를 `EndTransmission` 메서드.</span><span class="sxs-lookup"><span data-stu-id="bd872-130">The `LocationTracker` class also includes an `EndTransmission` method.</span></span> <span data-ttu-id="bd872-131">메서드 호출 된 각 관찰자의 추가 위치 데이터가 없음을 사용할 수 있는 경우 <xref:System.IObserver%601.OnCompleted%2A> 메서드 관찰자의 내부 목록을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-131">When no further location data is available, the method calls each observer's <xref:System.IObserver%601.OnCompleted%2A> method and then clears the internal list of observers.</span></span>  
  
 <span data-ttu-id="bd872-132">이 예제에서는 합니다 `LocationReporter` 클래스를 제공 합니다 <xref:System.IObserver%601> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-132">In this example, the `LocationReporter` class provides the <xref:System.IObserver%601> implementation.</span></span> <span data-ttu-id="bd872-133">현재 위치에 대 한 정보를 콘솔에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-133">It displays information about the current location to the console.</span></span> <span data-ttu-id="bd872-134">생성자에 포함 되어는 `name` 수 있도록 하는 매개 변수를 `LocationReporter` 문자열 출력에서 자신을 식별 하는 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="bd872-134">Its constructor includes a `name` parameter, which enables the `LocationReporter` instance to identify itself in its string output.</span></span> <span data-ttu-id="bd872-135">또한를 `Subscribe` 메서드는 공급자에 대 한 호출을 래핑하는 <xref:System.IObservable%601.Subscribe%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bd872-135">It also includes a `Subscribe` method, which wraps a call to the provider's <xref:System.IObservable%601.Subscribe%2A> method.</span></span> <span data-ttu-id="bd872-136">이렇게 하면 반환 된 방법 <xref:System.IDisposable> private 변수를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-136">This allows the method to assign the returned <xref:System.IDisposable> reference to a private variable.</span></span> <span data-ttu-id="bd872-137">합니다 `LocationReporter` 클래스도 포함 되어 있습니다를 `Unsubscribe` 메서드를 호출 하는 합니다 <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> 에서 반환 되는 개체의 메서드는 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bd872-137">The `LocationReporter` class also includes an `Unsubscribe` method, which calls the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method of the object that is returned by the <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bd872-138">다음 코드는 정의 된 `LocationReporter` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-138">The following code defines the `LocationReporter` class.</span></span>  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 <span data-ttu-id="bd872-139">다음 코드는 다음 공급자와 관찰자를 인스턴스화합니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-139">The following code then instantiates the provider and the observer.</span></span>  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObserver`1" />
    <related type="Article" href="https://msdn.microsoft.com/library/3680171f-f522-453c-aa4a-54f755a78f88"><span data-ttu-id="bd872-140">관찰자 디자인 패턴</span><span class="sxs-lookup"><span data-stu-id="bd872-140">The Observer Design Pattern</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public IDisposable Subscribe (IObserver&lt;out T&gt; observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Subscribe(class System.IObserver`1&lt;!T&gt; observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObservable`1.Subscribe(System.IObserver{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Subscribe (observer As IObserver(Of Out T)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Subscribe(IObserver&lt;T&gt; ^ observer);" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : IObserver&lt;'T&gt; -&gt; IDisposable" Usage="iObservable.Subscribe observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="System.IObserver&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="observer"><span data-ttu-id="bd872-141">알림을 받을 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-141">The object that is to receive notifications.</span></span></param>
        <summary><span data-ttu-id="bd872-142">옵서버가 알림을 받을 것임을 공급자에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-142">Notifies the provider that an observer is to receive notifications.</span></span></summary>
        <returns><span data-ttu-id="bd872-143">공급자가 알림 전송을 완료하기 전에 관찰자가 알림 수신을 중지할 수 있는 인터페이스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-143">A reference to an interface that allows observers to stop receiving notifications before the provider has finished sending them.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd872-144"><xref:System.IObservable%601.Subscribe%2A> 관찰자 푸시 기반 알림에 등록 하려면 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-144">The <xref:System.IObservable%601.Subscribe%2A> method must be called to register an observer for push-based notifications.</span></span> <span data-ttu-id="bd872-145">일반적인 구현은 <xref:System.IObservable%601.Subscribe%2A> 메서드는 다음을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-145">A typical implementation of the <xref:System.IObservable%601.Subscribe%2A> method does the following:</span></span>  
  
-   <span data-ttu-id="bd872-146">와 같은 컬렉션 개체에서 관찰자에 대 한 참조를 저장 한 <xref:System.Collections.Generic.List%601> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-146">It stores a reference to the observer in a collection object, such as a <xref:System.Collections.Generic.List%601> object.</span></span>  
  
-   <span data-ttu-id="bd872-147">에 대 한 참조를 반환 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-147">It returns a reference to an <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="bd872-148">이렇게 하면 구독을 취소 하는 관찰자 (즉, 알림 수신을 중지할 수) 공급자가 알림 전송을 완료 하 고 구독자의 호출 전에 <xref:System.IObserver%601.OnCompleted%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bd872-148">This enables observers to unsubscribe (that is, to stop receiving notifications) before the provider has finished sending them and called the subscriber's <xref:System.IObserver%601.OnCompleted%2A> method.</span></span>  
  
 <span data-ttu-id="bd872-149">주어진 시간에 특정 인스턴스의에 <xref:System.IObservable%601> 구현은 모든 구독을 처리 하 고 모든 구독자에 게 알리지 하는 일을 담당 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-149">At any given time, a particular instance of an <xref:System.IObservable%601> implementation is responsible for handling all subscriptions and notifying all subscribers.</span></span> <span data-ttu-id="bd872-150">하지 않는 한 특정 설명서 <xref:System.IObservable%601> 구현을 나타냅니다이 고, 그렇지 관찰자에 게 어떠한가 정도 하지에 대해 설정 해야 합니다 <xref:System.IObservable%601> 구현에서는 여러 관찰자를 받는 알림 순서는 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-150">Unless the documentation for a particular <xref:System.IObservable%601> implementation indicates otherwise, observers should make no assumptions about the <xref:System.IObservable%601> implementation, such as the order of notifications that multiple observers will receive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bd872-151">다음 예제는 <xref:System.IObservable%601.Subscribe%2A> 위도 및 경도 정보를 보고 하는 응용 프로그램에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="bd872-151">The following example illustrates the <xref:System.IObservable%601.Subscribe%2A> method for an application that reports latitude and longitude information.</span></span> <span data-ttu-id="bd872-152">정의 <xref:System.Collections.Generic.IList%601> 모든 관찰자에 대 한 참조를 저장 하는 컬렉션 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-152">It defines an <xref:System.Collections.Generic.IList%601> collection object that stores references to all observers.</span></span> <span data-ttu-id="bd872-153">라는 private 클래스도 반환 `Unsubscriber` 를 구현 하는 <xref:System.IDisposable> 인터페이스 및 구독자가 이벤트 알림 수신을 중지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-153">It also returns a private class named `Unsubscriber` that implements the <xref:System.IDisposable> interface and enables subscribers to stop receiving event notifications.</span></span>  <span data-ttu-id="bd872-154">예제 섹션을 참조 합니다 <xref:System.IObservable%601> 전체 예제에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bd872-154">See the Example section of the <xref:System.IObservable%601> topic for the complete example.</span></span>  
  
 [!code-csharp[System.IObserver.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#13)]
 [!code-vb[System.IObserver.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IObserver`1" />
      </Docs>
    </Member>
  </Members>
</Type>