<Type Name="Comparison&lt;T&gt;" FullName="System.Comparison&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7151af5b5f10df3b19384378de07298f33cb48a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58739657" /></Metadata><TypeSignature Language="C#" Value="public delegate int Comparison&lt;in T&gt;(T x, T y);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Comparison`1&lt;- T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Comparison`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Comparison(Of In T)(x As T, y As T) As Integer " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public delegate int Comparison(T x, T y);" />
  <TypeSignature Language="F#" Value="type Comparison&lt;'T&gt; = delegate of 'T * 'T -&gt; int" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="x" Type="T" />
    <Parameter Name="y" Type="T" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Int32</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T"><span data-ttu-id="6100b-101">비교할 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-101">The type of the objects to compare.</span></span></typeparam>
    <param name="x"><span data-ttu-id="6100b-102">비교할 첫 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-102">The first object to compare.</span></span></param>
    <param name="y"><span data-ttu-id="6100b-103">비교할 두 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-103">The second object to compare.</span></span></param>
    <summary><span data-ttu-id="6100b-104">형식이 같은 두 개체를 비교하는 메서드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-104">Represents the method that compares two objects of the same type.</span></span></summary>
    <returns><span data-ttu-id="6100b-105">다음 표와 같이 <paramref name="x" /> 및 <paramref name="y" />의 상대 값을 나타내는 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-105">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="6100b-106">값</span><span class="sxs-lookup"><span data-stu-id="6100b-106">Value</span></span> 
 </term><description> <span data-ttu-id="6100b-107">의미</span><span class="sxs-lookup"><span data-stu-id="6100b-107">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="6100b-108">0보다 작음</span><span class="sxs-lookup"><span data-stu-id="6100b-108">Less than 0</span></span> 
 </term><description><span data-ttu-id="6100b-109"><paramref name="x" />가 <paramref name="y" />보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="6100b-109"><paramref name="x" /> is less than <paramref name="y" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="6100b-110">0</span><span class="sxs-lookup"><span data-stu-id="6100b-110">0</span></span> 
 </term><description><span data-ttu-id="6100b-111"><paramref name="x" />가 <paramref name="y" />와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-111"><paramref name="x" /> equals <paramref name="y" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="6100b-112">0보다 큼</span><span class="sxs-lookup"><span data-stu-id="6100b-112">Greater than 0</span></span> 
 </term><description><span data-ttu-id="6100b-113"><paramref name="x" />가 <paramref name="y" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="6100b-113"><paramref name="x" /> is greater than <paramref name="y" />.</span></span>  
  
 </description></item></list></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6100b-114">이 대리자에서 사용 되는 <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29> 메서드 오버 로드는 <xref:System.Array> 클래스 및 <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> 메서드 오버 로드는 <xref:System.Collections.Generic.List%601> 배열 또는 목록 요소를 정렬 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-114">This delegate is used by the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29> method overload of the <xref:System.Array> class and the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload of the <xref:System.Collections.Generic.List%601> class to sort the elements of an array or list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6100b-115">다음 코드 예제에서는 합니다 <xref:System.Comparison%601> 사용 하 여 대리자를 <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-115">The following code example demonstrates the use of the <xref:System.Comparison%601> delegate with the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="6100b-116">코드 예제에서는 문자열에 대 한 대체 비교 메서드를 정의 `CompareDinosByLength`합니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-116">The code example defines an alternative comparison method for strings, named `CompareDinosByLength`.</span></span> <span data-ttu-id="6100b-117">이 메서드는 다음과 같이 작동합니다. 에 대 한 여부도 먼저 `null`, null 참조는 null이 아닌 미만으로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-117">This method works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="6100b-118">둘째, 문자열 길이 비교 하 고 더 긴 문자열인 큰 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-118">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="6100b-119">셋째, 길이가 같으면 일반적인 문자열 비교가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-119">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="6100b-120"><xref:System.Collections.Generic.List%601> 문자열 생성 되어 특정 순서 없이 4 개의 문자열을 사용 하 여 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-120">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="6100b-121">목록에는 빈 문자열 및 null 참조도 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-121">The list also includes an empty string and a null reference.</span></span> <span data-ttu-id="6100b-122">사용 하 여 정렬 된 목록이 표시 되는 <xref:System.Comparison%601> 나타내는 제네릭 대리자는 `CompareDinosByLength` 메서드를 다시 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-122">The list is displayed, sorted using a <xref:System.Comparison%601> generic delegate representing the `CompareDinosByLength` method, and displayed again.</span></span>  
  
 [!code-cpp[List\`1_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortComparison/cs/source.cs#1)]
 [!code-vb[List\`1_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortComparison/vb/source.vb#1)]  
  
 <span data-ttu-id="6100b-123">다음 예제에서는 합니다 <xref:System.Comparison%601> 컬렉션의 요소를 정렬 하는 대리자 `CityInfo` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-123">The following example uses the <xref:System.Comparison%601> delegate to sort the elements of a collection of `CityInfo` objects.</span></span> <span data-ttu-id="6100b-124">`CityInfo` 도시 및 해당 인구에 대 한 정보를 포함 하는 응용 프로그램 정의 클래스가입니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-124">`CityInfo` is an application-defined class that contains information about a city and its population.</span></span> <span data-ttu-id="6100b-125">이 예제에서는 세 개의 메서드를 정의 `CompareByName`, `CompareByPopulation`, 및 `CompareByNames`, 순서 지정의 세 가지 방법으로 제공 하는 `CityInfo` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6100b-125">The example defines three methods, `CompareByName`, `CompareByPopulation`, and `CompareByNames`, that offer three different ways of ordering the `CityInfo` objects.</span></span> <span data-ttu-id="6100b-126">에 할당 된 각 메서드는 `comparison` 의 인수는 <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6100b-126">Each method is assigned to the `comparison` argument of the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Comparison\`1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.comparison`1/cs/comparisont1.cs#1)]
 [!code-vb[System.Comparison\`1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.comparison`1/vb/comparisont1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Array.Sort``1(``0[],System.Comparison{``0})" />
    <altmember cref="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
  </Docs>
</Type>