<Type Name="TypeAccessException" FullName="System.TypeAccessException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8bd1a65f5aed507ade9707ac2aa4fd591887762a" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57953192" /></Metadata><TypeSignature Language="C#" Value="public class TypeAccessException : TypeLoadException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TypeAccessException extends System.TypeLoadException" />
  <TypeSignature Language="DocId" Value="T:System.TypeAccessException" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeAccessException&#xA;Inherits TypeLoadException" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeAccessException : TypeLoadException" />
  <TypeSignature Language="F#" Value="type TypeAccessException = class&#xA;    inherit TypeLoadException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.TypeLoadException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1a6ac-101">메서드가 액세스할 수 없는 형식을 사용하려고 할 때 throw되는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-101">The exception that is thrown when a method attempts to use a type that it does not have access to.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a6ac-102"><xref:System.TypeAccessException> 메서드는 개체 메서드에서 액세스할 수 없는 형식으로 캐스팅 하려고 할 때 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-102"><xref:System.TypeAccessException> is thrown when a method attempts to cast an object to a type that is not accessible from the method.</span></span> <span data-ttu-id="1a6ac-103">예를 들어 통해 익명으로 호스트 된 동적 메서드를 메서드는 보안에 중요 형식을 액세스할 수 없습니다 [투명 한](~/docs/framework/misc/security-transparent-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-103">For example, an anonymously hosted dynamic method cannot access a security-critical type because the method is [transparent](~/docs/framework/misc/security-transparent-code.md).</span></span> <span data-ttu-id="1a6ac-104">메서드를 포함 하는 경우는 <xref:System.Reflection.Emit.OpCodes.Castclass?displayProperty=nameWithType> 보안에 중요 한 형식 또는 해당 형식 매개 변수 중 하나로 보안에 중요 한 형식이 지정 된 제네릭 형식에 캐스팅 하는 명령 <xref:System.TypeAccessException> JIT 컴파일러에 의해 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-104">If the method contains a <xref:System.Reflection.Emit.OpCodes.Castclass?displayProperty=nameWithType> instruction that casts an object to a security-critical type, or to a generic type that has a security-critical type as one of its type parameters, <xref:System.TypeAccessException> is thrown by the JIT compiler.</span></span>  
  
 <span data-ttu-id="1a6ac-105">마찬가지로, <xref:System.TypeAccessException> 다른 어셈블리의 내부 형식을 사용 하는 동적 메서드에 대 한 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-105">Similarly, <xref:System.TypeAccessException> is thrown for a dynamic method that uses an internal type from another assembly.</span></span> <span data-ttu-id="1a6ac-106">메서드를 포함 하는 형식, 해당 반환 형식 또는 해당 매개 변수 형식 중 하나에 대 한 액세스가 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-106">A method might not have access to its containing type, its return type, or one of its parameter types.</span></span>  
  
 <span data-ttu-id="1a6ac-107">사용 하 여 컴파일한 앱의 [!INCLUDE[net_native](~/includes/net-native-md.md)] 도구 체인이 런타임에 예외를 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-107">Apps compiled by using the [!INCLUDE[net_native](~/includes/net-native-md.md)] tool chain may throw a  exception at runtime.</span></span>  <span data-ttu-id="1a6ac-108">파생 하는 내부 전용 예외 유형을 <xref:System.TypeAccessException>합니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-108">is an internal-only exception type derived from <xref:System.TypeAccessException>.</span></span> <span data-ttu-id="1a6ac-109">예외는 런타임 시 앱의 성공적인 실행을 위해 필요한 메타 데이터가 없는 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-109">The exception indicates that metadata needed for the successful execution of an app is not present at runtime.</span></span> <span data-ttu-id="1a6ac-110">사용 하지 않아야는 `try` / `catch` 예외를 처리 하는 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-110">You should not use a `try`/`catch` block to handle the exception.</span></span> <span data-ttu-id="1a6ac-111">대신 누락 되는 메타 데이터를 확인 하 고 앱의 런타임 시 있는지 확인 하려면 수정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-111">Instead, you should determine what metadata is missing and modify your app's  to ensure that it is present at runtime.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a6ac-112"><see cref="T:System.TypeAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-112">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeAccessException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeAccessException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a6ac-113">오류를 설명하는 시스템 제공 메시지를 사용하여 <see cref="T:System.TypeAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-113">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with a system-supplied message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a6ac-114">이 생성자는 <xref:System.Exception.Message%2A> "실패 한 액세스를 시도 합니다."와 같은 오류를 설명 하는 시스템 제공 메시지로 새 인스턴스의 속성</span><span class="sxs-lookup"><span data-stu-id="1a6ac-114">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "Attempt to access the type failed."</span></span> <span data-ttu-id="1a6ac-115">이 메시지는 현재 시스템 문화권과 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-115">This message takes the current system culture into account.</span></span>  
  
 <span data-ttu-id="1a6ac-116">다음 표에서는 <xref:System.TypeAccessException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-116">The following table shows the initial property values for an instance of <xref:System.TypeAccessException>.</span></span>  
  
|<span data-ttu-id="1a6ac-117">속성</span><span class="sxs-lookup"><span data-stu-id="1a6ac-117">Property</span></span>|<span data-ttu-id="1a6ac-118">값</span><span class="sxs-lookup"><span data-stu-id="1a6ac-118">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="1a6ac-119">null 참조(Visual Basic의 경우 `Nothing`)</span><span class="sxs-lookup"><span data-stu-id="1a6ac-119">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="1a6ac-120">지역화된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-120">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="1a6ac-121">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="1a6ac-121">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeAccessException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeAccessException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new TypeAccessException : string -&gt; TypeAccessException" Usage="new System.TypeAccessException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="1a6ac-122">예외를 설명하는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-122">The message that describes the exception.</span></span> <span data-ttu-id="1a6ac-123">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 따라 지역화되었는지 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-123">The caller of this constructor must ensure that this string has been localized for the current system culture.</span></span></param>
        <summary><span data-ttu-id="1a6ac-124"><see cref="T:System.TypeAccessException" /> 클래스의 새 인스턴스를 오류를 설명하는 지정된 메시지로 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-124">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with a specified message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a6ac-125">다음 표에서는 <xref:System.TypeAccessException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-125">The following table shows the initial property values for an instance of <xref:System.TypeAccessException>.</span></span>  
  
|<span data-ttu-id="1a6ac-126">속성</span><span class="sxs-lookup"><span data-stu-id="1a6ac-126">Property</span></span>|<span data-ttu-id="1a6ac-127">값</span><span class="sxs-lookup"><span data-stu-id="1a6ac-127">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="1a6ac-128">null 참조(Visual Basic의 경우 `Nothing`)</span><span class="sxs-lookup"><span data-stu-id="1a6ac-128">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="1a6ac-129">`message`에 지정된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-129">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="1a6ac-130">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="1a6ac-130">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeAccessException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeAccessException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new TypeAccessException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; TypeAccessException" Usage="new System.TypeAccessException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="1a6ac-131">serialize된 데이터를 보유하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-131">The object that holds the serialized data.</span></span></param>
        <param name="context"><span data-ttu-id="1a6ac-132">원본 또는 대상에 대한 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-132">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="1a6ac-133">serialize된 데이터를 사용하여 <see cref="T:System.TypeAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-133">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a6ac-134">이 생성자는 스트림을 통해 전송 된 예외 개체를 다시 구성 하기 위해 역직렬화 하는 동안 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-134">This constructor is called during deserialization to reconstitute the exception object that was transmitted over a stream.</span></span> <span data-ttu-id="1a6ac-135">자세한 내용은 [XML 및 SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-135">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="1a6ac-136">XML 및 SOAP Serialization</span><span class="sxs-lookup"><span data-stu-id="1a6ac-136">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeAccessException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeAccessException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new TypeAccessException : string * Exception -&gt; TypeAccessException" Usage="new System.TypeAccessException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="1a6ac-137">예외를 설명하는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-137">The message that describes the exception.</span></span> <span data-ttu-id="1a6ac-138">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 따라 지역화되었는지 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-138">The caller of this constructor must ensure that this string has been localized for the current system culture.</span></span></param>
        <param name="inner"><span data-ttu-id="1a6ac-139">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-139">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="1a6ac-140"><paramref name="inner" /> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-140">If the <paramref name="inner" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="1a6ac-141">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.TypeAccessException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-141">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a6ac-142">이전 예외의 직접적인 결과로 throw되는 예외의 <xref:System.Exception.InnerException%2A> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-142">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="1a6ac-143"><xref:System.Exception.InnerException%2A> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, `null` 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <xref:System.Exception.InnerException%2A>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-143">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="1a6ac-144">다음 표에서는 <xref:System.TypeAccessException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-144">The following table shows the initial property values for an instance of <xref:System.TypeAccessException>.</span></span>  
  
|<span data-ttu-id="1a6ac-145">속성</span><span class="sxs-lookup"><span data-stu-id="1a6ac-145">Property</span></span>|<span data-ttu-id="1a6ac-146">값</span><span class="sxs-lookup"><span data-stu-id="1a6ac-146">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="1a6ac-147">null 참조(Visual Basic의 경우 `Nothing`)</span><span class="sxs-lookup"><span data-stu-id="1a6ac-147">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="1a6ac-148">`message`에 지정된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="1a6ac-148">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="1a6ac-149">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="1a6ac-149">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>