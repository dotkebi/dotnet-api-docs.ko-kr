<Type Name="WeakReference" FullName="System.WeakReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27fad241b1951386c41f82987f97eae4429a7baa" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57924618" /></Metadata><TypeSignature Language="C#" Value="public class WeakReference : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WeakReference extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.WeakReference" />
  <TypeSignature Language="VB.NET" Value="Public Class WeakReference&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WeakReference : System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type WeakReference = class&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9754e-101">가비지 수집에 의한 개체 회수를 허용하면서 개체를 참조하는 약한 참조를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-101">Represents a weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9754e-102">약한 참조는 가비지 수집기가 개체에 액세스 하려면 응용 프로그램 허용 하면서 개체를 수집할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-102">A weak reference allows the garbage collector to collect an object while still allowing an application to access the object.</span></span> <span data-ttu-id="9754e-103">개체를 해야 하는 경우 여전히에 대 한 강한 참조를 수집 되지 않도록 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-103">If you need the object, you can still obtain a strong reference to it and prevent it from being collected.</span></span> <span data-ttu-id="9754e-104">사용 하 여 short 및 long weak 방법에 대 한 자세한 내용은 참조 하세요. [약한 참조](~/docs/standard/garbage-collection/weak-references.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-104">For more information about how to use short and long weak references, see [Weak References](~/docs/standard/garbage-collection/weak-references.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9754e-105">다음 예제에서는 약한 참조를 사용 하 여 응용 프로그램에 대 한 리소스로 개체의 캐시를 유지 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-105">The following example demonstrates how you can use weak references to maintain a cache of objects as a resource for an application.</span></span> <span data-ttu-id="9754e-106">캐시를 사용 하 여 생성 되는 <xref:System.Collections.Generic.IDictionary%602> 의 <xref:System.WeakReference> 인덱스 값에서 키 지정 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-106">The cache is constructed using an <xref:System.Collections.Generic.IDictionary%602> of <xref:System.WeakReference> objects keyed by an index value.</span></span> <span data-ttu-id="9754e-107"><xref:System.WeakReference.Target%2A> 에 대 한 속성을 <xref:System.WeakReference> 개체는 데이터를 나타내는 바이트 배열에서 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-107">The <xref:System.WeakReference.Target%2A> property for the <xref:System.WeakReference> objects is an object in a byte array that represents data.</span></span>  
  
 <span data-ttu-id="9754e-108">이 예제에서는 캐시의 개체를 임의로 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-108">The example randomly accesses objects in the cache.</span></span> <span data-ttu-id="9754e-109">가비지 컬렉션에 대 한 개체 회수를 새 데이터 개체를 다시 생성 됩니다. 그렇지 않으면 개체는 약한 참조에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-109">If an object is reclaimed for garbage collection, a new data object is regenerated; otherwise, the object is available to access because of the weak reference.</span></span>  
  
 [!code-csharp[WeakReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#1)]
 [!code-vb[WeakReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9754e-110">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-110">for the ability to call unmanaged code.</span></span> <span data-ttu-id="9754e-111">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="9754e-111">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
    <altmember cref="T:System.GC" />
    <related type="Article" href="https://msdn.microsoft.com/library/6a600fe5-3af3-4c64-82da-10a0a8e2d79b"><span data-ttu-id="9754e-112">약한 참조</span><span class="sxs-lookup"><span data-stu-id="9754e-112">Weak References</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9754e-113"><see cref="T:System.WeakReference" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-113">Initializes a new instance of the <see cref="T:System.WeakReference" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WeakReference ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WeakReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WeakReference (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WeakReference(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="new WeakReference : obj -&gt; WeakReference" Usage="new System.WeakReference target" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9754e-114">추적할 개체 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-114">The object to track or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9754e-115">지정된 개체를 참조하여 <see cref="T:System.WeakReference" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-115">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, referencing the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9754e-116">이 생성자에 대 한 짧은 약한 참조를 만듭니다 `target`합니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-116">This constructor creates a short weak reference to `target`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WeakReference (object target, bool trackResurrection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object target, bool trackResurrection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (target As Object, trackResurrection As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WeakReference(System::Object ^ target, bool trackResurrection);" />
      <MemberSignature Language="F#" Value="new WeakReference : obj * bool -&gt; WeakReference" Usage="new System.WeakReference (target, trackResurrection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="trackResurrection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9754e-117">추적할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-117">An object to track.</span></span></param>
        <param name="trackResurrection"><span data-ttu-id="9754e-118">개체 추적을 중지할 시기를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-118">Indicates when to stop tracking the object.</span></span> <span data-ttu-id="9754e-119"><see langword="true" />일 경우 종료 후 개체를 추적하고, <see langword="false" />일 경우 종료할 때까지만 개체를 추적합니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-119">If <see langword="true" />, the object is tracked after finalization; if <see langword="false" />, the object is only tracked until finalization.</span></span></param>
        <summary><span data-ttu-id="9754e-120">지정된 개체를 참조하고 지정된 재활성화 추적을 사용하여 <see cref="T:System.WeakReference" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-120">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, referencing the specified object and using the specified resurrection tracking.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9754e-121">하는 경우 `trackResurrection` 는 `false`, short weak reference 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-121">If `trackResurrection` is `false`, a short weak reference is created.</span></span> <span data-ttu-id="9754e-122">하는 경우 `trackResurrection` 는 `true`에 long weak reference 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-122">If `trackResurrection` is `true`, a long weak reference is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9754e-123">다음 예제에서는 짧은 약한 참조를 사용 하 여 데이터 개체의 캐시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-123">The following example creates a cache of data objects with short weak references.</span></span> <span data-ttu-id="9754e-124">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.WeakReference> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-124">This example is part of a larger example provided for the <xref:System.WeakReference> class.</span></span>  
  
 [!code-csharp[WeakReference#2](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#2)]
 [!code-vb[WeakReference#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
        <related type="Article" href="https://msdn.microsoft.com/library/6a600fe5-3af3-4c64-82da-10a0a8e2d79b"><span data-ttu-id="9754e-125">약한 참조</span><span class="sxs-lookup"><span data-stu-id="9754e-125">Weak References</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WeakReference (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WeakReference(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new WeakReference : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; WeakReference" Usage="new System.WeakReference (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="9754e-126">현재 <see cref="T:System.WeakReference" /> 개체를 serialize 또는 deserialize하는 데 필요한 모든 데이터를 보유한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-126">An object that holds all the data needed to serialize or deserialize the current <see cref="T:System.WeakReference" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="9754e-127">(예약됨) <paramref name="info" />에서 지정한 serialize된 스트림의 소스 및 대상을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-127">(Reserved) Describes the source and destination of the serialized stream specified by <paramref name="info" />.</span></span></param>
        <summary><span data-ttu-id="9754e-128">지정된 serialization 및 스트림 개체의 deserialize된 데이터를 사용하여 <see cref="T:System.WeakReference" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-128">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, using deserialized data from the specified serialization and stream objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9754e-129">`context` 매개 변수는 예약 되며이 작업에 관여 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-129">The `context` parameter is reserved, and does not currently participate in this operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9754e-130"><paramref name="info" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-130"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WeakReference ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WeakReference ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="weakReference.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9754e-131">현재 <see cref="T:System.WeakReference" /> 개체가 나타내는 대상에 대한 참조를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-131">Discards the reference to the target represented by the current <see cref="T:System.WeakReference" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.GC" />
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="weakReference.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="9754e-132">현재 <see cref="T:System.WeakReference" /> 개체를 serialize 또는 deserialize하는 데 필요한 모든 데이터를 보유한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-132">An object that holds all the data needed to serialize or deserialize the current <see cref="T:System.WeakReference" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="9754e-133">(예약됨) Serialize된 데이터가 저장 및 검색되는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-133">(Reserved) The location where serialized data is stored and retrieved.</span></span></param>
        <summary><span data-ttu-id="9754e-134">현재 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 serialize하는 데 필요한 모든 데이터로 <see cref="T:System.WeakReference" /> 개체를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-134">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with all the data needed to serialize the current <see cref="T:System.WeakReference" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9754e-135">이 메서드는 모든 정보를 저장 `info` 현재를 serialize 하는 데 필요한 <xref:System.WeakReference> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-135">This method stores all the information in `info` necessary to serialize the current <xref:System.WeakReference> object.</span></span>  
  
 <span data-ttu-id="9754e-136">`context` 매개 변수는 예약 되어 이며이 메서드의 실행에 현재 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-136">The `context` parameter is reserved and is not currently used in the execution of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9754e-137"><paramref name="info" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-137"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="9754e-138">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-138">requires full trust for the immediate caller.</span></span> <span data-ttu-id="9754e-139">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-139">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsAlive">
      <MemberSignature Language="C#" Value="public virtual bool IsAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAlive" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.IsAlive" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAlive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAlive : bool" Usage="System.WeakReference.IsAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9754e-140">현재 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체가 가비지 수집되었는지 여부를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-140">Gets an indication whether the object referenced by the current <see cref="T:System.WeakReference" /> object has been garbage collected.</span></span></summary>
        <value><span data-ttu-id="9754e-141">현재 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체가 가비지 수집되지 않았지만 계속 액세스할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-141"><see langword="true" /> if the object referenced by the current <see cref="T:System.WeakReference" /> object has not been garbage collected and is still accessible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9754e-142">개체는 가비지 수집에 대 한 잠재적으로 회수 될 수 있으므로 직후 합니다 <xref:System.WeakReference.IsAlive%2A> 속성에서 반환 `true`에 대해서만 테스트 하는 경우가 아니면이 속성을 사용 하 여 권장 되지 않습니다는 `false` 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-142">Because an object could potentially be reclaimed for garbage collection immediately after the <xref:System.WeakReference.IsAlive%2A> property returns `true`, using this property is not recommended unless you are testing only for a `false` return value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.GC" />
        <altmember cref="T:System.Object" />
        <related type="Article" href="https://msdn.microsoft.com/library/6a600fe5-3af3-4c64-82da-10a0a8e2d79b"><span data-ttu-id="9754e-143">약한 참조</span><span class="sxs-lookup"><span data-stu-id="9754e-143">Weak References</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public virtual object Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Target" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Target As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Target { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : obj with get, set" Usage="System.WeakReference.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9754e-144">현재 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체(대상)를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-144">Gets or sets the object (the target) referenced by the current <see cref="T:System.WeakReference" /> object.</span></span></summary>
        <value><span data-ttu-id="9754e-145">현재 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체가 가비지 수집되었으면 <see langword="null" />이고, 그렇지 않으면 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-145"><see langword="null" /> if the object referenced by the current <see cref="T:System.WeakReference" /> object has been garbage collected; otherwise, a reference to the object referenced by the current <see cref="T:System.WeakReference" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9754e-146">대상 개체에이 속성을 설정한 후 개체에 다른 강한 참조가 있는지 확인 그렇지 않으면이 수집 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-146">After setting this property to the target object, make sure that there are no other strong references to the object; otherwise, it will not be collected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9754e-147">다음 예제에서는 약한 참조를 사용 하 여 개체의 캐시에서 개체를 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-147">The following example tries to obtain an object from a cache of objects with weak references.</span></span> <span data-ttu-id="9754e-148">가비지 컬렉션에 대 한 개체 회수 된, 새 개체가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-148">If the object was reclaimed for garbage collection, a new object is generated.</span></span> <span data-ttu-id="9754e-149">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.WeakReference> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-149">This example is part of a larger example provided for the <xref:System.WeakReference> class.</span></span>  
  
 [!code-csharp[WeakReference#3](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#3)]
 [!code-vb[WeakReference#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9754e-150">대상 개체에 대한 참조가 잘못된 경우.</span><span class="sxs-lookup"><span data-stu-id="9754e-150">The reference to the target object is invalid.</span></span> <span data-ttu-id="9754e-151">값이 null 참조이거나 설정 작업을 수행할 때 개체가 종료된 경우 이 속성을 설정하는 동안에 이 예외가 throw될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-151">This exception can be thrown while setting this property if the value is a null reference or if the object has been finalized during the set operation.</span></span></exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.GC" />
        <related type="Article" href="https://msdn.microsoft.com/library/6a600fe5-3af3-4c64-82da-10a0a8e2d79b"><span data-ttu-id="9754e-152">약한 참조</span><span class="sxs-lookup"><span data-stu-id="9754e-152">Weak References</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TrackResurrection">
      <MemberSignature Language="C#" Value="public virtual bool TrackResurrection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrackResurrection" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.TrackResurrection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TrackResurrection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool TrackResurrection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TrackResurrection : bool" Usage="System.WeakReference.TrackResurrection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9754e-153">현재 <see cref="T:System.WeakReference" /> 개체에서 참조되는 개체가 종료된 후 추적되는지 여부를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-153">Gets an indication whether the object referenced by the current <see cref="T:System.WeakReference" /> object is tracked after it is finalized.</span></span></summary>
        <value><span data-ttu-id="9754e-154">현재 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체가 종료된 후 추적되면 <see langword="true" />이고, 종료될 때까지만 개체가 추적되면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-154"><see langword="true" /> if the object the current <see cref="T:System.WeakReference" /> object refers to is tracked after finalization; or <see langword="false" /> if the object is only tracked until finalization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9754e-155">경우 `true`, weak reference는 긴 약한 참조 및 `true` 에 대해 지정 된 합니다 `trackResurrection` 에서 매개 변수는 <xref:System.WeakReference> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="9754e-155">If `true`, the weak reference is a long weak reference and `true` was specified for the `trackResurrection` parameter in the <xref:System.WeakReference> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.GC" />
        <related type="Article" href="https://msdn.microsoft.com/library/6a600fe5-3af3-4c64-82da-10a0a8e2d79b"><span data-ttu-id="9754e-156">약한 참조</span><span class="sxs-lookup"><span data-stu-id="9754e-156">Weak References</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>