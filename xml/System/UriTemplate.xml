<Type Name="UriTemplate" FullName="System.UriTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c5369c5abe5d9e9960b62dbedb70eb1206e353b" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57916103" /></Metadata><TypeSignature Language="C#" Value="public class UriTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UriTemplate extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.UriTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class UriTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriTemplate" />
  <TypeSignature Language="F#" Value="type UriTemplate = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="67958-101">URI(Uniform Resource Identifier) 템플릿을 나타내는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-101">A class that represents a Uniform Resource Identifier (URI) template.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67958-102">URI 템플릿을 사용하면 구조적으로 비슷한 URI 집합을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67958-102">A URI template allows you to define a set of structurally similar URIs.</span></span> <span data-ttu-id="67958-103">템플릿은 경로와 쿼리의 두 부분으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="67958-103">Templates are composed of two parts, a path and a query.</span></span> <span data-ttu-id="67958-104">경로는 슬래시(/)로 구분된 세그먼트로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="67958-104">A path consists of a series of segments delimited by a slash (/).</span></span> <span data-ttu-id="67958-105">각 세그먼트는 리터럴 값, 변수 값(중괄호[{ }]로 표시, 정확히 한 세그먼트의 내용과 일치하도록 제약) 또는 와일드카드(별표[\*]로 표시, "나머지 경로"와 일치)를 가질 수 있으며, 이러한 값은 경로의 끝에 표시되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-105">Each segment can have a literal value, a variable value (written within curly braces [{ }], constrained to match the contents of exactly one segment), or a wildcard (written as an asterisk [\*], which matches "the rest of the path"), which must appear at the end of the path.</span></span> <span data-ttu-id="67958-106">쿼리 식은 완전히 생략할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67958-106">The query expression can be omitted entirely.</span></span> <span data-ttu-id="67958-107">쿼리 식(있는 경우)은 순서가 지정되지 않은 이름/값 쌍을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-107">If present, it specifies an unordered series of name/value pairs.</span></span> <span data-ttu-id="67958-108">쿼리 식의 요소는 리터럴 쌍(?x=2) 또는 변수 쌍(?x={val})입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-108">Elements of the query expression can be either literal pairs (?x=2) or variable pairs (?x={val}).</span></span> <span data-ttu-id="67958-109">짝이 없는 값은 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="67958-109">Unpaired values are not permitted.</span></span> <span data-ttu-id="67958-110">다음 예제에서는 유효한 템플릿 문자열을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="67958-110">The following examples show valid template strings:</span></span>  
  
-   <span data-ttu-id="67958-111">"weather/WA/Seattle"</span><span class="sxs-lookup"><span data-stu-id="67958-111">"weather/WA/Seattle"</span></span>  
  
-   <span data-ttu-id="67958-112">"weather/{state}/{city}"</span><span class="sxs-lookup"><span data-stu-id="67958-112">"weather/{state}/{city}"</span></span>  
  
-   <span data-ttu-id="67958-113">"weather/\*"</span><span class="sxs-lookup"><span data-stu-id="67958-113">"weather/\*"</span></span>  
  
-   <span data-ttu-id="67958-114">"weather/{state}/{city}?forecast=today</span><span class="sxs-lookup"><span data-stu-id="67958-114">"weather/{state}/{city}?forecast=today</span></span>  
  
-   <span data-ttu-id="67958-115">"weather/{state}/{city}?forecast={day}</span><span class="sxs-lookup"><span data-stu-id="67958-115">"weather/{state}/{city}?forecast={day}</span></span>  
  
 <span data-ttu-id="67958-116">앞에 나온 URI 템플릿은 날씨 보고서를 구성할 때 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67958-116">The preceding URI templates might be used for organizing weather reports.</span></span> <span data-ttu-id="67958-117">중괄호로 묶인 세그먼트는 변수이며, 나머지는 모두 리터럴입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-117">Segments enclosed in curly braces are variables, everything else is a literal.</span></span> <span data-ttu-id="67958-118">변수를 실제 값으로 대체하여 <xref:System.UriTemplate> 인스턴스를 <xref:System.Uri>로 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67958-118">You can convert a <xref:System.UriTemplate> instance into a <xref:System.Uri> by replacing variables with actual values.</span></span> <span data-ttu-id="67958-119">예를 들어, "weather/{state}/{city}" 템플릿에서 "{state}" 및 "{city}" 변수의 값을 입력하면 "weather/WA/Seattle"이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="67958-119">For example, taking the template "weather/{state}/{city}" and putting in values for the variables "{state}" and "{city}" gives you "weather/WA/Seattle".</span></span> <span data-ttu-id="67958-120">후보 URI가 있으면 <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>를 호출하여 특정 URI 템플릿과 일치하는지 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67958-120">Given a candidate URI, you can test whether it matches a given URI template by calling <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>.</span></span> <span data-ttu-id="67958-121"><xref:System.UriTemplate> 인스턴스를 사용하면 <xref:System.Uri>이나 <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29>을 호출하여 변수 값의 집합으로부터 <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>를 만들 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67958-121">You can also use <xref:System.UriTemplate> instances to create a <xref:System.Uri> from a set of variable values by calling <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> or <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67958-122">다음 코드에서는 <xref:System.UriTemplate> 인스턴스를 만들고 바인딩하여 후보 URI와 일치시키는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="67958-122">The following code demonstrates how to create a <xref:System.UriTemplate> instance, and bind and match it to a candidate URI.</span></span>  
  
 [!code-csharp[UriTemplate#0](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#0)]
 [!code-vb[UriTemplate#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="67958-123"><see cref="T:System.UriTemplate" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-123">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string -&gt; UriTemplate" Usage="new System.UriTemplate template" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="67958-124">템플릿입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-124">The template.</span></span></param>
        <summary><span data-ttu-id="67958-125">지정된 템플릿 문자열을 사용하여 <see cref="T:System.UriTemplate" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-125">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class with the specified template string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67958-126">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="67958-126">The following example shows how to call the constructor.</span></span>  
  
 [!code-csharp[UriTemplate#1](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#1)]
 [!code-vb[UriTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, bool ignoreTrailingSlash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, bool ignoreTrailingSlash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, ignoreTrailingSlash As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, bool ignoreTrailingSlash);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * bool -&gt; UriTemplate" Usage="new System.UriTemplate (template, ignoreTrailingSlash)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="ignoreTrailingSlash" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="67958-127">템플릿 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-127">The template string.</span></span></param>
        <param name="ignoreTrailingSlash"><span data-ttu-id="67958-128">후행 슬래시("/") 문자를 무시할지 여부를 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-128">A value that specifies whether trailing slash "/" characters should be ignored.</span></span></param>
        <summary><span data-ttu-id="67958-129"><see cref="T:System.UriTemplate" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-129">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67958-130">`ignoreTrailingSlash`가 `true`로 설정되어 있으면 후보 URI와 일치시킬 때 템플릿 끝에 있는 후행 슬래시가 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="67958-130">When the `ignoreTrailingSlash` is set to `true`, trailing slashes on the end of template are ignored when matching a candidate URI.</span></span> <span data-ttu-id="67958-131">같은 템플릿 예를 들어, "http://www.microsoft.com/customer/"은 다음 후보 Uri와 일치 합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-131">For example, a template such as "http://www.microsoft.com/customer/" would match the following candidate URIs:</span></span>  
  
-   <span data-ttu-id="67958-132">"http://www.microsoft.com/customer/"</span><span class="sxs-lookup"><span data-stu-id="67958-132">"http://www.microsoft.com/customer/"</span></span>  
  
-   <span data-ttu-id="67958-133">"http://www.microsoft.com/customer"</span><span class="sxs-lookup"><span data-stu-id="67958-133">"http://www.microsoft.com/customer"</span></span>  
  
-   <span data-ttu-id="67958-134">"http://www.microsoft.com/customer/?wsdl"</span><span class="sxs-lookup"><span data-stu-id="67958-134">"http://www.microsoft.com/customer/?wsdl"</span></span>  
  
-   <span data-ttu-id="67958-135">"http://www.microsoft.com/customer?wsdl"</span><span class="sxs-lookup"><span data-stu-id="67958-135">"http://www.microsoft.com/customer?wsdl"</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, additionalDefaults As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ additionalDefaults);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; UriTemplate" Usage="new System.UriTemplate (template, additionalDefaults)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="additionalDefaults" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="67958-136">템플릿 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-136">The template string.</span></span></param>
        <param name="additionalDefaults"><span data-ttu-id="67958-137">템플릿 매개 변수에 대한 기본값 목록을 포함하는 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-137">A dictionary that contains a list of default values for the template parameters.</span></span></param>
        <summary><span data-ttu-id="67958-138"><see cref="T:System.UriTemplate" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-138">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, bool ignoreTrailingSlash, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, bool ignoreTrailingSlash, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, ignoreTrailingSlash As Boolean, additionalDefaults As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, bool ignoreTrailingSlash, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ additionalDefaults);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * bool * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; UriTemplate" Usage="new System.UriTemplate (template, ignoreTrailingSlash, additionalDefaults)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="ignoreTrailingSlash" Type="System.Boolean" />
        <Parameter Name="additionalDefaults" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="67958-139">템플릿 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-139">The template string.</span></span></param>
        <param name="ignoreTrailingSlash"><span data-ttu-id="67958-140">후행 슬래시 "/" 문자가 무시되면 <see langword="true" />이고, 무시되지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-140"><see langword="true" /> if the trailing slash "/" characters are ignored; otherwise <see langword="false" />.</span></span></param>
        <param name="additionalDefaults"><span data-ttu-id="67958-141">템플릿 매개 변수에 대한 기본값 목록을 포함하는 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-141">A dictionary that contains a list of default values for the template parameters.</span></span></param>
        <summary><span data-ttu-id="67958-142"><see cref="T:System.UriTemplate" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-142">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BindByName">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="67958-143">템플릿에서 새 URI를 만들고 매개 변수 컬렉션을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="67958-143">Creates a new URI from the template and the collection of parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As IDictionary(Of String, String)) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="67958-144">기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-144">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="67958-145">매개 변수 이름/값 쌍 컬렉션을 포함하는 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-145">A dictionary that contains a collection of parameter name/value pairs.</span></span></param>
        <summary><span data-ttu-id="67958-146">템플릿에서 새 URI를 만들고 매개 변수 컬렉션을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="67958-146">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="67958-147">URI입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-147">A URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67958-148">합니다 [IDictionary\<문자열, 문자열 >](xref:System.Collections.Generic.IDictionary%602) 매개 변수는 매개 변수 이름 / 값 쌍의 컬렉션을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-148">The [IDictionary\<string,string>](xref:System.Collections.Generic.IDictionary%602) parameter contains a collection of parameter name and value pairs.</span></span> <span data-ttu-id="67958-149">이 매개 변수는 대소문자가 구분되는 비교를 통해 템플릿 내의 변수와 일치시킵니다.</span><span class="sxs-lookup"><span data-stu-id="67958-149">The parameters are matched up against the variables within the template by a case-insensitive comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="67958-150">이 메서드에 전달되는 이름/값 컬렉션에는 모든 템플릿 변수에 대한 키가 포함되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-150">The name/value collection passed to this method must contain a key for every template variable.</span></span> <span data-ttu-id="67958-151">템플릿 변수와 일치하지 않는 추가 이름/값 쌍은 최종 URI의 쿼리 문자열에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="67958-151">Extra name/value pairs that do not match template variables are appended to the query string of the final URI.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="67958-152">생성된 URI가 자신의 생성에 사용된 템플릿과 불일치하도록 하는 텍스트를 이름/값 쌍 내부에 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67958-152">It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="67958-153">이러한 텍스트에는 '/', '..', '\*', '{', '}' 등이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67958-153">Examples of such text includes: '/', '..', '\*', '{', and '}'.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As NameValueCollection) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Specialized.NameValueCollection -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="67958-154">기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-154">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="67958-155">매개 변수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-155">The parameter values.</span></span></param>
        <summary><span data-ttu-id="67958-156">템플릿에서 새 URI를 만들고 매개 변수 컬렉션을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="67958-156">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="67958-157">새 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-157">A new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67958-158"><xref:System.Collections.Specialized.NameValueCollection> 매개 변수는 매개 변수 이름/값 쌍 컬렉션을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-158">The <xref:System.Collections.Specialized.NameValueCollection> parameter contains a collection of parameter name/value pairs.</span></span> <span data-ttu-id="67958-159">이 매개 변수는 대소문자가 구분되는 비교를 통해 템플릿 내의 변수와 일치시킵니다.</span><span class="sxs-lookup"><span data-stu-id="67958-159">The parameters are matched up against the variables within the template by a case-insensitive comparison.</span></span> <span data-ttu-id="67958-160">이 컬렉션에 전달된 값은 이스케이프됩니다.</span><span class="sxs-lookup"><span data-stu-id="67958-160">Values passed in this collection are escaped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="67958-161"><xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29>에 전달되는 이름/값 컬렉션에는 모든 템플릿 변수에 대한 키가 포함되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-161">The name/value collection passed to <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> must contain a key for every template variable.</span></span> <span data-ttu-id="67958-162">템플릿 변수와 일치하지 않는 추가 이름/값 쌍은 최종 URI의 쿼리 문자열에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="67958-162">Extra name/value pairs that do not match template variables are appended to the query string of the final URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="67958-163">생성된 URI가 자신의 생성에 사용된 템플릿과 불일치하도록 하는 텍스트를 이름/값 쌍 내부에 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67958-163">It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="67958-164">이러한 텍스트에는 '/', '..', '\*', '{', '}' 등이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67958-164">Examples of such text includes: '/', '..', '\*', '{', and '}'.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67958-165">다음 예제에서는 <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="67958-165">The following example shows how to call the <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> method.</span></span>  
  
 [!code-csharp[UriTemplate#4](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#4)]
 [!code-vb[UriTemplate#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters, bool omitDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters, bool omitDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As IDictionary(Of String, String), omitDefaults As Boolean) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ parameters, bool omitDefaults);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * bool -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters, omitDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="omitDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="67958-166">기본 주소를 포함하는 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-166">A URI that contains the base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="67958-167">매개 변수 이름/값 쌍 컬렉션을 포함하는 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-167">A dictionary that contains a collection of parameter name/value pairs.</span></span></param>
        <param name="omitDefaults"><span data-ttu-id="67958-168">기본값이 무시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-168"><see langword="true" /> is the default values are ignored; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="67958-169">템플릿에서 새 URI를 만들고 매개 변수 컬렉션을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="67958-169">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="67958-170">URI입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-170">A URI.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As NameValueCollection, omitDefaults As Boolean) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Specialized::NameValueCollection ^ parameters, bool omitDefaults);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Specialized.NameValueCollection * bool -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters, omitDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="omitDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="67958-171">기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-171">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="67958-172">매개 변수 이름/값 쌍의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-172">A collection of parameter name/value pairs.</span></span></param>
        <param name="omitDefaults"><span data-ttu-id="67958-173">기본값이 무시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-173"><see langword="true" /> if the default values are ignored; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="67958-174">템플릿에서 새 URI를 만들고 매개 변수 컬렉션을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="67958-174">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="67958-175">URI입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-175">A URI.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByPosition">
      <MemberSignature Language="C#" Value="public Uri BindByPosition (Uri baseAddress, params string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByPosition(class System.Uri baseAddress, string[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByPosition(System.Uri,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByPosition (baseAddress As Uri, ParamArray values As String()) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByPosition(Uri ^ baseAddress, ... cli::array &lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.BindByPosition : Uri * string[] -&gt; Uri" Usage="uriTemplate.BindByPosition (baseAddress, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="values" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="67958-176">기본 주소를 포함하는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-176">A <see cref="T:System.Uri" /> that contains the base address.</span></span></param>
        <param name="values"><span data-ttu-id="67958-177">매개 변수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-177">The parameter values.</span></span></param>
        <summary><span data-ttu-id="67958-178">템플릿에서 새 URI를 만들고 매개 변수 값 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="67958-178">Creates a new URI from the template and an array of parameter values.</span></span></summary>
        <returns><span data-ttu-id="67958-179">새 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-179">A new <see cref="T:System.Uri" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67958-180">매개 변수 값은 왼쪽에서 오른쪽으로 위치별로 바인딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="67958-180">The parameter values are bound by position left to right.</span></span> <span data-ttu-id="67958-181">첫 번째 매개 변수 값이 템플릿에서 발견되는 첫 번째 변수를, 두 번째 매개 변수 값은 두 번째 변수를 대체하는 식으로 진행됩니다.</span><span class="sxs-lookup"><span data-stu-id="67958-181">The first parameter value replaces the first variable found in the template, the second parameter value replaces the second variable, and so on.</span></span> <span data-ttu-id="67958-182">이 메서드에 전달된 변수는 이스케이프됩니다.</span><span class="sxs-lookup"><span data-stu-id="67958-182">Variables passed to this method are escaped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="67958-183">값 매개 변수에 전달된 매개 변수의 개수가 템플릿의 변수 개수와 일치해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-183">The number of parameters passed in the values parameter must match the number of variables in the template.</span></span> <span data-ttu-id="67958-184">그렇지 않으면 <xref:System.FormatException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="67958-184">If not, a <xref:System.FormatException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="67958-185">생성된 URI가 자신의 생성에 사용된 템플릿과 불일치하도록 하는 텍스트를 매개 변수 값 배열 내부에 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67958-185">It is possible to pass in text within the parameter values array that prevents the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="67958-186">이러한 텍스트에는 '/', '.','..', '\*', '{', '}' 등이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67958-186">Examples of such text includes: '/', '.','..', '\*', '{', and '}'.</span></span> <span data-ttu-id="67958-187">다음 코드에서는 이 작업을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="67958-187">The following code demonstrates this.</span></span>  
  
 `UriTemplate template = new UriTemplate("far/{bat}/baz");`  
  
 `Uri uri = new Uri("http://localhost/Base");`  
  
 `Uri result = template.BindByPosition(uri, ".");   // returns Base/form/baz`  
  
 `Uri result = template.BindByPosition(uri, "..");  // returns Base/baz`  
  
 `Uri result = template.BindByPosition(uri, "x/y");  // returns Base/form/x/y/baz`  
  
 `Uri result = template.BindByPosition(uri, "{x}");  // returns Base/form/{x}/baz`  
  
 `Uri result = template.BindByPosition(uri, "*");  // returns Base/form/*/baz`  
  
   
  
## Examples  
 <span data-ttu-id="67958-188">다음 예제에서는 <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="67958-188">The following example shows how to call the <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span></span>  
  
 [!code-csharp[UriTemplate#5](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#5)]
 [!code-vb[UriTemplate#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Defaults">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Defaults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Defaults" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.Defaults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Defaults As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Defaults { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Defaults : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.UriTemplate.Defaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67958-189">매개 변수 기본값에 대한 이름/값 쌍 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="67958-189">Gets a collection of name/value pairs for any default parameter values.</span></span></summary>
        <value><span data-ttu-id="67958-190">제네릭 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-190">A generic dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreTrailingSlash">
      <MemberSignature Language="C#" Value="public bool IgnoreTrailingSlash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreTrailingSlash" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.IgnoreTrailingSlash" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreTrailingSlash As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreTrailingSlash { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreTrailingSlash : bool" Usage="System.UriTemplate.IgnoreTrailingSlash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67958-191">후보 URI와 일치시킬 때 템플릿의 후행 슬래시("/")를 무시할지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-191">Specifies whether trailing slashes "/" in the template should be ignored when matching candidate URIs.</span></span></summary>
        <value><span data-ttu-id="67958-192"><see langword="true" /> 후행 슬래시 "/"를 무시할지, 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-192"><see langword="true" /> if trailing slashes "/" should be ignored, otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentTo">
      <MemberSignature Language="C#" Value="public bool IsEquivalentTo (UriTemplate other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEquivalentTo(class System.UriTemplate other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.IsEquivalentTo(System.UriTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEquivalentTo (other As UriTemplate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEquivalentTo(UriTemplate ^ other);" />
      <MemberSignature Language="F#" Value="member this.IsEquivalentTo : UriTemplate -&gt; bool" Usage="uriTemplate.IsEquivalentTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UriTemplate" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="67958-193">비교할 <see cref="T:System.UriTemplate" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-193">The <see cref="T:System.UriTemplate" /> to compare.</span></span></param>
        <summary><span data-ttu-id="67958-194"><see cref="T:System.UriTemplate" />이 다른 템플릿과 구조적으로 같은지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="67958-194">Indicates whether a <see cref="T:System.UriTemplate" /> is structurally equivalent to another.</span></span></summary>
        <returns><span data-ttu-id="67958-195"><see cref="T:System.UriTemplate" />이 다른 템플릿과 구조적으로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-195"><see langword="true" /> if the <see cref="T:System.UriTemplate" /> is structurally equivalent to another; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67958-196">리터럴 문자열이 같고 변수가 동일한 세그먼트에 나타난다면 두 <xref:System.UriTemplate> 인스턴스는 동일합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-196">Two <xref:System.UriTemplate> instances are equivalent if their literal strings are identical and the variables appear in the same segments.</span></span> <span data-ttu-id="67958-197">예를 들어 "weather/{state}/{city}"는 "weather/{country}/{village}"와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="67958-197">For example "weather/{state}/{city}" is equivalent to "weather/{country}/{village}".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67958-198">다음 예제에서는 <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29>를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="67958-198">The following example shows how to call the <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29>.</span></span>  
  
 [!code-csharp[UriTemplate#6](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#6)]
 [!code-vb[UriTemplate#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public UriTemplateMatch Match (Uri baseAddress, Uri candidate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.UriTemplateMatch Match(class System.Uri baseAddress, class System.Uri candidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.Match(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (baseAddress As Uri, candidate As Uri) As UriTemplateMatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateMatch ^ Match(Uri ^ baseAddress, Uri ^ candidate);" />
      <MemberSignature Language="F#" Value="member this.Match : Uri * Uri -&gt; UriTemplateMatch" Usage="uriTemplate.Match (baseAddress, candidate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriTemplateMatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="candidate" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="67958-199">기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-199">The base address.</span></span></param>
        <param name="candidate"><span data-ttu-id="67958-200">템플릿과 일치시킬 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-200">The <see cref="T:System.Uri" /> to match against the template.</span></span></param>
        <summary><span data-ttu-id="67958-201"><see cref="T:System.Uri" />를 <see cref="T:System.UriTemplate" />과 일치시키려고 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-201">Attempts to match a <see cref="T:System.Uri" /> to a <see cref="T:System.UriTemplate" />.</span></span></summary>
        <returns><span data-ttu-id="67958-202">인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-202">An instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67958-203">일치가 성공적으로 수행되면 <xref:System.UriTemplateMatch>에 후보 URI의 URI 세그먼트, 변수 값, 쿼리 문자열 값 및 와일드카드 세그먼트가 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="67958-203">If the match is successful the <xref:System.UriTemplateMatch> is populated with the URI segments, variable values, query string values, and wildcard segments from the candidate URI.</span></span> <span data-ttu-id="67958-204">일치시키지 못하면 `null`이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="67958-204">If the match is unsuccessful, `null` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67958-205">다음 예제에서는 <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="67958-205">The following example shows how to call the <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> method.</span></span>  
  
 [!code-csharp[UriTemplate#7](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#7)]
 [!code-vb[UriTemplate#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSegmentVariableNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; PathSegmentVariableNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; PathSegmentVariableNames" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.PathSegmentVariableNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSegmentVariableNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ PathSegmentVariableNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathSegmentVariableNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.UriTemplate.PathSegmentVariableNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67958-206">템플릿의 경로 세그먼트에 사용되는 변수 이름 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="67958-206">Gets a collection of variable names used within path segments in the template.</span></span></summary>
        <value><span data-ttu-id="67958-207">템플릿의 경로 세그먼트에 나타나는 변수 이름 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-207">A collection of variable names that appear within the template's path segment.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67958-208">이 컬렉션에서는 템플릿의 쿼리 부분에 나타나는 변수의 이름이 제외됩니다.</span><span class="sxs-lookup"><span data-stu-id="67958-208">The collection excludes the names of variables that appear in the query portion of the template.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67958-209">다음 예제에서는 <xref:System.UriTemplate.PathSegmentVariableNames%2A> 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="67958-209">The following example shows how to access the <xref:System.UriTemplate.PathSegmentVariableNames%2A> property.</span></span>  
  
 [!code-csharp[UriTemplate#2](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#2)]
 [!code-vb[UriTemplate#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryValueVariableNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; QueryValueVariableNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; QueryValueVariableNames" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.QueryValueVariableNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryValueVariableNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ QueryValueVariableNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryValueVariableNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.UriTemplate.QueryValueVariableNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67958-210">템플릿의 쿼리 문자열에 사용되는 변수 이름 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="67958-210">Gets a collection of variable names used within the query string in the template.</span></span></summary>
        <value><span data-ttu-id="67958-211">템플릿 문자열의 쿼리 부분에 나타나는 템플릿 변수 이름 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-211">A collection of template variable names that appear in the query portion of the template string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67958-212">이 컬렉션에서는 템플릿 문자열의 경로 부분에 나타나는 변수의 이름이 제외됩니다.</span><span class="sxs-lookup"><span data-stu-id="67958-212">This collection excludes variable names that appear in the path section of the template string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67958-213">다음 예제에서는 <xref:System.UriTemplate.QueryValueVariableNames%2A> 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="67958-213">The following example shows how to access the <xref:System.UriTemplate.QueryValueVariableNames%2A> property.</span></span>  
  
 [!code-csharp[UriTemplate#3](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#3)]
 [!code-vb[UriTemplate#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uriTemplate.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67958-214"><see cref="T:System.UriTemplate" /> 인스턴스의 문자열 표현을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="67958-214">Returns a string representation of the <see cref="T:System.UriTemplate" /> instance.</span></span></summary>
        <returns><span data-ttu-id="67958-215"><see cref="T:System.UriTemplate" /> 인스턴스의 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="67958-215">The representation of the <see cref="T:System.UriTemplate" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67958-216">다음 예제에서는 <xref:System.UriTemplate.ToString> 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="67958-216">The following example shows how to call the <xref:System.UriTemplate.ToString> method.</span></span>  
  
 [!code-csharp[UriTemplate#8](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#8)]
 [!code-vb[UriTemplate#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>