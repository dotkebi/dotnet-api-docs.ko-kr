<Type Name="EntryPointNotFoundException" FullName="System.EntryPointNotFoundException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="82a7e4370c1db919bc67ac3dffcde499dc852a05" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58684588" /></Metadata><TypeSignature Language="C#" Value="public class EntryPointNotFoundException : TypeLoadException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit EntryPointNotFoundException extends System.TypeLoadException" />
  <TypeSignature Language="DocId" Value="T:System.EntryPointNotFoundException" />
  <TypeSignature Language="VB.NET" Value="Public Class EntryPointNotFoundException&#xA;Inherits TypeLoadException" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntryPointNotFoundException : TypeLoadException" />
  <TypeSignature Language="F#" Value="type EntryPointNotFoundException = class&#xA;    inherit TypeLoadException" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.TypeLoadException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="08d50-101">진입 메서드가 없어서 클래스를 로드하지 못했을 때 throw되는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-101">The exception that is thrown when an attempt to load a class fails due to the absence of an entry method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d50-102"><xref:System.EntryPointNotFoundException> 공용 언어 런타임 어셈블리의 진입점을 식별할 수 없는 어셈블리를 로드할 수 없는 경우 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-102">An <xref:System.EntryPointNotFoundException> exception is thrown when the common language runtime is unable to load an assembly because it cannot identify the assembly's entry point.</span></span>  <span data-ttu-id="08d50-103">다음 조건에서이 예외가 throw 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-103">This exception can be thrown under the following conditions:</span></span>  
  
-   <span data-ttu-id="08d50-104">공용 언어 런타임 응용 프로그램 진입점을 찾을 수 없는 (일반적으로 `Main` 메서드)에서 실행 가능한 어셈블리.</span><span class="sxs-lookup"><span data-stu-id="08d50-104">The common language runtime is unable to locate an application entry point (typically a `Main` method) in an executable assembly.</span></span> <span data-ttu-id="08d50-105">응용 프로그램 진입점이 전역 여야 합니다 또는 `static` 메서드 매개 변수 없이 또는 유일한 매개 변수로 문자열 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-105">The application entry point must be a global or `static` method that has either no parameters or a string array as its only parameter.</span></span> <span data-ttu-id="08d50-106">진입점을 반환할 수 있습니다 `void`를 반환할 수 있습니다 또는 <xref:System.Int32> 또는 <xref:System.UInt32> 종료 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-106">The entry point can return `void`, or it can return an <xref:System.Int32> or <xref:System.UInt32> exit code.</span></span> <span data-ttu-id="08d50-107">응용 프로그램 어셈블리는 둘 이상의 진입점을 정의할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-107">An application assembly cannot define more than one entry point.</span></span>  
  
-   <span data-ttu-id="08d50-108">함수를 찾을 수 없으므로 Windows DLL의 함수에 대 한 호출을 확인할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-108">The call to a function in a Windows DLL cannot be resolved because the function cannot be found.</span></span> <span data-ttu-id="08d50-109">다음 예제에서는 <xref:System.EntryPointNotFoundException> User32.dll 라는 함수를 포함 하지 않기 때문에 예외가 throw 됩니다 `GetMyNumber`합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-109">In the following example, an <xref:System.EntryPointNotFoundException> exception is thrown because User32.dll does not include a function named `GetMyNumber`.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/nofunction1.cs#1)]
     [!code-vb[System.EntryPointNotFoundException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/nofunction1.vb#1)]  
  
-   <span data-ttu-id="08d50-110">메서드 호출에 사용할 이름을 어셈블리에서 찾을 이름 일치 하지 않으므로 Windows DLL의 함수에 대 한 호출을 확인할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-110">The call to a function in a Windows DLL cannot be resolved because the name used in the method call does not match a name found in the assembly.</span></span> <span data-ttu-id="08d50-111">자주,이 때문에 발생 합니다 <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=nameWithType> 필드가 암시적 또는 명시적으로 설정 됩니다 `true`, 호출된 된 메서드가 하나 이상의 문자열 매개 변수를 포함 하며 ANSI 및 유니코드 버전을 모두 및 메서드 호출에 사용할 이름을 하지 않습니다 이 ANSI 또는 유니코드 버전의 이름에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-111">Frequently, this occurs because the <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=nameWithType> field is either implicitly or explicitly set to `true`, the called method includes one or more string parameters and has both an ANSI and a Unicode version, and the name used in the method call does not correspond to the name of this ANSI or Unicode version.</span></span> <span data-ttu-id="08d50-112">다음 예는 Windows를 호출 하 여 그림에서는 `MessageBox` User32.dll의 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-112">The following example provides an illustration by attempting to call the Windows `MessageBox` function in User32.dll.</span></span> <span data-ttu-id="08d50-113">첫 번째 메서드 정의 지정 하므로 <xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType> 함수의 와이드 문자 버전은 공용 언어 문자열 마샬링을 `MessageBoxW`, 메서드 호출에 사용 되는 이름 대신 `MessageBox`합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-113">Because the first method definition specifies <xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType> for string marshaling, the common language looks for the wide-character version of the function, `MessageBoxW`, instead of the name used in the method call, `MessageBox`.</span></span>  <span data-ttu-id="08d50-114">두 번째 메서드 정의 호출 하 여이 문제를 해결 합니다 `MessageBoxW` 대신는 `MessageBox` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-114">The second method definition corrects this problem by calling the `MessageBoxW` instead of the `MessageBox` function.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/badcall1.cs#2)]
     [!code-vb[System.EntryPointNotFoundException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/badcall1.vb#2)]  
  
-   <span data-ttu-id="08d50-115">트 데코 레이 된 이름 보다 간단한 해당 이름으로 동적 연결 라이브러리의 함수를 호출 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-115">You are trying to call a function in a dynamic link library by its simple name rather than its decorated name.</span></span> <span data-ttu-id="08d50-116">일반적으로 c + + 컴파일러는 DLL 함수에 대 한 데코 레이트 된 이름을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-116">Typically, the C++ compiler generates a decorated name for DLL functions.</span></span> <span data-ttu-id="08d50-117">다음 c + + 코드 라는 함수를 정의 하는 예를 들어 `Double` TestDll.dll 라는 라이브러리에서.</span><span class="sxs-lookup"><span data-stu-id="08d50-117">For example, the following C++ code defines a function named `Double` in a library named TestDll.dll.</span></span>  
  
     [!code-cpp[System.EntryPointNotFoundException.Class#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cpp/testdll.cpp#6)]  
  
     <span data-ttu-id="08d50-118">다음 예제에서 코드에서 함수를 호출 하려고 할 때를 <xref:System.EntryPointNotFoundException> 없으므로 예외가 throw 됩니다는 `Double` 함수를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-118">When the code in the following example tries to call the function, an <xref:System.EntryPointNotFoundException> exception is thrown because the `Double` function cannot be found.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/mangle1.cs#7)]
     [!code-vb[System.EntryPointNotFoundException.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/mangle1.vb#7)]  
  
     <span data-ttu-id="08d50-119">그러나 해당 데코 레이트 된 이름을 사용 하 여 함수를 호출 하는 경우 (이 예제의 경우 `?Double@@YAHH@Z`), 함수 호출에 성공 하면 다음 예와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-119">However, if the function is called by using its decorated name (in this case, `?Double@@YAHH@Z`), the function call succeeds, as the following example shows.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/mangle2.cs#8)]
     [!code-vb[System.EntryPointNotFoundException.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/mangle2.vb#8)]  
  
     <span data-ttu-id="08d50-120">Dumpbin.exe와 같은 유틸리티를 사용 하 여 DLL에서 내보내기 함수의 데코레이팅된 이름을 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-120">You can find the decorated names of functions exported by a DLL by using a utility such as Dumpbin.exe.</span></span>  
  
-   <span data-ttu-id="08d50-121">관리 되지 않는 동적 연결 라이브러리를 것 처럼 관리 되는 어셈블리의 메서드를 호출 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-121">You are attempting to call a method in a managed assembly as if it were an unmanaged dynamic link library.</span></span> <span data-ttu-id="08d50-122">이 실행 중인 확인 하려면 다음 예제를 StringUtilities.dll 이라는 어셈블리를 컴파일하십시오.</span><span class="sxs-lookup"><span data-stu-id="08d50-122">To see this in action, compile the following example to an assembly named StringUtilities.dll.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/stringutilities.cs#3)]
     [!code-vb[System.EntryPointNotFoundException.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/stringutilities.vb#3)]  
  
     <span data-ttu-id="08d50-123">다음 컴파일 및 호출 하려고 하는 다음 예제를 실행 하는 `StringUtilities.SayGoodMorning` StringUtilities.dll 동적 연결 라이브러리의 메서드 비관리 코드 처럼 합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-123">Then compile and execute the following example, which attempts to call the `StringUtilities.SayGoodMorning` method in the StringUtilities.dll dynamic link library as if it were unmanaged code.</span></span> <span data-ttu-id="08d50-124">결과 <xref:System.EntryPointNotFoundException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-124">The result is an <xref:System.EntryPointNotFoundException> exception.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/importassembly1.cs#4)]
     [!code-vb[System.EntryPointNotFoundException.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/importassembly1.vb#4)]  
  
     <span data-ttu-id="08d50-125">예외를 제거 하려면 관리 되는 어셈블리 및 액세스에 대 한 참조를 추가 합니다 `StringUtilities.SayGoodMorning` 다음 예제와 같이 관리 코드에서 다른 메서드 액세스와 마찬가지로 메서드.</span><span class="sxs-lookup"><span data-stu-id="08d50-125">To eliminate the exception, add a reference to the managed assembly and access the `StringUtilities.SayGoodMorning` method just as you would access any other method in managed code, as the following example does.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/fiximportassembly1.cs#5)]
     [!code-vb[System.EntryPointNotFoundException.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/fiximportassembly1.vb#5)]  
  
-   <span data-ttu-id="08d50-126">Windows DLL 처럼 COM DLL의 메서드를 호출 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-126">You are trying to call a method in a COM DLL as if it were a Windows DLL.</span></span> <span data-ttu-id="08d50-127">COM DLL에 액세스 하려면 합니다 **참조 추가** 프로젝트에 대 한 참조를 추가 하 고 다음에서 형식 라이브러리를 선택 하려면 Visual Studio에서 옵션을 **COM** 탭.</span><span class="sxs-lookup"><span data-stu-id="08d50-127">To access a COM DLL, select the **Add Reference** option in Visual Studio to add a reference to the project, and then select the type library from the **COM** tab.</span></span>  
  
 <span data-ttu-id="08d50-128">인스턴스의 초기 속성 값의 목록을 <xref:System.EntryPointNotFoundException>, 참조는 <xref:System.EntryPointNotFoundException.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-128">For a list of initial property values for an instance of <xref:System.EntryPointNotFoundException>, see the <xref:System.EntryPointNotFoundException.%23ctor%2A> constructors.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="08d50-129">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="08d50-129">Handling and Throwing Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="08d50-130"><see cref="T:System.EntryPointNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-130">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08d50-131"><see cref="T:System.EntryPointNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-131">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d50-132">이 생성자는 <xref:System.Exception.Message%2A> "진입점 찾을 수 없습니다."와 같은 오류를 설명 하는 시스템 제공 메시지로 새 인스턴스의 속성</span><span class="sxs-lookup"><span data-stu-id="08d50-132">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "Entry point was not found."</span></span> <span data-ttu-id="08d50-133">이 메시지는 현재 시스템의 문화권을 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-133">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="08d50-134">다음 표에서는 <xref:System.EntryPointNotFoundException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-134">The following table shows the initial property values for an instance of <xref:System.EntryPointNotFoundException>.</span></span>  
  
|<span data-ttu-id="08d50-135">속성</span><span class="sxs-lookup"><span data-stu-id="08d50-135">Property</span></span>|<span data-ttu-id="08d50-136">값</span><span class="sxs-lookup"><span data-stu-id="08d50-136">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="08d50-137">null 참조(Visual Basic의 경우 `Nothing`)</span><span class="sxs-lookup"><span data-stu-id="08d50-137">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="08d50-138">지역화된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-138">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new EntryPointNotFoundException : string -&gt; EntryPointNotFoundException" Usage="new System.EntryPointNotFoundException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="08d50-139">예외에 대한 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-139">The error message that explains the reason for the exception.</span></span></param>
        <summary><span data-ttu-id="08d50-140">지정된 오류 메시지를 사용하여 <see cref="T:System.EntryPointNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-140">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d50-141">`message` 내용은 사용자의 이해를 돕기 위한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-141">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="08d50-142">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-142">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="08d50-143">다음 표에서는 <xref:System.EntryPointNotFoundException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-143">The following table shows the initial property values for an instance of <xref:System.EntryPointNotFoundException>.</span></span>  
  
|<span data-ttu-id="08d50-144">속성</span><span class="sxs-lookup"><span data-stu-id="08d50-144">Property</span></span>|<span data-ttu-id="08d50-145">값</span><span class="sxs-lookup"><span data-stu-id="08d50-145">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="08d50-146">null 참조(Visual Basic의 경우 `Nothing`)</span><span class="sxs-lookup"><span data-stu-id="08d50-146">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="08d50-147">오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-147">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EntryPointNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EntryPointNotFoundException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new EntryPointNotFoundException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; EntryPointNotFoundException" Usage="new System.EntryPointNotFoundException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="08d50-148">serialize된 개체 데이터를 보유하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-148">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="08d50-149">원본 또는 대상에 대한 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-149">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="08d50-150">serialize된 데이터를 사용하여 <see cref="T:System.EntryPointNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-150">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d50-151">deserialization을 수행하는 동안 이 생성자를 호출하여 스트림을 통해 전송될 예외 개체를 다시 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-151">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new EntryPointNotFoundException : string * Exception -&gt; EntryPointNotFoundException" Usage="new System.EntryPointNotFoundException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="08d50-152">예외에 대한 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-152">The error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="08d50-153">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-153">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="08d50-154"><paramref name="inner" /> 매개 변수가 null 참조(Visual Basic에서는 <see langword="Nothing" />)가 아니면, 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-154">If the <paramref name="inner" /> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="08d50-155">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.EntryPointNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-155">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d50-156">이전 예외의 직접적인 결과로 throw되는 예외의 <xref:System.Exception.InnerException%2A> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-156">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="08d50-157"><xref:System.Exception.InnerException%2A> 속성은 생성자에 전달된 값과 같은 값을 반환하거나 `Nothing` 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 null 참조(Visual Basic의 경우 <xref:System.Exception.InnerException%2A>)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-157">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="08d50-158">다음 표에서는 <xref:System.EntryPointNotFoundException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-158">The following table shows the initial property values for an instance of <xref:System.EntryPointNotFoundException>.</span></span>  
  
|<span data-ttu-id="08d50-159">속성</span><span class="sxs-lookup"><span data-stu-id="08d50-159">Property</span></span>|<span data-ttu-id="08d50-160">값</span><span class="sxs-lookup"><span data-stu-id="08d50-160">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="08d50-161">내부 예외 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-161">The inner exception reference.</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="08d50-162">오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="08d50-162">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="08d50-163">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="08d50-163">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>