<Type Name="StackOverflowException" FullName="System.StackOverflowException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f26c6dab85218c3632d65ee086952bc09956193c" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58716434" /></Metadata><TypeSignature Language="C#" Value="public sealed class StackOverflowException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit StackOverflowException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.StackOverflowException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StackOverflowException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class StackOverflowException sealed : SystemException" />
  <TypeSignature Language="F#" Value="type StackOverflowException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8a06c-101">실행 스택에 중첩 메서드 호출이 너무 많아서 오버플로될 때 throw되는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-101">The exception that is thrown when the execution stack overflows because it contains too many nested method calls.</span></span> <span data-ttu-id="8a06c-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a06c-103">`StackOverflowException` 너무 깊거나 재귀 경우 일반적으로 실행 스택이 오버플로 오류를 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-103">`StackOverflowException` is thrown for execution stack overflow errors, typically in case of a very deep or unbounded recursion.</span></span> <span data-ttu-id="8a06c-104">따라서 코드는 무한 루프 또는 무한 재귀가 없습니다 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-104">So make sure your code doesn't have an infinite loop or infinite recursion.</span></span>
  
 <span data-ttu-id="8a06c-105">`StackOverflowException` 값 0x800703E9 HRESULT COR_E_STACKOVERFLOW를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-105">`StackOverflowException` uses the HRESULT COR_E_STACKOVERFLOW, which has the value 0x800703E9.</span></span> <span data-ttu-id="8a06c-106">합니다 <xref:System.Reflection.Emit.OpCodes.Localloc> IL (중간 언어) 명령 throw `StackOverflowException`합니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-106">The <xref:System.Reflection.Emit.OpCodes.Localloc> intermediate language (IL) instruction throws `StackOverflowException`.</span></span> <span data-ttu-id="8a06c-107">에 대 한 초기 속성 값의 목록을 `StackOverflowException` 개체를 참조 하십시오는 <xref:System.StackOverflowException.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-107">For a list of initial property values for a `StackOverflowException` object, see the <xref:System.StackOverflowException.%23ctor%2A> constructors.</span></span>  
  
 <span data-ttu-id="8a06c-108">.NET Framework 2.0부터 catch 할 수 없습니다는 `StackOverflowException` 개체를 `try` / `catch` 블록과 해당 프로세스는 기본적으로 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-108">Starting with the .NET Framework 2.0, you can't catch a `StackOverflowException` object with a `try`/`catch` block, and the corresponding process is terminated by default.</span></span> <span data-ttu-id="8a06c-109">결과적으로 감지 하 고 스택 오버플로 방지 하도록 코드를 작성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-109">Consequently, you should write your code to detect and prevent a stack overflow.</span></span> <span data-ttu-id="8a06c-110">예를 들어, 앱 재귀에 의존 하는 경우 사용 하 여 카운터 또는 상태 조건을 재귀 루프를 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-110">For example, if your app depends on recursion, use a counter or a state condition to terminate the recursive loop.</span></span>
<span data-ttu-id="8a06c-111">섹션을 참조 하세요 (Examples)(#examples)이이 기술 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-111">See the (Examples)(#examples) section for an illustration of this technique.</span></span>
 
> [!NOTE]
>  <span data-ttu-id="8a06c-112">적용 된 <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> 특성을 throw 하는 메서드에 `StackOverflowException` 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-112">Applying the <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> attribute to a method that throws a `StackOverflowException` has no effect.</span></span> <span data-ttu-id="8a06c-113">여전히 사용자 코드에서 예외를 처리할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-113">You still cannot handle the exception from user code.</span></span>

 <span data-ttu-id="8a06c-114">앱은 CLR (공용 언어 런타임)를 호스팅하는 경우 스택 오버플로 예외가 발생 하 고 해당 프로세스를 계속 하는 위치는 응용 프로그램 도메인을 언로드하고 해야는 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-114">If your app hosts the common language runtime (CLR), it can specify that the CLR should unload the application domain where the stack overflow exception occurs and let the corresponding process continue.</span></span> <span data-ttu-id="8a06c-115">자세한 내용은 [ICLRPolicyManager 인터페이스](~/docs/framework/unmanaged-api/hosting/iclrpolicymanager-interface.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-115">For more information, see [ICLRPolicyManager Interface](~/docs/framework/unmanaged-api/hosting/iclrpolicymanager-interface.md).</span></span>

## Examples

 <span data-ttu-id="8a06c-116">다음 예제에서는 카운터를 사용 하 여 재귀 횟수를 호출 하는 되도록는 `Execute` 메서드 MAX_RECURSIVE_CALLS 상수를 정의한 최대를 초과 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-116">The following example uses a counter to ensure that the number of recursive calls to the `Execute` method do not exceed a maximum defined by the MAX_RECURSIVE_CALLS constant.</span></span>
  
 [!code-csharp[System.StackOverflowException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.stackoverflowexception.class/cs/example1a.cs#1)]
 [!code-vb[System.StackOverflowException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.stackoverflowexception.class/vb/example1a.vb#1)]  

 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="8a06c-117">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="8a06c-117">Handling and Throwing Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a06c-118"><see cref="T:System.StackOverflowException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-118">Initializes a new instance of the <see cref="T:System.StackOverflowException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackOverflowException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StackOverflowException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackOverflowException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a06c-119"><see cref="T:System.StackOverflowException" /> 클래스의 새 인스턴스를 초기화하고, 새 인스턴스의 <see cref="P:System.Exception.Message" /> 속성을 오류를 설명하는 시스템 제공 메시지(예: "요청한 작업 때문에 스택 오버플로가 발생했습니다.")로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-119">Initializes a new instance of the <see cref="T:System.StackOverflowException" /> class, setting the <see cref="P:System.Exception.Message" /> property of the new instance to a system-supplied message that describes the error, such as "The requested operation caused a stack overflow."</span></span> <span data-ttu-id="8a06c-120">이 메시지는 현재 시스템의 문화권을 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-120">This message takes into account the current system culture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a06c-121">다음 표에서는 <xref:System.StackOverflowException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-121">The following table shows the initial property values for an instance of <xref:System.StackOverflowException>.</span></span>  
  
|<span data-ttu-id="8a06c-122">속성</span><span class="sxs-lookup"><span data-stu-id="8a06c-122">Property</span></span>|<span data-ttu-id="8a06c-123">값</span><span class="sxs-lookup"><span data-stu-id="8a06c-123">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="8a06c-124">`null`.</span><span class="sxs-lookup"><span data-stu-id="8a06c-124">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="8a06c-125">지역화된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-125">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackOverflowException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StackOverflowException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackOverflowException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new StackOverflowException : string -&gt; StackOverflowException" Usage="new System.StackOverflowException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8a06c-126">오류를 설명하는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-126">A <see cref="T:System.String" /> that describes the error.</span></span> <span data-ttu-id="8a06c-127">메시지 내용은 사용자의 이해를 돕기 위한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-127">The content of message is intended to be understood by humans.</span></span> <span data-ttu-id="8a06c-128">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-128">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span></param>
        <summary><span data-ttu-id="8a06c-129">지정된 오류 메시지를 사용하여 <see cref="T:System.StackOverflowException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-129">Initializes a new instance of the <see cref="T:System.StackOverflowException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a06c-130">다음 표에서는 <xref:System.StackOverflowException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-130">The following table shows the initial property values for an instance of <xref:System.StackOverflowException>.</span></span>  
  
|<span data-ttu-id="8a06c-131">속성</span><span class="sxs-lookup"><span data-stu-id="8a06c-131">Property</span></span>|<span data-ttu-id="8a06c-132">값</span><span class="sxs-lookup"><span data-stu-id="8a06c-132">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="8a06c-133">null 참조(Visual Basic의 경우 `Nothing`)</span><span class="sxs-lookup"><span data-stu-id="8a06c-133">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="8a06c-134">오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-134">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackOverflowException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StackOverflowException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackOverflowException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new StackOverflowException : string * Exception -&gt; StackOverflowException" Usage="new System.StackOverflowException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8a06c-135">예외에 대한 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-135">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="8a06c-136">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-136">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="8a06c-137"><paramref name="innerException" /> 매개 변수가 null 참조(Visual Basic에서는 <see langword="Nothing" />)가 아니면, 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-137">If the <paramref name="innerException" /> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="8a06c-138">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.StackOverflowException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-138">Initializes a new instance of the <see cref="T:System.StackOverflowException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a06c-139">이전 예외의 직접적인 결과로 throw되는 예외는 <xref:System.Exception.InnerException%2A> 속성에 이전 예외에 대한 참조를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-139">An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="8a06c-140"><xref:System.Exception.InnerException%2A> 속성은 생성자에 전달된 값과 같은 값을 반환하거나 `Nothing` 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 null 참조(Visual Basic의 경우 <xref:System.Exception.InnerException%2A>)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-140">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="8a06c-141">다음 표에서는 <xref:System.StackOverflowException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-141">The following table shows the initial property values for an instance of <xref:System.StackOverflowException>.</span></span>  
  
|<span data-ttu-id="8a06c-142">속성</span><span class="sxs-lookup"><span data-stu-id="8a06c-142">Property</span></span>|<span data-ttu-id="8a06c-143">값</span><span class="sxs-lookup"><span data-stu-id="8a06c-143">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="8a06c-144">내부 예외 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-144">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="8a06c-145">오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8a06c-145">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="8a06c-146">예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="8a06c-146">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>