<Type Name="EncoderExceptionFallback" FullName="System.Text.EncoderExceptionFallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4cfceea742d61808bf613cc9d6e3015203ef6941" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58700250" /></Metadata><TypeSignature Language="C#" Value="public sealed class EncoderExceptionFallback : System.Text.EncoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EncoderExceptionFallback extends System.Text.EncoderFallback" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderExceptionFallback" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncoderExceptionFallback&#xA;Inherits EncoderFallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderExceptionFallback sealed : System::Text::EncoderFallback" />
  <TypeSignature Language="F#" Value="type EncoderExceptionFallback = class&#xA;    inherit EncoderFallback" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.EncoderFallback</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="517ae-101">출력 바이트 시퀀스로 변환할 수 없는 입력 문자에 대체(fallback)라고 하는 오류 처리 메커니즘을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-101">Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an output byte sequence.</span></span> <span data-ttu-id="517ae-102">입력 문자를 출력 바이트 시퀀스로 변환할 수 없으면 대체(fallback)는 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-102">The fallback throws an exception if an input character cannot be converted to an output byte sequence.</span></span> <span data-ttu-id="517ae-103">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-103">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="517ae-104">인코딩을 유니코드 문자를 인코딩된 바이트 시퀀스를 이후에 물리적 미디어, 예: 디스크, 또는 통신 링크를 통해 전송 될 수 있습니다는 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-104">An encoding maps a Unicode character to an encoded sequence of bytes, which can subsequently be transferred to a physical medium, such as a disk, or over a communications link.</span></span> <span data-ttu-id="517ae-105">문자 다양 한 방법으로 매핑될 수 있으며에서 파생 된 형식으로 표시 되는 특정 인코딩을 <xref:System.Text.Encoding> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-105">Characters can be mapped in various ways, and a particular encoding is represented by a type derived from the <xref:System.Text.Encoding> class.</span></span> <span data-ttu-id="517ae-106">특히, 인코딩 형식의 `GetBytes` 메서드는 문자를 바이트 시퀀스로 인코딩합니다 및 `GetChars` 메서드 문자 바이트 시퀀스를 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-106">Specifically, the encoding type's `GetBytes` method encodes a character to a byte sequence, and the `GetChars` method decodes a byte sequence to a character.</span></span>  
  
 <span data-ttu-id="517ae-107">입력된 문자를 인코딩하여 표현할 수 없는 경우 인코딩 작업이 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-107">An encoding operation can fail if the input character cannot be represented by the encoding.</span></span> <span data-ttu-id="517ae-108">예를 들어, 한 <xref:System.Text.ASCIIEncoding> 개체 u+0000 ~ U + 007F 범위 밖에 있는 유니코드 코드 포인트 값을 생성 하는 문자를 인코딩할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-108">For example, a <xref:System.Text.ASCIIEncoding> object cannot encode a character that yields a Unicode code point value that is outside the range U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="517ae-109">변환 하는 인코딩 또는 디코딩 변환을 수행할 수 없습니다 경우에.NET Framework는 대체 (fallback) 라고 하는 오류 처리 메커니즘을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-109">In cases where an encoding or decoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback.</span></span> <span data-ttu-id="517ae-110">응용 프로그램 미리 정의 된.NET Framework 인코더 대체 (fallback)를 사용 하거나에서 파생 된 사용자 지정 인코더 대체 (fallback)를 만들 수는 <xref:System.Text.EncoderFallback> 고 <xref:System.Text.EncoderFallbackBuffer> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-110">Your application can use the predefined .NET Framework encoder fallback, or it can create a custom encoder fallback derived from the <xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> classes.</span></span>  
  
 <span data-ttu-id="517ae-111">.NET Framework 인코딩 변환 오류를 처리 하는 것에 대 한 다른 대체 (fallback) 전략을 구현 하는 두 개의 미리 정의 된 클래스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-111">The .NET Framework provides two predefined classes that implement different fallback strategies for handling encoding conversion failures.</span></span> <span data-ttu-id="517ae-112"><xref:System.Text.EncoderReplacementFallback> 입력 변환할 수 없는 문자를 제공 하는 문자열을 대체 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-112">The <xref:System.Text.EncoderReplacementFallback> class substitutes a string provided for any input character that cannot be converted.</span></span> <span data-ttu-id="517ae-113">잘못 된 문자 대신 대체 문자열을 인코딩할 및 인코딩 작업 변환 입력의 나머지 부분을 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-113">The substitute string is encoded in place of the invalid character, and then the encoding operation continues converting the remainder of the input.</span></span> <span data-ttu-id="517ae-114">반면에 <xref:System.Text.EncoderExceptionFallback> throw 클래스는 <xref:System.Text.EncoderFallbackException> 는 잘못 된 문자가 발견 되는 경우.</span><span class="sxs-lookup"><span data-stu-id="517ae-114">In contrast, the <xref:System.Text.EncoderExceptionFallback> class throws a <xref:System.Text.EncoderFallbackException> when an invalid character is encountered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="517ae-115">다음 코드 예제는 <xref:System.Text.EncoderExceptionFallback> 고 <xref:System.Text.EncoderFallbackException> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-115">The following code example demonstrates the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderFallbackException> classes.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncExc#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncExc/cpp/fallEncExc.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncExc#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncExc/cs/fallEncExc.cs#1)]
 [!code-vb[sys.txt.fallbackEncExc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncExc/vb/fallEncExc.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="517ae-116">인코딩 이해</span><span class="sxs-lookup"><span data-stu-id="517ae-116">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderExceptionFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderExceptionFallback();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="517ae-117"><see cref="T:System.Text.EncoderExceptionFallback" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-117">Initializes a new instance of the <see cref="T:System.Text.EncoderExceptionFallback" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFallbackBuffer">
      <MemberSignature Language="C#" Value="public override System.Text.EncoderFallbackBuffer CreateFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.EncoderFallbackBuffer CreateFallbackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.CreateFallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateFallbackBuffer () As EncoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::EncoderFallbackBuffer ^ CreateFallbackBuffer();" />
      <MemberSignature Language="F#" Value="override this.CreateFallbackBuffer : unit -&gt; System.Text.EncoderFallbackBuffer" Usage="encoderExceptionFallback.CreateFallbackBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="517ae-118">문자 시퀀스를 바이트 시퀀스로 변환할 수 없으면 인코더 대체(fallback) 버퍼는 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-118">Returns an encoder fallback buffer that throws an exception if it cannot convert a character sequence to a byte sequence.</span></span></summary>
        <returns><span data-ttu-id="517ae-119">문자 시퀀스를 인코딩할 수 없으면 인코더 대체(fallback) 버퍼는 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-119">An encoder fallback buffer that throws an exception when it cannot encode a character sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="517ae-120">인코더 대체 (fallback) 버퍼를는 수신 및 인코더를 바이트 시퀀스로 변환할 수 없습니다는 문자를 처리 하는 일을 담당 합니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-120">An encoder fallback buffer is responsible for receiving and handling characters that an encoder cannot convert to a byte sequence.</span></span> <span data-ttu-id="517ae-121">인스턴스를 반환 하는이 메서드는 <xref:System.Text.EncoderExceptionFallbackBuffer> 서브 클래스는 클래스의는 <xref:System.Text.EncoderFallbackBuffer> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-121">This method returns an instance of the <xref:System.Text.EncoderExceptionFallbackBuffer> class, which is a subclass of  the <xref:System.Text.EncoderFallbackBuffer> class.</span></span> <span data-ttu-id="517ae-122"><xref:System.Text.EncoderExceptionFallbackBuffer> throw 개체는 <xref:System.Text.EncoderFallbackException> 문자를 전달할 때마다 예외 해당 <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="517ae-122">An <xref:System.Text.EncoderExceptionFallbackBuffer> object throws an <xref:System.Text.EncoderFallbackException> exception whenever characters are passed to its <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="encoderExceptionFallback.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="517ae-123"><see cref="T:System.Text.EncoderExceptionFallback" /> 클래스에서 파생되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-123">An object that derives from the <see cref="T:System.Text.EncoderExceptionFallback" /> class.</span></span></param>
        <summary><span data-ttu-id="517ae-124">현재 <see cref="T:System.Text.EncoderExceptionFallback" /> 개체와 지정된 개체가 같은지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-124">Indicates whether the current <see cref="T:System.Text.EncoderExceptionFallback" /> object and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="517ae-125"><paramref name="value" />가 <see langword="true" />(Visual Basic .NET의 경우 <see langword="null" />)이 아니고 <see cref="T:System.Text.EncoderExceptionFallback" /> 개체이면 <see langword="Nothing" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-125"><see langword="true" /> if <paramref name="value" /> is not <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET) and is a <see cref="T:System.Text.EncoderExceptionFallback" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="encoderExceptionFallback.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="517ae-126">이 인스턴스의 해시 코드를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-126">Retrieves the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="517ae-127">반환 값은 항상 같은 임의의 값이며 특별한 의미가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-127">The return value is always the same arbitrary value, and has no special significance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="517ae-128">때문에 합니다 <xref:System.Text.EncoderExceptionFallback.GetHashCode%2A> 메서드는 항상 동일한 값을 반환, 응용 프로그램은의 인스턴스 하나를 구분 하기 위해이 값을 사용 하지는 <xref:System.Text.EncoderExceptionFallback> 다른 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-128">Because the <xref:System.Text.EncoderExceptionFallback.GetHashCode%2A> method always returns the same value, the application should not use this value to distinguish one instance of the <xref:System.Text.EncoderExceptionFallback> class from another.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharCount">
      <MemberSignature Language="C#" Value="public override int MaxCharCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCharCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderExceptionFallback.MaxCharCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxCharCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxCharCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharCount : int" Usage="System.Text.EncoderExceptionFallback.MaxCharCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="517ae-129">이 인스턴스가 반환할 수 있는 최대 문자 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-129">Gets the maximum number of characters this instance can return.</span></span></summary>
        <value><span data-ttu-id="517ae-130">반환 값은 항상 0입니다.</span><span class="sxs-lookup"><span data-stu-id="517ae-130">The return value is always zero.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>