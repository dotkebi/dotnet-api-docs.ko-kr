<Type Name="Decoder" FullName="System.Text.Decoder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a8065d72d329ef933578033fe180f8a78b86cd1" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58698325" /></Metadata><TypeSignature Language="C#" Value="public abstract class Decoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Decoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.Decoder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Decoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Decoder abstract" />
  <TypeSignature Language="F#" Value="type Decoder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="04cc8-101">인코딩된 바이트 시퀀스를 문자 집합으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-101">Converts a sequence of encoded bytes into a set of characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04cc8-102">구현의 인스턴스를 가져올는 <xref:System.Text.Decoder> 클래스를 사용 해야 합니다 <xref:System.Text.Encoding.GetDecoder%2A> 메서드의 <xref:System.Text.Encoding> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-102">To obtain an instance of an implementation of the <xref:System.Text.Decoder> class, the application should use the <xref:System.Text.Encoding.GetDecoder%2A> method of an <xref:System.Text.Encoding> implementation.</span></span>  
  
 <span data-ttu-id="04cc8-103">합니다 <xref:System.Text.Decoder.GetCharCount%2A> 메서드는 바이트 시퀀스를 디코딩할에서 디코딩될 문자 확인 및 <xref:System.Text.Decoder.GetChars%2A> 메서드는 실제 디코딩을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-103">The <xref:System.Text.Decoder.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Decoder.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="04cc8-104">두 가지이 방법의 여러 버전에서 사용할 수는 <xref:System.Text.Decoder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-104">There are several versions of both of these methods available in the <xref:System.Text.Decoder> class.</span></span> <span data-ttu-id="04cc8-105">자세한 내용은 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="04cc8-105">For more information, see <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04cc8-106">A <xref:System.Text.Decoder> 개체에 대 한 연속 호출 간의 상태 정보를 유지 관리 `GetChars` 또는 <xref:System.Text.Decoder.Convert%2A> 메서드 블록으로 확장 되는 바이트 시퀀스를 올바르게 디코딩할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-106">A <xref:System.Text.Decoder> object maintains state information between successive calls to `GetChars` or <xref:System.Text.Decoder.Convert%2A> methods so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="04cc8-107"><xref:System.Text.Decoder> 도 데이터 블록의 끝에 후행 바이트를 유지 하 고 디코딩 작업은 다음에 후행 바이트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-107">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="04cc8-108">따라서 <xref:System.Text.Encoding.GetDecoder%2A> 고 <xref:System.Text.Encoding.GetEncoder%2A> 있으므로 아주 유용 네트워크 전송 및 파일 작업에 대 한 전체 데이터 스트림 대신 데이터 블록을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-108">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04cc8-109">응용 프로그램 데이터의 스트림을 사용 하 여 완료 되 면 상태 정보를 설정 하 여 플러시 되도록 확인 해야 합니다 `flush` 매개 변수를 `true` 적절 한 메서드 호출에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-109">When the application is done with a stream of data, it should make sure that the state information is flushed by setting the `flush` parameter to `true` in the appropriate method call.</span></span> <span data-ttu-id="04cc8-110">예외가 발생 하거나 응용 프로그램 스트림 전환 하는 경우 호출 해야 하는 경우 <xref:System.Text.Decoder.Reset%2A> 의 내부 상태를 지울지를 `Decoder` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-110">If an exception occurs or if the application switches streams, it should call <xref:System.Text.Decoder.Reset%2A> to clear the internal state of the `Decoder` object.</span></span>  
  
## <a name="version-considerations"></a><span data-ttu-id="04cc8-111">버전 고려 사항</span><span class="sxs-lookup"><span data-stu-id="04cc8-111">Version Considerations</span></span>  
 <span data-ttu-id="04cc8-112">A <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 변환 작업 중에 개체를 serialize 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-112">A <xref:System.Text.Decoder> or <xref:System.Text.Encoder> object can be serialized during a conversion operation.</span></span> <span data-ttu-id="04cc8-113">개체의 상태 같은 버전의.NET Framework에서 deserialize 되는 경우 유지 되었지만 다른 버전에서 deserialize 되는 경우 손실 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-113">The state of the object is retained if it is deserialized in the same version of the .NET Framework, but lost if it is deserialized in another version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04cc8-114">다음 예제에서는 사용을 <xref:System.Text.Decoder> 두 개의 서로 다른 바이트 배열을 문자 배열로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-114">The following example demonstrates the use of a <xref:System.Text.Decoder> to convert two different byte arrays into a character array.</span></span> <span data-ttu-id="04cc8-115">배열에 걸쳐 문자의 바이트 하나 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-115">One of the character's bytes spans the arrays.</span></span> <span data-ttu-id="04cc8-116">이 비슷합니다는 <xref:System.IO.StreamReader> 개체는 내부적으로 스트림의 읽을 때.</span><span class="sxs-lookup"><span data-stu-id="04cc8-116">This is similar to what a <xref:System.IO.StreamReader> object does internally when reading a stream.</span></span>  
  
 [!code-cpp[Classic Decoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Decoder Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Decoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Decoder Example/CS/source.cs#1)]
 [!code-vb[Classic Decoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Decoder Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="04cc8-117">응용 프로그램이 클래스에서 상속 하는 경우에 모든 멤버를 재정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-117">When your application inherits from this class, it must override all the members.</span></span></para></block>
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="04cc8-118">인코딩 이해</span><span class="sxs-lookup"><span data-stu-id="04cc8-118">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Decoder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Decoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04cc8-119"><see cref="T:System.Text.Decoder" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-119">Initializes a new instance of the <see cref="T:System.Text.Decoder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04cc8-120">이 클래스의 구현 인스턴스를 가져오려면 응용 프로그램을 사용 해야 합니다 <xref:System.Text.Encoding.GetDecoder%2A> 메서드는 <xref:System.Text.Encoding> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-120">To obtain an instance of an implementation of this class, the application should use the <xref:System.Text.Encoding.GetDecoder%2A> method of a <xref:System.Text.Encoding> implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04cc8-121">다음 예제에서는 두 방법으로 새 초기화 <xref:System.Text.Decoder> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="04cc8-121">The following example demonstrates two techniques for initializing a new <xref:System.Text.Decoder> instance.</span></span>  
  
 [!code-cpp[System.Text.Decoder.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Decoder.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.Decoder.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Decoder.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.Decoder.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Decoder.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04cc8-122">인코딩된 바이트 시퀀스를 문자열 또는 문자 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-122">Converts an encoded byte sequence to a string or array of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars, bool flush, out int bytesUsed, out int charsUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars, bool flush, [out] int32&amp; bytesUsed, [out] int32&amp; charsUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.Convert(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char), flush As Boolean, ByRef bytesUsed As Integer, ByRef charsUsed As Integer, ByRef completed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars, bool flush, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * bool *  *  *  -&gt; unit&#xA;override this.Convert : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * bool *  *  *  -&gt; unit" Usage="decoder.Convert (bytes, chars, flush, bytesUsed, charsUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="bytesUsed" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsUsed" Type="System.Int32" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="completed" Type="System.Boolean" RefType="out" Index="5" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <param name="flush">To be added.</param>
        <param name="bytesUsed">To be added.</param>
        <param name="charsUsed">To be added.</param>
        <param name="completed">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (byte* bytes, int byteCount, char* chars, int charCount, bool flush, out int bytesUsed, out int charsUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount, bool flush, [out] int32&amp; bytesUsed, [out] int32&amp; charsUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(System::Byte* bytes, int byteCount, char* chars, int charCount, bool flush, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int * bool *  *  *  -&gt; unit&#xA;override this.Convert : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int * bool *  *  *  -&gt; unit" Usage="decoder.Convert (bytes, byteCount, chars, charCount, flush, bytesUsed, charsUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="byteCount" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="chars" Type="System.Char*" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="charCount" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bytesUsed" Type="System.Int32" RefType="out" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="charsUsed" Type="System.Int32" RefType="out" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="completed" Type="System.Boolean" RefType="out" Index="7" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="04cc8-123">변환할 바이트 시퀀스를 포함하는 버퍼의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-123">The address of a buffer that contains the byte sequences to convert.</span></span></param>
        <param name="byteCount"><span data-ttu-id="04cc8-124">변환할 <paramref name="bytes" />의 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-124">The number of bytes in <paramref name="bytes" /> to convert.</span></span></param>
        <param name="chars"><span data-ttu-id="04cc8-125">변환된 문자를 저장할 버퍼의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-125">The address of a buffer to store the converted characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="04cc8-126">변환에서 사용할 <paramref name="chars" />의 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-126">The maximum number of characters in <paramref name="chars" /> to use in the conversion.</span></span></param>
        <param name="flush"><span data-ttu-id="04cc8-127">변환할 추가 데이터가 없음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-127"><see langword="true" /> to indicate no further data is to be converted; otherwise, <see langword="false" />.</span></span></param>
        <param name="bytesUsed"><span data-ttu-id="04cc8-128">이 메서드가 반환되는 경우 변환에서 생성된 바이트 수를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-128">When this method returns, contains the number of bytes that were produced by the conversion.</span></span> <span data-ttu-id="04cc8-129">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-129">This parameter is passed uninitialized.</span></span></param>
        <param name="charsUsed"><span data-ttu-id="04cc8-130">이 메서드가 반환되는 경우 변환에 사용된 <paramref name="chars" />의 문자 수를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-130">When this method returns, contains the number of characters from <paramref name="chars" /> that were used in the conversion.</span></span> <span data-ttu-id="04cc8-131">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-131">This parameter is passed uninitialized.</span></span></param>
        <param name="completed"><span data-ttu-id="04cc8-132">이 메서드가 반환되는 경우 <paramref name="byteCount" />로 지정된 모든 문자가 변환되었으면 <see langword="true" />를 포함하고, 그렇지 않으면 <see langword="false" />를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-132">When this method returns, contains <see langword="true" /> if all the characters specified by <paramref name="byteCount" /> were converted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="04cc8-133">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-133">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="04cc8-134">인코딩된 바이트 버퍼를 UTF-16으로 인코딩된 문자로 변환하고 그 결과를 다른 버퍼에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-134">Converts a buffer of encoded bytes to UTF-16 encoded characters and stores the result in another buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04cc8-135">유의 해야 합니다 <xref:System.Text.Decoder> 개체에 대 한 호출 간에 상태를 저장 <xref:System.Text.Decoder.Convert%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-135">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.Convert%2A>.</span></span> <span data-ttu-id="04cc8-136">응용 프로그램 데이터의 스트림을 사용 하 여 작업이 완료 되는 경우 설정 해야 합니다 `flush` 매개 변수를 `true` 상태 정보를 플러시 되도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-136">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="04cc8-137">이 설정을 사용 하면 디코더가 데이터 블록의 끝에 잘못 된 바이트를 무시 하 고 내부 버퍼를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-137">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span> <span data-ttu-id="04cc8-138">서로게이트 쌍의 high surrogate와 같은 논리 단위에 포함 된 모든 나머지 처리 된 데이터는 현재 대체 (fallback) 설정에 따라 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-138">Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</span></span>  
  
 <span data-ttu-id="04cc8-139">`Convert` 메서드는 임의 개수의 입력을 디코딩할 루프에서 사용 하도록 합니다. 예: 파일 또는 스트림에서 읽은 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-139">The `Convert` method is designed to be used in a loop to decode an arbitrary amount of input, such as data read from a file or stream.</span></span> <span data-ttu-id="04cc8-140">디코딩 작업의 출력을 고정 크기 버퍼에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-140">It stores the output of the decoding operation in a fixed-size buffer.</span></span> <span data-ttu-id="04cc8-141"><xref:System.Text.Decoder.GetChars%2A> 출력 버퍼가 충분히 크지 않은 경우 예외를 throw 하지만 <xref:System.Text.Decoder.Convert%2A> 최대한 많은 공간을 입력 하 고 읽은 바이트와 쓰여진 문자 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-141"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="04cc8-142">참조는 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> 자세한 주석에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-142">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 <span data-ttu-id="04cc8-143">`completed` 출력 매개 변수는 입력된 버퍼의 모든 데이터를 변환 되어 출력 버퍼에 저장 하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-143">The `completed` output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</span></span> <span data-ttu-id="04cc8-144">이 매개 변수는 설정 `false` 바이트 수가 지정 된 경우는 `byteCount` 에서 지정한 문자 수를 초과 하지 않고 매개 변수를 변환할 수 없습니다는 `charCount` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-144">This parameter is set to `false` if the number of bytes specified by the `byteCount` parameter cannot be converted without exceeding the number of characters specified by the `charCount` parameter.</span></span> <span data-ttu-id="04cc8-145">이 경우 응용 프로그램 출력 버퍼의 내용을 사용 해야 하거나 새 출력 버퍼를 제공 증가 합니다 `bytes` 매개 변수에 의해 지정 된 바이트 수로는 `bytesUsed` 매개 변수를 호출는 `Convert` 메서드를 다시 나머지 입력을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-145">In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the `bytes` parameter by the number of bytes specified by the `bytesUsed` parameter, then call the `Convert` method again to process the remaining input.</span></span>  
  
 <span data-ttu-id="04cc8-146">합니다 `completed` 매개 변수 설정할 수도 있습니다 `false`경우에 합니다 `bytesUsed` 및 `byteCount` 매개 변수가 같은지 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-146">The `completed` parameter can also be set to `false`, even though the `bytesUsed` and `byteCount` parameters are equal.</span></span> <span data-ttu-id="04cc8-147">데이터에서 지속 되 면 이러한 상황이 발생 합니다 <xref:System.Text.Decoder> 에 저장 되지 않은 개체는 `bytes` 버퍼.</span><span class="sxs-lookup"><span data-stu-id="04cc8-147">This situation occurs if there is still data in the <xref:System.Text.Decoder> object that has not been stored in the `bytes` buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04cc8-148"><paramref name="chars" /> 또는 <paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-148"><paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04cc8-149"><paramref name="charCount" /> 또는 <paramref name="byteCount" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-149"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="04cc8-150">출력 버퍼가 너무 작아서 변환된 입력을 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-150">The output buffer is too small to contain any of the converted input.</span></span> <span data-ttu-id="04cc8-151">출력 버퍼는 <see cref="Overload:System.Text.Decoder.GetCharCount" /> 메서드가 나타내는 크기보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-151">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Decoder.GetCharCount" /> method.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="04cc8-152">대체가 발생했습니다(자세한 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="04cc8-152">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="04cc8-153">및</span><span class="sxs-lookup"><span data-stu-id="04cc8-153">-and-</span></span> 
 <span data-ttu-id="04cc8-154"><see cref="P:System.Text.Decoder.Fallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-154"><see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="04cc8-155">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-155">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="04cc8-156">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-156">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex, int charCount, bool flush, out int bytesUsed, out int charsUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex, int32 charCount, bool flush, [out] int32&amp; bytesUsed, [out] int32&amp; charsUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer, charCount As Integer, flush As Boolean, ByRef bytesUsed As Integer, ByRef charsUsed As Integer, ByRef completed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, bool flush, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : byte[] * int * int * char[] * int * int * bool *  *  *  -&gt; unit&#xA;override this.Convert : byte[] * int * int * char[] * int * int * bool *  *  *  -&gt; unit" Usage="decoder.Convert (bytes, byteIndex, byteCount, chars, charIndex, charCount, flush, bytesUsed, charsUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="chars" Type="System.Char[]" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charIndex" Type="System.Int32" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charCount" Type="System.Int32" Index="5" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="flush" Type="System.Boolean" Index="6" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bytesUsed" Type="System.Int32" RefType="out" Index="7" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charsUsed" Type="System.Int32" RefType="out" Index="8" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="completed" Type="System.Boolean" RefType="out" Index="9" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="04cc8-157">변환할 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-157">A byte array to convert.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="04cc8-158">변환할 <paramref name="bytes" />의 첫 번째 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-158">The first element of <paramref name="bytes" /> to convert.</span></span></param>
        <param name="byteCount"><span data-ttu-id="04cc8-159"><paramref name="bytes" />의 요소 중에서 변환할 요소의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-159">The number of elements of <paramref name="bytes" /> to convert.</span></span></param>
        <param name="chars"><span data-ttu-id="04cc8-160">변환된 문자를 저장할 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-160">An array to store the converted characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="04cc8-161">데이터가 저장되는 <paramref name="chars" />의 첫 번째 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-161">The first element of <paramref name="chars" /> in which data is stored.</span></span></param>
        <param name="charCount"><span data-ttu-id="04cc8-162">변환에서 사용할 <paramref name="chars" />의 최대 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-162">The maximum number of elements of <paramref name="chars" /> to use in the conversion.</span></span></param>
        <param name="flush"><span data-ttu-id="04cc8-163">변환할 추가 데이터가 없음을 나타내려면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-163"><see langword="true" /> to indicate that no further data is to be converted; otherwise, <see langword="false" />.</span></span></param>
        <param name="bytesUsed"><span data-ttu-id="04cc8-164">이 메서드가 반환되는 경우 변환에 사용된 바이트 수를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-164">When this method returns, contains the number of bytes that were used in the conversion.</span></span> <span data-ttu-id="04cc8-165">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-165">This parameter is passed uninitialized.</span></span></param>
        <param name="charsUsed"><span data-ttu-id="04cc8-166">이 메서드가 반환되는 경우 변환으로 생성된 <paramref name="chars" />의 문자 수를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-166">When this method returns, contains the number of characters from <paramref name="chars" /> that were produced by the conversion.</span></span> <span data-ttu-id="04cc8-167">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-167">This parameter is passed uninitialized.</span></span></param>
        <param name="completed"><span data-ttu-id="04cc8-168">이 메서드가 반환되는 경우 <paramref name="byteCount" />로 지정된 모든 문자가 변환되었으면 <see langword="true" />를 포함하고, 그렇지 않으면 <see langword="false" />를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-168">When this method returns, contains <see langword="true" /> if all the characters specified by <paramref name="byteCount" /> were converted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="04cc8-169">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-169">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="04cc8-170">인코딩된 바이트 배열을 UTF-16으로 인코딩된 문자로 변환하고 그 결과를 문자 배열에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-170">Converts an array of encoded bytes to UTF-16 encoded characters and stores the result in a character array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04cc8-171">유의 해야 합니다 <xref:System.Text.Decoder> 개체에 대 한 호출 간에 상태를 저장 <xref:System.Text.Decoder.Convert%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-171">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.Convert%2A>.</span></span> <span data-ttu-id="04cc8-172">응용 프로그램 데이터의 스트림을 사용 하 여 작업이 완료 되는 경우 설정 해야 합니다 `flush` 매개 변수를 `true` 상태 정보를 플러시 되도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-172">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="04cc8-173">이 설정을 사용 하면 디코더가 데이터 블록의 끝에 잘못 된 바이트를 무시 하 고 내부 버퍼를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-173">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span> <span data-ttu-id="04cc8-174">서로게이트 쌍의 high surrogate와 같은 논리 단위에 포함 된 모든 나머지 처리 된 데이터는 현재 대체 (fallback) 설정에 따라 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-174">Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</span></span>  
  
 <span data-ttu-id="04cc8-175">`Convert` 메서드는 임의 개수의 입력을 디코딩할 루프에서 사용 하도록 합니다. 예: 파일 또는 스트림에서 읽은 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-175">The `Convert` method is designed to be used in a loop to decode an arbitrary amount of input, such as data read from a file or stream.</span></span> <span data-ttu-id="04cc8-176">디코딩 작업의 출력을 고정 크기 버퍼에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-176">It stores the output of the decoding operation in a fixed-size buffer.</span></span> <span data-ttu-id="04cc8-177"><xref:System.Text.Decoder.GetChars%2A> 출력 버퍼가 충분히 크지 않은 경우 예외를 throw 하지만 <xref:System.Text.Decoder.Convert%2A> 최대한 많은 공간을 입력 하 고 읽은 바이트와 쓰여진 문자 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-177"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="04cc8-178">참조는 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> 자세한 주석에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-178">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 <span data-ttu-id="04cc8-179">`completed` 출력 매개 변수는 입력된 버퍼의 모든 데이터를 변환 되어 출력 버퍼에 저장 하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-179">The `completed` output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</span></span> <span data-ttu-id="04cc8-180">이 매개 변수는 설정 `false` 바이트 수가 지정 된 경우는 `byteCount` 에서 지정한 문자 수를 초과 하지 않고 매개 변수를 변환할 수 없습니다는 `charCount` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-180">This parameter is set to `false` if the number of bytes specified by the `byteCount` parameter cannot be converted without exceeding the number of characters specified by the `charCount` parameter.</span></span> <span data-ttu-id="04cc8-181">이 경우 응용 프로그램 출력 버퍼의 내용을 사용 해야 하거나 새 출력 버퍼를 제공 증가 합니다 `bytes` 매개 변수에 의해 지정 된 바이트 수로는 `bytesUsed` 매개 변수를 호출는 `Convert` 메서드를 다시 나머지 입력을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-181">In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the `bytes` parameter by the number of bytes specified by the `bytesUsed` parameter, then call the `Convert` method again to process the remaining input.</span></span>  
  
 <span data-ttu-id="04cc8-182">합니다 `completed` 매개 변수 설정할 수도 있습니다 `false`경우에 합니다 `bytesUsed` 및 `byteCount` 매개 변수가 같은지 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-182">The `completed` parameter can also be set to `false`, even though the `bytesUsed` and `byteCount` parameters are equal.</span></span> <span data-ttu-id="04cc8-183">데이터에서 지속 되 면 이러한 상황이 발생 합니다 <xref:System.Text.Decoder> 에 저장 되지 않은 개체는 `bytes` 버퍼.</span><span class="sxs-lookup"><span data-stu-id="04cc8-183">This situation occurs if there is still data in the <xref:System.Text.Decoder> object that has not been stored in the `bytes` buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04cc8-184">다음 코드 예제에서는 <xref:System.Text.Encoder.Convert%2A> u t F-16 자의 파일을 u t F-8로 변환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-184">The following code example uses the <xref:System.Text.Encoder.Convert%2A> method to convert a file of UTF-16 characters to UTF-8.</span></span> <span data-ttu-id="04cc8-185">사용 하 여는 <xref:System.Text.Decoder.Convert%2A> u t F-16 자로 다시 utf-8 문자를 변환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-185">It then uses the <xref:System.Text.Decoder.Convert%2A> method to convert the UTF-8 characters back to UTF-16 characters.</span></span>  
  
 [!code-csharp[sys.txt.EncoderDecoder.convert#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.EncoderDecoder.convert/cs/edCvt.cs#1)]
 [!code-vb[sys.txt.EncoderDecoder.convert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.EncoderDecoder.convert/vb/edCvt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04cc8-186"><paramref name="chars" /> 또는 <paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-186"><paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04cc8-187"><paramref name="charIndex" />, <paramref name="charCount" />, <paramref name="byteIndex" /> 또는 <paramref name="byteCount" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-187"><paramref name="charIndex" />, <paramref name="charCount" />, <paramref name="byteIndex" />, or <paramref name="byteCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="04cc8-188">또는</span><span class="sxs-lookup"><span data-stu-id="04cc8-188">-or-</span></span> 
<span data-ttu-id="04cc8-189"><paramref name="chars" /> - <paramref name="charIndex" />의 길이가 <paramref name="charCount" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-189">The length of <paramref name="chars" /> - <paramref name="charIndex" /> is less than <paramref name="charCount" />.</span></span>  
  
<span data-ttu-id="04cc8-190">또는</span><span class="sxs-lookup"><span data-stu-id="04cc8-190">-or-</span></span> 
<span data-ttu-id="04cc8-191"><paramref name="bytes" /> - <paramref name="byteIndex" />의 길이가 <paramref name="byteCount" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-191">The length of <paramref name="bytes" /> - <paramref name="byteIndex" /> is less than <paramref name="byteCount" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="04cc8-192">출력 버퍼가 너무 작아서 변환된 입력을 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-192">The output buffer is too small to contain any of the converted input.</span></span> <span data-ttu-id="04cc8-193">출력 버퍼는 <see cref="Overload:System.Text.Decoder.GetCharCount" /> 메서드가 나타내는 크기보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-193">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Decoder.GetCharCount" /> method.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="04cc8-194">대체가 발생했습니다(자세한 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="04cc8-194">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="04cc8-195">및</span><span class="sxs-lookup"><span data-stu-id="04cc8-195">-and-</span></span> 
 <span data-ttu-id="04cc8-196"><see cref="P:System.Text.Decoder.Fallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-196"><see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public System.Text.DecoderFallback Fallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.DecoderFallback Fallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Decoder.Fallback" />
      <MemberSignature Language="VB.NET" Value="Public Property Fallback As DecoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::DecoderFallback ^ Fallback { System::Text::DecoderFallback ^ get(); void set(System::Text::DecoderFallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Fallback : System.Text.DecoderFallback with get, set" Usage="System.Text.Decoder.Fallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04cc8-197">현재 <see cref="T:System.Text.DecoderFallback" /> 개체에 대한 <see cref="T:System.Text.Decoder" /> 개체를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-197">Gets or sets a <see cref="T:System.Text.DecoderFallback" /> object for the current <see cref="T:System.Text.Decoder" /> object.</span></span></summary>
        <value><span data-ttu-id="04cc8-198"><see cref="T:System.Text.DecoderFallback" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-198">A <see cref="T:System.Text.DecoderFallback" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04cc8-199"><xref:System.Text.DecoderFallback> 개체 인코딩된 바이트 시퀀스를 문자로 변환할 수 없을 때 호출 되는 오류 처리기를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-199">The <xref:System.Text.DecoderFallback> object represents an error handler that is invoked when an encoded byte sequence cannot be converted to a character.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04cc8-200">집합 작업의 값이 <see langword="null" />(<see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-200">The value in a set operation is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="04cc8-201">현재 <see cref="T:System.Text.DecoderFallbackBuffer" /> 개체에 아직 디코딩되지 않은 데이터가 들어 있어, 설정 작업에서 새 값을 할당할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="04cc8-201">A new value cannot be assigned in a set operation because the current <see cref="T:System.Text.DecoderFallbackBuffer" /> object contains data that has not been decoded yet.</span></span></exception>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="P:System.Text.Encoder.FallbackBuffer" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="04cc8-202">인코딩 이해</span><span class="sxs-lookup"><span data-stu-id="04cc8-202">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FallbackBuffer">
      <MemberSignature Language="C#" Value="public System.Text.DecoderFallbackBuffer FallbackBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.DecoderFallbackBuffer FallbackBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Text.Decoder.FallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FallbackBuffer As DecoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::DecoderFallbackBuffer ^ FallbackBuffer { System::Text::DecoderFallbackBuffer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FallbackBuffer : System.Text.DecoderFallbackBuffer" Usage="System.Text.Decoder.FallbackBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04cc8-203">현재 <see cref="T:System.Text.DecoderFallbackBuffer" /> 개체와 관련된 <see cref="T:System.Text.Decoder" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-203">Gets the <see cref="T:System.Text.DecoderFallbackBuffer" /> object associated with the current <see cref="T:System.Text.Decoder" /> object.</span></span></summary>
        <value><span data-ttu-id="04cc8-204"><see cref="T:System.Text.DecoderFallbackBuffer" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-204">A <see cref="T:System.Text.DecoderFallbackBuffer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04cc8-205">합니다 <xref:System.Text.DecoderFallbackBuffer> 개체에서 사용 하는 데이터를 나타냅니다는 <xref:System.Text.DecoderFallback> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-205">The <xref:System.Text.DecoderFallbackBuffer> object represents data used by the <xref:System.Text.DecoderFallback> object.</span></span> <span data-ttu-id="04cc8-206"><xref:System.Text.DecoderFallback> 개체 인코딩된 바이트 시퀀스를 문자로 변환할 수 없을 때 호출 되는 오류 처리기를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-206">The <xref:System.Text.DecoderFallback> object represents an error handler that is invoked when an encoded byte sequence cannot be converted to a character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="P:System.Text.Encoder.Fallback" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04cc8-207">파생 클래스에서 재정의되면 바이트 시퀀스를 디코딩하여 생성되는 문자 수를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-207">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (ReadOnlySpan&lt;byte&gt; bytes, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetCharCount(System.ReadOnlySpan{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As ReadOnlySpan(Of Byte), flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(ReadOnlySpan&lt;System::Byte&gt; bytes, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : ReadOnlySpan&lt;byte&gt; * bool -&gt; int&#xA;override this.GetCharCount : ReadOnlySpan&lt;byte&gt; * bool -&gt; int" Usage="decoder.GetCharCount (bytes, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="flush">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte* bytes, int count, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(System::Byte* bytes, int count, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : nativeptr&lt;byte&gt; * int * bool -&gt; int&#xA;override this.GetCharCount : nativeptr&lt;byte&gt; * int * bool -&gt; int" Usage="decoder.GetCharCount (bytes, count, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="04cc8-208">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-208">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="04cc8-209">디코딩할 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-209">The number of bytes to decode.</span></span></param>
        <param name="flush"><span data-ttu-id="04cc8-210">계산 후 인코더의 내부 상태를 지우도록 시뮬레이션하려면 <see langword="true" />, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-210"><see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="04cc8-211">파생 클래스에서 재정의되면 지정한 바이트 포인터에서 시작하는 바이트 시퀀스를 디코딩하여 생성되는 문자 수를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-211">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span> <span data-ttu-id="04cc8-212">매개 변수는 계산 후 디코더의 내부 상태를 지울지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-212">A parameter indicates whether to clear the internal state of the decoder after the calculation.</span></span></summary>
        <returns><span data-ttu-id="04cc8-213">지정한 바이트 시퀀스 및 내부 버퍼의 모든 바이트를 디코딩할 경우 생성되는 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-213">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04cc8-214">이 메서드는 디코더 상태에 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-214">This method does not affect the state of the decoder.</span></span>  
  
 <span data-ttu-id="04cc8-215">정확한 배열 크기를 계산 하려면 <xref:System.Text.Decoder.GetChars%2A> 필요한 결과 문자를 저장 하려면 응용 프로그램을 사용할지 <xref:System.Text.Decoder.GetCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-215">To calculate the exact array size that <xref:System.Text.Decoder.GetChars%2A> requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="04cc8-216">하는 경우 `GetChars` 를 호출 `flush` 로 `false`, 디코더는 내부 버퍼에 데이터 블록의 끝에 후행 바이트를 저장 하 고 다음 디코딩 작업에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-216">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="04cc8-217">응용 프로그램을 호출 해야 `GetCharCount` 는 데이터 블록을 호출 하기 바로 직전에 `GetChars` 동일한 블록의 이전 블록의 모든 후행 바이트 계산에 포함 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-217">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04cc8-218"><paramref name="bytes" />가 <see langword="null" />(Visual Basic .NET의 경우 <see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-218"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04cc8-219"><paramref name="count" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="04cc8-219"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="04cc8-220">대체가 발생했습니다(자세한 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="04cc8-220">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="04cc8-221">및</span><span class="sxs-lookup"><span data-stu-id="04cc8-221">-and-</span></span> 
 <span data-ttu-id="04cc8-222"><see cref="P:System.Text.Decoder.Fallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-222"><see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="04cc8-223">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-223">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="04cc8-224">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-224">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public abstract int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : byte[] * int * int -&gt; int" Usage="decoder.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="04cc8-225">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-225">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="04cc8-226">디코딩할 첫 번째 바이트의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-226">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="04cc8-227">디코딩할 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-227">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="04cc8-228">파생 클래스에서 재정의되면 지정한 바이트 배열의 바이트 시퀀스를 디코딩하여 생성되는 문자 수를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-228">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="04cc8-229">지정한 바이트 시퀀스 및 내부 버퍼의 모든 바이트를 디코딩할 경우 생성되는 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-229">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04cc8-230">이 메서드는 디코더 상태에 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-230">This method does not affect the state of the decoder.</span></span>  
  
 <span data-ttu-id="04cc8-231">정확한 배열 크기를 계산 하려면 <xref:System.Text.Decoder.GetChars%2A> 필요한 결과 문자를 저장 하려면 응용 프로그램을 사용할지 <xref:System.Text.Decoder.GetCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-231">To calculate the exact array size that <xref:System.Text.Decoder.GetChars%2A> requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="04cc8-232">하는 경우 `GetChars` 를 호출 `flush` 로 `false`, 디코더는 내부 버퍼에 데이터 블록의 끝에 후행 바이트를 저장 하 고 다음 디코딩 작업에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-232">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="04cc8-233">응용 프로그램을 호출 해야 `GetCharCount` 는 데이터 블록을 호출 하기 바로 직전에 `GetChars` 동일한 블록의 이전 블록의 모든 후행 바이트 계산에 포함 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-233">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04cc8-234">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Text.Decoder.GetCharCount%2A> 바이트 배열의 지정된 된 범위를 디코딩하는 데 필요한 문자 수를 계산 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-234">The following code example demonstrates how to use the <xref:System.Text.Decoder.GetCharCount%2A> method to calculate the number of characters required to decode the specified range of bytes in the array.</span></span>  
  
 [!code-cpp[System.Text.Decoder.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Decoder.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.Decoder.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Decoder.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.Decoder.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Decoder.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04cc8-235"><paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-235"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04cc8-236"><paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-236"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="04cc8-237">또는</span><span class="sxs-lookup"><span data-stu-id="04cc8-237">-or-</span></span> 
 <span data-ttu-id="04cc8-238"><paramref name="index" /> 및 <paramref name="count" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-238"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="04cc8-239">대체가 발생했습니다(자세한 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="04cc8-239">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="04cc8-240">및</span><span class="sxs-lookup"><span data-stu-id="04cc8-240">-and-</span></span> 
 <span data-ttu-id="04cc8-241"><see cref="P:System.Text.Decoder.Fallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-241"><see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte[] bytes, int index, int count, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As Byte(), index As Integer, count As Integer, flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : byte[] * int * int * bool -&gt; int&#xA;override this.GetCharCount : byte[] * int * int * bool -&gt; int" Usage="decoder.GetCharCount (bytes, index, count, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="flush" Type="System.Boolean" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="04cc8-242">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-242">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="04cc8-243">디코딩할 첫 번째 바이트의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-243">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="04cc8-244">디코딩할 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-244">The number of bytes to decode.</span></span></param>
        <param name="flush"><span data-ttu-id="04cc8-245">계산 후 인코더의 내부 상태를 지우도록 시뮬레이션하려면 <see langword="true" />, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-245"><see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="04cc8-246">파생 클래스에서 재정의되면 지정한 바이트 배열의 바이트 시퀀스를 디코딩하여 생성되는 문자 수를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-246">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span> <span data-ttu-id="04cc8-247">매개 변수는 계산 후 디코더의 내부 상태를 지울지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-247">A parameter indicates whether to clear the internal state of the decoder after the calculation.</span></span></summary>
        <returns><span data-ttu-id="04cc8-248">지정한 바이트 시퀀스 및 내부 버퍼의 모든 바이트를 디코딩할 경우 생성되는 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-248">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04cc8-249">이 메서드는 디코더 상태에 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-249">This method does not affect the state of the decoder.</span></span>  
  
 <span data-ttu-id="04cc8-250">정확한 배열 크기를 계산 하려면 <xref:System.Text.Decoder.GetChars%2A> 필요한 결과 문자를 저장 하려면 응용 프로그램을 사용할지 <xref:System.Text.Decoder.GetCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-250">To calculate the exact array size that <xref:System.Text.Decoder.GetChars%2A> requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="04cc8-251">하는 경우 `GetChars` 를 호출 `flush` 로 `false`, 디코더는 내부 버퍼에 데이터 블록의 끝에 후행 바이트를 저장 하 고 다음 디코딩 작업에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-251">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="04cc8-252">응용 프로그램을 호출 해야 `GetCharCount` 는 데이터 블록을 호출 하기 바로 직전에 `GetChars` 동일한 블록의 이전 블록의 모든 후행 바이트 계산에 포함 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-252">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04cc8-253"><paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-253"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04cc8-254"><paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-254"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="04cc8-255">또는</span><span class="sxs-lookup"><span data-stu-id="04cc8-255">-or-</span></span> 
 <span data-ttu-id="04cc8-256"><paramref name="index" /> 및 <paramref name="count" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-256"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="04cc8-257">대체가 발생했습니다(자세한 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="04cc8-257">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="04cc8-258">및</span><span class="sxs-lookup"><span data-stu-id="04cc8-258">-and-</span></span> 
 <span data-ttu-id="04cc8-259"><see cref="P:System.Text.Decoder.Fallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-259"><see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04cc8-260">파생 클래스에서 재정의되면 바이트 시퀀스를 문자 집합으로 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-260">When overridden in a derived class, decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char), flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * bool -&gt; int&#xA;override this.GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * bool -&gt; int" Usage="decoder.GetChars (bytes, chars, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <param name="flush">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (byte* bytes, int byteCount, char* chars, int charCount, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int * bool -&gt; int&#xA;override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int * bool -&gt; int" Usage="decoder.GetChars (bytes, byteCount, chars, charCount, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="byteCount" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="chars" Type="System.Char*" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="charCount" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="04cc8-261">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-261">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="04cc8-262">디코딩할 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-262">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="04cc8-263">결과 문자 집합을 쓰기 시작할 위치를 가리키는 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-263">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="04cc8-264">쓸 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-264">The maximum number of characters to write.</span></span></param>
        <param name="flush"><span data-ttu-id="04cc8-265">변환 후 디코더의 내부 상태를 지우려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-265"><see langword="true" /> to clear the internal state of the decoder after the conversion; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="04cc8-266">파생 클래스에서 재정의될 때 지정한 바이트 포인터에서 시작하는 바이트 시퀀스 및 내부 버퍼의 모든 바이트를 지정한 문자 포인터에서 시작하여 저장되는 문자 집합으로 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-266">When overridden in a derived class, decodes a sequence of bytes starting at the specified byte pointer and any bytes in the internal buffer into a set of characters that are stored starting at the specified character pointer.</span></span> <span data-ttu-id="04cc8-267">매개 변수는 변환 후 디코더의 내부 상태를 지울지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-267">A parameter indicates whether to clear the internal state of the decoder after the conversion.</span></span></summary>
        <returns><span data-ttu-id="04cc8-268"><paramref name="chars" /> 매개 변수가 가리키는 위치에 쓴 실제 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-268">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04cc8-269">유의 해야 합니다 <xref:System.Text.Decoder> 개체에 대 한 호출 간에 상태를 저장 <xref:System.Text.Decoder.GetChars%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-269">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.GetChars%2A>.</span></span> <span data-ttu-id="04cc8-270">응용 프로그램 데이터의 스트림을 사용 하 여 작업이 완료 되는 경우 설정 해야 합니다 `flush` 매개 변수를 `true` 상태 정보를 플러시 되도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-270">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="04cc8-271">이 설정을 사용 하면 디코더가 데이터 블록의 끝에 잘못 된 바이트를 무시 하 고 내부 버퍼를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-271">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span>  
  
 <span data-ttu-id="04cc8-272">정확한 버퍼 크기를 계산 하려면 `GetChars` 필요한 결과 문자를 저장 하려면 응용 프로그램을 사용할지 <xref:System.Text.Decoder.GetCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-272">To calculate the exact buffer size that `GetChars` requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="04cc8-273">하는 경우 `GetChars` 를 호출 `flush` 로 `false`, 디코더는 내부 버퍼에 데이터 블록의 끝에 후행 바이트를 저장 하 고 다음 디코딩 작업에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-273">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="04cc8-274">응용 프로그램을 호출 해야 `GetCharCount` 는 데이터 블록을 호출 하기 바로 직전에 `GetChars` 동일한 블록의 이전 블록의 모든 후행 바이트 계산에 포함 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-274">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 <span data-ttu-id="04cc8-275">응용 프로그램이 입력 스트림의 여러 세그먼트를 변환할 경우 사용을 고려 합니다 <xref:System.Text.Decoder.Convert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04cc8-275">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Decoder.Convert%2A> method.</span></span> <span data-ttu-id="04cc8-276"><xref:System.Text.Decoder.GetChars%2A> 출력 버퍼가 충분히 크지 않은 경우 예외를 throw 하지만 <xref:System.Text.Decoder.Convert%2A> 최대한 많은 공간을 입력 하 고 읽은 바이트와 쓰여진 문자 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-276"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="04cc8-277">참조는 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> 자세한 주석에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-277">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04cc8-278"><paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-278"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="04cc8-279">또는</span><span class="sxs-lookup"><span data-stu-id="04cc8-279">-or-</span></span> 
 <span data-ttu-id="04cc8-280"><paramref name="chars" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-280"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04cc8-281"><paramref name="byteCount" /> 또는 <paramref name="charCount" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-281"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="04cc8-282"><paramref name="charCount" />가 결과 문자 수보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="04cc8-282"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="04cc8-283">대체가 발생했습니다(자세한 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="04cc8-283">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="04cc8-284">및</span><span class="sxs-lookup"><span data-stu-id="04cc8-284">-and-</span></span> 
 <span data-ttu-id="04cc8-285"><see cref="P:System.Text.Decoder.Fallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-285"><see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="04cc8-286">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-286">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="04cc8-287">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-287">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public abstract int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="decoder.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="04cc8-288">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-288">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="04cc8-289">디코딩할 첫 번째 바이트의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-289">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="04cc8-290">디코딩할 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-290">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="04cc8-291">결과 문자 집합을 포함할 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-291">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="04cc8-292">결과 문자 집합을 쓰기 시작할 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-292">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="04cc8-293">파생 클래스에서 재정의될 때 지정한 바이트 배열의 바이트 시퀀스 및 내부 버퍼의 모든 바이트를 지정한 문자 배열로 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-293">When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="04cc8-294"><paramref name="chars" />에 쓴 실제 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-294">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04cc8-295">유의 해야 합니다 <xref:System.Text.Decoder> 개체에 대 한 호출 간에 상태를 저장 <xref:System.Text.Decoder.GetChars%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-295">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.GetChars%2A>.</span></span> <span data-ttu-id="04cc8-296">응용 프로그램 데이터의 스트림을 사용 하 여 작업이 완료 되는 경우 설정 해야 합니다 `flush` 매개 변수를 `true` 상태 정보를 플러시 되도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-296">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="04cc8-297">이 설정을 사용 하면 디코더가 데이터 블록의 끝에 잘못 된 바이트를 무시 하 고 내부 버퍼를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-297">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span>  
  
 <span data-ttu-id="04cc8-298">정확한 배열 크기를 계산 하려면 `GetChars` 필요한 결과 문자를 저장 하려면 응용 프로그램을 사용할지 <xref:System.Text.Decoder.GetCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-298">To calculate the exact array size that `GetChars` requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="04cc8-299">하는 경우 `GetChars` 를 호출 `flush` 로 `false`, 디코더는 내부 버퍼에 데이터 블록의 끝에 후행 바이트를 저장 하 고 다음 디코딩 작업에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-299">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="04cc8-300">응용 프로그램을 호출 해야 `GetCharCount` 는 데이터 블록을 호출 하기 바로 직전에 `GetChars` 동일한 블록의 이전 블록의 모든 후행 바이트 계산에 포함 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-300">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 <span data-ttu-id="04cc8-301">응용 프로그램이 입력 스트림의 여러 세그먼트를 변환할 경우 사용을 고려 합니다 <xref:System.Text.Decoder.Convert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04cc8-301">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Decoder.Convert%2A> method.</span></span> <span data-ttu-id="04cc8-302"><xref:System.Text.Decoder.GetChars%2A> 출력 버퍼가 충분히 크지 않은 경우 예외를 throw 하지만 <xref:System.Text.Decoder.Convert%2A> 최대한 많은 공간을 입력 하 고 읽은 바이트와 쓰여진 문자 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-302"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="04cc8-303">참조는 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> 자세한 주석에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-303">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04cc8-304">다음 예제에서는 바이트 배열에서 요소의 범위를 디코딩 및 유니코드 문자 배열에 저장 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-304">The following example demonstrates how to decode a range of elements from a byte array and store them in a Unicode character array.</span></span> <span data-ttu-id="04cc8-305">합니다 <xref:System.Text.Decoder.GetCharCount%2A> 메서드는 배열에서 디코딩된 요소를 저장 하는 데 필요한 문자 수를 계산에 사용 `bytes`합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-305">The <xref:System.Text.Decoder.GetCharCount%2A> method is used to calculate the number of characters needed to store the decoded elements in the array `bytes`.</span></span> <span data-ttu-id="04cc8-306"><xref:System.Text.Decoder.GetChars%2A> 메서드는 바이트 배열에 지정 된 요소를 디코딩하고 새 문자 배열에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-306">The <xref:System.Text.Decoder.GetChars%2A> method decodes the specified elements in the byte array and stores them in the new character array.</span></span>  
  
 [!code-cpp[System.Text.Decoder.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Decoder.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.Decoder.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Decoder.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.Decoder.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Decoder.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04cc8-307"><paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-307"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="04cc8-308">또는</span><span class="sxs-lookup"><span data-stu-id="04cc8-308">-or-</span></span> 
 <span data-ttu-id="04cc8-309"><paramref name="chars" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-309"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04cc8-310"><paramref name="byteIndex" />, <paramref name="byteCount" /> 또는 <paramref name="charIndex" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="04cc8-310"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="04cc8-311">또는</span><span class="sxs-lookup"><span data-stu-id="04cc8-311">-or-</span></span> 
 <span data-ttu-id="04cc8-312"><paramref name="byteindex" /> 및 <paramref name="byteCount" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-312"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="04cc8-313">또는</span><span class="sxs-lookup"><span data-stu-id="04cc8-313">-or-</span></span> 
 <span data-ttu-id="04cc8-314"><paramref name="charIndex" />가 <paramref name="chars" />의 유효한 인덱스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="04cc8-314"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="04cc8-315"><paramref name="chars" />의 용량(<paramref name="charIndex" /> ~ 배열 끝)이 부족해서 결과 문자를 수용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="04cc8-315"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="04cc8-316">대체가 발생했습니다(자세한 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="04cc8-316">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="04cc8-317">및</span><span class="sxs-lookup"><span data-stu-id="04cc8-317">-and-</span></span> 
 <span data-ttu-id="04cc8-318"><see cref="P:System.Text.Decoder.Fallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-318"><see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer, flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] * int * int * char[] * int * bool -&gt; int&#xA;override this.GetChars : byte[] * int * int * char[] * int * bool -&gt; int" Usage="decoder.GetChars (bytes, byteIndex, byteCount, chars, charIndex, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="chars" Type="System.Char[]" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charIndex" Type="System.Int32" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="flush" Type="System.Boolean" Index="5" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="04cc8-319">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-319">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="04cc8-320">디코딩할 첫 번째 바이트의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-320">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="04cc8-321">디코딩할 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-321">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="04cc8-322">결과 문자 집합을 포함할 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-322">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="04cc8-323">결과 문자 집합을 쓰기 시작할 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-323">The index at which to start writing the resulting set of characters.</span></span></param>
        <param name="flush"><span data-ttu-id="04cc8-324">변환 후 디코더의 내부 상태를 지우려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-324"><see langword="true" /> to clear the internal state of the decoder after the conversion; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="04cc8-325">파생 클래스에서 재정의될 때 지정한 바이트 배열의 바이트 시퀀스 및 내부 버퍼의 모든 바이트를 지정한 문자 배열로 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-325">When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.</span></span> <span data-ttu-id="04cc8-326">매개 변수는 변환 후 디코더의 내부 상태를 지울지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-326">A parameter indicates whether to clear the internal state of the decoder after the conversion.</span></span></summary>
        <returns><span data-ttu-id="04cc8-327"><paramref name="chars" /> 매개 변수에 써지는 실제 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-327">The actual number of characters written into the <paramref name="chars" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04cc8-328">유의 해야 합니다 <xref:System.Text.Decoder> 개체에 대 한 호출 간에 상태를 저장 <xref:System.Text.Decoder.GetChars%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-328">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.GetChars%2A>.</span></span> <span data-ttu-id="04cc8-329">응용 프로그램 데이터의 스트림을 사용 하 여 작업이 완료 되는 경우 설정 해야 합니다 `flush` 매개 변수를 `true` 상태 정보를 플러시 되도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-329">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="04cc8-330">이 설정을 사용 하면 디코더가 데이터 블록의 끝에 잘못 된 바이트를 무시 하 고 내부 버퍼를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-330">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span>  
  
 <span data-ttu-id="04cc8-331">정확한 배열 크기를 계산 하려면 `GetChars` 필요한 결과 문자를 저장 하려면 응용 프로그램을 사용할지 <xref:System.Text.Decoder.GetCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-331">To calculate the exact array size that `GetChars` requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="04cc8-332">하는 경우 `GetChars` 를 호출 `flush` 로 `false`, 디코더는 내부 버퍼에 데이터 블록의 끝에 후행 바이트를 저장 하 고 다음 디코딩 작업에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-332">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="04cc8-333">응용 프로그램을 호출 해야 `GetCharCount` 는 데이터 블록을 호출 하기 바로 직전에 `GetChars` 동일한 블록의 이전 블록의 모든 후행 바이트 계산에 포함 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-333">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 <span data-ttu-id="04cc8-334">응용 프로그램이 입력 스트림의 여러 세그먼트를 변환할 경우 사용을 고려 합니다 <xref:System.Text.Decoder.Convert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04cc8-334">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Decoder.Convert%2A> method.</span></span> <span data-ttu-id="04cc8-335"><xref:System.Text.Decoder.GetChars%2A> 출력 버퍼가 충분히 크지 않은 경우 예외를 throw 하지만 <xref:System.Text.Decoder.Convert%2A> 최대한 많은 공간을 입력 하 고 읽은 바이트와 쓰여진 문자 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-335"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="04cc8-336">참조는 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> 자세한 주석에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-336">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04cc8-337"><paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-337"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="04cc8-338">또는</span><span class="sxs-lookup"><span data-stu-id="04cc8-338">-or-</span></span> 
 <span data-ttu-id="04cc8-339"><paramref name="chars" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-339"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04cc8-340"><paramref name="byteIndex" />, <paramref name="byteCount" /> 또는 <paramref name="charIndex" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="04cc8-340"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="04cc8-341">또는</span><span class="sxs-lookup"><span data-stu-id="04cc8-341">-or-</span></span> 
 <span data-ttu-id="04cc8-342"><paramref name="byteindex" /> 및 <paramref name="byteCount" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-342"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="04cc8-343">또는</span><span class="sxs-lookup"><span data-stu-id="04cc8-343">-or-</span></span> 
 <span data-ttu-id="04cc8-344"><paramref name="charIndex" />가 <paramref name="chars" />의 유효한 인덱스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="04cc8-344"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="04cc8-345"><paramref name="chars" />의 용량(<paramref name="charIndex" /> ~ 배열 끝)이 부족해서 결과 문자를 수용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="04cc8-345"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="04cc8-346">대체가 발생했습니다(자세한 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="04cc8-346">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="04cc8-347">및</span><span class="sxs-lookup"><span data-stu-id="04cc8-347">-and-</span></span> 
 <span data-ttu-id="04cc8-348"><see cref="P:System.Text.Decoder.Fallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-348"><see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="decoder.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04cc8-349">파생 클래스에서 재정의될 때 디코더를 다시 초기 상태로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-349">When overridden in a derived class, sets the decoder back to its initial state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04cc8-350">이 메서드는 내부 상태를 지웁니다는 <xref:System.Text.Decoder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-350">This method clears the internal state of the <xref:System.Text.Decoder> object.</span></span> <span data-ttu-id="04cc8-351">메서드는 이전 호출에서 유지 된 상태 정보를 지웁니다 <xref:System.Text.Decoder.GetChars%2A> 또는 <xref:System.Text.Decoder.Convert%2A>등 후행 바이트는 이전 데이터 블록의 끝입니다.</span><span class="sxs-lookup"><span data-stu-id="04cc8-351">The method clears any state information preserved from a previous call to <xref:System.Text.Decoder.GetChars%2A> or <xref:System.Text.Decoder.Convert%2A>, including trailing bytes at the end of the previous data block.</span></span>  
  
 <span data-ttu-id="04cc8-352">응용 프로그램에서 호출 해야 합니다 <xref:System.Text.Decoder.Reset%2A> 에서 예외가 발생 한 후에 동일한 디코더를 다시 사용 하려는 경우 메서드 <xref:System.Text.Decoder.GetChars%2A>, <xref:System.Text.Decoder.Convert%2A>, 또는 <xref:System.Text.Decoder.GetCharCount%2A>, 디코더가 스트림 전환 되 고 다른 스트림에 디코딩 하기 시작 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="04cc8-352">Your application should call the <xref:System.Text.Decoder.Reset%2A> method if it wants to reuse the same decoder even after an exception is thrown by <xref:System.Text.Decoder.GetChars%2A>, <xref:System.Text.Decoder.Convert%2A>, or <xref:System.Text.Decoder.GetCharCount%2A>, or if the decoder switches streams and begins to decode another stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>