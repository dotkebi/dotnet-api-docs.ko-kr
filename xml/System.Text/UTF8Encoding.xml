<Type Name="UTF8Encoding" FullName="System.Text.UTF8Encoding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="43d9b9f106d73cfb09db1473ac704034fdcd752e" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58456719" /></Metadata><TypeSignature Language="C#" Value="public class UTF8Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UTF8Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF8Encoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UTF8Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF8Encoding : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UTF8Encoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9d1fb-101">유니코드 문자의 UTF-8 인코딩을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-101">Represents a UTF-8 encoding of Unicode characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-102">인코딩은 유니코드 문자 집합을 바이트 시퀀스로 변환하는 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="9d1fb-103">디코딩은 유니코드 문자 집합으로 인코딩된 바이트 시퀀스로 변환 하는 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="9d1fb-104">U t F-8은 유니코드 인코딩인는 1 ~ 4 바이트의 시퀀스로 각 코드 포인트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-104">UTF-8 is a Unicode encoding that represents each code point as a sequence of one to four bytes.</span></span> <span data-ttu-id="9d1fb-105">달리 utf-16 및 UTF-32 인코딩을 u t F-8 인코딩 필요 하지 않습니다 "엔디언"; 인코딩 체계 프로세서 big endian 또는 little endian 인지에 관계 없이 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-105">Unlike the UTF-16 and UTF-32 encodings, the UTF-8 encoding does not require "endianness"; the encoding scheme is the same regardless of whether the processor is big-endian or little-endian.</span></span> <span data-ttu-id="9d1fb-106"><xref:System.Text.UTF8Encoding> Windows 코드 페이지 65001에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-106"><xref:System.Text.UTF8Encoding> corresponds to the Windows code page 65001.</span></span> <span data-ttu-id="9d1fb-107">Utf 및에서 지 원하는 다른 인코딩에 대 한 자세한 내용은 <xref:System.Text>를 참조 하세요 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-107">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="9d1fb-108">인스턴스화할 수 있습니다는 <xref:System.Text.UTF8Encoding> 다양 한 것인지에 바이트 순서 표시 (BOM)를 제공 하 고 오류 검색을 사용 하도록 설정 하려는 여부에 따라 다음 방법으로에서는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-108">You can instantiate a <xref:System.Text.UTF8Encoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM) and whether you want to enable error detection.</span></span> <span data-ttu-id="9d1fb-109">다음 표에 생성자와 <xref:System.Text.Encoding> 반환 하는 속성을 <xref:System.Text.UTF8Encoding> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-109">The following table lists the constructors and the <xref:System.Text.Encoding> property that return a <xref:System.Text.UTF8Encoding> object.</span></span>  
  
|<span data-ttu-id="9d1fb-110">멤버</span><span class="sxs-lookup"><span data-stu-id="9d1fb-110">Member</span></span>|<span data-ttu-id="9d1fb-111">BOM</span><span class="sxs-lookup"><span data-stu-id="9d1fb-111">BOM</span></span>|<span data-ttu-id="9d1fb-112">오류 검색</span><span class="sxs-lookup"><span data-stu-id="9d1fb-112">Error detection</span></span>|  
|------------|---------|---------------------|  
|<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>|<span data-ttu-id="9d1fb-113">예</span><span class="sxs-lookup"><span data-stu-id="9d1fb-113">Yes</span></span>|<span data-ttu-id="9d1fb-114">없음 (Replacement fallback)</span><span class="sxs-lookup"><span data-stu-id="9d1fb-114">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="9d1fb-115">아니요</span><span class="sxs-lookup"><span data-stu-id="9d1fb-115">No</span></span>|<span data-ttu-id="9d1fb-116">없음 (Replacement fallback)</span><span class="sxs-lookup"><span data-stu-id="9d1fb-116">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="9d1fb-117">구성 가능</span><span class="sxs-lookup"><span data-stu-id="9d1fb-117">Configurable</span></span>|<span data-ttu-id="9d1fb-118">없음 (Replacement fallback)</span><span class="sxs-lookup"><span data-stu-id="9d1fb-118">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="9d1fb-119">구성 가능</span><span class="sxs-lookup"><span data-stu-id="9d1fb-119">Configurable</span></span>|<span data-ttu-id="9d1fb-120">구성 가능</span><span class="sxs-lookup"><span data-stu-id="9d1fb-120">Configurable</span></span>|  
  
 <span data-ttu-id="9d1fb-121"><xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드는 유니코드 문자 집합 인코딩의 바이트 수 결과 확인 및 <xref:System.Text.UTF8Encoding.GetBytes%2A> 메서드에서는 실제 인코딩을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-121">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF8Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="9d1fb-122">마찬가지로 합니다 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드는 바이트 시퀀스를 디코딩할에서 디코딩될 문자 확인 및 <xref:System.Text.UTF8Encoding.GetChars%2A> 및 <xref:System.Text.UTF8Encoding.GetString%2A> 메서드는 실제 디코딩을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-122">Likewise, the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF8Encoding.GetChars%2A> and <xref:System.Text.UTF8Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="9d1fb-123">인코더 또는 디코더는 인코딩 또는 디코딩 데이터 (예: 100,000 자 세그먼트로 인코딩된 1 백만 자 문자열) 여러 블록에 걸쳐 있는 경우에 상태 정보를 저장, 사용할 수 있는 합니다 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 고 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 속성 각각.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-123">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UTF8Encoding.GetEncoder%2A> and <xref:System.Text.UTF8Encoding.GetDecoder%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="9d1fb-124">필요에 따라는 <xref:System.Text.UTF8Encoding> 개체 인코딩 프로세스에서 발생 하는 바이트 스트림 시작 부분에 접두사를 붙일 수 있습니다 하는 바이트 배열인 바이트 순서 표시 (BOM)를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-124">Optionally, the <xref:System.Text.UTF8Encoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the beginning of the byte stream that results from the encoding process.</span></span> <span data-ttu-id="9d1fb-125">U t F-8로 인코딩된 바이트 스트림 바이트 순서 표시 (BOM)를 앞에 디코더에서 바이트 순서와 변환 형식 또는 u t F를 결정 하는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-125">If a UTF-8 encoded byte stream is prefaced with a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="9d1fb-126">그러나는 유니코드 표준 모두 필요 하거나 권장 BOM을 u t F-8에서 인코딩 스트림을 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-126">Note, however, that the Unicode Standard neither requires nor recommends a BOM in UTF-8 encoded streams.</span></span> <span data-ttu-id="9d1fb-127">바이트 순서에서 바이트 순서 표시에 대 한 자세한 내용은 유니코드 표준을 참조 합니다 [유니코드 홈페이지](https://go.microsoft.com/fwlink/?LinkId=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-127">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
 <span data-ttu-id="9d1fb-128">인코더는 BOM을 제공 하도록 구성 됩니다, 경우 호출 하 여 검색할 수 있습니다는 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드; 메서드는 빈 배열을 반환 하는 고, 그렇지 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-128">If the encoder is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="9d1fb-129">인 경우에을 <xref:System.Text.UTF8Encoding> BOM 지원에 대 한 개체를 구성 하 고 적절 한;로 인코딩된 바이트 스트림의 시작 부분에 BOM을 포함 해야의 인코딩 메서드를 <xref:System.Text.UTF8Encoding> 클래스 이렇게 하지 않으면 자동으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-129">Note that, even if a <xref:System.Text.UTF8Encoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UTF8Encoding> class do not do this automatically.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9d1fb-130">오류 검색이 사용 하도록 설정 하는 데 클래스 인스턴스를 더욱 안전 하 게를 호출 해야 합니다 <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> 집합과 생성자는 `throwOnInvalidBytes` 매개 변수를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-130">To enable error detection and to make the class instance more secure, you should call the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> constructor and set the `throwOnInvalidBytes` parameter to `true`.</span></span> <span data-ttu-id="9d1fb-131">사용 하도록 설정 하는 오류 검색을 사용 하 여에 잘못 된 문자 또는 바이트 시퀀스를 검색 하는 메서드가 throw는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-131">With error detection enabled, a method that detects an invalid sequence of characters or bytes throws an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="9d1fb-132">오류 검색 예외가 throw 되지 않고 잘못 된 시퀀스는 일반적으로 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-132">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d1fb-133">개체 직렬화 되 고 다른.NET Framework 버전을 사용 하 여 역직렬화 하는 경우에 u t F-8로 인코딩된 개체의 상태가 유지 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-133">The state of a UTF-8 encoded object is not preserved if the object is serialized and deserialized using different .NET Framework versions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d1fb-134">다음 예제에서는 <xref:System.Text.UTF8Encoding> 유니코드 문자의 문자열을 인코딩하고 바이트 배열에 저장할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-134">The following example uses a <xref:System.Text.UTF8Encoding> object to encode a string of Unicode characters and store them in a byte array.</span></span> <span data-ttu-id="9d1fb-135">유니코드 문자열에는 Pi (U + 03A0) 및 시그마 (U + 03A3), ASCII 문자 범위 외부에 있는 두 문자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-135">The Unicode string includes two characters, Pi (U+03A0) and Sigma (U+03A3), that are outside the ASCII character range.</span></span> <span data-ttu-id="9d1fb-136">인코딩된 바이트 배열을 문자열로으로 디코딩되 Pi와 시그마 문자는 여전히 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-136">When the encoded byte array is decoded back to a string, the Pi and Sigma characters are still present.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UTF8Encoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/snippet.vb#1)]  
  
 <span data-ttu-id="9d1fb-137">다음 예제에서는 인코딩된 바이트를 파일에 기록 하는 바이트 순서 표시 (BOM)를 사용 하 여 바이트 스트림을 접두사 점을 제외 하 고 이전 예제와 같은 문자열을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-137">The following example uses the same string as the previous example, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="9d1fb-138">두 가지 방법으로 파일을 읽고 다음:를 사용 하 여 텍스트 파일로 <xref:System.IO.StreamReader> 개체 및 이진 파일.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-138">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="9d1fb-139">짐작할 수 모두 새로 읽기 문자열 BOM을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-139">As you would expect, neither newly-read string includes the BOM.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/bom1.cs#2)]
 [!code-vb[System.Text.UTF8Encoding Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoder" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="9d1fb-140">인코딩 이해</span><span class="sxs-lookup"><span data-stu-id="9d1fb-140">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d1fb-141"><see cref="T:System.Text.UTF8Encoding" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-141">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d1fb-142"><see cref="T:System.Text.UTF8Encoding" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-142">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-143">이 생성자는 유니코드 바이트 순서 표시를 제공 하지 않으며 잘못 된 인코딩이 검색 되었을 때 예외를 throw 하지 않습니다는 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-143">This constructor creates an instance that does not provide a Unicode byte order mark and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9d1fb-144">보안상의 이유로 사용 하는 생성자를 호출 하 여 오류 감지를 사용 하는 권장 된 `throwOnInvalidBytes` 매개 변수 및 해당 값을 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-144">For security reasons, we recommend that you enable error detection by calling a constructor with a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d1fb-145">다음 예제에서는 새 <xref:System.Text.UTF8Encoding> 인스턴스 및 해당 이름이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-145">The following example creates a new <xref:System.Text.UTF8Encoding> instance and displays its name.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF8Encoding : bool -&gt; System.Text.UTF8Encoding" Usage="new System.Text.UTF8Encoding encoderShouldEmitUTF8Identifier" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier"><span data-ttu-id="9d1fb-146"><see cref="M:System.Text.UTF8Encoding.GetPreamble" /> 메서드를 통해 유니코드 바이트 순서 표시를 반환하도록 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-146"><see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9d1fb-147"><see cref="T:System.Text.UTF8Encoding" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-147">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span> <span data-ttu-id="9d1fb-148">매개 변수는 유니코드 바이트 순서 표시를 제공할지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-148">A parameter specifies whether to provide a Unicode byte order mark.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-149">이 생성자는 잘못 된 인코딩이 검색 되었을 때 예외를 throw 하지 않는 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-149">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9d1fb-150">보안상의 이유로 포함 하는 생성자를 호출 하 여 오류 감지를 사용 해야는 `throwOnInvalidBytes` 매개 변수 및 해당 값을 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-150">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
 <span data-ttu-id="9d1fb-151">합니다 `encoderShouldEmitUTF8Identifier` 의 작업을 제어 하는 매개 변수는 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-151">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="9d1fb-152">경우 `true`, utf-8 형식으로 유니코드 바이트 순서 표시 (BOM)를 포함 하는 바이트 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-152">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="9d1fb-153">경우 `false`, 길이가 0 인 바이트 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-153">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="9d1fb-154">그러나 설정 `encoderShouldEmitUTF8Identifier` 하 `true` 발생 하지 않습니다는 <xref:System.Text.UTF8Encoding.GetBytes%2A> 바이트 배열의 시작 부분에 BOM을 접두사를 지정 하는 메서드도 않습니다는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 바이트 수의 BOM에 바이트 수를 포함 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-154">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d1fb-155">다음 예제에서는 새 <xref:System.Text.UTF8Encoding> 인스턴스를 지정 하 여 유니코드 바이트 순서 표시가 접두사를 내보내야 하는 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-155">The following example creates a new <xref:System.Text.UTF8Encoding> instance and specifies that a Unicode byte order mark prefix should be emitted by the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="9d1fb-156"><xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드 다음 유니코드 바이트 순서 표시 접두사를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-156">The <xref:System.Text.UTF8Encoding.GetPreamble%2A> method then returns the Unicode byte order mark prefix.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CPP/ctor-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CS/ctor-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/VB/ctor-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean, throwOnInvalidBytes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF8Encoding : bool * bool -&gt; System.Text.UTF8Encoding" Usage="new System.Text.UTF8Encoding (encoderShouldEmitUTF8Identifier, throwOnInvalidBytes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidBytes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier"><span data-ttu-id="9d1fb-157"><see cref="M:System.Text.UTF8Encoding.GetPreamble" /> 메서드를 통해 유니코드 바이트 순서 표시를 반환하도록 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-157"><see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method should return a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <param name="throwOnInvalidBytes"><span data-ttu-id="9d1fb-158">잘못된 인코딩이 검색되었을 때 예외를 throw하려면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-158"><see langword="true" /> to throw an exception when an invalid encoding is detected; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9d1fb-159"><see cref="T:System.Text.UTF8Encoding" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-159">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span> <span data-ttu-id="9d1fb-160">매개 변수를 사용하여 유니코드 바이트 순서 표시를 제공할지 여부와 잘못된 인코딩이 검색되었을 때 예외를 발생시킬지 여부를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-160">Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-161">합니다 `encoderShouldEmitUTF8Identifier` 의 작업을 제어 하는 매개 변수는 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-161">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="9d1fb-162">경우 `true`, utf-8 형식으로 유니코드 바이트 순서 표시 (BOM)를 포함 하는 바이트 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-162">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="9d1fb-163">경우 `false`, 길이가 0 인 바이트 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-163">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="9d1fb-164">그러나 설정 `encoderShouldEmitUTF8Identifier` 하 `true` 발생 하지 않습니다는 <xref:System.Text.UTF8Encoding.GetBytes%2A> 바이트 배열의 시작 부분에 BOM을 접두사를 지정 하는 메서드도 않습니다는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 바이트 수의 BOM에 바이트 수를 포함 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-164">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
 <span data-ttu-id="9d1fb-165">하는 경우 `throwOnInvalidBytes` 됩니다 `true`, 잘못 된 바이트 시퀀스를 검색 하는 메서드가 throw는 <xref:System.ArgumentException?displayProperty=nameWithType> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-165">If `throwOnInvalidBytes` is `true`, a method that detects an invalid byte sequence throws an <xref:System.ArgumentException?displayProperty=nameWithType> exception.</span></span> <span data-ttu-id="9d1fb-166">이 고, 그렇지는 메서드는 예외를 throw 하지 않습니다 하 고 잘못 된 시퀀스가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-166">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9d1fb-167">보안상의 이유로 포함 하는 생성자를 호출 하 여 오류 감지를 사용 해야는 `throwOnInvalidBytes` 매개 변수 및 해당 매개 변수를 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-167">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting that parameter to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d1fb-168">다음 예제에서는 새 <xref:System.Text.UTF8Encoding> 인스턴스를 지정 하는 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드는 유니코드 바이트 순서 표시 접두사를 내보내지 않아야 하 고 잘못 된 인코딩이 검색 되었을 때 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-168">The following example creates a new <xref:System.Text.UTF8Encoding> instance, specifying that the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method should not emit a Unicode byte order mark prefix, and an exception should be thrown when an invalid encoding is detected.</span></span> <span data-ttu-id="9d1fb-169">이 생성자의 동작을 기본 비교할 <xref:System.Text.UTF8Encoding.%23ctor> 생성자는 잘못 된 인코딩이 검색 되었을 때 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-169">The behavior of this constructor is compared to the default <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not throw an exception when an invalid encoding is detected.</span></span> <span data-ttu-id="9d1fb-170">두 <xref:System.Text.UTF8Encoding> 인스턴스는 잘못 된 문자 시퀀스는 행에 두 명의 상위 서로게이트 (U + D801 및 U + D802)를 포함 하는 문자 배열 인코딩; high surrogate 항상 뒤에 야 surrogate입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-170">The two <xref:System.Text.UTF8Encoding> instances encode a character array that contains two high surrogates (U+D801 and U+D802) in a row, which is an invalid character sequence; a high surrogate should always be followed by a low surrogate.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uTF8Encoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9d1fb-171">현재 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-171">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="9d1fb-172">지정한 개체와 현재 <see cref="T:System.Text.UTF8Encoding" /> 개체가 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-172">Determines whether the specified object is equal to the current <see cref="T:System.Text.UTF8Encoding" /> object.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-173"><paramref name="value" />가 <see cref="T:System.Text.UTF8Encoding" /> 인스턴스이고 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-173"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF8Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-174">두 <xref:System.Text.UTF8Encoding> 개체는 다음 조건이 모두 참인 경우 같은 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-174">Two <xref:System.Text.UTF8Encoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="9d1fb-175">바이트 순서 표시를 제공 하는 개체를 모두 또는 둘 다 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-175">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="9d1fb-176">두 개체가 동일한 인코더 대체 (fallback)를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-176">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="9d1fb-177">두 개체가 동일한 디코더가 대체 (fallback)를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-177">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d1fb-178">다음 예제에서는 <xref:System.Text.UTF8Encoding.Equals%2A> 메서드를 테스트 하는지 여부를 현재 <xref:System.Text.UTF8Encoding> 다른 개체가 같은지 <xref:System.Text.UTF8Encoding> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-178">The following example uses the <xref:System.Text.UTF8Encoding.Equals%2A> method to test whether the current <xref:System.Text.UTF8Encoding> object is equal to a different <xref:System.Text.UTF8Encoding> object.</span></span> <span data-ttu-id="9d1fb-179">4 개의 <xref:System.Text.UTF8Encoding> 개체가 만들어지고 비교 하 고 비교의 결과가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-179">Four <xref:System.Text.UTF8Encoding> objects are created and compared and the results of the comparisons are displayed.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CPP/equals-object.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CS/equals-object.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/VB/equals-object.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d1fb-180">문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-180">Calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ chars);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="uTF8Encoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="9d1fb-181">인코딩할 문자 집합이 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-181">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="9d1fb-182">지정된 <see cref="T:System.String" />의 문자를 인코딩하여 생성된 바이트 수를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-182">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-183">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-183">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-184">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetBytes%2A> 결과 바이트를 저장 하려면 호출을 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-184">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="9d1fb-185">최대 배열 크기를 계산 하려면 호출을 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-185">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="9d1fb-186">합니다 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-186">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="9d1fb-187">오류 검색을 사용 하 여 잘못 된 시퀀스를이 메서드가 throw는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-187">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="9d1fb-188">오류 검색 없이, 잘못 된 시퀀스 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-188">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="9d1fb-189">스트림 또는 파일로 저장 되 면 인코딩된 바이트는 제대로 디코딩 하도록 프리앰블을 사용 하 여 인코딩된 바이트 스트림을 접두사로 붙일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-189">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="9d1fb-190">머리말 바이트 스트림 시작 부분에 삽입 (같은 일련의 파일에 쓸 바이트의 시작 부분)은 개발자의 책임이 며, 머리말의 바이트 수를 반환 하는 값에 반영 되지 않습니다는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-190">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d1fb-191">다음 예제에서는 합니다 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 고 <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> 최대값과 실제 문자열을 인코딩하는 데 필요한 바이트 수를 계산 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-191">The following example calls the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> and <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="9d1fb-192">또한 실제 바이트 순서 표시를 사용 하 여 바이트 스트림을 저장 하는 데 필요한 바이트 수를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-192">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d1fb-193"><paramref name="chars" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-193"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9d1fb-194">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-194">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9d1fb-195">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-195">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="9d1fb-196">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="9d1fb-196">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="9d1fb-197">및</span><span class="sxs-lookup"><span data-stu-id="9d1fb-197">-and-</span></span> 
 <span data-ttu-id="9d1fb-198"><see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-198"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF8Encoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="9d1fb-199">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-199">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="9d1fb-200">인코딩할 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-200">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="9d1fb-201">지정한 문자 포인터에서 시작되는 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-201">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-202">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-202">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-203">에 필요한 정확한 배열 크기를 계산 하는 <xref:System.Text.UTF8Encoding.GetBytes%2A> 결과 바이트를 저장 하는 방법 호출을 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-203">To calculate the exact array size required by the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="9d1fb-204">최대 배열 크기를 계산 하려면 호출을 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-204">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="9d1fb-205">합니다 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-205">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="9d1fb-206">오류 검색을 사용 하 여 잘못 된 시퀀스를이 메서드가 throw는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-206">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="9d1fb-207">오류 검색 없이, 잘못 된 시퀀스 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-207">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="9d1fb-208">스트림 또는 파일로 저장 되 면 인코딩된 바이트는 제대로 디코딩 하도록 프리앰블을 사용 하 여 인코딩된 바이트 스트림을 접두사로 붙일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-208">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="9d1fb-209">머리말 바이트 스트림 시작 부분에 삽입 (같은 일련의 파일에 쓸 바이트의 시작 부분)은 개발자의 책임이 며, 머리말의 바이트 수를 반환 하는 값에 반영 되지 않습니다는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-209">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d1fb-210"><paramref name="chars" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-210"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9d1fb-211"><paramref name="count" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="9d1fb-211"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="9d1fb-212">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-212">-or-</span></span> 
<span data-ttu-id="9d1fb-213">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-213">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9d1fb-214">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-214">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="9d1fb-215">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="9d1fb-215">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span></span> 
<span data-ttu-id="9d1fb-216">및</span><span class="sxs-lookup"><span data-stu-id="9d1fb-216">-and-</span></span> 
 <span data-ttu-id="9d1fb-217"><see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-217"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="9d1fb-218">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-218">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="9d1fb-219">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-219">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="uTF8Encoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="9d1fb-220">인코딩할 문자 집합이 포함된 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-220">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="9d1fb-221">인코딩할 첫 번째 문자의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-221">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="9d1fb-222">인코딩할 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-222">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="9d1fb-223">지정한 문자 배열의 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-223">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-224">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-224">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-225">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetBytes%2A> 를 사용 하 여 결과 바이트를 저장 하려면 호출 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-225">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the uses <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="9d1fb-226">최대 배열 크기를 계산 하려면 호출을 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-226">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="9d1fb-227">합니다 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-227">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="9d1fb-228">오류 검색을 사용 하 여 잘못 된 시퀀스를이 메서드가 throw는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-228">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="9d1fb-229">오류 검색 없이, 잘못 된 시퀀스 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-229">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="9d1fb-230">스트림 또는 파일로 저장 되 면 인코딩된 바이트는 제대로 디코딩 하도록 프리앰블을 사용 하 여 인코딩된 바이트 스트림을 접두사로 붙일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-230">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="9d1fb-231">머리말 바이트 스트림 시작 부분에 삽입 (같은 일련의 파일에 쓸 바이트의 시작 부분)은 개발자의 책임이 며, 머리말의 바이트 수를 반환 하는 값에 반영 되지 않습니다는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-231">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d1fb-232">다음 예제에서는 소문자가 라틴 문자는 대문자를 사용 하 여 배열 및 호출 된 <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> 라틴어 소문자 문자를 인코딩하는 데 필요한 바이트 수를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-232">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="9d1fb-233">바이트 순서 표시가 추가 되 면 필요한 바이트의 총 수와 함께이 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-233">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="9d1fb-234">반환 된 값이 숫자를 비교 하는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드 라틴어 소문자 문자를 인코딩하는 데 필요한 바이트의 최대 수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-234">It compares this number with the value returned by the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d1fb-235"><paramref name="chars" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-235"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9d1fb-236"><paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-236"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="9d1fb-237">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-237">-or-</span></span> 
 <span data-ttu-id="9d1fb-238"><paramref name="index" /> 및 <paramref name="count" />가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-238"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="9d1fb-239">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-239">-or-</span></span> 
<span data-ttu-id="9d1fb-240">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-240">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9d1fb-241">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-241">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="9d1fb-242">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="9d1fb-242">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="9d1fb-243">및</span><span class="sxs-lookup"><span data-stu-id="9d1fb-243">-and-</span></span> 
<span data-ttu-id="9d1fb-244"><see cref="P:System.Text.Encoding.EncoderFallback" /> 속성은 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-244">The <see cref="P:System.Text.Encoding.EncoderFallback" /> property is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d1fb-245">문자 집합을 바이트 시퀀스로 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-245">Encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string -&gt; byte[]" Usage="uTF8Encoding.GetBytes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="9d1fb-246">인코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-246">The character string to encode.</span></span></param>
        <summary><span data-ttu-id="9d1fb-247">지정한 <see cref="T:System.String" /> 개체의 문자를 바이트 시퀀스로 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-247">Encodes the characters in a specified <see cref="T:System.String" /> object into a sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-248">s 매개 변수에 지정된 문자열에 인코딩된 문자를 포함하는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-248">A byte array that contains the encoded characters in the string specified by the s parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF8Encoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charCount" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bytes" Type="System.Byte*" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="9d1fb-249">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-249">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="9d1fb-250">인코딩할 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-250">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="9d1fb-251">결과 바이트 시퀀스를 쓰기 시작할 위치를 가리키는 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-251">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="9d1fb-252">쓸 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-252">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="9d1fb-253">지정한 문자 포인터에서 시작하는 문자 집합을 지정한 바이트 포인터에서 시작하여 저장되는 바이트 시퀀스로 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-253">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-254"><paramref name="bytes" />가 가리키는 위치에 써지는 실제 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-254">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-255">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetBytes%2A> 결과 바이트를 저장 하려면 호출을 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-255">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="9d1fb-256">최대 배열 크기를 계산 하려면 호출을 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-256">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="9d1fb-257">합니다 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-257">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="9d1fb-258">오류 검색을 사용 하 여 잘못 된 시퀀스를이 메서드가 throw는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-258">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="9d1fb-259">오류 검색 없이, 잘못 된 시퀀스 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-259">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="9d1fb-260">같은 스트림에서 읽은 데이터를 변환할 데이터를 순차 블록에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-260">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="9d1fb-261">이 경우 또는 사용 하 여 데이터의 양이 너무 커서 작은 블록으로 나눌 경우 합니다 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 반환한 합니다 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-261">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> returned by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="9d1fb-262">스트림 또는 파일로 저장 되 면 인코딩된 바이트는 제대로 디코딩 하도록 프리앰블을 사용 하 여 인코딩된 바이트 스트림을 접두사로 붙일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-262">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="9d1fb-263">머리말 바이트 스트림 시작 부분에 삽입 (같은 일련의 파일에 쓸 바이트의 시작 부분)은 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-263">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="9d1fb-264"><xref:System.Text.UTF8Encoding.GetBytes%2A> 메서드 인코딩된 바이트 시퀀스의 시작 부분에 대 한 프리앰블 앞에 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-264">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d1fb-265"><paramref name="chars" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-265"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9d1fb-266">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-266">-or-</span></span> 
 <span data-ttu-id="9d1fb-267"><paramref name="bytes" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-267"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9d1fb-268"><paramref name="charCount" /> 또는 <paramref name="byteCount" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-268"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9d1fb-269">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-269">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="9d1fb-270">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-270">-or-</span></span> 
 <span data-ttu-id="9d1fb-271"><paramref name="byteCount" />가 결과 바이트 수보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="9d1fb-271"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="9d1fb-272">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="9d1fb-272">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="9d1fb-273">및</span><span class="sxs-lookup"><span data-stu-id="9d1fb-273">-and-</span></span> 
 <span data-ttu-id="9d1fb-274"><see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-274"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="9d1fb-275">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-275">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="9d1fb-276">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-276">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="uTF8Encoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="9d1fb-277">인코딩할 문자 집합이 포함된 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-277">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="9d1fb-278">인코딩할 첫 번째 문자의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-278">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="9d1fb-279">인코딩할 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-279">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="9d1fb-280">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-280">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="9d1fb-281">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-281">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="9d1fb-282">지정한 문자 배열의 문자 집합을 지정한 바이트 배열로 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-282">Encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-283"><paramref name="bytes" />에 쓴 실제 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-283">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-284">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetBytes%2A> 결과 바이트를 저장 하려면 호출을 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-284">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="9d1fb-285">최대 배열 크기를 계산 하려면 호출을 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-285">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="9d1fb-286">합니다 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-286">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="9d1fb-287">오류 검색을 사용 하 여 잘못 된 시퀀스를이 메서드가 throw는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-287">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="9d1fb-288">오류 검색 없이, 잘못 된 시퀀스 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-288">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="9d1fb-289">같은 스트림에서 읽은 데이터를 변환할 데이터를 순차 블록에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-289">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="9d1fb-290">이 경우 또는 사용 하 여 데이터의 양이 너무 커서 작은 블록으로 나눌 경우 합니다 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 제공한 합니다 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-290">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="9d1fb-291">스트림 또는 파일로 저장 되 면 인코딩된 바이트는 제대로 디코딩 하도록 프리앰블을 사용 하 여 인코딩된 바이트 스트림을 접두사로 붙일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-291">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="9d1fb-292">머리말 바이트 스트림 시작 부분에 삽입 (같은 일련의 파일에 쓸 바이트의 시작 부분)은 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-292">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="9d1fb-293"><xref:System.Text.UTF8Encoding.GetBytes%2A> 메서드 인코딩된 바이트 시퀀스의 시작 부분에 대 한 프리앰블 앞에 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-293">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d1fb-294">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetBytes%2A> 문자열 및 저장소를 바이트 배열의 요소 범위에서 인코딩된 바이트에서 문자 범위를 인코딩할 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-294">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of characters from a string and stores the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d1fb-295"><paramref name="chars" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-295"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9d1fb-296">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-296">-or-</span></span> 
 <span data-ttu-id="9d1fb-297"><paramref name="bytes" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-297"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9d1fb-298"><paramref name="charIndex" />, <paramref name="charCount" /> 또는 <paramref name="byteIndex" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="9d1fb-298"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="9d1fb-299">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-299">-or-</span></span> 
 <span data-ttu-id="9d1fb-300"><paramref name="charIndex" /> 및 <paramref name="charCount" />가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-300"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="9d1fb-301">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-301">-or-</span></span> 
 <span data-ttu-id="9d1fb-302"><paramref name="byteIndex" />가 <paramref name="bytes" />의 유효한 인덱스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="9d1fb-302"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9d1fb-303">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-303">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="9d1fb-304">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-304">-or-</span></span> 
 <span data-ttu-id="9d1fb-305"><paramref name="bytes" />의 용량(<paramref name="byteIndex" /> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="9d1fb-305"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="9d1fb-306">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="9d1fb-306">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="9d1fb-307">및</span><span class="sxs-lookup"><span data-stu-id="9d1fb-307">-and-</span></span> 
 <span data-ttu-id="9d1fb-308"><see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-308"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="uTF8Encoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="9d1fb-309">인코딩할 문자 집합이 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-309">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="9d1fb-310">인코딩할 첫 번째 문자의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-310">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="9d1fb-311">인코딩할 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-311">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="9d1fb-312">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-312">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="9d1fb-313">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-313">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="9d1fb-314">지정된 <see cref="T:System.String" />의 문자 집합을 지정된 바이트 배열로 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-314">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-315"><paramref name="bytes" />에 쓴 실제 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-315">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-316">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetBytes%2A> 결과 바이트를 저장 하려면 호출을 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-316">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="9d1fb-317">최대 배열 크기를 계산 하려면 호출을 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-317">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="9d1fb-318">합니다 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-318">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="9d1fb-319">오류 검색을 사용 하 여 잘못 된 시퀀스를이 메서드가 throw는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-319">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="9d1fb-320">오류 검색 없이, 잘못 된 시퀀스 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-320">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="9d1fb-321">같은 스트림에서 읽은 데이터를 변환할 데이터를 순차 블록에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-321">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="9d1fb-322">이 경우 또는 사용 하 여 데이터의 양이 너무 커서 작은 블록으로 나눌 경우 합니다 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 제공한 합니다 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-322">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="9d1fb-323">스트림 또는 파일로 저장 되 면 인코딩된 바이트는 제대로 디코딩 하도록 프리앰블을 사용 하 여 인코딩된 바이트 스트림을 접두사로 붙일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-323">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="9d1fb-324">머리말 바이트 스트림 시작 부분에 삽입 (같은 일련의 파일에 쓸 바이트의 시작 부분)은 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-324">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="9d1fb-325"><xref:System.Text.UTF8Encoding.GetBytes%2A> 메서드 인코딩된 바이트 시퀀스의 시작 부분에 대 한 프리앰블 앞에 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-325">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d1fb-326">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetBytes%2A> 메서드는 유니코드 문자 배열에서 요소의 범위를 인코딩하고 인코딩된 바이트를 바이트 배열의 요소 범위에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-326">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d1fb-327"><paramref name="s" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-327"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9d1fb-328">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-328">-or-</span></span> 
 <span data-ttu-id="9d1fb-329"><paramref name="bytes" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-329"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9d1fb-330"><paramref name="charIndex" />, <paramref name="charCount" /> 또는 <paramref name="byteIndex" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="9d1fb-330"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="9d1fb-331">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-331">-or-</span></span> 
 <span data-ttu-id="9d1fb-332"><paramref name="charIndex" /> 및 <paramref name="charCount" />가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-332"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="9d1fb-333">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-333">-or-</span></span> 
 <span data-ttu-id="9d1fb-334"><paramref name="byteIndex" />가 <paramref name="bytes" />의 유효한 인덱스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="9d1fb-334"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9d1fb-335">오류 검색이 사용되고 <paramref name="s" />에 잘못된 문자 시퀀스를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-335">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="9d1fb-336">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-336">-or-</span></span> 
 <span data-ttu-id="9d1fb-337"><paramref name="bytes" />의 용량(<paramref name="byteIndex" /> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="9d1fb-337"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="9d1fb-338">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="9d1fb-338">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="9d1fb-339">및</span><span class="sxs-lookup"><span data-stu-id="9d1fb-339">-and-</span></span> 
 <span data-ttu-id="9d1fb-340"><see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-340"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d1fb-341">바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-341">Calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF8Encoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="9d1fb-342">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-342">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="9d1fb-343">디코딩할 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-343">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="9d1fb-344">지정한 바이트 포인터에서 시작되는 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-344">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-345">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-345">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-346">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetChars%2A> 결과 문자를 저장 하려면 호출을 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-346">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="9d1fb-347">최대 배열 크기를 계산 하려면 호출을 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-347">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="9d1fb-348">합니다 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-348">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="9d1fb-349">오류 검색을 사용 하 여 잘못 된 시퀀스를이 메서드가 throw는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-349">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="9d1fb-350">오류 검색 없이, 잘못 된 시퀀스 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-350">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d1fb-351"><paramref name="bytes" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-351"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9d1fb-352"><paramref name="count" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="9d1fb-352"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="9d1fb-353">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-353">-or-</span></span> 
<span data-ttu-id="9d1fb-354">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-354">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9d1fb-355">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-355">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="9d1fb-356">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="9d1fb-356">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="9d1fb-357">및</span><span class="sxs-lookup"><span data-stu-id="9d1fb-357">-and-</span></span> 
 <span data-ttu-id="9d1fb-358"><see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-358"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="9d1fb-359">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-359">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="9d1fb-360">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-360">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="uTF8Encoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="9d1fb-361">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-361">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="9d1fb-362">디코딩할 첫 번째 바이트의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-362">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="9d1fb-363">디코딩할 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-363">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="9d1fb-364">지정한 바이트 배열의 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-364">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-365">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-365">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-366">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetChars%2A> 결과 문자를 저장 하려면 호출을 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-366">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="9d1fb-367">최대 배열 크기를 계산 하려면 호출을 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-367">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="9d1fb-368">합니다 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-368">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="9d1fb-369">오류 검색을 사용 하 여 잘못 된 시퀀스를이 메서드가 throw는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-369">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="9d1fb-370">오류 검색 없이, 잘못 된 시퀀스 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-370">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d1fb-371">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 바이트 배열에서 요소의 범위를 디코딩하여 생성 되는 문자 수를 반환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-371">The following example uses the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d1fb-372"><paramref name="bytes" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-372"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9d1fb-373"><paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-373"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="9d1fb-374">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-374">-or-</span></span> 
 <span data-ttu-id="9d1fb-375"><paramref name="index" /> 및 <paramref name="count" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-375"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="9d1fb-376">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-376">-or-</span></span> 
<span data-ttu-id="9d1fb-377">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-377">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9d1fb-378">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-378">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="9d1fb-379">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="9d1fb-379">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="9d1fb-380">및</span><span class="sxs-lookup"><span data-stu-id="9d1fb-380">-and-</span></span> 
 <span data-ttu-id="9d1fb-381"><see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-381"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d1fb-382">바이트 시퀀스를 문자 집합으로 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-382">Decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF8Encoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="chars" Type="System.Char*" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charCount" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="9d1fb-383">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-383">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="9d1fb-384">디코딩할 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-384">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="9d1fb-385">결과 문자 집합을 쓰기 시작할 위치를 가리키는 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-385">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="9d1fb-386">쓸 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-386">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="9d1fb-387">지정한 바이트 포인터에서 시작하는 바이트 시퀀스를 지정한 문자 포인터에서 시작하여 저장되는 문자 집합으로 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-387">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-388"><paramref name="chars" />가 가리키는 위치에 써지는 실제 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-388">The actual number of characters written at the location indicated by <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-389">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetChars%2A> 결과 문자를 저장 하려면 호출을 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-389">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="9d1fb-390">최대 배열 크기를 계산 하려면 호출을 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-390">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="9d1fb-391">합니다 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-391">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="9d1fb-392">오류 검색을 사용 하 여 잘못 된 시퀀스를이 메서드가 throw는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-392">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="9d1fb-393">오류 검색 없이, 잘못 된 시퀀스 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-393">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="9d1fb-394">디코딩할 바이트 범위는 바이트 순서 표시 (BOM)를 포함 하 고 BOM이 아닌 인식 형식의 메서드에 의해 반환 된 바이트 배열 하는 경우이 메서드에서 반환 된 문자 배열의 문자 U + FFFE 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-394">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="9d1fb-395">호출 하 여 제거할 수 있습니다는 <xref:System.String.TrimStart%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-395">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9d1fb-396">같은 스트림에서 읽은 데이터를 변환할 데이터를 순차 블록에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-396">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="9d1fb-397">이 경우 또는 데이터의 양이 너무 커서 작은 블록으로 나눌 필요가 있는 경우 사용 합니다 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 에서 제공 하는 개체를 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-397">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d1fb-398"><paramref name="bytes" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-398"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9d1fb-399">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-399">-or-</span></span> 
 <span data-ttu-id="9d1fb-400"><paramref name="chars" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-400"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9d1fb-401"><paramref name="byteCount" /> 또는 <paramref name="charCount" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-401"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9d1fb-402">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-402">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
<span data-ttu-id="9d1fb-403">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-403">-or-</span></span> 
 <span data-ttu-id="9d1fb-404"><paramref name="charCount" />가 결과 문자 수보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="9d1fb-404"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="9d1fb-405">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="9d1fb-405">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="9d1fb-406">및</span><span class="sxs-lookup"><span data-stu-id="9d1fb-406">-and-</span></span> 
 <span data-ttu-id="9d1fb-407"><see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-407"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="9d1fb-408">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-408">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="9d1fb-409">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-409">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="uTF8Encoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="9d1fb-410">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-410">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="9d1fb-411">디코딩할 첫 번째 바이트의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-411">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="9d1fb-412">디코딩할 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-412">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="9d1fb-413">결과 문자 집합을 포함할 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-413">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="9d1fb-414">결과 문자 집합을 쓰기 시작할 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-414">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="9d1fb-415">지정한 바이트 배열의 바이트 시퀀스를 지정한 문자 배열로 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-415">Decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-416"><paramref name="chars" />에 쓴 실제 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-416">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-417">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetChars%2A> 결과 문자를 저장 하려면 호출을 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-417">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="9d1fb-418">최대 배열 크기를 계산 하려면 호출을 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-418">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="9d1fb-419">합니다 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-419">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="9d1fb-420">오류 검색을 사용 하 여 잘못 된 시퀀스를이 메서드가 throw는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-420">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="9d1fb-421">오류 검색 없이, 잘못 된 시퀀스 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-421">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="9d1fb-422">디코딩할 바이트 범위는 바이트 순서 표시 (BOM)를 포함 하 고 BOM이 아닌 인식 형식의 메서드에 의해 반환 된 바이트 배열 하는 경우이 메서드에서 반환 된 문자 배열의 문자 U + FFFE 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-422">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="9d1fb-423">호출 하 여 제거할 수 있습니다는 <xref:System.String.TrimStart%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-423">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9d1fb-424">같은 스트림에서 읽은 데이터를 변환할 데이터를 순차 블록에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-424">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="9d1fb-425">이 경우 또는 사용 하 여 데이터의 양이 너무 커서 작은 블록으로 나눌 경우 합니다 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 제공한 합니다 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-425">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d1fb-426">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetChars%2A> 메서드는 바이트 배열에서 요소의 범위를 디코딩하고 결과 문자 배열에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-426">The following example uses the <xref:System.Text.UTF8Encoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d1fb-427"><paramref name="bytes" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-427"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9d1fb-428">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-428">-or-</span></span> 
 <span data-ttu-id="9d1fb-429"><paramref name="chars" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-429"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9d1fb-430"><paramref name="byteIndex" />, <paramref name="byteCount" /> 또는 <paramref name="charIndex" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="9d1fb-430"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="9d1fb-431">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-431">-or-</span></span> 
 <span data-ttu-id="9d1fb-432"><paramref name="byteindex" /> 및 <paramref name="byteCount" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-432"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="9d1fb-433">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-433">-or-</span></span> 
 <span data-ttu-id="9d1fb-434"><paramref name="charIndex" />가 <paramref name="chars" />의 유효한 인덱스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="9d1fb-434"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9d1fb-435">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-435">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
<span data-ttu-id="9d1fb-436">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-436">-or-</span></span> 
 <span data-ttu-id="9d1fb-437"><paramref name="chars" />의 용량(<paramref name="charIndex" /> ~ 배열 끝)이 부족해서 결과 문자를 수용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="9d1fb-437"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="9d1fb-438">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="9d1fb-438">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="9d1fb-439">및</span><span class="sxs-lookup"><span data-stu-id="9d1fb-439">-and-</span></span> 
 <span data-ttu-id="9d1fb-440"><see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-440"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="uTF8Encoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d1fb-441">UTF-8로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 디코더를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-441">Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-442">UTF-8로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 디코더입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-442">A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-443"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> 메서드를 비슷한 방식으로 문자의 순차 블록 순차 블록 바이트 변환 된 <xref:System.Text.UTF8Encoding.GetChars%2A> 이 클래스의 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-443">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF8Encoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="9d1fb-444">그러나는 <xref:System.Text.Decoder> 블록으로 확장 되는 바이트 시퀀스를 올바르게 디코딩할 수 있도록 호출 간의 상태 정보를 유지 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-444">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="9d1fb-445"><xref:System.Text.Decoder> 도 데이터 블록의 끝에 후행 바이트를 유지 하 고 디코딩 작업은 다음에 후행 바이트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-445">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="9d1fb-446">따라서 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 고 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 있으므로 아주 유용 네트워크 전송 및 파일 작업에 대 한 전체 데이터 스트림 대신 데이터 블록을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-446">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="9d1fb-447">오류 검색 하도록 설정할지 여부, 즉, 합니다 `throwOnInvalidCharacters` 생성자의 매개 변수는 설정 `true`, 오류 감지에도 사용는 <xref:System.Text.Decoder> 이 메서드에서 반환 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-447">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="9d1fb-448">오류 검색이 사용 되는 잘못 된 시퀀스가 발생 하는 경우 디코더의 상태 정의 되지 않으며 처리를 중지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-448">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d1fb-449">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetDecoder%2A> utf-8 디코더를 가져오는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-449">The following example uses the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method to obtain a UTF-8 decoder.</span></span> <span data-ttu-id="9d1fb-450">디코더가는 바이트 시퀀스를 문자 시퀀스로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-450">The decoder converts a sequence of bytes into a sequence of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CPP/getdecoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CS/getdecoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/VB/getdecoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="9d1fb-451">인코딩 이해</span><span class="sxs-lookup"><span data-stu-id="9d1fb-451">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="uTF8Encoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d1fb-452">유니코드 문자 시퀀스를 UTF-8로 인코딩된 바이트 시퀀스로 변환하는 인코더를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-452">Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-453">유니코드 문자 시퀀스를 UTF-8로 인코딩된 바이트 시퀀스로 변환하는 <see cref="T:System.Text.Encoder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-453">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-454">합니다 <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> 메서드를 비슷한 방식으로 바이트 순차 블록 문자의 순차 블록 변환는 <xref:System.Text.UTF8Encoding.GetBytes%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-454">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.UTF8Encoding.GetBytes%2A> method.</span></span> <span data-ttu-id="9d1fb-455">그러나는 <xref:System.Text.Encoder> 블록으로 확장 되는 문자 시퀀스 올바르게 인코딩할 수 있도록 호출 간에 상태 정보를 유지 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-455">However, a <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="9d1fb-456"><xref:System.Text.Encoder> 또한 후행 유지 되는 데이터 블록의 끝 문자 하 고 다음 인코딩 작업에서 후행 문자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-456">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="9d1fb-457">예를 들어 데이터 블록 수는 일치 하지 않는 상위 서로게이트를 사용 하 여 종료 및 다음 데이터 블록에 일치 하는 하위 서로게이트 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-457">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="9d1fb-458">따라서 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 고 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 있으므로 아주 유용 네트워크 전송 및 파일 작업에 대 한 전체 데이터 스트림 대신 데이터 블록을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-458">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="9d1fb-459">오류 검색 하도록 설정할지 여부, 즉, 합니다 `throwOnInvalidCharacters` 생성자의 매개 변수는 설정 `true`, 오류 감지에도 사용는 <xref:System.Text.Encoder> 이 메서드에서 반환 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-459">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> returned by this method.</span></span> <span data-ttu-id="9d1fb-460">오류 검색이 사용 되는 잘못 된 시퀀스가 발생 하는 경우 인코더의 상태가 정의 되지 않으며 처리를 중지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-460">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d1fb-461">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 로 인코딩된 바이트 시퀀스를 문자 시퀀스를 u t F-8로 변환 하는 인코더를 가져오는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-461">The following example uses the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method to obtain an encoder to convert a sequence of characters into a UTF-8 encoded sequence of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CPP/getencoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CS/getencoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/VB/getencoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="9d1fb-462">인코딩 이해</span><span class="sxs-lookup"><span data-stu-id="9d1fb-462">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uTF8Encoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d1fb-463">현재 인스턴스의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-463">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-464">현재 인스턴스에 대한 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-464">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d1fb-465">다음 예제에서는 합니다 <xref:System.Text.UTF8Encoding.GetHashCode%2A> 에 대 한 해시 코드를 반환 하는 방법 <xref:System.Text.UTF8Encoding> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-465">The following example uses the <xref:System.Text.UTF8Encoding.GetHashCode%2A> method to return a hash code for <xref:System.Text.UTF8Encoding> instances.</span></span> <span data-ttu-id="9d1fb-466">이 메서드에서 반환한 해시 코드를 만드는 데 생성자에 따라 달라 집니다 통지를 <xref:System.Text.UTF8Encoding> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-466">Notice that the hash code returned by this method depends on the constructor used to create the <xref:System.Text.UTF8Encoding> object.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CPP/gethashcode-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CS/gethashcode-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/VB/gethashcode-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="uTF8Encoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="9d1fb-467">인코딩할 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-467">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="9d1fb-468">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-468">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-469">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-469">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-470">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetBytes%2A> 결과 바이트를 저장 하려면 호출을 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-470">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="9d1fb-471">최대 배열 크기를 계산 하려면 호출을 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-471">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="9d1fb-472">합니다 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-472">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="9d1fb-473"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 현재 선택 된 최악의 경우를 비롯 한 최악의 숫자, <xref:System.Text.EncoderFallback>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-473"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="9d1fb-474">잠재적으로 큰 문자열을 사용 하 여 대체를 선택한 경우 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 큰 값을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-474">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="9d1fb-475">대부분의 경우이 메서드는 작은 문자열에 대해 적합 한 숫자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-475">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="9d1fb-476">큰 문자열에 대 한 매우 큰 버퍼를 사용 하 고 버퍼를 보다 적절 한 크기를 초과 하는 드문 경우에서 오류를 catch 하는 중 하나를 선택 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-476">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="9d1fb-477">사용 하는 다른 방법을 고려해 야 할 수도 있습니다 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 또는 <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-477">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9d1fb-478">예를 들어 영어 및 다른 많은 언어의 텍스트에는 종종 하나만 u t F-8 바이트, 문자를 나타낼 필요 하지만 수를 반환한 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 는 변환할 문자열은 완전히 문자로 구성 각 가능성을 허용 해야 합니다. 4 바이트가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-478">For example, text in English and many other languages often needs only one UTF-8 byte to represent a character, but the number returned by <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has to allow for the possibility that the string to be converted will consist entirely of characters that each require four bytes.</span></span>  
  
 <span data-ttu-id="9d1fb-479"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 관계가 없으며 <xref:System.Text.UTF8Encoding.GetChars%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-479"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetChars%2A>.</span></span> <span data-ttu-id="9d1fb-480">응용 프로그램에 사용 하는 유사한 함수가 필요 하는 경우 <xref:System.Text.UTF8Encoding.GetChars%2A>를 사용 해야 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-480">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetChars%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d1fb-481">`GetMaxByteCount(N)` 동일한 값은 반드시 `N* GetMaxByteCount(1)`입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-481">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d1fb-482">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 지정한 개수의 문자를 인코딩하는 데 필요한 바이트의 최대 수를 반환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-482">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9d1fb-483"><paramref name="charCount" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="9d1fb-483"><paramref name="charCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="9d1fb-484">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-484">-or-</span></span> 
<span data-ttu-id="9d1fb-485">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-485">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="9d1fb-486">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="9d1fb-486">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="9d1fb-487">및</span><span class="sxs-lookup"><span data-stu-id="9d1fb-487">-and-</span></span> 
 <span data-ttu-id="9d1fb-488"><see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-488"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="uTF8Encoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="9d1fb-489">디코딩할 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-489">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="9d1fb-490">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-490">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-491">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-491">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-492">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetChars%2A> 결과 문자를 저장 하려면 호출을 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-492">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, you call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="9d1fb-493">최대 배열 크기를 계산 하려면 호출을 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-493">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="9d1fb-494">합니다 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-494">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="9d1fb-495"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 현재 선택 된 최악의 경우를 비롯 한 최악의 숫자, <xref:System.Text.DecoderFallback>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-495"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="9d1fb-496">잠재적으로 큰 문자열을 사용 하 여 대체를 선택한 경우 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 큰 값을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-496">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="9d1fb-497">대부분의 경우이 메서드는 작은 문자열에 대해 적합 한 숫자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-497">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="9d1fb-498">큰 문자열에 대 한 매우 큰 버퍼를 사용 하 고 버퍼를 보다 적절 한 크기를 초과 하는 드문 경우에서 오류를 catch 하는 중 하나를 선택 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-498">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span>  <span data-ttu-id="9d1fb-499">사용 하는 다른 방법을 고려해 야 할 수도 있습니다 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 또는 <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-499">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetCharCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9d1fb-500"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 관계가 없으며 <xref:System.Text.UTF8Encoding.GetBytes%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-500"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="9d1fb-501">응용 프로그램에 사용 하는 유사한 함수가 필요 하는 경우 <xref:System.Text.UTF8Encoding.GetBytes%2A>를 사용 해야 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-501">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetBytes%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d1fb-502">`GetMaxCharCount(N)` 동일한 값은 반드시 `N* GetMaxCharCount(1)`입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-502">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d1fb-503">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 지정 된 바이트 수를 디코딩하여 생성 되는 최대 문자 수를 반환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-503">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9d1fb-504"><paramref name="byteCount" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="9d1fb-504"><paramref name="byteCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="9d1fb-505">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-505">-or-</span></span> 
<span data-ttu-id="9d1fb-506">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-506">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="9d1fb-507">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="9d1fb-507">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="9d1fb-508">및</span><span class="sxs-lookup"><span data-stu-id="9d1fb-508">-and-</span></span> 
 <span data-ttu-id="9d1fb-509"><see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-509"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="override this.GetPreamble : unit -&gt; byte[]" Usage="uTF8Encoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d1fb-510"><see cref="T:System.Text.UTF8Encoding" /> 인코딩 개체가 제공하도록 구성된 경우 UTF-8 형식으로 인코딩된 유니코드 바이트 순서 표시를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-510">Returns a Unicode byte order mark encoded in UTF-8 format, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-511"><see cref="T:System.Text.UTF8Encoding" /> 인코딩 개체가 제공하도록 구성된 경우 유니코드 바이트 순서 표시가 포함된 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-511">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span></span> <span data-ttu-id="9d1fb-512">그렇지 않으면 이 메서드는 길이가 0인 바이트 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-512">Otherwise, this method returns a zero-length byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-513"><xref:System.Text.UTF8Encoding> 개체 인코딩 프로세스에서 발생 하는 바이트 시퀀스를 붙일 수 있습니다 하는 바이트 배열에는 머리말을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-513">The <xref:System.Text.UTF8Encoding> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes that result from the encoding process.</span></span> <span data-ttu-id="9d1fb-514">바이트 순서와 변환 형식, 또는 u t F를 결정 하는 디코더를 통해 바이트 순서 표시 (코드 포인트 U + FEFF)를 사용 하 여 인코딩된 바이트 시퀀스 앞 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-514">Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="9d1fb-515">유니코드 바이트 순서 표시 (BOM) 0xEF로 serialize 됩니다 0xBB 0xBF 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-515">The Unicode byte order mark (BOM) is serialized as 0xEF 0xBB 0xBF.</span></span> <span data-ttu-id="9d1fb-516">필요 하지도 u t F-8에 대 한 BOM 사용 하도록 권장 하는 유니코드 표준 인코딩 스트림을 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-516">Note that the Unicode Standard neither requires nor recommends the use of a BOM for UTF-8 encoded streams.</span></span>  
  
 <span data-ttu-id="9d1fb-517">인스턴스화할 수 있습니다는 <xref:System.Text.UTF8Encoding> 개체 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드가 다음과 같은 방법으로 유효한 BOM을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-517">You can instantiate a <xref:System.Text.UTF8Encoding> object whose <xref:System.Text.UTF8Encoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="9d1fb-518">검색 하 여 합니다 <xref:System.Text.UTF8Encoding> 에서 반환 된 개체는 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-518">By retrieving the <xref:System.Text.UTF8Encoding> object returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="9d1fb-519">호출 하 여는 <xref:System.Text.UTF8Encoding> 생성자를 `encoderShouldEmitUTF8Identifier` 매개 변수 및 설정의 값 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-519">By calling a <xref:System.Text.UTF8Encoding> constructor with a `encoderShouldEmitUTF8Identifier` parameter and setting its value set to `true`.</span></span>  
  
 <span data-ttu-id="9d1fb-520">다른 모든 <xref:System.Text.UTF8Encoding> 개체 유효한 BOM 보다는 빈 배열을 반환 하도록 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-520">All other <xref:System.Text.UTF8Encoding> objects are configured to return an empty array rather than a valid BOM.</span></span>  
  
 <span data-ttu-id="9d1fb-521">태그가 지정 되지 않은 또는 부적절 하 게 태그가 지정 된 웹 같은 데이터 또는 임의의 텍스트 파일 때 비즈니스 저장 하지 않은 국가별 고려 사항, BOM 거의 특정 식별 그렇지 않으면 해당 인코딩에 대 한 참조를 손실 된 파일에 대 한 인코딩을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-521">The BOM provide nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="9d1fb-522">데이터는 일관 되 고 제대로 태그를 지정 하는 경우 종종 사용자 문제를 방지할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-522">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="9d1fb-523">인코딩 형식을 제공 하는 표준에 대 한 BOM 다소 중복 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-523">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="9d1fb-524">그러나 올바른 인코딩 헤더를 보내도록 서버를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-524">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="9d1fb-525">또는 사용할 수 있습니다 대체 방법으로 인코딩을 분실할 그렇지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-525">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="9d1fb-526">BOM을 사용 하 여 몇 가지 단점이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-526">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="9d1fb-527">예를 들어 BOM을 사용 하는 데이터베이스 필드를 제한 하는 방법을 알면 어려울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-527">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="9d1fb-528">파일의 연결 문제가 될 수 또한 예를 들어, 파일 등에서 병합 될 때는 데이터 중간에 불필요 한 문자가 포함 될 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-528">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="9d1fb-529">몇 가지 단점에도 불구 하 고 있지만 bom을 사용 하 여 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-529">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="9d1fb-530">바이트 순서에서 바이트 순서 표시에 대 한 자세한 내용은 유니코드 표준을 참조 합니다 [유니코드 홈페이지](https://go.microsoft.com/fwlink/?LinkId=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-530">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9d1fb-531">스트림 또는 파일로 저장 되 면 인코딩된 바이트는 제대로 디코딩 하도록 프리앰블을 사용 하 여 인코드된 바이트 스트림 시작 부분을 접두사로 붙일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-531">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="9d1fb-532"><xref:System.Text.UTF8Encoding.GetBytes%2A> 메서드 인코딩된 바이트 시퀀스로 BOM을 앞에 추가 되지 않습니다; 개발자의 책임은 적절 한 바이트 스트림의 시작 부분에 BOM을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-532">Note that the <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>
  
## Examples  
 <span data-ttu-id="9d1fb-533">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 유니코드 바이트를 반환 하는 방법에는 utf-8 형식으로 인코딩된 표시 순서.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-533">The following example uses the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to return the Unicode byte order mark encoded in UTF-8 format.</span></span> <span data-ttu-id="9d1fb-534">기본 생성자를 <xref:System.Text.UTF8Encoding> 프리앰블 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-534">Notice that the default constructor for <xref:System.Text.UTF8Encoding> does not provide a preamble.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CPP/getpreamble-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CS/getpreamble-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/VB/getpreamble-.vb#1)]  
  
 <span data-ttu-id="9d1fb-535">다음 예제에서는 두 개를 인스턴스화하고 <xref:System.Text.UTF8Encoding> 개체를 매개 변수가 없는 호출 하 여 첫 번째 <xref:System.Text.UTF8Encoding.%23ctor> 생성자를 호출 하 여 BOM을 나타내고 두 번째를 제공 하지 않습니다는 <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> 생성자를 사용 하 여 해당 `encoderShouldEmitUTF8Identifier` 인수와 함께 사용 `true`.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-535">The following example instantiates two <xref:System.Text.UTF8Encoding> objects, the first by calling the parameterless <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not provide a BOM, and the second by calling the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> constructor with its `encoderShouldEmitUTF8Identifier` argument set to `true`.</span></span> <span data-ttu-id="9d1fb-536">그런 다음 호출을 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드를 UF8로 인코드된 문자열을 작성 하기 전에 파일에 BOM을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-536">It then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to write the BOM to a file before writing a UF8-encoded string.</span></span> <span data-ttu-id="9d1fb-537">이 예제에서 콘솔 출력을 볼 수 있듯이 첫 번째 보다 더 많은 바이트를 세는 두 번째 인코더에서 바이트를 저장 하는 파일.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-537">As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/cs/getpreamble1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/vb/getpreamble1.vb#1)]  
  
 <span data-ttu-id="9d1fb-538">사용 하 여 파일을 비교할 수도 있습니다는 `fc` 콘솔 창에 명령 16 진수 뷰 모드를 포함 하는 텍스트 편집기에서 파일을 검사할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-538">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="9d1fb-539">Note u t F-8을 지 원하는 편집기에서 파일을 열면 BOM 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-539">Note that when the file is opened in an editor that supports UTF-8, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="uTF8Encoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="9d1fb-540">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-540">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="9d1fb-541">디코딩할 첫 번째 바이트의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-541">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="9d1fb-542">디코딩할 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-542">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="9d1fb-543">바이트 배열의 바이트 범위를 문자열로 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-543">Decodes a range of bytes from a byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="9d1fb-544">지정된 바이트 시퀀스에 대한 디코딩 결과가 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-544">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d1fb-545">오류 검색을 사용 하 여 잘못 된 시퀀스를이 메서드가 throw는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-545">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="9d1fb-546">오류 검색 없이, 잘못 된 시퀀스 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-546">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="9d1fb-547">디코딩할 바이트 범위는 바이트 순서 표시 (BOM)를 포함 하 고 BOM이 아닌 인식 형식의 메서드에 의해 반환 된 바이트 배열 하는 경우이 메서드에서 반환 된 문자 배열의 문자 U + FFFE 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-547">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="9d1fb-548">호출 하 여 제거할 수 있습니다는 <xref:System.String.TrimStart%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-548">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9d1fb-549">같은 스트림에서 읽은 데이터를 변환할 데이터를 순차 블록에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-549">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="9d1fb-550">이 경우 또는 사용 하 여 데이터의 양이 너무 커서 작은 블록으로 나눌 경우 합니다 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 제공한 합니다 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-550">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d1fb-551">다음 예제에서는 호출 하 여 배열을 초기화는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 바이트 인코딩된 문자열 및 바이트 순서 표시 (BOM)의 크기를 추가한 다음에 대 한 필요한를 정확 하 게 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-551">The following example initializes an array by calling the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="9d1fb-552">다음 호출 하 여는 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드를 호출 하기 전에 배열에 BOM을 저장 합니다 <xref:System.Text.UTF8Encoding.GetBytes%2A> 인코딩된 바이트 배열에 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-552">The example then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="9d1fb-553">이 예제에서는 호출 된 <xref:System.Text.UTF8Encoding.GetString%2A> 문자열을 디코드 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-553">The example then calls the <xref:System.Text.UTF8Encoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/cs/getstring1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/vb/getstring1.vb#1)]  
  
 <span data-ttu-id="9d1fb-554">이 경우 디코딩된 문자열 다른 것 원래 문자열에서 U + FFFD 16 비트 바이트 순서 표시를 시작 하므로 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-554">Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</span></span> <span data-ttu-id="9d1fb-555">즉, 두 문자열이 됩니다 것으로 비교 하 고 출력 문자열을 사용 하는 경우 BOM 대체 문자로 표시 됩니다 "?"입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-555">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span> <span data-ttu-id="9d1fb-556">문자열의 시작 부분에 BOM을 제거 하려면 호출할 수 있습니다는 <xref:System.String.TrimStart%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-556">To remove the BOM at the beginning of the string, you can call the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d1fb-557"><paramref name="bytes" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-557"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9d1fb-558"><paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-558"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="9d1fb-559">또는</span><span class="sxs-lookup"><span data-stu-id="9d1fb-559">-or-</span></span> 
 <span data-ttu-id="9d1fb-560"><paramref name="index" /> 및 <paramref name="count" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-560"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9d1fb-561">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-561">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="9d1fb-562">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span><span class="sxs-lookup"><span data-stu-id="9d1fb-562">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="9d1fb-563">및</span><span class="sxs-lookup"><span data-stu-id="9d1fb-563">-and-</span></span> 
 <span data-ttu-id="9d1fb-564"><see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d1fb-564"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>