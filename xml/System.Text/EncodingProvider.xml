<Type Name="EncodingProvider" FullName="System.Text.EncodingProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="adbb9708f99cbbdddb01067e89fd1bce5844d74b" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58698874" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncodingProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncodingProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncodingProvider abstract" />
  <TypeSignature Language="F#" Value="type EncodingProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a60c7-101">인코딩 공급자에 대한 기본 클래스를 제공하며, 이는 특정 플랫폼에서 사용할 수 없는 인코딩을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-101">Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a60c7-102">인코딩 공급자에는 특정 대상 플랫폼에서 사용할 수 없는 인코딩을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-102">An encoding provider supplies encodings that are not otherwise available on a particular target platform.</span></span>  
  
 <span data-ttu-id="a60c7-103">Windows 바탕 화면에서.NET Framework는 많은 수의 문자 인코딩 및 코드 페이지를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-103">The .NET Framework on the Windows desktop supports a large number of character encodings and code pages.</span></span> <span data-ttu-id="a60c7-104">호출 하 여 Windows 바탕 화면에서 전체 목록은.NET Framework에서 사용할 수 있는 인코딩을 가져올 수는 <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a60c7-104">You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a60c7-105">.NET core, 반면에 기본적으로만 다음 인코딩을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-105">.NET Core, on the other hand, by default supports only the following encodings:</span></span>  
  
-   <span data-ttu-id="a60c7-106">반환 하는 ASCII (코드 페이지 20127)는 <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-106">ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="a60c7-107">ISO-8859-1 (코드 페이지 28591).</span><span class="sxs-lookup"><span data-stu-id="a60c7-107">ISO-8859-1 (code page 28591).</span></span>  
  
-   <span data-ttu-id="a60c7-108">U t F-7 (코드 페이지 65000)가 반환한는 <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-108">UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="a60c7-109">U t F-8 (코드 페이지 65001)가 반환한는 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-109">UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="a60c7-110">U t F-16과 u t F-16LE (코드 페이지 1200)에서 반환 하는 <xref:System.Text.Encoding.Unicode%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-110">UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A> property.</span></span>  
  
-   <span data-ttu-id="a60c7-111">U t F-16BE (코드 페이지 1201)를 호출 하 여 인스턴스화된 합니다 <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> 또는 <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> 사용 하 여 생성자를 `bigEndian` 값 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-111">UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> or <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor with a `bigEndian` value of `true`.</span></span>  
  
-   <span data-ttu-id="a60c7-112">UTF-32 및 u t F-32LE (코드 페이지 12000)가 반환한는 <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-112">UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="a60c7-113">U t F-32BE (코드 페이지 12001)를 호출 하 여 인스턴스화된를 <xref:System.Text.UTF32Encoding> 생성자는를 `bigEndian` 매개 변수 및 값을 제공 `true` 메서드 호출에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-113">UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.</span></span>  
  
 <span data-ttu-id="a60c7-114">.NET Framework 4.6 부터는 <xref:System.Text.EncodingProvider> 그렇지 않은 경우 사용할 수 없게 하는 기본 클래스는.NET Framework를 사용할 수 있는 인코딩.</span><span class="sxs-lookup"><span data-stu-id="a60c7-114">Starting with the .NET Framework 4.6, <xref:System.Text.EncodingProvider> is the base class that makes otherwise unavailable encodings available to the .NET Framework.</span></span> <span data-ttu-id="a60c7-115">이 단계는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-115">This involves the following steps:</span></span>  
  
1.  <span data-ttu-id="a60c7-116">하위 클래스를 정의 <xref:System.Text.EncodingProvider> 재정의 하는 두 가지 추상 <xref:System.Text.EncodingProvider.GetEncoding%2A> 오버 로드 <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> 및 <xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-116">Define a subclass of <xref:System.Text.EncodingProvider> that overrides the two abstract <xref:System.Text.EncodingProvider.GetEncoding%2A> overloads, <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>.</span></span> <span data-ttu-id="a60c7-117">이러한 오버 로드는 그렇지 않은 경우 지원 되지 않는 인코딩 및 이름으로 코드 페이지 식별자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-117">These overloads return the otherwise unsupported encoding by code page identifier and by name.</span></span> <span data-ttu-id="a60c7-118">경우 인코딩 기본값을 반환할 수도 있습니다는 <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> 0의 인수와 함께 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-118">Note that you can also choose to return a default encoding if the <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> method is called with an argument of 0.</span></span>  
  
2.  <span data-ttu-id="a60c7-119">필요에 따라 가상 재정의할 수 있습니다 <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> 고 <xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a60c7-119">Optionally, you can override the virtual <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> methods.</span></span> <span data-ttu-id="a60c7-120">대부분의 경우에서이 아닌 경우 필요에 따라 기본 클래스는 기본 구현을 제공 하므로</span><span class="sxs-lookup"><span data-stu-id="a60c7-120">In most cases, this is not necessary, since the base class provides a default implementation.</span></span>  
  
3.  <span data-ttu-id="a60c7-121">전달를 <xref:System.Text.EncodingProvider> 인스턴스를 <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> 메서드를 제공한 인코딩은 <xref:System.Text.EncodingProvider> 공용 언어 런타임에서 사용할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-121">Pass the <xref:System.Text.EncodingProvider> instance to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method to make the encodings supplied by the <xref:System.Text.EncodingProvider> object available to the common language runtime.</span></span>  
  
4.  <span data-ttu-id="a60c7-122">호출을 <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> 인코딩을 검색할 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-122">Call an <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> overload to retrieve the encoding.</span></span> <span data-ttu-id="a60c7-123">합니다 <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> 해당 메서드를 호출 합니다 <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> 인코딩의 제공할 수 있는지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="a60c7-123">The <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> method will call the corresponding <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> to determine whether it can supply the requested encoding.</span></span>  
  
 <span data-ttu-id="a60c7-124">.NET Framework 클래스 라이브러리에 정적 속성 중 하나인 제공 <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>를 반환 하는 <xref:System.Text.EncodingProvider> 인코딩 중 일부만 사용할 수 있는 데스크톱.NET Framework 클래스 라이브러리에서를 사용할 수 있도록 개체 [!INCLUDE[net_core](~/includes/net-core-md.md)] 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-124">The .NET Framework Class Library provides one static property, <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>, that returns an <xref:System.Text.EncodingProvider> object that makes the full set of encodings available on the desktop .NET Framework Class Library available to [!INCLUDE[net_core](~/includes/net-core-md.md)] applications.</span></span> <span data-ttu-id="a60c7-125">또한에서 파생할 수 있습니다는 <xref:System.Text.EncodingProvider> 클래스 자체 인코딩을 사용할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-125">In addition, you can derive from the <xref:System.Text.EncodingProvider> class to make your own encodings available.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/system.text.codepagesencodingprovider.instance(v=vs.110).aspx"><span data-ttu-id="a60c7-126">CodePagesEncodingProvider.Instance 속성</span><span class="sxs-lookup"><span data-stu-id="a60c7-126">CodePagesEncodingProvider.Instance Property</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncodingProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncodingProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a60c7-127"><see cref="T:System.Text.EncodingProvider" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-127">Initializes a new instance of the <see cref="T:System.Text.EncodingProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a60c7-128">인코딩을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-128">Returns an encoding.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : int -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="a60c7-129">요청한 인코딩의 코드 페이지 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-129">The code page identifier of the requested encoding.</span></span></param>
        <summary><span data-ttu-id="a60c7-130">지정한 코드 페이지 식별자와 관련된 인코딩을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-130">Returns the encoding associated with the specified code page identifier.</span></span></summary>
        <returns><span data-ttu-id="a60c7-131">지정된 코드 페이지와 연결된 인코딩이거나 이 <see cref="T:System.Text.EncodingProvider" />가 <paramref name="codepage" />에 해당하는 올바른 인코딩을 반환할 수 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-131">The encoding that is associated with the specified code page, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="codepage" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks

### <a name="notes-to-inheritors"></a><span data-ttu-id="a60c7-132">상속자를 위한 정보</span><span class="sxs-lookup"><span data-stu-id="a60c7-132">Notes to inheritors</span></span>

<span data-ttu-id="a60c7-133">재정의 하는 [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) 인코딩을 반환 하는 방법 또는 인코딩을 지 원하는 프로그램 <xref:System.Text.EncodingProvider> 하위 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-133">You override the [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) method to return the encoding or encodings supported by your <xref:System.Text.EncodingProvider> subclass.</span></span> <span data-ttu-id="a60c7-134">사용자 코드를 호출 하 여 인코딩을 검색 하려고 하는 경우는 [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) 메서드를 메서드에 전달는 `codepage` 식별자는 올바른 인코딩을 반환 될 때까지 모든 등록 된 인코딩 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-134">When user code attempts to retrieve an encoding by calling the [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) method, the method passes the `codepage` identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="a60c7-135">올바른 인코딩을 none을 반환 하는 경우는 [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) 메서드는 캐시 된 인코딩 코드 페이지 식별자를 갖는 검색 하려고 시도 `codepage`합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-135">If none returns a valid encoding, the [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) method attempts to retrieve a cached encoding whose code page identifier is `codepage`.</span></span> <span data-ttu-id="a60c7-136">이 인해 경우 `codepage` 지 원하는 메서드를 반환 해야 하는 인코딩 코드 페이지 식별자가 아닙니다 `null`; 예외를 throw 하지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-136">Because of this, if `codepage` is not the code page identifier of an encoding that you support, the method should return `null`; it should never throw an exception.</span></span>
        
<span data-ttu-id="a60c7-137">하는 경우 기본 코드 페이지를 반환할 수도 있습니다는 값을 `codepage` 인수는 0입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-137">Note that you can also choose to return a default code page if the value of the `codepage` argument is 0.</span></span>

## <a name="notes-to-callers"></a><span data-ttu-id="a60c7-138">호출자 참고 사항</span><span class="sxs-lookup"><span data-stu-id="a60c7-138">Notes to callers</span></span>
        
<span data-ttu-id="a60c7-139">이 메서드는 합니다 [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) 메서드.</span><span class="sxs-lookup"><span data-stu-id="a60c7-139">This method is called by the [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) method.</span></span> <span data-ttu-id="a60c7-140">사용자 코드에서 직접 해당 호출 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-140">You should not call it directly from user code.</span></span>

        ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a60c7-141">재정의 하는 <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> 인코딩을 반환 하는 방법 또는 인코딩을 지 원하는 프로그램 <see cref="T:System.Text.EncodingProvider" /> 하위 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-141">You override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> method to return the encoding or encodings supported by your <see cref="T:System.Text.EncodingProvider" /> subclass.</span></span> <span data-ttu-id="a60c7-142">사용자 코드를 호출 하 여 인코딩을 검색 하려고 하는 경우는 <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> 메서드를 메서드에 전달는 <paramref name="codepage" /> 식별자는 올바른 인코딩을 반환 될 때까지 모든 등록 된 인코딩 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-142">When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="a60c7-143">올바른 인코딩을 none을 반환 하는 경우는 <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> 메서드는 캐시 된 인코딩 코드 페이지 식별자를 갖는 검색 하려고 시도 <paramref name="codepage" />합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-143">If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />.</span></span> <span data-ttu-id="a60c7-144">이 인해 경우 <paramref name="codepage" /> 지 원하는 메서드를 반환 해야 하는 인코딩 코드 페이지 식별자가 아닙니다 <see langword="null" />; 예외를 throw 하지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-144">Because of this, if <paramref name="codepage" /> is not the code page identifier of an encoding that you support, the method should return <see langword="null" />; it should never throw an exception.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="a60c7-145">이 메서드는 <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a60c7-145">This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method.</span></span> <span data-ttu-id="a60c7-146">사용자 코드에서 직접 해당 호출 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-146">You should not call it directly from user code.</span></span></para></block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : string -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a60c7-147">요청한 인코딩의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-147">The name of the requested encoding.</span></span></param>
        <summary><span data-ttu-id="a60c7-148">지정된 이름의 인코딩을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-148">Returns the encoding with the specified name.</span></span></summary>
        <returns><span data-ttu-id="a60c7-149">지정된 이름과 연결된 인코딩이거나 이 <see cref="T:System.Text.EncodingProvider" />가 <paramref name="name" />에 해당하는 올바른 인코딩을 반환할 수 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-149">The encoding that is associated with the specified name, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 
      
## <a name="notes-to-inheritors"></a><span data-ttu-id="a60c7-150">상속자를 위한 정보</span><span class="sxs-lookup"><span data-stu-id="a60c7-150">Notes to inheritors</span></span> 
                  
<span data-ttu-id="a60c7-151">재정의 하는 [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) 인코딩을 반환 하는 방법 또는 인코딩을 지 원하는 프로그램 <xref:System.Text.EncodingProvider> 하위 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-151">You override the [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) method to return the encoding or encodings supported by your <xref:System.Text.EncodingProvider> subclass.</span></span> <span data-ttu-id="a60c7-152">사용자 코드를 호출 하 여 인코딩을 검색 하려고 하는 경우는 [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) 메서드를 메서드에 전달 합니다 `name` 올바른 인코딩을 반환 될 때까지 모든 등록 된 인코딩 공급자에 대 한 인수.</span><span class="sxs-lookup"><span data-stu-id="a60c7-152">When user code attempts to retrieve an encoding by calling the [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) method, the method passes the `name` argument to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="a60c7-153">올바른 인코딩을 none을 반환 하는 경우는 [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) 메서드는 캐시 된 encoding 이름이 검색 하려고 시도 `name`합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-153">If none returns a valid encoding, the [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) method attempts to retrieve a cached encoding whose name is `name`.</span></span> <span data-ttu-id="a60c7-154">이 인해 경우 `name` 지 원하는 메서드를 반환 해야 하는 인코딩 이름은 아닙니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-154">Because of this, if `name` is not the name of an encoding that you support, the method should return `null`.</span></span> <span data-ttu-id="a60c7-155">메서드는 예외를 throw 해야 하는 유일한 경우는 경우 `name` 는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-155">The only case in which the method should throw an exception is if `name` is `null`.</span></span>

## <a name="notes-to-callers"></a><span data-ttu-id="a60c7-156">호출자 참고 사항</span><span class="sxs-lookup"><span data-stu-id="a60c7-156">Notes to callers</span></span>

<span data-ttu-id="a60c7-157">이 메서드는 합니다 [encoding.getencoding (string)](<xref:System.Text.Encoding.GetEncoding(System.String)>) 메서드.</span><span class="sxs-lookup"><span data-stu-id="a60c7-157">This method is called by the [Encoding.GetEncoding(String)](<xref:System.Text.Encoding.GetEncoding(System.String)>) method.</span></span> <span data-ttu-id="a60c7-158">사용자 코드에서 직접 해당 호출 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-158">You should not call it directly from user code.</span></span>
        ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a60c7-159">재정의 하는 <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> 인코딩을 반환 하는 방법 또는 인코딩을 지 원하는 프로그램 <see cref="T:System.Text.EncodingProvider" /> 하위 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-159">You override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> method to return the encoding or encodings supported by your <see cref="T:System.Text.EncodingProvider" /> subclass.</span></span> <span data-ttu-id="a60c7-160">사용자 코드를 호출 하 여 인코딩을 검색 하려고 하는 경우는 <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> 메서드를 메서드에 전달 합니다 <paramref name="name" /> 올바른 인코딩을 반환 될 때까지 모든 등록 된 인코딩 공급자에 대 한 인수.</span><span class="sxs-lookup"><span data-stu-id="a60c7-160">When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method, the method passes the <paramref name="name" /> argument to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="a60c7-161">올바른 인코딩을 none을 반환 하는 경우는 <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> 메서드는 캐시 된 encoding 이름이 검색 하려고 시도 <paramref name="name" />합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-161">If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method attempts to retrieve a cached encoding whose name is <paramref name="name" />.</span></span> <span data-ttu-id="a60c7-162">이 인해 경우 <paramref name="name" /> 지 원하는 메서드를 반환 해야 하는 인코딩 이름은 아닙니다 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-162">Because of this, if <paramref name="name" /> is not the name of an encoding that you support, the method should return <see langword="null" />.</span></span> <span data-ttu-id="a60c7-163">메서드는 예외를 throw 해야 하는 유일한 경우는 경우 <paramref name="name" /> 는 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-163">The only case in which the method should throw an exception is if <paramref name="name" /> is <see langword="null" />.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="a60c7-164">이 메서드는 <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a60c7-164">This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method.</span></span> <span data-ttu-id="a60c7-165">사용자 코드에서 직접 해당 호출 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-165">You should not call it directly from user code.</span></span></para></block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(int codepage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding&#xA;override this.GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding (codepage, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="a60c7-166">요청한 인코딩의 코드 페이지 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-166">The code page identifier of the requested encoding.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="a60c7-167">이 인코딩으로 문자를 인코딩할 수 없는 경우 오류 처리 프로시저를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-167">An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="a60c7-168">이 인코딩으로 바이트 시퀀스를 디코딩할 수 없는 경우 오류 처리 프로시저를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-168">An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.</span></span></param>
        <summary><span data-ttu-id="a60c7-169">지정한 코드 페이지 식별자와 관련된 인코딩을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-169">Returns the encoding associated with the specified code page identifier.</span></span> <span data-ttu-id="a60c7-170">매개 변수는 인코딩할 수 없는 문자 및 디코딩할 수 없는 바이트 시퀀스에 대한 오류 처리기를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-170">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span></span></summary>
        <returns><span data-ttu-id="a60c7-171">지정된 코드 페이지와 연결된 인코딩이거나 이 <see cref="T:System.Text.EncodingProvider" />가 <paramref name="codepage" />에 해당하는 올바른 인코딩을 반환할 수 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-171">The encoding that is associated with the specified code page, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="codepage" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a60c7-172">합니다 `encoderFallback` 고 `decoderFallback` 매개 변수는 인코더 바이트 시퀀스를 문자로 변환할 수 없습니다 또는 디코더 바이트 시퀀스를 문자로 변환할 수는 사용 된 대체 (fallback) 전략을 정의 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-172">The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</span></span> <span data-ttu-id="a60c7-173">.NET Framework는 다음 대체 (fallback) 메커니즘을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-173">The .NET Framework provides the following fallback mechanisms:</span></span>  
  
-   <span data-ttu-id="a60c7-174">예외 대체 (fallback)입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-174">Exception fallback.</span></span> <span data-ttu-id="a60c7-175">경우는 `encoderFallback` 인수는 인스턴스의 <xref:System.Text.EncoderExceptionFallback>, 또는 `decoderExceptionFallback` 인수가 인스턴스의 <xref:System.Text.DecoderExceptionFallback>, 인코딩 방법 문자를 인코딩할 수 없는, 및 디코딩 메서드는 바이트 경우 예외를 throw 하는 경우 예외를 throw 시퀀스를 디코딩할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-175">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</span></span>  
  
-   <span data-ttu-id="a60c7-176">교체 대체 (fallback) 합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-176">Replacement fallback.</span></span> <span data-ttu-id="a60c7-177">경우는 `encoderFallback` 인수는 인스턴스의 <xref:System.Text.EncoderReplacementFallback>, 또는 `decoderExceptionFallback` 인수가 인스턴스의 <xref:System.Text.DecoderReplacementFallback>, 인코딩 및 디코딩 메서드 대체 인코딩할 수 없는 문자에 대 한 대체 문자열 및 바이트 시퀀스 수 없습니다 디코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-177">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</span></span> <span data-ttu-id="a60c7-178">대체 문자는 기본 생성자를 호출 하 여 교체 대체 (fallback) 개체를 인스턴스화한 경우는 "?"입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-178">If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</span></span> <span data-ttu-id="a60c7-179">호출 하는 경우는 <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> 또는 <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> 생성자 대체 문자열을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-179">If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, you can specify the replacement string.</span></span>  
  
-   <span data-ttu-id="a60c7-180">최적된 대체 (fallback) 합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-180">Best-fit fallback.</span></span> <span data-ttu-id="a60c7-181">파생 될 수 있습니다 합니다 <xref:System.Text.EncoderFallback> 또는 <xref:System.Text.DecoderFallback> 최적된 대체 메커니즘을 구현 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-181">You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a60c7-182">이 메서드를 호출의 구현을 사용 하기 때문에 <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> 메서드를 필요가 없습니다이 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-182">Because calls to this method use your implementation of the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> method, you do not have to override it.</span></span> <span data-ttu-id="a60c7-183">사용자 코드를 호출 하 여 인코딩을 검색 하려고 하는 경우는 <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> 메서드를 메서드에 전달는 <paramref name="codepage" /> 식별자는 올바른 인코딩을 반환 될 때까지 모든 등록 된 인코딩 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-183">When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="a60c7-184">올바른 인코딩을 none을 반환 하는 경우는 <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> 메서드는 캐시 된 인코딩 코드 페이지 식별자를 갖는 검색 하려고 시도 <paramref name="codepage" />합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-184">If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />.</span></span> <span data-ttu-id="a60c7-185">이 인해 재정의 하려는 경우는 <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> 메서드 재정의 반환 해야 <see langword="null" /> 경우 <paramref name="codepage" /> 인코딩 코드 페이지 식별자가 아닙니다를 지 원하는; 예외를 throw 하지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-185">Because of this, if you do choose to override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, your override should return <see langword="null" /> if <paramref name="codepage" /> is not the code page identifier of an encoding that you support; it should never throw an exception.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="a60c7-186">이 메서드는 <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a60c7-186">This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method.</span></span> <span data-ttu-id="a60c7-187">사용자 코드에서 직접 해당 호출 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-187">You should not call it directly from user code.</span></span></para></block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(System::String ^ name, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding&#xA;override this.GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding (name, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a60c7-188">기본 설정 인코딩의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-188">The name of the preferred encoding.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="a60c7-189">이 인코딩으로 문자를 인코딩할 수 없는 경우 오류 처리 프로시저를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-189">An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="a60c7-190">현재 인코딩으로 바이트 시퀀스를 디코딩할 수 없는 경우 오류 처리 프로시저를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-190">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span></span></param>
        <summary><span data-ttu-id="a60c7-191">지정한 이름과 연결된 인코딩을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-191">Returns the encoding associated with the specified name.</span></span> <span data-ttu-id="a60c7-192">매개 변수는 인코딩할 수 없는 문자 및 디코딩할 수 없는 바이트 시퀀스에 대한 오류 처리기를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-192">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span></span></summary>
        <returns><span data-ttu-id="a60c7-193">지정된 이름과 연결된 인코딩이거나 이 <see cref="T:System.Text.EncodingProvider" />가 <paramref name="name" />에 해당하는 올바른 인코딩을 반환할 수 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-193">The encoding that is associated with the specified name, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a60c7-194">합니다 `encoderFallback` 고 `decoderFallback` 매개 변수는 인코더 바이트 시퀀스를 문자로 변환할 수 없습니다 또는 디코더 바이트 시퀀스를 문자로 변환할 수는 사용 된 대체 (fallback) 전략을 정의 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-194">The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</span></span> <span data-ttu-id="a60c7-195">.NET Framework는 다음 대체 (fallback) 메커니즘을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-195">The .NET Framework provides the following fallback mechanisms:</span></span>  
  
-   <span data-ttu-id="a60c7-196">예외 대체 (fallback)입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-196">Exception fallback.</span></span> <span data-ttu-id="a60c7-197">경우는 `encoderFallback` 인수는 인스턴스의 <xref:System.Text.EncoderExceptionFallback>, 또는 `decoderExceptionFallback` 인수가 인스턴스의 <xref:System.Text.DecoderExceptionFallback>, 인코딩 방법 문자를 인코딩할 수 없는, 및 디코딩 메서드는 바이트 경우 예외를 throw 하는 경우 예외를 throw 시퀀스를 디코딩할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-197">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</span></span>  
  
-   <span data-ttu-id="a60c7-198">교체 대체 (fallback) 합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-198">Replacement fallback.</span></span> <span data-ttu-id="a60c7-199">경우는 `encoderFallback` 인수는 인스턴스의 <xref:System.Text.EncoderReplacementFallback>, 또는 `decoderExceptionFallback` 인수가 인스턴스의 <xref:System.Text.DecoderReplacementFallback>, 인코딩 및 디코딩 메서드 대체 인코딩할 수 없는 문자에 대 한 대체 문자열 및 바이트 시퀀스 수 없습니다 디코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-199">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</span></span> <span data-ttu-id="a60c7-200">대체 문자는 기본 생성자를 호출 하 여 교체 대체 (fallback) 개체를 인스턴스화한 경우는 "?"입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-200">If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</span></span> <span data-ttu-id="a60c7-201">호출 하는 경우는 <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> 또는 <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> 생성자 대체 문자열을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-201">If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, you can specify the replacement string.</span></span>  
  
-   <span data-ttu-id="a60c7-202">최적된 대체 (fallback) 합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-202">Best-fit fallback.</span></span> <span data-ttu-id="a60c7-203">파생 될 수 있습니다 합니다 <xref:System.Text.EncoderFallback> 또는 <xref:System.Text.DecoderFallback> 최적된 대체 메커니즘을 구현 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-203">You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a60c7-204">이 메서드를 호출의 구현을 사용 하기 때문에 <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> 메서드를 필요가 없습니다이 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-204">Because calls to this method use your implementation of the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> method, you do not have to override it.</span></span> <span data-ttu-id="a60c7-205">사용자 코드를 호출 하 여 인코딩을 검색 하려고 하는 경우는 <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> 메서드를 메서드에 전달는 <paramref name="codepage" /> 식별자는 올바른 인코딩을 반환 될 때까지 모든 등록 된 인코딩 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-205">When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="a60c7-206">올바른 인코딩을 none을 반환 하는 경우는 <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> 메서드는 캐시 된 인코딩 코드 페이지 식별자를 갖는 검색 하려고 시도 <paramref name="codepage" />합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-206">If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />.</span></span> <span data-ttu-id="a60c7-207">이 인해 재정의 하려는 경우는 <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> 메서드 재정의 반환 해야 <see langword="null" /> 경우 <paramref name="codepage" /> 인코딩 코드 페이지 식별자가 아닙니다를 지 원하는; 예외를 throw 하지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-207">Because of this, if you do choose to override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, your override should return <see langword="null" /> if <paramref name="codepage" /> is not the code page identifier of an encoding that you support; it should never throw an exception.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="a60c7-208">이 메서드는 <see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a60c7-208">This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method.</span></span> <span data-ttu-id="a60c7-209">사용자 코드에서 직접 해당 호출 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a60c7-209">You should not call it directly from user code.</span></span></para></block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
  </Members>
</Type>