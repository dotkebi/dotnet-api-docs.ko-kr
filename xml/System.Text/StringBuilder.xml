<Type Name="StringBuilder" FullName="System.Text.StringBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="70f9f0c28f791ae40bd812fbe8a9f9c46bcd4de4" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58685036" /></Metadata><TypeSignature Language="C#" Value="public sealed class StringBuilder : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit StringBuilder extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Text.StringBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StringBuilder&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringBuilder sealed : System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type StringBuilder = class&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="75d49-101">변경할 수 있는 문자열을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-101">Represents a mutable string of characters.</span></span> <span data-ttu-id="75d49-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-103">이 클래스는 문자 시퀀스로 변경할 수 있는 값인 문자열 같은 개체를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-103">This class represents a string-like object whose value is a mutable sequence of characters.</span></span>  
  
 <span data-ttu-id="75d49-104">섹션 내용</span><span class="sxs-lookup"><span data-stu-id="75d49-104">In this section:</span></span>  
  
-   [<span data-ttu-id="75d49-105">String 및 StringBuilder 형식</span><span class="sxs-lookup"><span data-stu-id="75d49-105">The String and StringBuilder types</span></span>](#StringAndSB)  
  
-   [<span data-ttu-id="75d49-106">StringBuilder의 작동 원리</span><span class="sxs-lookup"><span data-stu-id="75d49-106">How StringBuilder works</span></span>](#HowWorks)  
  
-   [<span data-ttu-id="75d49-107">메모리 할당</span><span class="sxs-lookup"><span data-stu-id="75d49-107">Memory allocation</span></span>](#Memory)  
  
-   [<span data-ttu-id="75d49-108">StringBuilder 개체 인스턴스화</span><span class="sxs-lookup"><span data-stu-id="75d49-108">Instantiating a StringBuilder object</span></span>](#Instantiating)  
  
-   [<span data-ttu-id="75d49-109">StringBuilder 메서드 호출</span><span class="sxs-lookup"><span data-stu-id="75d49-109">Calling StringBuilder methods</span></span>](#Calling)  
  
-   [<span data-ttu-id="75d49-110">StringBuilder 작업 수행</span><span class="sxs-lookup"><span data-stu-id="75d49-110">Performing StringBuilder operations</span></span>](#Operations)  
  
    -   [<span data-ttu-id="75d49-111">StringBuilder 문자를 반복합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-111">Iterating StringBuilder characters</span></span>](#Iterating)  
  
    -   [<span data-ttu-id="75d49-112">StringBuilder 개체에 텍스트 추가</span><span class="sxs-lookup"><span data-stu-id="75d49-112">Adding text to a StringBuilder object</span></span>](#Adding)  
  
    -   [<span data-ttu-id="75d49-113">StringBuilder 개체의 텍스트를 삭제 하는 중</span><span class="sxs-lookup"><span data-stu-id="75d49-113">Deleting text from a StringBuilder object</span></span>](#Deleting)  
  
    -   [<span data-ttu-id="75d49-114">StringBuilder 개체의 텍스트를 수정합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-114">Modifying the text in a StringBuilder object</span></span>](#Modifying)  
  
-   [<span data-ttu-id="75d49-115">StringBuilder 개체의 텍스트를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-115">Searching the text in a StringBuilder object</span></span>](#Searching)  
  
-   [<span data-ttu-id="75d49-116">StringBuilder 개체를 문자열로 변환</span><span class="sxs-lookup"><span data-stu-id="75d49-116">Converting the StringBuilder object to a string</span></span>](#Converting)  
  
<a name="StringAndSB"></a>   
## <a name="the-string-and-stringbuilder-types"></a><span data-ttu-id="75d49-117">String 및 StringBuilder 형식</span><span class="sxs-lookup"><span data-stu-id="75d49-117">The String and StringBuilder types</span></span>  
 <span data-ttu-id="75d49-118">하지만 <xref:System.Text.StringBuilder> 및 <xref:System.String> 둘 다 시퀀스를 나타내는 문자를 다르게 구현 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-118">Although <xref:System.Text.StringBuilder> and <xref:System.String> both represent sequences of characters, they are implemented differently.</span></span> <span data-ttu-id="75d49-119"><xref:System.String> 변경할 수 없는 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-119"><xref:System.String> is an immutable type.</span></span> <span data-ttu-id="75d49-120">수정 하려면 표시 되는 각 작업 즉, 한 <xref:System.String> 개체는 실제로 새 문자열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-120">That is, each operation that appears to modify a <xref:System.String> object actually creates a new string.</span></span>  
  
 <span data-ttu-id="75d49-121">예를 들어 호출 된 <xref:System.String.Concat%2A?displayProperty=nameWithType> 라는 문자열 변수 값을 변경 하려면 다음 C# 예제에서 메서드가 나타납니다 `value`.</span><span class="sxs-lookup"><span data-stu-id="75d49-121">For example, the call to the <xref:System.String.Concat%2A?displayProperty=nameWithType> method in the following C# example appears to change the value of a string variable named `value`.</span></span> <span data-ttu-id="75d49-122">실제로 <xref:System.String.Concat%2A> 메서드가 반환 되는 `value` 에서 주소를 다른 값을 가진 개체를는 `value` 메서드에 전달 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-122">In fact, the <xref:System.String.Concat%2A> method returns a `value` object that has a different value and address from the `value` object that was passed to the method.</span></span> <span data-ttu-id="75d49-123">사용 하 여 예제를 컴파일해야는 참고를 `/unsafe` 컴파일러 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-123">Note that the example must be compiled using the `/unsafe` compiler option.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/immutability2.cs#1)]  
  
 <span data-ttu-id="75d49-124">광범위 한 문자열 조작 (예: 여러 번 루프에서에서 문자열을 수정 하는 앱)를 수행 하는 루틴에 대 한 문자열을 반복적으로 수정 하면 성능이 크게 저하를 정확한 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-124">For routines that perform extensive string manipulation (such as apps that modify a string numerous times in a loop), modifying a string repeatedly can exact a significant performance penalty.</span></span> <span data-ttu-id="75d49-125">대신 사용 하는 <xref:System.Text.StringBuilder>를 변경할 수 있는 문자열 클래스인 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-125">The alternative is to use <xref:System.Text.StringBuilder>, which is a mutable string class.</span></span> <span data-ttu-id="75d49-126">가변성은 클래스의 인스턴스를 만든 후 수정할 수 있습니다 추가, 제거, 바꾸기 또는 문자를 삽입 하 여 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-126">Mutability means that once an instance of the class has been created, it can be modified by appending, removing, replacing, or inserting characters.</span></span> <span data-ttu-id="75d49-127"><xref:System.Text.StringBuilder> 개체는 문자열에 대 한 확장을 수용 하기 위해 버퍼를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-127">A <xref:System.Text.StringBuilder> object maintains a buffer to accommodate expansions to the string.</span></span> <span data-ttu-id="75d49-128">대화방; 사용 가능한 경우 버퍼에 새 데이터가 추가 됩니다. 이 고, 그렇지 새로운, 더 큰 버퍼를 할당 하 고 원래 버퍼의 데이터 새 버퍼에 복사 되 고 새 데이터는 그런 다음 새 버퍼에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-128">New data is appended to the buffer if room is available; otherwise, a new, larger buffer is allocated, data from the original buffer is copied to the new buffer, and the new data is then appended to the new buffer.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="75d49-129">하지만 합니다 <xref:System.Text.StringBuilder> 클래스에는 일반적으로 보다 더 나은 성능을 제공 합니다 <xref:System.String> 클래스를 자동으로 대체 <xref:System.String> 사용 하 여 <xref:System.Text.StringBuilder> 문자열을 조작 하려는 때마다.</span><span class="sxs-lookup"><span data-stu-id="75d49-129">Although the <xref:System.Text.StringBuilder> class generally offers better performance than the <xref:System.String> class, you should not automatically replace <xref:System.String> with <xref:System.Text.StringBuilder> whenever you want to manipulate strings.</span></span> <span data-ttu-id="75d49-130">성능은 새 문자열, 앱을 실행 하는 시스템 및 작업의 형식에 대해 할당할 메모리의 양 문자열의 크기에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-130">Performance depends on the size of the string, the amount of memory to be allocated for the new string, the system on which your app is executing, and the type of operation.</span></span> <span data-ttu-id="75d49-131">확인 하려면 앱을 테스트할 준비가 되어 있어야 하는지 여부를 <xref:System.Text.StringBuilder> 실제로 성능이 크게 향상을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-131">You should be prepared to test your app to determine whether <xref:System.Text.StringBuilder> actually offers a significant performance improvement.</span></span>  
  
 <span data-ttu-id="75d49-132">사용 하는 것이 좋습니다는 <xref:System.String> 이러한 조건에서 클래스:</span><span class="sxs-lookup"><span data-stu-id="75d49-132">Consider using the <xref:System.String> class under these conditions:</span></span>  
  
-   <span data-ttu-id="75d49-133">경우는 앱은 문자열로 변경의 수가 작습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-133">When the number of changes that your app will make to a string is small.</span></span> <span data-ttu-id="75d49-134">이러한 경우 <xref:System.Text.StringBuilder> 수 무시할 제품 또는 성능 향상을 통해 <xref:System.String>합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-134">In these cases, <xref:System.Text.StringBuilder> might offer negligible or no performance improvement over <xref:System.String>.</span></span>  
  
-   <span data-ttu-id="75d49-135">경우는 고정된 된 수의 문자열 리터럴 사용 하 여 특히 연결 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-135">When you are performing a fixed number of concatenation operations, particularly with string literals.</span></span> <span data-ttu-id="75d49-136">이 경우 컴파일러는 단일 작업으로 연결 작업을 결합할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-136">In this case, the compiler might combine the concatenation operations into a single operation.</span></span>  
  
-   <span data-ttu-id="75d49-137">경우에 문자열을 빌드하는 동안 광범위 한 검색 작업을 수행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-137">When you have to perform extensive search operations while you are building your string.</span></span> <span data-ttu-id="75d49-138">합니다 <xref:System.Text.StringBuilder> 클래스에 메서드를 같은 검색 `IndexOf` 또는 `StartsWith`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-138">The <xref:System.Text.StringBuilder> class lacks search methods such as `IndexOf` or `StartsWith`.</span></span> <span data-ttu-id="75d49-139">변환 해야 합니다 <xref:System.Text.StringBuilder> 개체를 <xref:System.String> 이러한 작업과이 사용 하 여 성능이 부정할 수에 대 한 <xref:System.Text.StringBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-139">You'll have to convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> for these operations, and this can negate the performance benefit from using <xref:System.Text.StringBuilder>.</span></span> <span data-ttu-id="75d49-140">자세한 내용은 참조는 [StringBuilder 개체에서 텍스트 검색](#Searching) 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-140">For more information, see the [Searching the text in a StringBuilder object](#Searching) section.</span></span>  
  
 <span data-ttu-id="75d49-141">사용 하는 것이 좋습니다는 <xref:System.Text.StringBuilder> 이러한 조건에서 클래스:</span><span class="sxs-lookup"><span data-stu-id="75d49-141">Consider using the <xref:System.Text.StringBuilder> class under these conditions:</span></span>  
  
-   <span data-ttu-id="75d49-142">예상 하는 앱 (예: 사용자 입력을 포함 하는 문자열의 임의 숫자로 연결할 루프를 사용 하는 경우) 디자인 타임에 문자열로 변경 내용의 수 알된 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-142">When you expect your app to make an unknown number of changes to a string at design time (for example, when you are using a loop to concatenate a random number of strings that contain user input).</span></span>  
  
-   <span data-ttu-id="75d49-143">예상 하는 많은 수의 변경 내용 문자열로 있도록 앱.</span><span class="sxs-lookup"><span data-stu-id="75d49-143">When you expect your app to make a significant number of changes to a string.</span></span>  
  
<a name="HowWorks"></a>   
## <a name="how-stringbuilder-works"></a><span data-ttu-id="75d49-144">StringBuilder의 작동 원리</span><span class="sxs-lookup"><span data-stu-id="75d49-144">How StringBuilder works</span></span>  
 <span data-ttu-id="75d49-145"><xref:System.Text.StringBuilder.Length%2A?displayProperty=nameWithType> 속성의 문자 수를 나타냅니다는 <xref:System.Text.StringBuilder> 현재 개체를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-145">The <xref:System.Text.StringBuilder.Length%2A?displayProperty=nameWithType> property indicates the number of characters the <xref:System.Text.StringBuilder> object currently contains.</span></span> <span data-ttu-id="75d49-146">문자를 추가 하는 경우는 <xref:System.Text.StringBuilder> 길이가 증가 크기과 같을 때까지 개체를 <xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType> 개체를 포함할 수 있는 문자 수를 정의 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-146">If you add characters to the <xref:System.Text.StringBuilder> object, its length increases until it equals the size of the <xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType> property, which defines the number of characters that the object can contain.</span></span> <span data-ttu-id="75d49-147">추가 문자 수의 길이 경우는 <xref:System.Text.StringBuilder> 개체의 현재 용량, 새 메모리를 초과 하는 할당의 값을 <xref:System.Text.StringBuilder.Capacity%2A> 속성 두 배로 증가, 새 문자가 추가 되어를 <xref:System.Text.StringBuilder> 개체 및 해당 <xref:System.Text.StringBuilder.Length%2A>속성이 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-147">If the number of added characters causes the length of the <xref:System.Text.StringBuilder> object to exceed its current capacity, new memory is allocated, the value of the <xref:System.Text.StringBuilder.Capacity%2A> property is doubled, new characters are added to the <xref:System.Text.StringBuilder> object, and its <xref:System.Text.StringBuilder.Length%2A> property is adjusted.</span></span> <span data-ttu-id="75d49-148">에 대 한 추가 메모리를 <xref:System.Text.StringBuilder> 개체에 정의 된 값에 도달할 때까지 동적으로 할당 되는 <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-148">Additional memory for the <xref:System.Text.StringBuilder> object is allocated dynamically until it reaches the value defined by the <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="75d49-149">최대 용량에 도달 하면 추가 메모리가 없습니다.에 할당 될 수는 <xref:System.Text.StringBuilder> 개체 및 문자를 추가 하거나 해당 최대 용량을 초과 확장 하려고 하거나 throw를 <xref:System.ArgumentOutOfRangeException> 또는 <xref:System.OutOfMemoryException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-149">When the maximum capacity is reached, no further memory can be allocated for the <xref:System.Text.StringBuilder> object, and trying to add characters or expand it beyond its maximum capacity throws either an <xref:System.ArgumentOutOfRangeException> or an <xref:System.OutOfMemoryException> exception.</span></span>  
  
 <span data-ttu-id="75d49-150">다음 예제에서는 어떻게를 <xref:System.Text.StringBuilder> 개체 새 메모리 할당 및 개체에 할당 된 문자열을 확장 하는 대로 해당 용량을 동적으로 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-150">The following example illustrates how a <xref:System.Text.StringBuilder> object allocates new memory and increases its capacity dynamically as the string assigned to the object expands.</span></span> <span data-ttu-id="75d49-151">이 코드에서는 만듭니다는 <xref:System.Text.StringBuilder> 기본 (매개 변수가 없는) 생성자를 호출 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-151">The code creates a <xref:System.Text.StringBuilder> object by calling its default (parameterless) constructor.</span></span> <span data-ttu-id="75d49-152">이 개체의 기본 용량 16 자 이며 최대 용량 2 십억 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-152">The default capacity of this object is 16 characters, and its maximum capacity is more than 2 billion characters.</span></span> <span data-ttu-id="75d49-153">추가 문자열 "This is 문장."</span><span class="sxs-lookup"><span data-stu-id="75d49-153">Appending the string "This is a sentence."</span></span> <span data-ttu-id="75d49-154">문자열 길이 (19 자)의 기본 용량을 초과 하기 때문에 새 메모리 할당의 결과 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-154">results in a new memory allocation because the string length (19 characters) exceeds the default capacity of the <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="75d49-155">32 자로 개체의 용량을 두 배로 만듭니다, 그리고 새 문자열 추가 되 고 개체의 길이 19 자과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-155">The capacity of the object doubles to 32 characters, the new string is added, and the length of the object now equals 19 characters.</span></span> <span data-ttu-id="75d49-156">코드를 다음 추가 문자열 "This is 추가 문장."</span><span class="sxs-lookup"><span data-stu-id="75d49-156">The code then appends the string "This is an additional sentence."</span></span> <span data-ttu-id="75d49-157">값에는 <xref:System.Text.StringBuilder> 11 번 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-157">to the value of the <xref:System.Text.StringBuilder> object 11 times.</span></span> <span data-ttu-id="75d49-158">때마다 작업을 추가 하면 기간을 <xref:System.Text.StringBuilder> 용량과 해당 기존 용량을 초과 하는 개체의 두 배가 됩니다 및 <xref:System.Text.StringBuilder.Append%2A> 작업이 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-158">Whenever the append operation causes the length of the <xref:System.Text.StringBuilder> object to exceed its capacity, its existing capacity is doubled and the <xref:System.Text.StringBuilder.Append%2A> operation succeeds.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/default1.cs#3)]
 [!code-vb[System.Text.StringBuilder.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/default1.vb#3)]  
  
<a name="Memory"></a>   
## <a name="memory-allocation"></a><span data-ttu-id="75d49-159">메모리 할당</span><span class="sxs-lookup"><span data-stu-id="75d49-159">Memory allocation</span></span>  
 <span data-ttu-id="75d49-160">기본 용량을 <xref:System.Text.StringBuilder> 개체는 16 자 이며 최대 기본 용량 <xref:System.Int32.MaxValue?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-160">The default capacity of a <xref:System.Text.StringBuilder> object is 16 characters, and its default maximum capacity is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="75d49-161">호출 하는 경우 이러한 기본 값을 사용 합니다 <xref:System.Text.StringBuilder.%23ctor> 고 <xref:System.Text.StringBuilder.%23ctor%28System.String%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-161">These default values are used if you call the <xref:System.Text.StringBuilder.%23ctor> and <xref:System.Text.StringBuilder.%23ctor%28System.String%29> constructors.</span></span>  
  
 <span data-ttu-id="75d49-162">초기 용량을 명시적으로 정의할 수 있습니다는 <xref:System.Text.StringBuilder> 다음과 같은 방법으로 개체:</span><span class="sxs-lookup"><span data-stu-id="75d49-162">You can explicitly define the initial capacity of a <xref:System.Text.StringBuilder> object in the following ways:</span></span>  
  
-   <span data-ttu-id="75d49-163">중 하나를 호출 하 여 합니다 <xref:System.Text.StringBuilder> 포함 하는 생성자를 `capacity` 개체를 만들 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-163">By calling any of the <xref:System.Text.StringBuilder> constructors that includes a `capacity` parameter when you create the object.</span></span>  
  
-   <span data-ttu-id="75d49-164">새 값을 명시적으로 할당 하 여 합니다 <xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType> 속성을 기존 확장 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-164">By explicitly assigning a new value to the <xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType> property to expand an existing <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="75d49-165">참고 새 용량을 사용 하면 기존 보다 크거나 용량 보다 작으면 속성 예외를 throw 하는 <xref:System.Text.StringBuilder> 개체의 최대 용량입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-165">Note that the property throws an exception if the new capacity is less than the existing capacity or greater than the <xref:System.Text.StringBuilder> object's maximum capacity.</span></span>  
  
-   <span data-ttu-id="75d49-166">호출 하 여는 <xref:System.Text.StringBuilder.EnsureCapacity%2A?displayProperty=nameWithType> 새 용량을 사용 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-166">By calling the <xref:System.Text.StringBuilder.EnsureCapacity%2A?displayProperty=nameWithType> method with the new capacity.</span></span> <span data-ttu-id="75d49-167">새 용량 보다 크지 않아야 합니다 <xref:System.Text.StringBuilder> 개체의 최대 용량입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-167">The new capacity must not be greater than the <xref:System.Text.StringBuilder> object's maximum capacity.</span></span> <span data-ttu-id="75d49-168">할당할 달리 합니다 <xref:System.Text.StringBuilder.Capacity%2A> 속성인 <xref:System.Text.StringBuilder.EnsureCapacity%2A> 경우 예외를 throw 하지 않습니다 원하는 새 용량을 사용 하면 기존 용량 보다 작습니다; 여기에서 메서드 호출의 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-168">However, unlike an assignment to the <xref:System.Text.StringBuilder.Capacity%2A> property, <xref:System.Text.StringBuilder.EnsureCapacity%2A> does not throw an exception if the desired new capacity is less than the existing capacity; in this case, the method call has no effect.</span></span>  
  
 <span data-ttu-id="75d49-169">문자열의 길이에 할당 하는 경우는 <xref:System.Text.StringBuilder> 기본 용량 또는 지정된 된 용량을 초과 하는 생성자 호출에서 개체를 <xref:System.Text.StringBuilder.Capacity%2A> 속성은 사용 하 여 지정 된 문자열의 길이 `value` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="75d49-169">If the length of the string assigned to the <xref:System.Text.StringBuilder> object in the constructor call exceeds either the default capacity or the specified capacity, the <xref:System.Text.StringBuilder.Capacity%2A> property is set to the length of the string specified with the `value` parameter.</span></span>  
  
 <span data-ttu-id="75d49-170">최대 용량을 명시적으로 정의할 수 있습니다는 <xref:System.Text.StringBuilder> 를 호출 하 여 개체를 <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-170">You can explicitly define the maximum capacity of a <xref:System.Text.StringBuilder> object by calling the <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29> constructor.</span></span> <span data-ttu-id="75d49-171">새 값을 할당 하 여 최대 용량을 변경할 수 없습니다는 <xref:System.Text.StringBuilder.MaxCapacity%2A> 속성을 읽기 전용 이기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-171">You can't change the maximum capacity by assigning a new value to the <xref:System.Text.StringBuilder.MaxCapacity%2A> property, because it is read-only.</span></span>  
  
 <span data-ttu-id="75d49-172">이전 섹션과 기존 용량에 메모리가 부족 하 여, 추가 될 때마다 표시를 할당의 용량을 <xref:System.Text.StringBuilder> 개체에 정의 된 값까지 double는 <xref:System.Text.StringBuilder.MaxCapacity%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-172">As the previous section shows, whenever the existing capacity is inadequate, additional memory is allocated and the capacity of a <xref:System.Text.StringBuilder> object doubles up to the value defined by the <xref:System.Text.StringBuilder.MaxCapacity%2A> property.</span></span>  
  
 <span data-ttu-id="75d49-173">일반적으로 기본 용량 및 최대 용량은 대부분의 앱에 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-173">In general, the default capacity and maximum capacity are adequate for most apps.</span></span> <span data-ttu-id="75d49-174">다음 조건에서 이러한 값을 설정 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-174">You might consider setting these values under the following conditions:</span></span>  
  
-   <span data-ttu-id="75d49-175">하는 경우의 최종 크기를 <xref:System.Text.StringBuilder> 개체는 몇 메가바이트를 초과 일반적으로 매우 큰 증가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-175">If the eventual size of the <xref:System.Text.StringBuilder> object is likely to grow exceedingly large, typically in excess of several megabytes.</span></span> <span data-ttu-id="75d49-176">이 경우 있을 초기 설정에서 성능상의 이점을 <xref:System.Text.StringBuilder.Capacity%2A> 너무 많은 메모리 재할당에 대 한 필요성을 제거 하려면 상대적으로 높은 값으로 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-176">In this case, there may be some performance benefit from setting the initial <xref:System.Text.StringBuilder.Capacity%2A> property to a significantly high value to eliminate the need for too many memory reallocations.</span></span>  
  
-   <span data-ttu-id="75d49-177">앱 제한 된 메모리를 사용 하 여 시스템에서 실행 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-177">If your app is running on a system with limited memory.</span></span> <span data-ttu-id="75d49-178">설정을 고려해 야 할 수 있습니다이 경우에 <xref:System.Text.StringBuilder.MaxCapacity%2A> 속성을 보다 작은 <xref:System.Int32.MaxValue?displayProperty=nameWithType> 앱 메모리 사용이 제한 된 환경에서 실행 되도록를 일으킬 수 있는 큰 문자열을 처리 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="75d49-178">In this case, you may want to consider setting the <xref:System.Text.StringBuilder.MaxCapacity%2A> property to less than <xref:System.Int32.MaxValue?displayProperty=nameWithType> if your app is handling large strings that may cause it to execute in a memory-constrained environment.</span></span>  
  
<a name="Instantiating"></a>   
## <a name="instantiating-a-stringbuilder-object"></a><span data-ttu-id="75d49-179">StringBuilder 개체 인스턴스화</span><span class="sxs-lookup"><span data-stu-id="75d49-179">Instantiating a StringBuilder object</span></span>  
 <span data-ttu-id="75d49-180">인스턴스화하는 <xref:System.Text.StringBuilder> 중 다음 표에 나열 된 6 개 오버 로드 된 클래스 생성자를 호출 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-180">You instantiate a <xref:System.Text.StringBuilder> object by calling one of its six overloaded class constructors, which are listed in the following table.</span></span> <span data-ttu-id="75d49-181">생성자의 세 가지 인스턴스화를 <xref:System.Text.StringBuilder> 값인 빈 문자열인 경우 개체는 설정 하지만 해당 <xref:System.Text.StringBuilder.Capacity%2A> 및 <xref:System.Text.StringBuilder.MaxCapacity%2A> 다르게 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-181">Three of the constructors instantiate a <xref:System.Text.StringBuilder> object whose value is an empty string, but set its <xref:System.Text.StringBuilder.Capacity%2A> and <xref:System.Text.StringBuilder.MaxCapacity%2A> values differently.</span></span> <span data-ttu-id="75d49-182">나머지 3 개 생성자는 정의 <xref:System.Text.StringBuilder> 용량 및 특정 문자열 값을 가진 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-182">The remaining three constructors define a <xref:System.Text.StringBuilder> object that has a specific string value and capacity.</span></span> <span data-ttu-id="75d49-183">기본 최대 용량을 사용 하 여 3 개 생성자 중 두 가지 <xref:System.Int32.MaxValue?displayProperty=nameWithType>반면 세 번째를 사용 하면 최대 용량을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-183">Two of the three constructors use the default maximum capacity of <xref:System.Int32.MaxValue?displayProperty=nameWithType>, whereas the third allows you to set the maximum capacity.</span></span>  
  
|<span data-ttu-id="75d49-184">생성자</span><span class="sxs-lookup"><span data-stu-id="75d49-184">Constructor</span></span>|<span data-ttu-id="75d49-185">문자열 값</span><span class="sxs-lookup"><span data-stu-id="75d49-185">String value</span></span>|<span data-ttu-id="75d49-186">수용작업량</span><span class="sxs-lookup"><span data-stu-id="75d49-186">Capacity</span></span>|<span data-ttu-id="75d49-187">최대 용량</span><span class="sxs-lookup"><span data-stu-id="75d49-187">Maximum capacity</span></span>|  
|-----------------|------------------|--------------|----------------------|  
|<xref:System.Text.StringBuilder.%23ctor>|<xref:System.String.Empty?displayProperty=nameWithType>|<span data-ttu-id="75d49-188">16</span><span class="sxs-lookup"><span data-stu-id="75d49-188">16</span></span>|<xref:System.Int32.MaxValue?displayProperty=nameWithType>|  
|<xref:System.Text.StringBuilder.%23ctor%28System.Int32%29>|<xref:System.String.Empty?displayProperty=nameWithType>|<span data-ttu-id="75d49-189">정의 된 `capacity` 매개 변수</span><span class="sxs-lookup"><span data-stu-id="75d49-189">Defined by the `capacity` parameter</span></span>|<xref:System.Int32.MaxValue?displayProperty=nameWithType>|  
|<xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29>|<xref:System.String.Empty?displayProperty=nameWithType>|<span data-ttu-id="75d49-190">정의 된 `capacity` 매개 변수</span><span class="sxs-lookup"><span data-stu-id="75d49-190">Defined by the `capacity` parameter</span></span>|<span data-ttu-id="75d49-191">정의 된 `maxCapacity` 매개 변수</span><span class="sxs-lookup"><span data-stu-id="75d49-191">Defined by the `maxCapacity` parameter</span></span>|  
|<xref:System.Text.StringBuilder.%23ctor%28System.String%29>|<span data-ttu-id="75d49-192">정의 된 `value` 매개 변수</span><span class="sxs-lookup"><span data-stu-id="75d49-192">Defined by the `value` parameter</span></span>|<span data-ttu-id="75d49-193">16 또는 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-193">16 or `value`.</span></span> <span data-ttu-id="75d49-194"><xref:System.String.Length%2A>에서 더 큰 쪽</span><span class="sxs-lookup"><span data-stu-id="75d49-194"><xref:System.String.Length%2A>, whichever is greater</span></span>|<xref:System.Int32.MaxValue?displayProperty=nameWithType>|  
|<xref:System.Text.StringBuilder.%23ctor%28System.String%2CSystem.Int32%29>|<span data-ttu-id="75d49-195">정의 된 `value` 매개 변수</span><span class="sxs-lookup"><span data-stu-id="75d49-195">Defined by the `value` parameter</span></span>|<span data-ttu-id="75d49-196">정의 된 `capacity` 매개 변수 또는 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-196">Defined by the `capacity` parameter or `value`.</span></span> <span data-ttu-id="75d49-197"><xref:System.String.Length%2A>에서 더 큰 쪽입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-197"><xref:System.String.Length%2A>, whichever is greater.</span></span>|<xref:System.Int32.MaxValue?displayProperty=nameWithType>|  
|<xref:System.Text.StringBuilder.%23ctor%28System.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>|<span data-ttu-id="75d49-198">`value`에 의해 정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-198">Defined by `value`.</span></span> <span data-ttu-id="75d49-199"><xref:System.String.Substring%2A>(`startIndex`, `length`)</span><span class="sxs-lookup"><span data-stu-id="75d49-199"><xref:System.String.Substring%2A>(`startIndex`, `length`)</span></span>|<span data-ttu-id="75d49-200">정의 된 `capacity` 매개 변수 또는 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-200">Defined by the `capacity` parameter or `value`.</span></span> <span data-ttu-id="75d49-201"><xref:System.String.Length%2A>에서 더 큰 쪽입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-201"><xref:System.String.Length%2A>, whichever is greater.</span></span>|<span data-ttu-id="75d49-202">정의 된 `maxCapacity` 매개 변수</span><span class="sxs-lookup"><span data-stu-id="75d49-202">Defined by the `maxCapacity` parameter</span></span>|  
  
 <span data-ttu-id="75d49-203">다음 예제에서는 이러한 생성자 오버 로드 중 3 개를 사용 하 여 인스턴스화할 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-203">The following example uses three of these constructor overloads to instantiate <xref:System.Text.StringBuilder> objects.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/instantiate1.cs#6)]
 [!code-vb[System.Text.StringBuilder.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/instantiate1.vb#6)]  
  
<a name="Calling"></a>   
## <a name="calling-stringbuilder-methods"></a><span data-ttu-id="75d49-204">StringBuilder 메서드 호출</span><span class="sxs-lookup"><span data-stu-id="75d49-204">Calling StringBuilder methods</span></span>  
 <span data-ttu-id="75d49-205">문자열을 수정 하는 메서드 중 대부분을 <xref:System.Text.StringBuilder> 인스턴스는 동일한 인스턴스에 대 한 참조를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-205">Most of the methods that modify the string in a <xref:System.Text.StringBuilder> instance return a reference to that same instance.</span></span> <span data-ttu-id="75d49-206">이렇게 하면 호출 <xref:System.Text.StringBuilder> 두 가지 방법으로 메서드:</span><span class="sxs-lookup"><span data-stu-id="75d49-206">This enables you to call <xref:System.Text.StringBuilder> methods in two ways:</span></span>  
  
-   <span data-ttu-id="75d49-207">개별 메서드를 호출할 수 있으며 다음 예제와 같이 반환 값을 무시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-207">You can make individual method calls and ignore the return value, as the following example does.</span></span>  
  
     [!code-csharp[System.Text.StringBuilder.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/call1.cs#4)]
     [!code-vb[System.Text.StringBuilder.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/call1.vb#4)]  
  
-   <span data-ttu-id="75d49-208">단일 문에서 일련의 메서드 호출을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-208">You can make a series of method calls in a single statement.</span></span> <span data-ttu-id="75d49-209">연속 작업을 연결 하는 단일 문으로 작성 하려는 경우에 편리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-209">This can be convenient if you want to write a single statement that chains successive operations.</span></span> <span data-ttu-id="75d49-210">다음 예제에서는 코드 한 줄으로 이전 예제에서 세 개의 메서드 호출을 통합합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-210">The following example consolidates three method calls from the previous example into a single line of code.</span></span>  
  
     [!code-csharp[System.Text.StringBuilder.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/call2.cs#5)]
     [!code-vb[System.Text.StringBuilder.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/call2.vb#5)]  
  
<a name="Operations"></a>   
## <a name="performing-stringbuilder-operations"></a><span data-ttu-id="75d49-211">StringBuilder 작업 수행</span><span class="sxs-lookup"><span data-stu-id="75d49-211">Performing StringBuilder operations</span></span>  
 <span data-ttu-id="75d49-212">메서드를 사용할 수는 <xref:System.Text.StringBuilder> 반복, 추가, 삭제 또는 수정에 문자 클래스는 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-212">You can use the methods of the <xref:System.Text.StringBuilder> class to iterate, add, delete, or modify characters in a <xref:System.Text.StringBuilder> object.</span></span>  
  
<a name="Iterating"></a>   
### <a name="iterating-stringbuilder-characters"></a><span data-ttu-id="75d49-213">StringBuilder 문자를 반복합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-213">Iterating StringBuilder characters</span></span>  
 <span data-ttu-id="75d49-214">문자를 액세스할 수 있습니다는 <xref:System.Text.StringBuilder> 사용 하 여 개체를 <xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-214">You can access the characters in a <xref:System.Text.StringBuilder> object by using the <xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="75d49-215">C#에서는 <xref:System.Text.StringBuilder.Chars%2A> 인덱서;는 Visual Basic에서는 기본 속성을는 <xref:System.Text.StringBuilder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-215">In C#, <xref:System.Text.StringBuilder.Chars%2A> is an indexer; in Visual Basic, it is the default property of the <xref:System.Text.StringBuilder> class.</span></span> <span data-ttu-id="75d49-216">이렇게 하면 명시적으로 참조 하지 않고 해당 인덱스에만 사용 하 여 개별 문자를 검색 하는 <xref:System.Text.StringBuilder.Chars%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-216">This enables you to set or retrieve individual characters by using their index only, without explicitly referencing the <xref:System.Text.StringBuilder.Chars%2A> property.</span></span> <span data-ttu-id="75d49-217">문자를 <xref:System.Text.StringBuilder> 개체는 인덱스 (0)에서 시작 하 고 인덱스 계속 <xref:System.Text.StringBuilder.Length%2A> -1입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-217">Characters in a <xref:System.Text.StringBuilder> object begin at index 0 (zero) and continue to index <xref:System.Text.StringBuilder.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="75d49-218">다음 예제는 <xref:System.Text.StringBuilder.Chars%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-218">The following example illustrates the <xref:System.Text.StringBuilder.Chars%2A> property.</span></span> <span data-ttu-id="75d49-219">10 개 난수를 추가 하는 <xref:System.Text.StringBuilder> 개체를 다음 각 문자를 반복 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-219">It appends ten random numbers to a <xref:System.Text.StringBuilder> object, and then iterates each character.</span></span> <span data-ttu-id="75d49-220">문자의 유니코드 범주 이면 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, 수를 1 씩 감소 (또는 해당 값이 0 이면 숫자 9로 변경).</span><span class="sxs-lookup"><span data-stu-id="75d49-220">If the character's Unicode category is <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, it decreases the number by 1 (or changes the number to 9 if its value is 0).</span></span> <span data-ttu-id="75d49-221">내용을 표시 하는 예제는 <xref:System.Text.StringBuilder> 전과 개별 문자 값이 변경 된 후 두 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-221">The example displays the contents of the <xref:System.Text.StringBuilder> object both before and after the values of individual characters were changed.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/chars1.cs#7)]
 [!code-vb[System.Text.StringBuilder.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/chars1.vb#7)]  

[!INCLUDE[stringbuilder-performance-note](~/includes/stringbuilder-perf-note.md)]
  
<a name="Adding"></a>   
### <a name="adding-text-to-a-stringbuilder-object"></a><span data-ttu-id="75d49-222">StringBuilder 개체에 텍스트 추가</span><span class="sxs-lookup"><span data-stu-id="75d49-222">Adding text to a StringBuilder object</span></span>  
 <span data-ttu-id="75d49-223">합니다 <xref:System.Text.StringBuilder> 클래스의 내용을 확장 하기 위해 다음 메서드를 포함 한 <xref:System.Text.StringBuilder> 개체:</span><span class="sxs-lookup"><span data-stu-id="75d49-223">The <xref:System.Text.StringBuilder> class includes the following methods for expanding the contents of a <xref:System.Text.StringBuilder> object:</span></span>  
  
-   <span data-ttu-id="75d49-224">합니다 <xref:System.Text.StringBuilder.Append%2A> 메서드는 추가 부분 문자열, 문자열, 문자 배열, 문자 배열의 일부 단일 문자를 여러 번 반복 하거나 기본 데이터의 문자열 표현을 입력 하 여를 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-224">The <xref:System.Text.StringBuilder.Append%2A> method appends a string, a substring, a character array, a portion of a character array, a single character repeated multiple times, or the string representation of a primitive data type to a <xref:System.Text.StringBuilder> object.</span></span>  
  
-   <span data-ttu-id="75d49-225">합니다 <xref:System.Text.StringBuilder.AppendLine%2A> 줄 종결자 또는 줄 종결자가 오는와 함께 문자열을 추가 하는 메서드를 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-225">The <xref:System.Text.StringBuilder.AppendLine%2A> method appends a line terminator or a string along with a line terminator to a <xref:System.Text.StringBuilder> object.</span></span>  
  
-   <span data-ttu-id="75d49-226"><xref:System.Text.StringBuilder.AppendFormat%2A> 메서드를 추가를 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-226">The <xref:System.Text.StringBuilder.AppendFormat%2A> method appends a  to a <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="75d49-227">결과 문자열에 포함 된 개체의 문자열 표현에는 현재 시스템 문화권 또는 지정된 된 문화권의 서식 규칙 반영할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-227">The string representations of objects included in the result string can reflect the formatting conventions of the current system culture or a specified culture.</span></span>  
  
-   <span data-ttu-id="75d49-228"><xref:System.Text.StringBuilder.Insert%2A> 메서드 삽입 문자열을 부분 문자열, 문자열의 여러 반복 문자 배열, 문자 배열의 일부 또는 기본 데이터의 문자열 표현에서 지정된 된 위치에서 입력을 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-228">The <xref:System.Text.StringBuilder.Insert%2A> method inserts a string, a substring, multiple repetitions of a string, a character array, a portion of a character array, or the string representation of a primitive data type at a specified position in the <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="75d49-229">위치는 0부터 시작 인덱스에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-229">The position is defined by a zero-based index.</span></span>  
  
 <span data-ttu-id="75d49-230">다음 예제에서는 합니다 <xref:System.Text.StringBuilder.Append%2A>, <xref:System.Text.StringBuilder.AppendLine%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 <xref:System.Text.StringBuilder.Insert%2A> 의 텍스트를 확장 하는 방법을 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-230">The following example uses the <xref:System.Text.StringBuilder.Append%2A>, <xref:System.Text.StringBuilder.AppendLine%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and <xref:System.Text.StringBuilder.Insert%2A> methods to expand the text of a <xref:System.Text.StringBuilder> object.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/expand1.cs#9)]
 [!code-vb[System.Text.StringBuilder.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/expand1.vb#9)]  
  
<a name="Deleting"></a>   
### <a name="deleting-text-from-a-stringbuilder-object"></a><span data-ttu-id="75d49-231">StringBuilder 개체의 텍스트를 삭제 하는 중</span><span class="sxs-lookup"><span data-stu-id="75d49-231">Deleting text from a StringBuilder object</span></span>  
 <span data-ttu-id="75d49-232">합니다 <xref:System.Text.StringBuilder> 클래스의 현재 크기를 줄일 수 있는 메서드가 포함 됩니다 <xref:System.Text.StringBuilder> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="75d49-232">The <xref:System.Text.StringBuilder> class includes methods that can reduce the size of the current <xref:System.Text.StringBuilder> instance.</span></span> <span data-ttu-id="75d49-233"><xref:System.Text.StringBuilder.Clear%2A> 메서드는 모든 문자를 제거 하 고 설정를 <xref:System.Text.StringBuilder.Length%2A> 속성을 0.</span><span class="sxs-lookup"><span data-stu-id="75d49-233">The <xref:System.Text.StringBuilder.Clear%2A> method removes all characters and sets the <xref:System.Text.StringBuilder.Length%2A> property to zero.</span></span> <span data-ttu-id="75d49-234"><xref:System.Text.StringBuilder.Remove%2A> 메서드는 지정 된 개수의 문자를 특정 인덱스 위치부터 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-234">The <xref:System.Text.StringBuilder.Remove%2A> method deletes a specified number of characters starting at a particular index position.</span></span> <span data-ttu-id="75d49-235">또한 끝에서 문자를 제거할 수 있습니다는 <xref:System.Text.StringBuilder> 개체를 설정 하 여 해당 <xref:System.Text.StringBuilder.Length%2A> 현재 인스턴스의 길이 보다 작은 값으로 속성.</span><span class="sxs-lookup"><span data-stu-id="75d49-235">In addition, you can remove characters from the end of a <xref:System.Text.StringBuilder> object by setting its <xref:System.Text.StringBuilder.Length%2A> property to a value that is less than the length of the current instance.</span></span>  
  
 <span data-ttu-id="75d49-236">다음 예제에서 텍스트의 일부를 제거는 <xref:System.Text.StringBuilder> 개체, 해당 결과 용량, 최대 용량 및 길이 속성 값을 표시 하 고 호출 합니다 <xref:System.Text.StringBuilder.Clear%2A> 에서 모든 문자를 제거 하는 방법을 <xref:System.Text.StringBuilder> 개체.</span><span class="sxs-lookup"><span data-stu-id="75d49-236">The following example removes some of the text from a <xref:System.Text.StringBuilder> object, displays its resulting capacity, maximum capacity, and length property values, and then calls the <xref:System.Text.StringBuilder.Clear%2A> method to remove all the characters from the <xref:System.Text.StringBuilder> object.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/delete1.cs#10)]
 [!code-vb[System.Text.StringBuilder.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/delete1.vb#10)]  
  
<a name="Modifying"></a>   
### <a name="modifying-the-text-in-a-stringbuilder-object"></a><span data-ttu-id="75d49-237">StringBuilder 개체의 텍스트를 수정합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-237">Modifying the text in a StringBuilder object</span></span>  
 <span data-ttu-id="75d49-238">합니다 <xref:System.Text.StringBuilder.Replace%2A?displayProperty=nameWithType> 메서드는 문자 또는 문자열 전체에 있는 모든 항목을 대체 <xref:System.Text.StringBuilder> 개체 또는 특정 문자 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-238">The <xref:System.Text.StringBuilder.Replace%2A?displayProperty=nameWithType> method replaces all occurrences of a character or a string in the entire <xref:System.Text.StringBuilder> object or in a particular character range.</span></span> <span data-ttu-id="75d49-239">다음 예제에서는 합니다 <xref:System.Text.StringBuilder.Replace%2A> 에서 물음표 (?)를 사용 하 여 모든 느낌표 (!)를 대체 하는 방법의 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-239">The following example uses the <xref:System.Text.StringBuilder.Replace%2A> method to replace all exclamation points (!) with question marks (?) in the <xref:System.Text.StringBuilder> object.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/replace1.cs#11)]
 [!code-vb[System.Text.StringBuilder.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/replace1.vb#11)]  
  
<a name="Searching"></a>   
## <a name="searching-the-text-in-a-stringbuilder-object"></a><span data-ttu-id="75d49-240">StringBuilder 개체의 텍스트를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-240">Searching the text in a StringBuilder object</span></span>  
 <span data-ttu-id="75d49-241"><xref:System.Text.StringBuilder> 클래스와 비슷한 메서드를 포함 되지 않습니다는 <xref:System.String.Contains%2A?displayProperty=nameWithType>, <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, 및 <xref:System.String.StartsWith%2A?displayProperty=nameWithType> 에서 제공 하는 메서드는 <xref:System.String> 클래스를 특정 문자 또는 부분 문자열에 대 한 개체를 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-241">The <xref:System.Text.StringBuilder> class does not include methods similar to the <xref:System.String.Contains%2A?displayProperty=nameWithType>, <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, and <xref:System.String.StartsWith%2A?displayProperty=nameWithType> methods provided by the <xref:System.String> class, which allow you to search the object for a particular character or a substring.</span></span> <span data-ttu-id="75d49-242">존재 여부를 확인 하거나 부분 문자열의 문자 위치 시작을 검색 하는 필요는 <xref:System.String> 문자열 검색 방법 또는 정규식 메서드 중 하나를 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-242">Determining the presence or starting character position of a substring requires that you search a <xref:System.String> value by using either a string search method or a regular expression method.</span></span> <span data-ttu-id="75d49-243">다음 표에서 보여 주듯이 이러한 검색을 구현 하는 방법은 네 가지입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-243">There are four ways to implement such searches, as the following table shows.</span></span>  
  
|<span data-ttu-id="75d49-244">기술</span><span class="sxs-lookup"><span data-stu-id="75d49-244">Technique</span></span>|<span data-ttu-id="75d49-245">전문가</span><span class="sxs-lookup"><span data-stu-id="75d49-245">Pros</span></span>|<span data-ttu-id="75d49-246">단점</span><span class="sxs-lookup"><span data-stu-id="75d49-246">Cons</span></span>|  
|---------------|----------|----------|  
|<span data-ttu-id="75d49-247">추가 하기 전에 문자열 값을 검색 합니다 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-247">Search string values before adding them to the <xref:System.Text.StringBuilder> object.</span></span>|<span data-ttu-id="75d49-248">부분 문자열이 있는지 여부를 결정 하는 데 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-248">Useful for determining whether a substring exists.</span></span>|<span data-ttu-id="75d49-249">부분 문자열의 인덱스 위치는 중요 한 경우 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-249">Cannot be used when the index position of a substring is important.</span></span>|  
|<span data-ttu-id="75d49-250">호출 <xref:System.Text.StringBuilder.ToString%2A> 반환 된 검색 및 <xref:System.String> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-250">Call <xref:System.Text.StringBuilder.ToString%2A> and search the returned <xref:System.String> object.</span></span>|<span data-ttu-id="75d49-251">사용 하기 쉬운 모든 텍스트를 할당 하는 경우는 <xref:System.Text.StringBuilder> 개체를 선택한 다음 수정 하기 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-251">Easy to use if you assign all the text to a <xref:System.Text.StringBuilder> object, and then begin to modify it.</span></span>|<span data-ttu-id="75d49-252">반복적으로 호출 하기가 불편 <xref:System.Text.StringBuilder.ToString%2A> 하는 경우 수정 해야 모든 텍스트에 추가 되기 전에 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-252">Cumbersome to repeatedly call <xref:System.Text.StringBuilder.ToString%2A> if you must make modifications before all text is added to the <xref:System.Text.StringBuilder> object.</span></span><br /><br /> <span data-ttu-id="75d49-253">끝에서 작동 하도록 설정 해야 합니다 <xref:System.Text.StringBuilder> 개체의 텍스트 내용을 변경 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="75d49-253">You must remember to work from the end of the <xref:System.Text.StringBuilder> object's text if you're making changes.</span></span>|  
|<span data-ttu-id="75d49-254">사용 된 <xref:System.Text.StringBuilder.Chars%2A> 순차적으로 문자 범위를 검색 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-254">Use the <xref:System.Text.StringBuilder.Chars%2A> property to sequentially search a range of characters.</span></span>|<span data-ttu-id="75d49-255">개별 문자 또는 작은 부분 문자열을 사용 하 여 유지 하려는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-255">Useful if you're concerned with individual characters or a small substring.</span></span>|<span data-ttu-id="75d49-256">검색할 문자 수가 큰 경우 또는 검색 논리는 복잡 한 경우 번거롭습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-256">Cumbersome if the number of characters to search is large or if the search logic is complex.</span></span><br /><br /><span data-ttu-id="75d49-257">반복 된 메서드 호출을 통해 매우 큰 증가 하는 개체에 대 한 성능이 매우 저하 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-257">Results in very poor performance for objects that have grown very large through repeated method calls.</span></span>  |  
|<span data-ttu-id="75d49-258">변환를 <xref:System.Text.StringBuilder> 개체를 <xref:System.String> 개체를에 수정 작업을 수행 합니다 <xref:System.String> 개체.</span><span class="sxs-lookup"><span data-stu-id="75d49-258">Convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object, and perform modifications on the <xref:System.String> object.</span></span>|<span data-ttu-id="75d49-259">수정 횟수가 작은 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-259">Useful if the number of modifications is small.</span></span>|<span data-ttu-id="75d49-260">성능 이점은 부정 합니다 <xref:System.Text.StringBuilder> 클래스의 수정 번호 큰 경우.</span><span class="sxs-lookup"><span data-stu-id="75d49-260">Negates the performance benefit of the <xref:System.Text.StringBuilder> class if the number of modifications is large.</span></span>|  
  
 <span data-ttu-id="75d49-261">이러한 기술을 자세히 살펴보겠습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-261">Let's examine these techniques in greater detail.</span></span>  
  
-   <span data-ttu-id="75d49-262">검색 목표에 저장 하기 전에 문자열을 검색할 수 있습니다 (즉, 필요가 없는 경우 부분 문자열의 위치에 있는) 특정 하위 문자열이 있는지 확인 하는 경우는 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-262">If the goal of the search is to determine whether a particular substring exists (that is, if you aren't interested in the position of the substring), you can search strings before storing them in the <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="75d49-263">다음 예제에서는 한 가지 구현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-263">The following example provides one possible implementation.</span></span> <span data-ttu-id="75d49-264">정의 `StringBuilderFinder` 클래스의 생성자에 대 한 참조를 전달 되는 <xref:System.Text.StringBuilder> 개체 및 문자열에서 찾을 부분 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-264">It defines a `StringBuilderFinder` class whose constructor is passed a reference to a <xref:System.Text.StringBuilder> object and the substring to find in the string.</span></span> <span data-ttu-id="75d49-265">이 예제에서는 예제의 경우 기록 된 온도가 화씨 또는 섭씨로와 적절 한 소개 텍스트의 시작 부분에 추가 하는지 여부를 결정 하려고 합니다 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-265">In this case, the example tries to determine whether recorded temperatures are in Fahrenheit or Celsius, and adds the appropriate introductory text to the beginning of the <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="75d49-266">난수 생성기를 섭씨 또는 화씨 데이터가 들어 있는 배열을 선택 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-266">A random number generator is used to select an array that contains data in either degrees Celsius or degrees Fahrenheit.</span></span>  
  
     [!code-csharp[System.Text.StringBuilder.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/pattern1.cs#12)]
     [!code-vb[System.Text.StringBuilder.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/pattern1.vb#12)]  
  
-   <span data-ttu-id="75d49-267">호출을 <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> 변환할 메서드는 <xref:System.Text.StringBuilder> 개체를 <xref:System.String> 개체.</span><span class="sxs-lookup"><span data-stu-id="75d49-267">Call the <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method to convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object.</span></span> <span data-ttu-id="75d49-268">와 같은 메서드를 사용 하 여 문자열을 검색할 수 있습니다 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 나 <xref:System.String.StartsWith%2A?displayProperty=nameWithType>, 또는 정규식을 사용할 수 있습니다 및 <xref:System.Text.RegularExpressions.Regex> 패턴을 검색 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-268">You can search the string by using methods such as <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> or <xref:System.String.StartsWith%2A?displayProperty=nameWithType>, or you can use regular expressions and the <xref:System.Text.RegularExpressions.Regex> class to search for patterns.</span></span> <span data-ttu-id="75d49-269">때문에 둘 다 <xref:System.Text.StringBuilder> 고 <xref:System.String> 문자, 문자, 부분 문자열의 인덱스 위치를 저장 하기 위해 인코딩을 u t F-16을 사용 하 여 개체와 일치 하는 정규식 개체를 모두에서 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-269">Because both <xref:System.Text.StringBuilder> and <xref:System.String> objects use UTF-16 encoding to store characters, the index positions of characters, substrings, and regular expression matches are the same in both objects.</span></span> <span data-ttu-id="75d49-270">사용할 수 있습니다 <xref:System.Text.StringBuilder> 텍스트에서 발견 되는 동일한 위치에 있는 변경 하는 방법의 <xref:System.String> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-270">This enables you to use <xref:System.Text.StringBuilder> methods to make changes at the same position at which that text is found in the <xref:System.String> object.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="75d49-271">이 접근 방식을 채택 하면, 하는 경우의 끝에서 작업 해야 합니다 <xref:System.Text.StringBuilder> 반복적으로 변환 하지 않아도 되도록 해당 시작 개체는 <xref:System.Text.StringBuilder> 개체를 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-271">If you adopt this approach, you should work from the end of the <xref:System.Text.StringBuilder> object to its beginning so that you don't have to repeatedly convert the <xref:System.Text.StringBuilder> object to a string.</span></span>  
  
     <span data-ttu-id="75d49-272">다음 예제에서 이 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-272">The following example illustrates this approach.</span></span> <span data-ttu-id="75d49-273">4 개에서 영어 알파벳의 각 문자를 저장 하는 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-273">It stores four occurrences of each letter of the English alphabet in a <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="75d49-274">다음에 텍스트를 변환 하는 <xref:System.String> 개체 및 각 4 자리 시퀀스의 시작 위치를 식별 하는 정규식을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-274">It then converts the text to a <xref:System.String> object and uses a regular expression to identify the starting position of each four-character sequence.</span></span> <span data-ttu-id="75d49-275">마지막으로, 첫 번째 시퀀스를 제외 하 고 각 네 자리 시퀀스 앞에 밑줄을 추가 하 고 대문자 시퀀스의 첫 번째 문자를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-275">Finally, it adds an underscore before each four-character sequence except for the first sequence, and converts the first character of the sequence to uppercase.</span></span>  
  
     [!code-csharp[System.Text.StringBuilder.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/pattern2.cs#13)]
     [!code-vb[System.Text.StringBuilder.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/pattern2.vb#13)]  
  
-   <span data-ttu-id="75d49-276">사용 된 <xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType> 속성에 있는 문자의 범위를 순차적으로 검색을 <xref:System.Text.StringBuilder> 개체.</span><span class="sxs-lookup"><span data-stu-id="75d49-276">Use the <xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType> property to sequentially search a range of characters in a <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="75d49-277">검색할 문자의 수 크거나 검색 논리는 특히 복잡 한 경우에이 방법은 실제 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-277">This approach may not be practical if the number of characters to be searched is large or the search logic is particularly complex.</span></span> <span data-ttu-id="75d49-278">문자 단위로 인덱스 기반 액세스에 대 한 성능에 미치는 영향에 대 한 매우 큰, chunked <xref:System.Text.StringBuilder> 개체에 대 한 설명서를 참조 하십시오.는 <xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-278">For the performance implications of character-by-character index-based access for very large, chunked <xref:System.Text.StringBuilder> objects, see the documentation for the <xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType> property.</span></span> 
  
     <span data-ttu-id="75d49-279">다음 예제에서는 이전 예제 기능에서와 동일 하지만 구현에서 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-279">The following example is identical in functionality to the previous example but differs in implementation.</span></span> <span data-ttu-id="75d49-280">사용 된 <xref:System.Text.StringBuilder.Chars%2A> 문자 값이 변경 하는 시기를 감지 하는 속성의 해당 위치에 밑줄을 삽입 하 고 새 시퀀스에서 첫 번째 문자를 대문자로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-280">It uses the <xref:System.Text.StringBuilder.Chars%2A> property to detect when a character value has changed, inserts an underscore at that position, and converts the first character in the new sequence to uppercase.</span></span>  
  
     [!code-csharp[System.Text.StringBuilder.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/pattern3.cs#14)]
     [!code-vb[System.Text.StringBuilder.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/pattern3.vb#14)]  
  
-   <span data-ttu-id="75d49-281">에 수정 되지 않은 모든 텍스트를 저장할를 <xref:System.Text.StringBuilder> 개체를 호출 합니다 <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> 변환 하는 방법을 <xref:System.Text.StringBuilder> 개체를 <xref:System.String> 개체를에 수정 작업을 수행는 <xref:System.String> 개체.</span><span class="sxs-lookup"><span data-stu-id="75d49-281">Store all the unmodified text in the <xref:System.Text.StringBuilder> object, call the <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method to convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object, and perform the modifications on the <xref:System.String> object.</span></span> <span data-ttu-id="75d49-282">몇 가지 수정 사항만;에 있는 경우이 방법을 사용할 수 있습니다. 변경할 수 없는 문자열을 사용 하는 비용 사용의 성능 이점 없어질 수 있습니다이 고, 그렇지는 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-282">You can use this approach if you have only a few modifications; otherwise, the cost of working with immutable strings may negate the performance benefits of using a <xref:System.Text.StringBuilder> object.</span></span>  
  
     <span data-ttu-id="75d49-283">다음 예제에서는 이전 두 예제 기능에서 동일 하지만 구현에서 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-283">The following example is identical in functionality to the previous two examples but differs in implementation.</span></span> <span data-ttu-id="75d49-284">만듭니다는 <xref:System.Text.StringBuilder> 개체를 변환 하는 <xref:System.String> 개체를 다음 정규식을 사용 하 여 문자열에서 모든 나머지 수정 작업을 수행 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-284">It creates a <xref:System.Text.StringBuilder> object, converts it to a <xref:System.String> object, and then uses a regular expression to perform all remaining modifications on the string.</span></span> <span data-ttu-id="75d49-285"><xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType> 메서드 람다 식을 사용 하 여 각 일치 항목에 대체를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-285">The <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType> method uses a lambda expression to perform the replacement on each match.</span></span>  
  
     [!code-csharp[System.Text.StringBuilder.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/pattern4.cs#15)]
     [!code-vb[System.Text.StringBuilder.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/pattern4.vb#15)]  
  
<a name="Converting"></a>   
## <a name="converting-the-stringbuilder-object-to-a-string"></a><span data-ttu-id="75d49-286">StringBuilder 개체를 문자열로 변환</span><span class="sxs-lookup"><span data-stu-id="75d49-286">Converting the StringBuilder object to a string</span></span>  
 <span data-ttu-id="75d49-287"><xref:System.Text.StringBuilder> 개체에 표시되는 문자열을 <xref:System.String> 매개 변수를 가진 메서드에 전달하거나 사용자 인터페이스에 표시하려면 <xref:System.Text.StringBuilder> 개체를 <xref:System.String> 개체로 변환해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-287">You must convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object before you can pass the string represented by the <xref:System.Text.StringBuilder> object to a method that has a <xref:System.String> parameter or display it in the user interface.</span></span> <span data-ttu-id="75d49-288">호출 하 여이 변환을 수행 합니다 <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-288">You perform this conversion by calling the <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="75d49-289">예시의 경우 호출 하는 이전 예제를 참조 하세요. 합니다 <xref:System.Text.StringBuilder.ToString%2A> 변환 하는 메서드를 <xref:System.Text.StringBuilder> 정규식 메서드에 전달할 수 있도록 하는 문자열 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-289">For an illustration, see the previous example, which calls the <xref:System.Text.StringBuilder.ToString%2A> method to convert a <xref:System.Text.StringBuilder> object to a string so that it can be passed to a regular expression method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-290">다음 예제에서는 대부분의 정의한 메서드를 호출 하는 방법을 보여 줍니다는 <xref:System.Text.StringBuilder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-290">The following example shows how to call many of the methods defined by the <xref:System.Text.StringBuilder> class.</span></span>  
  
 [!code-cpp[StringBuilder#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringBuilder/cpp/StringBuilder.cpp#1)]
 [!code-csharp[StringBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringBuilder/CS/StringBuilder.cs#1)]
 [!code-vb[StringBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringBuilder/VB/StringBuilder.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage"><para><span data-ttu-id="75d49-291">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-291">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-292">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-292">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="75d49-293"><see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-293">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="75d49-294"><see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-294">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-295">이 인스턴스의 문자열 값 설정할지 <xref:System.String.Empty?displayProperty=nameWithType>, 용량 구현 별 기본 용량으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-295">The string value of this instance is set to <xref:System.String.Empty?displayProperty=nameWithType>, and the capacity is set to the implementation-specific default capacity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-296">다음 예제에서는 호출 하는 방법에 설명 합니다 <xref:System.Text.StringBuilder.%23ctor%2A> 매개 변수가 없는 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-296">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with no parameters.</span></span>  
  
 [!code-cpp[System.Text.StringBuilder.Constructors#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#1)]
 [!code-csharp[System.Text.StringBuilder.Constructors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#1)]
 [!code-vb[System.Text.StringBuilder.Constructors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Text.StringBuilder : int -&gt; System.Text.StringBuilder" Usage="new System.Text.StringBuilder capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="75d49-297">이 인스턴스의 제안된 시작 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-297">The suggested starting size of this instance.</span></span></param>
        <summary><span data-ttu-id="75d49-298">지정된 용량을 사용하여 <see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-298">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class using the specified capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-299">`capacity` 매개 변수는 현재 인스턴스에 의해 할당 된 메모리에 저장할 수 있는 문자의 최대 수를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-299">The `capacity` parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</span></span> <span data-ttu-id="75d49-300">해당 값이 할당 된 <xref:System.Text.StringBuilder.Capacity%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-300">Its value is assigned to the <xref:System.Text.StringBuilder.Capacity%2A> property.</span></span> <span data-ttu-id="75d49-301">현재 인스턴스에 저장 될 문자 수가이 초과 하는 경우 `capacity` 값을 <xref:System.Text.StringBuilder> 개체를 저장할 추가 메모리를 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-301">If the number of characters to be stored in the current instance exceeds this `capacity` value, the <xref:System.Text.StringBuilder> object allocates additional memory to store them.</span></span>  
  
 <span data-ttu-id="75d49-302">이 인스턴스의 문자열 값 설정할지 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-302">The string value of this instance is set to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="75d49-303">경우 `capacity` 이 0 인 구현 별 기본 용량을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-303">If `capacity` is zero, the implementation-specific default capacity is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-304">다음 예제에서는 호출 하는 방법에 설명 합니다 <xref:System.Text.StringBuilder.%23ctor%2A> 생성자는 지정 된 용량을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-304">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with a specified capacity.</span></span>  
  
 [!code-cpp[System.Text.StringBuilder.Constructors#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#3)]
 [!code-csharp[System.Text.StringBuilder.Constructors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#3)]
 [!code-vb[System.Text.StringBuilder.Constructors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-305"><paramref name="capacity" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="75d49-305"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Text.StringBuilder.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Text.StringBuilder : string -&gt; System.Text.StringBuilder" Usage="new System.Text.StringBuilder value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-306">인스턴스 값을 초기화하는 데 사용되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-306">The string used to initialize the value of the instance.</span></span> <span data-ttu-id="75d49-307"><paramref name="value" />가 <see langword="null" />이면 새 <see cref="T:System.Text.StringBuilder" />에 빈 문자열(<see cref="F:System.String.Empty" />)이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-307">If <paramref name="value" /> is <see langword="null" />, the new <see cref="T:System.Text.StringBuilder" /> will contain the empty string (that is, it contains <see cref="F:System.String.Empty" />).</span></span></param>
        <summary><span data-ttu-id="75d49-308">지정된 문자열을 사용하여 <see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-308">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class using the specified string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-309">`value`가 `null`이면 새 <xref:System.Text.StringBuilder>에 빈 문자열(<xref:System.String.Empty>)이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-309">If `value` is `null`, the new <xref:System.Text.StringBuilder> will contain the empty string (that is, it contains <xref:System.String.Empty>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-310">다음 예제에서는 호출 하는 방법에 설명 합니다 <xref:System.Text.StringBuilder.%23ctor%2A> 지정된 된 문자열을 사용 하 여 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-310">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with the specified string.</span></span>  
  
 [!code-cpp[System.Text.StringBuilder.Constructors#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#4)]
 [!code-csharp[System.Text.StringBuilder.Constructors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#4)]
 [!code-vb[System.Text.StringBuilder.Constructors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder (int capacity, int maxCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, int32 maxCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, maxCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder(int capacity, int maxCapacity);" />
      <MemberSignature Language="F#" Value="new System.Text.StringBuilder : int * int -&gt; System.Text.StringBuilder" Usage="new System.Text.StringBuilder (capacity, maxCapacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="maxCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="75d49-311"><see cref="T:System.Text.StringBuilder" />의 제안된 시작 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-311">The suggested starting size of the <see cref="T:System.Text.StringBuilder" />.</span></span></param>
        <param name="maxCapacity"><span data-ttu-id="75d49-312">현재 문자열에 포함할 수 있는 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-312">The maximum number of characters the current string can contain.</span></span></param>
        <summary><span data-ttu-id="75d49-313">지정된 용량으로 시작되어 지정된 최대 용량까지 커질 수 있는 <see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-313">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class that starts with a specified capacity and can grow to a specified maximum.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-314">`capacity` 매개 변수는 현재 인스턴스에 의해 할당 된 메모리에 저장할 수 있는 문자의 최대 수를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-314">The `capacity` parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</span></span> <span data-ttu-id="75d49-315">해당 값이 할당 된 <xref:System.Text.StringBuilder.Capacity%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-315">Its value is assigned to the <xref:System.Text.StringBuilder.Capacity%2A> property.</span></span> <span data-ttu-id="75d49-316">현재 인스턴스에 저장 될 문자 수가이 초과 하는 경우 `capacity` 값을 <xref:System.Text.StringBuilder> 개체를 저장할 추가 메모리를 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-316">If the number of characters to be stored in the current instance exceeds this `capacity` value, the <xref:System.Text.StringBuilder> object allocates additional memory to store them.</span></span>  
  
 <span data-ttu-id="75d49-317">경우 `capacity` 이 0 인 구현 별 기본 용량을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-317">If `capacity` is zero, the implementation-specific default capacity is used.</span></span>  
  
 <span data-ttu-id="75d49-318">`maxCapacity` 속성은 현재 인스턴스가 보유할 수 있는 문자의 최대 수를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-318">The `maxCapacity` property defines the maximum number of characters that the current instance can hold.</span></span> <span data-ttu-id="75d49-319">해당 값이 할당 된 <xref:System.Text.StringBuilder.MaxCapacity%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-319">Its value is assigned to the <xref:System.Text.StringBuilder.MaxCapacity%2A> property.</span></span> <span data-ttu-id="75d49-320">현재 인스턴스에 저장 될 문자 수가이 초과 하는 경우 `maxCapacity` 값을 <xref:System.Text.StringBuilder> 개체 추가 메모리를 할당 하지 않습니다 하지만 대신 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-320">If the number of characters to be stored in the current instance exceeds this `maxCapacity` value, the <xref:System.Text.StringBuilder> object does not allocate additional memory, but instead throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-321">다음 예제에서는 호출 하는 방법에 설명 합니다 <xref:System.Text.StringBuilder.%23ctor%2A> 지정 된 용량 및 최대 용량을 사용 하 여 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-321">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with a specified capacity and maximum capacity.</span></span>  
  
 [!code-cpp[System.Text.StringBuilder.Constructors#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#5)]
 [!code-csharp[System.Text.StringBuilder.Constructors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#5)]
 [!code-vb[System.Text.StringBuilder.Constructors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-322"><paramref name="maxCapacity" />가 1보다 작거나, <paramref name="capacity" />가 0보다 작거나, <paramref name="capacity" />가 <paramref name="maxCapacity" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-322"><paramref name="maxCapacity" /> is less than one, <paramref name="capacity" /> is less than zero, or <paramref name="capacity" /> is greater than <paramref name="maxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-323">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-323">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-324">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-324">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="P:System.Text.StringBuilder.Capacity" />
        <altmember cref="P:System.Text.StringBuilder.MaxCapacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder (string value, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder(System::String ^ value, int capacity);" />
      <MemberSignature Language="F#" Value="new System.Text.StringBuilder : string * int -&gt; System.Text.StringBuilder" Usage="new System.Text.StringBuilder (value, capacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-325">인스턴스 값을 초기화하는 데 사용되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-325">The string used to initialize the value of the instance.</span></span> <span data-ttu-id="75d49-326"><paramref name="value" />가 <see langword="null" />이면 새 <see cref="T:System.Text.StringBuilder" />에 빈 문자열(<see cref="F:System.String.Empty" />)이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-326">If <paramref name="value" /> is <see langword="null" />, the new <see cref="T:System.Text.StringBuilder" /> will contain the empty string (that is, it contains <see cref="F:System.String.Empty" />).</span></span></param>
        <param name="capacity"><span data-ttu-id="75d49-327"><see cref="T:System.Text.StringBuilder" />의 제안된 시작 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-327">The suggested starting size of the <see cref="T:System.Text.StringBuilder" />.</span></span></param>
        <summary><span data-ttu-id="75d49-328">지정된 문자열과 용량을 사용하여 <see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-328">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class using the specified string and capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-329">`capacity` 매개 변수는 현재 인스턴스에 의해 할당 된 메모리에 저장할 수 있는 문자의 최대 수를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-329">The `capacity` parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</span></span> <span data-ttu-id="75d49-330">해당 값이 할당 된 <xref:System.Text.StringBuilder.Capacity%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-330">Its value is assigned to the <xref:System.Text.StringBuilder.Capacity%2A> property.</span></span> <span data-ttu-id="75d49-331">현재 인스턴스에 저장 될 문자 수가이 초과 하는 경우 `capacity` 값을 <xref:System.Text.StringBuilder> 개체를 저장할 추가 메모리를 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-331">If the number of characters to be stored in the current instance exceeds this `capacity` value, the <xref:System.Text.StringBuilder> object allocates additional memory to store them.</span></span>  
  
 <span data-ttu-id="75d49-332">경우 `capacity` 이 0 인 구현 별 기본 용량을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-332">If `capacity` is zero, the implementation-specific default capacity is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-333">다음 예제에서는 호출 하는 방법에 설명 합니다 <xref:System.Text.StringBuilder.%23ctor%2A> 초기 문자열과 지정 된 용량을 사용 하 여 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-333">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with an initial string and a specified capacity.</span></span>  
  
 [!code-cpp[System.Text.StringBuilder.Constructors#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#7)]
 [!code-csharp[System.Text.StringBuilder.Constructors#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#7)]
 [!code-vb[System.Text.StringBuilder.Constructors#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-334"><paramref name="capacity" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="75d49-334"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Text.StringBuilder.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder (string value, int startIndex, int length, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value, int32 startIndex, int32 length, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String, startIndex As Integer, length As Integer, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder(System::String ^ value, int startIndex, int length, int capacity);" />
      <MemberSignature Language="F#" Value="new System.Text.StringBuilder : string * int * int * int -&gt; System.Text.StringBuilder" Usage="new System.Text.StringBuilder (value, startIndex, length, capacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-335">이 인스턴스 값을 초기화하는 데 사용된 부분 문자열이 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-335">The string that contains the substring used to initialize the value of this instance.</span></span> <span data-ttu-id="75d49-336"><paramref name="value" />가 <see langword="null" />이면 새 <see cref="T:System.Text.StringBuilder" />에 빈 문자열(<see cref="F:System.String.Empty" />)이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-336">If <paramref name="value" /> is <see langword="null" />, the new <see cref="T:System.Text.StringBuilder" /> will contain the empty string (that is, it contains <see cref="F:System.String.Empty" />).</span></span></param>
        <param name="startIndex"><span data-ttu-id="75d49-337"><paramref name="value" /> 내에서 부분 문자열이 시작되는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-337">The position within <paramref name="value" /> where the substring begins.</span></span></param>
        <param name="length"><span data-ttu-id="75d49-338">부분 문자열에 있는 문자의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-338">The number of characters in the substring.</span></span></param>
        <param name="capacity"><span data-ttu-id="75d49-339"><see cref="T:System.Text.StringBuilder" />의 제안된 시작 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-339">The suggested starting size of the <see cref="T:System.Text.StringBuilder" />.</span></span></param>
        <summary><span data-ttu-id="75d49-340">지정된 부분 문자열과 용량을 사용하여 <see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-340">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class from the specified substring and capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-341">`capacity` 매개 변수는 현재 인스턴스에 의해 할당 된 메모리에 저장할 수 있는 문자의 최대 수를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-341">The `capacity` parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</span></span> <span data-ttu-id="75d49-342">해당 값이 할당 된 <xref:System.Text.StringBuilder.Capacity%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-342">Its value is assigned to the <xref:System.Text.StringBuilder.Capacity%2A> property.</span></span> <span data-ttu-id="75d49-343">현재 인스턴스에 저장 될 문자 수가이 초과 하는 경우 `capacity` 값을 <xref:System.Text.StringBuilder> 개체를 저장할 추가 메모리를 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-343">If the number of characters to be stored in the current instance exceeds this `capacity` value, the <xref:System.Text.StringBuilder> object allocates additional memory to store them.</span></span>  
  
 <span data-ttu-id="75d49-344">경우 `capacity` 이 0 인 구현 별 기본 용량을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-344">If `capacity` is zero, the implementation-specific default capacity is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-345">다음 예제에서는 호출 하는 방법에 설명 합니다 <xref:System.Text.StringBuilder.%23ctor%2A> 지정된 된 문자열을 사용 하 여 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-345">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with the specified string.</span></span>  
  
 [!code-cpp[System.Text.StringBuilder.Constructors#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#6)]
 [!code-csharp[System.Text.StringBuilder.Constructors#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#6)]
 [!code-vb[System.Text.StringBuilder.Constructors#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-346"><paramref name="capacity" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="75d49-346"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="75d49-347">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-347">-or-</span></span> 
 <span data-ttu-id="75d49-348"><paramref name="startIndex" />+<paramref name="length" />가 <paramref name="value" /> 내의 위치가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-348"><paramref name="startIndex" /> plus <paramref name="length" /> is not a position within <paramref name="value" />.</span></span></exception>
        <altmember cref="P:System.Text.StringBuilder.Capacity" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="75d49-349">지정된 개체의 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-349">Appends the string representation of a specified object to this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Boolean) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(bool value);" />
      <MemberSignature Language="F#" Value="member this.Append : bool -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-350">추가할 Boolean 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-350">The Boolean value to append.</span></span></param>
        <summary><span data-ttu-id="75d49-351">지정된 부울 값의 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-351">Appends the string representation of a specified Boolean value to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-352">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-352">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-353"><xref:System.Text.StringBuilder.Append%28System.Boolean%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-353">The <xref:System.Text.StringBuilder.Append%28System.Boolean%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-354">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-354">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#2)]
 [!code-vb[System.Text.StringBuilder.Append#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#2)]  
  
 <span data-ttu-id="75d49-355">합니다 <xref:System.Text.StringBuilder.Append%28System.Boolean%29> 메서드 호출을 <xref:System.Boolean.ToString?displayProperty=nameWithType> 의 문자열 표현을 가져오는 방법 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-355">The <xref:System.Text.StringBuilder.Append%28System.Boolean%29> method calls the <xref:System.Boolean.ToString?displayProperty=nameWithType> method to get the string representation of `value`.</span></span> <span data-ttu-id="75d49-356">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-356">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-357">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-357">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-358">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-358">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-359">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-359">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Byte) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::Byte value);" />
      <MemberSignature Language="F#" Value="member this.Append : byte -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-360">추가할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-360">The value to append.</span></span></param>
        <summary><span data-ttu-id="75d49-361">지정된 8비트 부호 없는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-361">Appends the string representation of a specified 8-bit unsigned integer to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-362">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-362">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-363"><xref:System.Text.StringBuilder.Append%28System.Byte%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-363">The <xref:System.Text.StringBuilder.Append%28System.Byte%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-364">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-364">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#3)]
 [!code-vb[System.Text.StringBuilder.Append#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#3)]  
  
 <span data-ttu-id="75d49-365">합니다 <xref:System.Text.StringBuilder.Append%28System.Byte%29> 메서드 호출을 <xref:System.Byte.ToString%28System.IFormatProvider%29> 의 문자열 표현을 가져오는 방법 `value` 현재 문화권에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-365">The <xref:System.Text.StringBuilder.Append%28System.Byte%29> method calls the <xref:System.Byte.ToString%28System.IFormatProvider%29> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="75d49-366">서식을 제어 하려면 `value`를 호출 합니다 <xref:System.Text.StringBuilder.AppendFormat%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-366">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="75d49-367">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-367">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-368">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-368">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-369">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-369">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-370">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-370">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Char) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(char value);" />
      <MemberSignature Language="F#" Value="member this.Append : char -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-371">추가할 UTF-16 인코딩된 코드 단위입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-371">The UTF-16-encoded code unit to append.</span></span></param>
        <summary><span data-ttu-id="75d49-372">지정된 <see cref="T:System.Char" /> 개체의 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-372">Appends the string representation of a specified <see cref="T:System.Char" /> object to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-373">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-373">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-374"><xref:System.Text.StringBuilder.Append%28System.Char%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-374">The <xref:System.Text.StringBuilder.Append%28System.Char%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-375">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-375">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#4)]
 [!code-vb[System.Text.StringBuilder.Append#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#4)]  
  
 <span data-ttu-id="75d49-376">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-376">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-377">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-377">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-378">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-378">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-379">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-379">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (char[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(char[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Char()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(cli::array &lt;char&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : char[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-380">추가할 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-380">The array of characters to append.</span></span></param>
        <summary><span data-ttu-id="75d49-381">지정된 배열의 유니코드 문자에 대한 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-381">Appends the string representation of the Unicode characters in a specified array to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-382">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-382">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-383">이 메서드에 나타나는 순서에서 현재 인스턴스를 지정 된 배열의 모든 문자를 추가 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-383">This method appends all the characters in the specified array to the current instance in the same order as they appear in `value`.</span></span> <span data-ttu-id="75d49-384">하는 경우 `value` 는 `null`, 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-384">If `value` is `null`, no changes are made.</span></span>  
  
 <span data-ttu-id="75d49-385"><xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-385">The <xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-386">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-386">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#6)]
 [!code-vb[System.Text.StringBuilder.Append#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#6)]  
  
 <span data-ttu-id="75d49-387">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-387">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-388">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-388">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-389">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-389">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-390">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-390">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Decimal) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.Append : decimal -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-391">추가할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-391">The value to append.</span></span></param>
        <summary><span data-ttu-id="75d49-392">지정된 10진수의 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-392">Appends the string representation of a specified decimal number to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-393">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-393">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-394"><xref:System.Text.StringBuilder.Append%28System.Decimal%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-394">The <xref:System.Text.StringBuilder.Append%28System.Decimal%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-395">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-395">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#8)]
 [!code-vb[System.Text.StringBuilder.Append#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#8)]  
  
 <span data-ttu-id="75d49-396">합니다 <xref:System.Text.StringBuilder.Append%28System.Decimal%29> 메서드 호출을 <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 의 문자열 표현을 가져오는 방법 `value` 현재 문화권에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-396">The <xref:System.Text.StringBuilder.Append%28System.Decimal%29> method calls the <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="75d49-397">서식을 제어 하려면 `value`를 호출 합니다 <xref:System.Text.StringBuilder.AppendFormat%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-397">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="75d49-398">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-398">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-399">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-399">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-400">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-400">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-401">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-401">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Double) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(double value);" />
      <MemberSignature Language="F#" Value="member this.Append : double -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-402">추가할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-402">The value to append.</span></span></param>
        <summary><span data-ttu-id="75d49-403">지정된 배정밀도 부동 소수점 숫자의 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-403">Appends the string representation of a specified double-precision floating-point number to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-404">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-404">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-405"><xref:System.Text.StringBuilder.Append%28System.Double%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-405">The <xref:System.Text.StringBuilder.Append%28System.Double%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-406">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-406">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#9)]
 [!code-vb[System.Text.StringBuilder.Append#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#9)]  
  
 <span data-ttu-id="75d49-407">합니다 <xref:System.Text.StringBuilder.Append%28System.Double%29> 메서드 호출을 <xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 의 문자열 표현을 가져오는 방법 `value` 현재 문화권에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-407">The <xref:System.Text.StringBuilder.Append%28System.Double%29> method calls the <xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="75d49-408">서식을 제어 하려면 `value`를 호출 합니다 <xref:System.Text.StringBuilder.AppendFormat%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-408">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="75d49-409">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-409">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-410">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-410">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-411">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-411">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-412">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-412">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Short) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(short value);" />
      <MemberSignature Language="F#" Value="member this.Append : int16 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-413">추가할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-413">The value to append.</span></span></param>
        <summary><span data-ttu-id="75d49-414">지정된 16비트 부호 있는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-414">Appends the string representation of a specified 16-bit signed integer to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-415">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-415">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-416"><xref:System.Text.StringBuilder.Append%28System.Int16%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-416">The <xref:System.Text.StringBuilder.Append%28System.Int16%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-417">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-417">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#10)]
 [!code-vb[System.Text.StringBuilder.Append#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#10)]  
  
 <span data-ttu-id="75d49-418">합니다 <xref:System.Text.StringBuilder.Append%28System.Int16%29> 메서드 호출을 <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 의 문자열 표현을 가져오는 방법 `value` 현재 문화권에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-418">The <xref:System.Text.StringBuilder.Append%28System.Int16%29> method calls the <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="75d49-419">서식을 제어 하려면 `value`를 호출 합니다 <xref:System.Text.StringBuilder.AppendFormat%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-419">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="75d49-420">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-420">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-421">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-421">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-422">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-422">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-423">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-423">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(int value);" />
      <MemberSignature Language="F#" Value="member this.Append : int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-424">추가할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-424">The value to append.</span></span></param>
        <summary><span data-ttu-id="75d49-425">지정된 32비트 부호 있는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-425">Appends the string representation of a specified 32-bit signed integer to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-426">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-426">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-427"><xref:System.Text.StringBuilder.Append%28System.Int32%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-427">The <xref:System.Text.StringBuilder.Append%28System.Int32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-428">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-428">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#11)]
 [!code-vb[System.Text.StringBuilder.Append#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#11)]  
  
 <span data-ttu-id="75d49-429">합니다 <xref:System.Text.StringBuilder.Append%28System.Int32%29> 메서드 호출을 <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 의 문자열 표현을 가져오는 방법 `value` 현재 문화권에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-429">The <xref:System.Text.StringBuilder.Append%28System.Int32%29> method calls the <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="75d49-430">서식을 제어 하려면 `value`를 호출 합니다 <xref:System.Text.StringBuilder.AppendFormat%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-430">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="75d49-431">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-431">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-432">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-432">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-433">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-433">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-434">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-434">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Long) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(long value);" />
      <MemberSignature Language="F#" Value="member this.Append : int64 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-435">추가할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-435">The value to append.</span></span></param>
        <summary><span data-ttu-id="75d49-436">지정된 64비트 부호 있는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-436">Appends the string representation of a specified 64-bit signed integer to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-437">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-437">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-438"><xref:System.Text.StringBuilder.Append%28System.Int64%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-438">The <xref:System.Text.StringBuilder.Append%28System.Int64%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-439">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-439">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#12)]
 [!code-vb[System.Text.StringBuilder.Append#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#12)]  
  
 <span data-ttu-id="75d49-440"><xref:System.Text.StringBuilder.Append%28System.Int64%29> 메서드 호출을 <xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 의 문자열 표현을 가져올 `value` 현재 문화권에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-440">The <xref:System.Text.StringBuilder.Append%28System.Int64%29> method calls the <xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="75d49-441">서식을 제어 하려면 `value`를 호출 합니다 <xref:System.Text.StringBuilder.AppendFormat%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-441">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="75d49-442">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-442">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-443">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-443">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-444">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-444">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-445">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-445">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-446">추가할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-446">The object to append.</span></span></param>
        <summary><span data-ttu-id="75d49-447">지정된 개체의 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-447">Appends the string representation of a specified object to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-448">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-448">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-449"><xref:System.Text.StringBuilder.Append%28System.Object%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-449">The <xref:System.Text.StringBuilder.Append%28System.Object%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-450">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-450">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span> <span data-ttu-id="75d49-451">정의 `Dog` 클래스를 만들고는 `Dog` 개체를 세 번 호출 하는 <xref:System.Text.StringBuilder.Append%2A> dog의 이름 및 종류를 포함 하는 문자열을 만드는 방법.</span><span class="sxs-lookup"><span data-stu-id="75d49-451">It defines a `Dog` class, creates a `Dog` object, and makes three calls to the <xref:System.Text.StringBuilder.Append%2A> method to create a string that contains the dog's name and breed.</span></span>  
  
 [!code-csharp[System.Text.Stringbuilder.Append#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append4.cs#18)]
 [!code-vb[System.Text.Stringbuilder.Append#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append4.vb#18)]  
  
 <span data-ttu-id="75d49-452">합니다 <xref:System.Text.StringBuilder.Append%28System.Object%29> 메서드 호출을 <xref:System.Object.ToString%2A?displayProperty=nameWithType> 의 문자열 표현을 가져오는 방법 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-452">The <xref:System.Text.StringBuilder.Append%28System.Object%29> method calls the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method to get the string representation of `value`.</span></span> <span data-ttu-id="75d49-453">경우 `value` 됩니다 `null`를 변경 되지 않습니다는 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-453">If `value` is `null`, no changes are made to the <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="75d49-454">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-454">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-455">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-455">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-456">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-456">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-457">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-457">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (ReadOnlyMemory&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(valuetype System.ReadOnlyMemory`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As ReadOnlyMemory(Of Char)) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(ReadOnlyMemory&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.Append : ReadOnlyMemory&lt;char&gt; -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlyMemory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As ReadOnlySpan(Of Char)) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.Append : ReadOnlySpan&lt;char&gt; -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As SByte) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::SByte value);" />
      <MemberSignature Language="F#" Value="member this.Append : sbyte -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-458">추가할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-458">The value to append.</span></span></param>
        <summary><span data-ttu-id="75d49-459">지정된 8비트 부호 있는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-459">Appends the string representation of a specified 8-bit signed integer to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-460">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-460">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-461"><xref:System.Text.StringBuilder.Append%28System.SByte%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-461">The <xref:System.Text.StringBuilder.Append%28System.SByte%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-462">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-462">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#13)]
 [!code-vb[System.Text.StringBuilder.Append#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#13)]  
  
 <span data-ttu-id="75d49-463">합니다 <xref:System.Text.StringBuilder.Append%28System.SByte%29> 메서드 호출을 <xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 의 문자열 표현을 가져오는 방법 `value` 현재 문화권에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-463">The <xref:System.Text.StringBuilder.Append%28System.SByte%29> method calls the <xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method  to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="75d49-464">서식을 제어 하려면 `value`를 호출 합니다 <xref:System.Text.StringBuilder.AppendFormat%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-464">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="75d49-465">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-465">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-466">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-466">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-467">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-467">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-468">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-468">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Single) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(float value);" />
      <MemberSignature Language="F#" Value="member this.Append : single -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-469">추가할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-469">The value to append.</span></span></param>
        <summary><span data-ttu-id="75d49-470">지정된 단정밀도 부동 소수점 숫자의 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-470">Appends the string representation of a specified single-precision floating-point number to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-471">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-471">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-472"><xref:System.Text.StringBuilder.Append%28System.Single%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-472">The <xref:System.Text.StringBuilder.Append%28System.Single%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-473">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-473">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#14)]
 [!code-vb[System.Text.StringBuilder.Append#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#14)]  
  
 <span data-ttu-id="75d49-474">합니다 <xref:System.Text.StringBuilder.Append%28System.Single%29> 메서드 호출을 <xref:System.Single.ToString%2A?displayProperty=nameWithType> 의 문자열 표현을 가져오는 방법 `value` 현재 문화권에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-474">The <xref:System.Text.StringBuilder.Append%28System.Single%29> method calls the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="75d49-475">서식을 제어 하려면 `value`를 호출 합니다 <xref:System.Text.StringBuilder.AppendFormat%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-475">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="75d49-476">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-476">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-477">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-477">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-478">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-478">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-479">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-479">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As String) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : string -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-480">추가할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-480">The string to append.</span></span></param>
        <summary><span data-ttu-id="75d49-481">지정된 문자열의 복사본을 이 인스턴스의 끝에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-481">Appends a copy of the specified string to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-482">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-482">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-483"><xref:System.Text.StringBuilder.Append%28System.String%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-483">The <xref:System.Text.StringBuilder.Append%28System.String%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-484">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-484">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#2)]
 [!code-vb[System.Text.StringBuilder.Append#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#2)]  
  
 <span data-ttu-id="75d49-485">하는 경우 `value` 는 `null`, 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-485">If `value` is `null`, no changes are made.</span></span>  
  
 <span data-ttu-id="75d49-486">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-486">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-487">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-487">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-488">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-488">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-489">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-489">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (System.Text.StringBuilder value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(class System.Text.StringBuilder value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As StringBuilder) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::Text::StringBuilder ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Text.StringBuilder -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As UShort) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="member this.Append : uint16 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-490">추가할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-490">The value to append.</span></span></param>
        <summary><span data-ttu-id="75d49-491">지정된 16비트 부호 없는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-491">Appends the string representation of a specified 16-bit unsigned integer to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-492">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-492">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-493"><xref:System.Text.StringBuilder.Append%28System.UInt16%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-493">The <xref:System.Text.StringBuilder.Append%28System.UInt16%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-494">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-494">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#15)]
 [!code-vb[System.Text.StringBuilder.Append#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#15)]  
  
 <span data-ttu-id="75d49-495">합니다 <xref:System.Text.StringBuilder.Append%28System.UInt16%29> 메서드 호출을 <xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 의 문자열 표현을 가져오는 방법 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-495">The <xref:System.Text.StringBuilder.Append%28System.UInt16%29> method calls the <xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value`.</span></span> <span data-ttu-id="75d49-496">서식을 제어 하려면 `value`를 호출 합니다 <xref:System.Text.StringBuilder.AppendFormat%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-496">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="75d49-497">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-497">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-498">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-498">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-499">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-499">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-500">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-500">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As UInteger) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.Append : uint32 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-501">추가할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-501">The value to append.</span></span></param>
        <summary><span data-ttu-id="75d49-502">지정된 32비트 부호 없는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-502">Appends the string representation of a specified 32-bit unsigned integer to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-503">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-503">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-504"><xref:System.Text.StringBuilder.Append%28System.UInt32%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-504">The <xref:System.Text.StringBuilder.Append%28System.UInt32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-505">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-505">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#16)]
 [!code-vb[System.Text.StringBuilder.Append#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#16)]  
  
 <span data-ttu-id="75d49-506">합니다 <xref:System.Text.StringBuilder.Append%28System.UInt32%29> 호출을 <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> 의 문자열 표현을 가져오는 방법 `value` 현재 문화권에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-506">The <xref:System.Text.StringBuilder.Append%28System.UInt32%29> calls the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="75d49-507">서식을 제어 하려면 `value`를 호출 합니다 <xref:System.Text.StringBuilder.AppendFormat%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-507">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="75d49-508">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-508">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-509">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-509">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-510">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-510">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-511">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-511">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As ULong) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.Append : uint64 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-512">추가할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-512">The value to append.</span></span></param>
        <summary><span data-ttu-id="75d49-513">지정된 64비트 부호 없는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-513">Appends the string representation of a specified 64-bit unsigned integer to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-514">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-514">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-515"><xref:System.Text.StringBuilder.Append%28System.UInt64%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-515">The <xref:System.Text.StringBuilder.Append%28System.UInt64%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-516">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-516">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#17)]
 [!code-vb[System.Text.StringBuilder.Append#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#17)]  
  
 <span data-ttu-id="75d49-517">합니다 <xref:System.Text.StringBuilder.Append%28System.UInt64%29> 메서드 호출을 <xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 의 문자열 표현을 가져오는 방법 `value` 현재 문화권에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-517">The <xref:System.Text.StringBuilder.Append%28System.UInt64%29> method calls the <xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="75d49-518">서식을 제어 하려면 `value`를 호출 합니다 <xref:System.Text.StringBuilder.AppendFormat%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-518">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="75d49-519">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-519">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-520">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-520">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-521">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-521">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-522">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-522">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (char value, int repeatCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(char value, int32 repeatCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Char, repeatCount As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(char value, int repeatCount);" />
      <MemberSignature Language="F#" Value="member this.Append : char * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append (value, repeatCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="repeatCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-523">추가할 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-523">The character to append.</span></span></param>
        <param name="repeatCount"><span data-ttu-id="75d49-524"><paramref name="value" />를 추가할 횟수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-524">The number of times to append <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="75d49-525">유니코드 문자에 대한 문자열 표현의 지정된 복사본 수를 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-525">Appends a specified number of copies of the string representation of a Unicode character to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-526">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-526">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-527"><xref:System.Text.StringBuilder.Append%28System.Char%2CSystem.Int32%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-527">The <xref:System.Text.StringBuilder.Append%28System.Char%2CSystem.Int32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-528">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-528">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#5)]
 [!code-vb[System.Text.StringBuilder.Append#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#5)]  
  
 <span data-ttu-id="75d49-529">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-529">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-530"><paramref name="repeatCount" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="75d49-530"><paramref name="repeatCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="75d49-531">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-531">-or-</span></span> 
<span data-ttu-id="75d49-532">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-532">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="75d49-533">메모리가 부족합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-533">Out of memory.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-534">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-534">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-535">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-535">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (char* value, int valueCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(char* value, int32 valueCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(char* value, int valueCount);" />
      <MemberSignature Language="F#" Value="member this.Append : nativeptr&lt;char&gt; * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append (value, valueCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="valueCount" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-536">문자의 배열에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-536">A pointer to an array of characters.</span></span></param>
        <param name="valueCount"><span data-ttu-id="75d49-537">배열에 있는 문자의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-537">The number of characters in the array.</span></span></param>
        <summary><span data-ttu-id="75d49-538">지정된 주소에서 시작하는 유니코드 문자의 배열을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-538">Appends an array of Unicode characters starting at a specified address to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-539">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-539">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-540">이 메서드를 추가 `valueCount` 주소에서 시작 하는 문자 `value` 현재 인스턴스를 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-540">This method appends `valueCount` characters starting at address `value` to the current instance.</span></span>  
  
 <span data-ttu-id="75d49-541"><xref:System.Text.StringBuilder.Append%28System.Char%2A%2CSystem.Int32%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-541">The <xref:System.Text.StringBuilder.Append%28System.Char%2A%2CSystem.Int32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-542">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-542">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="75d49-543">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-543">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)" />
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-544"><paramref name="valueCount" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="75d49-544"><paramref name="valueCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="75d49-545">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-545">-or-</span></span> 
<span data-ttu-id="75d49-546">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-546">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="75d49-547"><paramref name="value" />이(가) null 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-547"><paramref name="value" /> is a null pointer.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-548">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-548">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-549">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-549">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (char[] value, int startIndex, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(char[] value, int32 startIndex, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Char(), startIndex As Integer, charCount As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(cli::array &lt;char&gt; ^ value, int startIndex, int charCount);" />
      <MemberSignature Language="F#" Value="member this.Append : char[] * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append (value, startIndex, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-550">문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-550">A character array.</span></span></param>
        <param name="startIndex"><span data-ttu-id="75d49-551"><paramref name="value" />의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-551">The starting position in <paramref name="value" />.</span></span></param>
        <param name="charCount"><span data-ttu-id="75d49-552">추가할 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-552">The number of characters to append.</span></span></param>
        <summary><span data-ttu-id="75d49-553">유니코드 문자의 지정된 하위 배열에 대한 문자열 표현을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-553">Appends the string representation of a specified subarray of Unicode characters to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-554">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-554">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-555">이 메서드는 지정된 된 범위에 있는 문자의 추가 `value` 현재 인스턴스를 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-555">This method appends the specified range of characters in `value` to the current instance.</span></span> <span data-ttu-id="75d49-556">하는 경우 `value` 됩니다 `null` 및 `startIndex` 및 `count` 둘 다 0, 아니요 변경 내용이 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-556">If `value` is `null` and `startIndex` and `count` are both zero, no changes are made.</span></span>  
  
 <span data-ttu-id="75d49-557"><xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-557">The <xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-558">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-558">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#7)]
 [!code-vb[System.Text.StringBuilder.Append#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#7)]  
  
 <span data-ttu-id="75d49-559">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-559">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75d49-560"><paramref name="value" />가 <see langword="null" />이고 <paramref name="startIndex" /> 및 <paramref name="charCount" />는 0이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-560"><paramref name="value" /> is <see langword="null" />, and <paramref name="startIndex" /> and <paramref name="charCount" /> are not zero.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-561"><paramref name="charCount" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="75d49-561"><paramref name="charCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="75d49-562">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-562">-or-</span></span> 
 <span data-ttu-id="75d49-563"><paramref name="startIndex" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="75d49-563"><paramref name="startIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="75d49-564">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-564">-or-</span></span> 
 <span data-ttu-id="75d49-565"><paramref name="startIndex" /> + <paramref name="charCount" />이 <paramref name="value" />의 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-565"><paramref name="startIndex" /> + <paramref name="charCount" /> is greater than the length of <paramref name="value" />.</span></span>  
  
<span data-ttu-id="75d49-566">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-566">-or-</span></span> 
<span data-ttu-id="75d49-567">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-567">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-568">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-568">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-569">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-569">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As String, startIndex As Integer, count As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.Append : string * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-570">추가할 부분 문자열이 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-570">The string that contains the substring to append.</span></span></param>
        <param name="startIndex"><span data-ttu-id="75d49-571"><paramref name="value" />에 있는 부분 문자열의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-571">The starting position of the substring within <paramref name="value" />.</span></span></param>
        <param name="count"><span data-ttu-id="75d49-572"><paramref name="value" />에서 추가할 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-572">The number of characters in <paramref name="value" /> to append.</span></span></param>
        <summary><span data-ttu-id="75d49-573">지정된 부분 문자열의 복사본을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-573">Appends a copy of a specified substring to this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-574">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-574">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-575">이 메서드는 지정된 된 범위에 있는 문자의 추가 `value` 현재 인스턴스를 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-575">This method appends the specified range of characters in `value` to the current instance.</span></span> <span data-ttu-id="75d49-576">하는 경우 `value` 됩니다 `null` 및 `startIndex` 및 `count` 둘 다 0, 아니요 변경 내용이 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-576">If `value` is `null` and `startIndex` and `count` are both zero, no changes are made.</span></span>  
  
 <span data-ttu-id="75d49-577"><xref:System.Text.StringBuilder.Append%28System.String%2CSystem.Int32%2CSystem.Int32%29> 메서드는이 클래스의 기존 인스턴스를 수정, 새 클래스 인스턴스를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-577">The <xref:System.Text.StringBuilder.Append%28System.String%2CSystem.Int32%2CSystem.Int32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="75d49-578">이 인해에서 호출 하 여 메서드 또는 속성을 기존 참조 및 반환 값을 할당할 필요가 없습니다를 <xref:System.Text.StringBuilder> 개체에 다음 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-578">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#19)]
 [!code-vb[System.Text.StringBuilder.Append#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#19)]  
  
 <span data-ttu-id="75d49-579">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-579">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75d49-580"><paramref name="value" />가 <see langword="null" />이고 <paramref name="startIndex" /> 및 <paramref name="count" />는 0이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-580"><paramref name="value" /> is <see langword="null" />, and <paramref name="startIndex" /> and <paramref name="count" /> are not zero.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-581"><paramref name="count" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-581"><paramref name="count" /> less than zero.</span></span>  
  
<span data-ttu-id="75d49-582">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-582">-or-</span></span> 
 <span data-ttu-id="75d49-583"><paramref name="startIndex" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-583"><paramref name="startIndex" /> less than zero.</span></span>  
  
<span data-ttu-id="75d49-584">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-584">-or-</span></span> 
 <span data-ttu-id="75d49-585"><paramref name="startIndex" /> + <paramref name="count" />이 <paramref name="value" />의 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-585"><paramref name="startIndex" /> + <paramref name="count" /> is greater than the length of <paramref name="value" />.</span></span>  
  
<span data-ttu-id="75d49-586">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-586">-or-</span></span> 
<span data-ttu-id="75d49-587">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-587">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-588">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-588">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-589">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-589">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (System.Text.StringBuilder value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(class System.Text.StringBuilder value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As StringBuilder, startIndex As Integer, count As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::Text::StringBuilder ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Text.StringBuilder * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="startIndex">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendFormat">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="75d49-590">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-590">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="75d49-591">각 서식 항목은 해당 개체 인수의 문자열 표현으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-591">Each format item is replaced by the string representation of a corresponding object argument.</span></span></summary>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="75d49-592">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="75d49-592">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="75d49-593">표준 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-593">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="75d49-594">사용자 지정 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-594">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="75d49-595">표준 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-595">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="75d49-596">사용자 지정 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-596">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="75d49-597">표준 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-597">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="75d49-598">사용자 지정 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-598">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="75d49-599">열거형 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-599">Enumeration Format Strings</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (format As String, arg0 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : string * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="75d49-600">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-600">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="75d49-601">서식을 지정할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-601">An object to format.</span></span></param>
        <summary><span data-ttu-id="75d49-602">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-602">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="75d49-603">각 서식 항목이 단일 인수의 문자열 표현으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-603">Each format item is replaced by the string representation of a single argument.</span></span></summary>
        <returns><span data-ttu-id="75d49-604"><paramref name="format" />이 추가된 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-604">A reference to this instance with <paramref name="format" /> appended.</span></span> <span data-ttu-id="75d49-605"><paramref name="format" />의 각 서식 항목이 <paramref name="arg0" />의 문자열 표현으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-605">Each format item in <paramref name="format" /> is replaced by the string representation of <paramref name="arg0" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-606">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 값 개체의 텍스트 표현으로 변환 하 고 현재 표현을 포함할.NET Framework의 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-606">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="75d49-607">`format` 자세한 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를 서식 항목 이라고 함 또는 매개 변수 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-607">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items.</span></span> <span data-ttu-id="75d49-608">형식 항목의 인덱스 0에 해당 하도록 해야 합니다. `arg0`,이 메서드의 매개 변수 목록에 있는 단일 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-608">The index of the format items must be 0, to correspond to `arg0`, the single object in the parameter list of this method.</span></span> <span data-ttu-id="75d49-609">서식 지정 프로세스는 각 형식 항목의 문자열 표현으로 대체 `arg0`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-609">The formatting process replaces each format item with the string representation of `arg0`.</span></span>  
  
 <span data-ttu-id="75d49-610">형식 항목의 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-610">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="75d49-611">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="75d49-611">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="75d49-612">대괄호 안의 요소는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-612">Elements in square brackets are optional.</span></span> <span data-ttu-id="75d49-613">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-613">The following table describes each element.</span></span>  
  
|<span data-ttu-id="75d49-614">요소</span><span class="sxs-lookup"><span data-stu-id="75d49-614">Element</span></span>|<span data-ttu-id="75d49-615">설명</span><span class="sxs-lookup"><span data-stu-id="75d49-615">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="75d49-616">*index*</span><span class="sxs-lookup"><span data-stu-id="75d49-616">*index*</span></span>|<span data-ttu-id="75d49-617">서식을 지정할 개체의 0부터 시작 위치 매개 변수 목록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-617">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="75d49-618">지정 된 개체가 *인덱스* 됩니다 `null`, 형식 항목으로 바뀝니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-618">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="75d49-619">매개 변수가 없는 경우는 *인덱스* 위치는 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-619">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="75d49-620">*길이*</span><span class="sxs-lookup"><span data-stu-id="75d49-620">,*length*</span></span>|<span data-ttu-id="75d49-621">매개 변수의 문자열 표현에 있는 문자의 최소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-621">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="75d49-622">양수의 매개 변수는 오른쪽에 맞춰집니다. 음수 이면를 왼쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-622">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="75d49-623">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="75d49-623">:*formatString*</span></span>|<span data-ttu-id="75d49-624">매개 변수에서 지원 되는 표준 또는 사용자 지정 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-624">A standard or custom format string that is supported by the parameter.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="75d49-625">날짜 및 시간 값을 사용 하는 표준 및 사용자 지정 형식 문자열을 참조 하세요 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 하 고 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-625">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="75d49-626">숫자 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하세요 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-626">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="75d49-627">열거형과 함께 사용 되는 표준 형식 문자열을 참조 하세요 [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-627">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
 <span data-ttu-id="75d49-628">`arg0` 서식을 지정할 개체를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-628">`arg0` represents the object to be formatted.</span></span> <span data-ttu-id="75d49-629">각 서식 항목 `format` 의 문자열 표현으로 바뀝니다 `arg0`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-629">Each format item in `format` is replaced with the string representation of `arg0`.</span></span> <span data-ttu-id="75d49-630">형식 항목에 포함 된 경우 `formatString` 및 `arg0` 구현 하는 <xref:System.IFormattable> 인터페이스를 다음 `arg0.ToString(formatString, null)` 서식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-630">If the format item includes `formatString` and `arg0` implements the <xref:System.IFormattable> interface, then `arg0.ToString(formatString, null)` defines the formatting.</span></span> <span data-ttu-id="75d49-631">그렇지 않으면 `arg0.ToString()` 서식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-631">Otherwise, `arg0.ToString()` defines the formatting.</span></span>  
  
 <span data-ttu-id="75d49-632">에 할당 된 문자열이 `format` 는 "해 주셔서 {0: # # #} 캔을 저희 자선 기구 음식."</span><span class="sxs-lookup"><span data-stu-id="75d49-632">If the string assigned to `format` is "Thank you for your donation of {0:####} cans of food to our charitable organization."</span></span> <span data-ttu-id="75d49-633">및 `arg0` 정수가 10 이라는 값을 사용 하 여 반환 값이 됩니다 "10 캔을 저희 자선 기구에 기부에 대 한 감사 합니다."</span><span class="sxs-lookup"><span data-stu-id="75d49-633">and `arg0` is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-634">다음 예제는 <xref:System.Text.StringBuilder.AppendFormat%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-634">The following example demonstrates the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.appendformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendformat/CPP/appfmt.cpp#1)]
 [!code-csharp[stringbuilder.appendformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendformat/CS/appfmt.cs#1)]
 [!code-vb[stringbuilder.appendformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendformat/VB/appfmt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75d49-635"><paramref name="format" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-635"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="75d49-636"><paramref name="format" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-636"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="75d49-637">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-637">-or-</span></span> 
<span data-ttu-id="75d49-638">형식 항목의 인덱스는 0(영)보다 작고, 또는 1보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-638">The index of a format item is less than 0 (zero), or greater than or equal to 1.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-639">확장된 문자열의 길이가 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-639">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-640">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-640">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-641">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-641">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="75d49-642">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="75d49-642">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="75d49-643">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="75d49-643">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="75d49-644">표준 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-644">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="75d49-645">사용자 지정 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-645">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="75d49-646">표준 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-646">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="75d49-647">사용자 지정 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-647">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="75d49-648">표준 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-648">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="75d49-649">사용자 지정 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-649">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="75d49-650">열거형 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-650">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (format As String, ParamArray args As Object()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : string * obj[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="75d49-651">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-651">A composite format string.</span></span></param>
        <param name="args"><span data-ttu-id="75d49-652">형식을 지정할 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-652">An array of objects to format.</span></span></param>
        <summary><span data-ttu-id="75d49-653">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-653">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="75d49-654">각 형식 항목은 매개 변수 배열에 있는 해당 인수의 문자열 표현으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-654">Each format item is replaced by the string representation of a corresponding argument in a parameter array.</span></span></summary>
        <returns><span data-ttu-id="75d49-655"><paramref name="format" />이 추가된 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-655">A reference to this instance with <paramref name="format" /> appended.</span></span> <span data-ttu-id="75d49-656"><paramref name="format" />의 각 서식 항목은 해당 개체 인수의 문자열 표현으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-656">Each format item in <paramref name="format" /> is replaced by the string representation of the corresponding object argument.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-657">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 값 개체의 텍스트 표현으로 변환 하 고 현재 표현을 포함할.NET Framework의 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-657">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="75d49-658">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-658">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</span></span> <span data-ttu-id="75d49-659">포맷 프로세스는 해당 개체의 문자열 표현으로 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-659">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>  
  
 <span data-ttu-id="75d49-660">형식 항목의 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-660">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="75d49-661">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="75d49-661">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="75d49-662">대괄호 안의 요소는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-662">Elements in square brackets are optional.</span></span> <span data-ttu-id="75d49-663">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-663">The following table describes each element.</span></span>  
  
|<span data-ttu-id="75d49-664">요소</span><span class="sxs-lookup"><span data-stu-id="75d49-664">Element</span></span>|<span data-ttu-id="75d49-665">설명</span><span class="sxs-lookup"><span data-stu-id="75d49-665">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="75d49-666">*index*</span><span class="sxs-lookup"><span data-stu-id="75d49-666">*index*</span></span>|<span data-ttu-id="75d49-667">서식을 지정할 개체의 0부터 시작 위치 매개 변수 목록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-667">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="75d49-668">지정 된 개체가 *인덱스* 됩니다 `null`, 형식 항목으로 바뀝니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-668">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="75d49-669">매개 변수가 없는 경우는 *인덱스* 위치는 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-669">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="75d49-670">*길이*</span><span class="sxs-lookup"><span data-stu-id="75d49-670">,*length*</span></span>|<span data-ttu-id="75d49-671">매개 변수의 문자열 표현에 있는 문자의 최소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-671">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="75d49-672">양수의 매개 변수는 오른쪽에 맞춰집니다. 음수 이면를 왼쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-672">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="75d49-673">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="75d49-673">:*formatString*</span></span>|<span data-ttu-id="75d49-674">매개 변수에서 지원 되는 표준 또는 사용자 지정 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-674">A standard or custom format string that is supported by the parameter.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="75d49-675">날짜 및 시간 값을 사용 하는 표준 및 사용자 지정 형식 문자열을 참조 하세요 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 하 고 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-675">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="75d49-676">숫자 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하세요 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-676">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="75d49-677">열거형과 함께 사용 되는 표준 형식 문자열을 참조 하세요 [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-677">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
 <span data-ttu-id="75d49-678">`args` 서식을 지정할 개체를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-678">`args` represents the objects to be formatted.</span></span> <span data-ttu-id="75d49-679">각 서식 항목 `format` 의 해당 개체의 문자열 표현으로 바뀝니다 `args`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-679">Each format item in `format` is replaced with the string representation of the corresponding object in `args`.</span></span> <span data-ttu-id="75d49-680">형식 항목에 포함 된 경우 `formatString` 및 해당 개체 `args` 구현 하는 <xref:System.IFormattable> 인터페이스를 다음 `args[index].ToString(formatString, provider)` 서식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-680">If the format item includes `formatString` and the corresponding object in `args` implements the <xref:System.IFormattable> interface, then `args[index].ToString(formatString, provider)` defines the formatting.</span></span> <span data-ttu-id="75d49-681">그렇지 않으면 `args[index].ToString()` 서식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-681">Otherwise, `args[index].ToString()` defines the formatting.</span></span>  
  
 <span data-ttu-id="75d49-682">에 할당 된 문자열이 `format` 는 "해 주셔서 {0: # # #} 캔을 저희 자선 기구 음식."</span><span class="sxs-lookup"><span data-stu-id="75d49-682">If the string assigned to `format` is "Thank you for your donation of {0:####} cans of food to our charitable organization."</span></span> <span data-ttu-id="75d49-683">및 `arg0` 정수가 10 이라는 값을 사용 하 여 반환 값이 됩니다 "10 캔을 저희 자선 기구에 기부에 대 한 감사 합니다."</span><span class="sxs-lookup"><span data-stu-id="75d49-683">and `arg0` is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-684">다음 예제는 <xref:System.Text.StringBuilder.AppendFormat%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-684">The following example demonstrates the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.appendformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendformat/CPP/appfmt.cpp#1)]
 [!code-csharp[stringbuilder.appendformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendformat/CS/appfmt.cs#1)]
 [!code-vb[stringbuilder.appendformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendformat/VB/appfmt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75d49-685"><paramref name="format" /> 또는 <paramref name="args" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="75d49-685"><paramref name="format" /> or <paramref name="args" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="75d49-686"><paramref name="format" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-686"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="75d49-687">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-687">-or-</span></span> 
<span data-ttu-id="75d49-688">형식 항목의 인덱스가 0보다 작거나 <paramref name="args" /> 배열의 길이보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-688">The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="args" /> array.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-689">확장된 문자열의 길이가 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-689">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-690">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-690">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-691">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-691">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="75d49-692">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="75d49-692">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="75d49-693">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="75d49-693">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="75d49-694">표준 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-694">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="75d49-695">사용자 지정 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-695">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="75d49-696">표준 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-696">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="75d49-697">사용자 지정 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-697">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="75d49-698">표준 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-698">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="75d49-699">사용자 지정 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-699">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="75d49-700">열거형 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-700">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (IFormatProvider provider, string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(class System.IFormatProvider provider, string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (provider As IFormatProvider, format As String, arg0 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(IFormatProvider ^ provider, System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : IFormatProvider * string * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (provider, format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="75d49-701">문화권별 서식 지정 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-701">An object that supplies culture-specific formatting information.</span></span></param>
        <param name="format"><span data-ttu-id="75d49-702">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-702">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="75d49-703">형식을 지정할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-703">The object to format.</span></span></param>
        <summary><span data-ttu-id="75d49-704">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-704">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="75d49-705">지정된 형식 공급자를 사용하여 각 서식 항목이 단일 인수의 문자열 표현으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-705">Each format item is replaced by the string representation of a single argument using a specified format provider.</span></span></summary>
        <returns><span data-ttu-id="75d49-706">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-706">A reference to this instance after the append operation has completed.</span></span> <span data-ttu-id="75d49-707">추가 작업 후, 이 인스턴스에는 추가 작업 이전부터 있던 데이터가 포함되고 그 뒤에 형식 사양이 <paramref name="format" />의 문자열 표현으로 바뀐  <paramref name="arg0" />의 복사본이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-707">After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> in which any format specification is replaced by the string representation of <paramref name="arg0" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-708">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 값으로 변환 하기 위해.NET 프레임 워크의 `arg0` 텍스트 표현으로 현재에서 표현을 포함 하 고 <xref:System.Text.StringBuilder> 개체.</span><span class="sxs-lookup"><span data-stu-id="75d49-708">This method uses the  [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of `arg0` to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="75d49-709">`format` 자세한 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를 서식 항목 이라고 함 또는 매개 변수 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-709">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items.</span></span> <span data-ttu-id="75d49-710">이 메서드는 단일 인수를 사용 하 여 인수 목록이 포함 각 서식 항목의 인덱스 (0) 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-710">The index of each format item must be zero (0) since this method includes an argument list with a single argument.</span></span> <span data-ttu-id="75d49-711">서식 지정 프로세스는 각 형식 항목의 문자열 표현으로 대체 `arg0`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-711">The formatting process replaces each format item with the string representation of `arg0`.</span></span>  
  
 <span data-ttu-id="75d49-712">형식 항목의 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-712">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="75d49-713">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="75d49-713">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="75d49-714">대괄호 안의 요소는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-714">Elements in square brackets are optional.</span></span> <span data-ttu-id="75d49-715">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-715">The following table describes each element.</span></span>  
  
|<span data-ttu-id="75d49-716">요소</span><span class="sxs-lookup"><span data-stu-id="75d49-716">Element</span></span>|<span data-ttu-id="75d49-717">설명</span><span class="sxs-lookup"><span data-stu-id="75d49-717">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="75d49-718">*index*</span><span class="sxs-lookup"><span data-stu-id="75d49-718">*index*</span></span>|<span data-ttu-id="75d49-719">서식을 지정할 개체의 0부터 시작 위치 매개 변수 목록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-719">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="75d49-720">지정 된 개체가 *인덱스* 됩니다 `null`, 형식 항목으로 바뀝니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-720">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="75d49-721">이 경우 이후 합니다 <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29> 메서드 인수 목록의 값에 대 한 단일 인수 *인덱스* 항상 0 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-721">In this case, since the <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29> method has a single argument in the argument list, the value of *index* must always be 0.</span></span> <span data-ttu-id="75d49-722">그렇지 않을 경우는 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-722">If it is not, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="75d49-723">*길이*</span><span class="sxs-lookup"><span data-stu-id="75d49-723">,*length*</span></span>|<span data-ttu-id="75d49-724">매개 변수의 문자열 표현에 있는 문자의 최소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-724">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="75d49-725">양수의 매개 변수는 오른쪽에 맞춰집니다. 음수 이면를 왼쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-725">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="75d49-726">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="75d49-726">:*formatString*</span></span>|<span data-ttu-id="75d49-727">매개 변수에서 지원 되는 표준 또는 사용자 지정 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-727">A standard or custom format string that is supported by the parameter.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="75d49-728">날짜 및 시간 값을 사용 하는 표준 및 사용자 지정 형식 문자열을 참조 하세요 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 하 고 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-728">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="75d49-729">숫자 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하세요 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-729">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="75d49-730">열거형과 함께 사용 되는 표준 형식 문자열을 참조 하세요 [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-730">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
 <span data-ttu-id="75d49-731">합니다 `provider` 매개 변수 지정를 <xref:System.IFormatProvider> 개체에 대 한 서식 지정 정보를 제공할 수 있는 구현 `args`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-731">The `provider` parameter specifies an <xref:System.IFormatProvider> implementation that can provide formatting information for the objects in `args`.</span></span> <span data-ttu-id="75d49-732">`provider`는 다음과 같을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-732">`provider` can be any of the following:</span></span>  
  
-   <span data-ttu-id="75d49-733"><xref:System.Globalization.CultureInfo> culture 별 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-733">A <xref:System.Globalization.CultureInfo> object that provides culture-specific formatting information.</span></span>  
  
-   <span data-ttu-id="75d49-734">A <xref:System.Globalization.NumberFormatInfo> 개체에 대 한 문화권별 서식 지정 정보를 제공 하는 `arg0` 숫자 값인 경우.</span><span class="sxs-lookup"><span data-stu-id="75d49-734">A <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information for `arg0` if it is a numeric value.</span></span>  
  
-   <span data-ttu-id="75d49-735">A <xref:System.Globalization.DateTimeFormatInfo> 개체에 대 한 문화권별 서식 지정 정보를 제공 하는 `arg0` 경우 날짜 및 시간 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-735">A <xref:System.Globalization.DateTimeFormatInfo> object that provides culture-specific formatting information for `arg0` if it is a date and time value.</span></span>  
  
-   <span data-ttu-id="75d49-736">사용자 지정 <xref:System.IFormatProvider> 구현에 대 한 서식 지정 정보를 제공 하는 `arg0`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-736">A custom <xref:System.IFormatProvider> implementation that provides formatting information for `arg0`.</span></span> <span data-ttu-id="75d49-737">일반적으로 이러한 구현도 구현 하는 <xref:System.ICustomFormatter> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-737">Typically, such an implementation also implements the <xref:System.ICustomFormatter> interface.</span></span>  
  
 <span data-ttu-id="75d49-738">경우는 `provider` 매개 변수는 `null`서식 지정, 현재 문화권에서 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-738">If the `provider` parameter is `null`, formatting information is obtained from the current culture.</span></span>  
  
 <span data-ttu-id="75d49-739">`arg0` 서식을 지정할 개체를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-739">`arg0` represents the object to be formatted.</span></span> <span data-ttu-id="75d49-740">각 서식 항목 `format` 의 문자열 표현으로 바뀝니다 `arg0`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-740">Each format item in `format` is replaced with the string representation of `arg0`.</span></span> <span data-ttu-id="75d49-741">형식 항목에 포함 된 경우 `formatString` 및 `arg0` 구현 하는 <xref:System.IFormattable> 인터페이스를 다음 `arg0.ToString(formatString, provider)` 서식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-741">If the format item includes `formatString` and `arg0` implements the <xref:System.IFormattable> interface, then `arg0.ToString(formatString, provider)` defines the formatting.</span></span> <span data-ttu-id="75d49-742">그렇지 않으면 `arg0.ToString()` 서식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-742">Otherwise, `arg0.ToString()` defines the formatting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-743">다음 두 호출이 포함 된 <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-743">The following includes two calls to the <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29> method.</span></span> <span data-ttu-id="75d49-744">둘 다 영어-영국 (EN-GB) 문화권의 서식 규칙을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-744">Both use the formatting conventions of the English-Great Britain (en-GB) culture.</span></span> <span data-ttu-id="75d49-745">첫 번째 삽입의 문자열 표현을 <xref:System.Decimal> 결과 문자열에 통화 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-745">The first inserts the string representation of a <xref:System.Decimal> value currency in a result string.</span></span> <span data-ttu-id="75d49-746">두 번째 삽입을 <xref:System.DateTime> 결과의 두 위치에서 문자열 값에는 첫 번째만 포함 하는 짧은 날짜 문자열 및 두 번째 짧은 시간 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-746">The second inserts a <xref:System.DateTime> value in two places in a result string, the first including only the short date string and the second the short time string.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.AppendFormat#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/cs/appendformat1.cs#2)]
 [!code-vb[System.Text.StringBuilder.AppendFormat#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/vb/appendformat1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75d49-747"><paramref name="format" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-747"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="75d49-748"><paramref name="format" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-748"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="75d49-749">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-749">-or-</span></span> 
<span data-ttu-id="75d49-750">형식 항목의 인덱스가 0보다 작거나, 1보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-750">The index of a format item is less than 0 (zero), or greater than or equal to one (1).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-751">확장된 문자열의 길이가 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-751">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-752">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-752">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-753">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-753">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="75d49-754">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="75d49-754">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="75d49-755">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="75d49-755">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-define-and-use-custom-numeric-format-providers.md"><span data-ttu-id="75d49-756">방법: 사용자 지정 숫자 형식 공급자 정의 및 사용</span><span class="sxs-lookup"><span data-stu-id="75d49-756">How to: Define and Use Custom Numeric Format Providers</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="75d49-757">표준 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-757">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="75d49-758">사용자 지정 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-758">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="75d49-759">표준 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-759">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="75d49-760">사용자 지정 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-760">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="75d49-761">표준 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-761">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="75d49-762">사용자 지정 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-762">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="75d49-763">열거형 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-763">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (IFormatProvider provider, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(class System.IFormatProvider provider, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (provider As IFormatProvider, format As String, ParamArray args As Object()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(IFormatProvider ^ provider, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : IFormatProvider * string * obj[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (provider, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="75d49-764">문화권별 서식 지정 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-764">An object that supplies culture-specific formatting information.</span></span></param>
        <param name="format"><span data-ttu-id="75d49-765">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-765">A composite format string.</span></span></param>
        <param name="args"><span data-ttu-id="75d49-766">형식을 지정할 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-766">An array of objects to format.</span></span></param>
        <summary><span data-ttu-id="75d49-767">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-767">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="75d49-768">각 서식 항목은 지정된 서식 공급자를 사용하여 매개 변수 배열에 있는 해당 인수의 문자열 표현으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-768">Each format item is replaced by the string representation of a corresponding argument in a parameter array using a specified format provider.</span></span></summary>
        <returns><span data-ttu-id="75d49-769">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-769">A reference to this instance after the append operation has completed.</span></span> <span data-ttu-id="75d49-770">추가 작업 후, 이 인스턴스에는 추가 작업 이전부터 있던 데이터가 포함되고 그 뒤에 형식 사양이 해당하는 개체 인수의 문자열 표현으로 바뀐 <paramref name="format" />의 복사본이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-770">After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> where any format specification is replaced by the string representation of the corresponding object argument.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-771">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 값 개체의 텍스트 표현으로 변환 하 고 현재 표현을 포함할.NET Framework의 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-771">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="75d49-772">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-772">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</span></span> <span data-ttu-id="75d49-773">포맷 프로세스는 해당 개체의 문자열 표현으로 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-773">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>  
  
 <span data-ttu-id="75d49-774">형식 항목의 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-774">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="75d49-775">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="75d49-775">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="75d49-776">대괄호 안의 요소는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-776">Elements in square brackets are optional.</span></span> <span data-ttu-id="75d49-777">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-777">The following table describes each element.</span></span>  
  
|<span data-ttu-id="75d49-778">요소</span><span class="sxs-lookup"><span data-stu-id="75d49-778">Element</span></span>|<span data-ttu-id="75d49-779">설명</span><span class="sxs-lookup"><span data-stu-id="75d49-779">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="75d49-780">*index*</span><span class="sxs-lookup"><span data-stu-id="75d49-780">*index*</span></span>|<span data-ttu-id="75d49-781">서식을 지정할 개체의 0부터 시작 위치 매개 변수 목록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-781">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="75d49-782">지정 된 개체가 *인덱스* 됩니다 `null`, 형식 항목으로 바뀝니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-782">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="75d49-783">매개 변수가 없는 경우는 *인덱스* 위치는 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-783">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="75d49-784">*길이*</span><span class="sxs-lookup"><span data-stu-id="75d49-784">,*length*</span></span>|<span data-ttu-id="75d49-785">매개 변수의 문자열 표현에 있는 문자의 최소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-785">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="75d49-786">양수의 매개 변수는 오른쪽에 맞춰집니다. 음수 이면를 왼쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-786">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="75d49-787">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="75d49-787">:*formatString*</span></span>|<span data-ttu-id="75d49-788">매개 변수에서 지원 되는 표준 또는 사용자 지정 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-788">A standard or custom format string that is supported by the parameter.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="75d49-789">날짜 및 시간 값을 사용 하는 표준 및 사용자 지정 형식 문자열을 참조 하세요 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 하 고 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-789">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="75d49-790">숫자 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하세요 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-790">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="75d49-791">열거형과 함께 사용 되는 표준 형식 문자열을 참조 하세요 [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-791">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
 <span data-ttu-id="75d49-792">합니다 `provider` 매개 변수 지정를 <xref:System.IFormatProvider> 개체에 대 한 서식 지정 정보를 제공할 수 있는 구현 `args`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-792">The `provider` parameter specifies an <xref:System.IFormatProvider> implementation that can provide formatting information for the objects in `args`.</span></span> <span data-ttu-id="75d49-793">`provider`는 다음과 같을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-793">`provider` can be any of the following:</span></span>  
  
-   <span data-ttu-id="75d49-794"><xref:System.Globalization.CultureInfo> culture 별 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-794">A <xref:System.Globalization.CultureInfo> object that provides culture-specific formatting information.</span></span>  
  
-   <span data-ttu-id="75d49-795">A <xref:System.Globalization.NumberFormatInfo> 숫자 값에 대 한 문화권별 서식 지정 정보를 제공 하는 개체 `args`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-795">A <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information for numeric values in `args`.</span></span>  
  
-   <span data-ttu-id="75d49-796">A <xref:System.Globalization.DateTimeFormatInfo> 날짜 및 시간 값에 대 한 문화권별 서식 지정 정보를 제공 하는 개체 `args`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-796">A <xref:System.Globalization.DateTimeFormatInfo> object that provides culture-specific formatting information for date and time values in `args`.</span></span>  
  
-   <span data-ttu-id="75d49-797">사용자 지정 <xref:System.IFormatProvider> 하나 이상의 개체에 대 한 서식 지정 정보를 제공 하는 구현 `args`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-797">A custom <xref:System.IFormatProvider> implementation that provides formatting information for one or more of the objects in `args`.</span></span> <span data-ttu-id="75d49-798">일반적으로 이러한 구현도 구현 하는 <xref:System.ICustomFormatter> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-798">Typically, such an implementation also implements the <xref:System.ICustomFormatter> interface.</span></span> <span data-ttu-id="75d49-799">다음 섹션에서 두 번째 예제는 <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 사용자 지정을 사용 하 여 메서드 호출 <xref:System.IFormatProvider> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-799">The second example in the next section illustrates an <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method call with a custom <xref:System.IFormatProvider> implementation.</span></span>  
  
 <span data-ttu-id="75d49-800">경우는 `provider` 매개 변수는 `null`, 현재 문화권에서 형식 공급자 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-800">If the `provider` parameter is `null`, format provider information is obtained from the current culture.</span></span>  
  
 <span data-ttu-id="75d49-801">`args` 서식을 지정할 개체를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-801">`args` represents the objects to be formatted.</span></span> <span data-ttu-id="75d49-802">각 서식 항목 `format` 의 해당 개체의 문자열 표현으로 바뀝니다 `args`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-802">Each format item in `format` is replaced with the string representation of the corresponding object in `args`.</span></span> <span data-ttu-id="75d49-803">형식 항목에 포함 된 경우 `formatString` 및 해당 개체 `args` 구현 하는 <xref:System.IFormattable> 인터페이스를 다음 `args[index].ToString(formatString, provider)` 서식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-803">If the format item includes `formatString` and the corresponding object in `args` implements the <xref:System.IFormattable> interface, then `args[index].ToString(formatString, provider)` defines the formatting.</span></span> <span data-ttu-id="75d49-804">그렇지 않으면 `args[index].ToString()` 서식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-804">Otherwise, `args[index].ToString()` defines the formatting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-805">다음 예제는 <xref:System.Text.StringBuilder.AppendFormat%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-805">The following example demonstrates the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.appendformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendformat/CPP/appfmt.cpp#1)]
 [!code-csharp[stringbuilder.appendformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendformat/CS/appfmt.cs#1)]
 [!code-vb[stringbuilder.appendformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendformat/VB/appfmt.vb#1)]  
  
 <span data-ttu-id="75d49-806">다음 예제에서는 사용자 지정 정의 <xref:System.IFormatProvider> 라는 구현 `CustomerFormatter` 서식을 지정 하는 하이픈을 사용 하 여 숫자 10 자리 고객 이후에 네 번째 및 일곱 번째 내선 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-806">The following example defines a custom <xref:System.IFormatProvider> implementation named `CustomerFormatter` that formats a 10-digit customer number with hyphens after the fourth and seventh digits.</span></span> <span data-ttu-id="75d49-807">에 전달 되는 <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 메서드 형식이 지정 된 고객 및 고객 이름을 포함 하는 문자열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-807">It is passed to the <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method to create a string that includes the formatted customer number and customer name.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.AppendFormat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/cs/customernumberformatter1.cs#1)]
 [!code-vb[System.Text.StringBuilder.AppendFormat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/vb/customernumberformatter1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75d49-808"><paramref name="format" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-808"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="75d49-809"><paramref name="format" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-809"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="75d49-810">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-810">-or-</span></span> 
<span data-ttu-id="75d49-811">형식 항목의 인덱스가 0보다 작거나 <paramref name="args" /> 배열의 길이보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-811">The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="args" /> array.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-812">확장된 문자열의 길이가 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-812">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-813">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-813">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-814">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-814">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="75d49-815">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="75d49-815">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="75d49-816">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="75d49-816">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-define-and-use-custom-numeric-format-providers.md"><span data-ttu-id="75d49-817">방법: 사용자 지정 숫자 형식 공급자 정의 및 사용</span><span class="sxs-lookup"><span data-stu-id="75d49-817">How to: Define and Use Custom Numeric Format Providers</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="75d49-818">표준 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-818">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="75d49-819">사용자 지정 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-819">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="75d49-820">표준 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-820">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="75d49-821">사용자 지정 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-821">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="75d49-822">표준 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-822">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="75d49-823">사용자 지정 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-823">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="75d49-824">열거형 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-824">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (format As String, arg0 As Object, arg1 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : string * obj * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="75d49-825">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-825">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="75d49-826">서식을 지정할 첫 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-826">The first object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="75d49-827">서식을 지정할 두 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-827">The second object to format.</span></span></param>
        <summary><span data-ttu-id="75d49-828">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-828">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="75d49-829">각 서식 항목이 두 인수 중 하나의 문자열 표현으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-829">Each format item is replaced by the string representation of either of two arguments.</span></span></summary>
        <returns><span data-ttu-id="75d49-830"><paramref name="format" />이 추가된 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-830">A reference to this instance with <paramref name="format" /> appended.</span></span> <span data-ttu-id="75d49-831"><paramref name="format" />의 각 서식 항목은 해당 개체 인수의 문자열 표현으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-831">Each format item in <paramref name="format" /> is replaced by the string representation of the corresponding object argument.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-832">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 값 개체의 텍스트 표현으로 변환 하 고 현재 표현을 포함할.NET Framework의 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-832">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="75d49-833">합니다 `format` 매개 변수 0 구성 되거나 자세한 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를 해당 하는 서식 항목 이라고 함 `arg0` 및 `arg1`,이 메서드의 매개 변수 목록에서 두 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-833">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to `arg0` and `arg1`, the two objects in the parameter list of this method.</span></span> <span data-ttu-id="75d49-834">포맷 프로세스는 해당 개체의 문자열 표현으로 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-834">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>  
  
 <span data-ttu-id="75d49-835">형식 항목의 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-835">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="75d49-836">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="75d49-836">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="75d49-837">대괄호 안의 요소는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-837">Elements in square brackets are optional.</span></span> <span data-ttu-id="75d49-838">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-838">The following table describes each element.</span></span>  
  
|<span data-ttu-id="75d49-839">요소</span><span class="sxs-lookup"><span data-stu-id="75d49-839">Element</span></span>|<span data-ttu-id="75d49-840">설명</span><span class="sxs-lookup"><span data-stu-id="75d49-840">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="75d49-841">*index*</span><span class="sxs-lookup"><span data-stu-id="75d49-841">*index*</span></span>|<span data-ttu-id="75d49-842">서식을 지정할 개체의 0부터 시작 위치 매개 변수 목록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-842">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="75d49-843">지정 된 개체가 *인덱스* 됩니다 `null`, 형식 항목으로 바뀝니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-843">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="75d49-844">매개 변수가 없는 경우는 *인덱스* 위치는 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-844">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="75d49-845">*길이*</span><span class="sxs-lookup"><span data-stu-id="75d49-845">,*length*</span></span>|<span data-ttu-id="75d49-846">매개 변수의 문자열 표현에 있는 문자의 최소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-846">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="75d49-847">양수의 매개 변수는 오른쪽에 맞춰집니다. 음수 이면를 왼쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-847">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="75d49-848">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="75d49-848">:*formatString*</span></span>|<span data-ttu-id="75d49-849">매개 변수에서 지원 되는 표준 또는 사용자 지정 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-849">A standard or custom format string that is supported by the parameter.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="75d49-850">날짜 및 시간 값을 사용 하는 표준 및 사용자 지정 형식 문자열을 참조 하세요 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 하 고 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-850">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="75d49-851">숫자 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하세요 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-851">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="75d49-852">열거형과 함께 사용 되는 표준 형식 문자열을 참조 하세요 [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-852">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
 <span data-ttu-id="75d49-853">`arg0` 및 `arg1` 서식을 지정할 개체를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-853">`arg0` and `arg1` represent the objects to be formatted.</span></span> <span data-ttu-id="75d49-854">각 서식 항목 `format` 의 문자열 표현으로 바뀝니다 `arg0` 또는 `arg1`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-854">Each format item in `format` is replaced with the string representation of either `arg0` or `arg1`.</span></span> <span data-ttu-id="75d49-855">형식 항목에 포함 된 경우 `formatString` 하 고 해당 개체를 구현 합니다 <xref:System.IFormattable> 인터페이스를 한 다음 `arg` *x* `.ToString(formatString, provider)` 서식 지정, 여기서 정의 *x* 인수의 인덱스가입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-855">If the format item includes `formatString` and the corresponding object implements the <xref:System.IFormattable> interface, then `arg`*x*`.ToString(formatString, provider)` defines the formatting, where *x* is the index of the argument.</span></span> <span data-ttu-id="75d49-856">그렇지 않으면 `arg` *x* `.ToString()` 서식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-856">Otherwise, `arg`*x*`.ToString()` defines the formatting.</span></span>  
  
 <span data-ttu-id="75d49-857">에 할당 된 문자열이 `format` 는 "해 주셔서 {0: # # #} 캔을 저희 자선 기구 음식."</span><span class="sxs-lookup"><span data-stu-id="75d49-857">If the string assigned to `format` is "Thank you for your donation of {0:####} cans of food to our charitable organization."</span></span> <span data-ttu-id="75d49-858">및 `arg0` 정수가 10 이라는 값을 사용 하 여 반환 값이 됩니다 "10 캔을 저희 자선 기구에 기부에 대 한 감사 합니다."</span><span class="sxs-lookup"><span data-stu-id="75d49-858">and `arg0` is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-859">다음 예제는 <xref:System.Text.StringBuilder.AppendFormat%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-859">The following example demonstrates the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.appendformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendformat/CPP/appfmt.cpp#1)]
 [!code-csharp[stringbuilder.appendformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendformat/CS/appfmt.cs#1)]
 [!code-vb[stringbuilder.appendformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendformat/VB/appfmt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75d49-860"><paramref name="format" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-860"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="75d49-861"><paramref name="format" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-861"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="75d49-862">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-862">-or-</span></span> 
<span data-ttu-id="75d49-863">형식 항목의 인덱스가 0보다 작거나 2보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-863">The index of a format item is less than 0 (zero), or greater than or equal to 2.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-864">확장된 문자열의 길이가 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-864">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-865">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-865">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-866">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-866">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="75d49-867">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="75d49-867">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="75d49-868">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="75d49-868">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="75d49-869">표준 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-869">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="75d49-870">사용자 지정 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-870">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="75d49-871">표준 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-871">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="75d49-872">사용자 지정 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-872">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="75d49-873">표준 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-873">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="75d49-874">사용자 지정 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-874">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="75d49-875">열거형 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-875">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (IFormatProvider provider, string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(class System.IFormatProvider provider, string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (provider As IFormatProvider, format As String, arg0 As Object, arg1 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(IFormatProvider ^ provider, System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : IFormatProvider * string * obj * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (provider, format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="75d49-876">문화권별 서식 지정 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-876">An object that supplies culture-specific formatting information.</span></span></param>
        <param name="format"><span data-ttu-id="75d49-877">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-877">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="75d49-878">서식을 지정할 첫 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-878">The first object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="75d49-879">서식을 지정할 두 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-879">The second object to format.</span></span></param>
        <summary><span data-ttu-id="75d49-880">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-880">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="75d49-881">지정된 형식 공급자를 사용하여 각 형식 항목이 두 인수 중 하나의 문자열 표현으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-881">Each format item is replaced by the string representation of either of two arguments using a specified format provider.</span></span></summary>
        <returns><span data-ttu-id="75d49-882">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-882">A reference to this instance after the append operation has completed.</span></span> <span data-ttu-id="75d49-883">추가 작업 후, 이 인스턴스에는 추가 작업 이전부터 있던 데이터가 포함되고 그 뒤에 형식 사양이 해당하는 개체 인수의 문자열 표현으로 바뀐 <paramref name="format" />의 복사본이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-883">After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> where any format specification is replaced by the string representation of the corresponding object argument.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-884">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 값 개체의 텍스트 표현으로 변환 하 고 현재 표현을 포함할.NET Framework의 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-884">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="75d49-885">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-885">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</span></span> <span data-ttu-id="75d49-886">포맷 프로세스는 해당 개체의 문자열 표현으로 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-886">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>  
  
 <span data-ttu-id="75d49-887">형식 항목의 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-887">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="75d49-888">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="75d49-888">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="75d49-889">대괄호 안의 요소는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-889">Elements in square brackets are optional.</span></span> <span data-ttu-id="75d49-890">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-890">The following table describes each element.</span></span>  
  
|<span data-ttu-id="75d49-891">요소</span><span class="sxs-lookup"><span data-stu-id="75d49-891">Element</span></span>|<span data-ttu-id="75d49-892">설명</span><span class="sxs-lookup"><span data-stu-id="75d49-892">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="75d49-893">*index*</span><span class="sxs-lookup"><span data-stu-id="75d49-893">*index*</span></span>|<span data-ttu-id="75d49-894">서식을 지정할 개체의 0부터 시작 위치 매개 변수 목록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-894">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="75d49-895">지정 된 개체가 *인덱스* 됩니다 `null`, 형식 항목으로 바뀝니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-895">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="75d49-896">매개 변수가 없는 경우는 *인덱스* 위치는 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-896">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="75d49-897">*길이*</span><span class="sxs-lookup"><span data-stu-id="75d49-897">,*length*</span></span>|<span data-ttu-id="75d49-898">매개 변수의 문자열 표현에 있는 문자의 최소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-898">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="75d49-899">양수의 매개 변수는 오른쪽에 맞춰집니다. 음수 이면를 왼쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-899">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="75d49-900">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="75d49-900">:*formatString*</span></span>|<span data-ttu-id="75d49-901">매개 변수에서 지원 되는 표준 또는 사용자 지정 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-901">A standard or custom format string that is supported by the parameter.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="75d49-902">날짜 및 시간 값을 사용 하는 표준 및 사용자 지정 형식 문자열을 참조 하세요 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 하 고 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-902">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="75d49-903">숫자 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하세요 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-903">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="75d49-904">열거형과 함께 사용 되는 표준 형식 문자열을 참조 하세요 [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-904">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
 <span data-ttu-id="75d49-905">`provider` 매개 변수를 지정 된 <xref:System.IFormatProvider> 구현에 대 한 서식 지정 정보를 제공할 수 있는 `arg0` 및 `arg1`.</span><span class="sxs-lookup"><span data-stu-id="75d49-905">The `provider` parameter specifies an <xref:System.IFormatProvider> implementation that can provide formatting information for `arg0` and `arg1`.</span></span> <span data-ttu-id="75d49-906">`provider`는 다음과 같을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-906">`provider` can be any of the following:</span></span>  
  
-   <span data-ttu-id="75d49-907"><xref:System.Globalization.CultureInfo> culture 별 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-907">A <xref:System.Globalization.CultureInfo> object that provides culture-specific formatting information.</span></span>  
  
-   <span data-ttu-id="75d49-908">A <xref:System.Globalization.NumberFormatInfo> 개체에 대 한 문화권별 서식 지정 정보를 제공 하는 `arg0` 또는 `arg1` 경우 숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-908">A <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information for `arg0` or `arg1` if they are numeric values.</span></span>  
  
-   <span data-ttu-id="75d49-909">A <xref:System.Globalization.DateTimeFormatInfo> 개체에 대 한 문화권별 서식 지정 정보를 제공 하는 `arg0` 또는 `arg1` 경우 날짜 및 시간 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-909">A <xref:System.Globalization.DateTimeFormatInfo> object that provides culture-specific formatting information for `arg0` or `arg1` if they are date and time values.</span></span>  
  
-   <span data-ttu-id="75d49-910">사용자 지정 <xref:System.IFormatProvider> 에 대 한 서식 지정 정보를 제공 하는 구현 `arg0` 고 `arg1`입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-910">A custom <xref:System.IFormatProvider> implementation that provides formatting information for `arg0` and `arg1`.</span></span> <span data-ttu-id="75d49-911">일반적으로 이러한 구현도 구현 하는 <xref:System.ICustomFormatter> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-911">Typically, such an implementation also implements the <xref:System.ICustomFormatter> interface.</span></span>  
  
 <span data-ttu-id="75d49-912">경우는 `provider` 매개 변수는 `null`, 현재 문화권에서 형식 공급자 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-912">If the `provider` parameter is `null`, format provider information is obtained from the current culture.</span></span>  
  
 <span data-ttu-id="75d49-913">`arg0` 및 `arg1` 서식을 지정할 개체를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-913">`arg0` and `arg1` represent the objects to be formatted.</span></span> <span data-ttu-id="75d49-914">각 서식 항목 `format` 해당 인덱스를 가진 개체의 문자열 표현으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-914">Each format item in `format` is replaced with the string representation of the object that has the corresponding index.</span></span> <span data-ttu-id="75d49-915">형식 항목에 포함 된 경우 `formatString` 해당 인수를 구현 하 고는 <xref:System.IFormattable> 인터페이스를 인수 `ToString(formatString, provider)` 메서드 형식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-915">If the format item includes `formatString` and the corresponding argument implements the <xref:System.IFormattable> interface, then the argument's `ToString(formatString, provider)` method defines the formatting.</span></span> <span data-ttu-id="75d49-916">그렇지 않으면 인수 `ToString()` 메서드 형식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-916">Otherwise, the argument's `ToString()` method defines the formatting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-917">다음 예제에서는 합니다 <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%29> 제네릭에 저장 하는 시간 및 온도 데이터를 표시 하는 방법 <xref:System.Collections.Generic.Dictionary%602> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-917">The following example uses the <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%29> method to display time and temperature data stored in a generic <xref:System.Collections.Generic.Dictionary%602> object.</span></span> <span data-ttu-id="75d49-918">형식 문자열에 세 개의 형식 항목이 있더라도 형식을 지정 하는 개체에만 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-918">Note that the format string has three format items, although there are only to objects to format.</span></span> <span data-ttu-id="75d49-919">왜냐하면 (날짜 및 시간 값) 목록에서 첫 번째 개체는 두 개의 형식 항목에서 사용 합니다. 첫 번째 형식인 항목 표시 시간 및 두 번째 날짜를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-919">This is because the first object in the list (a date and time value) is used by two format items: The first format item displays the time, and the second displays the date.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.AppendFormat#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/cs/appendformat2.cs#3)]
 [!code-vb[System.Text.StringBuilder.AppendFormat#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/vb/appendformat2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75d49-920"><paramref name="format" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-920"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="75d49-921"><paramref name="format" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-921"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="75d49-922">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-922">-or-</span></span> 
<span data-ttu-id="75d49-923">형식 항목의 인덱스가 0보다 작거나 2보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-923">The index of a format item is less than 0 (zero), or greater than or equal to 2 (two).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-924">확장된 문자열의 길이가 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-924">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-925">프로그램과.NET Core 및.NET Framework 4.0 및 이후 버전에서 인스턴스화할 때를 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자의 용량 및 길이 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-925">IIn .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-926">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-926">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="75d49-927">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="75d49-927">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="75d49-928">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="75d49-928">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-define-and-use-custom-numeric-format-providers.md"><span data-ttu-id="75d49-929">방법: 사용자 지정 숫자 형식 공급자 정의 및 사용</span><span class="sxs-lookup"><span data-stu-id="75d49-929">How to: Define and Use Custom Numeric Format Providers</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="75d49-930">표준 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-930">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="75d49-931">사용자 지정 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-931">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="75d49-932">표준 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-932">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="75d49-933">사용자 지정 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-933">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="75d49-934">표준 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-934">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="75d49-935">사용자 지정 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-935">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="75d49-936">열거형 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-936">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (format As String, arg0 As Object, arg1 As Object, arg2 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : string * obj * obj * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="75d49-937">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-937">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="75d49-938">서식을 지정할 첫 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-938">The first object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="75d49-939">서식을 지정할 두 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-939">The second object to format.</span></span></param>
        <param name="arg2"><span data-ttu-id="75d49-940">서식을 지정할 세 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-940">The third object to format.</span></span></param>
        <summary><span data-ttu-id="75d49-941">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-941">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="75d49-942">각 서식 항목이 세 인수 중 하나의 문자열 표현으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-942">Each format item is replaced by the string representation of either of three arguments.</span></span></summary>
        <returns><span data-ttu-id="75d49-943"><paramref name="format" />이 추가된 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-943">A reference to this instance with <paramref name="format" /> appended.</span></span> <span data-ttu-id="75d49-944"><paramref name="format" />의 각 서식 항목은 해당 개체 인수의 문자열 표현으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-944">Each format item in <paramref name="format" /> is replaced by the string representation of the corresponding object argument.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-945">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 값 개체의 텍스트 표현으로 변환 하 고 현재 표현을 포함할.NET Framework의 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-945">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="75d49-946">합니다 `format` 매개 변수 0 구성 되거나 자세한 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를 해당 하는 서식 항목 이라고 함 `arg0` 를 통해 `arg2`,이 메서드의 매개 변수 목록에 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-946">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to `arg0` through `arg2`, the objects in the parameter list of this method.</span></span> <span data-ttu-id="75d49-947">포맷 프로세스는 해당 개체의 문자열 표현으로 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-947">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>  
  
 <span data-ttu-id="75d49-948">형식 항목의 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-948">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="75d49-949">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="75d49-949">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="75d49-950">대괄호 안의 요소는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-950">Elements in square brackets are optional.</span></span> <span data-ttu-id="75d49-951">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-951">The following table describes each element.</span></span>  
  
|<span data-ttu-id="75d49-952">요소</span><span class="sxs-lookup"><span data-stu-id="75d49-952">Element</span></span>|<span data-ttu-id="75d49-953">설명</span><span class="sxs-lookup"><span data-stu-id="75d49-953">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="75d49-954">*index*</span><span class="sxs-lookup"><span data-stu-id="75d49-954">*index*</span></span>|<span data-ttu-id="75d49-955">서식을 지정할 개체의 0부터 시작 위치 매개 변수 목록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-955">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="75d49-956">지정 된 개체가 *인덱스* 됩니다 `null`, 형식 항목으로 바뀝니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-956">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="75d49-957">매개 변수가 없는 경우는 *인덱스* 위치는 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-957">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="75d49-958">*길이*</span><span class="sxs-lookup"><span data-stu-id="75d49-958">,*length*</span></span>|<span data-ttu-id="75d49-959">매개 변수의 문자열 표현에 있는 문자의 최소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-959">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="75d49-960">양수의 매개 변수는 오른쪽에 맞춰집니다. 음수 이면를 왼쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-960">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="75d49-961">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="75d49-961">:*formatString*</span></span>|<span data-ttu-id="75d49-962">매개 변수에서 지원 되는 표준 또는 사용자 지정 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-962">A standard or custom format string that is supported by the parameter.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="75d49-963">날짜 및 시간 값을 사용 하는 표준 및 사용자 지정 형식 문자열을 참조 하세요 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 하 고 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-963">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="75d49-964">숫자 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하세요 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-964">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="75d49-965">열거형과 함께 사용 되는 표준 형식 문자열을 참조 하세요 [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-965">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
 <span data-ttu-id="75d49-966">`arg0`를 `arg1`, 및 `arg2` 서식을 지정할 개체를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-966">`arg0`, `arg1`, and `arg2` represent the objects to be formatted.</span></span> <span data-ttu-id="75d49-967">각 서식 항목 `format` 의 문자열 표현으로 바뀝니다 `arg0`를 `arg1`, 또는 `arg2`형식 항목의 인덱스에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-967">Each format item in `format` is replaced with the string representation of either `arg0`, `arg1`, or `arg2`, depending on the index of the format item.</span></span> <span data-ttu-id="75d49-968">형식 항목에 포함 된 경우 `formatString` 및 해당 개체 `args` 구현 합니다 <xref:System.IFormattable> 인터페이스를 한 다음 `arg` *x* `.ToString(formatString, null)` 서식 지정, 여기서 정의  *x* 인수의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-968">If the format item includes `formatString` and the corresponding object in `args` implements the <xref:System.IFormattable> interface, then `arg`*x*`.ToString(formatString, null)` defines the formatting, where *x* is the index of the argument.</span></span> <span data-ttu-id="75d49-969">그렇지 않으면 `arg` *x* `.ToString()` 서식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-969">Otherwise, `arg`*x*`.ToString()` defines the formatting.</span></span>  
  
 <span data-ttu-id="75d49-970">에 할당 된 문자열이 `format` 는 "해 주셔서 {0: # # #} 캔을 저희 자선 기구 음식."</span><span class="sxs-lookup"><span data-stu-id="75d49-970">If the string assigned to `format` is "Thank you for your donation of {0:####} cans of food to our charitable organization."</span></span> <span data-ttu-id="75d49-971">및 `arg0` 정수가 10 이라는 값을 사용 하 여 반환 값이 됩니다 "10 캔을 저희 자선 기구에 기부에 대 한 감사 합니다."</span><span class="sxs-lookup"><span data-stu-id="75d49-971">and `arg0` is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-972">다음 예제는 <xref:System.Text.StringBuilder.AppendFormat%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-972">The following example demonstrates the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.appendformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendformat/CPP/appfmt.cpp#1)]
 [!code-csharp[stringbuilder.appendformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendformat/CS/appfmt.cs#1)]
 [!code-vb[stringbuilder.appendformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendformat/VB/appfmt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75d49-973"><paramref name="format" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-973"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="75d49-974"><paramref name="format" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-974"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="75d49-975">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-975">-or-</span></span> 
<span data-ttu-id="75d49-976">형식 항목의 인덱스가 0보다 작거나, 3보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-976">The index of a format item is less than 0 (zero), or greater than or equal to 3.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-977">확장된 문자열의 길이가 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-977">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-978">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-978">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-979">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-979">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="75d49-980">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="75d49-980">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="75d49-981">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="75d49-981">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="75d49-982">표준 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-982">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="75d49-983">사용자 지정 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-983">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="75d49-984">표준 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-984">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="75d49-985">사용자 지정 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-985">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="75d49-986">표준 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-986">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="75d49-987">사용자 지정 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-987">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="75d49-988">열거형 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-988">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (IFormatProvider provider, string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(class System.IFormatProvider provider, string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (provider As IFormatProvider, format As String, arg0 As Object, arg1 As Object, arg2 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(IFormatProvider ^ provider, System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : IFormatProvider * string * obj * obj * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (provider, format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="75d49-989">문화권별 서식 지정 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-989">An object that supplies culture-specific formatting information.</span></span></param>
        <param name="format"><span data-ttu-id="75d49-990">복합 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-990">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="75d49-991">서식을 지정할 첫 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-991">The first object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="75d49-992">서식을 지정할 두 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-992">The second object to format.</span></span></param>
        <param name="arg2"><span data-ttu-id="75d49-993">서식을 지정할 세 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-993">The third object to format.</span></span></param>
        <summary><span data-ttu-id="75d49-994">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-994">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="75d49-995">지정된 형식 공급자를 사용하여 각 형식 항목이 세 인수 중 하나의 문자열 표현으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-995">Each format item is replaced by the string representation of either of three arguments using a specified format provider.</span></span></summary>
        <returns><span data-ttu-id="75d49-996">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-996">A reference to this instance after the append operation has completed.</span></span> <span data-ttu-id="75d49-997">추가 작업 후, 이 인스턴스에는 추가 작업 이전부터 있던 데이터가 포함되고 그 뒤에 형식 사양이 해당하는 개체 인수의 문자열 표현으로 바뀐 <paramref name="format" />의 복사본이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-997">After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> where any format specification is replaced by the string representation of the corresponding object argument.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-998">이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 값 개체의 텍스트 표현으로 변환 하 고 현재 표현을 포함할.NET Framework의 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-998">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="75d49-999">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-999">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</span></span> <span data-ttu-id="75d49-1000">포맷 프로세스는 해당 개체의 문자열 표현으로 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1000">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>  
  
 <span data-ttu-id="75d49-1001">형식 항목의 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1001">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="75d49-1002">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="75d49-1002">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="75d49-1003">대괄호 안의 요소는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1003">Elements in square brackets are optional.</span></span> <span data-ttu-id="75d49-1004">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1004">The following table describes each element.</span></span>  
  
|<span data-ttu-id="75d49-1005">요소</span><span class="sxs-lookup"><span data-stu-id="75d49-1005">Element</span></span>|<span data-ttu-id="75d49-1006">설명</span><span class="sxs-lookup"><span data-stu-id="75d49-1006">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="75d49-1007">*index*</span><span class="sxs-lookup"><span data-stu-id="75d49-1007">*index*</span></span>|<span data-ttu-id="75d49-1008">서식을 지정할 개체의 0부터 시작 위치 매개 변수 목록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1008">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="75d49-1009">지정 된 개체가 *인덱스* 됩니다 `null`, 형식 항목으로 바뀝니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1009">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="75d49-1010">매개 변수가 없는 경우는 *인덱스* 위치는 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1010">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="75d49-1011">*길이*</span><span class="sxs-lookup"><span data-stu-id="75d49-1011">,*length*</span></span>|<span data-ttu-id="75d49-1012">매개 변수의 문자열 표현에 있는 문자의 최소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1012">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="75d49-1013">양수의 매개 변수는 오른쪽에 맞춰집니다. 음수 이면를 왼쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1013">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="75d49-1014">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="75d49-1014">:*formatString*</span></span>|<span data-ttu-id="75d49-1015">매개 변수에서 지원 되는 표준 또는 사용자 지정 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1015">A standard or custom format string that is supported by the parameter.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="75d49-1016">날짜 및 시간 값을 사용 하는 표준 및 사용자 지정 형식 문자열을 참조 하세요 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 하 고 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1016">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="75d49-1017">숫자 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하세요 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1017">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="75d49-1018">열거형과 함께 사용 되는 표준 형식 문자열을 참조 하세요 [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1018">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
 <span data-ttu-id="75d49-1019">`provider` 매개 변수를 지정 된 <xref:System.IFormatProvider> 구현에 대 한 서식 지정 정보를 제공할 수 있는 `arg0` 및 `arg1`.</span><span class="sxs-lookup"><span data-stu-id="75d49-1019">The `provider` parameter specifies an <xref:System.IFormatProvider> implementation that can provide formatting information for `arg0` and `arg1`.</span></span> <span data-ttu-id="75d49-1020">`provider`는 다음과 같을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1020">`provider` can be any of the following:</span></span>  
  
-   <span data-ttu-id="75d49-1021"><xref:System.Globalization.CultureInfo> culture 별 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1021">A <xref:System.Globalization.CultureInfo> object that provides culture-specific formatting information.</span></span>  
  
-   <span data-ttu-id="75d49-1022">A <xref:System.Globalization.NumberFormatInfo> 개체에 대 한 문화권별 서식 지정 정보를 제공 하는 `arg0` 또는 `arg1` 경우 숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1022">A <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information for `arg0` or `arg1` if they are numeric values.</span></span>  
  
-   <span data-ttu-id="75d49-1023">A <xref:System.Globalization.DateTimeFormatInfo> 개체에 대 한 문화권별 서식 지정 정보를 제공 하는 `arg0`를 `arg1`, 또는 `arg2` 경우 날짜 및 시간 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1023">A <xref:System.Globalization.DateTimeFormatInfo> object that provides culture-specific formatting information for `arg0`, `arg1`, or `arg2` if they are date and time values.</span></span>  
  
-   <span data-ttu-id="75d49-1024">사용자 지정 <xref:System.IFormatProvider> 에 대 한 서식 지정 정보를 제공 하는 구현 `arg0`를 `arg1`, 및 `arg2`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1024">A custom <xref:System.IFormatProvider> implementation that provides formatting information for `arg0`,  `arg1`, and `arg2`.</span></span> <span data-ttu-id="75d49-1025">일반적으로 이러한 구현도 구현 하는 <xref:System.ICustomFormatter> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1025">Typically, such an implementation also implements the <xref:System.ICustomFormatter> interface.</span></span>  
  
 <span data-ttu-id="75d49-1026">경우는 `provider` 매개 변수는 `null`, 현재 문화권에서 형식 공급자 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1026">If the `provider` parameter is `null`, format provider information is obtained from the current culture.</span></span>  
  
 <span data-ttu-id="75d49-1027">`arg0`를 `arg1`, 및 `arg2` 서식을 지정할 개체를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1027">`arg0`, `arg1`, and `arg2` represent the objects to be formatted.</span></span> <span data-ttu-id="75d49-1028">각 서식 항목 `format` 해당 인덱스를 가진 개체의 문자열 표현으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1028">Each format item in `format` is replaced with the string representation of the object that has the corresponding index.</span></span> <span data-ttu-id="75d49-1029">형식 항목에 포함 된 경우 `formatString` 해당 인수를 구현 하 고는 <xref:System.IFormattable> 인터페이스를 인수 `ToString(formatString, provider)` 메서드 형식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1029">If the format item includes `formatString` and the corresponding argument implements the <xref:System.IFormattable> interface, then the argument's `ToString(formatString, provider)` method defines the formatting.</span></span> <span data-ttu-id="75d49-1030">그렇지 않으면 인수 `ToString()` 메서드 형식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1030">Otherwise, the argument's `ToString()` method defines the formatting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1031">다음 예제에서는 합니다 <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> 메서드는 부울 결과 보여 주기 위해 `And` 정수 값을 사용 하 여 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1031">The following example uses the <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method to illustrate the result of a Boolean `And` operation with integer values.</span></span> <span data-ttu-id="75d49-1032">두 가지 방법으로 각 항목 형식이 있으므로 형식 문자열에 6 개의 형식 항목이 포함 되지만 메서드 인수 목록에서 세 개의 항목이 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1032">Note that the format string includes six format items, but the method has only three items in its argument list, because each item is formatted in two different ways.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.AppendFormat#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/cs/appendformat3.cs#4)]
 [!code-vb[System.Text.StringBuilder.AppendFormat#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/vb/appendformat3.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75d49-1033"><paramref name="format" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1033"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="75d49-1034"><paramref name="format" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1034"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="75d49-1035">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-1035">-or-</span></span> 
<span data-ttu-id="75d49-1036">형식 항목의 인덱스가 0보다 작거나 3보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1036">The index of a format item is less than 0 (zero), or greater than or equal to 3 (three).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1037">확장된 문자열의 길이가 <see cref="P:System.Text.StringBuilder.MaxCapacity" />를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1037">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-1038">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1038">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-1039">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1039">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="75d49-1040">.NET의 서식 지정 형식</span><span class="sxs-lookup"><span data-stu-id="75d49-1040">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="75d49-1041">복합 형식 지정</span><span class="sxs-lookup"><span data-stu-id="75d49-1041">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-define-and-use-custom-numeric-format-providers.md"><span data-ttu-id="75d49-1042">방법: 사용자 지정 숫자 형식 공급자 정의 및 사용</span><span class="sxs-lookup"><span data-stu-id="75d49-1042">How to: Define and Use Custom Numeric Format Providers</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="75d49-1043">표준 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-1043">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="75d49-1044">사용자 지정 숫자 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-1044">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="75d49-1045">표준 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-1045">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="75d49-1046">사용자 지정 날짜 및 시간 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-1046">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="75d49-1047">표준 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-1047">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="75d49-1048">사용자 지정 TimeSpan 서식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-1048">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="75d49-1049">열거형 형식 문자열</span><span class="sxs-lookup"><span data-stu-id="75d49-1049">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin (char separator, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin(char separator, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin (separator As Char, ParamArray values As Object()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendJoin(char separator, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : char * obj[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="values" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin (char separator, params string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin(char separator, string[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin (separator As Char, ParamArray values As String()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendJoin(char separator, ... cli::array &lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : char * string[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="values" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin (string separator, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin(string separator, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin (separator As String, ParamArray values As Object()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendJoin(System::String ^ separator, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : string * obj[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="values" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin (string separator, params string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin(string separator, string[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin (separator As String, ParamArray values As String()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendJoin(System::String ^ separator, ... cli::array &lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : string * string[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="values" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin&lt;T&gt; (char separator, System.Collections.Generic.IEnumerable&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin&lt;T&gt;(char separator, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin(Of T) (separator As Char, values As IEnumerable(Of T)) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Text::StringBuilder ^ AppendJoin(char separator, System::Collections::Generic::IEnumerable&lt;T&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : char * seq&lt;'T&gt; -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="separator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin&lt;T&gt; (string separator, System.Collections.Generic.IEnumerable&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin&lt;T&gt;(string separator, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin(Of T) (separator As String, values As IEnumerable(Of T)) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Text::StringBuilder ^ AppendJoin(System::String ^ separator, System::Collections::Generic::IEnumerable&lt;T&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : string * seq&lt;'T&gt; -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="separator" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="separator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendLine">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="75d49-1050">이 인스턴스의 끝에 기본 줄 종결자 또는 지정한 문자열의 복사본과 기본 줄 종결자를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1050">Appends the default line terminator, or a copy of a specified string and the default line terminator, to the end of this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendLine">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendLine" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendLine () As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendLine();" />
      <MemberSignature Language="F#" Value="member this.AppendLine : unit -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="75d49-1051">현재 <see cref="T:System.Text.StringBuilder" /> 개체의 끝에 기본 줄 종결자를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1051">Appends the default line terminator to the end of the current <see cref="T:System.Text.StringBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="75d49-1052">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1052">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1053">현재 값인 기본 줄 종결자를 <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1053">The default line terminator is the current value of the <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="75d49-1054">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1054">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1055">다음 예제는 <xref:System.Text.StringBuilder.AppendLine%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1055">The following example demonstrates the <xref:System.Text.StringBuilder.AppendLine%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.appendline#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendline/CPP/al.cpp#1)]
 [!code-csharp[stringbuilder.appendline#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendline/CS/al.cs#1)]
 [!code-vb[stringbuilder.appendline#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendline/VB/al.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1056">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1056">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-1057">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1057">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-1058">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1058">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="AppendLine">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendLine (value As String) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendLine(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AppendLine : string -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="75d49-1059">추가할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1059">The string to append.</span></span></param>
        <summary><span data-ttu-id="75d49-1060">현재 <see cref="T:System.Text.StringBuilder" /> 개체의 끝에 지정한 문자열의 복사본과 기본 줄 종결자를 차례로 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1060">Appends a copy of the specified string followed by the default line terminator to the end of the current <see cref="T:System.Text.StringBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="75d49-1061">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1061">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1062">현재 값인 기본 줄 종결자를 <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1062">The default line terminator is the current value of the <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="75d49-1063">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1063">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1064">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1064">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-1065">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <see cref="T:System.Text.StringBuilder" /> 호출 하 여 개체를 <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> 생성자, 길이 및 용량을 합니다 <see cref="T:System.Text.StringBuilder" /> 인스턴스 값 이상으로 증가할 수 해당 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1065">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="75d49-1066">특히 호출 하는 경우 발생할 수 있습니다 합니다 <see cref="M:System.Text.StringBuilder.Append(System.String)" /> 고 <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1066">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Text.StringBuilder.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Text.StringBuilder.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="75d49-1067">현재 인스턴스에 의해 할당된 메모리에 포함할 수 있는 최대 문자 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1067">Gets or sets the maximum number of characters that can be contained in the memory allocated by the current instance.</span></span></summary>
        <value><span data-ttu-id="75d49-1068">현재 인스턴스에 의해 할당된 메모리에 포함할 수 있는 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1068">The maximum number of characters that can be contained in the memory allocated by the current instance.</span></span> <span data-ttu-id="75d49-1069">값 범위는 <see cref="P:System.Text.StringBuilder.Length" />에서 <see cref="P:System.Text.StringBuilder.MaxCapacity" />까지일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1069">Its value can range from <see cref="P:System.Text.StringBuilder.Length" /> to <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1070"><xref:System.Text.StringBuilder.Capacity%2A> 현재 인스턴스의 문자열 값에 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1070"><xref:System.Text.StringBuilder.Capacity%2A> does not affect the string value of the current instance.</span></span> <span data-ttu-id="75d49-1071"><xref:System.Text.StringBuilder.Capacity%2A> 되지 않았으므로 축소 보다 작은 <xref:System.Text.StringBuilder.Length%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1071"><xref:System.Text.StringBuilder.Capacity%2A> can be decreased as long as it is not less than <xref:System.Text.StringBuilder.Length%2A>.</span></span>  
  
 <span data-ttu-id="75d49-1072">합니다 <xref:System.Text.StringBuilder> 동적으로 필요한 경우 더 많은 공간을 할당 하 고 증가 <xref:System.Text.StringBuilder.Capacity%2A> 적절 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1072">The <xref:System.Text.StringBuilder> dynamically allocates more space when required and increases <xref:System.Text.StringBuilder.Capacity%2A> accordingly.</span></span> <span data-ttu-id="75d49-1073">성능상의 이유로 <xref:System.Text.StringBuilder> 필요한 것 보다 더 많은 메모리를 할당할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1073">For performance reasons, a <xref:System.Text.StringBuilder> might allocate more memory than needed.</span></span> <span data-ttu-id="75d49-1074">할당 된 메모리 양이 구현 별입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1074">The amount of memory allocated is implementation-specific.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1075">다음 예제는 <xref:System.Text.StringBuilder.Capacity%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1075">The following example demonstrates the <xref:System.Text.StringBuilder.Capacity%2A> property.</span></span>  
  
 [!code-cpp[stringbuilder.ensurecapacity#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CPP/cap.cpp#1)]
 [!code-csharp[stringbuilder.ensurecapacity#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CS/cap.cs#1)]
 [!code-vb[stringbuilder.ensurecapacity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.ensurecapacity/VB/cap.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1076">Set 작업에 지정된 값이 이 인스턴스의 현재 길이보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1076">The value specified for a set operation is less than the current length of this instance.</span></span>  
  
<span data-ttu-id="75d49-1077">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-1077">-or-</span></span> 
<span data-ttu-id="75d49-1078">Set 작업에 지정된 값이 최대 용량보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1078">The value specified for a set operation is greater than the maximum capacity.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Chars">
      <MemberSignature Language="C#" Value="public char this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Chars(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.StringBuilder.Chars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Chars(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); void set(int index, char value); };" />
      <MemberSignature Language="F#" Value="member this.Chars(int) : char with get, set" Usage="System.Text.StringBuilder.Chars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1079">문자의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1079">The position of the character.</span></span></param>
        <summary><span data-ttu-id="75d49-1080">이 인스턴트에서 특정 위치에 있는 문자를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1080">Gets or sets the character at the specified character position in this instance.</span></span></summary>
        <value><span data-ttu-id="75d49-1081"><paramref name="index" /> 위치에 있는 유니코드 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1081">The Unicode character at position <paramref name="index" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1082">합니다 `index` 매개 변수는 내 문자 위치를 <xref:System.Text.StringBuilder>입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1082">The `index` parameter is the position of a character within the <xref:System.Text.StringBuilder>.</span></span> <span data-ttu-id="75d49-1083">문자열의 첫 번째 문자는 인덱스 0에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1083">The first character in the string is at index 0.</span></span> <span data-ttu-id="75d49-1084">문자열의 길이가 포함 된 문자의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1084">The length of a string is the number of characters it contains.</span></span> <span data-ttu-id="75d49-1085">마지막 액세스할 수 있는 문자를 <xref:System.Text.StringBuilder> 인스턴스가 인덱스 <xref:System.Text.StringBuilder.Length%2A> -1입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1085">The last accessible character of a <xref:System.Text.StringBuilder> instance is at index <xref:System.Text.StringBuilder.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="75d49-1086"><xref:System.Text.StringBuilder.Chars%2A> 기본 속성을 <xref:System.Text.StringBuilder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1086"><xref:System.Text.StringBuilder.Chars%2A> is the default property of the <xref:System.Text.StringBuilder> class.</span></span> <span data-ttu-id="75d49-1087">C#에서는 인덱서 것입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1087">In C#, it is an indexer.</span></span> <span data-ttu-id="75d49-1088">즉,에서 개별 문자를 검색할 수 있습니다는 <xref:System.Text.StringBuilder.Chars%2A> 공백, 영문자의 개수에 다음 예제에 표시 된 대로 속성과 문자열의 문장 부호 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1088">This means that individual characters can be retrieved from the <xref:System.Text.StringBuilder.Chars%2A> property as shown in the following example, which counts the number of alphabetic, white-space, and punctuation characters in a string.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Chars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.chars/cs/chars1.cs#1)]
 [!code-vb[System.Text.StringBuilder.Chars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.chars/vb/chars1.vb#1)]  

### <a name="performance-and-character-based-indexing"></a><span data-ttu-id="75d49-1089">성능 및 문자 기반 인덱싱을</span><span class="sxs-lookup"><span data-stu-id="75d49-1089">Performance and character-based indexing</span></span>

[!INCLUDE[stringbuilder-performance-note](~/includes/stringbuilder-perf-note.md)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1090">문자를 설정하는 동안 <paramref name="index" />가 이 인스턴스의 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1090"><paramref name="index" /> is outside the bounds of this instance while setting a character.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="75d49-1091">문자를 가져오는 동안 <paramref name="index" />가 이 인스턴스의 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1091"><paramref name="index" /> is outside the bounds of this instance while getting a character.</span></span></exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; System.Text.StringBuilder" Usage="stringBuilder.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="75d49-1092">현재 <see cref="T:System.Text.StringBuilder" /> 인스턴스에서 모든 문자를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1092">Removes all characters from the current <see cref="T:System.Text.StringBuilder" /> instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-1093"><see cref="P:System.Text.StringBuilder.Length" />가 0인 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1093">An object whose <see cref="P:System.Text.StringBuilder.Length" /> is 0 (zero).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="75d49-1094"><xref:System.Text.StringBuilder.Clear%2A> 설정에 해당 하는 메서드는 <xref:System.Text.StringBuilder.Length%2A> 0 (영) 현재 인스턴스의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1094"><xref:System.Text.StringBuilder.Clear%2A> is a convenience method that is equivalent to setting the <xref:System.Text.StringBuilder.Length%2A> property of the current instance to 0 (zero).</span></span>  
  
## Examples

<span data-ttu-id="75d49-1095">다음 예제에서는 한 <xref:System.Text.StringBuilder> 문자열로 호출을 사용 하 여 개체를 <xref:System.Text.StringBuilder.Clear%2A> 메서드를 한 다음 새 문자열을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1095">The following example instantiates a <xref:System.Text.StringBuilder> object with a string, calls the <xref:System.Text.StringBuilder.Clear%2A> method, and then appends a new string.</span></span>  
  
[!code-csharp[System.Text.StringBuilder.Clear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.clear/cs/clear1.cs#1)]
[!code-vb[System.Text.StringBuilder.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.clear/vb/clear1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int sourceIndex, Span&lt;char&gt; destination, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 sourceIndex, valuetype System.Span`1&lt;char&gt; destination, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Span{System.Char},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (sourceIndex As Integer, destination As Span(Of Char), count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int sourceIndex, Span&lt;char&gt; destination, int count);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int * Span&lt;char&gt; * int -&gt; unit" Usage="stringBuilder.CopyTo (sourceIndex, destination, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceIndex" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sourceIndex">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int sourceIndex, char[] destination, int destinationIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 sourceIndex, char[] destination, int32 destinationIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (sourceIndex As Integer, destination As Char(), destinationIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int sourceIndex, cli::array &lt;char&gt; ^ destination, int destinationIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int * char[] * int * int -&gt; unit" Usage="stringBuilder.CopyTo (sourceIndex, destination, destinationIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceIndex" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destination" Type="System.Char[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destinationIndex" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceIndex"><span data-ttu-id="75d49-1096">이 인스턴스에서 문자가 복사되기 시작하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1096">The starting position in this instance where characters will be copied from.</span></span> <span data-ttu-id="75d49-1097">인덱스는 0부터 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1097">The index is zero-based.</span></span></param>
        <param name="destination"><span data-ttu-id="75d49-1098">문자가 복사될 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1098">The array where characters will be copied.</span></span></param>
        <param name="destinationIndex"><span data-ttu-id="75d49-1099"><paramref name="destination" />에서 문자가 복사될 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1099">The starting position in <paramref name="destination" /> where characters will be copied.</span></span> <span data-ttu-id="75d49-1100">인덱스는 0부터 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1100">The index is zero-based.</span></span></param>
        <param name="count"><span data-ttu-id="75d49-1101">복사될 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1101">The number of characters to be copied.</span></span></param>
        <summary><span data-ttu-id="75d49-1102">이 인스턴스에서 지정한 세그먼트의 문자를 대상 <see cref="T:System.Char" /> 배열에서 지정한 세그먼트에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1102">Copies the characters from a specified segment of this instance to a specified segment of a destination <see cref="T:System.Char" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1103">합니다 <xref:System.Text.StringBuilder.CopyTo%2A> 효과적으로 연속 된 부분을 복사 해야 할 때 특수 한 상황에서 사용할 메서드를 <xref:System.Text.StringBuilder> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1103">The <xref:System.Text.StringBuilder.CopyTo%2A> method is intended to be used in the rare situation when you need to efficiently copy successive sections of a <xref:System.Text.StringBuilder> object to an array.</span></span> <span data-ttu-id="75d49-1104">배열에는 고정된 크기를 미리 할당 되 고 재사용 가능한 전역 액세스가 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1104">The array should be a fixed size, preallocated, reusable, and possibly globally accessible.</span></span>  
  
 <span data-ttu-id="75d49-1105">예를 들어, 응용 프로그램을 채울 수도 있었습니다를 <xref:System.Text.StringBuilder> 많은 수의 문자를 사용 하 여 개체를 사용 하 여는 <xref:System.Text.StringBuilder.CopyTo%2A> 소규모의 연속 정보를 복사 하는 메서드는 <xref:System.Text.StringBuilder> 조각이 처리 되는 배열 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1105">For example, your application could populate a <xref:System.Text.StringBuilder> object with a large number of characters then use the <xref:System.Text.StringBuilder.CopyTo%2A> method to copy small, successive pieces of the <xref:System.Text.StringBuilder> object to an array where the pieces are processed.</span></span> <span data-ttu-id="75d49-1106">경우에 있는 모든 데이터를 <xref:System.Text.StringBuilder> 개체를 처리의 크기를 <xref:System.Text.StringBuilder> 개체가 0으로 설정 되 고 주기가 반복 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1106">When all the data in the <xref:System.Text.StringBuilder> object is processed, the size of the <xref:System.Text.StringBuilder> object is set to zero and the cycle is repeated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1107">다음 예제는 <xref:System.Text.StringBuilder.CopyTo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1107">The following example demonstrates the <xref:System.Text.StringBuilder.CopyTo%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.copyto2#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.copyto2/CPP/ct2.cpp#1)]
 [!code-csharp[stringbuilder.copyto2#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.copyto2/CS/ct2.cs#1)]
 [!code-vb[stringbuilder.copyto2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.copyto2/VB/ct2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75d49-1108"><paramref name="destination" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1108"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1109"><paramref name="sourceIndex" />, <paramref name="destinationIndex" /> 또는 <paramref name="count" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1109"><paramref name="sourceIndex" />, <paramref name="destinationIndex" />, or <paramref name="count" />, is less than zero.</span></span>  
  
<span data-ttu-id="75d49-1110">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-1110">-or-</span></span> 
 <span data-ttu-id="75d49-1111"><paramref name="sourceIndex" />가 이 인스턴스의 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1111"><paramref name="sourceIndex" /> is greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="75d49-1112"><paramref name="sourceIndex" /> + <paramref name="count" />가 이 인스턴스의 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1112"><paramref name="sourceIndex" /> + <paramref name="count" /> is greater than the length of this instance.</span></span>  
  
<span data-ttu-id="75d49-1113">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-1113">-or-</span></span> 
 <span data-ttu-id="75d49-1114"><paramref name="destinationIndex" /> + <paramref name="count" />이 <paramref name="destination" />의 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1114"><paramref name="destinationIndex" /> + <paramref name="count" /> is greater than the length of <paramref name="destination" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureCapacity">
      <MemberSignature Language="C#" Value="public int EnsureCapacity (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EnsureCapacity(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnsureCapacity (capacity As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EnsureCapacity(int capacity);" />
      <MemberSignature Language="F#" Value="member this.EnsureCapacity : int -&gt; int" Usage="stringBuilder.EnsureCapacity capacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="75d49-1115">확보할 최소 용량입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1115">The minimum capacity to ensure.</span></span></param>
        <summary><span data-ttu-id="75d49-1116">이 <see cref="T:System.Text.StringBuilder" /> 인스턴스의 용량이 최소한 지정된 값이 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1116">Ensures that the capacity of this instance of <see cref="T:System.Text.StringBuilder" /> is at least the specified value.</span></span></summary>
        <returns><span data-ttu-id="75d49-1117">이 인스턴스의 새 용량입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1117">The new capacity of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1118">현재 용량이 보다 작은 `capacity` 매개 변수를 이상을 보유할 수 다시이 인스턴스에 대 한 메모리를 할당 합니다 `capacity` 문자 수가 않으면 메모리는 그대로 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1118">If the current capacity is less than the `capacity` parameter, memory for this instance is reallocated to hold at least `capacity` number of characters; otherwise, no memory is changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1119">다음 예제는 <xref:System.Text.StringBuilder.EnsureCapacity%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1119">The following example demonstrates the <xref:System.Text.StringBuilder.EnsureCapacity%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.ensurecapacity#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CPP/cap.cpp#1)]
 [!code-csharp[stringbuilder.ensurecapacity#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CS/cap.cs#1)]
 [!code-vb[stringbuilder.ensurecapacity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.ensurecapacity/VB/cap.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1120"><paramref name="capacity" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="75d49-1120"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="75d49-1121">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-1121">-or-</span></span> 
<span data-ttu-id="75d49-1122">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1122">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ReadOnlySpan&lt;char&gt; span);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.ReadOnlySpan`1&lt;char&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Equals(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (span As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(ReadOnlySpan&lt;char&gt; span);" />
      <MemberSignature Language="F#" Value="override this.Equals : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="stringBuilder.Equals span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="span"><span data-ttu-id="75d49-1123">현재 인스턴스와 비교할 문자 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1123">The character span to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="75d49-1124">이 인스턴스의 문자가 지정된 읽기 전용 문자 범위의 문자와 같은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1124">Returns a value indicating whether the characters in this instance are equal to the characters in a specified read-only character span.</span></span></summary>
        <returns><span data-ttu-id="75d49-1125">이 인스턴스의 문자와 <paramref name="span" />이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1125"><see langword="true" /> if the characters in this instance and <paramref name="span" /> are the same; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="75d49-1126">`Equals` 메서드는 서 수 비교를 수행 하는지 여부를 현재 인스턴스의 문자 및 `span` 같은지 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1126">The `Equals` method performs an ordinal comparison to determine whether the characters in the current instance and `span` are equal.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Text.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(class System.Text.StringBuilder sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (sb As StringBuilder) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Text::StringBuilder ^ sb);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Text.StringBuilder -&gt; bool" Usage="stringBuilder.Equals sb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="sb"><span data-ttu-id="75d49-1127">이 인스턴스와 비교할 개체 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1127">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="75d49-1128">이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1128">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="75d49-1129">이 인스턴스와 <paramref name="sb" />에 같은 문자열, <see cref="P:System.Text.StringBuilder.Capacity" /> 및 <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1129"><see langword="true" /> if this instance and <paramref name="sb" /> have equal string, <see cref="P:System.Text.StringBuilder.Capacity" />, and <see cref="P:System.Text.StringBuilder.MaxCapacity" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="75d49-1130">**.NET framework 및.NET Core 2.2 및 이전 버전:** 현재 인스턴스 및 `sb` 같은 문자열, 있는 경우 같은지 <xref:System.Text.StringBuilder.Capacity>, 및 <xref:System.Text.StringBuilder.MaxCapacity> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1130">**.NET Framework and .NET Core 2.2 and previous versions:** The current instance and `sb` are equal if they have equal string, <xref:System.Text.StringBuilder.Capacity>, and <xref:System.Text.StringBuilder.MaxCapacity> values.</span></span> <span data-ttu-id="75d49-1131">`Equals` 메서드 서 수 비교를 사용 하 여 문자열이 같은지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1131">The `Equals` method uses ordinal comparison to determine whether the strings are equal.</span></span>

<span data-ttu-id="75d49-1132">**.NET core 3.0 및 이후 버전:** 현재 인스턴스 및 `sb` 문자열을 둘 다에 할당 하는 경우 동일 <xref:System.Text.StringBuilder> 개체가 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1132">**.NET Core 3.0 and later versions:** The current instance and `sb` are equal if the strings assigned to both <xref:System.Text.StringBuilder> objects are the same.</span></span>  <span data-ttu-id="75d49-1133">이 같은지를 확인 하는 `Equals` 메서드는 서 수 비교를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1133">To determine equality, the `Equals` method uses ordinal comparison.</span></span> <span data-ttu-id="75d49-1134">합니다 <xref:System.Text.StringBuilder.Capacity> 고 <xref:System.Text.StringBuilder.MaxCapacity> 속성 값 비교에 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1134">The <xref:System.Text.StringBuilder.Capacity> and <xref:System.Text.StringBuilder.MaxCapacity> property values are not used in the comparison.</span></span>

## Examples  
 <span data-ttu-id="75d49-1135">다음 코드에서는 합니다 <xref:System.Text.StringBuilder.Equals%2A> 두 여부를 확인 하는 메서드 <xref:System.Text.StringBuilder> 개체.</span><span class="sxs-lookup"><span data-stu-id="75d49-1135">The following code uses the <xref:System.Text.StringBuilder.Equals%2A> method to check whether two <xref:System.Text.StringBuilder> objects are equal.</span></span> <span data-ttu-id="75d49-1136">각 개체에 작은 변경 내용이 후 결과 콘솔에 표시 된 메서드를 반복적으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1136">The method is called repeatedly after small changes are made to each object, and the results are displayed to the console.</span></span>  
  
 [!code-cpp[stringbuilder.ensurecapacity#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CPP/cap.cpp#1)]
 [!code-csharp[stringbuilder.ensurecapacity#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CS/cap.cs#1)]
 [!code-vb[stringbuilder.ensurecapacity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.ensurecapacity/VB/cap.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChunks">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder.ChunkEnumerator GetChunks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.StringBuilder/ChunkEnumerator GetChunks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.GetChunks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChunks () As StringBuilder.ChunkEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder::ChunkEnumerator GetChunks();" />
      <MemberSignature Language="F#" Value="member this.GetChunks : unit -&gt; System.Text.StringBuilder.ChunkEnumerator" Usage="stringBuilder.GetChunks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder+ChunkEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="75d49-1137">지정된 개체의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1137">Inserts the string representation of a specified object into this instance at a specified character position.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Boolean) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, bool value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * bool -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1138">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1138">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1139">삽입할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1139">The value to insert.</span></span></param>
        <summary><span data-ttu-id="75d49-1140">지정된 문자 위치에 있는 이 인스턴스에 부울 값의 문자열 표현을 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1140">Inserts the string representation of a Boolean value into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1141">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1141">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1142"><xref:System.Boolean.ToString%2A?displayProperty=nameWithType> 문자열 표현을 가져오는 데 사용 됩니다 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1142"><xref:System.Boolean.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="75d49-1143">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1143">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1144">필요에 따라 용량이 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1144">The capacity is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1145">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1145">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1146"><paramref name="index" />가 0보다 작거나 이 인스턴스 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1146"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="75d49-1147">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1147">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-1148">에 [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 및 이전 버전에서는이 메서드를 호출 했습니다는 <see cref="T:System.ArgumentOutOfRangeException" /> 삽입 하는 경우 <paramref name="value" /> 개체의 총 길이를 초과 하면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1148">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="75d49-1149">로 시작 합니다 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 메서드에서 throw는 <see cref="T:System.OutOfMemoryException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1149">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Byte) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::Byte value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * byte -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1150">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1150">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1151">삽입할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1151">The value to insert.</span></span></param>
        <summary><span data-ttu-id="75d49-1152">지정된 8비트 부호 없는 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1152">Inserts the string representation of a specified 8-bit unsigned integer into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1153">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1153">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1154"><xref:System.Byte.ToString%2A?displayProperty=nameWithType> 문자열 표현을 가져오는 데 사용 됩니다 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1154"><xref:System.Byte.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="75d49-1155">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1155">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1156">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1156">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1157">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1157">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1158"><paramref name="index" />가 0보다 작거나 이 인스턴스 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1158"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="75d49-1159">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1159">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-1160">에 [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 및 이전 버전에서는이 메서드를 호출 했습니다는 <see cref="T:System.ArgumentOutOfRangeException" /> 삽입 하는 경우 <paramref name="value" /> 개체의 총 길이를 초과 하면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1160">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="75d49-1161">로 시작 합니다 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 메서드에서 throw는 <see cref="T:System.OutOfMemoryException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1161">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Char) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, char value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * char -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1162">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1162">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1163">삽입할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1163">The value to insert.</span></span></param>
        <summary><span data-ttu-id="75d49-1164">지정된 유니코드 문자의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1164">Inserts the string representation of a specified Unicode character into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1165">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1165">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1166"><xref:System.Char.ToString%2A?displayProperty=nameWithType> 문자열 표현을 가져오는 데 사용 됩니다 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1166"><xref:System.Char.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="75d49-1167">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1167">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1168">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1168">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1169">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1169">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1170"><paramref name="index" />가 0보다 작거나 이 인스턴스 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1170"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span>  
  
<span data-ttu-id="75d49-1171">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-1171">-or-</span></span> 
<span data-ttu-id="75d49-1172">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1172">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, char[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, char[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Char()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, cli::array &lt;char&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * char[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1173">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1173">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1174">삽입할 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1174">The character array to insert.</span></span></param>
        <summary><span data-ttu-id="75d49-1175">지정된 유니코드 문자 배열의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1175">Inserts the string representation of a specified array of Unicode characters into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1176">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1176">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1177">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1177">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1178">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1178">The capacity of this instance is adjusted as needed.</span></span>  
  
 <span data-ttu-id="75d49-1179">하는 경우 `value` 됩니다 `null`는 <xref:System.Text.StringBuilder> 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1179">If `value` is `null`, the <xref:System.Text.StringBuilder> is not changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1180">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1180">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1181"><paramref name="index" />가 0보다 작거나 이 인스턴스 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1181"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span>  
  
<span data-ttu-id="75d49-1182">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-1182">-or-</span></span> 
<span data-ttu-id="75d49-1183">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1183">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Decimal) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * decimal -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1184">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1184">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1185">삽입할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1185">The value to insert.</span></span></param>
        <summary><span data-ttu-id="75d49-1186">10진수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1186">Inserts the string representation of a decimal number into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1187">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1187">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1188"><xref:System.Decimal.ToString%2A?displayProperty=nameWithType> 문자열 표현을 가져오는 데 사용 됩니다 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1188"><xref:System.Decimal.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="75d49-1189">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1189">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1190">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1190">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1191">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1191">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1192"><paramref name="index" />가 0보다 작거나 이 인스턴스 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1192"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="75d49-1193">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1193">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-1194">에 [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 및 이전 버전에서는이 메서드를 호출 했습니다는 <see cref="T:System.ArgumentOutOfRangeException" /> 삽입 하는 경우 <paramref name="value" /> 개체의 총 길이를 초과 하면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1194">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="75d49-1195">로 시작 합니다 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 메서드에서 throw는 <see cref="T:System.OutOfMemoryException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1195">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Double) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, double value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * double -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1196">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1196">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1197">삽입할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1197">The value to insert.</span></span></param>
        <summary><span data-ttu-id="75d49-1198">배정밀도 부동 소수점 숫자의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1198">Inserts the string representation of a double-precision floating-point number into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1199">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1199">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1200"><xref:System.Double.ToString%2A?displayProperty=nameWithType> 문자열 표현을 가져오는 데 사용 됩니다 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1200"><xref:System.Double.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="75d49-1201">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1201">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1202">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1202">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1203">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1203">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1204"><paramref name="index" />가 0보다 작거나 이 인스턴스 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1204"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="75d49-1205">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1205">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-1206">에 [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 및 이전 버전에서는이 메서드를 호출 했습니다는 <see cref="T:System.ArgumentOutOfRangeException" /> 삽입 하는 경우 <paramref name="value" /> 개체의 총 길이를 초과 하면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1206">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="75d49-1207">로 시작 합니다 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 메서드에서 throw는 <see cref="T:System.OutOfMemoryException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1207">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Short) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, short value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * int16 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1208">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1208">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1209">삽입할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1209">The value to insert.</span></span></param>
        <summary><span data-ttu-id="75d49-1210">지정된 16비트 부호 있는 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1210">Inserts the string representation of a specified 16-bit signed integer into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1211">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1211">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1212"><xref:System.Int16.ToString%2A?displayProperty=nameWithType> 문자열 표현을 가져오는 데 사용 됩니다 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1212"><xref:System.Int16.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="75d49-1213">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1213">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1214">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1214">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1215">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1215">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1216"><paramref name="index" />가 0보다 작거나 이 인스턴스 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1216"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="75d49-1217">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1217">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-1218">에 [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 및 이전 버전에서는이 메서드를 호출 했습니다는 <see cref="T:System.ArgumentOutOfRangeException" /> 삽입 하는 경우 <paramref name="value" /> 개체의 총 길이를 초과 하면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1218">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="75d49-1219">로 시작 합니다 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 메서드에서 throw는 <see cref="T:System.OutOfMemoryException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1219">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, int value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1220">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1220">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1221">삽입할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1221">The value to insert.</span></span></param>
        <summary><span data-ttu-id="75d49-1222">지정된 32비트 부호 있는 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1222">Inserts the string representation of a specified 32-bit signed integer into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1223">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1223">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1224"><xref:System.Int32.ToString%2A?displayProperty=nameWithType> 문자열 표현을 가져오는 데 사용 됩니다 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1224"><xref:System.Int32.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="75d49-1225">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1225">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1226">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1226">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1227">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1227">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1228"><paramref name="index" />가 0보다 작거나 이 인스턴스 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1228"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="75d49-1229">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1229">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-1230">에 [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 및 이전 버전에서는이 메서드를 호출 했습니다는 <see cref="T:System.ArgumentOutOfRangeException" /> 삽입 하는 경우 <paramref name="value" /> 개체의 총 길이를 초과 하면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1230">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="75d49-1231">로 시작 합니다 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 메서드에서 throw는 <see cref="T:System.OutOfMemoryException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1231">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Long) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, long value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * int64 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1232">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1232">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1233">삽입할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1233">The value to insert.</span></span></param>
        <summary><span data-ttu-id="75d49-1234">부호 있는 64비트 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1234">Inserts the string representation of a 64-bit signed integer into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1235">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1235">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1236"><xref:System.Int64.ToString%2A?displayProperty=nameWithType> 문자열 표현을 가져오는 데 사용 됩니다 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1236"><xref:System.Int64.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="75d49-1237">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1237">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1238">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1238">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1239">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1239">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1240"><paramref name="index" />가 0보다 작거나 이 인스턴스 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1240"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="75d49-1241">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1241">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-1242">에 [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 및 이전 버전에서는이 메서드를 호출 했습니다는 <see cref="T:System.ArgumentOutOfRangeException" /> 삽입 하는 경우 <paramref name="value" /> 개체의 총 길이를 초과 하면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1242">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="75d49-1243">로 시작 합니다 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 메서드에서 throw는 <see cref="T:System.OutOfMemoryException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1243">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1244">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1244">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1245">삽입할 개체이거나 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1245">The object to insert, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="75d49-1246">개체의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1246">Inserts the string representation of an object into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1247">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1247">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1248"><xref:System.Object.ToString%2A?displayProperty=nameWithType> 문자열 표현을 가져오는 데 사용 됩니다 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1248"><xref:System.Object.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="75d49-1249">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1249">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1250">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1250">The capacity of this instance is adjusted as needed.</span></span>  
  
 <span data-ttu-id="75d49-1251">하는 경우 `value` 는 `null`를이 인스턴스의 값이 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1251">If `value` is `null`, the value of this instance is unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1252">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1252">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1253"><paramref name="index" />가 0보다 작거나 이 인스턴스 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1253"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="75d49-1254">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1254">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-1255">에 [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 및 이전 버전에서는이 메서드를 호출 했습니다는 <see cref="T:System.ArgumentOutOfRangeException" /> 삽입 하는 경우 <paramref name="value" /> 개체의 총 길이를 초과 하면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1255">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="75d49-1256">로 시작 합니다 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 메서드에서 throw는 <see cref="T:System.OutOfMemoryException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1256">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As ReadOnlySpan(Of Char)) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * ReadOnlySpan&lt;char&gt; -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As SByte) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::SByte value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * sbyte -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1257">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1257">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1258">삽입할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1258">The value to insert.</span></span></param>
        <summary><span data-ttu-id="75d49-1259">지정된 8비트 부호 있는 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1259">Inserts the string representation of a specified 8-bit signed integer into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1260">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1260">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1261"><xref:System.SByte.ToString%2A?displayProperty=nameWithType> 문자열 표현을 가져오는 데 사용 됩니다 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1261"><xref:System.SByte.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="75d49-1262">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1262">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1263">필요에 따라 용량이 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1263">The capacity is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1264">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1264">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1265"><paramref name="index" />가 0보다 작거나 이 인스턴스 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1265"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="75d49-1266">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1266">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-1267">에 [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 및 이전 버전에서는이 메서드를 호출 했습니다는 <see cref="T:System.ArgumentOutOfRangeException" /> 삽입 하는 경우 <paramref name="value" /> 개체의 총 길이를 초과 하면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1267">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="75d49-1268">로 시작 합니다 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 메서드에서 throw는 <see cref="T:System.OutOfMemoryException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1268">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Single) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, float value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * single -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1269">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1269">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1270">삽입할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1270">The value to insert.</span></span></param>
        <summary><span data-ttu-id="75d49-1271">단정밀도 부동 소수점 숫자의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1271">Inserts the string representation of a single-precision floating point number into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1272">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1272">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1273"><xref:System.Single.ToString%2A?displayProperty=nameWithType> 문자열 표현을 가져오는 데 사용 됩니다 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1273"><xref:System.Single.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="75d49-1274">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1274">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1275">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1275">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1276">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1276">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1277"><paramref name="index" />가 0보다 작거나 이 인스턴스 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1277"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="75d49-1278">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1278">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-1279">에 [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 및 이전 버전에서는이 메서드를 호출 했습니다는 <see cref="T:System.ArgumentOutOfRangeException" /> 삽입 하는 경우 <paramref name="value" /> 개체의 총 길이를 초과 하면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1279">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="75d49-1280">로 시작 합니다 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 메서드에서 throw는 <see cref="T:System.OutOfMemoryException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1280">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As String) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1281">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1281">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1282">삽입할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1282">The string to insert.</span></span></param>
        <summary><span data-ttu-id="75d49-1283">문자열을 지정한 인덱스에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1283">Inserts a string into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1284">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1284">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1285">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1285">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1286">필요에 따라 용량이 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1286">The capacity is adjusted as needed.</span></span>  
  
 <span data-ttu-id="75d49-1287">이 인스턴스의 <xref:System.Text.StringBuilder> 경우 변경 되지 않습니다 `value` 됩니다 `null`, 또는 `value` 아닙니다 `null` 이지만 해당 길이 0입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1287">This instance of <xref:System.Text.StringBuilder> is not changed if `value` is `null`, or `value` is not `null` but its length is zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1288">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1288">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1289"><paramref name="index" />가 0보다 작거나 이 인스턴스의 현재 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1289"><paramref name="index" /> is less than zero or greater than the current length of this instance.</span></span>  
  
<span data-ttu-id="75d49-1290">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-1290">-or-</span></span> 
<span data-ttu-id="75d49-1291">이 <see cref="T:System.Text.StringBuilder" /> 개체의 현재 길이에 <paramref name="value" />의 길이를 더한 값이 <see cref="P:System.Text.StringBuilder.MaxCapacity" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1291">The current length of this <see cref="T:System.Text.StringBuilder" /> object plus the length of <paramref name="value" /> exceeds <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As UShort) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::UInt16 value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * uint16 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1292">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1292">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1293">삽입할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1293">The value to insert.</span></span></param>
        <summary><span data-ttu-id="75d49-1294">부호 없는 16비트 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1294">Inserts the string representation of a 16-bit unsigned integer into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1295">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1295">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1296"><xref:System.UInt16.ToString%2A?displayProperty=nameWithType> 문자열 표현을 가져오는 데 사용 됩니다 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1296"><xref:System.UInt16.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="75d49-1297">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1297">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1298">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1298">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1299">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1299">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1300"><paramref name="index" />가 0보다 작거나 이 인스턴스 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1300"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="75d49-1301">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1301">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-1302">에 [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 및 이전 버전에서는이 메서드를 호출 했습니다는 <see cref="T:System.ArgumentOutOfRangeException" /> 삽입 하는 경우 <paramref name="value" /> 개체의 총 길이를 초과 하면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1302">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="75d49-1303">로 시작 합니다 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 메서드에서 throw는 <see cref="T:System.OutOfMemoryException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1303">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As UInteger) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * uint32 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1304">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1304">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1305">삽입할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1305">The value to insert.</span></span></param>
        <summary><span data-ttu-id="75d49-1306">부호 없는 32비트 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1306">Inserts the string representation of a 32-bit unsigned integer into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1307">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1307">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1308"><xref:System.UInt32.ToString%2A?displayProperty=nameWithType> 문자열 표현을 가져오는 데 사용 됩니다 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1308"><xref:System.UInt32.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="75d49-1309">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1309">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1310">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1310">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1311">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1311">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1312"><paramref name="index" />가 0보다 작거나 이 인스턴스 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1312"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="75d49-1313">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1313">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-1314">에 [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 및 이전 버전에서는이 메서드를 호출 했습니다는 <see cref="T:System.ArgumentOutOfRangeException" /> 삽입 하는 경우 <paramref name="value" /> 개체의 총 길이를 초과 하면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1314">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="75d49-1315">로 시작 합니다 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 메서드에서 throw는 <see cref="T:System.OutOfMemoryException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1315">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As ULong) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * uint64 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1316">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1316">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1317">삽입할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1317">The value to insert.</span></span></param>
        <summary><span data-ttu-id="75d49-1318">부호 없는 64비트 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1318">Inserts the string representation of a 64-bit unsigned integer into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1319">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1319">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1320"><xref:System.UInt64.ToString%2A?displayProperty=nameWithType> 문자열 표현을 가져오는 데 사용 됩니다 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1320"><xref:System.UInt64.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="75d49-1321">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1321">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1322">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1322">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1323">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1323">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1324"><paramref name="index" />가 0보다 작거나 이 인스턴스 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1324"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="75d49-1325">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1325">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="75d49-1326">에 [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 및 이전 버전에서는이 메서드를 호출 했습니다는 <see cref="T:System.ArgumentOutOfRangeException" /> 삽입 하는 경우 <paramref name="value" /> 개체의 총 길이를 초과 하면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1326">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="75d49-1327">로 시작 합니다 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 메서드에서 throw는 <see cref="T:System.OutOfMemoryException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1327">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, string value, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, string value, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As String, count As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::String ^ value, int count);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1328">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1328">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1329">삽입할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1329">The string to insert.</span></span></param>
        <param name="count"><span data-ttu-id="75d49-1330"><paramref name="value" />를 삽입할 횟수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1330">The number of times to insert <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="75d49-1331">지정된 하나 이상의 문자열의 복사본을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1331">Inserts one or more copies of a specified string into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1332">삽입 작업이 완료한 후에 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1332">A reference to this instance after insertion has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1333">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1333">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1334">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1334">The capacity of this instance is adjusted as needed.</span></span>  
  
 <span data-ttu-id="75d49-1335">이 <xref:System.Text.StringBuilder> 경우 개체는 변경 되지 않습니다 `value` 됩니다 `null`, `value` 아닙니다 `null` 이지만 해당 길이 0 또는 `count` 0입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1335">This <xref:System.Text.StringBuilder> object is not changed if `value` is `null`, `value` is not `null` but its length is zero, or `count` is zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1336">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1336">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1337"><paramref name="index" />가 0보다 작거나 이 인스턴스의 현재 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1337"><paramref name="index" /> is less than zero or greater than the current length of this instance.</span></span>  
  
<span data-ttu-id="75d49-1338">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-1338">-or-</span></span> 
 <span data-ttu-id="75d49-1339"><paramref name="count" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="75d49-1339"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="75d49-1340">이 <see cref="T:System.Text.StringBuilder" /> 개체의 현재 길이에 <paramref name="value" />의 길이를 더한 다음 <paramref name="count" />를 곱한 값이 <see cref="P:System.Text.StringBuilder.MaxCapacity" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1340">The current length of this <see cref="T:System.Text.StringBuilder" /> object plus the length of <paramref name="value" /> times <paramref name="count" /> exceeds <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, char[] value, int startIndex, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, char[] value, int32 startIndex, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Char(), startIndex As Integer, charCount As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, cli::array &lt;char&gt; ^ value, int startIndex, int charCount);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * char[] * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value, startIndex, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="75d49-1341">삽입을 시작할 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1341">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="75d49-1342">문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1342">A character array.</span></span></param>
        <param name="startIndex"><span data-ttu-id="75d49-1343"><paramref name="value" /> 내의 시작 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1343">The starting index within <paramref name="value" />.</span></span></param>
        <param name="charCount"><span data-ttu-id="75d49-1344">삽입할 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1344">The number of characters to insert.</span></span></param>
        <summary><span data-ttu-id="75d49-1345">유니코드 문자의 지정된 하위 배열에 대한 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1345">Inserts the string representation of a specified subarray of Unicode characters into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="75d49-1346">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1346">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1347">새 텍스트에 대 한 공간을 만들기 위해 기존 문자를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1347">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="75d49-1348">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1348">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1349">다음 예제는 <xref:System.Text.StringBuilder.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1349">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75d49-1350"><paramref name="value" />가 <see langword="null" />이고 <paramref name="startIndex" /> 및 <paramref name="charCount" />는 0이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1350"><paramref name="value" /> is <see langword="null" />, and <paramref name="startIndex" /> and <paramref name="charCount" /> are not zero.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1351"><paramref name="index" />, <paramref name="startIndex" /> 또는 <paramref name="charCount" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1351"><paramref name="index" />, <paramref name="startIndex" />, or <paramref name="charCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="75d49-1352">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-1352">-or-</span></span> 
 <span data-ttu-id="75d49-1353"><paramref name="index" />가 이 인스턴스의 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1353"><paramref name="index" /> is greater than the length of this instance.</span></span>  
  
<span data-ttu-id="75d49-1354">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-1354">-or-</span></span> 
 <span data-ttu-id="75d49-1355"><paramref name="startIndex" />+<paramref name="charCount" />가 <paramref name="value" /> 내의 위치가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1355"><paramref name="startIndex" /> plus <paramref name="charCount" /> is not a position within <paramref name="value" />.</span></span>  
  
<span data-ttu-id="75d49-1356">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-1356">-or-</span></span> 
<span data-ttu-id="75d49-1357">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1357">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Text.StringBuilder.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Length : int with get, set" Usage="System.Text.StringBuilder.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="75d49-1358">현재 <see cref="T:System.Text.StringBuilder" /> 개체의 길이를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1358">Gets or sets the length of the current <see cref="T:System.Text.StringBuilder" /> object.</span></span></summary>
        <value><span data-ttu-id="75d49-1359">이 인스턴스의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1359">The length of this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1360">길이 <xref:System.Text.StringBuilder> 개체의 해당 번호로 정의 됩니다 <xref:System.Char> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1360">The length of a <xref:System.Text.StringBuilder> object is defined by its number of <xref:System.Char> objects.</span></span>  
  
 <span data-ttu-id="75d49-1361">같은 합니다 <xref:System.String.Length%2A?displayProperty=nameWithType> 속성을 <xref:System.Text.StringBuilder.Length%2A> 속성을 현재 문자열 개체의 길이 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1361">Like the <xref:System.String.Length%2A?displayProperty=nameWithType> property, the <xref:System.Text.StringBuilder.Length%2A> property indicates the length of the current string object.</span></span> <span data-ttu-id="75d49-1362">달리 합니다 <xref:System.String.Length%2A?displayProperty=nameWithType> 속성은 읽기 전용 합니다 <xref:System.Text.StringBuilder.Length%2A> 속성에 저장 된 문자열의 길이 수정할 수 있습니다는 <xref:System.Text.StringBuilder> 개체.</span><span class="sxs-lookup"><span data-stu-id="75d49-1362">Unlike the <xref:System.String.Length%2A?displayProperty=nameWithType> property, which is read-only, the <xref:System.Text.StringBuilder.Length%2A> property allows you to modify the length of the string stored to the <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="75d49-1363">지정 된 길이 현재 현재 길이 보다 작은 경우 <xref:System.Text.StringBuilder> 개체는 지정 된 길이로 잘립니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1363">If the specified length is less than the current length, the current <xref:System.Text.StringBuilder> object is truncated to the specified length.</span></span> <span data-ttu-id="75d49-1364">지정 된 길이 현재 문자열 값의 끝, 현재 길이 보다 큰 경우 <xref:System.Text.StringBuilder> 개체 유니코드 NULL 문자로 채워집니다 (U + 0000)입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1364">If the specified length is greater than the current length, the end of the string value of the current <xref:System.Text.StringBuilder> object is padded with the Unicode NULL character (U+0000).</span></span>  
  
 <span data-ttu-id="75d49-1365">지정 된 길이 현재 용량 보다 큰 경우 <xref:System.Text.StringBuilder.Capacity%2A> 것이 보다 크거나 같은 지정 된 길이 늘립니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1365">If the specified length is greater than the current capacity, <xref:System.Text.StringBuilder.Capacity%2A> increases so that it is greater than or equal to the specified length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1366">다음 예제는 <xref:System.Text.StringBuilder.Length%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1366">The following example demonstrates the <xref:System.Text.StringBuilder.Length%2A> property.</span></span>  
  
 [!code-cpp[stringbuilder.ensurecapacity#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CPP/cap.cpp#1)]
 [!code-csharp[stringbuilder.ensurecapacity#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CS/cap.cs#1)]
 [!code-vb[stringbuilder.ensurecapacity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.ensurecapacity/VB/cap.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1367">설정 작업에 지정된 값이 0보다 작거나 <see cref="P:System.Text.StringBuilder.MaxCapacity" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1367">The value specified for a set operation is less than zero or greater than <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxCapacity">
      <MemberSignature Language="C#" Value="public int MaxCapacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCapacity" />
      <MemberSignature Language="DocId" Value="P:System.Text.StringBuilder.MaxCapacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxCapacity { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxCapacity : int" Usage="System.Text.StringBuilder.MaxCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="75d49-1368">이 인스턴스의 최대 용량을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1368">Gets the maximum capacity of this instance.</span></span></summary>
        <value><span data-ttu-id="75d49-1369">이 인스턴스가 보유할 수 있는 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1369">The maximum number of characters this instance can hold.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1370">이 구현에 대 한 최대 용량은 <xref:System.Int32.MaxValue?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1370">The maximum capacity for this implementation is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="75d49-1371">그러나이 값은 구현 별로 및 다른 개 이상 구현에서 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1371">However, this value is implementation-specific and might be different in other or later implementations.</span></span> <span data-ttu-id="75d49-1372">최대 용량을 명시적으로 설정할 수는 <xref:System.Text.StringBuilder> 를 호출 하 여 개체를 <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1372">You can explicitly set the maximum capacity of a <xref:System.Text.StringBuilder> object by calling the <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29> constructor.</span></span>  
  
<span data-ttu-id="75d49-1373">.NET Core 및.NET Framework 4.0 및 이후 버전에서는 인스턴스화할 때 합니다 <xref:System.Text.StringBuilder> 호출 하 여 개체를 <xref:System.Text.StringBuilder.%23ctor(System.Int32,System.Int32)> 생성자, 길이 및 용량을 합니다 <xref:System.Text.StringBuilder> 인스턴스 값 이상으로 증가할 수 해당 <xref:System.Text.StringBuilder.MaxCapacity> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1373">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <xref:System.Text.StringBuilder> object by calling the <xref:System.Text.StringBuilder.%23ctor(System.Int32,System.Int32)> constructor, both the length and the capacity of the <xref:System.Text.StringBuilder> instance can grow beyond the value of its <xref:System.Text.StringBuilder.MaxCapacity> property.</span></span> <span data-ttu-id="75d49-1374">특히 호출 하는 경우 발생할 수 있습니다 합니다 <xref:System.Text.StringBuilder.Append(System.String)> 고 <xref:System.Text.StringBuilder.AppendFormat(System.String,System.Object)> 작은 문자열을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1374">This can occur particularly when you call the <xref:System.Text.StringBuilder.Append(System.String)> and <xref:System.Text.StringBuilder.AppendFormat(System.String,System.Object)> methods to append small strings.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Remove (int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Remove(int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (startIndex As Integer, length As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Remove(int startIndex, int length);" />
      <MemberSignature Language="F#" Value="member this.Remove : int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Remove (startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="75d49-1375">이 인스턴스 내에서 제거를 시작할 0에서 시작하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1375">The zero-based position in this instance where removal begins.</span></span></param>
        <param name="length"><span data-ttu-id="75d49-1376">제거할 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1376">The number of characters to remove.</span></span></param>
        <summary><span data-ttu-id="75d49-1377">이 인스턴스에서 지정된 문자 범위를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1377">Removes the specified range of characters from this instance.</span></span></summary>
        <returns><span data-ttu-id="75d49-1378">삭제 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1378">A reference to this instance after the excise operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1379">현재 메서드는 현재 인스턴스에서 지정된 된 범위의 문자를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1379">The current method removes the specified range of characters from the current instance.</span></span> <span data-ttu-id="75d49-1380">에 있는 문자 (`startIndex` + `length`)으로 이동 됩니다 `startIndex`, 및 현재 인스턴스의 문자열 값으로 단축 됩니다 `length`합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1380">The characters at (`startIndex` + `length`) are moved to `startIndex`, and the string value of the current instance is shortened by `length`.</span></span> <span data-ttu-id="75d49-1381">현재 인스턴스의 용량을 받지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1381">The capacity of the current instance is unaffected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="75d49-1382">합니다 <xref:System.Text.StringBuilder.Remove%2A> 현재 값을 수정 하는 메서드 <xref:System.Text.StringBuilder> 인스턴스 및 해당 인스턴스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1382">The <xref:System.Text.StringBuilder.Remove%2A> method modifies the value of the current <xref:System.Text.StringBuilder> instance and returns that instance.</span></span> <span data-ttu-id="75d49-1383">만들기 및 새 반환 되지 않습니다 <xref:System.Text.StringBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1383">It does not create and return a new <xref:System.Text.StringBuilder> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1384">다음 예제는 <xref:System.Text.StringBuilder.Remove%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1384">The following example demonstrates the <xref:System.Text.StringBuilder.Remove%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.remove#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.remove/CPP/remove.cpp#1)]
 [!code-csharp[stringbuilder.remove#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.remove/CS/remove.cs#1)]
 [!code-vb[stringbuilder.remove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.remove/VB/remove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1385"><paramref name="startIndex" /> 또는 <paramref name="length" />가 0보다 작거나 <paramref name="startIndex" /> + <paramref name="length" />가 이 인스턴스의 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1385">If <paramref name="startIndex" /> or <paramref name="length" /> is less than zero, or <paramref name="startIndex" /> + <paramref name="length" /> is greater than the length of this instance.</span></span></exception>
        <altmember cref="M:System.Text.StringBuilder.Replace(System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="75d49-1386">이 인스턴스에서 발견되는 지정된 문자 또는 문자열을 지정된 다른 문자 또는 문자열로 모두 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1386">Replaces all occurrences of a specified character or string in this instance with another specified character or string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Replace (char oldChar, char newChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Replace(char oldChar, char newChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Replace(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldChar As Char, newChar As Char) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Replace(char oldChar, char newChar);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * char -&gt; System.Text.StringBuilder" Usage="stringBuilder.Replace (oldChar, newChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChar" Type="System.Char" />
        <Parameter Name="newChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="oldChar"><span data-ttu-id="75d49-1387">바꿀 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1387">The character to replace.</span></span></param>
        <param name="newChar"><span data-ttu-id="75d49-1388"><paramref name="oldChar" />를 바꾸는 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1388">The character that replaces <paramref name="oldChar" />.</span></span></param>
        <summary><span data-ttu-id="75d49-1389">이 인스턴스에서 발견되는 지정된 문자를 지정된 다른 문자로 모두 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1389">Replaces all occurrences of a specified character in this instance with another specified character.</span></span></summary>
        <returns><span data-ttu-id="75d49-1390"><paramref name="oldChar" />가 <paramref name="newChar" />로 바뀐 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1390">A reference to this instance with <paramref name="oldChar" /> replaced by <paramref name="newChar" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1391">항목을 식별 하는 서 수, 대/소문자 구분 비교를 수행 하는이 메서드 `oldChar` 현재 인스턴스에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1391">This method performs an ordinal, case-sensitive comparison to identify occurrences of `oldChar` in the current instance.</span></span> <span data-ttu-id="75d49-1392">현재 크기 <xref:System.Text.StringBuilder> 인스턴스는 교체 후 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1392">The size of the current <xref:System.Text.StringBuilder> instance is unchanged after the replacement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1393">다음 예제는 <xref:System.Text.StringBuilder.Replace%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1393">The following example demonstrates the <xref:System.Text.StringBuilder.Replace%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.replace/CPP/replace.cpp#1)]
 [!code-csharp[stringbuilder.replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.replace/CS/replace.cs#1)]
 [!code-vb[stringbuilder.replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.replace/VB/replace.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Replace (string oldValue, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Replace(string oldValue, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Replace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As String, newValue As String) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Replace(System::String ^ oldValue, System::String ^ newValue);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string -&gt; System.Text.StringBuilder" Usage="stringBuilder.Replace (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.String" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldValue"><span data-ttu-id="75d49-1394">바꿀 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1394">The string to replace.</span></span></param>
        <param name="newValue"><span data-ttu-id="75d49-1395"><paramref name="oldValue" />를 바꾸는 문자열이거나 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1395">The string that replaces <paramref name="oldValue" />, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="75d49-1396">이 인스턴스에서 발견되는 지정된 문자열을 지정된 다른 문자열로 모두 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1396">Replaces all occurrences of a specified string in this instance with another specified string.</span></span></summary>
        <returns><span data-ttu-id="75d49-1397"><paramref name="oldValue" />의 모든 인스턴스가 <paramref name="newValue" />로 바뀐 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1397">A reference to this instance with all instances of <paramref name="oldValue" /> replaced by <paramref name="newValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1398">항목을 식별 하는 서 수, 대/소문자 구분 비교를 수행 하는이 메서드 `oldValue` 현재 인스턴스에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1398">This method performs an ordinal, case-sensitive comparison to identify occurrences of `oldValue` in the current instance.</span></span> <span data-ttu-id="75d49-1399">하는 경우 `newValue` 됩니다 `null` 또는 <xref:System.String.Empty?displayProperty=nameWithType>, 모든 `oldValue` 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1399">If `newValue` is `null` or <xref:System.String.Empty?displayProperty=nameWithType>, all occurrences of `oldValue` are removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1400">다음 예제는 <xref:System.Text.StringBuilder.Replace%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1400">The following example demonstrates the <xref:System.Text.StringBuilder.Replace%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.replace/CPP/replace.cpp#1)]
 [!code-csharp[stringbuilder.replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.replace/CS/replace.cs#1)]
 [!code-vb[stringbuilder.replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.replace/VB/replace.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75d49-1401"><paramref name="oldValue" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1401"><paramref name="oldValue" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="75d49-1402"><paramref name="oldValue" />의 길이가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1402">The length of <paramref name="oldValue" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1403">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1403">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <altmember cref="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Replace (char oldChar, char newChar, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Replace(char oldChar, char newChar, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldChar As Char, newChar As Char, startIndex As Integer, count As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Replace(char oldChar, char newChar, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * char * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Replace (oldChar, newChar, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChar" Type="System.Char" />
        <Parameter Name="newChar" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oldChar"><span data-ttu-id="75d49-1404">바꿀 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1404">The character to replace.</span></span></param>
        <param name="newChar"><span data-ttu-id="75d49-1405"><paramref name="oldChar" />를 바꾸는 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1405">The character that replaces <paramref name="oldChar" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="75d49-1406">부분 문자열이 시작되는 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1406">The position in this instance where the substring begins.</span></span></param>
        <param name="count"><span data-ttu-id="75d49-1407">부분 문자열의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1407">The length of the substring.</span></span></param>
        <summary><span data-ttu-id="75d49-1408">이 인스턴스의 부분 문자열에서 발견되는 지정된 문자를 지정된 다른 문자로 모두 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1408">Replaces, within a substring of this instance, all occurrences of a specified character with another specified character.</span></span></summary>
        <returns><span data-ttu-id="75d49-1409"><paramref name="oldChar" />가 <paramref name="startIndex" />에서부터 <paramref name="startIndex" /> + <paramref name="count" /> -1의 범위에 있는 <paramref name="newChar" />로 바뀐 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1409">A reference to this instance with <paramref name="oldChar" /> replaced by <paramref name="newChar" /> in the range from <paramref name="startIndex" /> to <paramref name="startIndex" /> + <paramref name="count" /> -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1410">항목을 식별 하는 서 수, 대/소문자 구분 비교를 수행 하는이 메서드 `oldChar` 현재 인스턴스에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1410">This method performs an ordinal, case-sensitive comparison to identify occurrences of `oldChar` in the current instance.</span></span> <span data-ttu-id="75d49-1411">현재 크기 <xref:System.Text.StringBuilder> 개체는 교체 후 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1411">The size of the current <xref:System.Text.StringBuilder> object is unchanged after the replacement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1412">다음 예제는 <xref:System.Text.StringBuilder.Replace%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1412">The following example demonstrates the <xref:System.Text.StringBuilder.Replace%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.replace/CPP/replace.cpp#1)]
 [!code-csharp[stringbuilder.replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.replace/CS/replace.cs#1)]
 [!code-vb[stringbuilder.replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.replace/VB/replace.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1413"><paramref name="startIndex" /> + <paramref name="count" />가 이 인스턴스의 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1413"><paramref name="startIndex" /> + <paramref name="count" /> is greater than the length of the value of this instance.</span></span>  
  
<span data-ttu-id="75d49-1414">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-1414">-or-</span></span> 
 <span data-ttu-id="75d49-1415"><paramref name="startIndex" /> 또는 <paramref name="count" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1415"><paramref name="startIndex" /> or <paramref name="count" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Replace (string oldValue, string newValue, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Replace(string oldValue, string newValue, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As String, newValue As String, startIndex As Integer, count As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Replace(System::String ^ oldValue, System::String ^ newValue, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Replace (oldValue, newValue, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.String" />
        <Parameter Name="newValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oldValue"><span data-ttu-id="75d49-1416">바꿀 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1416">The string to replace.</span></span></param>
        <param name="newValue"><span data-ttu-id="75d49-1417"><paramref name="oldValue" />를 바꾸는 문자열이거나 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1417">The string that replaces <paramref name="oldValue" />, or <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="75d49-1418">부분 문자열이 시작되는 인스턴스 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1418">The position in this instance where the substring begins.</span></span></param>
        <param name="count"><span data-ttu-id="75d49-1419">부분 문자열의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1419">The length of the substring.</span></span></param>
        <summary><span data-ttu-id="75d49-1420">이 인스턴스의 부분 문자열에서 발견되는 지정된 문자열을 지정된 다른 문자열로 모두 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1420">Replaces, within a substring of this instance, all occurrences of a specified string with another specified string.</span></span></summary>
        <returns><span data-ttu-id="75d49-1421"><paramref name="oldValue" />의 모든 인스턴스가 <paramref name="startIndex" />에서 <paramref name="startIndex" /> + <paramref name="count" /> - 1 범위에 있는 <paramref name="newValue" />로 바뀐 이 인스턴스에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1421">A reference to this instance with all instances of <paramref name="oldValue" /> replaced by <paramref name="newValue" /> in the range from <paramref name="startIndex" /> to <paramref name="startIndex" /> + <paramref name="count" /> - 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1422">항목을 식별 하는 서 수, 대/소문자 구분 비교를 수행 하는이 메서드 `oldValue` 에서 지정된 된 부분 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1422">This method performs an ordinal, case-sensitive comparison to identify occurrences of `oldValue` in the specified substring.</span></span> <span data-ttu-id="75d49-1423">하는 경우 `newValue` 됩니다 `null` 또는 <xref:System.String.Empty?displayProperty=nameWithType>, 모든 `oldValue` 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1423">If `newValue` is `null` or <xref:System.String.Empty?displayProperty=nameWithType>, all occurrences of `oldValue` are removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1424">다음 예제는 <xref:System.Text.StringBuilder.Replace%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75d49-1424">The following example demonstrates the <xref:System.Text.StringBuilder.Replace%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.replace/CPP/replace.cpp#1)]
 [!code-csharp[stringbuilder.replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.replace/CS/replace.cs#1)]
 [!code-vb[stringbuilder.replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.replace/VB/replace.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75d49-1425"><paramref name="oldValue" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1425"><paramref name="oldValue" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="75d49-1426"><paramref name="oldValue" />의 길이가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1426">The length of <paramref name="oldValue" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1427"><paramref name="startIndex" /> 또는 <paramref name="count" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1427"><paramref name="startIndex" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="75d49-1428">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-1428">-or-</span></span> 
 <span data-ttu-id="75d49-1429"><paramref name="startIndex" /> + <paramref name="count" />는 문자 위치가 이 인스턴스 안에 없음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1429"><paramref name="startIndex" /> plus <paramref name="count" /> indicates a character position not within this instance.</span></span>  
  
<span data-ttu-id="75d49-1430">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-1430">-or-</span></span> 
<span data-ttu-id="75d49-1431">이 인스턴스의 값이 커지면 <see cref="P:System.Text.StringBuilder.MaxCapacity" />가 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1431">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <altmember cref="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="75d49-1432">serialization 정보로 채울 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1432">The object to populate with serialization information.</span></span></param>
        <param name="context"><span data-ttu-id="75d49-1433">serialize된 데이터를 저장 및 검색할 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1433">The place to store and retrieve serialized data.</span></span> <span data-ttu-id="75d49-1434">나중에 사용하기 위해 예약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1434">Reserved for future use.</span></span></param>
        <summary><span data-ttu-id="75d49-1435">현재 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 deserialize하는 데 필요한 데이터로 <see cref="T:System.Text.StringBuilder" /> 개체를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1435">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data necessary to deserialize the current <see cref="T:System.Text.StringBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1436">`context` 매개 변수는 나중에 사용 하도록 예약 되어 및이 작업에 참여 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1436">The `context` parameter is reserved for future use and does not participate in this operation.</span></span>  
  
 <span data-ttu-id="75d49-1437">자세한 내용은 <xref:System.Runtime.Serialization.SerializationInfo.AddValue%28System.String%2CSystem.Object%2CSystem.Type%29?displayProperty=nameWithType> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="75d49-1437">For more information, see the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%28System.String%2CSystem.Object%2CSystem.Type%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75d49-1438"><paramref name="info" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1438"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="75d49-1439">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1439">requires full trust for the immediate caller.</span></span> <span data-ttu-id="75d49-1440">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1440">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="75d49-1441"><see cref="T:System.Text.StringBuilder" />의 값을 <see cref="T:System.String" />으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1441">Converts the value of a <see cref="T:System.Text.StringBuilder" /> to a <see cref="T:System.String" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="stringBuilder.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="75d49-1442">이 인스턴스의 값을 <see cref="T:System.String" />으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1442">Converts the value of this instance to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="75d49-1443">이 인스턴스와 같은 값을 가진 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1443">A string whose value is the same as this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1444">호출 해야 합니다는 <xref:System.Text.StringBuilder.ToString%2A> 변환 하는 방법을 <xref:System.Text.StringBuilder> 개체를 <xref:System.String> 표시 되는 문자열을 전달 하기 전에 개체를 <xref:System.Text.StringBuilder> 개체 변수가 있는 메서드를를 <xref:System.String> 매개 변수 또는 사용자 인터페이스에 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1444">You must call the <xref:System.Text.StringBuilder.ToString%2A> method to convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object before you can pass the string represented by the <xref:System.Text.StringBuilder> object to a method that has a <xref:System.String> parameter or display it in the user interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75d49-1445">다음 예제에서는 <xref:System.Text.StringBuilder.ToString%2A> 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1445">The following example demonstrates calling the <xref:System.Text.StringBuilder.ToString%2A> method.</span></span> <span data-ttu-id="75d49-1446">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Text.StringBuilder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1446">This example is part of a larger example provided for the <xref:System.Text.StringBuilder> class.</span></span>  
  
 [!code-cpp[StringBuilder#5](~/samples/snippets/cpp/VS_Snippets_CLR/StringBuilder/cpp/StringBuilder.cpp#5)]
 [!code-csharp[StringBuilder#5](~/samples/snippets/csharp/VS_Snippets_CLR/StringBuilder/CS/StringBuilder.cs#5)]
 [!code-vb[StringBuilder#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringBuilder/VB/StringBuilder.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (startIndex As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(int startIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : int * int -&gt; string" Usage="stringBuilder.ToString (startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="75d49-1447">이 인스턴스에 있는 부분 문자열의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1447">The starting position of the substring in this instance.</span></span></param>
        <param name="length"><span data-ttu-id="75d49-1448">부분 문자열의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1448">The length of the substring.</span></span></param>
        <summary><span data-ttu-id="75d49-1449">이 인스턴스의 부분 문자열 값을 <see cref="T:System.String" />으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1449">Converts the value of a substring of this instance to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="75d49-1450">이 인스턴스의 지정된 부분 문자열과 같은 값을 가진 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1450">A string whose value is the same as the specified substring of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75d49-1451">호출 해야 합니다는 <xref:System.Text.StringBuilder.ToString%2A> 변환 하는 방법을 <xref:System.Text.StringBuilder> 개체를 <xref:System.String> 표시 되는 문자열을 전달 하기 전에 개체를 <xref:System.Text.StringBuilder> 개체 변수가 있는 메서드를를 <xref:System.String> 매개 변수 또는 사용자 인터페이스에 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1451">You must call the <xref:System.Text.StringBuilder.ToString%2A> method to convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object before you can pass the string represented by the <xref:System.Text.StringBuilder> object to a method that has a <xref:System.String> parameter or display it in the user interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="75d49-1452"><paramref name="startIndex" /> 또는 <paramref name="length" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1452"><paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span></span>  
  
<span data-ttu-id="75d49-1453">또는</span><span class="sxs-lookup"><span data-stu-id="75d49-1453">-or-</span></span> 
<span data-ttu-id="75d49-1454"><paramref name="startIndex" /> 및 <paramref name="length" />의 합계가 현재 인스턴스의 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="75d49-1454">The sum of <paramref name="startIndex" /> and <paramref name="length" /> is greater than the length of the current instance.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>