<Type Name="MemoryMarshal" FullName="System.Runtime.InteropServices.MemoryMarshal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e459e73c703de9b29f0a61072f1eede0e11fc011" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58458006" /></Metadata><TypeSignature Language="C#" Value="public static class MemoryMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MemoryMarshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.MemoryMarshal" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryMarshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryMarshal abstract sealed" />
  <TypeSignature Language="F#" Value="type MemoryMarshal = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="67d06-101"><see cref="T:System.Memory`1" />, <see cref="T:System.ReadOnlyMemory`1" />, <see cref="T:System.Span`1" /> 및 <see cref="T:System.ReadOnlySpan`1" />과 상호 운영할 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-101">Provides methods to interoperate with <see cref="T:System.Memory`1" />, <see cref="T:System.ReadOnlyMemory`1" />,  <see cref="T:System.Span`1" />, and  <see cref="T:System.ReadOnlySpan`1" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsBytes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;byte&gt; AsBytes&lt;T&gt; (ReadOnlySpan&lt;T&gt; span) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; AsBytes&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.ReadOnlySpan`1&lt;!!T&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.AsBytes``1(System.ReadOnlySpan{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsBytes(Of T As Structure) (span As ReadOnlySpan(Of T)) As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static ReadOnlySpan&lt;System::Byte&gt; AsBytes(ReadOnlySpan&lt;T&gt; span);" />
      <MemberSignature Language="F#" Value="static member AsBytes : ReadOnlySpan&lt;'T (requires 'T : struct)&gt; -&gt; ReadOnlySpan&lt;byte&gt; (requires 'T : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.AsBytes span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="System.ReadOnlySpan&lt;T&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67d06-102">읽기 전용 범위에 있는 항목의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-102">The type of items in the read-only span.</span></span></typeparam>
        <param name="span"><span data-ttu-id="67d06-103">변환할 소스 조각입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-103">The source slice to convert.</span></span></param>
        <summary><span data-ttu-id="67d06-104">한 가지 기본 형식 <paramref name="T" />의 <see cref="T:System.ReadOnlySpan`1" />을 <see langword="ReadOnlySpan&lt;Byte&gt;" />로 캐스팅합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-104">Casts a <see cref="T:System.ReadOnlySpan`1" /> of one primitive type, <paramref name="T" />, to a <see langword="ReadOnlySpan&lt;Byte&gt;" />.</span></span></summary>
        <returns><span data-ttu-id="67d06-105"><see cref="T:System.Byte" /> 형식의 읽기 전용 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-105">A read-only span of type <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="67d06-106">`T` 포인터 또는 참조를 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-106">`T` cannot contain pointers or references.</span></span> <span data-ttu-id="67d06-107">`T` 형식 안전성을 유지 하기 위해 런타임에 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-107">`T` is checked at runtime in order to preserve type safety.</span></span>  

      ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="67d06-108"><paramref name="T" />에는 참조 또는 포인터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-108"><paramref name="T" /> contains references or pointers.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="67d06-109">새 <see cref="T:System.ReadOnlySpan`1" />의 <see cref="P:System.ReadOnlySpan`1.Length" /> 속성이 <see cref="F:System.Int32.MaxValue" />를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-109">The <see cref="P:System.ReadOnlySpan`1.Length" /> property of the new <see cref="T:System.ReadOnlySpan`1" /> would exceed <see cref="F:System.Int32.MaxValue" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsBytes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Span&lt;byte&gt; AsBytes&lt;T&gt; (Span&lt;T&gt; span) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Span`1&lt;unsigned int8&gt; AsBytes&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Span`1&lt;!!T&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.AsBytes``1(System.Span{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsBytes(Of T As Structure) (span As Span(Of T)) As Span(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static Span&lt;System::Byte&gt; AsBytes(Span&lt;T&gt; span);" />
      <MemberSignature Language="F#" Value="static member AsBytes : Span&lt;'T (requires 'T : struct)&gt; -&gt; Span&lt;byte&gt; (requires 'T : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.AsBytes span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="System.Span&lt;T&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67d06-110">범위에 있는 항목의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-110">The type of items in the span.</span></span></typeparam>
        <param name="span"><span data-ttu-id="67d06-111">변환할 소스 조각입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-111">The source slice to convert.</span></span></param>
        <summary><span data-ttu-id="67d06-112">한 가지 기본 형식 <paramref name="T" />의 <see cref="T:System.Span`1" />을 <see langword="Span&lt;Byte&gt;" />로 캐스팅합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-112">Casts a <see cref="T:System.Span`1" /> of one primitive type, <paramref name="T" />, to a <see langword="Span&lt;Byte&gt;" />.</span></span></summary>
        <returns><span data-ttu-id="67d06-113"><see cref="T:System.Byte" /> 형식의 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-113">A span of type <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="67d06-114">`T` 포인터 또는 참조를 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-114">`T` cannot contain pointers or references.</span></span> <span data-ttu-id="67d06-115">`T` 형식 안전성을 유지 하기 위해 런타임에 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-115">`T` is checked at runtime in order to preserve type safety.</span></span>  

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="67d06-116"><paramref name="T" />에는 참조 또는 포인터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-116"><paramref name="T" /> contains references or pointers.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="67d06-117">새 <see cref="T:System.Span`1" />의 <see cref="P:System.Span`1.Length" /> 속성이 <see cref="F:System.Int32.MaxValue" />를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-117">The <see cref="P:System.Span`1.Length" /> property of the new <see cref="T:System.Span`1" /> would exceed <see cref="F:System.Int32.MaxValue" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsMemory&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Memory&lt;T&gt; AsMemory&lt;T&gt; (ReadOnlyMemory&lt;T&gt; memory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Memory`1&lt;!!T&gt; AsMemory&lt;T&gt;(valuetype System.ReadOnlyMemory`1&lt;!!T&gt; memory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.AsMemory``1(System.ReadOnlyMemory{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsMemory(Of T) (memory As ReadOnlyMemory(Of T)) As Memory(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static Memory&lt;T&gt; AsMemory(ReadOnlyMemory&lt;T&gt; memory);" />
      <MemberSignature Language="F#" Value="static member AsMemory : ReadOnlyMemory&lt;'T&gt; -&gt; Memory&lt;'T&gt;" Usage="System.Runtime.InteropServices.MemoryMarshal.AsMemory memory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Memory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="memory" Type="System.ReadOnlyMemory&lt;T&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67d06-118">읽기 전용 메모리 버퍼에 있는 항목의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-118">The type of items in the read-only memory buffer.</span></span></typeparam>
        <param name="memory"><span data-ttu-id="67d06-119">읽기 전용 메모리 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-119">The read-only memory buffer.</span></span></param>
        <summary><span data-ttu-id="67d06-120"><see cref="T:System.ReadOnlyMemory`1" />에서 <see cref="T:System.Memory`1" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-120">Creates a <see cref="T:System.Memory`1" /> instance from a <see cref="T:System.ReadOnlyMemory`1" />.</span></span></summary>
        <returns><span data-ttu-id="67d06-121"><see cref="T:System.ReadOnlyMemory`1" />과 동일한 메모리를 나타내는 메모리 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-121">A memory block that represetns the same memory as the <see cref="T:System.ReadOnlyMemory`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="67d06-122">이 메서드는 주의 사용 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-122">This method must be used with extreme caution.</span></span> <span data-ttu-id="67d06-123"><xref:System.ReadOnlyMemory%601> 변경할 수 없는 데이터와 쓸 고려 하지 않은 다른 메모리를 나타내는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-123"><xref:System.ReadOnlyMemory%601> is used to represent immutable data and other memory that is not meant to be written to.</span></span> <span data-ttu-id="67d06-124"><xref:System.Memory%601> 이 메서드에 의해 생성 되는 인스턴스를 쓸 수 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-124"><xref:System.Memory%601> instances created by this method should not be written to.</span></span> <span data-ttu-id="67d06-125">이 방법의 목적은로 형식화 된 변수를 허용 하는 것 <xref:System.Memory%601> 데만 읽기에 대 한 저장 된 <xref:System.ReadOnlyMemory%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-125">The purpose of this method is to allow variables typed as <xref:System.Memory%601> but only used for reading to store a <xref:System.ReadOnlyMemory%601>.</span></span> 

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsRef&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ref readonly T&amp; AsRef&lt;T&gt; (ReadOnlySpan&lt;byte&gt; span) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig T&amp; modreq(System.Runtime.InteropServices.InAttribute) AsRef&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.AsRef``1(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsRef(Of T As Structure) (span As ReadOnlySpan(Of Byte)) As T&amp;" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static T&amp; ^ AsRef(ReadOnlySpan&lt;System::Byte&gt; span);" />
      <MemberSignature Language="F#" Value="static member AsRef : ReadOnlySpan&lt;byte&gt; -&gt; T&amp; (requires 'T : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.AsRef span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Readonly">
        <ReturnType>T</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="netcore-3.0">
            <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="span">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsRef&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ref T AsRef&lt;T&gt; (Span&lt;byte&gt; span) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T AsRef&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Span`1&lt;unsigned int8&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.AsRef``1(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsRef(Of T As Structure) (span As Span(Of Byte)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static T % AsRef(Span&lt;System::Byte&gt; span);" />
      <MemberSignature Language="F#" Value="static member AsRef : Span&lt;byte&gt; -&gt;  (requires 'T : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.AsRef span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="span">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cast&lt;TFrom,TTo&gt;">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;TTo&gt; Cast&lt;TFrom,TTo&gt; (ReadOnlySpan&lt;TFrom&gt; span) where TFrom : struct where TTo : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;!!TTo&gt; Cast&lt;struct .ctor (class System.ValueType) TFrom, struct .ctor (class System.ValueType) TTo&gt;(valuetype System.ReadOnlySpan`1&lt;!!TFrom&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.Cast``2(System.ReadOnlySpan{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cast(Of TFrom As Structure, TTo As Structure) (span As ReadOnlySpan(Of TFrom)) As ReadOnlySpan(Of TTo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFrom, typename TTo&gt;&#xA; where TFrom : value class where TTo : value class static ReadOnlySpan&lt;TTo&gt; Cast(ReadOnlySpan&lt;TFrom&gt; span);" />
      <MemberSignature Language="F#" Value="static member Cast : ReadOnlySpan&lt;'From (requires 'From : struct)&gt; -&gt; ReadOnlySpan&lt;'o (requires 'o : struct)&gt; (requires 'From : struct and 'o : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.Cast span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;TTo&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFrom">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TTo">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="System.ReadOnlySpan&lt;TFrom&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TFrom"><span data-ttu-id="67d06-126">형식 원본 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-126">The type of the source span.</span></span></typeparam>
        <typeparam name="TTo"><span data-ttu-id="67d06-127">대상 범위의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-127">The type of the target span.</span></span></typeparam>
        <param name="span"><span data-ttu-id="67d06-128">변환할 소스 조각입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-128">The source slice to convert.</span></span></param>
        <summary><span data-ttu-id="67d06-129">한 가지 기본 형식의 읽기 전용 범위를 또 다른 기본 형식의 읽기 전용 범위로 캐스팅합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-129">Casts a read-only span of one primitive type to a read-only span of another primitive type.</span></span></summary>
        <returns><span data-ttu-id="67d06-130">변환된 읽기 전용 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-130">The converted read-only span.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="67d06-131">모두 `TFrom` 나 `TTo` 포인터나 참조를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-131">Neither `TFrom` nor `TTo` can contain pointers or references.</span></span> <span data-ttu-id="67d06-132">`TFrom` 및 `TTo` 형식 안전성을 유지 하기 위해 런타임에 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-132">`TFrom` and `TTo` are checked at runtime in order to preserve type safety.</span></span>  

<span data-ttu-id="67d06-133">이 메서드는 불일치 메모리 액세스를 지 원하는 플랫폼에만 지원 또는 다른 방법으로 정렬 되는 메모리 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-133">This method is supported only on platforms that support misaligned memory access or when the memory block is aligned by other means.</span></span>

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="67d06-134"><paramref name="TFrom" /> 또는 <paramref name="TTo" />에는 참조 또는 포인터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-134"><paramref name="TFrom" /> or <paramref name="TTo" /> contains references or pointers.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cast&lt;TFrom,TTo&gt;">
      <MemberSignature Language="C#" Value="public static Span&lt;TTo&gt; Cast&lt;TFrom,TTo&gt; (Span&lt;TFrom&gt; span) where TFrom : struct where TTo : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Span`1&lt;!!TTo&gt; Cast&lt;struct .ctor (class System.ValueType) TFrom, struct .ctor (class System.ValueType) TTo&gt;(valuetype System.Span`1&lt;!!TFrom&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.Cast``2(System.Span{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cast(Of TFrom As Structure, TTo As Structure) (span As Span(Of TFrom)) As Span(Of TTo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFrom, typename TTo&gt;&#xA; where TFrom : value class where TTo : value class static Span&lt;TTo&gt; Cast(Span&lt;TFrom&gt; span);" />
      <MemberSignature Language="F#" Value="static member Cast : Span&lt;'From (requires 'From : struct)&gt; -&gt; Span&lt;'o (requires 'o : struct)&gt; (requires 'From : struct and 'o : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.Cast span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;TTo&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFrom">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TTo">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="System.Span&lt;TFrom&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TFrom"><span data-ttu-id="67d06-135">형식 원본 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-135">The type of the source span.</span></span></typeparam>
        <typeparam name="TTo"><span data-ttu-id="67d06-136">대상 범위의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-136">The type of the target span.</span></span></typeparam>
        <param name="span"><span data-ttu-id="67d06-137">변환할 소스 조각입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-137">The source slice to convert.</span></span></param>
        <summary><span data-ttu-id="67d06-138">한 가지 기본 형식의 범위를 또 다른 기본 형식의 범위로 캐스팅합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-138">Casts a span of one primitive type to a span of another primitive type.</span></span></summary>
        <returns><span data-ttu-id="67d06-139">변환된 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-139">The converted span.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="67d06-140">모두 `TFrom` 나 `TTo` 포인터나 참조를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-140">Neither `TFrom` nor `TTo` can contain pointers or references.</span></span> <span data-ttu-id="67d06-141">`TFrom` 및 `TTo` 형식 안전성을 유지 하기 위해 런타임에 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-141">`TFrom` and `TTo` are checked at runtime in order to preserve type safety.</span></span>  

<span data-ttu-id="67d06-142">캐스팅 unchecked 컨텍스트에서 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-142">The cast occurs in an unchecked context.</span></span> <span data-ttu-id="67d06-143">경우 범위의 `TTo` 의 범위 보다 작습니다. `TFrom`, 데이터 손실이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-143">If the range of `TTo` is less than the range of `TFrom`, data loss can occur.</span></span> <span data-ttu-id="67d06-144">예를 들어 경우 `TFrom` 됩니다 <xref:System.Int64>하나씩의 `ReadOnlySpan<Int32>` 0x100001111110F0F, 값은 값 및 `TTo` 는 <xref:System.Int32>, 결과 값은 11110F0F.</span><span class="sxs-lookup"><span data-stu-id="67d06-144">For example, if `TFrom` is <xref:System.Int64>, one of the `ReadOnlySpan<Int32>` values is 0x100001111110F0F, and `TTo` is <xref:System.Int32>, the resulting value is 11110F0F.</span></span>

<span data-ttu-id="67d06-145">이 메서드는 불일치 메모리 액세스를 지 원하는 플랫폼에만 지원 또는 다른 방법으로 정렬 되는 메모리 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-145">This method is supported only on platforms that support misaligned memory access or when the memory block is aligned by other means.</span></span>

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="67d06-146"><paramref name="TFrom" /> 또는 <paramref name="TTo" />에는 참조 또는 포인터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-146"><paramref name="TFrom" /> or <paramref name="TTo" /> contains references or pointers.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromPinnedArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Memory&lt;T&gt; CreateFromPinnedArray&lt;T&gt; (T[] array, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Memory`1&lt;!!T&gt; CreateFromPinnedArray&lt;T&gt;(!!T[] array, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.CreateFromPinnedArray``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromPinnedArray(Of T) (array As T(), start As Integer, length As Integer) As Memory(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static Memory&lt;T&gt; CreateFromPinnedArray(cli::array &lt;T&gt; ^ array, int start, int length);" />
      <MemberSignature Language="F#" Value="static member CreateFromPinnedArray : 'T[] * int * int -&gt; Memory&lt;'T&gt;" Usage="System.Runtime.InteropServices.MemoryMarshal.CreateFromPinnedArray (array, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Memory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="start" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="length" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67d06-147">배열의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-147">The type of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="67d06-148">미리 고정된 소스 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-148">The pre-pinned source array.</span></span></param>
        <param name="start"><span data-ttu-id="67d06-149">메모리 블록을 시작할 <paramref name="array" />의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-149">The index of <paramref name="array" /> at which to begin the memory block.</span></span></param>
        <param name="length"><span data-ttu-id="67d06-150">메모리 블록에 포함할 항목 수입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-150">The number of items to include in the memory block.</span></span></param>
        <summary><span data-ttu-id="67d06-151"><paramref name="start" /> 인덱스에서 시작하고 <paramref name="length" /> 항목으로 구성된 미리 고정된 대상 배열의 일부에 대한 새 메모리 버퍼를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-151">Creates a new memory buffer over the portion of the pre-pinned target array beginning at the <paramref name="start" /> index and consisting of <paramref name="length" /> items.</span></span></summary>
        <returns><span data-ttu-id="67d06-152"><paramref name="array" />의 지정된 요소에 대한 메모리 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-152">A block of memory over the specified elements of <paramref name="array" />.</span></span> <span data-ttu-id="67d06-153"><paramref name="array" />가 <see langword="null" />이거나 <paramref name="start" /> 및 <paramref name="length" />가 0이면 메서드는 <see cref="System.Memory`1.Length" /> 0의 <see cref="T:System.Memory`1" /> 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-153">If <paramref name="array" /> is <see langword="null" />, or if <paramref name="start" /> and <paramref name="length" /> are 0, the method returns a <see cref="T:System.Memory`1" /> instance of <see cref="System.Memory`1.Length" /> zero.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="67d06-154">배열 이미 고정 해야이 메서드를 호출 하 고 해당 배열 하는 동안 고정 해제 되지 않아야 합니다 <xref:System.Memory%601> 반환 되는 버퍼 사용 중입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-154">The array must already be pinned before this method is called, and that array must not be unpinned while the <xref:System.Memory%601> buffer that it returns is still in use.</span></span> <span data-ttu-id="67d06-155">고정 해제 된 배열에서이 메서드를 호출 합니다. 메모리 손상 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-155">Calling this method on an unpinned array could result in memory corruption.</span></span>

       ]]></format>
        </remarks>
        <exception cref="T:System.ArrayTypeMismatchException"><span data-ttu-id="67d06-156"><paramref name="array" />는 공변(covariant)이고, <paramref name="array" />의 형식은 정확히 <paramref name="T[]" />가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-156"><paramref name="array" /> is covariant, and the type of <paramref name="array" /> is not exactly <paramref name="T[]" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="67d06-157"><paramref name="start" /> 또는 끝 인덱스가 0~<see cref="P:System.Array.Length" /> 범위를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-157">The <paramref name="start" /> or the end index is not in the range of 0 to <see cref="P:System.Array.Length" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateReadOnlySpan&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;T&gt; CreateReadOnlySpan&lt;T&gt; (ref T reference, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;!!T&gt; CreateReadOnlySpan&lt;T&gt;(!!T&amp; reference, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.CreateReadOnlySpan``1(``0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateReadOnlySpan(Of T) (ByRef reference As T, length As Integer) As ReadOnlySpan(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static ReadOnlySpan&lt;T&gt; CreateReadOnlySpan(T % reference, int length);" />
      <MemberSignature Language="F#" Value="static member CreateReadOnlySpan :  * int -&gt; ReadOnlySpan&lt;'T&gt;" Usage="System.Runtime.InteropServices.MemoryMarshal.CreateReadOnlySpan (reference, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reference" Type="T" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="length" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67d06-158">데이터 항목의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-158">The type of the data items.</span></span></typeparam>
        <param name="reference"><span data-ttu-id="67d06-159">데이터에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-159">A reference to data.</span></span></param>
        <param name="length"><span data-ttu-id="67d06-160"><paramref name="reference" />에 포함된 <paramref name="T" /> 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-160">The number of <paramref name="T" /> elements that <paramref name="reference" /> contains.</span></span></param>
        <summary><span data-ttu-id="67d06-161">일반 관리형 개체의 일부에 대한 새 읽기 전용 범위를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-161">Creates a new read-only span over a portion of a regular managed object.</span></span></summary>
        <returns><span data-ttu-id="67d06-162">읽기 전용 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-162">A read-only span.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="67d06-163">이 메서드는 관리 되는 개체의 일부 고정 된 배열을 나타내면 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-163">This method can be useful if part of a managed object represents a fixed array.</span></span> 

> [!WARNING]
> <span data-ttu-id="67d06-164">이 메서드는 주의 해 서 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-164">This method should be used with caution.</span></span> <span data-ttu-id="67d06-165">위험한 것 때문에 `length` 인수 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-165">It is dangerous because the `length` argument is not checked.</span></span> <span data-ttu-id="67d06-166">또한 반환 된 범위의 수명 유효성이 검사 되지 않습니다 안전을 위해 범위 인식 언어입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-166">In addition, the lifetime of the returned span is not validated for safety by span-aware languages.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSpan&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Span&lt;T&gt; CreateSpan&lt;T&gt; (ref T reference, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Span`1&lt;!!T&gt; CreateSpan&lt;T&gt;(!!T&amp; reference, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.CreateSpan``1(``0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSpan(Of T) (ByRef reference As T, length As Integer) As Span(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static Span&lt;T&gt; CreateSpan(T % reference, int length);" />
      <MemberSignature Language="F#" Value="static member CreateSpan :  * int -&gt; Span&lt;'T&gt;" Usage="System.Runtime.InteropServices.MemoryMarshal.CreateSpan (reference, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reference" Type="T" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="length" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67d06-167">데이터 항목의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-167">The type of the data items.</span></span></typeparam>
        <param name="reference"><span data-ttu-id="67d06-168">데이터에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-168">A reference to data.</span></span></param>
        <param name="length"><span data-ttu-id="67d06-169"><paramref name="reference" />에 포함된 <paramref name="T" /> 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-169">The number of <paramref name="T" /> elements that <paramref name="reference" /> contains.</span></span></param>
        <summary><span data-ttu-id="67d06-170">일반 관리형 개체의 일부에 대한 새 범위를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-170">Creates a new span over a portion of a regular managed object.</span></span></summary>
        <returns><span data-ttu-id="67d06-171">범위입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-171">A span.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="67d06-172">이 메서드는 관리 되는 개체의 일부 고정 된 배열을 나타내면 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-172">This method can be useful if part of a managed object represents a fixed array.</span></span> 

> [!WARNING]
> <span data-ttu-id="67d06-173">이 메서드는 주의 해 서 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-173">This method should be used with caution.</span></span> <span data-ttu-id="67d06-174">위험한 것 때문에 `length` 인수 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-174">It is dangerous because the `length` argument is not checked.</span></span> <span data-ttu-id="67d06-175">또한 반환 된 범위의 수명 유효성이 검사 되지 않습니다 안전을 위해 범위 인식 언어입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-175">In addition, the lifetime of the returned span is not validated for safety by span-aware languages.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReference&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ref T GetReference&lt;T&gt; (ReadOnlySpan&lt;T&gt; span);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetReference&lt;T&gt;(valuetype System.ReadOnlySpan`1&lt;!!T&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.GetReference``1(System.ReadOnlySpan{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetReference(Of T) (span As ReadOnlySpan(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % GetReference(ReadOnlySpan&lt;T&gt; span);" />
      <MemberSignature Language="F#" Value="static member GetReference : ReadOnlySpan&lt;'T&gt; -&gt; " Usage="System.Runtime.InteropServices.MemoryMarshal.GetReference span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="System.ReadOnlySpan&lt;T&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67d06-176">범위에 있는 항목의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-176">The type of items in the span.</span></span></typeparam>
        <param name="span"><span data-ttu-id="67d06-177">참조가 검색되는 읽기 전용 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-177">The read-only span from which the reference is retrieved.</span></span></param>
        <summary><span data-ttu-id="67d06-178">인덱스 0에 있는 읽기 전용 범위의 요소에 대한 참조를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-178">Returns a reference to the element of the read-only span at index 0.</span></span></summary>
        <returns><span data-ttu-id="67d06-179">인덱스 0의 요소에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-179">A reference to the element at index 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="67d06-180">읽기 전용으로 범위를 비어 있는 경우이 메서드는 인덱스 0에 있는 요소는 저장 된 위치에 대 한 참조를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-180">If the read-only span is empty, this method returns a reference to the location where the element at index 0 would have been stored.</span></span> <span data-ttu-id="67d06-181">이러한 참조 하지 않을 수도 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-181">Such a reference may or may not be `null`.</span></span> <span data-ttu-id="67d06-182">고정에 대 한 반환 된 참조를 사용할 수 있지만 역참조 되지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-182">The returned reference can be used for pinning, but it must never be dereferenced.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReference&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ref T GetReference&lt;T&gt; (Span&lt;T&gt; span);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetReference&lt;T&gt;(valuetype System.Span`1&lt;!!T&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.GetReference``1(System.Span{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetReference(Of T) (span As Span(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % GetReference(Span&lt;T&gt; span);" />
      <MemberSignature Language="F#" Value="static member GetReference : Span&lt;'T&gt; -&gt; " Usage="System.Runtime.InteropServices.MemoryMarshal.GetReference span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="System.Span&lt;T&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67d06-183">범위에 있는 항목의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-183">The type of items in the span.</span></span></typeparam>
        <param name="span"><span data-ttu-id="67d06-184">참조가 검색되는 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-184">The span from which the reference is retrieved.</span></span></param>
        <summary><span data-ttu-id="67d06-185">인덱스 0에 있는 범위의 요소에 대한 참조를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-185">Returns a reference to the element of the span at index 0.</span></span></summary>
        <returns><span data-ttu-id="67d06-186">인덱스 0의 요소에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-186">A reference to the element at index 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="67d06-187">범위가 비어 있는 경우이 메서드는 인덱스 0에 있는 요소는 저장 된 위치에 대 한 참조를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-187">If the span is empty, this method returns a reference to the location where the element at index 0 would have been stored.</span></span> <span data-ttu-id="67d06-188">이러한 참조 하지 않을 수도 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-188">Such a reference may or may not be `null`.</span></span> <span data-ttu-id="67d06-189">고정에 대 한 반환 된 참조를 사용할 수 있지만 역참조 되지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-189">The returned reference can be used for pinning, but it must never be dereferenced.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Read&lt;T&gt; (ReadOnlySpan&lt;byte&gt; source) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Read&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.Read``1(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read(Of T As Structure) (source As ReadOnlySpan(Of Byte)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static T Read(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberSignature Language="F#" Value="static member Read : ReadOnlySpan&lt;byte&gt; -&gt; 'T (requires 'T : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.Read source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67d06-190">읽기 전용 범위에서 검색할 항목의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-190">The type of the item to retrieve from the read-only span.</span></span></typeparam>
        <param name="source"><span data-ttu-id="67d06-191">읽기 전용 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-191">A read-only span.</span></span></param>
        <summary><span data-ttu-id="67d06-192">읽기 전용 범위(바이트)를 벗어난</span><span class="sxs-lookup"><span data-stu-id="67d06-192">Reads a structure of type</span></span> <param name="T" /> <span data-ttu-id="67d06-193">형식의 구조체를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-193">out of a read-only span of bytes.</span></span></summary>
        <returns><span data-ttu-id="67d06-194">읽기 전용 범위에서 검색된 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-194">The structure retrieved from the read-only span.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="67d06-195">`T` 포인터 또는 참조를 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-195">`T` cannot contain pointers or references.</span></span> <span data-ttu-id="67d06-196">' 형식 안전성을 유지 하기 위해 런타임 시 검사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-196">\`It is checked at runtime in order to preserve type safety.</span></span>  

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="67d06-197"><paramref name="T" />에는 참조 또는 포인터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-197"><paramref name="T" /> contains references or pointers.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="67d06-198"><paramref name="source" />는 <paramref name="T" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-198"><paramref name="source" /> is smaller than <paramref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToEnumerable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; ToEnumerable&lt;T&gt; (ReadOnlyMemory&lt;T&gt; memory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; ToEnumerable&lt;T&gt;(valuetype System.ReadOnlyMemory`1&lt;!!T&gt; memory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.ToEnumerable``1(System.ReadOnlyMemory{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToEnumerable(Of T) (memory As ReadOnlyMemory(Of T)) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ ToEnumerable(ReadOnlyMemory&lt;T&gt; memory);" />
      <MemberSignature Language="F#" Value="static member ToEnumerable : ReadOnlyMemory&lt;'T&gt; -&gt; seq&lt;'T&gt;" Usage="System.Runtime.InteropServices.MemoryMarshal.ToEnumerable memory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="memory" Type="System.ReadOnlyMemory&lt;T&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67d06-199">읽기 전용 메모리 버퍼에 있는 항목의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-199">The type of the items in the read-only memory buffer.</span></span></typeparam>
        <param name="memory"><span data-ttu-id="67d06-200">읽기 전용 메모리 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-200">A read-only memory buffer.</span></span></param>
        <summary><span data-ttu-id="67d06-201">지정된 읽기 전용 메모리 버퍼의 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 보기를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-201">Creates an <see cref="T:System.Collections.Generic.IEnumerable`1" /> view of the given read-only memory buffer.</span></span></summary>
        <returns><span data-ttu-id="67d06-202">열거 가능한 <paramref name="memory" />의 보기입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-202">An enumerable view of <paramref name="memory" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="67d06-203">이 메서드 형식 매개 변수를 필요로 하는 기존 Api에 사용할 읽기 전용 메모리 버퍼를 사용 하면 <xref:System.Collections.Generic.IEnumerable%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-203">This method allows a read-only memory buffer to be used in existing APIs that require a parameter of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> 

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryGetArray&lt;T&gt; (ReadOnlyMemory&lt;T&gt; memory, out ArraySegment&lt;T&gt; segment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetArray&lt;T&gt;(valuetype System.ReadOnlyMemory`1&lt;!!T&gt; memory, [out] valuetype System.ArraySegment`1&lt;!!T&gt;&amp; segment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.TryGetArray``1(System.ReadOnlyMemory{``0},System.ArraySegment{``0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetArray(Of T) (memory As ReadOnlyMemory(Of T), ByRef segment As ArraySegment(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool TryGetArray(ReadOnlyMemory&lt;T&gt; memory, [Runtime::InteropServices::Out] ArraySegment&lt;T&gt; % segment);" />
      <MemberSignature Language="F#" Value="static member TryGetArray : ReadOnlyMemory&lt;'T&gt; *  -&gt; bool" Usage="System.Runtime.InteropServices.MemoryMarshal.TryGetArray (memory, segment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="memory" Type="System.ReadOnlyMemory&lt;T&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="segment" Type="System.ArraySegment&lt;T&gt;" RefType="out" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67d06-204">읽기 전용 메모리 버퍼에 있는 항목의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-204">The type of items in the read-only memory buffer.</span></span></typeparam>
        <param name="memory"><span data-ttu-id="67d06-205">읽기 전용 메모리 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-205">A read-only memory buffer.</span></span></param>
        <param name="segment"><span data-ttu-id="67d06-206">이 메서드가 반환되면 기본 읽기 전용 메모리 버퍼에서 검색된 배열 세그먼트가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-206">When this method returns, contains the array segment retrieved from the underlying read-only memory buffer.</span></span> <span data-ttu-id="67d06-207">메서드가 실패하면 메서드는 기본 배열 세그먼트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-207">If the method fails, the method returns a default array segment.</span></span></param>
        <summary><span data-ttu-id="67d06-208">기본 메모리 버퍼에서 배열 세그먼트를 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-208">Tries to get an array segment from the underlying memory buffer.</span></span> <span data-ttu-id="67d06-209">반환 값은 작업의 성공을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-209">The return value indicates the success of the operation.</span></span></summary>
        <returns><span data-ttu-id="67d06-210">메서드 호출이 성공하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-210"><see langword="true" /> if the method call succeeds; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetMemoryManager&lt;T,TManager&gt;">
      <MemberSignature Language="C#" Value="public static bool TryGetMemoryManager&lt;T,TManager&gt; (ReadOnlyMemory&lt;T&gt; memory, out TManager manager) where TManager : System.Buffers.MemoryManager&lt;T&gt;;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetMemoryManager&lt;T, (class System.Buffers.MemoryManager`1&lt;!!T&gt;) TManager&gt;(valuetype System.ReadOnlyMemory`1&lt;!!T&gt; memory, [out] !!TManager&amp; manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.TryGetMemoryManager``2(System.ReadOnlyMemory{``0},``1@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetMemoryManager(Of T, TManager) (memory As ReadOnlyMemory(Of T), ByRef manager As TManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TManager&gt;&#xA; where TManager : System::Buffers::MemoryManager&lt;T&gt; static bool TryGetMemoryManager(ReadOnlyMemory&lt;T&gt; memory, [Runtime::InteropServices::Out] TManager % manager);" />
      <MemberSignature Language="F#" Value="static member TryGetMemoryManager : ReadOnlyMemory&lt;'T&gt; *  -&gt; bool (requires 'Manager :&gt; System.Buffers.MemoryManager&lt;'T&gt;)" Usage="System.Runtime.InteropServices.MemoryMarshal.TryGetMemoryManager (memory, manager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TManager">
          <Constraints>
            <BaseTypeName>System.Buffers.MemoryManager&lt;T&gt;</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="memory" Type="System.ReadOnlyMemory&lt;T&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="manager" Type="TManager" RefType="out" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67d06-211">읽기 전용 메모리 버퍼에 있는 항목의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-211">The type of the items in the read-only memory buffer.</span></span></typeparam>
        <typeparam name="TManager"><span data-ttu-id="67d06-212">형식의 여 <see cref="T:System.Buffers.MemoryManager`1" /> 검색할 합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-212">The type of the <see cref="T:System.Buffers.MemoryManager`1" /> to retrieve.</span></span></typeparam>
        <param name="memory"><span data-ttu-id="67d06-213">메모리 관리자를 가져올 읽기 전용 메모리 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-213">The read-only memory buffer for which to get the memory manager.</span></span></param>
        <param name="manager"><span data-ttu-id="67d06-214">메서드가 반환되면 <paramref name="memory" />의 관리자입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-214">When the method returns, the manager of <paramref name="memory" />.</span></span></param>
        <summary><span data-ttu-id="67d06-215">기본 읽기 전용 메모리 버퍼에서 <see cref="T:System.Buffers.MemoryManager`1" />을 검색하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-215">Tries to retrieve a <see cref="T:System.Buffers.MemoryManager`1" /> from the underlying read-only memory buffer.</span></span></summary>
        <returns><span data-ttu-id="67d06-216">메서드가 메모리 관리자를 검색한 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-216"><see langword="true" /> if the method retrieved the memory manager; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetMemoryManager&lt;T,TManager&gt;">
      <MemberSignature Language="C#" Value="public static bool TryGetMemoryManager&lt;T,TManager&gt; (ReadOnlyMemory&lt;T&gt; memory, out TManager manager, out int start, out int length) where TManager : System.Buffers.MemoryManager&lt;T&gt;;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetMemoryManager&lt;T, (class System.Buffers.MemoryManager`1&lt;!!T&gt;) TManager&gt;(valuetype System.ReadOnlyMemory`1&lt;!!T&gt; memory, [out] !!TManager&amp; manager, [out] int32&amp; start, [out] int32&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.TryGetMemoryManager``2(System.ReadOnlyMemory{``0},``1@,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetMemoryManager(Of T, TManager) (memory As ReadOnlyMemory(Of T), ByRef manager As TManager, ByRef start As Integer, ByRef length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TManager&gt;&#xA; where TManager : System::Buffers::MemoryManager&lt;T&gt; static bool TryGetMemoryManager(ReadOnlyMemory&lt;T&gt; memory, [Runtime::InteropServices::Out] TManager % manager, [Runtime::InteropServices::Out] int % start, [Runtime::InteropServices::Out] int % length);" />
      <MemberSignature Language="F#" Value="static member TryGetMemoryManager : ReadOnlyMemory&lt;'T&gt; *  *  *  -&gt; bool (requires 'Manager :&gt; System.Buffers.MemoryManager&lt;'T&gt;)" Usage="System.Runtime.InteropServices.MemoryMarshal.TryGetMemoryManager (memory, manager, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TManager">
          <Constraints>
            <BaseTypeName>System.Buffers.MemoryManager&lt;T&gt;</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="memory" Type="System.ReadOnlyMemory&lt;T&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="manager" Type="TManager" RefType="out" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="start" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="length" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67d06-217">읽기 전용 메모리 버퍼에 있는 항목의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-217">The type of the items in the read-only memory buffer.</span></span></typeparam>
        <typeparam name="TManager"><span data-ttu-id="67d06-218">형식의 여 <see cref="T:System.Buffers.MemoryManager`1" /> 검색할 합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-218">The type of the <see cref="T:System.Buffers.MemoryManager`1" /> to retrieve.</span></span></typeparam>
        <param name="memory"><span data-ttu-id="67d06-219">메모리 관리자를 가져올 읽기 전용 메모리 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-219">The read-only memory buffer for which to get the memory manager.</span></span></param>
        <param name="manager"><span data-ttu-id="67d06-220">메서드가 반환되면 <paramref name="memory" />의 관리자입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-220">When the method returns, the manager of <paramref name="memory" />.</span></span></param>
        <param name="start"><span data-ttu-id="67d06-221">메서드가 반환되면 <paramref name="memory" />가 나타나는 <paramref name="manager" />의 시작부터 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-221">When the method returns, the offset from the start of the <paramref name="manager" /> that the <paramref name="memory" /> represents.</span></span></param>
        <param name="length"><span data-ttu-id="67d06-222">메서드가 반환되면 <paramref name="memory" />가 나타나는 <paramref name="manager" />의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-222">When the method returns, the length of the <paramref name="manager" /> that the <paramref name="memory" /> represents.</span></span></param>
        <summary><span data-ttu-id="67d06-223">기본 읽기 전용 메모리 버퍼에서 <see cref="T:System.Buffers.MemoryManager`1" />, 시작 인덱스 및 길이를 검색하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-223">Tries to retrieve a <see cref="T:System.Buffers.MemoryManager`1" />, start index, and length from the underlying read-only memory buffer.</span></span></summary>
        <returns><span data-ttu-id="67d06-224">메서드가 성공한 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-224"><see langword="true" /> if the method succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetString">
      <MemberSignature Language="C#" Value="public static bool TryGetString (ReadOnlyMemory&lt;char&gt; memory, out string text, out int start, out int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetString(valuetype System.ReadOnlyMemory`1&lt;char&gt; memory, [out] string&amp; text, [out] int32&amp; start, [out] int32&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.TryGetString(System.ReadOnlyMemory{System.Char},System.String@,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetString (memory As ReadOnlyMemory(Of Char), ByRef text As String, ByRef start As Integer, ByRef length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetString(ReadOnlyMemory&lt;char&gt; memory, [Runtime::InteropServices::Out] System::String ^ % text, [Runtime::InteropServices::Out] int % start, [Runtime::InteropServices::Out] int % length);" />
      <MemberSignature Language="F#" Value="static member TryGetString : ReadOnlyMemory&lt;char&gt; *  *  *  -&gt; bool" Usage="System.Runtime.InteropServices.MemoryMarshal.TryGetString (memory, text, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memory" Type="System.ReadOnlyMemory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="text" Type="System.String" RefType="out" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="start" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="length" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="memory"><span data-ttu-id="67d06-225">문자 블록을 포함하는 읽기 전용 메모리입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-225">Read-only memory containing a block of characters.</span></span></param>
        <param name="text"><span data-ttu-id="67d06-226">메서드가 반환되면 메모리 버퍼에 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-226">When the method returns, the string contained in the memory buffer.</span></span></param>
        <param name="start"><span data-ttu-id="67d06-227"><paramref name="text" />의 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-227">The starting location in <paramref name="text" />.</span></span></param>
        <param name="length"><span data-ttu-id="67d06-228"><paramref name="text" />에 있는 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-228">The number of characters in <paramref name="text" />.</span></span></param>
        <summary><span data-ttu-id="67d06-229"><see langword="System.ReadOnlyMemory&lt;Char&gt;" />에서 기본 문자열을 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-229">Tries to get the underlying string from a <see langword="System.ReadOnlyMemory&lt;Char&gt;" />.</span></span></summary>
        <returns><span data-ttu-id="67d06-230">메서드가 기본 문자열을 성공적으로 검색하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-230"><see langword="true" /> if the method successfully retrieves the underlying string; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryRead&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryRead&lt;T&gt; (ReadOnlySpan&lt;byte&gt; source, out T value) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryRead&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.TryRead``1(System.ReadOnlySpan{System.Byte},``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryRead(Of T As Structure) (source As ReadOnlySpan(Of Byte), ByRef value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool TryRead(ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] T % value);" />
      <MemberSignature Language="F#" Value="static member TryRead : ReadOnlySpan&lt;byte&gt; *  -&gt; bool (requires 'T : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.TryRead (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="value" Type="T" RefType="out" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67d06-231">검색할 구조체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-231">The type of the structure to retrieve.</span></span></typeparam>
        <param name="source"><span data-ttu-id="67d06-232">읽기 전용 범위(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-232">A read-only span of bytes.</span></span></param>
        <param name="value"><span data-ttu-id="67d06-233">메서드가 반환되면 <paramref name="T" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-233">When the method returns, an instance of <paramref name="T" />.</span></span></param>
        <summary><span data-ttu-id="67d06-234">읽기 전형 바이트 범위에서 <paramref name="T" /> 형식의 구조체를 읽으려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-234">Tries to read a structure of type <paramref name="T" /> from a read-only span of bytes.</span></span></summary>
        <returns><span data-ttu-id="67d06-235">메서드가 구조체의 인스턴스를 검색하는 데 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-235"><see langword="true" /> if the method succeeds in retrieving an instance of the structure; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="67d06-236">`T` 포인터 또는 참조를 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-236">`T` cannot contain pointers or references.</span></span> <span data-ttu-id="67d06-237">' 형식 안전성을 유지 하기 위해 런타임 시 검사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-237">\`It is checked at runtime in order to preserve type safety.</span></span>  

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="67d06-238"><paramref name="T" />에는 참조 또는 포인터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-238"><paramref name="T" /> contains references or pointers.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryWrite&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryWrite&lt;T&gt; (Span&lt;byte&gt; destination, ref T value) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWrite&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Span`1&lt;unsigned int8&gt; destination, !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.TryWrite``1(System.Span{System.Byte},``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWrite(Of T As Structure) (destination As Span(Of Byte), ByRef value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool TryWrite(Span&lt;System::Byte&gt; destination, T % value);" />
      <MemberSignature Language="F#" Value="static member TryWrite : Span&lt;byte&gt; *  -&gt; bool (requires 'T : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.TryWrite (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="value" Type="T" RefType="ref" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67d06-239">구조체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-239">The type of the structure.</span></span></typeparam>
        <param name="destination"><span data-ttu-id="67d06-240">구조체를 포함할 범위(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-240">The span of bytes to contain the structure.</span></span></param>
        <param name="value"><span data-ttu-id="67d06-241">범위에 기록할 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-241">The structure to be written to the span.</span></span></param>
        <summary><span data-ttu-id="67d06-242"><paramref name="T" /> 형식의 구조체를 바이트 범위로 쓰려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-242">Tries to writes a structure of type <paramref name="T" /> into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="67d06-243">쓰기 작업에 성공한 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-243"><see langword="true" /> if the write operation succeeded; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="67d06-244">범위가 너무 작아서 <paramref name="T" />를 포함할 수 없는 경우 메서드는 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-244">The method returns <see langword="false" /> if the span is too small to contain <paramref name="T" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="67d06-245">`T` 포인터 또는 참조를 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-245">`T` cannot contain pointers or references.</span></span> <span data-ttu-id="67d06-246">' 형식 안전성을 유지 하기 위해 런타임 시 검사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-246">\`It is checked at runtime in order to preserve type safety.</span></span>  

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="67d06-247"><paramref name="TFrom" /> 또는 <paramref name="TTo" />에는 참조 또는 포인터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-247"><paramref name="TFrom" /> or <paramref name="TTo" /> contains references or pointers.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Write&lt;T&gt; (Span&lt;byte&gt; destination, ref T value) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Span`1&lt;unsigned int8&gt; destination, !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.Write``1(System.Span{System.Byte},``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write(Of T As Structure) (destination As Span(Of Byte), ByRef value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static void Write(Span&lt;System::Byte&gt; destination, T % value);" />
      <MemberSignature Language="F#" Value="static member Write : Span&lt;byte&gt; *  -&gt; unit (requires 'T : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.Write (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="value" Type="T" RefType="ref" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67d06-248">구조체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-248">The type of the structure.</span></span></typeparam>
        <param name="destination"><span data-ttu-id="67d06-249">구조체를 포함할 범위(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-249">The span of bytes to contain the structure.</span></span></param>
        <param name="value"><span data-ttu-id="67d06-250">범위에 기록할 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-250">The structure to be written to the span.</span></span></param>
        <summary><span data-ttu-id="67d06-251"><paramref name="T" /> 형식의 구조체를 바이트 범위로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-251">Writes a structure of type <paramref name="T" /> into a span of bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="67d06-252">`T` 포인터 또는 참조를 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-252">`T` cannot contain pointers or references.</span></span> <span data-ttu-id="67d06-253">' 형식 안전성을 유지 하기 위해 런타임 시 검사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-253">\`It is checked at runtime in order to preserve type safety.</span></span>  

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="67d06-254"><paramref name="T" />에는 참조 또는 포인터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-254"><paramref name="T" /> contains references or pointers.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="67d06-255"><paramref name="destination" />이 너무 작아 <paramref name="value" />를 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="67d06-255"><paramref name="destination" /> is too small to contain <paramref name="value" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>