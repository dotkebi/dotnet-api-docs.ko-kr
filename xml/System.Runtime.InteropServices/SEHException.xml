<Type Name="SEHException" FullName="System.Runtime.InteropServices.SEHException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="91e423c16410b0a6924fc1108c8d12918f7796c9" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57923951" /></Metadata><TypeSignature Language="C#" Value="public class SEHException : System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SEHException extends System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.SEHException" />
  <TypeSignature Language="VB.NET" Value="Public Class SEHException&#xA;Inherits ExternalException" />
  <TypeSignature Language="C++ CLI" Value="public ref class SEHException : System::Runtime::InteropServices::ExternalException" />
  <TypeSignature Language="F#" Value="type SEHException = class&#xA;    inherit ExternalException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.Runtime.InteropServices.ExternalException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5f2ce-101">SEH(구조적 예외 처리기) 오류를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-101">Represents structured exception handling (SEH) errors.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f2ce-102"><xref:System.Runtime.InteropServices.SEHException> 비관리 코드에서 throw 되는 하지만 다른.NET Framework 예외에 매핑되어 있지 않으므로 SEH 오류를 처리 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-102">The <xref:System.Runtime.InteropServices.SEHException> class handles SEH errors that are thrown from unmanaged code, but that have not been mapped to another .NET Framework exception.</span></span> <span data-ttu-id="5f2ce-103">합니다 <xref:System.Runtime.InteropServices.SEHException> 클래스에도 해당 하는 `HRESULT` `E_FAIL` (0x80004005).</span><span class="sxs-lookup"><span data-stu-id="5f2ce-103">The <xref:System.Runtime.InteropServices.SEHException> class also corresponds to the `HRESULT` `E_FAIL` (0x80004005).</span></span>  
  
 <span data-ttu-id="5f2ce-104">.NET Framework는 종종 자동으로 관리 되는 해당 항목에 매핑되는 관리 되지 않는 SEH 예외를 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-104">The .NET Framework often encounters unmanaged SEH exceptions that are automatically mapped to managed equivalents.</span></span> <span data-ttu-id="5f2ce-105">두 가지 일반적인 관리 되지 않는 SEH 예외가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-105">There are two common unmanaged SEH exceptions:</span></span>  
  
-   <span data-ttu-id="5f2ce-106">`STATUS_NO_MEMORY` 예외에 자동으로 매핑되는 <xref:System.OutOfMemoryException> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-106">`STATUS_NO_MEMORY` exceptions are automatically mapped to the <xref:System.OutOfMemoryException> class.</span></span>  
  
-   <span data-ttu-id="5f2ce-107">`STATUS_ACCESS_VIOLATION` 예외는 자동으로 다음과 같이 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-107">`STATUS_ACCESS_VIOLATION` exceptions are automatically mapped as follows:</span></span>  
  
    -   <span data-ttu-id="5f2ce-108">경우 `legacyNullReferencePolicy` 가 적용 된 모든 액세스 위반에 매핑되는 <xref:System.NullReferenceException> 클래스.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-108">If `legacyNullReferencePolicy` is applied, all access violations are mapped to the <xref:System.NullReferenceException> class.</span></span>  
  
    -   <span data-ttu-id="5f2ce-109">읽기/쓰기 시도한 주소 JIT 컴파일 코드에 없는 경우 예외에 매핑되는 <xref:System.AccessViolationException> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-109">If the address at which the read/write was attempted is not in JIT-compiled code, the exception is mapped to the <xref:System.AccessViolationException> class.</span></span>  
  
    -   <span data-ttu-id="5f2ce-110">JIT 컴파일 코드에 읽기/쓰기 시도한 주소가 있으면 하지만 OS Null 파티션 영역에 없는 경우 예외에 매핑되는 <xref:System.AccessViolationException> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-110">If the address at which the read/write was attempted is in JIT-compiled code, but it is not in the OS Null partition area, the exception is mapped to the <xref:System.AccessViolationException> class.</span></span>  
  
    -   <span data-ttu-id="5f2ce-111">없는 경우 없습니다 `legacyNullReferencePolicy`, 및 읽기/쓰기를 시도한 주소가 JIT 컴파일 코드에 OS Null 파티션 영역, 예외에 매핑되는 <xref:System.NullReferenceException> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-111">If there is no `legacyNullReferencePolicy`, and the address at which the read/write was attempted is in JIT-compiled code and in the OS Null partition area, the exception is mapped to the <xref:System.NullReferenceException> class.</span></span>  
  
 <span data-ttu-id="5f2ce-112">특정 예외에 자동으로 매핑되지 않은 SEH 예외에 매핑되는 <xref:System.Runtime.InteropServices.SEHException> 기본적으로 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-112">Any SEH exception that is not automatically mapped to a specific exception is mapped to the <xref:System.Runtime.InteropServices.SEHException> class by default.</span></span>  
  
 <span data-ttu-id="5f2ce-113">자세한 내용은 "관리 되지 않는 예외" 및 "구조적 예외 처리" MSDN Library에서 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-113">For more information, search on "unmanaged exceptions" and "Structured Exception Handling" in the MSDN Library.</span></span>  
  
 <span data-ttu-id="5f2ce-114"><xref:System.Runtime.InteropServices.SEHException> 클래스는 관리 되지 않는 c + + 예외가 소멸자를 호출할 수를 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-114">Note that the <xref:System.Runtime.InteropServices.SEHException> class does not cause unmanaged C++ exception destructors to be called.</span></span> <span data-ttu-id="5f2ce-115">관리 되지 않는 c + + 예외가 소멸자가 호출 되도록 다음 구문을 사용 하 여는 `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-115">To ensure that unmanaged C++ exception destructors are called, use the following syntax in the `catch` block.</span></span>  
  
```vb  
Catch   
     ' Handle catch here.  
End Try  
```  
  
```csharp  
catch  
{  
     // Handle catch here.  
}  
```  
  
```cpp  
catch(…)  
{  
     // Handle catch here.  
}   
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="5f2ce-116">.NET의 예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="5f2ce-116">Handling and throwing exceptions in .NET</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/610b364b-2761-429d-9c4a-afbc3e66f1b9"><span data-ttu-id="5f2ce-117">방법: HRESULT 및 예외 매핑</span><span class="sxs-lookup"><span data-stu-id="5f2ce-117">How to: Map HRESULTs and Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f2ce-118"><see cref="T:System.Runtime.InteropServices.SEHException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-118">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SEHException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SEHException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SEHException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SEHException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f2ce-119"><see cref="T:System.Runtime.InteropServices.SEHException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-119">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SEHException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f2ce-120"><xref:System.Runtime.InteropServices.SEHException> 클래스는 <xref:System.Runtime.InteropServices.ExternalException> 클래스에서 상속합니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-120">The <xref:System.Runtime.InteropServices.SEHException> class inherits from the <xref:System.Runtime.InteropServices.ExternalException> class.</span></span> <span data-ttu-id="5f2ce-121">이 생성자의 속성을 설정 합니다 <xref:System.Exception> 개체는 다음 표에 있는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-121">This constructor sets the properties of the <xref:System.Exception> object to the values in the following table.</span></span>  
  
|<span data-ttu-id="5f2ce-122">속성</span><span class="sxs-lookup"><span data-stu-id="5f2ce-122">Property</span></span>|<span data-ttu-id="5f2ce-123">값</span><span class="sxs-lookup"><span data-stu-id="5f2ce-123">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="5f2ce-124">null 참조(Visual Basic의 경우 `Nothing`)</span><span class="sxs-lookup"><span data-stu-id="5f2ce-124">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="5f2ce-125">지역화 된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-125">A localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SEHException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SEHException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SEHException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.SEHException : string -&gt; System.Runtime.InteropServices.SEHException" Usage="new System.Runtime.InteropServices.SEHException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="5f2ce-126">예외에 대한 이유를 나타내는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-126">The message that indicates the reason for the exception.</span></span></param>
        <summary><span data-ttu-id="5f2ce-127">지정된 메시지를 사용하여 <see cref="T:System.Runtime.InteropServices.SEHException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-127">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SEHException" /> class with a specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f2ce-128"><xref:System.Runtime.InteropServices.SEHException>는 <xref:System.Runtime.InteropServices.ExternalException>에서 상속됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-128"><xref:System.Runtime.InteropServices.SEHException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span> <span data-ttu-id="5f2ce-129">이 생성자의 속성을 설정 합니다 <xref:System.Exception> 다음 표에 나와 있는 것 처럼 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-129">This constructor sets the properties of the <xref:System.Exception> object as shown in the following table.</span></span>  
  
|<span data-ttu-id="5f2ce-130">속성</span><span class="sxs-lookup"><span data-stu-id="5f2ce-130">Property</span></span>|<span data-ttu-id="5f2ce-131">값</span><span class="sxs-lookup"><span data-stu-id="5f2ce-131">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="5f2ce-132">null 참조(Visual Basic의 경우 `Nothing`)</span><span class="sxs-lookup"><span data-stu-id="5f2ce-132">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="5f2ce-133">`message`.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-133">`message`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SEHException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SEHException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.SEHException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Runtime.InteropServices.SEHException" Usage="new System.Runtime.InteropServices.SEHException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="5f2ce-134">serialize된 개체 데이터를 보유하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-134">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="5f2ce-135">원본 또는 대상에 대한 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-135">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="5f2ce-136">serialization 데이터로부터 <see cref="T:System.Runtime.InteropServices.SEHException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-136">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SEHException" /> class from serialization data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f2ce-137">deserialization을 수행하는 동안 이 생성자를 호출하여 스트림을 통해 전송될 예외 개체를 다시 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-137">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="5f2ce-138">자세한 내용은 <xref:System.Runtime.Serialization> 네임스페이스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-138">For more information, see the <xref:System.Runtime.Serialization> namespace.</span></span>  
  
 <span data-ttu-id="5f2ce-139"><xref:System.Runtime.InteropServices.SEHException>는 <xref:System.Runtime.InteropServices.ExternalException>에서 상속됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-139"><xref:System.Runtime.InteropServices.SEHException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f2ce-140"><paramref name="info" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-140"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SEHException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SEHException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.SEHException : string * Exception -&gt; System.Runtime.InteropServices.SEHException" Usage="new System.Runtime.InteropServices.SEHException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="5f2ce-141">예외에 대한 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-141">The error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="5f2ce-142">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-142">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="5f2ce-143"><paramref name="inner" /> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-143">If the <paramref name="inner" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="5f2ce-144">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Runtime.InteropServices.SEHException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-144">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SEHException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f2ce-145">이전 예외의 직접적인 결과로 throw되는 예외의 <xref:System.Exception.InnerException%2A> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-145">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="5f2ce-146"><xref:System.Exception.InnerException%2A> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, `null` 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <xref:System.Exception.InnerException%2A>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-146">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="5f2ce-147">다음 표에서는 <xref:System.Runtime.InteropServices.SEHException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-147">The following table shows the initial property values for an instance of <xref:System.Runtime.InteropServices.SEHException>.</span></span>  
  
|<span data-ttu-id="5f2ce-148">속성</span><span class="sxs-lookup"><span data-stu-id="5f2ce-148">Property</span></span>|<span data-ttu-id="5f2ce-149">값</span><span class="sxs-lookup"><span data-stu-id="5f2ce-149">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="5f2ce-150">내부 예외 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-150">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="5f2ce-151">오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-151">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="5f2ce-152">.NET의 예외 처리 및 Throw</span><span class="sxs-lookup"><span data-stu-id="5f2ce-152">Handling and throwing exceptions in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanResume">
      <MemberSignature Language="C#" Value="public virtual bool CanResume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanResume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SEHException.CanResume" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanResume () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanResume();" />
      <MemberSignature Language="F#" Value="abstract member CanResume : unit -&gt; bool&#xA;override this.CanResume : unit -&gt; bool" Usage="sEHException.CanResume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f2ce-153">예외를 복구할 수 있는지 여부와 예외가 throw된 위치부터 코드를 계속 진행할 수 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-153">Indicates whether the exception can be recovered from, and whether the code can continue from the point at which the exception was thrown.</span></span></summary>
        <returns><span data-ttu-id="5f2ce-154">다시 시작할 수 있는 예외가 아직 구현되지 않았으므로 항상 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-154">Always <see langword="false" />, because resumable exceptions are not implemented.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f2ce-155">하는 경우 <xref:System.Runtime.InteropServices.SEHException.CanResume%2A> 반환 `true`, 필터링된 된 예외 처리기에서 예외를 발생 시킨 문제를 해결할 수는 다음 및 코드는 예외가 throw 된 시점에서 계속 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f2ce-155">If <xref:System.Runtime.InteropServices.SEHException.CanResume%2A> returns `true`, then a filtered exception handler can correct the problem that caused the exception, and the code will continue from the point at which the exception was thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>