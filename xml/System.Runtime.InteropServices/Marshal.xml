<Type Name="Marshal" FullName="System.Runtime.InteropServices.Marshal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1c5f6ceee1ec9b65d30d3929978d35af5450318a" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58462153" /></Metadata><TypeSignature Language="C#" Value="public static class Marshal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Marshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.Marshal" />
  <TypeSignature Language="VB.NET" Value="Public Class Marshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class Marshal abstract sealed" />
  <TypeSignature Language="F#" Value="type Marshal = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bb2a9-101">관리되지 않는 메모리를 할당하고, 관리되지 않는 메모리 블록을 복사하고, 관리되는 형식을 관리되지 않는 형식으로 변환하는 메서드의 컬렉션 및 비관리 코드와 상호 작용할 때 사용되는 기타 메서드의 컬렉션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-101">Provides a collection of methods for allocating unmanaged memory, copying unmanaged memory blocks, and converting managed to unmanaged types, as well as other miscellaneous methods used when interacting with unmanaged code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-102">합니다 `static` 에 정의 된 메서드는 <xref:System.Runtime.InteropServices.Marshal> 클래스는 관리 되지 않는 코드를 사용 하는 데 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-102">The `static` methods defined on the <xref:System.Runtime.InteropServices.Marshal> class are essential to working with unmanaged code.</span></span> <span data-ttu-id="bb2a9-103">이 클래스에 정의 된 대부분의 메서드는 일반적으로 관리 및 관리 되지 않는 프로그래밍 모델 간의 브리지를 제공 하려는 개발자가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-103">Most methods defined in this class are typically used by developers who want to provide a bridge between the managed and unmanaged programming models.</span></span> <span data-ttu-id="bb2a9-104">예를 들어를 <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> 메서드 (관리 되는 힙)에 지정된 된 문자열에서 관리 되지 않는 힙에서 버퍼에 ANSI 문자를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-104">For example, the <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> method copies ANSI characters from a specified string (in the managed heap) to a buffer in the unmanaged heap.</span></span> <span data-ttu-id="bb2a9-105">또한 적절 한 크기의 대상 힙에서 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-105">It also allocates the target heap of the right size.</span></span>  
  
 <span data-ttu-id="bb2a9-106">공용 언어 런타임 마샬링 특정 기능을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-106">The common language runtime provides specific marshaling capabilities.</span></span> <span data-ttu-id="bb2a9-107">마샬링 동작에 대 한 내용은 참조 하세요 [Interop 마샬링](~/docs/framework/interop/interop-marshaling.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-107">For details on marshaling behavior, see [Interop Marshaling](~/docs/framework/interop/interop-marshaling.md).</span></span>  
  
 <span data-ttu-id="bb2a9-108">`Read` 하 고 `Write` 에서 메서드를 <xref:System.Runtime.InteropServices.Marshal> 클래스는 정렬 및 정렬 되지 않은 액세스를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-108">The `Read` and `Write` methods in the <xref:System.Runtime.InteropServices.Marshal> class support both aligned and unaligned access.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-109">다음 예제에서는 의해 정의 된 다양 한 메서드를 사용 하는 방법을 보여 줍니다는 <xref:System.Runtime.InteropServices.Marshal> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-109">The following example shows how to use various methods defined by the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#1](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#1)]
 [!code-csharp[Marshal#1](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#1)]
 [!code-vb[Marshal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddRef">
      <MemberSignature Language="C#" Value="public static int AddRef (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AddRef(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddRef (pUnk As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AddRef(IntPtr pUnk);" />
      <MemberSignature Language="F#" Value="static member AddRef : nativeint -&gt; int" Usage="System.Runtime.InteropServices.Marshal.AddRef pUnk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk"><span data-ttu-id="bb2a9-110">증가시킬 인터페이스 참조 횟수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-110">The interface reference count to increment.</span></span></param>
        <summary><span data-ttu-id="bb2a9-111">지정된 인터페이스의 참조 횟수를 증가시킵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-111">Increments the reference count on the specified interface.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-112"><paramref name="pUnk" /> 매개 변수에 대한 참조 횟수의 새 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-112">The new value of the reference count on the <paramref name="pUnk" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-113">공용 언어 런타임에서이 메서드를 직접 사용 해야 하므로 사용자에 대 한 COM 개체의 참조 횟수를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-113">The common language runtime manages the reference count of a COM object for you, making it unnecessary to use this method directly.</span></span> <span data-ttu-id="bb2a9-114">사용자 지정 마샬러에서 테스트와 같이 드문 경우에 필요할 수 있습니다이 개체의 수명을 수동으로 조작할 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-114">In rare cases, such as testing a custom marshaler, you might find it necessary to manipulate an object's lifetime manually.</span></span> <span data-ttu-id="bb2a9-115">호출한 후 <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>와 같은 메서드를 사용 하 여 참조 횟수를 감소 해야 <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-115">After calling <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, you must decrement the reference count by using a method such as <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bb2a9-116">반환 값에 의존 하지 마십시오 <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, 해당 하지 않을 수도 있습니다 안정적으로.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-116">Do not rely on the return value of <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, as it can sometimes be unstable.</span></span>  
  
 <span data-ttu-id="bb2a9-117">호출할 수 있습니다 <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, 또는 <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> 가져오려고를 <xref:System.IntPtr> 를 나타내는 값을 [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) 인터페이스 포인터.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-117">You can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to obtain an <xref:System.IntPtr> value that represents an [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) interface pointer.</span></span> <span data-ttu-id="bb2a9-118">이러한 메서드를 사용할 수도 있습니다 및 <xref:System.Runtime.InteropServices.Marshal.AddRef%2A> 메서드를 나타내는 관리 되는 개체의 COM 호출 가능 래퍼 COM 인터페이스를 가져오려면 관리 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-118">You can also use these methods and the <xref:System.Runtime.InteropServices.Marshal.AddRef%2A> method on managed objects to obtain the COM interfaces represented by the managed object's COM callable wrapper.</span></span> <span data-ttu-id="bb2a9-119">이 래퍼 형식의 세부 정보를 사용 하 여 잘 모르는 경우 [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-119">If you are not familiar with the details of this wrapper type, see [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-120">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-120">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-121">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-121">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=148625"><span data-ttu-id="bb2a9-122">Iunknown:: Addref</span><span class="sxs-lookup"><span data-stu-id="bb2a9-122">IUnknown::AddRef</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AllocCoTaskMem">
      <MemberSignature Language="C#" Value="public static IntPtr AllocCoTaskMem (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocCoTaskMem(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocCoTaskMem (cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocCoTaskMem(int cb);" />
      <MemberSignature Language="F#" Value="static member AllocCoTaskMem : int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.AllocCoTaskMem cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb"><span data-ttu-id="bb2a9-123">할당될 메모리 블록 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-123">The size of the block of memory to be allocated.</span></span></param>
        <summary><span data-ttu-id="bb2a9-124">COM 작업 메모리 할당자에서 지정된 크기의 메모리 블록을 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-124">Allocates a block of memory of specified size from the COM task memory allocator.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-125">할당된 메모리 블록 주소를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-125">An integer representing the address of the block of memory allocated.</span></span> <span data-ttu-id="bb2a9-126">이 메모리는 <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />을 사용하여 해제되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-126">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-127"><xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> API 메서드는 두 메모리 할당 중 하나는 <xref:System.Runtime.InteropServices.Marshal> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-127"><xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> is one of two memory allocation API methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="bb2a9-128">(<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType> 다른 됩니다.) 반환 된 초기 메모리 콘텐츠 정의 이며 할당된 된 메모리는 요청 된 바이트 수보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-128">(<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType> is the other.) The initial memory content returned is undefined, and the allocated memory can be larger than the requested number of bytes.</span></span> <span data-ttu-id="bb2a9-129">이 메서드는 COM 노출 [CoTaskMemAlloc](https://go.microsoft.com/fwlink/?LinkId=148626) COM 작업 메모리 할당자 라고 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-129">This method exposes the COM [CoTaskMemAlloc](https://go.microsoft.com/fwlink/?LinkId=148626) function, which is referred to as the COM task memory allocator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-130">메모리가 부족하여 요청을 만족시킬 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-130">There is insufficient memory to satisfy the request.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-131">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-131">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-132">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-132">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AllocHGlobal">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-133">프로세스의 관리되지 않는 메모리에서 메모리를 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-133">Allocates memory from the unmanaged memory of the process.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr AllocHGlobal (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocHGlobal(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocHGlobal (cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocHGlobal(int cb);" />
      <MemberSignature Language="F#" Value="static member AllocHGlobal : int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.AllocHGlobal cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb"><span data-ttu-id="bb2a9-134">메모리에서 필요한 바이트 수 입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-134">The required number of bytes in memory.</span></span></param>
        <summary><span data-ttu-id="bb2a9-135">지정된 바이트 수를 사용하여 프로세스의 관리되지 않는 메모리에서 메모리를 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-135">Allocates memory from the unmanaged memory of the process by using the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-136">새로 할당된 메모리에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-136">A pointer to the newly allocated memory.</span></span> <span data-ttu-id="bb2a9-137">이 메모리는 <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> 메서드를 사용하여 해제되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-137">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-138"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> 두 가지 메모리 할당 방법 중 하나인는 <xref:System.Runtime.InteropServices.Marshal> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-138"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> is one of two memory allocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="bb2a9-139">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> 다른 됩니다.) 이 메서드는 Win32 노출 [LocalAlloc](https://go.microsoft.com/fwlink/?LinkId=148628) Kernel32.dll에서 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-139">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> is the other.) This method exposes the Win32 [LocalAlloc](https://go.microsoft.com/fwlink/?LinkId=148628) function from Kernel32.dll.</span></span>  
  
 <span data-ttu-id="bb2a9-140">때 <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> 호출 `LocalAlloc`, 전달를 `LMEM_FIXED` 잠그는에 할당 된 메모리를 플래그 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-140">When <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> calls `LocalAlloc`, it passes a `LMEM_FIXED` flag, which causes the allocated memory to be locked in place.</span></span> <span data-ttu-id="bb2a9-141">또한 할당 된 메모리가 0-채워지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-141">Also, the allocated memory is not zero-filled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-142">다음 예제에서는 <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-142">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> method.</span></span> <span data-ttu-id="bb2a9-143">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Runtime.InteropServices.Marshal> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-143">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#4](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#4)]
 [!code-csharp[Marshal#4](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#4)]
 [!code-vb[Marshal#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-144">메모리가 부족하여 요청을 만족시킬 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-144">There is insufficient memory to satisfy the request.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-145">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-145">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-146">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-146">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="AllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr AllocHGlobal (IntPtr cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocHGlobal(native int cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocHGlobal (cb As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocHGlobal(IntPtr cb);" />
      <MemberSignature Language="F#" Value="static member AllocHGlobal : nativeint -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.AllocHGlobal cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="cb"><span data-ttu-id="bb2a9-147">메모리에서 필요한 바이트 수 입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-147">The required number of bytes in memory.</span></span></param>
        <summary><span data-ttu-id="bb2a9-148">지정된 바이트 수에 대한 포인터를 사용하여 프로세스의 관리되지 않는 메모리에서 메모리를 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-148">Allocates memory from the unmanaged memory of the process by using the pointer to the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-149">새로 할당된 메모리에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-149">A pointer to the newly allocated memory.</span></span> <span data-ttu-id="bb2a9-150">이 메모리는 <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> 메서드를 사용하여 해제되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-150">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-151"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> 두 가지 메모리 할당 방법 중 하나인는 <xref:System.Runtime.InteropServices.Marshal> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-151"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> is one of two memory allocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="bb2a9-152">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> 다른 됩니다.) 이 메서드는 Win32 노출 [LocalAlloc](https://go.microsoft.com/fwlink/?LinkID=148628) Kernel32.dll에서 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-152">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> is the other.) This method exposes the Win32 [LocalAlloc](https://go.microsoft.com/fwlink/?LinkID=148628) function from Kernel32.dll.</span></span>  
  
 <span data-ttu-id="bb2a9-153">때 <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> 호출 `LocalAlloc`, 전달를 `LMEM_FIXED` 잠그는에 할당 된 메모리를 플래그 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-153">When <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> calls `LocalAlloc`, it passes a `LMEM_FIXED` flag, which causes the allocated memory to be locked in place.</span></span> <span data-ttu-id="bb2a9-154">또한 할당 된 메모리가 0-채워지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-154">Also, the allocated memory is not zero-filled.</span></span>  
  
 <span data-ttu-id="bb2a9-155">예제 코드는 <xref:System.Runtime.InteropServices.Marshal> 및 <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-155">For example code, see <xref:System.Runtime.InteropServices.Marshal> and <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-156">메모리가 부족하여 요청을 만족시킬 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-156">There is insufficient memory to satisfy the request.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-157">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-157">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-158">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-158">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="AreComObjectsAvailableForCleanup">
      <MemberSignature Language="C#" Value="public static bool AreComObjectsAvailableForCleanup ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreComObjectsAvailableForCleanup() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AreComObjectsAvailableForCleanup () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool AreComObjectsAvailableForCleanup();" />
      <MemberSignature Language="F#" Value="static member AreComObjectsAvailableForCleanup : unit -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb2a9-159">어떤 컨텍스트에서 RCW(런타임 호출 가능 래퍼)를 정리에 사용할 수 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-159">Indicates whether runtime callable wrappers (RCWs) from any context are available for cleanup.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-160">정리에 사용할 수 있는 RCW가 하나라도 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-160"><see langword="true" /> if there are any RCWs available for cleanup; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-161">전체 종속성 그래프를 사용 하 여 관리 및 네이티브 코드 간의 참조 많은 경우 모든 개체를 정리 하기 위해 시간이 오래 걸릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-161">If there are a lot of references between managed and native code with deep dependency graphs it can take a long time for all the objects to clean up.</span></span> <span data-ttu-id="bb2a9-162">GC가 실행 될 때마다 몇 개의 기본 COM 개체에 출시 될 Rcw 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-162">Each time a GC runs it will free up some number of RCWs, which will in turn release the underlying COM objects.</span></span> <span data-ttu-id="bb2a9-163">이러한 COM 개체는 그 다음, 해당 관리 되는 참조를 해제 개체가 정리에 사용할 다음에 프로세스를 시작 하는 gc가 실행 될 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-163">Those COM objects will then release their managed references and make more objects available for cleanup the next time a GC runs, which starts the process over again.</span></span>  
  
 <span data-ttu-id="bb2a9-164"><xref:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup%2A> 메서드 gc 개수 주기를 확인 하려면 응용 프로그램에 대 한 방법을 제공 합니다. 수집 및 GC 합니다. WaitForPendingFinalizers는 모든 항목을 정리 하기 위해 수행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-164">The <xref:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup%2A> method provides a way for the application to determine how many cycles of GC.Collect and GC.WaitForPendingFinalizers need to happen in order to clean everything up.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-165">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-165">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-166">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-166">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BindToMoniker">
      <MemberSignature Language="C#" Value="public static object BindToMoniker (string monikerName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object BindToMoniker(string monikerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BindToMoniker (monikerName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BindToMoniker(System::String ^ monikerName);" />
      <MemberSignature Language="F#" Value="static member BindToMoniker : string -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.BindToMoniker monikerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="monikerName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="monikerName"><span data-ttu-id="bb2a9-167">원하는 인터페이스 포인터에 해당하는 모니커입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-167">The moniker corresponding to the desired interface pointer.</span></span></param>
        <summary><span data-ttu-id="bb2a9-168">지정된 모니커로 식별되는 인터페이스 포인터를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-168">Gets an interface pointer identified by the specified moniker.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-169"><paramref name="monikerName" /> 매개 변수로 식별되는 인터페이스 포인터에 대한 참조가 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-169">An object containing a reference to the interface pointer identified by the <paramref name="monikerName" /> parameter.</span></span> <span data-ttu-id="bb2a9-170">모니커는 이름이며 이 경우에는 인터페이스로 정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-170">A moniker is a name, and in this case, the moniker is defined by an interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-171"><xref:System.Runtime.InteropServices.Marshal.BindToMoniker%2A> COM 노출 `BindToMoniker` 메서드를 필요한 COM 인터페이스로 캐스팅할 수 있는 개체를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-171"><xref:System.Runtime.InteropServices.Marshal.BindToMoniker%2A> exposes the COM `BindToMoniker` method, which produces an object that you can cast to any COM interface you require.</span></span> <span data-ttu-id="bb2a9-172">이 메서드는 동일한 기능을 제공 합니다 `GetObject` Visual Basic 6.0의 메서드 및 [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-172">This method provides the same functionality as the `GetObject` method in Visual Basic 6.0 and [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bb2a9-173">인식할 수 없는 HRESULT가 관리되지 않는 <see langword="BindToMoniker" /> 메서드에서 반환되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-173">An unrecognized HRESULT was returned by the unmanaged <see langword="BindToMoniker" /> method.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-174">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-174">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-175">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-175">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BufferToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr BufferToBSTR (Array ptr, int slen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int BufferToBSTR(class System.Array ptr, int32 slen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.BufferToBSTR(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BufferToBSTR (ptr As Array, slen As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr BufferToBSTR(Array ^ ptr, int slen);" />
      <MemberSignature Language="F#" Value="static member BufferToBSTR : Array * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.BufferToBSTR (ptr, slen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Array" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="slen" Type="System.Int32" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <param name="slen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeWrapperHandleStrength">
      <MemberSignature Language="C#" Value="public static void ChangeWrapperHandleStrength (object otp, bool fIsWeak);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangeWrapperHandleStrength(object otp, bool fIsWeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangeWrapperHandleStrength (otp As Object, fIsWeak As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangeWrapperHandleStrength(System::Object ^ otp, bool fIsWeak);" />
      <MemberSignature Language="F#" Value="static member ChangeWrapperHandleStrength : obj * bool -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength (otp, fIsWeak)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otp" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fIsWeak" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="otp"><span data-ttu-id="bb2a9-176">CCW에 참조 횟수가 계산된 핸들이 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-176">The object whose CCW holds a reference counted handle.</span></span> <span data-ttu-id="bb2a9-177">CCW의 참조 횟수가 0보다 크면 핸들이 강하고, 그렇지 않으면 핸들이 약합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-177">The handle is strong if the reference count on the CCW is greater than zero; otherwise, it is weak.</span></span></param>
        <param name="fIsWeak"><span data-ttu-id="bb2a9-178">참조 횟수에 관계없이 <paramref name="otp" /> 매개 변수에 대한 핸들 강도를 약하게 변경하려면 <see langword="true" />이고, 참조 횟수가 계산될 <paramref name="otp" />에 대한 핸들 강도를 다시 설정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-178"><see langword="true" /> to change the strength of the handle on the <paramref name="otp" /> parameter to weak, regardless of its reference count; <see langword="false" /> to reset the handle strength on <paramref name="otp" /> to be reference counted.</span></span></param>
        <summary><span data-ttu-id="bb2a9-179">개체의 [CCW(COM Callable Wrapper)](~/docs/framework/interop/com-callable-wrapper.md) 핸들 강도를 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-179">Changes the strength of an object's [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) (CCW) handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-180"><xref:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength%2A> 개체 풀링 기능에 사용 되 고 직접 사용자 코드에서 호출 되지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-180"><xref:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength%2A> is used for object pooling functionality and should never be called by user code directly.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-181">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-181">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-182">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-182">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CleanupUnusedObjectsInCurrentContext">
      <MemberSignature Language="C#" Value="public static void CleanupUnusedObjectsInCurrentContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CleanupUnusedObjectsInCurrentContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CleanupUnusedObjectsInCurrentContext ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CleanupUnusedObjectsInCurrentContext();" />
      <MemberSignature Language="F#" Value="static member CleanupUnusedObjectsInCurrentContext : unit -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb2a9-183">현재 컨텍스트에서 할당된 모든 <see href="https://docs.microsoft.com/dotnet/framework/interop/runtime-callable-wrapper">RCW(런타임 호출 가능 래퍼)</see>를 정리하도록 런타임에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-183">Notifies the runtime to clean up all <see href="https://docs.microsoft.com/dotnet/framework/interop/runtime-callable-wrapper">Runtime Callable Wrappers</see> (RCWs) allocated in the current context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-184">Interop 시스템 Rcw 정리 하려고 하는 동안 메시지를 펌핑 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-184">The interop system pumps messages while it attempts to clean up RCWs.</span></span> <span data-ttu-id="bb2a9-185">이렇게 하면 펌프 충분히 자주 실행 하지 않는 하는 응용 프로그램을 포함 하는 모든 응용 프로그램에서 실행 되는 단일 스레드 아파트 (STA) Rcw 정리 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-185">This ensures that cleanup for single-threaded apartment (STA) RCWs happens in all applications, including applications that do not pump often enough.</span></span> <span data-ttu-id="bb2a9-186">그러나 적절 하 게 펌프 하지 않는 일부 응용 프로그램은 발생 펌프에 매우 민감합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-186">However, some applications that do pump appropriately are very sensitive to where pumping occurs.</span></span> <span data-ttu-id="bb2a9-187">때 예기치 않은 위치에서 이러한 응용 프로그램에서 메시지를 펌핑 하는 interop 시스템, 응용 프로그램 진단 하기 어려운 재진입 문제가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-187">When the interop system pumps messages in these applications, in places that are unexpected, , the application can encounter reentrancy issues that are difficult to diagnose.</span></span> <span data-ttu-id="bb2a9-188">따라서 응용 프로그램은 특정 STA에 대 한 Rcw 정리 제어 하려면 자신의 펌프를 제어할 수 없게 되도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-188">Therefore, applications need to be able to control their own pumping for a particular STA and to control the clean-up of RCWs.</span></span>  
  
 <span data-ttu-id="bb2a9-189">그러나 개발자만 종종 해당 응용 프로그램의 스레드 하위 집합을 제어 하 고 따라서 보장할 수 없습니다 모든 스레드가 적절 하 게 펌프 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-189">However, developers often only control a subset of the threads in their application and thus cannot ensure that all threads are pumping appropriately.</span></span>  
  
 <span data-ttu-id="bb2a9-190">이 문제 해결:</span><span class="sxs-lookup"><span data-stu-id="bb2a9-190">To solve this problem:</span></span>  
  
1.  <span data-ttu-id="bb2a9-191">사용 된 <xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A?displayProperty=nameWithType> Rcw를 및 스레드 단위 별로 발생 하는 메시지 펌프의 자동 정리를 해제 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-191">Use the <xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A?displayProperty=nameWithType> method to turn off automatic cleanup of RCWs, and the message pumping that occurs, on a per-thread basis.</span></span> <span data-ttu-id="bb2a9-192">개발자를 자동 정리 하 고 해당 메시지 펌프를 옵트아웃 하려면 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-192">This allows developers to opt out of automatic clean-up, and the corresponding message pumping.</span></span>  
  
2.  <span data-ttu-id="bb2a9-193">사용 된 <xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A> 메서드를 현재 컨텍스트에서 할당 된 모든 Rcw 정리 하도록 런타임에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-193">Use the <xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A> method to notify the runtime to clean up all RCWs that are allocated in the current context.</span></span> <span data-ttu-id="bb2a9-194">이 도우미 메서드를 사용 하면 런타임은 현재 컨텍스트에서 정리를 수행 하는 경우를 정확 하 게 제어 하는 개발자.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-194">This companion method allows developers to precisely control when the runtime performs cleanup in the current context.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-195">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-195">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-196">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-196">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Copy">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-197">관리되는 배열에서 관리되지 않는 메모리 포인터로 데이터를 복사하거나 관리되지 않는 메모리 포인터에서 관리되는 배열로 데이터를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-197">Copies data from a managed array to an unmanaged memory pointer, or from an unmanaged memory pointer to a managed array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (byte[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(unsigned int8[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Byte(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;System::Byte&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : byte[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bb2a9-198">복사할 1차원 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-198">The one-dimensional array to copy from.</span></span></param>
        <param name="startIndex"><span data-ttu-id="bb2a9-199">소스 배열에서 복사를 시작해야 할 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-199">The zero-based index in the source array where copying should start.</span></span></param>
        <param name="destination"><span data-ttu-id="bb2a9-200">복사할 대상 메모리 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-200">The memory pointer to copy to.</span></span></param>
        <param name="length"><span data-ttu-id="bb2a9-201">복사할 배열 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-201">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-202">관리되는 8비트 부호 없는 1차원 정수 배열의 데이터를 관리되지 않는 메모리 포인터로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-202">Copies data from a one-dimensional, managed 8-bit unsigned integer array to an unmanaged memory pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-203">관리 되는 1 차원 배열의 하위 집합 관리 되지 않는 C 스타일 배열에 복사 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-203">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-204">다음 예제에서는 관리 되지 않는 메모리를 사용 하 여 배열에 복사 합니다 <xref:System.Runtime.InteropServices.Marshal.Copy%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.IntPtr%2CSystem.Int32%29> 오버 로드 하 고 다음 사용 하 여 관리 되지 않는 배열을 관리 되는 메모리에 다시 복사를 <xref:System.Runtime.InteropServices.Marshal.Copy%28System.IntPtr%2CSystem.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-204">The following example copies an array to unmanaged memory by using the <xref:System.Runtime.InteropServices.Marshal.Copy%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.IntPtr%2CSystem.Int32%29> overload, and then copies the unmanaged array back to managed memory by using the <xref:System.Runtime.InteropServices.Marshal.Copy%28System.IntPtr%2CSystem.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb2a9-205"><paramref name="startIndex" /> 및 <paramref name="length" />가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-205"><paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-206"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> 또는 <paramref name="length" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-206"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-207">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-207">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-208">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-208">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (char[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(char[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Char(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;char&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : char[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bb2a9-209">복사할 1차원 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-209">The one-dimensional array to copy from.</span></span></param>
        <param name="startIndex"><span data-ttu-id="bb2a9-210">소스 배열에서 복사를 시작해야 할 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-210">The zero-based index in the source array where copying should start.</span></span></param>
        <param name="destination"><span data-ttu-id="bb2a9-211">복사할 대상 메모리 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-211">The memory pointer to copy to.</span></span></param>
        <param name="length"><span data-ttu-id="bb2a9-212">복사할 배열 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-212">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-213">관리되는 1차원 문자 배열의 데이터를 관리되지 않는 메모리 포인터로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-213">Copies data from a one-dimensional, managed character array to an unmanaged memory pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-214">관리 되는 1 차원 배열의 하위 집합 관리 되지 않는 C 스타일 배열에 복사 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-214">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-215">다음 예제에서는 관리 되지 않는 메모리에 배열을 복사 하 고 관리 되지 않는 배열을 관리 되는 메모리에 다시 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-215">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb2a9-216"><paramref name="startIndex" /> 및 <paramref name="length" />가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-216"><paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-217"><paramref name="startIndex" />, <paramref name="destination" /> 또는 <paramref name="length" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-217"><paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-218">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-218">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-219">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-219">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (double[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(float64[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Double(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;double&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : double[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Double[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bb2a9-220">복사할 1차원 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-220">The one-dimensional array to copy from.</span></span></param>
        <param name="startIndex"><span data-ttu-id="bb2a9-221">소스 배열에서 복사를 시작해야 할 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-221">The zero-based index in the source array where copying should start.</span></span></param>
        <param name="destination"><span data-ttu-id="bb2a9-222">복사할 대상 메모리 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-222">The memory pointer to copy to.</span></span></param>
        <param name="length"><span data-ttu-id="bb2a9-223">복사할 배열 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-223">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-224">관리되는 1차원 배정밀도 부동 소수점 수 배열의 데이터를 관리되지 않는 메모리 포인터로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-224">Copies data from a one-dimensional, managed double-precision floating-point number array to an unmanaged memory pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-225">관리 되는 1 차원 배열의 하위 집합 관리 되지 않는 C 스타일 배열에 복사 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-225">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-226">다음 예제에서는 관리 되지 않는 메모리에 배열을 복사 하 고 관리 되지 않는 배열을 관리 되는 메모리에 다시 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-226">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb2a9-227"><paramref name="startIndex" /> 및 <paramref name="length" />가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-227"><paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-228"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> 또는 <paramref name="length" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-228"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-229">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-229">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-230">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-230">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (short[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int16[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Short(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;short&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : int16[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int16[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bb2a9-231">복사할 1차원 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-231">The one-dimensional array to copy from.</span></span></param>
        <param name="startIndex"><span data-ttu-id="bb2a9-232">소스 배열에서 복사를 시작해야 할 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-232">The zero-based index in the source array where copying should start.</span></span></param>
        <param name="destination"><span data-ttu-id="bb2a9-233">복사할 대상 메모리 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-233">The memory pointer to copy to.</span></span></param>
        <param name="length"><span data-ttu-id="bb2a9-234">복사할 배열 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-234">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-235">관리되는 16비트 부호 있는 1차원 정수 배열의 데이터를 관리되지 않는 메모리 포인터로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-235">Copies data from a one-dimensional, managed 16-bit signed integer array to an unmanaged memory pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-236">관리 되는 1 차원 배열의 하위 집합 관리 되지 않는 C 스타일 배열에 복사 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-236">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-237">다음 예제에서는 관리 되지 않는 메모리에 배열을 복사 하 고 관리 되지 않는 배열을 관리 되는 메모리에 다시 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-237">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb2a9-238"><paramref name="startIndex" /> 및 <paramref name="length" />가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-238"><paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-239"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> 또는 <paramref name="length" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-239"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-240">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-240">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-241">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-241">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (int[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int32[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Integer(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;int&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : int[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int32[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bb2a9-242">복사할 1차원 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-242">The one-dimensional array to copy from.</span></span></param>
        <param name="startIndex"><span data-ttu-id="bb2a9-243">소스 배열에서 복사를 시작해야 할 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-243">The zero-based index in the source array where copying should start.</span></span></param>
        <param name="destination"><span data-ttu-id="bb2a9-244">복사할 대상 메모리 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-244">The memory pointer to copy to.</span></span></param>
        <param name="length"><span data-ttu-id="bb2a9-245">복사할 배열 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-245">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-246">관리되는 32비트 부호 있는 1차원 정수 배열의 데이터를 관리되지 않는 메모리 포인터로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-246">Copies data from a one-dimensional, managed 32-bit signed integer array to an unmanaged memory pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-247">관리 되는 1 차원 배열의 하위 집합 관리 되지 않는 C 스타일 배열에 복사 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-247">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-248">다음 예제에서는 관리 되지 않는 메모리에 배열을 복사 하 고 관리 되지 않는 배열을 관리 되는 메모리에 다시 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-248">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb2a9-249"><paramref name="startIndex" /> 및 <paramref name="length" />가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-249"><paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-250"><paramref name="startIndex" /> 또는 <paramref name="length" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-250"><paramref name="startIndex" /> or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-251">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-251">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-252">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-252">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (long[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int64[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Long(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;long&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : int64[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int64[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bb2a9-253">복사할 1차원 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-253">The one-dimensional array to copy from.</span></span></param>
        <param name="startIndex"><span data-ttu-id="bb2a9-254">소스 배열에서 복사를 시작해야 할 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-254">The zero-based index in the source array where copying should start.</span></span></param>
        <param name="destination"><span data-ttu-id="bb2a9-255">복사할 대상 메모리 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-255">The memory pointer to copy to.</span></span></param>
        <param name="length"><span data-ttu-id="bb2a9-256">복사할 배열 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-256">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-257">관리되는 64비트 부호 있는 1차원 정수 배열의 데이터를 관리되지 않는 메모리 포인터로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-257">Copies data from a one-dimensional, managed 64-bit signed integer array to an unmanaged memory pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-258">관리 되는 1 차원 배열의 하위 집합 관리 되지 않는 C 스타일 배열에 복사 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-258">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-259">다음 예제에서는 관리 되지 않는 메모리에 배열을 복사 하 고 관리 되지 않는 배열을 관리 되는 메모리에 다시 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-259">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb2a9-260"><paramref name="startIndex" /> 및 <paramref name="length" />가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-260"><paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-261"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> 또는 <paramref name="length" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-261"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-262">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-262">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-263">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-263">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, byte[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, unsigned int8[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Byte(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;System::Byte&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * byte[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bb2a9-264">복사할 메모리 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-264">The memory pointer to copy from.</span></span></param>
        <param name="destination"><span data-ttu-id="bb2a9-265">복사할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-265">The array to copy to.</span></span></param>
        <param name="startIndex"><span data-ttu-id="bb2a9-266">대상 배열에서 복사를 시작해야 할 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-266">The zero-based index in the destination array where copying should start.</span></span></param>
        <param name="length"><span data-ttu-id="bb2a9-267">복사할 배열 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-267">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-268">관리되지 않는 메모리 포인터의 데이터를 관리되는 8비트 부호 없는 정수 배열로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-268">Copies data from an unmanaged memory pointer to a managed 8-bit unsigned integer array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-269">관리 되지 않는, C 스타일 배열 없는 방지 하는 경계 정보를 `startIndex` 및 `length` 매개 변수 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-269">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="bb2a9-270">해당 하는 관리 되지 않는 데이터 따라서는 `source` 매개 변수 유용성에 관계 없이 관리 되는 배열을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-270">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="bb2a9-271">이 메서드를 호출 하기 전에 적절 한 크기를 사용 하 여 관리 되는 배열을 초기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-271">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-272">다음 예제에서는 관리 되지 않는 메모리에 배열을 복사 하 고 관리 되지 않는 배열을 관리 되는 메모리에 다시 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-272">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-273"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> 또는 <paramref name="length" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-273"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-274">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-274">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-275">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-275">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, char[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, char[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Char(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;char&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * char[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bb2a9-276">복사할 메모리 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-276">The memory pointer to copy from.</span></span></param>
        <param name="destination"><span data-ttu-id="bb2a9-277">복사할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-277">The array to copy to.</span></span></param>
        <param name="startIndex"><span data-ttu-id="bb2a9-278">대상 배열에서 복사를 시작해야 할 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-278">The zero-based index in the destination array where copying should start.</span></span></param>
        <param name="length"><span data-ttu-id="bb2a9-279">복사할 배열 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-279">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-280">관리되지 않는 메모리 포인터의 데이터를 관리되는 문자 배열로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-280">Copies data from an unmanaged memory pointer to a managed character array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-281">관리 되지 않는, C 스타일 배열 없는 방지 하는 경계 정보를 `startIndex` 및 `length` 매개 변수 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-281">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="bb2a9-282">해당 하는 관리 되지 않는 데이터 따라서는 `source` 매개 변수 유용성에 관계 없이 관리 되는 배열을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-282">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="bb2a9-283">이 메서드를 호출 하기 전에 적절 한 크기를 사용 하 여 관리 되는 배열을 초기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-283">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-284">다음 예제에서는 관리 되지 않는 메모리에 배열을 복사 하 고 관리 되지 않는 배열을 관리 되는 메모리에 다시 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-284">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-285"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> 또는 <paramref name="length" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-285"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-286">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-286">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-287">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-287">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, double[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, float64[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Double(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;double&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * double[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Double[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bb2a9-288">복사할 메모리 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-288">The memory pointer to copy from.</span></span></param>
        <param name="destination"><span data-ttu-id="bb2a9-289">복사할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-289">The array to copy to.</span></span></param>
        <param name="startIndex"><span data-ttu-id="bb2a9-290">대상 배열에서 복사를 시작해야 할 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-290">The zero-based index in the destination array where copying should start.</span></span></param>
        <param name="length"><span data-ttu-id="bb2a9-291">복사할 배열 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-291">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-292">관리되지 않는 메모리 포인터의 데이터를 관리되는 배정밀도 부동 소수점 수 배열로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-292">Copies data from an unmanaged memory pointer to a managed double-precision floating-point number array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-293">관리 되지 않는, C 스타일 배열 없는 방지 하는 경계 정보를 `startIndex` 및 `length` 매개 변수 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-293">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="bb2a9-294">해당 하는 관리 되지 않는 데이터 따라서는 `source` 매개 변수 유용성에 관계 없이 관리 되는 배열을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-294">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="bb2a9-295">이 메서드를 호출 하기 전에 적절 한 크기를 사용 하 여 관리 되는 배열을 초기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-295">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-296">다음 예제에서는 관리 되지 않는 메모리에 배열을 복사 하 고 관리 되지 않는 배열을 관리 되는 메모리에 다시 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-296">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-297"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> 또는 <paramref name="length" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-297"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-298">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-298">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-299">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-299">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, short[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int16[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Short(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;short&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * int16[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int16[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bb2a9-300">복사할 메모리 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-300">The memory pointer to copy from.</span></span></param>
        <param name="destination"><span data-ttu-id="bb2a9-301">복사할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-301">The array to copy to.</span></span></param>
        <param name="startIndex"><span data-ttu-id="bb2a9-302">대상 배열에서 복사를 시작해야 할 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-302">The zero-based index in the destination array where copying should start.</span></span></param>
        <param name="length"><span data-ttu-id="bb2a9-303">복사할 배열 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-303">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-304">관리되지 않는 메모리 포인터의 데이터를 관리되는 16비트 부호 있는 정수 배열로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-304">Copies data from an unmanaged memory pointer to a managed 16-bit signed integer array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-305">관리 되지 않는, C 스타일 배열 없는 방지 하는 경계 정보를 `startIndex` 및 `length` 매개 변수 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-305">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="bb2a9-306">해당 하는 관리 되지 않는 데이터 따라서는 `source` 매개 변수 유용성에 관계 없이 관리 되는 배열을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-306">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="bb2a9-307">이 메서드를 호출 하기 전에 적절 한 크기를 사용 하 여 관리 되는 배열을 초기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-307">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-308">다음 예제에서는 관리 되지 않는 메모리에 배열을 복사 하 고 관리 되지 않는 배열을 관리 되는 메모리에 다시 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-308">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-309"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> 또는 <paramref name="length" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-309"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-310">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-310">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-311">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-311">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, int[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int32[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Integer(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;int&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * int[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int32[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bb2a9-312">복사할 메모리 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-312">The memory pointer to copy from.</span></span></param>
        <param name="destination"><span data-ttu-id="bb2a9-313">복사할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-313">The array to copy to.</span></span></param>
        <param name="startIndex"><span data-ttu-id="bb2a9-314">대상 배열에서 복사를 시작해야 할 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-314">The zero-based index in the destination array where copying should start.</span></span></param>
        <param name="length"><span data-ttu-id="bb2a9-315">복사할 배열 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-315">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-316">관리되지 않는 메모리 포인터의 데이터를 관리되는 32비트 부호 있는 정수 배열로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-316">Copies data from an unmanaged memory pointer to a managed 32-bit signed integer array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-317">관리 되지 않는, C 스타일 배열 없는 방지 하는 경계 정보를 `startIndex` 및 `length` 매개 변수 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-317">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="bb2a9-318">해당 하는 관리 되지 않는 데이터 따라서는 `source` 매개 변수 유용성에 관계 없이 관리 되는 배열을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-318">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="bb2a9-319">이 메서드를 호출 하기 전에 적절 한 크기를 사용 하 여 관리 되는 배열을 초기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-319">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-320">다음 예제에서는 관리 되지 않는 메모리에 배열을 복사 하 고 관리 되지 않는 배열을 관리 되는 메모리에 다시 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-320">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-321"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> 또는 <paramref name="length" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-321"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-322">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-322">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-323">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-323">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, long[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int64[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Long(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;long&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * int64[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int64[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bb2a9-324">복사할 메모리 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-324">The memory pointer to copy from.</span></span></param>
        <param name="destination"><span data-ttu-id="bb2a9-325">복사할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-325">The array to copy to.</span></span></param>
        <param name="startIndex"><span data-ttu-id="bb2a9-326">대상 배열에서 복사를 시작해야 할 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-326">The zero-based index in the destination array where copying should start.</span></span></param>
        <param name="length"><span data-ttu-id="bb2a9-327">복사할 배열 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-327">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-328">관리되지 않는 메모리 포인터의 데이터를 관리되는 64비트 부호 있는 정수 배열로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-328">Copies data from an unmanaged memory pointer to a managed 64-bit signed integer array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-329">관리 되지 않는, C 스타일 배열 없는 방지 하는 경계 정보를 `startIndex` 및 `length` 매개 변수 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-329">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="bb2a9-330">해당 하는 관리 되지 않는 데이터 따라서는`source` 매개 변수 유용성에 관계 없이 관리 되는 배열을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-330">Thus, the unmanaged data corresponding to the`source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="bb2a9-331">이 메서드를 호출 하기 전에 적절 한 크기를 사용 하 여 관리 되는 배열을 초기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-331">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-332">다음 예제에서는 관리 되지 않는 메모리에 배열을 복사 하 고 관리 되지 않는 배열을 관리 되는 메모리에 다시 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-332">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-333"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> 또는 <paramref name="length" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-333"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-334">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-334">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-335">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-335">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, IntPtr[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, native int[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As IntPtr(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;IntPtr&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * nativeint[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destination" Type="System.IntPtr[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="length" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bb2a9-336">복사할 메모리 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-336">The memory pointer to copy from.</span></span></param>
        <param name="destination"><span data-ttu-id="bb2a9-337">복사할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-337">The array to copy to.</span></span></param>
        <param name="startIndex"><span data-ttu-id="bb2a9-338">대상 배열에서 복사를 시작해야 할 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-338">The zero-based index in the destination array where copying should start.</span></span></param>
        <param name="length"><span data-ttu-id="bb2a9-339">복사할 배열 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-339">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-340">관리되지 않는 메모리 포인터의 데이터를 관리되는 <see cref="T:System.IntPtr" /> 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-340">Copies data from an unmanaged memory pointer to a managed <see cref="T:System.IntPtr" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-341">관리 되지 않는, C 스타일 배열 없는 방지 하는 경계 정보를 `startIndex` 및 `length` 매개 변수 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-341">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="bb2a9-342">따라서 관리 되지 않는 데이터에 해당 하는 `source` 매개 변수 유용성에 관계 없이 관리 되는 배열을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-342">Therefore, the unmanaged data that corresponds to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="bb2a9-343">호출 하기 전에 적절 한 크기를 사용 하 여 관리 되는 배열을 초기화 해야 합니다 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-343">You must initialize the managed array with the appropriate size before calling the <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-344"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> 또는 <paramref name="length" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-344"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-345">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-345">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-346">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-346">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, float[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, float32[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Single(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;float&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * single[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Single[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bb2a9-347">복사할 메모리 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-347">The memory pointer to copy from.</span></span></param>
        <param name="destination"><span data-ttu-id="bb2a9-348">복사할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-348">The array to copy to.</span></span></param>
        <param name="startIndex"><span data-ttu-id="bb2a9-349">대상 배열에서 복사를 시작해야 할 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-349">The zero-based index in the destination array where copying should start.</span></span></param>
        <param name="length"><span data-ttu-id="bb2a9-350">복사할 배열 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-350">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-351">관리되지 않는 메모리 포인터의 데이터를 관리되는 단정밀도 부동 소수점 수 배열로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-351">Copies data from an unmanaged memory pointer to a managed single-precision floating-point number array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-352">관리 되지 않는, C 스타일 배열 없는 방지 하는 경계 정보를 `startIndex` 및 `length` 매개 변수 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-352">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="bb2a9-353">해당 하는 관리 되지 않는 데이터 따라서는 `source` 매개 변수 유용성에 관계 없이 관리 되는 배열을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-353">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="bb2a9-354">이 메서드를 호출 하기 전에 적절 한 크기를 사용 하 여 관리 되는 배열을 초기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-354">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-355"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> 또는 <paramref name="length" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-355"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-356">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-356">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-357">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-357">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;IntPtr&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="startIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destination" Type="System.IntPtr" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="length" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bb2a9-358">복사할 1차원 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-358">The one-dimensional array to copy from.</span></span></param>
        <param name="startIndex"><span data-ttu-id="bb2a9-359">소스 배열에서 복사를 시작해야 할 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-359">The zero-based index in the source array where copying should start.</span></span></param>
        <param name="destination"><span data-ttu-id="bb2a9-360">복사할 대상 메모리 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-360">The memory pointer to copy to.</span></span></param>
        <param name="length"><span data-ttu-id="bb2a9-361">복사할 배열 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-361">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-362">관리되는 <see cref="T:System.IntPtr" /> 배열의 데이터를 관리되지 않는 메모리 포인터에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-362">Copies data from a one-dimensional, managed <see cref="T:System.IntPtr" /> array to an unmanaged memory pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-363">이 메서드를 사용 하 여 관리 되는 1 차원 하위 집합을 복사할 <xref:System.IntPtr> 관리 되지 않는 C 스타일 배열에는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-363">You can use this method to copy a subset of a one-dimensional managed <xref:System.IntPtr> array to an unmanaged C-style array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-364"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> 또는 <paramref name="length" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-364"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-365">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-365">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-366">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-366">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (float[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(float32[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Single(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;float&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : single[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Single[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bb2a9-367">복사할 1차원 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-367">The one-dimensional array to copy from.</span></span></param>
        <param name="startIndex"><span data-ttu-id="bb2a9-368">소스 배열에서 복사를 시작해야 할 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-368">The zero-based index in the source array where copying should start.</span></span></param>
        <param name="destination"><span data-ttu-id="bb2a9-369">복사할 대상 메모리 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-369">The memory pointer to copy to.</span></span></param>
        <param name="length"><span data-ttu-id="bb2a9-370">복사할 배열 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-370">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-371">관리되는 1차원 단정밀도 부동 소수점 수 배열의 데이터를 관리되지 않는 메모리 포인터로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-371">Copies data from a one-dimensional, managed single-precision floating-point number array to an unmanaged memory pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-372">관리 되는 1 차원 배열의 하위 집합 관리 되지 않는 C 스타일 배열에 복사 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-372">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb2a9-373"><paramref name="startIndex" /> 및 <paramref name="length" />가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-373"><paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-374"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> 또는 <paramref name="length" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-374"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-375">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-375">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-376">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-376">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateAggregatedObject">
      <MemberSignature Language="C#" Value="public static IntPtr CreateAggregatedObject (IntPtr pOuter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateAggregatedObject(native int pOuter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAggregatedObject (pOuter As IntPtr, o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateAggregatedObject(IntPtr pOuter, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member CreateAggregatedObject : nativeint * obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.CreateAggregatedObject (pOuter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("CreateAggregatedObject(IntPtr, Object) may be unavailable in future releases. Instead, use CreateAggregatedObject&lt;T&gt;(IntPtr, T). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296518")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pOuter" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pOuter"><span data-ttu-id="bb2a9-377">외부 <see langword="IUnknown" /> 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-377">The outer <see langword="IUnknown" /> pointer.</span></span></param>
        <param name="o"><span data-ttu-id="bb2a9-378">집계할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-378">An object to aggregate.</span></span></param>
        <summary><span data-ttu-id="bb2a9-379">지정된 COM 개체를 사용하여 관리되는 개체를 집계합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-379">Aggregates a managed object with the specified COM object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-380">관리되는 개체의 내부 <see langword="IUnknown" /> 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-380">The inner <see langword="IUnknown" /> pointer of the managed object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-381">합니다 <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> 메서드는 지정된 된 외부 포인터를 사용 하 여 관리 되는 개체의 내부 관리 되는 포인터를 집계 하 고 내부를 반환 합니다 [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) 관리 되는 개체의 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-381">The <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> method aggregates the inner managed pointer of a managed object with the specified outer pointer, and then returns an inner [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-382"><paramref name="o" />가 [!INCLUDE[wrt](~/includes/wrt-md.md)] 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-382"><paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-383">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-383">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-384">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-384">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateAggregatedObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr CreateAggregatedObject&lt;T&gt; (IntPtr pOuter, T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateAggregatedObject&lt;T&gt;(native int pOuter, !!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAggregatedObject(Of T) (pOuter As IntPtr, o As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr CreateAggregatedObject(IntPtr pOuter, T o);" />
      <MemberSignature Language="F#" Value="static member CreateAggregatedObject : nativeint * 'T -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.CreateAggregatedObject (pOuter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="pOuter" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="o" Type="T" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bb2a9-385">집계할 관리되는 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-385">The type of the managed object to aggregate.</span></span></typeparam>
        <param name="pOuter"><span data-ttu-id="bb2a9-386">외부 [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-386">The outer [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) pointer.</span></span></param>
        <param name="o"><span data-ttu-id="bb2a9-387">집계할 관리되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-387">The managed object to aggregate.</span></span></param>
        <summary><span data-ttu-id="bb2a9-388">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="bb2a9-388">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="bb2a9-389">지정된 COM 개체를 사용하여 지정된 형식의 관리되는 개체를 집계합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-389">Aggregates a managed object of the specified type with the specified COM object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-390">관리되는 개체의 내부 <see href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</see> 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-390">The inner <see href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</see> pointer of the managed object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-391">합니다 <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> 메서드는 지정된 된 외부 포인터를 사용 하 여 지정 된 형식의 관리 되는 개체의 내부 관리 되는 포인터를 집계 하 고 내부 반환 [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) 관리 되는 개체의 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-391">The <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> method aggregates the inner managed pointer of a managed object of a specified type with the specified outer pointer, and returns an inner [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-392"><paramref name="o" />가 [!INCLUDE[wrt](~/includes/wrt-md.md)] 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-392"><paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-393">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-393">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-394">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-394">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateWrapperOfType">
      <MemberSignature Language="C#" Value="public static object CreateWrapperOfType (object o, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateWrapperOfType(object o, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWrapperOfType (o As Object, t As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateWrapperOfType(System::Object ^ o, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member CreateWrapperOfType : obj * Type -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.CreateWrapperOfType (o, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("CreateWrapperOfType(Object, Type) may be unavailable in future releases. Instead, use CreateWrapperOfType&lt;T,T2&gt;(T). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296519")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="bb2a9-395">래핑될 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-395">The object to be wrapped.</span></span></param>
        <param name="t"><span data-ttu-id="bb2a9-396">만들 래퍼의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-396">The type of wrapper to create.</span></span></param>
        <summary><span data-ttu-id="bb2a9-397">지정된 형식의 개체에 지정된 COM 개체를 래핑합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-397">Wraps the specified COM object in an object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-398">원하는 형식의 인스턴스인 새로 래핑된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-398">The newly wrapped object that is an instance of the desired type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-399"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%2A> 한 COM 클래스 형식에 일반적으로 기본 변환 `__ComObject` 형식 다른 COM 클래스 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-399"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%2A> converts one COM class type, typically the base `__ComObject` type, to another COM class type.</span></span> <span data-ttu-id="bb2a9-400">입력된 COM 개체를 매개 변수로 표현 `o`에를 [런타임 호출 가능 래퍼](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span><span class="sxs-lookup"><span data-stu-id="bb2a9-400">The input COM object, represented by parameter `o`, is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span></span>  
  
 <span data-ttu-id="bb2a9-401">모두를 `t` 하 고 `o` 매개 변수 시그니처 특성으로 지정 된 클래스 여야 합니다. <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-401">Both the `t` and `o` parameters must be classes whose signatures are attributed with <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bb2a9-402">합니다 [Tlbimp.exe (형식 라이브러리 가져오기)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) 도구 형식 라이브러리를 가져올 때이 특성을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-402">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span> <span data-ttu-id="bb2a9-403">소스 코드에서 수동으로 RCW를 만들면 해당 COM 원본을 나타내는 원래 coclass를 나타내는 관리 되는 서명에이 특성을 적용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-403">If you create the RCW manually in source code, you should apply this attribute to the managed signature that represents the original coclass to signify its COM origins.</span></span>  
  
 <span data-ttu-id="bb2a9-404">Tlbimp.exe 가져옵니다 COM [coclass](https://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) 관리 되는 클래스 및 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-404">Tlbimp.exe imports a COM [coclass](https://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) as a managed class and an interface.</span></span> <span data-ttu-id="bb2a9-405">Coclass 인터페이스에 동일한 이름을 원래 coclass 및 관리 되는 클래스 이름이 원래 coclass "Class"를 사용 하 여 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-405">The coclass interface has the same name as the original coclass, and the managed class has the original coclass name appended with "Class".</span></span> <span data-ttu-id="bb2a9-406">Coclass 호출 하는 예를 들어 `MyCoclass` 되는 coclass 인터페이스 호출 `MyCoclass` 라는 관리 되는 클래스 및 `MyCoclassClass`합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-406">For example, a coclass called `MyCoclass` becomes a coclass interface called `MyCoclass` and a managed class called `MyCoclassClass`.</span></span> <span data-ttu-id="bb2a9-407">하므로 `t` 인터페이스가 아닌 클래스를 관리 되는 클래스를 지정 해야 하는 데 해야 (`MyCoclassClass`) 및 coclass 인터페이스 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-407">Since `t` must be a class, not an interface, be sure to specify the managed class (`MyCoclassClass`) and not the coclass interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb2a9-408">COM 개체를 새 RCW 인스턴스 래핑하므로 입력의 id를 잃게 합니다 [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) 원래 RCW에 의해 노출 되는 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-408">You lose the identity of the input COM object because a new RCW instance wraps the [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) pointer exposed by the original RCW.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-409"><paramref name="t" />는 <see langword="__ComObject" />에서 파생되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-409"><paramref name="t" /> must derive from <see langword="__ComObject" />.</span></span>  
  
<span data-ttu-id="bb2a9-410">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-410">-or-</span></span> 
 <span data-ttu-id="bb2a9-411"><paramref name="t" />가 [!INCLUDE[wrt](~/includes/wrt-md.md)] 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-411"><paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-412"><paramref name="t" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-412">The <paramref name="t" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb2a9-413"><paramref name="o" />는 필요한 모든 인터페이스를 지원하지는 않으므로 대상 개체로 변환될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-413"><paramref name="o" /> cannot be converted to the destination type because it does not support all required interfaces.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-414">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-414">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-415">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-415">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CreateWrapperOfType&lt;T,TWrapper&gt;">
      <MemberSignature Language="C#" Value="public static TWrapper CreateWrapperOfType&lt;T,TWrapper&gt; (T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TWrapper CreateWrapperOfType&lt;T, TWrapper&gt;(!!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWrapperOfType(Of T, TWrapper) (o As T) As TWrapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TWrapper&gt;&#xA; static TWrapper CreateWrapperOfType(T o);" />
      <MemberSignature Language="F#" Value="static member CreateWrapperOfType : 'T -&gt; 'Wrapper" Usage="System.Runtime.InteropServices.Marshal.CreateWrapperOfType o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TWrapper</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TWrapper" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="T" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bb2a9-416">래핑할 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-416">The type of object to wrap.</span></span></typeparam>
        <typeparam name="TWrapper"><span data-ttu-id="bb2a9-417">반환할 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-417">The type of object to return.</span></span></typeparam>
        <param name="o"><span data-ttu-id="bb2a9-418">래핑될 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-418">The object to be wrapped.</span></span></param>
        <summary><span data-ttu-id="bb2a9-419">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="bb2a9-419">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="bb2a9-420">지정된 형식의 개체에 지정된 COM 개체를 래핑합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-420">Wraps the specified COM object in an object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-421">새로 래핑된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-421">The newly wrapped object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-422"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%60%602%28%60%600%29> 형식의 COM 개체를 변환 `T` 에 `TWrapper` COM 클래스 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-422"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%60%602%28%60%600%29> converts a COM object of type `T` to the `TWrapper` COM class type.</span></span> <span data-ttu-id="bb2a9-423">입력된 COM 개체를 매개 변수로 표현 `o`에를 [런타임 호출 가능 래퍼](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span><span class="sxs-lookup"><span data-stu-id="bb2a9-423">The input COM object, represented by parameter `o`, is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span></span>  
  
 <span data-ttu-id="bb2a9-424">모두를 `T` 제네릭 형식 매개 변수 및 `o` 매개 변수 시그니처 특성으로 지정 된 클래스 여야 합니다.는 <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-424">Both the `T` generic type parameter and the `o` parameter must be classes whose signatures are attributed with the <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> attribute.</span></span> <span data-ttu-id="bb2a9-425">합니다 [Tlbimp.exe (형식 라이브러리 가져오기)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) 도구 형식 라이브러리를 가져올 때이 특성을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-425">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span> <span data-ttu-id="bb2a9-426">소스 코드에서 수동으로 RCW를 만들면 해당 COM 원본을 나타내는 원래 coclass를 나타내는 관리 되는 서명에이 특성을 적용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-426">If you create the RCW manually in source code, you should apply this attribute to the managed signature that represents the original coclass to signify its COM origins.</span></span>  
  
 <span data-ttu-id="bb2a9-427">Tlbimp.exe 가져옵니다 COM [coclass](https://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) 관리 되는 클래스 및 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-427">Tlbimp.exe imports a COM [coclass](https://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) as a managed class and an interface.</span></span> <span data-ttu-id="bb2a9-428">Coclass 인터페이스에 동일한 이름을 원래 coclass 및 관리 되는 클래스 이름이 원래 coclass "Class"를 사용 하 여 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-428">The coclass interface has the same name as the original coclass, and the managed class has the original coclass name appended with "Class".</span></span> <span data-ttu-id="bb2a9-429">Coclass 호출 하는 예를 들어 `MyCoclass` 되는 coclass 인터페이스 호출 `MyCoclass` 라는 관리 되는 클래스 및 `MyCoclassClass`합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-429">For example, a coclass called `MyCoclass` becomes a coclass interface called `MyCoclass` and a managed class called `MyCoclassClass`.</span></span> <span data-ttu-id="bb2a9-430">때문에`T` 인터페이스가 아닌 클래스를 관리 되는 클래스를 지정 해야 이어야 합니다 (`MyCoclassClass`) 및 not을 `coclass` 인터페이스.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-430">Because`T` must be a class, not an interface, be sure to specify the managed class (`MyCoclassClass`) and not the `coclass` interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb2a9-431">새 RCW 인스턴스 래핑하므로 입력된 COM 개체의 id를 잃게 합니다 [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) 원래 RCW에 의해 노출 되는 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-431">You lose the identity of the input COM object, because a new RCW instance wraps the [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) pointer exposed by the original RCW.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-432"><typeparamref name="T" />는 <see langword="__ComObject" />에서 파생되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-432"><typeparamref name="T" /> must derive from <see langword="__ComObject" />.</span></span>  
  
<span data-ttu-id="bb2a9-433">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-433">-or-</span></span> 
 <span data-ttu-id="bb2a9-434"><typeparamref name="T" />가 [!INCLUDE[wrt](~/includes/wrt-md.md)] 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-434"><typeparamref name="T" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb2a9-435"><paramref name="o" />가 원하는 모든 인터페이스를 지원하지 않으므로 <paramref name="TWrapper" />으로 변환할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-435"><paramref name="o" /> cannot be converted to the <paramref name="TWrapper" /> because it does not support all required interfaces.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-436">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-436">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-437">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-437">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DestroyStructure">
      <MemberSignature Language="C#" Value="public static void DestroyStructure (IntPtr ptr, Type structuretype);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DestroyStructure(native int ptr, class System.Type structuretype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DestroyStructure (ptr As IntPtr, structuretype As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DestroyStructure(IntPtr ptr, Type ^ structuretype);" />
      <MemberSignature Language="F#" Value="static member DestroyStructure : nativeint * Type -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.DestroyStructure (ptr, structuretype)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("DestroyStructure(IntPtr, Type) may be unavailable in future releases. Instead, use DestroyStructure&lt;T&gt;(IntPtr). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296520")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structuretype" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-438">관리되지 않는 메모리 블록에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-438">A pointer to an unmanaged block of memory.</span></span></param>
        <param name="structuretype"><span data-ttu-id="bb2a9-439">형식이 지정된 클래스의 형식으로,</span><span class="sxs-lookup"><span data-stu-id="bb2a9-439">Type of a formatted class.</span></span> <span data-ttu-id="bb2a9-440"><paramref name="ptr" /> 매개 변수에 있는 버퍼를 삭제하는 데 필요한 레이아웃 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-440">This provides the layout information necessary to delete the buffer in the <paramref name="ptr" /> parameter.</span></span></param>
        <summary><span data-ttu-id="bb2a9-441">지정된 관리되지 않는 메모리 블록이 가리키는 모든 하위 구조체를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-441">Frees all substructures that the specified unmanaged memory block points to.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-442">관리 되지 않는 구조의 문자열과 같은 참조 형식 필드를 해제 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-442">You can use this method to free reference-type fields, such as strings, of an unmanaged structure.</span></span> <span data-ttu-id="bb2a9-443">해당 필드와 달리 구조체는 값 형식 또는 참조 형식 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-443">Unlike its fields, a structure can be a value type or a reference type.</span></span> <span data-ttu-id="bb2a9-444">값 형식 필드 (모든 blittable)를 포함 하는 값 형식 구조에 메모리를 해제 해야 참조가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-444">Value-type structures that contain value-type fields (all blittable) have no references whose memory must be freed.</span></span> <span data-ttu-id="bb2a9-445"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> 메서드는 구조체에서 차지한 메모리를 다시 사용할 때 메모리 누수를 방지 하려면이 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-445">The <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> method uses this method to prevent memory leaks when reusing memory occupied by a structure.</span></span>  
  
 <span data-ttu-id="bb2a9-446"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> COM 호출 [SysFreeString](https://go.microsoft.com/fwlink/?LinkId=148633) 차례로 할당 된 문자열을 해제 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-446"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> calls the COM [SysFreeString](https://go.microsoft.com/fwlink/?LinkId=148633) function, which, in turn, frees an allocated string.</span></span>  
  
 <span data-ttu-id="bb2a9-447">외에 <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>는 <xref:System.Runtime.InteropServices.Marshal> 클래스는 다른 두 메모리 할당 해제 메서드를 제공 합니다. <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> 및 <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-447">In addition to <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation methods: <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-448"><paramref name="structureType" />에 Auto 레이아웃이 지정된 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-448"><paramref name="structureType" /> has an automatic layout.</span></span> <span data-ttu-id="bb2a9-449">대신 Sequential 또는 Explicit 레이아웃을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-449">Use sequential or explicit instead.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-450">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-450">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-451">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-451">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
        <related type="Article" href="https://msdn.microsoft.com/library/~/docs/framework/interop/blittable-and-non-blittable-types.md"><span data-ttu-id="bb2a9-452">Blittable 형식 및 비 Blittable 형식</span><span class="sxs-lookup"><span data-stu-id="bb2a9-452">Blittable and Non-Blittable types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DestroyStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void DestroyStructure&lt;T&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DestroyStructure&lt;T&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DestroyStructure(Of T) (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void DestroyStructure(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member DestroyStructure : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.DestroyStructure ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bb2a9-453">형식이 지정된 구조체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-453">The type of the formatted structure.</span></span> <span data-ttu-id="bb2a9-454"><paramref name="ptr" /> 매개 변수에 있는 버퍼를 삭제하는 데 필요한 레이아웃 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-454">This provides the layout information necessary to delete the buffer in the <paramref name="ptr" /> parameter.</span></span></typeparam>
        <param name="ptr"><span data-ttu-id="bb2a9-455">관리되지 않는 메모리 블록에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-455">A pointer to an unmanaged block of memory.</span></span></param>
        <summary><span data-ttu-id="bb2a9-456">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="bb2a9-456">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="bb2a9-457">지정된 관리되지 않는 메모리 블록이 가리키는 지정된 형식의 모든 하위 구조체를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-457">Frees all substructures of a specified type that the specified unmanaged memory block points to.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-458">관리 되지 않는 구조의 문자열과 같은 참조 형식 필드를 해제 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-458">You can use this method to free reference type fields, such as strings, of an unmanaged structure.</span></span> <span data-ttu-id="bb2a9-459">해당 필드와 달리 구조체는 값 형식 또는 참조 형식 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-459">Unlike its fields, a structure can be a value type or a reference type.</span></span> <span data-ttu-id="bb2a9-460">값 형식 필드 (모든 blittable)를 포함 하는 값 형식 구조에 메모리를 해제 해야 참조가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-460">Value type structures that contain value type fields (all blittable) have no references whose memory must be freed.</span></span> <span data-ttu-id="bb2a9-461"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> 메서드는 구조체에서 차지한 메모리를 다시 사용할 때 메모리 누수를 방지 하려면이 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-461">The <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> method uses this method to prevent memory leaks when reusing memory occupied by a structure.</span></span>  
  
 <span data-ttu-id="bb2a9-462"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> COM 호출 [SysFreeString](https://go.microsoft.com/fwlink/?LinkId=148633) 차례로 할당 된 문자열을 해제 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-462"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> calls the COM [SysFreeString](https://go.microsoft.com/fwlink/?LinkId=148633) function, which, in turn, frees an allocated string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-463"><typeparamref name="T" />에 Auto 레이아웃이 지정된 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-463"><typeparamref name="T" /> has an automatic layout.</span></span> <span data-ttu-id="bb2a9-464">대신 Sequential 또는 Explicit 레이아웃을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-464">Use sequential or explicit instead.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-465">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-465">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-466">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-466">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FinalReleaseComObject">
      <MemberSignature Language="C#" Value="public static int FinalReleaseComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FinalReleaseComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FinalReleaseComObject (o As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FinalReleaseComObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member FinalReleaseComObject : obj -&gt; int" Usage="System.Runtime.InteropServices.Marshal.FinalReleaseComObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="bb2a9-467">해제할 RCW입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-467">The RCW to be released.</span></span></param>
        <summary><span data-ttu-id="bb2a9-468">참조 횟수를 0으로 설정하여 <see href="https://docs.microsoft.com/dotnet/framework/interop/runtime-callable-wrapper">RCW(런타임 호출 가능 래퍼)</see>에 대한 모든 참조를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-468">Releases all references to a <see href="https://docs.microsoft.com/dotnet/framework/interop/runtime-callable-wrapper">Runtime Callable Wrapper</see> (RCW) by setting its reference count to 0.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-469"><paramref name="o" /> 매개 변수에 연결된 RCW의 새 참조 횟수 값입니다. 해제 작업을 성공적으로 마치면 값이 0입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-469">The new value of the reference count of the RCW associated with the <paramref name="o" /> parameter, which is 0 (zero) if the release is successful.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-470"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> 메서드는 COM 개체에 대 한 관리 되는 참조를 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-470">The <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method releases the managed reference to a COM object.</span></span> <span data-ttu-id="bb2a9-471">이 메서드를 호출 하는 것은 <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> 0 (영)을 반환 될 때까지 루프에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-471">Calling this method is equivalent to calling the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method in a loop until it returns 0 (zero).</span></span>  
  
 <span data-ttu-id="bb2a9-472">COM 개체의 참조 횟수가 0이 되 면 때 COM 개체는 일반적으로이 COM 개체의 구현에 따라 이며 런타임 제어를 벗어나 있지만 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-472">When the reference count on the COM object becomes 0, the COM object is usually freed, although this depends on the COM object's implementation and is beyond the control of the runtime.</span></span> <span data-ttu-id="bb2a9-473">그러나 RCW 여전히 존재할 수 가비지가 수집 되기를 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-473">However, the RCW can still exist, waiting to be garbage-collected.</span></span>  
  
 <span data-ttu-id="bb2a9-474">이 기본 RCW에서 분리 된 후에 COM 개체를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-474">The COM object cannot be used after it has been separated from its underlying RCW.</span></span> <span data-ttu-id="bb2a9-475">참조 횟수가 0 후 RCW에서 메서드를 호출 하려는 경우는 <xref:System.Runtime.InteropServices.InvalidComObjectException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-475">If you try to call a method on the RCW after its reference count becomes 0, a <xref:System.Runtime.InteropServices.InvalidComObjectException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-476"><paramref name="o" />가 올바른 개체 범위가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-476"><paramref name="o" /> is not a valid COM object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-477"><paramref name="o" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-477"><paramref name="o" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-478">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-478">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-479">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-479">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)" />
        <altmember cref="T:System.NullReferenceException" />
      </Docs>
    </Member>
    <Member MemberName="FreeBSTR">
      <MemberSignature Language="C#" Value="public static void FreeBSTR (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeBSTR(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeBSTR (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeBSTR(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member FreeBSTR : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.FreeBSTR ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-480">해제할 BSTR의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-480">The address of the BSTR to be freed.</span></span></param>
        <summary><span data-ttu-id="bb2a9-481">COM [SysFreeString](https://go.microsoft.com/fwlink/?LinkID=148633) 함수를 사용하여 <see langword="BSTR" />을 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-481">Frees a <see langword="BSTR" /> using the COM [SysFreeString](https://go.microsoft.com/fwlink/?LinkID=148633) function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-482">와 같은 <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType> 고 <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType>, 메모리 할당을 취소 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-482">Like <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType>, you can use this method to deallocate memory.</span></span> <span data-ttu-id="bb2a9-483"><xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A> COM 호출 [SysFreeString](https://go.microsoft.com/fwlink/?LinkID=148633) 관리 되지 않는 다음 방법 중 하나에 의해 할당 된 메모리를 해제 하는 함수를: `SysAllocString`, `SysAllocStringByteLen`에 `SysAllocStringLen`를 `SysReAllocString`, `SysReAllocStringLen`합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-483"><xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A> calls the COM [SysFreeString](https://go.microsoft.com/fwlink/?LinkID=148633) function, which frees memory allocated by any of the following unmanaged methods: `SysAllocString`, `SysAllocStringByteLen`, `SysAllocStringLen`, `SysReAllocString`, `SysReAllocStringLen`.</span></span> <span data-ttu-id="bb2a9-484">플랫폼을 사용 하 여 이러한 호출 같은 관리 되지 않는 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-484">You can call unmanaged methods such as these with platform invoke.</span></span> <span data-ttu-id="bb2a9-485">자세한 내용은 참조 하세요 [관리 되지 않는 DLL 함수 사용](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-485">For details, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-486">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-486">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-487">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-487">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="FreeCoTaskMem">
      <MemberSignature Language="C#" Value="public static void FreeCoTaskMem (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeCoTaskMem(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeCoTaskMem (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeCoTaskMem(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member FreeCoTaskMem : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.FreeCoTaskMem ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-488">해제할 메모리의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-488">The address of the memory to be freed.</span></span></param>
        <summary><span data-ttu-id="bb2a9-489">관리되지 않는 COM 작업 메모리 할당자에서 할당한 메모리 블록을 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-489">Frees a block of memory allocated by the unmanaged COM task memory allocator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-490">사용할 수 있습니다 <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> 하 여 할당 된 메모리를 비우는 <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A>, 또는 이와 동등한 메서드가 관리 되지 않는 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-490">You can use <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> to free any memory allocated by <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A>, or any equivalent unmanaged method.</span></span> <span data-ttu-id="bb2a9-491">경우는 `ptr` 매개 변수는 `null`, 메서드는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-491">If the `ptr` parameter is `null`, the method does nothing.</span></span>  
  
 <span data-ttu-id="bb2a9-492"><xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> COM 노출 [CoTaskMemFree](https://go.microsoft.com/fwlink/?LinkId=148638) 메모리를 더 이상 사용할 수 있도록 모든 바이트를 해제 하는 함수는는 `ptr` 매개 변수를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-492"><xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> exposes the COM [CoTaskMemFree](https://go.microsoft.com/fwlink/?LinkId=148638) function, which frees all bytes so that you can no longer use the memory that the `ptr` parameter points to.</span></span>  
  
 <span data-ttu-id="bb2a9-493">외에 <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>는 <xref:System.Runtime.InteropServices.Marshal> 클래스는 다른 두 메모리 할당 해제 메서드를 제공 합니다. <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> 및 <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-493">In addition to <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation methods: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-494">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-494">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-495">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-495">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="FreeHGlobal">
      <MemberSignature Language="C#" Value="public static void FreeHGlobal (IntPtr hglobal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeHGlobal(native int hglobal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeHGlobal (hglobal As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeHGlobal(IntPtr hglobal);" />
      <MemberSignature Language="F#" Value="static member FreeHGlobal : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.FreeHGlobal hglobal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hglobal" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hglobal"><span data-ttu-id="bb2a9-496"><see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" /> 호출과 일치하는 원본 호출에서 반환되는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-496">The handle returned by the original matching call to <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span></span></param>
        <summary><span data-ttu-id="bb2a9-497">프로세스의 관리되지 않는 메모리에서 이전에 할당한 메모리를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-497">Frees memory previously allocated from the unmanaged memory of the process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-498">사용할 수 있습니다 <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> 의해 할당 된 전역 힙의 모든 메모리를 확보 하 <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A>, 또는 이와 동등한 API 메서드가 관리 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-498">You can use <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> to free any memory from the global heap allocated by <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A>, or any equivalent unmanaged API method.</span></span> <span data-ttu-id="bb2a9-499">경우는 `hglobal` 매개 변수는 <xref:System.IntPtr.Zero?displayProperty=nameWithType> 메서드는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-499">If the `hglobal` parameter is <xref:System.IntPtr.Zero?displayProperty=nameWithType> the method does nothing.</span></span>  
  
 <span data-ttu-id="bb2a9-500"><xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> 노출 된 [LocalFree](https://go.microsoft.com/fwlink/?LinkId=148640) 가리키는 메모리를 더 이상 사용할 수 있도록 모든 바이트를 해제 하는 kernel32.dll 함수 `hglobal`합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-500"><xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> exposes the [LocalFree](https://go.microsoft.com/fwlink/?LinkId=148640) function from Kernel32.DLL, which frees all bytes so that you can no longer use the memory pointed to by `hglobal`.</span></span>  
  
 <span data-ttu-id="bb2a9-501">외에 <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>는 <xref:System.Runtime.InteropServices.Marshal> 클래스는 두 개의 다른 메모리 할당 해제 API 메서드를 제공 합니다. <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> 및 <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-501">In addition to <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation API methods: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-502">다음 예제에서는 <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-502">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> method.</span></span> <span data-ttu-id="bb2a9-503">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Runtime.InteropServices.Marshal> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-503">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#4](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#4)]
 [!code-csharp[Marshal#4](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#4)]
 [!code-vb[Marshal#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#4)]  
  
 <span data-ttu-id="bb2a9-504">다음 예제에서는 관리 되는 콘텐츠를 변환 하는 방법에 설명 <xref:System.String> 관리 되지 않는 메모리 클래스 및 다음 수행 하는 경우 관리 되지 않는 메모리를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-504">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/CPP/stringtohglobalansi.cpp#1)]
 [!code-csharp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/cs/stringtohglobalansi.cs#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-505">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-505">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-506">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-506">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GenerateGuidForType">
      <MemberSignature Language="C#" Value="public static Guid GenerateGuidForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GenerateGuidForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GenerateGuidForType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GenerateGuidForType : Type -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GenerateGuidForType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="bb2a9-507">GUID를 생성할 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-507">The type to generate a GUID for.</span></span></param>
        <summary><span data-ttu-id="bb2a9-508">지정된 형식에 대한 GUID(Globally Unique Identifier)를 반환하거나 형식 라이브러리 내보내기(TlbExp.exe)에 사용되는 알고리즘을 사용하여 GUID를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-508">Returns the globally unique identifier (GUID) for the specified type, or generates a GUID using the algorithm used by the Type Library Exporter (Tlbexp.exe).</span></span></summary>
        <returns><span data-ttu-id="bb2a9-509">지정된 형식의 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-509">An identifier for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-510">형식 메타 데이터에서 GUID가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-510">If the type has a GUID in the metadata, it is returned.</span></span> <span data-ttu-id="bb2a9-511">그렇지 않은 경우 GUID는 자동으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-511">Otherwise, a GUID is automatically generated.</span></span> <span data-ttu-id="bb2a9-512">프로그래밍 방식으로 COM에서 볼 수 없는 형식을 비롯 한 모든 관리 되는 형식에 대 한 COM GUID를 확인 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-512">You can use this method to programmatically determine the COM GUID for any managed type, including COM-invisible types.</span></span> <span data-ttu-id="bb2a9-513">클래스 인터페이스는 관리 되는 형식에 맞지 않는 유일한 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-513">Class interfaces are the only exception because they do not correspond to a managed type.</span></span> <span data-ttu-id="bb2a9-514"><xref:System.Runtime.InteropServices.Marshal.GenerateGuidForType%2A> 와 동일한 기능을 제공 합니다 <xref:System.Type.GUID%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-514"><xref:System.Runtime.InteropServices.Marshal.GenerateGuidForType%2A> provides the same functionality as the <xref:System.Type.GUID%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-515">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-515">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-516">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-516">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="P:System.Type.GUID" />
      </Docs>
    </Member>
    <Member MemberName="GenerateProgIdForType">
      <MemberSignature Language="C#" Value="public static string GenerateProgIdForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateProgIdForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateProgIdForType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GenerateProgIdForType : Type -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GenerateProgIdForType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="bb2a9-517">ProgID를 가져올 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-517">The type to get a ProgID for.</span></span></param>
        <summary><span data-ttu-id="bb2a9-518">지정된 형식에 대한 ProgID(프로그래밍 식별자)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-518">Returns a programmatic identifier (ProgID) for the specified type.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-519">지정된 형식의 ProgID입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-519">The ProgID of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-520">형식 메타 데이터에 ProgID에 해당 progid가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-520">If the type has a ProgID in the metadata, that ProgID is returned.</span></span> <span data-ttu-id="bb2a9-521">이 고, 그렇지 ProgID는 사용 하는 형식의 정규화 된 이름을 기반으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-521">Otherwise, a ProgID is generated based on the fully qualified name of the type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-522"><paramref name="type" /> 매개 변수가 COM에서 만들 수 없는 클래스인 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-522">The <paramref name="type" /> parameter is not a class that can be create by COM.</span></span> <span data-ttu-id="bb2a9-523">이 클래스는 공용이며, 공용 기본 생성자를 가지며, COM에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-523">The class must be public, have a public default constructor, and be COM visible.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-524"><paramref name="type" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-524">The <paramref name="type" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-525">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-525">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-526">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-526">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetActiveObject">
      <MemberSignature Language="C#" Value="public static object GetActiveObject (string progID);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetActiveObject(string progID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveObject (progID As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetActiveObject(System::String ^ progID);" />
      <MemberSignature Language="F#" Value="static member GetActiveObject : string -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetActiveObject progID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="progID"><span data-ttu-id="bb2a9-527">요청된 개체의 ProgID(프로그래밍 식별자)입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-527">The programmatic identifier (ProgID) of the object that was requested.</span></span></param>
        <summary><span data-ttu-id="bb2a9-528">ROT(실행 개체 테이블)에서 지정된 개체의 실행 중인 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-528">Obtains a running instance of the specified object from the running object table (ROT).</span></span></summary>
        <returns><span data-ttu-id="bb2a9-529">요청된 개체입니다. 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-529">The object that was requested; otherwise <see langword="null" />.</span></span> <span data-ttu-id="bb2a9-530">이 개체를 지원되는 COM 인터페이스로 캐스팅할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-530">You can cast this object to any COM interface that it supports.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-531"><xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> COM 노출 [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) OLEAUT32 함수입니다. DLL; 그러나 필요 하지만 두 번째 클래스 식별자 (CLSID)를 프로그래밍 방식 식별자 (`ProgID`)이 메서드가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-531"><xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> exposes the COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) function from OLEAUT32.DLL; however, the latter expects a class identifier (CLSID) instead of the programmatic identifier (`ProgID`) expected by this method.</span></span> <span data-ttu-id="bb2a9-532">없이 등록 된 COM 개체의 실행 인스턴스를 가져오려면 `ProgID`를 사용 하 여 플랫폼 호출을 COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-532">To obtain a running instance of a COM object without a registered `ProgID`, use platform invoke to define the COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) function.</span></span> <span data-ttu-id="bb2a9-533">플랫폼에 대 한 호출을 참조 하세요 [관리 되지 않는 DLL 함수 사용](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-533">For a description of platform invoke, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
## <a name="progid-and-clsid"></a><span data-ttu-id="bb2a9-534">ProgID 및 CLSID</span><span class="sxs-lookup"><span data-stu-id="bb2a9-534">ProgID and CLSID</span></span>  
 <span data-ttu-id="bb2a9-535">레지스트리의 HKEY_CLASSES_ROOT 하위 트리에 있는 키에는 다양 한 하위 형식 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-535">Keys in the HKEY_CLASSES_ROOT subtree of the registry contain a variety of subkey types.</span></span> <span data-ttu-id="bb2a9-536">대부분 하위 키의 Progid, CLSID에 친숙 한 문자열로 매핑되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-536">Most of the subkeys are ProgIDs, which map a user-friendly string to a CLSID.</span></span> <span data-ttu-id="bb2a9-537">종종 응용 프로그램 숫자 Clsid 대신 이러한 사용자를 읽을 수 있는 문자열을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-537">Applications often use these human-readable strings instead of the numeric CLSIDs.</span></span> <span data-ttu-id="bb2a9-538">구성 요소에 최신 버전의 시스템에 설치 된 구성 요소에 매핑되는 버전 독립 ProgID 경우가 많습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-538">Often, a component has a version-independent ProgID that is mapped to the latest version of the component that is installed on the system.</span></span>  
  
 <span data-ttu-id="bb2a9-539">응용 프로그램 및 구성 요소 Progid가 해당 Clsid를 검색할 주로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-539">Applications and components primarily use ProgIDs to retrieve their corresponding CLSIDs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-540">다음 예제에서는 Microsoft Word의 실행 인스턴스를 사용 하 여 구성 된 컴퓨터에서 실행 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-540">The following example was run on a computer that was configured with a running instance of Microsoft Word.</span></span> <span data-ttu-id="bb2a9-541">실행 하는 Microsoft Excel의 인스턴스인 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-541">There were no instances of Microsoft Excel running.</span></span>  
  
 <span data-ttu-id="bb2a9-542">예제에서는 <xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> 두 번입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-542">The example calls <xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> twice.</span></span> <span data-ttu-id="bb2a9-543">첫 번째 호출에서 Microsoft Word의 인스턴스에 대 한 참조를 검색 하려고 (의 인스턴스는 `Word.Application` 개체).</span><span class="sxs-lookup"><span data-stu-id="bb2a9-543">The first call tries to retrieve a reference to an instance of Microsoft Word (an instance of the `Word.Application` object).</span></span> <span data-ttu-id="bb2a9-544">두 번째 호출에서 Microsoft Excel의 인스턴스에 대 한 참조를 검색 하려고 (의 인스턴스는 `Excel.Application` 개체).</span><span class="sxs-lookup"><span data-stu-id="bb2a9-544">The second call tries to retrieve a reference to an instance of Microsoft Excel (an instance of an `Excel.Application` object).</span></span>  
  
 <span data-ttu-id="bb2a9-545">코드를 Microsoft Word의 인스턴스에 대 한 참조를 성공적으로 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-545">The code retrieves a reference to an instance of Microsoft Word successfully.</span></span> <span data-ttu-id="bb2a9-546">그러나 Microsoft Excel이 실행 되지 때문에 두 번째 개체를 검색 하려는 시도가 발생 한 <xref:System.Runtime.InteropServices.COMException>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-546">However, because Microsoft Excel is not running, the attempt to retrieve the second object raises a <xref:System.Runtime.InteropServices.COMException>.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.Marshal.GetActiveObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.marshal.getactiveobject/cs/marshal.getactiveobject.cs#1)]
 [!code-vb[System.Runtime.InteropServices.Marshal.GetActiveObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.marshal.getactiveobject/vb/marshal.getactiveobject.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bb2a9-547">개체를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-547">The object was not found.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-548">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-548">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-549">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-549">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComInterfaceForObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-550">개체의 인터페이스를 나타내는 인터페이스 포인터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-550">Returns an interface pointer that represents an interface for an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComInterfaceForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject (object o, Type T);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject(object o, class System.Type T) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject (o As Object, T As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObject(System::Object ^ o, Type ^ T);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObject : obj * Type -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObject (o, T)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("GetComInterfaceForObject(Object, Type) may be unavailable in future releases. Instead, use GetComInterfaceForObject&lt;T,T2&gt;(T). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296509")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="T" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="bb2a9-551">인터페이스를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-551">The object that provides the interface.</span></span></param>
        <param name="T"><span data-ttu-id="bb2a9-552">요청된 인터페이스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-552">The type of interface that is requested.</span></span></param>
        <summary><span data-ttu-id="bb2a9-553">지정된 개체의 지정된 인터페이스를 나타내는 <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> 인터페이스에 대한 포인터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-553">Returns a pointer to an <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> interface that represents the specified interface on the specified object.</span></span> <span data-ttu-id="bb2a9-554">사용자 지정 쿼리 인터페이스 액세스가 기본적으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-554">Custom query interface access is enabled by default.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-555">개체에 대해 지정된 인터페이스를 나타내는 인터페이스 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-555">The interface pointer that represents the specified interface for the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-556">이 메서드는 지정된 된 개체의 요청된 된 인터페이스를 나타내는 인터페이스 포인터를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-556">This method returns an interface pointer that represents the requested interface on the specified object.</span></span> <span data-ttu-id="bb2a9-557">인터페이스 포인터를 전달 해야 하는 관리 되지 않는 메서드가 있는 경우에 특히 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-557">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span> <span data-ttu-id="bb2a9-558">이 메서드를 사용 하 여 개체를 호출 하면의 참조 횟수를 포인터 반환 되기 전에 인터페이스 포인터에 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-558">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="bb2a9-559">항상 사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> 포인터를 사용 하 여 마친 후에 참조 횟수를 감소 시키기 위해.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-559">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="bb2a9-560">원시 COM 인터페이스 포인터를 사용 하는 경우 COM에서 정의 된 규칙을 준수 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-560">You must adhere to the rules defined by COM when using raw COM interface pointers.</span></span>  
  
 <span data-ttu-id="bb2a9-561"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> COM 개체 매개 변수로 노출 하는 메서드를 호출 하는 경우에 유용는 <xref:System.IntPtr> 형식 또는 사용자 지정 마샬링 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-561"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="bb2a9-562">개체의 COM 호출 가능 래퍼에 대 한 포인터를 가져오려고 하지만 일반적이 지 관리 되는 개체에이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-562">Although less common, you can use this method on a managed object to obtain a pointer to the object's COM callable wrapper.</span></span> <span data-ttu-id="bb2a9-563">예를 들어 사용할 수 있습니다 <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> 에 대 한 인터페이스 포인터를 가져오려고 COM로 내보낸 관리 되는 개체에서 <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-563">For example, you can use <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> on a managed object that is exported to COM to obtain an interface pointer for <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bb2a9-564">두 번째 매개 변수를 전달 하는 해당 형식이 없으므로 클래스에는 클래스 인터페이스에 대 한 포인터를 가져올 수 없습니다 (`t`).</span><span class="sxs-lookup"><span data-stu-id="bb2a9-564">You cannot obtain a pointer to a class interface since a class interface lacks the corresponding type to pass to the second parameter (`t`).</span></span> <span data-ttu-id="bb2a9-565">대신 <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> COM 호출 가능 래퍼는 일반적으로 자동 디스패치 클래스 인터페이스의 기본 인터페이스의 멤버를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-565">Instead, use <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to invoke the members on the default interface of the COM callable wrapper, which is usually an auto-dispatch class interface.</span></span>  
  
 <span data-ttu-id="bb2a9-566"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> 메서드 오버 로드는 기본적으로 쿼리 인터페이스 사용자 지정을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-566">The <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> method overload allows query interface customization by default.</span></span> <span data-ttu-id="bb2a9-567">인터페이스 사용자 지정 쿼리를 적용할지 여부를 지정 하려면 사용 된 <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-567">To specify whether to apply query interface customization, use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> method overload.</span></span>  
  
 <span data-ttu-id="bb2a9-568">자세한 내용은 참조 하세요. 합니다 [COM 호출 가능 래퍼](~/docs/framework/interop/com-callable-wrapper.md)를 [런타임 호출 가능 래퍼](~/docs/framework/interop/runtime-callable-wrapper.md), 및 [클래스 인터페이스 소개](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-568">For additional information, see the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), and [Introducing the Class Interface](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-569"><typeparamref name="T" /> 매개 변수가 인터페이스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-569">The <typeparamref name="T" /> parameter is not an interface.</span></span>  
  
<span data-ttu-id="bb2a9-570">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-570">-or-</span></span> 
<span data-ttu-id="bb2a9-571">COM에 해당 형식이 표시되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-571">The type is not visible to COM.</span></span>  
  
<span data-ttu-id="bb2a9-572">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-572">-or-</span></span> 
<span data-ttu-id="bb2a9-573"><typeparamref name="T" /> 매개 변수는 제네릭 형식 정의입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-573">The <typeparamref name="T" /> parameter is a generic type definition.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb2a9-574"><paramref name="o" /> 매개 변수가 요청된 인터페이스를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-574">The <paramref name="o" /> parameter does not support the requested interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-575"><paramref name="o" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-575">The <paramref name="o" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-576">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-576">-or-</span></span> 
<span data-ttu-id="bb2a9-577"><typeparamref name="T" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-577">The <typeparamref name="T" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-578">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-578">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-579">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-579">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMIConnectionPointContainer" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject (object o, Type T, System.Runtime.InteropServices.CustomQueryInterfaceMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject(object o, class System.Type T, valuetype System.Runtime.InteropServices.CustomQueryInterfaceMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject (o As Object, T As Type, mode As CustomQueryInterfaceMode) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObject(System::Object ^ o, Type ^ T, System::Runtime::InteropServices::CustomQueryInterfaceMode mode);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObject : obj * Type * System.Runtime.InteropServices.CustomQueryInterfaceMode -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObject (o, T, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("GetComInterfaceForObject(Object, Type, CustomQueryInterfaceMode) and support for ICustomQueryInterface may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="T" Type="System.Type" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Runtime.InteropServices.CustomQueryInterfaceMode" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="bb2a9-580">인터페이스를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-580">The object that provides the interface.</span></span></param>
        <param name="T"><span data-ttu-id="bb2a9-581">요청된 인터페이스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-581">The type of interface that is requested.</span></span></param>
        <param name="mode"><span data-ttu-id="bb2a9-582"><see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />에서 제공하는 <see langword="IUnknown::QueryInterface" /> 사용자 지정을 적용하는지 여부를 나타내는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-582">One of the enumeration values that indicates whether to apply an <see langword="IUnknown::QueryInterface" /> customization that is supplied by an <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</span></span></param>
        <summary><span data-ttu-id="bb2a9-583">지정된 개체의 지정된 인터페이스를 나타내는 <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> 인터페이스에 대한 포인터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-583">Returns a pointer to an <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> interface that represents the specified interface on the specified object.</span></span> <span data-ttu-id="bb2a9-584">사용자 지정 쿼리 인터페이스 액세스는 지정된 사용자 지정 모드에 의해 제어됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-584">Custom query interface access is controlled by the specified customization mode.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-585">개체에 대한 인터페이스를 나타내는 인터페이스 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-585">The interface pointer that represents the interface for the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-586"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> 인터페이스 사용자 지정 쿼리를 적용할지 여부를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-586"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> lets you specify whether to apply query interface customization.</span></span> <span data-ttu-id="bb2a9-587">사용 된 <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> 오버 로드를 기본적으로 쿼리 인터페이스 사용자 지정을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-587">Use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> overload to apply query interface customization by default.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-588"><typeparamref name="T" /> 매개 변수가 인터페이스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-588">The <typeparamref name="T" /> parameter is not an interface.</span></span>  
  
<span data-ttu-id="bb2a9-589">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-589">-or-</span></span> 
<span data-ttu-id="bb2a9-590">COM에 해당 형식이 표시되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-590">The type is not visible to COM.</span></span>  
  
<span data-ttu-id="bb2a9-591">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-591">-or-</span></span> 
<span data-ttu-id="bb2a9-592"><typeparamref name="T" /> 매개 변수는 제네릭 형식 정의입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-592">The <typeparamref name="T" /> parameter is a generic type definition.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb2a9-593"><paramref name="o" /> 개체가 요청된 인터페이스를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-593">The object <paramref name="o" /> does not support the requested interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-594"><paramref name="o" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-594">The <paramref name="o" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-595">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-595">-or-</span></span> 
<span data-ttu-id="bb2a9-596"><typeparamref name="T" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-596">The <typeparamref name="T" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-597">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-597">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-598">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-598">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObject&lt;T,TInterface&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject&lt;T,TInterface&gt; (T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject&lt;T, TInterface&gt;(!!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject(Of T, TInterface) (o As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TInterface&gt;&#xA; static IntPtr GetComInterfaceForObject(T o);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObject : 'T -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TInterface" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="T" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bb2a9-599"><paramref name="o" />의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-599">The type of <paramref name="o" />.</span></span></typeparam>
        <typeparam name="TInterface"><span data-ttu-id="bb2a9-600">반환할 인터페이스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-600">The type of interface to return.</span></span></typeparam>
        <param name="o"><span data-ttu-id="bb2a9-601">인터페이스를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-601">The object that provides the interface.</span></span></param>
        <summary><span data-ttu-id="bb2a9-602">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="bb2a9-602">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="bb2a9-603">지정된 형식의 개체에 지정된 인터페이스를 나타내는 [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) 인터페이스에 대한 포인터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-603">Returns a pointer to an [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on an object of the specified type.</span></span> <span data-ttu-id="bb2a9-604">사용자 지정 쿼리 인터페이스 액세스가 기본적으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-604">Custom query interface access is enabled by default.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-605"><paramref name="TInterface" /> 인터페이스를 나타내는 인터페이스 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-605">The interface pointer that represents the <paramref name="TInterface" /> interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-606">이 메서드를 나타내는 인터페이스 포인터를 반환 합니다 `TInterface` 지정된 된 개체의 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-606">This method returns an interface pointer that represents the `TInterface` interface on the specified object.</span></span> <span data-ttu-id="bb2a9-607">인터페이스 포인터를 전달 해야 하는 관리 되지 않는 메서드가 있는 경우에 특히 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-607">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span> <span data-ttu-id="bb2a9-608">이 메서드를 사용 하 여 개체를 호출 하면의 참조 횟수를 포인터 반환 되기 전에 인터페이스 포인터에 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-608">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="bb2a9-609">항상 사용은 <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> 포인터를 사용 하 여 완료 한 후 참조 횟수를 감소 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-609">Always use the <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> method to decrement the reference count when you have finished with the pointer.</span></span> <span data-ttu-id="bb2a9-610">원시 COM 인터페이스 포인터를 사용 하는 경우 COM에서 정의 된 규칙을 준수 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-610">You must adhere to the rules defined by COM when using raw COM interface pointers.</span></span>  
  
 <span data-ttu-id="bb2a9-611"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> COM 개체 매개 변수로 노출 하는 메서드를 호출 하는 경우에 유용는 <xref:System.IntPtr> 형식 또는 사용자 지정 마샬링 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-611"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="bb2a9-612">이 일반적이 지 않습니다 개체의 COM 호출 가능 래퍼에 대 한 포인터를 얻으려면 관리 되는 개체에이 방법을 사용도 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-612">You can also use this method on a managed object to obtain a pointer to the object's COM callable wrapper, although this is less common.</span></span> <span data-ttu-id="bb2a9-613">예를 들어 사용할 수 있습니다 <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> 에 대 한 인터페이스 포인터를 가져오려고 COM로 내보낸 관리 되는 개체에서 <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-613">For example, you can use <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> on a managed object that is exported to COM to obtain an interface pointer for <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bb2a9-614"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> 메서드 오버 로드는 기본적으로 쿼리 인터페이스 사용자 지정을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-614">The <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> method overload allows query interface customization by default.</span></span> <span data-ttu-id="bb2a9-615">인터페이스 사용자 지정 쿼리를 적용할지 여부를 지정 하려면 사용 된 <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-615">To specify whether to apply query interface customization, use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> method overload.</span></span>  
  
 <span data-ttu-id="bb2a9-616">자세한 내용은 참조 하세요. 합니다 [COM 호출 가능 래퍼](~/docs/framework/interop/com-callable-wrapper.md)를 [런타임 호출 가능 래퍼](~/docs/framework/interop/runtime-callable-wrapper.md), 및 [클래스 인터페이스 소개](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-616">For additional information, see the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), and [Introducing the Class Interface](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-617"><paramref name="TInterface" /> 매개 변수가 인터페이스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-617">The <paramref name="TInterface" /> parameter is not an interface.</span></span>  
  
<span data-ttu-id="bb2a9-618">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-618">-or-</span></span> 
<span data-ttu-id="bb2a9-619">COM에 해당 형식이 표시되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-619">The type is not visible to COM.</span></span>  
  
<span data-ttu-id="bb2a9-620">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-620">-or-</span></span> 
<span data-ttu-id="bb2a9-621"><typeparamref name="T" /> 매개 변수는 개방형 제네릭 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-621">The <typeparamref name="T" /> parameter is an open generic type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb2a9-622"><paramref name="o" /> 매개 변수가 <paramref name="TInterface" /> 인터페이스를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-622">The <paramref name="o" /> parameter does not support the <paramref name="TInterface" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-623"><paramref name="o" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-623">The <paramref name="o" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-624">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-624">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-625">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-625">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObjectInContext (object o, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObjectInContext(object o, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObjectInContext (o As Object, t As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObjectInContext(System::Object ^ o, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObjectInContext : obj * Type -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext (o, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="t" Type="System.Type" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="bb2a9-626">인터페이스를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-626">The object that provides the interface.</span></span></param>
        <param name="t"><span data-ttu-id="bb2a9-627">요청된 인터페이스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-627">The type of interface that is requested.</span></span></param>
        <summary><span data-ttu-id="bb2a9-628">호출자가 개체와 같은 컨텍스트에 있는 경우 해당 개체에 대해 지정된 인터페이스를 나타내는 인터페이스 포인터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-628">Returns an interface pointer that represents the specified interface for an object, if the caller is in the same context as that object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-629">지정된 개체에 대한 인터페이스를 나타내는 <paramref name="t" />가 지정하는 인터페이스 포인터이거나, 호출자가 개체와 같은 컨텍스트에 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-629">The interface pointer specified by <paramref name="t" /> that represents the interface for the specified object, or <see langword="null" /> if the caller is not in the same context as the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-630">이 메서드는 동일 <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A> 반환 한다는 점을 제외 하 고 `null` 호출자가 개체와 같은 컨텍스트에 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-630">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span> <span data-ttu-id="bb2a9-631">인터페이스 포인터를 전달 해야 하는 관리 되지 않는 메서드가 있는 경우에 특히 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-631">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-632"><paramref name="t" />가 인터페이스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-632"><paramref name="t" /> is not an interface.</span></span>  
  
<span data-ttu-id="bb2a9-633">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-633">-or-</span></span> 
<span data-ttu-id="bb2a9-634">COM에 해당 형식이 표시되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-634">The type is not visible to COM.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb2a9-635"><paramref name="o" />가 요청된 인터페이스를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-635"><paramref name="o" /> does not support the requested interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-636"><paramref name="o" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-636"><paramref name="o" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-637">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-637">-or-</span></span> 
 <span data-ttu-id="bb2a9-638"><paramref name="t" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-638"><paramref name="t" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-639">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-639">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-640">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-640">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMIConnectionPointContainer" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComObjectData">
      <MemberSignature Language="C#" Value="public static object GetComObjectData (object obj, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetComObjectData(object obj, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComObjectData (obj As Object, key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetComObjectData(System::Object ^ obj, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="static member GetComObjectData : obj * obj -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetComObjectData (obj, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="key" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="bb2a9-641">필요한 데이터가 들어 있는 COM 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-641">The COM object that contains the data that you want.</span></span></param>
        <param name="key"><span data-ttu-id="bb2a9-642">데이터를 검색할 <paramref name="obj" />의 내부 해시 테이블에 있는 키입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-642">The key in the internal hash table of <paramref name="obj" /> to retrieve the data from.</span></span></param>
        <summary><span data-ttu-id="bb2a9-643">지정된 COM 개체에서 지정된 키를 사용하여 참조되는 데이터를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-643">Retrieves data that is referenced by the specified key from the specified COM object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-644"><paramref name="obj" /> 매개 변수의 내부 해시 테이블에서 <paramref name="key" /> 매개 변수가 나타내는 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-644">The data represented by the <paramref name="key" /> parameter in the internal hash table of the <paramref name="obj" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-645">에 래핑된 COM 개체를 모두를 [런타임 호출 가능 래퍼](~/docs/framework/interop/runtime-callable-wrapper.md) 는 연결 된 해시 테이블에 <xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A> 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-645">All COM objects wrapped in a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) have an associated hash table, which <xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A> retrieves.</span></span> <span data-ttu-id="bb2a9-646"><xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A?displayProperty=nameWithType> 해시 테이블에 데이터를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-646"><xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A?displayProperty=nameWithType> adds data to the hash table.</span></span> <span data-ttu-id="bb2a9-647">코드에서 두 방법 중 하나를 호출 하지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-647">You should never have to call either method from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-648"><paramref name="obj" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-648"><paramref name="obj" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-649">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-649">-or-</span></span> 
 <span data-ttu-id="bb2a9-650"><paramref name="key" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-650"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-651"><paramref name="obj" />가 COM 개체가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-651"><paramref name="obj" /> is not a COM object.</span></span>  
  
<span data-ttu-id="bb2a9-652">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-652">-or-</span></span> 
 <span data-ttu-id="bb2a9-653"><paramref name="obj" />가 [!INCLUDE[wrt](~/includes/wrt-md.md)] 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-653"><paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-654">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-654">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-655">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-655">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComSlotForMethodInfo">
      <MemberSignature Language="C#" Value="public static int GetComSlotForMethodInfo (System.Reflection.MemberInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetComSlotForMethodInfo(class System.Reflection.MemberInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComSlotForMethodInfo (m As MemberInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetComSlotForMethodInfo(System::Reflection::MemberInfo ^ m);" />
      <MemberSignature Language="F#" Value="static member GetComSlotForMethodInfo : System.Reflection.MemberInfo -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="bb2a9-656">인터페이스 메서드를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-656">An object that represents an interface method.</span></span></param>
        <summary><span data-ttu-id="bb2a9-657">지정된 <see cref="T:System.Reflection.MemberInfo" /> 형식이 COM에 노출될 때 이 형식에 대한 가상 함수 테이블(v-table 또는 VTBL) 슬롯을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-657">Retrieves the virtual function table (v-table or VTBL) slot for a specified <see cref="T:System.Reflection.MemberInfo" /> type when that type is exposed to COM.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-658">COM에 노출될 때의 VTBL 슬롯 <paramref name="m" /> 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-658">The VTBL slot <paramref name="m" /> identifier when it is exposed to COM.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-659">3에 대 한이 메서드 계정에서 반환 된 0부터 시작 슬롯 번호 [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) 및 가능한 경우 4 [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) 메서드를 사용할 수 있는 첫 번째 슬롯의 값을 하거나 3 만드는 또는 7입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-659">The zero-based slot number returned by this method accounts for three [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) and possibly four [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) methods, making the value of the first available slot either 3 or 7.</span></span> <span data-ttu-id="bb2a9-660"><xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> 반대 기능을 제공 <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-660"><xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bb2a9-661">개인 인터페이스의 멤버 및 COM에 표시 되지 않는 인터페이스에 대 한 슬롯 번호를 검색 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-661">You can use this method to retrieve slot numbers for members of interfaces that are not visible from COM and for members of private interfaces.</span></span> <span data-ttu-id="bb2a9-662">반환 된 슬롯 번호 숫자에 해당 합니다 v 테이블 형식을 COM에 노출 된 예약 되는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-662">The slot numbers returned correspond to the v-table numbers that would be reserved if the type was exposed to COM.</span></span> <span data-ttu-id="bb2a9-663">COM에서 볼 수 없는 멤버는 COM 클라이언트는 슬롯을 사용할 수 없습니다 하는 경우에 실제로 노출 된 v-테이블에 슬롯을 차지 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-663">COM-invisible members actually occupy a slot in an exposed v-table, even though the COM client cannot use the slot.</span></span> <span data-ttu-id="bb2a9-664">사용할 수 없습니다 <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> 전달 하 여 클래스 인터페이스에서 <xref:System.Reflection.MemberInfo> 클래스에서.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-664">You cannot use <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> on a class interface by passing <xref:System.Reflection.MemberInfo> from a class.</span></span> <span data-ttu-id="bb2a9-665">자세한 내용은 참조 하세요. [클래스 인터페이스 소개](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-665">For additional information, see [Introducing the Class Interface](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-666"><paramref name="m" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-666">The <paramref name="m" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-667"><paramref name="m" /> 매개 변수가 <see cref="T:System.Reflection.MemberInfo" /> 개체가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-667">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MemberInfo" /> object.</span></span>  
  
<span data-ttu-id="bb2a9-668">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-668">-or-</span></span> 
<span data-ttu-id="bb2a9-669"><paramref name="m" /> 매개 변수가 인터페이스 메서드가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-669">The <paramref name="m" /> parameter is not an interface method.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-670">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-670">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-671">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-671">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetDelegateForFunctionPointer">
      <MemberSignature Language="C#" Value="public static Delegate GetDelegateForFunctionPointer (IntPtr ptr, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate GetDelegateForFunctionPointer(native int ptr, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateForFunctionPointer (ptr As IntPtr, t As Type) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ GetDelegateForFunctionPointer(IntPtr ptr, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetDelegateForFunctionPointer : nativeint * Type -&gt; Delegate" Usage="System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer (ptr, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("GetDelegateForFunctionPointer(IntPtr, Type) may be unavailable in future releases. Instead, use GetDelegateForFunctionPointer&lt;T&gt;(IntPtr). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296521")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="t" Type="System.Type" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-672">변환할 관리되지 않는 함수 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-672">The unmanaged function pointer to be converted.</span></span></param>
        <param name="t"><span data-ttu-id="bb2a9-673">반환될 대리자의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-673">The type of the delegate to be returned.</span></span></param>
        <summary><span data-ttu-id="bb2a9-674">관리되지 않는 함수 포인터를 대리자로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-674">Converts an unmanaged function pointer to a delegate.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-675">적절한 대리자 형식으로 캐스팅될 수 있는 대리자 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-675">A delegate instance that can be cast to the appropriate delegate type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-676">버전 1.0 및 1.1의.NET Framework에서는 함수 포인터를 통해 관리 되는 메서드를 호출 하는 관리 되지 않는 코드 함수 포인터로 비관리 코드에 관리 되는 메서드를 나타내는 대리자를 전달할 수 있었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-676">In versions 1.0 and 1.1 of the .NET Framework, it was possible to pass a delegate representing a managed method to unmanaged code as a function pointer, allowing the unmanaged code to call the managed method through the function pointer.</span></span> <span data-ttu-id="bb2a9-677">관리 되지 않는 코드를 해당 함수 포인터는 관리 되는 코드를 다시 전달할 수도 있었습니다 및 포인터 내부 관리 되는 메서드를 제대로 해결 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-677">It was also possible for the unmanaged code to pass that function pointer back to the managed code, and the pointer was resolved properly to the underlying managed method.</span></span>  
  
 <span data-ttu-id="bb2a9-678">.NET Framework 2.0 및 이후 버전에서는 사용할 수 있습니다 합니다 <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> 및 <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> 양방향에서 대리자 마샬링 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-678">In the .NET Framework 2.0 and later versions, you can use the <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> and <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> methods to marshal delegates in both directions.</span></span> <span data-ttu-id="bb2a9-679">사용 하 여 <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>, `ptr` 가져옵니다는 <xref:System.IntPtr?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-679">With <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>, `ptr` is imported as a <xref:System.IntPtr?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bb2a9-680">A <xref:System.IntPtr?displayProperty=nameWithType> 를 호출 하 여 관리 되는 대리자에 대 한 가져올 수 있습니다 <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> 에서는 매개 변수로 전달 된 다음 호출 될 수에서 관리 되지 않는 메서드 내에서.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-680">A <xref:System.IntPtr?displayProperty=nameWithType> can be obtained for a managed delegate by calling <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> and passed as a parameter; it can then be called from inside the unmanaged method.</span></span> <span data-ttu-id="bb2a9-681">참고 매개 변수 마샬러는.NET Framework 2.0 이상 버전에서 대리자에 대 한 함수 포인터를 마샬링할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-681">Note that the parameter marshaler can also marshal function pointers to delegates in the .NET Framework 2.0 and later versions.</span></span>  
  
 <span data-ttu-id="bb2a9-682"><xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> 메서드는 다음 제한 사항이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-682">The <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> method has the following restrictions:</span></span>  
  
-   <span data-ttu-id="bb2a9-683">제네릭 interop 시나리오에서 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-683">Generics are not supported in interop scenarios.</span></span>  
  
-   <span data-ttu-id="bb2a9-684">잘못 된 함수 포인터를이 메서드에 전달할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-684">You cannot pass an invalid function pointer to this method.</span></span>  
  
-   <span data-ttu-id="bb2a9-685">순수 관리 되지 않는 함수 포인터에 대해서만이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-685">You can use this method only for pure unmanaged function pointers.</span></span>  
  
-   <span data-ttu-id="bb2a9-686">이 메서드 또는 c + +를 통해 가져온 함수 포인터와 함께 사용할 수 없습니다는 <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-686">You cannot use this method with function pointers obtained through C++ or from the <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> method.</span></span>  
  
-   <span data-ttu-id="bb2a9-687">다른 관리 되는 대리자에 대 한 함수 포인터에서 대리자를 만드는이 메서드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-687">You cannot use this method to create a delegate from a function pointer to another managed delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-688"><paramref name="t" /> 매개 변수가 대리자가 아니거나 제네릭인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-688">The <paramref name="t" /> parameter is not a delegate or is generic.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-689"><paramref name="ptr" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-689">The <paramref name="ptr" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-690">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-690">-or-</span></span> 
<span data-ttu-id="bb2a9-691"><paramref name="t" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-691">The <paramref name="t" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-692">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-692">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-693">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-693">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetDelegateForFunctionPointer&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static TDelegate GetDelegateForFunctionPointer&lt;TDelegate&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TDelegate GetDelegateForFunctionPointer&lt;TDelegate&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateForFunctionPointer(Of TDelegate) (ptr As IntPtr) As TDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static TDelegate GetDelegateForFunctionPointer(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member GetDelegateForFunctionPointer : nativeint -&gt; 'Delegate" Usage="System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TDelegate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate"><span data-ttu-id="bb2a9-694">반환할 대리자의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-694">The type of the delegate to return.</span></span></typeparam>
        <param name="ptr"><span data-ttu-id="bb2a9-695">변환할 관리되지 않는 함수 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-695">The unmanaged function pointer to convert.</span></span></param>
        <summary><span data-ttu-id="bb2a9-696">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="bb2a9-696">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="bb2a9-697">관리되지 않는 함수 포인터를 지정된 형식의 대리자로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-697">Converts an unmanaged function pointer to a delegate of a specified type.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-698">지정된 대리자 형식의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-698">A instance of the specified delegate type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-699">사용할 수는 <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> 및 <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%60%601%28%60%600%29> 양방향에서 대리자 마샬링 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-699">You can use the <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> and <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%60%601%28%60%600%29> methods to marshal delegates in both directions.</span></span>  
  
 <span data-ttu-id="bb2a9-700"><xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> 메서드는 다음 제한 사항이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-700">The <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> method has the following restrictions:</span></span>  
  
-   <span data-ttu-id="bb2a9-701">잘못 된 함수 포인터를이 메서드에 전달할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-701">You cannot pass an invalid function pointer to this method.</span></span>  
  
-   <span data-ttu-id="bb2a9-702">순수 관리 되지 않는 함수 포인터에 대해서만이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-702">You can use this method only for pure unmanaged function pointers.</span></span>  
  
-   <span data-ttu-id="bb2a9-703">이 메서드 또는 c + +를 통해 가져온 함수 포인터와 함께 사용할 수 없습니다는 <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-703">You cannot use this method with function pointers obtained through C++ or from the <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> method.</span></span>  
  
-   <span data-ttu-id="bb2a9-704">다른 관리 되는 대리자에 대 한 함수 포인터에서 대리자를 만드는이 메서드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-704">You cannot use this method to create a delegate from a function pointer to another managed delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-705"><paramref name="TDelegate" /> 제네릭 매개 변수가 대리자가 아니거나 개방형 제네릭 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-705">The <paramref name="TDelegate" /> generic parameter is not a delegate, or it is an open generic type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-706"><paramref name="ptr" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-706">The <paramref name="ptr" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-707">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-707">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-708">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-708">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetEndComSlot">
      <MemberSignature Language="C#" Value="public static int GetEndComSlot (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetEndComSlot(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEndComSlot (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetEndComSlot(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetEndComSlot : Type -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetEndComSlot t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="bb2a9-709">인터페이스나 클래스를 나타내는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-709">A type that represents an interface or class.</span></span></param>
        <summary><span data-ttu-id="bb2a9-710">COM에 노출될 때 형식의 가상 함수 테이블(v-table 또는 VTBL)에서 마지막 슬롯을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-710">Retrieves the last slot in the virtual function table (v-table or VTBL) of a type when exposed to COM.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-711">COM에 노출될 때 인터페이스의 마지막 VTBL 슬롯입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-711">The last VTBL slot of the interface when exposed to COM.</span></span> <span data-ttu-id="bb2a9-712"><paramref name="t" /> 매개 변수가 클래스인 경우 반환된 VTBL 슬롯은 클래스에서 생성되는 인터페이스에 있는 마지막 슬롯입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-712">If the <paramref name="t" /> parameter is a class, the returned VTBL slot is the last slot in the interface that is generated from the class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-713">이 메서드는 인터페이스 또는 클래스에 대 한부터 테이블 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-713">This method returns the zero-based, v-table number for an interface or a class.</span></span> <span data-ttu-id="bb2a9-714">클래스를 사용 하면 반환 되는 슬롯 수 클래스에 대 한 클래스 인터페이스를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-714">When used on a class, the slot number returned refers to the class interface for the class.</span></span> <span data-ttu-id="bb2a9-715">클래스 인터페이스를 이중 자동 인 경우이 메서드는 항상 디스패치 전용 인터페이스 v-table 관리 되는 클라이언트에 노출 하지 않음을 나타내는-1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-715">If the class interface is auto-dual, this method always returns -1 to indicate that the dispatch-only interface does not expose a v-table to managed clients.</span></span> <span data-ttu-id="bb2a9-716">사용할 수 있습니다 <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A> 및 <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> 와 함께에서 <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> 지정된 된 범위 내의 슬롯을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-716">You can use <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A> and <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> to pass slots within a specified range.</span></span> <span data-ttu-id="bb2a9-717">자세한 내용은 참조 하세요. [클래스 인터페이스 소개](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-717">For additional information, see [Introducing the Class Interface](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-718">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-718">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-719">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-719">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionCode">
      <MemberSignature Language="C#" Value="public static int GetExceptionCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetExceptionCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetExceptionCode();" />
      <MemberSignature Language="F#" Value="static member GetExceptionCode : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetExceptionCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.Obsolete("GetExceptionCode() may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb2a9-720">발생한 예외의 형식을 식별하는 코드를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-720">Retrieves a code that identifies the type of the exception that occurred.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-721">예외의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-721">The type of the exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-722"><xref:System.Runtime.InteropServices.Marshal.GetExceptionCode%2A> 구조적 예외 (SEH)만 처리 컴파일러 지원에 대 한 노출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-722"><xref:System.Runtime.InteropServices.Marshal.GetExceptionCode%2A> is exposed for compiler support of structured exception handling (SEH) only.</span></span> <span data-ttu-id="bb2a9-723">예외가 throw 되기 전에이 메서드는, 0x0을 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-723">If this method is called before an exception is thrown, it returns 0x0.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-724">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-724">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-725">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-725">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExceptionForHR">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-726">HRESULT 오류 코드를 해당하는 <see cref="T:System.Exception" /> 개체로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-726">Converts an HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExceptionForHR">
      <MemberSignature Language="C#" Value="public static Exception GetExceptionForHR (int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception GetExceptionForHR(int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionForHR (errorCode As Integer) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Exception ^ GetExceptionForHR(int errorCode);" />
      <MemberSignature Language="F#" Value="static member GetExceptionForHR : int -&gt; Exception" Usage="System.Runtime.InteropServices.Marshal.GetExceptionForHR errorCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="errorCode"><span data-ttu-id="bb2a9-727">변환할 HRESULT입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-727">The HRESULT to be converted.</span></span></param>
        <summary><span data-ttu-id="bb2a9-728">지정된 HRESULT 오류 코드를 해당하는 <see cref="T:System.Exception" /> 개체로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-728">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-729">변환된 HRESULT를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-729">An object that represents the converted HRESULT.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-730">사용 합니다 <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> 메서드를는 <xref:System.Exception> 호출 하지 않고도 HRESULT에 따라를 <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> 메서드 및 예외를 catch 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-730">Use the <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> method to get an <xref:System.Exception> based on an HRESULT without having to call the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method and catch the exception.</span></span>  
  
 <span data-ttu-id="bb2a9-731">현재 [IErrorInfo](https://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) 인터페이스는 예외를 생성 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-731">The current [IErrorInfo](https://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface is used to construct the exception.</span></span>  
  
 <span data-ttu-id="bb2a9-732">각 HRESULT에서 매핑을.NET Framework에는 비교할 수 있는 예외 클래스를 참조 하세요. [방법: Hresult 및 예외 매핑](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-732">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-733">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-733">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-734">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-734">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms221233(v=vs.85).aspx"><span data-ttu-id="bb2a9-735">IErrorInfo 인터페이스</span><span class="sxs-lookup"><span data-stu-id="bb2a9-735">IErrorInfo Interface</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetExceptionForHR">
      <MemberSignature Language="C#" Value="public static Exception GetExceptionForHR (int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception GetExceptionForHR(int32 errorCode, native int errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionForHR (errorCode As Integer, errorInfo As IntPtr) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Exception ^ GetExceptionForHR(int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="F#" Value="static member GetExceptionForHR : int * nativeint -&gt; Exception" Usage="System.Runtime.InteropServices.Marshal.GetExceptionForHR (errorCode, errorInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="errorInfo" Type="System.IntPtr" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="errorCode"><span data-ttu-id="bb2a9-736">변환할 HRESULT입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-736">The HRESULT to be converted.</span></span></param>
        <param name="errorInfo"><span data-ttu-id="bb2a9-737">오류에 대한 추가 정보를 제공하는 <see langword="IErrorInfo" /> 인터페이스에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-737">A pointer to the <see langword="IErrorInfo" /> interface that provides more information about the error.</span></span> <span data-ttu-id="bb2a9-738">현재 <see langword="IErrorInfo" /> 인터페이스를 사용하려면 <c>IntPtr(0)</c>을 지정하고, 현재 <see langword="IErrorInfo" /> 인터페이스를 무시하고 오류 코드에서만 예외를 생성하려면 <c>IntPtr(-1)</c>을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-738">You can specify <c>IntPtr(0)</c> to use the current <see langword="IErrorInfo" /> interface, or <c>IntPtr(-1)</c> to ignore the current <see langword="IErrorInfo" /> interface and construct the exception just from the error code.</span></span></param>
        <summary><span data-ttu-id="bb2a9-739">예외 개체에 대한 [IErrorInfo](https://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) 인터페이스에 전달된 추가 오류 정보를 사용하여 지정된 HRESULT 오류 코드를 해당하는 <see cref="T:System.Exception" /> 개체로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-739">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object, with additional error information passed in an [IErrorInfo](https://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface for the exception object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-740">변환된 HRESULT와 <paramref name="errorInfo" />에서 가져온 정보를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-740">An object that represents the converted HRESULT and information obtained from <paramref name="errorInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-741">사용 합니다 <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> 메서드를를 <xref:System.Exception> 호출 하지 않고도 HRESULT에 따라는 <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> 메서드와 (따라서 해당 성능 오버 헤드가 방지) 예외를 catch 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-741">Use the <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> method to get an <xref:System.Exception> based on an HRESULT without having to call the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method and catch the exception (thus avoiding the corresponding performance overhead).</span></span> <span data-ttu-id="bb2a9-742">`errorInfo` 매개 변수는 해당 텍스트 설명 및 오류를 정의한 인터페이스에 대 한 전역적으로 고유 식별자 (GUID) 등 오류에 대 한 추가 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-742">The `errorInfo` parameter supplies additional information about the error, such as its textual description and the globally unique identifier (GUID) for the interface that defined the error.</span></span>  
  
 <span data-ttu-id="bb2a9-743">변환에서 제공 해야 하는 사용자 지정 오류 정보가 있는 경우이 메서드 오버 로드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-743">Use this method overload if you have custom error information that you have to supply in the conversion.</span></span>  
  
 <span data-ttu-id="bb2a9-744">각 HRESULT에서 매핑을.NET Framework에는 비교할 수 있는 예외 클래스를 참조 하세요. [방법: Hresult 및 예외 매핑](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-744">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-745">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-745">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-746">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-746">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms221233(v=vs.85).aspx"><span data-ttu-id="bb2a9-747">IErrorInfo 인터페이스</span><span class="sxs-lookup"><span data-stu-id="bb2a9-747">IErrorInfo Interface</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetExceptionPointers">
      <MemberSignature Language="C#" Value="public static IntPtr GetExceptionPointers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetExceptionPointers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionPointers () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetExceptionPointers();" />
      <MemberSignature Language="F#" Value="static member GetExceptionPointers : unit -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetExceptionPointers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb2a9-748">예외에 대한 컴퓨터 독립적 설명과 예외가 발생할 때 스레드에 대해 존재하는 컴퓨터 상태에 대한 정보를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-748">Retrieves a computer-independent description of an exception, and information about the state that existed for the thread when the exception occurred.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-749"><see href="https://docs.microsoft.com/windows/desktop/api/winnt/ns-winnt-_exception_pointers">EXCEPTION_POINTERS</see> 구조체에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-749">A pointer to an <see href="https://docs.microsoft.com/windows/desktop/api/winnt/ns-winnt-_exception_pointers">EXCEPTION_POINTERS</see> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-750"><xref:System.Runtime.InteropServices.Marshal.GetExceptionPointers%2A> 구조적 예외 (SEH)만 처리 컴파일러 지원에 대 한 노출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-750"><xref:System.Runtime.InteropServices.Marshal.GetExceptionPointers%2A> is exposed for compiler support of structured exception handling (SEH) only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-751">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-751">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-752">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-752">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetFunctionPointerForDelegate">
      <MemberSignature Language="C#" Value="public static IntPtr GetFunctionPointerForDelegate (Delegate d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetFunctionPointerForDelegate(class System.Delegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFunctionPointerForDelegate (d As Delegate) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetFunctionPointerForDelegate(Delegate ^ d);" />
      <MemberSignature Language="F#" Value="static member GetFunctionPointerForDelegate : Delegate -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("GetFunctionPointerForDelegate(Delegate) may be unavailable in future releases. Instead, use GetFunctionPointerForDelegate&lt;T&gt;(T). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296522")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Delegate" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="bb2a9-753">비관리 코드에 전달할 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-753">The delegate to be passed to unmanaged code.</span></span></param>
        <summary><span data-ttu-id="bb2a9-754">대리자를 비관리 코드에서 호출할 수 있는 함수 포인터로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-754">Converts a delegate into a function pointer that is callable from unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-755">비관리 코드에 전달할 수 있는 값입니다. 비관리 코드에서는 이 값을 사용하여 관리되는 내부 대리자를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-755">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-756">대리자 `d` 비관리 코드를 사용 하 여 전달할 수 있는 함수 포인터로 변환 되는 [__stdcall](https://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) 호출 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-756">The delegate `d` is converted to a function pointer that can be passed to unmanaged code using the [__stdcall](https://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) calling convention.</span></span>  
  
 <span data-ttu-id="bb2a9-757">관리 코드에서 가비지 수집기에 의해 수집 대리자를 수동으로 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-757">You must manually keep the delegate from being collected by the garbage collector from managed code.</span></span> <span data-ttu-id="bb2a9-758">가비지 수집기는 관리 되지 않는 코드에 대 한 참조를 추적 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-758">The garbage collector does not track references to unmanaged code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-759"><paramref name="d" /> 매개 변수는 제네릭 형식 정의입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-759">The <paramref name="d" /> parameter is a generic type definition.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-760"><paramref name="d" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-760">The <paramref name="d" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-761">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-761">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-762">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-762">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetFunctionPointerForDelegate&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr GetFunctionPointerForDelegate&lt;TDelegate&gt; (TDelegate d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetFunctionPointerForDelegate&lt;TDelegate&gt;(!!TDelegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFunctionPointerForDelegate(Of TDelegate) (d As TDelegate) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static IntPtr GetFunctionPointerForDelegate(TDelegate d);" />
      <MemberSignature Language="F#" Value="static member GetFunctionPointerForDelegate : 'Delegate -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="d" Type="TDelegate" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate"><span data-ttu-id="bb2a9-763">변환할 대리자의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-763">The type of delegate to convert.</span></span></typeparam>
        <param name="d"><span data-ttu-id="bb2a9-764">비관리 코드에 전달할 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-764">The delegate to be passed to unmanaged code.</span></span></param>
        <summary><span data-ttu-id="bb2a9-765">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="bb2a9-765">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="bb2a9-766">지정된 형식의 대리자를 관리되지 않는 코드에서 호출할 수 있는 함수 포인터로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-766">Converts a delegate of a specified type to a function pointer that is callable from unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-767">비관리 코드에 전달할 수 있는 값입니다. 비관리 코드에서는 이 값을 사용하여 관리되는 내부 대리자를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-767">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-768">대리자 `d` 를 사용 하 여 비관리 코드로 전달 될 수 있는 함수 포인터로 변환 되는 [__stdcall](https://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) 호출 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-768">The delegate `d` is converted to a function pointer that can be passed to unmanaged code by using the [__stdcall](https://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) calling convention.</span></span>  
  
 <span data-ttu-id="bb2a9-769">관리 코드에서 가비지 수집기에 의해 수집 대리자를 수동으로 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-769">You must manually keep the delegate from being collected by the garbage collector from managed code.</span></span> <span data-ttu-id="bb2a9-770">가비지 수집기는 관리 되지 않는 코드에 대 한 참조를 추적 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-770">The garbage collector does not track references to unmanaged code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-771"><paramref name="d" /> 매개 변수는 제네릭 형식 정의입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-771">The <paramref name="d" /> parameter is a generic type definition.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-772"><paramref name="d" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-772">The <paramref name="d" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-773">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-773">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-774">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-774">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHINSTANCE">
      <MemberSignature Language="C#" Value="public static IntPtr GetHINSTANCE (System.Reflection.Module m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetHINSTANCE(class System.Reflection.Module m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHINSTANCE (m As Module) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetHINSTANCE(System::Reflection::Module ^ m);" />
      <MemberSignature Language="F#" Value="static member GetHINSTANCE : System.Reflection.Module -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetHINSTANCE m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.Module" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="bb2a9-775">HINSTANCE가 필요한 모듈입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-775">The module whose HINSTANCE is desired.</span></span></param>
        <summary><span data-ttu-id="bb2a9-776">지정된 모듈의 인스턴스 핸들(HINSTANCE)을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-776">Returns the instance handle (HINSTANCE) for the specified module.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-777"><paramref name="m" />에 대한 HINSTANCE이거나 모듈에 HINSTANCE가 없을 경우는 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-777">The HINSTANCE for <paramref name="m" />; or -1 if the module does not have an HINSTANCE.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-778">동적 메모리를 하거나 모듈에 HINSTANCE는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-778">When dynamic or in-memory, modules do not have an HINSTANCE.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-779"><paramref name="m" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-779">The <paramref name="m" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-780">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-780">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-781">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-781">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHRForException">
      <MemberSignature Language="C#" Value="public static int GetHRForException (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHRForException(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHRForException (e As Exception) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHRForException(Exception ^ e);" />
      <MemberSignature Language="F#" Value="static member GetHRForException : Exception -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetHRForException e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="bb2a9-782">HRESULT로 변환할 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-782">The exception to convert to an HRESULT.</span></span></param>
        <summary><span data-ttu-id="bb2a9-783">지정된 예외를 HRESULT로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-783">Converts the specified exception to an HRESULT.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-784">해당 예외로 매핑되는 HRESULT입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-784">The HRESULT mapped to the supplied exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-785"><xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> 설정 된 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) COM GetErrorInfoNEEDGUID 함수를 호출 하 여 얻을 수 있는 예외에 대 한 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-785"><xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> also sets up an [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface for the exception that can be obtained by calling the COM GetErrorInfoNEEDGUID function.</span></span> <span data-ttu-id="bb2a9-786">이 함수를 사용 하 여 적용 하는 COM 인터페이스의 관리 되는 클래스 구현에는 HRESULT 값을 반환 하는 <xref:System.Runtime.InteropServices.PreserveSigAttribute> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-786">You can use this function to return an HRESULT value on a managed class implementation of a COM interface where you apply the <xref:System.Runtime.InteropServices.PreserveSigAttribute> attribute.</span></span> <span data-ttu-id="bb2a9-787">특성 사용된 메서드가 모든 예외를 catch 하 고 사용 된 <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> 해당 HRESULT 값을 반환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-787">Have the attributed method catch all exceptions and use the <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> method to return the appropriate HRESULT value.</span></span> <span data-ttu-id="bb2a9-788">잘못 된 동작이 생성 메서드 외부에 전파 하는 데 예외를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-788">Allowing an exception to propagate outside the method produces incorrect behavior.</span></span> <span data-ttu-id="bb2a9-789">(실제로 공용 언어 런타임에서 실패 예외가 v 테이블을 통해 이러한 메서드를 호출 하는 COM 클라이언트에 전달할.)</span><span class="sxs-lookup"><span data-stu-id="bb2a9-789">(In fact, the common language runtime fails to pass an exception to a COM client that calls such a method through a v-table.)</span></span>  
  
 <span data-ttu-id="bb2a9-790">합니다 <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> 메서드 집합을 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) 현재 스레드의 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-790">Note that the <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> method sets the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread.</span></span> <span data-ttu-id="bb2a9-791">메서드 같은 예기치 않은 결과가 발생할 수 있습니다 합니다 <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> 기본적으로 사용 하는 메서드를 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) 설정 된 경우 현재 스레드의 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-791">This can cause unexpected results for methods like the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> methods that default to using the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) of the current thread if it is set.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-792">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-792">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-793">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-793">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetHRForLastWin32Error">
      <MemberSignature Language="C#" Value="public static int GetHRForLastWin32Error ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHRForLastWin32Error() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHRForLastWin32Error () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHRForLastWin32Error();" />
      <MemberSignature Language="F#" Value="static member GetHRForLastWin32Error : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb2a9-794"><see cref="T:System.Runtime.InteropServices.Marshal" />을 사용하여 실행된 Win32 코드에서 발생한 마지막 오류에 해당하는 HRESULT를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-794">Returns the HRESULT corresponding to the last error incurred by Win32 code executed using <see cref="T:System.Runtime.InteropServices.Marshal" />.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-795">마지막 Win32 오류 코드에 해당하는 HRESULT입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-795">The HRESULT corresponding to the last Win32 error code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-796">대상 함수에는 `setLastError` 메타 데이터 플래그를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-796">The target function must have had the `setLastError` metadata flag set.</span></span> <span data-ttu-id="bb2a9-797">예를 들어 합니다 `SetLastError` 필드를 <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> 이어야 합니다 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-797">For example, the `SetLastError` field of the <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> must be `true`.</span></span> <span data-ttu-id="bb2a9-798">이 플래그를 설정 하기 위한 프로세스는 사용 되는 원본 언어에 따라 달라 집니다. C#c + + 되며 `false` 기본적으로 하지만 `Declare` Visual Basic의 문은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-798">The process for setting this flag depends on the source language used: C# and C++ are `false` by default, but the `Declare` statement in Visual Basic is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-799">다음 예제에서는 사용 하 여 Win32 오류 코드에 해당 하는 HRESULT를 검색 하는 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-799">The following example demonstrates how to retrieve an HRESULT corresponding to a Win32 error code using the <xref:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetHRForLastWin32Error#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetHRForLastWin32Error/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetHRForLastWin32Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetHRForLastWin32Error/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-800">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-800">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-801">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-801">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetIDispatchForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetIDispatchForObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIDispatchForObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIDispatchForObject (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIDispatchForObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIDispatchForObject : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIDispatchForObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="bb2a9-802"><see langword="IDispatch" /> 인터페이스가 요청되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-802">The object whose <see langword="IDispatch" /> interface is requested.</span></span></param>
        <summary><span data-ttu-id="bb2a9-803">관리되는 개체에서 <see href="https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch</see> 인터페이스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-803">Returns an <see href="https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch</see> interface from a managed object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-804"><paramref name="o" /> 매개 변수에 대한 <see langword="IDispatch" /> 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-804">The <see langword="IDispatch" /> pointer for the <paramref name="o" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-805">관리 코드에서 거의 직접 작업할 수는 `IDispatch` 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-805">In managed code, you seldom work directly with the `IDispatch` interface.</span></span> <span data-ttu-id="bb2a9-806">그러나 <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> COM 개체 매개 변수로 노출 하는 메서드를 호출 하는 경우에 유용는 <xref:System.IntPtr> 형식 또는 사용자 지정 마샬링 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-806">However, <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="bb2a9-807">이 메서드를 사용 하 여 개체를 호출 하면의 참조 횟수를 포인터 반환 되기 전에 인터페이스 포인터에 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-807">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="bb2a9-808">항상 사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> 포인터를 사용 하 여 마친 후에 참조 횟수를 감소 시키기 위해.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-808">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span>  
  
 <span data-ttu-id="bb2a9-809">개체에 대 한 COM 호출 가능 래퍼에 대 한 인터페이스 포인터를 얻으려면 관리 되는 개체에서이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-809">You can also use this method on a managed object to obtain an interface pointer to the COM callable wrapper for the object.</span></span> <span data-ttu-id="bb2a9-810">자세한 내용은 참조 하세요. [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-810">For additional information, see [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb2a9-811"><paramref name="o" />가 요청된 인터페이스를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-811"><paramref name="o" /> does not support the requested interface.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-812">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-812">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-813">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-813">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetIDispatchForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetIDispatchForObjectInContext (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIDispatchForObjectInContext(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIDispatchForObjectInContext (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIDispatchForObjectInContext(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIDispatchForObjectInContext : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="bb2a9-814"><see langword="IDispatch" /> 인터페이스가 요청되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-814">The object whose <see langword="IDispatch" /> interface is requested.</span></span></param>
        <summary><span data-ttu-id="bb2a9-815">호출자가 관리되는 개체와 같은 컨텍스트에 있는 경우 해당 개체에서 <see href="https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch</see> 인터페이스 포인터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-815">Returns an <see href="https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch</see> interface pointer from a managed object, if the caller is in the same context as that object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-816">지정된 개체의 <see langword="IDispatch" /> 인터페이스 포인터이거나 호출자가 지정된 개체와 같은 컨텍스트에 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-816">The <see langword="IDispatch" /> interface pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-817">이 메서드는 동일 <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> 반환 한다는 점을 제외 하 고 `null` 호출자가 개체와 같은 컨텍스트에 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-817">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb2a9-818"><paramref name="o" />가 요청된 인터페이스를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-818"><paramref name="o" /> does not support the requested interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-819"><paramref name="o" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-819"><paramref name="o" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-820">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-820">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-821">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-821">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetITypeInfoForType">
      <MemberSignature Language="C#" Value="public static IntPtr GetITypeInfoForType (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetITypeInfoForType(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetITypeInfoForType (t As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetITypeInfoForType(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetITypeInfoForType : Type -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetITypeInfoForType t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="bb2a9-822"><see langword="ITypeInfo" /> 인터페이스가 요청 중인 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-822">The type whose <see langword="ITypeInfo" /> interface is being requested.</span></span></param>
        <summary><span data-ttu-id="bb2a9-823">관리되는 형식에서 <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> 인터페이스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-823">Returns a <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> interface from a managed type.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-824"><paramref name="t" /> 매개 변수의 <see langword="ITypeInfo" /> 인터페이스에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-824">A pointer to the <see langword="ITypeInfo" /> interface for the <paramref name="t" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-825">이 메서드가 반환에 대 한 포인터는 `ITypeInfo` 원래 형식에 따라 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-825">This method returns a pointer to an `ITypeInfo` implementation that is based on the original type.</span></span> <span data-ttu-id="bb2a9-826">개체를 사용 하 여 호출 <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> 참조 횟수가 반환 되기 전에 포인터 인터페이스 포인터에 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-826">Calling an object with <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="bb2a9-827">항상 사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> 포인터를 사용 하 여 마친 후에 참조 횟수를 감소 시키기 위해.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-827">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="bb2a9-828">적용할 수는 <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> 이 사용자 지정 마샬러를 사용 하 여 표준 interop 마샬링 동작을 바꿀 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-828">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> to replace standard interop marshaling behavior with this custom marshaler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-829">다음 예제에 대 한 포인터를 검색 하는 방법에 설명 합니다 `ITypeInfo` 사용 하 여 형식에 대 한 인터페이스를 <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-829">The following example demonstrates how to retrieve a pointer to the `ITypeInfo` interface for a type using the <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetITypeInfoForType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetITypeInfoForType/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetITypeInfoForType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetITypeInfoForType/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-830"><paramref name="t" />가 COM의 표시 형식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-830"><paramref name="t" /> is not a visible type to COM.</span></span>  
  
<span data-ttu-id="bb2a9-831">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-831">-or-</span></span> 
 <span data-ttu-id="bb2a9-832"><paramref name="t" />가 [!INCLUDE[wrt](~/includes/wrt-md.md)] 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-832"><paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bb2a9-833">형식 라이브러리가 해당 형식을 포함하는 어셈블리에 대해 등록되어 있지만 형식 정의를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-833">A type library is registered for the assembly that contains the type, but the type definition cannot be found.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-834">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-834">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-835">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-835">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.MarshalAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetIUnknownForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetIUnknownForObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIUnknownForObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIUnknownForObject (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIUnknownForObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIUnknownForObject : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIUnknownForObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="bb2a9-836"><see langword="IUnknown" /> 인터페이스가 요청되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-836">The object whose <see langword="IUnknown" /> interface is requested.</span></span></param>
        <summary><span data-ttu-id="bb2a9-837">관리되는 개체에서 <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> 인터페이스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-837">Returns an <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> interface from a managed object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-838"><paramref name="o" /> 매개 변수에 대한 <see langword="IUnknown" /> 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-838">The <see langword="IUnknown" /> pointer for the <paramref name="o" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-839">관리 코드에서 거의 직접 작업할 수는 `IUnknown` 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-839">In managed code, you seldom work directly with the `IUnknown` interface.</span></span> <span data-ttu-id="bb2a9-840">그러나 <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> COM 개체 매개 변수로 노출 하는 메서드를 호출 하는 경우에 유용는 <xref:System.IntPtr> 형식 또는 사용자 지정 마샬링 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-840">However, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="bb2a9-841">이 메서드를 사용 하 여 개체를 호출 하면의 참조 횟수를 포인터 반환 되기 전에 인터페이스 포인터에 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-841">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="bb2a9-842">항상 사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> 포인터를 사용 하 여 마친 후에 참조 횟수를 감소 시키기 위해.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-842">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="bb2a9-843">반대 기능을 제공 하는이 메서드는 <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-843">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="bb2a9-844">에 대 한 인터페이스 포인터를 얻으려면 관리 되는 개체에서이 메서드를 사용할 수도 있습니다는 [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) 개체에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-844">You can also use this method on a managed object to obtain an interface pointer to the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) for the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-845">다음 예제에서는 검색 하는 방법을 보여 줍니다는 [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) 사용 하 여 관리 되는 개체에 대 한 인터페이스를 <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-845">The following example demonstrates how to retrieve an [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-846">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-846">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-847">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-847">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetIUnknownForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetIUnknownForObjectInContext (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIUnknownForObjectInContext(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIUnknownForObjectInContext (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIUnknownForObjectInContext(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIUnknownForObjectInContext : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="bb2a9-848"><see langword="IUnknown" /> 인터페이스가 요청되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-848">The object whose <see langword="IUnknown" /> interface is requested.</span></span></param>
        <summary><span data-ttu-id="bb2a9-849">호출자가 관리되는 개체와 같은 컨텍스트에 있는 경우 해당 개체에서 <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> 인터페이스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-849">Returns an <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> interface from a managed object, if the caller is in the same context as that object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-850">지정된 개체에 대한 <see langword="IUnknown" /> 포인터이거나 호출자가 지정된 개체와 같은 컨텍스트에 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-850">The <see langword="IUnknown" /> pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-851">이 메서드는 동일 <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> 반환 한다는 점을 제외 하 고 `null` 호출자가 개체와 같은 컨텍스트에 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-851">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-852">다음 예제에서는 검색 하는 방법을 보여 줍니다는 `IUnknown` 사용 하 여 관리 되는 개체에 대 한 인터페이스를 <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-852">The following example demonstrates how to retrieve an `IUnknown` interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-853">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-853">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-854">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-854">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetLastWin32Error">
      <MemberSignature Language="C#" Value="public static int GetLastWin32Error ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetLastWin32Error() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLastWin32Error () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetLastWin32Error();" />
      <MemberSignature Language="F#" Value="static member GetLastWin32Error : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetLastWin32Error " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb2a9-855"><see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /> 플래그가 설정된 플랫폼 호출을 사용하여 호출된 관리되지 않는 마지막 함수에서 반환하는 오류 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-855">Returns the error code returned by the last unmanaged function that was called using platform invoke that has the <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /> flag set.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-856">Win32 <see href="https://msdn.microsoft.com/library/ms680627.aspx">SetLastError</see> 함수에 대한 호출로 설정된 마지막 오류 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-856">The last error code set by a call to the Win32 <see href="https://msdn.microsoft.com/library/ms680627.aspx">SetLastError</see> function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-857"><xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> Win32 노출 [GetLastError](https://go.microsoft.com/fwlink/?LinkId=148657) Kernel32.DLL에서 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-857"><xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> exposes the Win32 [GetLastError](https://go.microsoft.com/fwlink/?LinkId=148657) function from Kernel32.DLL.</span></span> <span data-ttu-id="bb2a9-858">이 메서드는 직접 플랫폼 호출에 안전 하지 않기 때문에 `GetLastError` 이 정보를 얻을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-858">This method exists because it is not safe to make a direct platform invoke call to `GetLastError` to obtain this information.</span></span> <span data-ttu-id="bb2a9-859">이 오류 코드에 액세스 하려는 경우 호출 해야 합니다 <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> 작성 하는 대신 사용자 고유의 플랫폼 호출 정의 `GetLastError` 를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-859">If you want to access this error code, you must call <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> instead of writing your own platform invoke definition for `GetLastError` and calling it.</span></span> <span data-ttu-id="bb2a9-860">공용 언어 런타임 덮어쓰기 하는 Api에 대 한 내부 호출을 만들 수는 `GetLastError` 운영 체제에서 유지 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-860">The common language runtime can make internal calls to APIs that overwrite the `GetLastError` maintained by the operating system.</span></span>  
  
 <span data-ttu-id="bb2a9-861">적용 하는 경우에 오류 코드를 가져오려면이 메서드를 사용할 수 있습니다 합니다 <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> 메서드 시그니처를 설정 합니다 <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> 필드를`true`합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-861">You can use this method to obtain error codes only if you apply the <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> to the method signature and set the <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> field to`true`.</span></span> <span data-ttu-id="bb2a9-862">이 프로세스는 사용 되는 원본 언어에 따라 달라 집니다. C#c + + 되며 `false` 기본적으로 하지만 `Declare` Visual Basic의 문은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-862">The process for this varies depending upon the source language used: C# and C++ are `false` by default, but the `Declare` statement in Visual Basic is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-863">다음 예제에서는 <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-863">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> method.</span></span> <span data-ttu-id="bb2a9-864">이 예제에서는 먼저 오류가 없는 사용 하 여 메서드를 호출 하는 방법을 보여 줍니다 하 고 오류가 있는 메서드를 호출 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-864">The example first demonstrates calling the method with no error present and then demonstrates calling the method with an error present.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetLastWin32Error#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetLastWin32Error/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetLastWin32Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetLastWin32Error/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-865">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-865">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-866">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-866">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedThunkForUnmanagedMethodPtr">
      <MemberSignature Language="C#" Value="public static IntPtr GetManagedThunkForUnmanagedMethodPtr (IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetManagedThunkForUnmanagedMethodPtr(native int pfnMethodToWrap, native int pbSignature, int32 cbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManagedThunkForUnmanagedMethodPtr (pfnMethodToWrap As IntPtr, pbSignature As IntPtr, cbSignature As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetManagedThunkForUnmanagedMethodPtr(IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="F#" Value="static member GetManagedThunkForUnmanagedMethodPtr : nativeint * nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr (pfnMethodToWrap, pbSignature, cbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The GetManagedThunkForUnmanagedMethodPtr method has been deprecated and will be removed in a future release.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pfnMethodToWrap" Type="System.IntPtr" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pbSignature" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="cbSignature" Type="System.Int32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pfnMethodToWrap"><span data-ttu-id="bb2a9-867">마샬링할 메서드에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-867">A pointer to the method to marshal.</span></span></param>
        <param name="pbSignature"><span data-ttu-id="bb2a9-868">메서드 시그니처에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-868">A pointer to the method signature.</span></span></param>
        <param name="cbSignature"><span data-ttu-id="bb2a9-869"><paramref name="pbSignature" />의 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-869">The number of bytes in <paramref name="pbSignature" />.</span></span></param>
        <summary><span data-ttu-id="bb2a9-870">관리 코드에서 비관리 코드로 호출을 마샬링하는 런타임 생성 함수에 대한 포인터를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-870">Gets a pointer to a runtime-generated function that marshals a call from managed to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-871"><paramref name="pfnMethodToWrap" /> 매개 변수에서의 호출을 비관리 코드로 마샬링할 함수에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-871">A pointer to the function that will marshal a call from the <paramref name="pfnMethodToWrap" /> parameter to unmanaged code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-872"><xref:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr%2A> 컴파일러 지원만 노출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-872"><xref:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr%2A> is exposed for compiler support only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-873">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-873">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-874">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-874">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetMethodInfoForComSlot">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo GetMethodInfoForComSlot (Type t, int slot, ref System.Runtime.InteropServices.ComMemberType memberType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo GetMethodInfoForComSlot(class System.Type t, int32 slot, valuetype System.Runtime.InteropServices.ComMemberType&amp; memberType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodInfoForComSlot (t As Type, slot As Integer, ByRef memberType As ComMemberType) As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::MemberInfo ^ GetMethodInfoForComSlot(Type ^ t, int slot, System::Runtime::InteropServices::ComMemberType % memberType);" />
      <MemberSignature Language="F#" Value="static member GetMethodInfoForComSlot : Type * int *  -&gt; System.Reflection.MemberInfo" Usage="System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot (t, slot, memberType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="slot" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="memberType" Type="System.Runtime.InteropServices.ComMemberType" RefType="ref" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="bb2a9-875"><see cref="T:System.Reflection.MemberInfo" />가 검색될 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-875">The type for which the <see cref="T:System.Reflection.MemberInfo" /> is to be retrieved.</span></span></param>
        <param name="slot"><span data-ttu-id="bb2a9-876">VTBL 슬롯입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-876">The VTBL slot.</span></span></param>
        <param name="memberType"><span data-ttu-id="bb2a9-877">성공적으로 반환되는 경우 멤버의 형식을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-877">On successful return, one of the enumeration values that specifies the type of the member.</span></span></param>
        <summary><span data-ttu-id="bb2a9-878">지정된 가상 함수 테이블(v-table 또는 VTBL) 슬롯에서 <see cref="T:System.Reflection.MemberInfo" /> 개체를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-878">Retrieves a <see cref="T:System.Reflection.MemberInfo" /> object for the specified virtual function table (v-table or VTBL) slot.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-879">지정된 VTBL 슬롯에서 멤버를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-879">The object that represents the member at the specified VTBL slot.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-880">반환 값을 <xref:System.Reflection.FieldInfo>, <xref:System.Reflection.MethodInfo>, 또는 <xref:System.Reflection.PropertyInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-880">The return value may be a <xref:System.Reflection.FieldInfo>, <xref:System.Reflection.MethodInfo>, or <xref:System.Reflection.PropertyInfo> object.</span></span> <span data-ttu-id="bb2a9-881">반환 값이 지정 된 COM 슬롯에 있는 관리 되는 멤버의 유형에 따라 다릅니다 (일반화 된 반환 형식 이므로 <xref:System.Reflection.MemberInfo> 모든 세 개의 파생).</span><span class="sxs-lookup"><span data-stu-id="bb2a9-881">The return value depends on the type of managed member that exists in the given COM slot (hence the generalized return type <xref:System.Reflection.MemberInfo> from which all three derive).</span></span>  
  
 <span data-ttu-id="bb2a9-882">이 메서드에서 반환 되는 0부터 시작 슬롯 번호 3에 대 한 계정 [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) 및 가능한 경우 4 [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) 메서드를 사용할 수 있는 첫 번째 슬롯의 값을 하거나 3 만드는 또는 7입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-882">The zero-based slot number that is returned by this method accounts for three [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) and possibly four [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) methods, making the value of the first available slot either 3 or 7.</span></span> <span data-ttu-id="bb2a9-883"><xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> 반대 기능을 제공 <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-883"><xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bb2a9-884">사용할 수 있습니다 <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> 및 <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> 와 함께에서 <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> 지정된 된 범위 내의 슬롯을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-884">You can use <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> to pass slots within a specified range.</span></span>  
  
 <span data-ttu-id="bb2a9-885">`memberType` 매개 변수는 반환 시만 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-885">The `memberType` parameter is important only on return.</span></span> <span data-ttu-id="bb2a9-886">반환 된에 해당 하는 COM 멤버 (일반 메서드 또는 속성 접근자) 형식의 포함 <xref:System.Reflection.MemberInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-886">It contains the type of the COM member (a regular method or a property accessor) that corresponds to the returned <xref:System.Reflection.MemberInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-887"><paramref name="t" />가 COM에 표시되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-887"><paramref name="t" /> is not visible from COM.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-888">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-888">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-889">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-889">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComMemberType" />
      </Docs>
    </Member>
    <Member MemberName="GetNativeVariantForObject">
      <MemberSignature Language="C#" Value="public static void GetNativeVariantForObject (object obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetNativeVariantForObject(object obj, native int pDstNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetNativeVariantForObject (obj As Object, pDstNativeVariant As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetNativeVariantForObject(System::Object ^ obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetNativeVariantForObject : obj * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.GetNativeVariantForObject (obj, pDstNativeVariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("GetNativeVariantForObject(Object, IntPtr) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="pDstNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="bb2a9-890">COM VARIANT를 가져올 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-890">The object for which to get a COM VARIANT.</span></span></param>
        <param name="pDstNativeVariant"><span data-ttu-id="bb2a9-891"><paramref name="obj" /> 매개 변수에 해당하는 VARIANT를 받을 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-891">A pointer to receive the VARIANT that corresponds to the <paramref name="obj" /> parameter.</span></span></param>
        <summary><span data-ttu-id="bb2a9-892">개체를 COM VARIANT로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-892">Converts an object to a COM VARIANT.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-893">`pDstNativeVariant` 매개 변수는 결과 VARIANT를 저장할 충분 한 메모리를 가리켜야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-893">The `pDstNativeVariant` parameter must point to sufficient memory to store the resulting VARIANT.</span></span> <span data-ttu-id="bb2a9-894">이 메서드의 구현을 호출 하는 또한 합니다 [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) 원시 메모리에서 함수는는 `pDstNativeVariant` 매개 변수를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-894">Also, the implementation of this method calls the [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) function on the raw memory that the `pDstNativeVariant` parameter points to.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-895"><paramref name="obj" /> 매개 변수는 제네릭 형식의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-895">The <paramref name="obj" /> parameter is an instance of a generic type.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-896">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-896">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-897">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-897">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetNativeVariantForObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void GetNativeVariantForObject&lt;T&gt; (T obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetNativeVariantForObject&lt;T&gt;(!!T obj, native int pDstNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetNativeVariantForObject(Of T) (obj As T, pDstNativeVariant As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void GetNativeVariantForObject(T obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetNativeVariantForObject : 'T * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.GetNativeVariantForObject (obj, pDstNativeVariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("GetNativeVariantForObject&lt;T&gt;(T, IntPtr) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="T" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pDstNativeVariant" Type="System.IntPtr" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bb2a9-898">변환할 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-898">The type of the object to convert.</span></span></typeparam>
        <param name="obj"><span data-ttu-id="bb2a9-899">COM VARIANT를 가져올 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-899">The object for which to get a COM VARIANT.</span></span></param>
        <param name="pDstNativeVariant"><span data-ttu-id="bb2a9-900"><paramref name="obj" /> 매개 변수에 해당하는 VARIANT를 받을 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-900">A pointer to receive the VARIANT that corresponds to the <paramref name="obj" /> parameter.</span></span></param>
        <summary><span data-ttu-id="bb2a9-901">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="bb2a9-901">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="bb2a9-902">지정된 형식의 개체를 COM VARIANT로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-902">Converts an object of a specified type to a COM VARIANT.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-903">`pDstNativeVariant` 매개 변수는 결과 VARIANT를 저장할 충분 한 메모리를 가리켜야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-903">The `pDstNativeVariant` parameter must point to sufficient memory to store the resulting VARIANT.</span></span> <span data-ttu-id="bb2a9-904">이 메서드의 구현을 호출 하는 또한 [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) 원시 메모리에서 함수는는 `pDstNativeVariant` 매개 변수를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-904">Also, the implementation of this method calls [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) function on the raw memory that the `pDstNativeVariant` parameter points to.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-905">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-905">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-906">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-906">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetObjectForIUnknown (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObjectForIUnknown(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForIUnknown (pUnk As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectForIUnknown(IntPtr pUnk);" />
      <MemberSignature Language="F#" Value="static member GetObjectForIUnknown : nativeint -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetObjectForIUnknown pUnk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk"><span data-ttu-id="bb2a9-907"><see langword="IUnknown" /> 인터페이스에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-907">A pointer to the <see langword="IUnknown" /> interface.</span></span></param>
        <summary><span data-ttu-id="bb2a9-908"><see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> 인터페이스에 대한 포인터를 사용하여 COM 개체를 나타내는 형식의 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-908">Returns an instance of a type that represents a COM object by a pointer to its <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> interface.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-909">지정된 관리되지 않는 COM 개체를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-909">An object that represents the specified unmanaged COM object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-910">이 메서드를 래핑합니다 `IUnknown` 에서 관리 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-910">This method wraps `IUnknown` in a managed object.</span></span> <span data-ttu-id="bb2a9-911">COM 구성 요소 참조 횟수를 증가 시키는 것과 효과가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-911">This has the effect of incrementing the reference count of the COM component.</span></span> <span data-ttu-id="bb2a9-912">런타임에 COM 개체를 나타내는 관리 되는 개체에서 가비지 수집을 수행 하는 경우 참조 횟수를 감소 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-912">The reference count will be decremented when the runtime performs garbage collection on the managed object that represents the COM object.</span></span>  
  
 <span data-ttu-id="bb2a9-913">`pUnk` 매개 변수를 나타냅니다는 `IUnknown` 인터페이스 포인터 하지만 모든 COM 인터페이스에서 직접 또는 간접적으로 파생 되므로 `IUnknown`,이 메서드는 COM 인터페이스로 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-913">The `pUnk` parameter represents an `IUnknown` interface pointer; however, because all COM interfaces derive directly or indirectly from `IUnknown`, you can pass any COM interface to this method.</span></span> <span data-ttu-id="bb2a9-914">반환 하는 개체 <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A> 되는 [런타임 호출 가능 래퍼](~/docs/framework/interop/runtime-callable-wrapper.md), 처럼 공용 언어 런타임에서 관리는 다른 관리 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-914">The object returned by <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A> is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), which the common language runtime manages as it does any other managed object.</span></span> <span data-ttu-id="bb2a9-915">이 래퍼 형식의 기본 경우가 `System.__ComObject` 래퍼 형식 모호한 경우를 사용 하는 숨겨진 형식인 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-915">The type of this wrapper is often a base `System.__ComObject` type, which is a hidden type used when the wrapper type is ambiguous.</span></span> <span data-ttu-id="bb2a9-916">COM 개체가 구현으로 기본 형식에 대 한 런타임에 바인딩된 호출을 여전히 가능 합니다 [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5(vs.85)) 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-916">You can still make late-bound calls to such a base type as long as the COM object implements the [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5(vs.85)) interface.</span></span> <span data-ttu-id="bb2a9-917">마찬가지로, 적절 한 COM 인터페이스에 반환된 된 개체를 캐스팅할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-917">Likewise, you can cast the returned object to an appropriate COM interface.</span></span>  
  
 <span data-ttu-id="bb2a9-918">래핑될 개체에 대 한 특정 관리 되는 클래스 형식 (및 제네릭 래퍼 형식이 아닌)를 사용 하 여 다음 요구 사항을 준수 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-918">For an object to be wrapped with a specific managed class type (and not a generic wrapper type), you must adhere to the following requirements:</span></span>  
  
-   <span data-ttu-id="bb2a9-919">구현 된 [IProvideClassInfo](https://go.microsoft.com/fwlink/?LinkID=148012) COM 개체에 대 한 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-919">Implement the [IProvideClassInfo](https://go.microsoft.com/fwlink/?LinkID=148012) interface for the COM object.</span></span>  
  
-   <span data-ttu-id="bb2a9-920">포함 된 어셈블리를 등록 합니다 [Regasm.exe (어셈블리 등록 도구)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-920">Register the containing assembly with the [Regasm.exe (Assembly Registration Tool)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span></span>  
  
 <span data-ttu-id="bb2a9-921">이러한 요구 사항을 충족 하 고 계속 사용 하 여 관리 되는 특정 클래스 형식을 사용 하 여 래핑된 개체를 받을 수 또는 <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-921">Alternatively, you can avoid these requirements and still get an object that is wrapped with a specific managed class type by using the <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-922">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-922">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-923">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-923">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectForNativeVariant">
      <MemberSignature Language="C#" Value="public static object GetObjectForNativeVariant (IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObjectForNativeVariant(native int pSrcNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForNativeVariant (pSrcNativeVariant As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectForNativeVariant(IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetObjectForNativeVariant : nativeint -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant pSrcNativeVariant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("GetObjectForNativeVariant(IntPtr) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pSrcNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pSrcNativeVariant"><span data-ttu-id="bb2a9-924">COM VARIANT에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-924">A pointer to a COM VARIANT.</span></span></param>
        <summary><span data-ttu-id="bb2a9-925">COM VARIANT를 개체로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-925">Converts a COM VARIANT to an object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-926"><paramref name="pSrcNativeVariant" /> 매개 변수에 해당하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-926">An object that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-927"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> 관리 되지 않는 VARIANT 형식에 대 한 원시 포인터를 해당 하는 관리 되는 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-927"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> returns a managed object that corresponds to a raw pointer to an unmanaged VARIANT type.</span></span> <span data-ttu-id="bb2a9-928">interopmarshaler는 VARIANT 형식 관리 코드에 노출 하는 경우 동일한 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-928">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span>  
  
 <span data-ttu-id="bb2a9-929"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> 반대 기능을 제공 <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-929"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bb2a9-930">VARIANT 형식이 VT_ERROR 합니다 <xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> 형식의 개체를 반환 `Int32` 대신 `UInt32`합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-930">When the VARIANT type is VT_ERROR, <xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> returns an object of type `Int32` instead of `UInt32`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException"><span data-ttu-id="bb2a9-931"><paramref name="pSrcNativeVariant" />가 유효한 VARIANT 형식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-931"><paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bb2a9-932"><paramref name="pSrcNativeVariant" />가 지원되지 않는 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-932"><paramref name="pSrcNativeVariant" /> has an unsupported type.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-933">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-933">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-934">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-934">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectForNativeVariant&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetObjectForNativeVariant&lt;T&gt; (IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetObjectForNativeVariant&lt;T&gt;(native int pSrcNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForNativeVariant(Of T) (pSrcNativeVariant As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T GetObjectForNativeVariant(IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetObjectForNativeVariant : nativeint -&gt; 'T" Usage="System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant pSrcNativeVariant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("GetObjectForNativeVariant&lt;T&gt;(IntPtr) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="pSrcNativeVariant" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bb2a9-935">COM VARIANT를 변환할 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-935">The type to which to convert the COM VARIANT.</span></span></typeparam>
        <param name="pSrcNativeVariant"><span data-ttu-id="bb2a9-936">COM VARIANT에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-936">A pointer to a COM VARIANT.</span></span></param>
        <summary><span data-ttu-id="bb2a9-937">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="bb2a9-937">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="bb2a9-938">COM VARIANT를 지정된 형식의 개체로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-938">Converts a COM VARIANT to an object of a specified type.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-939"><paramref name="pSrcNativeVariant" /> 매개 변수에 해당하는 지정된 형식의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-939">An object of the specified type that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-940"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> 형식의 관리 되는 개체를 반환 합니다. `T` 관리 되지 않는 VARIANT 형식에 대 한 원시 포인터에 해당 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-940"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> returns a managed object of type `T` that corresponds to a raw pointer to an unmanaged VARIANT type.</span></span> <span data-ttu-id="bb2a9-941">interopmarshaler는 VARIANT 형식 관리 코드에 노출 하는 경우 동일한 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-941">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span>  
  
 <span data-ttu-id="bb2a9-942"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> 반대 기능을 제공 <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%60%601%28%60%600%2CSystem.IntPtr%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-942"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%60%601%28%60%600%2CSystem.IntPtr%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException"><span data-ttu-id="bb2a9-943"><paramref name="pSrcNativeVariant" />가 유효한 VARIANT 형식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-943"><paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bb2a9-944"><paramref name="pSrcNativeVariant" />가 지원되지 않는 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-944"><paramref name="pSrcNativeVariant" /> has an unsupported type.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-945">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-945">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-946">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-946">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectsForNativeVariants">
      <MemberSignature Language="C#" Value="public static object[] GetObjectsForNativeVariants (IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetObjectsForNativeVariants(native int aSrcNativeVariant, int32 cVars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectsForNativeVariants (aSrcNativeVariant As IntPtr, cVars As Integer) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetObjectsForNativeVariants(IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="F#" Value="static member GetObjectsForNativeVariants : nativeint * int -&gt; obj[]" Usage="System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants (aSrcNativeVariant, cVars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("GetObjectsForNativeVariants(IntPtr, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aSrcNativeVariant" Type="System.IntPtr" />
        <Parameter Name="cVars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="aSrcNativeVariant"><span data-ttu-id="bb2a9-947">COM VARIANT 배열의 첫 번째 요소에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-947">A pointer to the first element of an array of COM VARIANTs.</span></span></param>
        <param name="cVars"><span data-ttu-id="bb2a9-948"><paramref name="aSrcNativeVariant" />에서 COM VARIANT의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-948">The count of COM VARIANTs in <paramref name="aSrcNativeVariant" />.</span></span></param>
        <summary><span data-ttu-id="bb2a9-949">COM <see href="https://go.microsoft.com/fwlink/?LinkId=148670">VARIANT</see>의 배열을 개체 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-949">Converts an array of COM <see href="https://go.microsoft.com/fwlink/?LinkId=148670">VARIANTs</see> to an array of objects.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-950"><paramref name="aSrcNativeVariant" />에 해당하는 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-950">An object array that corresponds to <paramref name="aSrcNativeVariant" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-951"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%2A> 관리 되지 않는 VARIANT 형식의 C 스타일 배열에 대 한 원시 포인터를 해당 하는 관리 되는 개체의 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-951"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%2A> returns an array of managed objects that corresponds to a raw pointer to a C-style array of unmanaged VARIANT types.</span></span> <span data-ttu-id="bb2a9-952">interopmarshaler는 VARIANT 형식 관리 코드에 노출 하는 경우 동일한 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-952">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span> <span data-ttu-id="bb2a9-953">빈 배열의 경우 메서드가 반환 된 `cVars` 매개 변수가 0 이면 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-953">The method returns an empty array when the `cVars` parameter is 0.</span></span>  
  
 <span data-ttu-id="bb2a9-954">개체 배열 (반환 값)에 가비지를 수집을 일반적인 방식으로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-954">The object array (the return value) gets garbage collected as usual.</span></span> <span data-ttu-id="bb2a9-955">관리 되지 않는 입력된 배열 또는 입력 배열의 개별 변형 해제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-955">The unmanaged input array or individual VARIANTs in the input array are not freed.</span></span> <span data-ttu-id="bb2a9-956">따라서 것이 적절 하 게 리소스를 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-956">Therefore it is your responsibility to free them as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb2a9-957"><paramref name="cVars" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-957"><paramref name="cVars" /> is a negative number.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-958">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-958">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-959">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-959">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectsForNativeVariants&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] GetObjectsForNativeVariants&lt;T&gt; (IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] GetObjectsForNativeVariants&lt;T&gt;(native int aSrcNativeVariant, int32 cVars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectsForNativeVariants(Of T) (aSrcNativeVariant As IntPtr, cVars As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ GetObjectsForNativeVariants(IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="F#" Value="static member GetObjectsForNativeVariants : nativeint * int -&gt; 'T[]" Usage="System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants (aSrcNativeVariant, cVars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("GetObjectsForNativeVariants&lt;T&gt;(IntPtr, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="aSrcNativeVariant" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cVars" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bb2a9-960">반환할 배열의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-960">The type of the array to return.</span></span></typeparam>
        <param name="aSrcNativeVariant"><span data-ttu-id="bb2a9-961">COM VARIANT 배열의 첫 번째 요소에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-961">A pointer to the first element of an array of COM VARIANTs.</span></span></param>
        <param name="cVars"><span data-ttu-id="bb2a9-962"><paramref name="aSrcNativeVariant" />에서 COM VARIANT의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-962">The count of COM VARIANTs in <paramref name="aSrcNativeVariant" />.</span></span></param>
        <summary><span data-ttu-id="bb2a9-963">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="bb2a9-963">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="bb2a9-964">COM VARIANT의 배열을 지정된 형식의 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-964">Converts an array of COM VARIANTs to an array of a specified type.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-965"><typeparamref name="T" />에 해당하는 <paramref name="aSrcNativeVariant" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-965">An array of <typeparamref name="T" /> objects that corresponds to <paramref name="aSrcNativeVariant" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-966"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%60%601%28System.IntPtr%2CSystem.Int32%29> 배열을 반환 `T` 관리 되지 않는 VARIANT 형식의 C 스타일 배열에 대 한 원시 포인터에 해당 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-966"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%60%601%28System.IntPtr%2CSystem.Int32%29> returns an array of `T` that corresponds to a raw pointer to a C-style array of unmanaged VARIANT types.</span></span> <span data-ttu-id="bb2a9-967">interopmarshaler는 VARIANT 형식 관리 코드에 노출 하는 경우 동일한 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-967">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span> <span data-ttu-id="bb2a9-968">빈 배열의 경우 메서드가 반환 된 `cVars` 매개 변수가 0 이면 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-968">The method returns an empty array when the `cVars` parameter is 0.</span></span>  
  
 <span data-ttu-id="bb2a9-969">반환 된 배열이 가비지 수집 일반적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-969">The returned array is garbage-collected as usual.</span></span> <span data-ttu-id="bb2a9-970">관리 되지 않는 입력된 배열 또는 입력 배열의 개별 변형 해제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-970">The unmanaged input array or individual VARIANTs in the input array are not freed.</span></span> <span data-ttu-id="bb2a9-971">따라서 것이 적절 하 게 리소스를 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-971">Therefore, it is your responsibility to free them as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb2a9-972"><paramref name="cVars" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-972"><paramref name="cVars" /> is a negative number.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-973">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-973">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-974">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-974">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetStartComSlot">
      <MemberSignature Language="C#" Value="public static int GetStartComSlot (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetStartComSlot(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStartComSlot (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetStartComSlot(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetStartComSlot : Type -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetStartComSlot t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="bb2a9-975">인터페이스를 나타내는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-975">A type that represents an interface.</span></span></param>
        <summary><span data-ttu-id="bb2a9-976">사용자 정의 메서드가 포함된 가상 함수 테이블(v-table 또는 VTBL)의 첫 번째 슬롯을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-976">Gets the first slot in the virtual function table (v-table or VTBL) that contains user-defined methods.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-977">사용자 정의 메서드가 포함된 첫 번째 VTBL 슬롯입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-977">The first VTBL slot that contains user-defined methods.</span></span> <span data-ttu-id="bb2a9-978"><see href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</see>을 기준으로 하는 인터페이스의 경우 첫 번째 슬롯은 3이고, [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)를 기준으로 하는 인터페이스의 경우 7입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-978">The first slot is 3 if the interface is based on <see href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</see>, and 7 if the interface is based on [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-979">이 메서드는 인터페이스 또는 클래스에 대 한 0부터 시작 테이블 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-979">This method returns the zero-based v-table number for an interface or a class.</span></span> <span data-ttu-id="bb2a9-980">클래스를 사용 하면 반환 되는 슬롯 번호 클래스의 클래스 인터페이스를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-980">When used on a class, the slot number that is returned refers to the class interface for the class.</span></span> <span data-ttu-id="bb2a9-981">클래스 인터페이스를 디스패치 자동 인 경우이 메서드는 항상 디스패치 전용 인터페이스 v-table 관리 되는 클라이언트에 노출 하지 않음을 나타내는-1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-981">If the class interface is auto-dispatch, this method always returns -1 to indicate that the dispatch-only interface does not expose a v-table to managed clients.</span></span> <span data-ttu-id="bb2a9-982">사용할 수 있습니다 <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A> 및 <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> 와 함께에서 <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> 지정된 된 범위 내의 슬롯을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-982">You can use <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A> and <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> to pass slots within a specified range.</span></span> <span data-ttu-id="bb2a9-983">자세한 내용은 참조 하세요. [클래스 인터페이스 소개](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-983">For additional information, see [Introducing the Class Interface](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-984"><paramref name="t" />가 COM에 표시되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-984"><paramref name="t" /> is not visible from COM.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-985">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-985">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-986">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-986">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetThreadFromFiberCookie">
      <MemberSignature Language="C#" Value="public static System.Threading.Thread GetThreadFromFiberCookie (int cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Thread GetThreadFromFiberCookie(int32 cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetThreadFromFiberCookie (cookie As Integer) As Thread" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Thread ^ GetThreadFromFiberCookie(int cookie);" />
      <MemberSignature Language="F#" Value="static member GetThreadFromFiberCookie : int -&gt; System.Threading.Thread" Usage="System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The GetThreadFromFiberCookie method has been deprecated.  Use the hosting API to perform this operation.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Thread</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cookie"><span data-ttu-id="bb2a9-987">파이버 쿠키를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-987">An integer that represents a fiber cookie.</span></span></param>
        <summary><span data-ttu-id="bb2a9-988">파이버 쿠키를 해당 <see cref="T:System.Threading.Thread" /> 인스턴스로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-988">Converts a fiber cookie into the corresponding <see cref="T:System.Threading.Thread" /> instance.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-989"><paramref name="cookie" /> 매개 변수에 해당하는 스레드입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-989">A thread that corresponds to the <paramref name="cookie" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-990">파이버 쿠키는 해당 파이버 일정 결정 공용 언어 런타임 경고 시 호스트에서 사용 되는 불투명 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-990">Fiber cookies are opaque tokens that are used by the host when alerting the common language runtime to its fiber-scheduling decisions.</span></span> <span data-ttu-id="bb2a9-991">이러한 스택으로 구성 됩니다 하 고 컨텍스트를 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-991">They consist of a stack and register context.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-992"><paramref name="cookie" /> 매개 변수가 0인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-992">The <paramref name="cookie" /> parameter is 0.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-993">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-993">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-994">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-994">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Threading.Thread" />
      </Docs>
    </Member>
    <Member MemberName="GetTypedObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetTypedObjectForIUnknown (IntPtr pUnk, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetTypedObjectForIUnknown(native int pUnk, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypedObjectForIUnknown (pUnk As IntPtr, t As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetTypedObjectForIUnknown(IntPtr pUnk, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetTypedObjectForIUnknown : nativeint * Type -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown (pUnk, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="t" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pUnk"><span data-ttu-id="bb2a9-995">관리되지 않는 개체의 <see langword="IUnknown" /> 인터페이스에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-995">A pointer to the <see langword="IUnknown" /> interface of the unmanaged object.</span></span></param>
        <param name="t"><span data-ttu-id="bb2a9-996">요청된 관리되는 클래스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-996">The type of the requested managed class.</span></span></param>
        <summary><span data-ttu-id="bb2a9-997">COM 개체를 나타내는 지정된 형식의 관리되는 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-997">Returns a managed object of a specified type that represents a COM object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-998">요청된 관리되지 않는 COM 개체를 나타내는 <see cref="T:System.Type" /> 개체에 해당하는 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-998">An instance of the class corresponding to the <see cref="T:System.Type" /> object that represents the requested unmanaged COM object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-999">`t` 매개 변수를 가져온 COM 형식이 나 가져온 COM 형식의 하위 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-999">The `t` parameter must be either a COM-imported type or a subtype of a COM-imported type.</span></span> <span data-ttu-id="bb2a9-1000">또한 `t` 메타 데이터에서 가져온 형식 이어야 합니다 [Tlbimp.exe (형식 라이브러리 가져오기)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) 도구입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1000">In addition, `t` must be a type whose metadata was imported by the [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool.</span></span> <span data-ttu-id="bb2a9-1001">이 형식은 클래스와 COM 클래스의 이름이 포함 되어 있는 연결된 coclass 인터페이스 하지 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1001">This type must be a class and not an associated coclass interface, which carries the name of the COM class.</span></span> <span data-ttu-id="bb2a9-1002">예를 들어 Tlbimp.exe 가져옵니다 `Myclass` 이라는 클래스로 `MyclassClass` coclass 인터페이스로 호출 `Myclass`를 사용 해야 합니다 `MyclassClass` (하지 `Myclass`)이이 메서드를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1002">For example, if Tlbimp.exe imports `Myclass` as a class called `MyclassClass` and as a coclass interface called `Myclass`, you must use `MyclassClass` (not `Myclass`) with this method.</span></span> <span data-ttu-id="bb2a9-1003">가져온된 클래스 및 인터페이스가 coclass에 대 한 자세한 내용은 참조 하세요. [가져온 형식 변환](https://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1003">For additional information about imported classes and coclass interfaces, see [Imported Type Conversion](https://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3).</span></span>  
  
 <span data-ttu-id="bb2a9-1004">개체에 대 한 이미 얻은 경우는 `pUnk` 매개 변수를 `t` 무시 되 고 기존 개체가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1004">If an object has already been obtained for the `pUnk` parameter, `t` is ignored and the existing object is returned.</span></span> <span data-ttu-id="bb2a9-1005">`pUnk` 나타냅니다는 [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) 인터페이스 포인터 하지만 모든 COM 인터페이스에서 직접 또는 간접적으로 파생 되므로 `IUnknown`,이 메서드는 COM 인터페이스로 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1005">`pUnk` represents an [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) interface pointer; however, because all COM interfaces derive directly or indirectly from `IUnknown`, you can pass any COM interface to this method.</span></span> <span data-ttu-id="bb2a9-1006">반환 하는 개체 <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A> 되는 [런타임 호출 가능 래퍼](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) 처럼 공용 언어 런타임에서 관리는 다른 관리 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1006">The object returned by <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A> is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW), which the common language runtime manages as it does any other managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1007"><paramref name="t" /> 특성이 <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1007"><paramref name="t" /> is not attributed with <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.</span></span>  
  
<span data-ttu-id="bb2a9-1008">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1008">-or-</span></span> 
 <span data-ttu-id="bb2a9-1009"><paramref name="t" />가 [!INCLUDE[wrt](~/includes/wrt-md.md)] 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1009"><paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1010">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1010">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1011">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1011">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeForITypeInfo">
      <MemberSignature Language="C#" Value="public static Type GetTypeForITypeInfo (IntPtr piTypeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeForITypeInfo(native int piTypeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeForITypeInfo (piTypeInfo As IntPtr) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeForITypeInfo(IntPtr piTypeInfo);" />
      <MemberSignature Language="F#" Value="static member GetTypeForITypeInfo : nativeint -&gt; Type" Usage="System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo piTypeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="piTypeInfo" Type="System.IntPtr" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="piTypeInfo"><span data-ttu-id="bb2a9-1012">마샬링할 <see langword="ITypeInfo" /> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1012">The <see langword="ITypeInfo" /> interface to marshal.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1013">관리되지 않는 [ITypeInfo](https://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) 개체를 관리되는 <see cref="T:System.Type" /> 개체로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1013">Converts an unmanaged [ITypeInfo](https://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object into a managed <see cref="T:System.Type" /> object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1014">관리되지 않는 <see langword="ITypeInfo" /> 개체를 나타내는 관리되는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1014">A managed type that represents the unmanaged <see langword="ITypeInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1015"><xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> 반환 된 <xref:System.Type?displayProperty=nameWithType> 원래 형식을 기반으로 하는 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1015"><xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> returns a <xref:System.Type?displayProperty=nameWithType> instance that is based on the original type.</span></span> <span data-ttu-id="bb2a9-1016">적용할 수는 <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> 이 사용자 지정 마샬러를 사용 하 여 표준 interop 마샬링 동작을 바꿀 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1016">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> to replace standard interop marshaling behavior with this custom marshaler.</span></span> <span data-ttu-id="bb2a9-1017">합니다 [Tlbimp.exe (형식 라이브러리 가져오기)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) 도구는 사용자 지정 마샬러를 사용 하 여 변환할 `ITypeInfo` 매개 변수를 <xref:System.Type?displayProperty=nameWithType> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1017">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool uses the custom marshaler to translate `ITypeInfo` parameters to <xref:System.Type?displayProperty=nameWithType> parameters.</span></span> <span data-ttu-id="bb2a9-1018">그러나 가져온 경우는 `ITypeInfo` Tlbimp.exe 이외의 일부 인터페이스 의미를 사용할 수 있습니다 <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> 을 수동으로 동일한 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1018">However, if you obtain an `ITypeInfo` interface by some means other than Tlbimp.exe, you can use <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> to manually perform the same translation.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1019">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1019">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1020">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1020">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.MarshalAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromCLSID">
      <MemberSignature Language="C#" Value="public static Type GetTypeFromCLSID (Guid clsid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeFromCLSID(valuetype System.Guid clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeFromCLSID(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeFromCLSID (clsid As Guid) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeFromCLSID(Guid clsid);" />
      <MemberSignature Language="F#" Value="static member GetTypeFromCLSID : Guid -&gt; Type" Usage="System.Runtime.InteropServices.Marshal.GetTypeFromCLSID clsid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsid" Type="System.Guid" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="clsid"><span data-ttu-id="bb2a9-1021">반환할 형식의 CLSID입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1021">The CLSID of the type to return.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1022">지정된 CLSID(클래스 식별자)와 연관된 형식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1022">Returns the type associated with the specified class identifier (CLSID).</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1023"><see langword="System.__ComObject" /> CLSID가 유효한지 여부에 관계 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1023"><see langword="System.__ComObject" /> regardless of whether the CLSID is valid.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeInfoName">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1024">[ITypeInfo](https://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) 개체가 나타내는 형식의 이름을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1024">Retrieves the name of the type represented by an [ITypeInfo](https://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeInfoName">
      <MemberSignature Language="C#" Value="public static string GetTypeInfoName (System.Runtime.InteropServices.ComTypes.ITypeInfo typeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeInfoName(class System.Runtime.InteropServices.ComTypes.ITypeInfo typeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeInfoName (typeInfo As ITypeInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeInfoName(System::Runtime::InteropServices::ComTypes::ITypeInfo ^ typeInfo);" />
      <MemberSignature Language="F#" Value="static member GetTypeInfoName : System.Runtime.InteropServices.ComTypes.ITypeInfo -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeInfoName typeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Runtime.InteropServices.ComTypes.ITypeInfo" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="typeInfo"><span data-ttu-id="bb2a9-1025"><see langword="ITypeInfo" /> 포인터를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1025">An object that represents an <see langword="ITypeInfo" /> pointer.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1026">[ITypeInfo](https://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) 개체가 나타내는 형식의 이름을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1026">Retrieves the name of the type represented by an [ITypeInfo](https://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1027"><paramref name="typeInfo" /> 매개 변수가 가리키는 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1027">The name of the type that the <paramref name="typeInfo" /> parameter points to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1028">나타내는 형식의 이름을 검색할 수도 있습니다는 `ITypeInfo` 를 호출 하 여는 <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> 메서드 및-1의 첫 번째 매개 변수를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1028">You can also retrieve the name of the type represented by an `ITypeInfo` by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1029"><paramref name="typeInfo" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1029">The <paramref name="typeInfo" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1030">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1030">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1031">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1031">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoName">
      <MemberSignature Language="C#" Value="public static string GetTypeInfoName (System.Runtime.InteropServices.UCOMITypeInfo pTI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeInfoName(class System.Runtime.InteropServices.UCOMITypeInfo pTI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.UCOMITypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeInfoName (pTI As UCOMITypeInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeInfoName(System::Runtime::InteropServices::UCOMITypeInfo ^ pTI);" />
      <MemberSignature Language="F#" Value="static member GetTypeInfoName : System.Runtime.InteropServices.UCOMITypeInfo -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeInfoName pTI" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.Marshal.GetTypeInfoName(ITypeInfo pTLB) instead. http://go.microsoft.com/fwlink/?linkid=14202&amp;ID=0000011.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTI" Type="System.Runtime.InteropServices.UCOMITypeInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pTI"><span data-ttu-id="bb2a9-1032"><see langword="ITypeInfo" /> 포인터를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1032">An object that represents an <see langword="ITypeInfo" /> pointer.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1033">[ITypeInfo](https://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) 개체가 나타내는 형식의 이름을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1033">Retrieves the name of the type represented by an [ITypeInfo](https://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1034"><paramref name="pTI" /> 매개 변수가 가리키는 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1034">The name of the type that the <paramref name="pTI" /> parameter points to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1035">나타내는 형식의 이름을 검색할 수도 있습니다는 `ITypeInfo` 를 호출 하 여 개체를 <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> 메서드 및-1의 첫 번째 매개 변수를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1035">You can also retrieve the name of the type represented by an `ITypeInfo` object by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1036">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1036">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1037">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1037">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibGuid">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1038">형식 라이브러리의 LIBID(라이브러리 식별자)를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1038">Retrieves the library identifier (LIBID) of a type library.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibGuid">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuid (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuid(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuid (typelib As ITypeLib) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuid(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibGuid : System.Runtime.InteropServices.ComTypes.ITypeLib -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibGuid typelib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="typelib"><span data-ttu-id="bb2a9-1039">LIBID를 검색할 형식 라이브러리입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1039">The type library whose LIBID is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1040">형식 라이브러리의 LIBID(라이브러리 식별자)를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1040">Retrieves the library identifier (LIBID) of a type library.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1041">지정된 형식 라이브러리의 LIBID입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1041">The LIBID of the specified type library.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1042"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> 기존의 형식 라이브러리에서 직접 LIBID를 추출합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1042"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extracts the LIBID directly from an existing type library.</span></span> <span data-ttu-id="bb2a9-1043">이 작업의 다른는 <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> LIBID를 계산 하는 메서드를 현재 어셈블리를 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1043">This action differs from that of the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> method, which calculates what the LIBID should be based on the current assembly.</span></span>  
  
 <span data-ttu-id="bb2a9-1044">라이브러리 식별자에 대 한 자세한 내용은 참조 하세요. [내보낸 어셈블리 변환](https://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1044">For more information about library identifiers, see [Exported Assembly Conversion](https://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1045">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1045">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1046">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1046">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
        <altmember cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibGuid">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuid (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuid(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuid (pTLB As UCOMITypeLib) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuid(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibGuid : System.Runtime.InteropServices.UCOMITypeLib -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibGuid pTLB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.Marshal.GetTypeLibGuid(ITypeLib pTLB) instead. http://go.microsoft.com/fwlink/?linkid=14202&amp;ID=0000011.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pTLB"><span data-ttu-id="bb2a9-1047">LIBID를 검색할 형식 라이브러리입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1047">The type library whose LIBID is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1048">형식 라이브러리의 LIBID(라이브러리 식별자)를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1048">Retrieves the library identifier (LIBID) of a type library.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1049"><paramref name="pTLB" /> 매개 변수가 가리키는 형식 라이브러리의 LIBID입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1049">The LIBID of the type library that the <paramref name="pTLB" /> parameter points to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1050"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> 기존의 형식 라이브러리에서 직접 LIBID를 추출합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1050"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extracts the LIBID directly from an existing type library.</span></span> <span data-ttu-id="bb2a9-1051">이 작업의 다른는 <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> LIBID를 계산 하는 메서드를 현재 어셈블리를 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1051">This action differs from that of the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> method, which calculates what the LIBID should be based on the current assembly.</span></span>  
  
 <span data-ttu-id="bb2a9-1052">라이브러리 식별자에 대 한 자세한 내용은 참조 하세요. [내보낸 어셈블리 변환](https://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1052">For more information about library identifiers, see [Exported Assembly Conversion](https://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1053">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1053">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1054">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1054">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMITypeLib" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibGuidForAssembly">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuidForAssembly (System.Reflection.Assembly asm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuidForAssembly(class System.Reflection.Assembly asm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuidForAssembly (asm As Assembly) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuidForAssembly(System::Reflection::Assembly ^ asm);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibGuidForAssembly : System.Reflection.Assembly -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly asm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asm" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asm"><span data-ttu-id="bb2a9-1055">형식 라이브러리를 내보낸 소스 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1055">The assembly from which the type library was exported.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1056">지정된 어셈블리에서 내보낼 때 형식 라이브러리에 할당되는 LIBID(라이브러리 식별자)를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1056">Retrieves the library identifier (LIBID) that is assigned to a type library when it was exported from the specified assembly.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1057">지정된 어셈블리에서 형식 라이브러리를 내보낼 때 형식 라이브러리에 할당되는 LIBID입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1057">The LIBID that is assigned to a type library when it is exported from the specified assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1058">어셈블리를 형식 라이브러리로 내보내면 형식 라이브러리는 LIBID 할당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1058">When assemblies are exported to type libraries, the type library is assigned a LIBID.</span></span> <span data-ttu-id="bb2a9-1059">LIBID를 적용 하 여 명시적으로 설정할 수 있습니다는 <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType> 어셈블리에서 수준 이거나 자동 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1059">You can set the LIBID explicitly by applying the <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType> at the assembly level, or it can be generated automatically.</span></span> <span data-ttu-id="bb2a9-1060">합니다 [Tlbimp.exe (형식 라이브러리 가져오기)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) 도구는 어셈블리의 id를 기반으로 하는 LIBID 값을 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1060">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool calculates a LIBID value based on the identity of the assembly.</span></span> <span data-ttu-id="bb2a9-1061"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> 연관 된 LIBID를 반환 합니다 <xref:System.Runtime.InteropServices.GuidAttribute>특성이 적용 된 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1061"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> returns the LIBID that is associated with the <xref:System.Runtime.InteropServices.GuidAttribute>, if the attribute is applied.</span></span> <span data-ttu-id="bb2a9-1062">그렇지 않으면 <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A> 계산 된 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1062">Otherwise, <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A> returns the calculated value.</span></span> <span data-ttu-id="bb2a9-1063">사용할 수 있습니다는 <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> 기존 형식 라이브러리에서 실제 LIBID를 추출 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1063">Alternatively, you can use the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> method to extract the actual LIBID from an existing type library.</span></span>  
  
 <span data-ttu-id="bb2a9-1064">참조 된 [내보낸 어셈블리 변환](https://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86) 항목에서는 라이브러리 식별자에 대 한 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1064">See the [Exported Assembly Conversion](https://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86) topic for more information about library identifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1065"><paramref name="asm" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1065"><paramref name="asm" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1066">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1066">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1067">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1067">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.GuidAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibLcid">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1068">형식 라이브러리의 LCID를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1068">Retrieves the LCID of a type library.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibLcid">
      <MemberSignature Language="C#" Value="public static int GetTypeLibLcid (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTypeLibLcid(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibLcid (typelib As ITypeLib) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetTypeLibLcid(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibLcid : System.Runtime.InteropServices.ComTypes.ITypeLib -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibLcid typelib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="typelib"><span data-ttu-id="bb2a9-1069">LCID를 검색할 형식 라이브러리입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1069">The type library whose LCID is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1070">형식 라이브러리의 LCID를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1070">Retrieves the LCID of a type library.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1071"><paramref name="typelib" /> 매개 변수가 가리키는 형식 라이브러리의 LCID입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1071">The LCID of the type library that the <paramref name="typelib" /> parameter points to.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1072">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1072">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1073">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1073">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibLcid">
      <MemberSignature Language="C#" Value="public static int GetTypeLibLcid (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTypeLibLcid(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibLcid (pTLB As UCOMITypeLib) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetTypeLibLcid(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibLcid : System.Runtime.InteropServices.UCOMITypeLib -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibLcid pTLB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.Marshal.GetTypeLibLcid(ITypeLib pTLB) instead. http://go.microsoft.com/fwlink/?linkid=14202&amp;ID=0000011.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pTLB"><span data-ttu-id="bb2a9-1074">LCID를 검색할 형식 라이브러리입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1074">The type library whose LCID is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1075">형식 라이브러리의 LCID를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1075">Retrieves the LCID of a type library.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1076"><paramref name="pTLB" /> 매개 변수가 가리키는 형식 라이브러리의 LCID입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1076">The LCID of the type library that the <paramref name="pTLB" /> parameter points to.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1077">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1077">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1078">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1078">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1079">형식 라이브러리의 이름을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1079">Retrieves the name of a type library.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibName">
      <MemberSignature Language="C#" Value="public static string GetTypeLibName (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeLibName(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibName (typelib As ITypeLib) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeLibName(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibName : System.Runtime.InteropServices.ComTypes.ITypeLib -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibName typelib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="typelib"><span data-ttu-id="bb2a9-1080">이름을 검색할 형식 라이브러리입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1080">The type library whose name is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1081">형식 라이브러리의 이름을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1081">Retrieves the name of a type library.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1082"><paramref name="typelib" /> 매개 변수가 가리키는 형식 라이브러리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1082">The name of the type library that the <paramref name="typelib" /> parameter points to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1083">이 메서드에서 반환 된 이름은 ADODB Microsoft ADO 형식 라이브러리와 같은 라이브러리 문으로 사용 하는 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1083">The name returned by this method is the identifier used with the library statement, such as ADODB for the Microsoft ADO type library.</span></span> <span data-ttu-id="bb2a9-1084">이름을 파일 이름이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1084">The name is not a file name.</span></span>  
  
 <span data-ttu-id="bb2a9-1085">형식 라이브러리 이름을 호출 하 여 검색할 수도 있습니다는 <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> 메서드 및-1의 첫 번째 매개 변수를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1085">You can also retrieve the type library name by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1086"><paramref name="typelib" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1086">The <paramref name="typelib" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1087">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1087">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1088">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1088">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibName">
      <MemberSignature Language="C#" Value="public static string GetTypeLibName (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeLibName(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibName (pTLB As UCOMITypeLib) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeLibName(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibName : System.Runtime.InteropServices.UCOMITypeLib -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibName pTLB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.Marshal.GetTypeLibName(ITypeLib pTLB) instead. http://go.microsoft.com/fwlink/?linkid=14202&amp;ID=0000011.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pTLB"><span data-ttu-id="bb2a9-1089">이름을 검색할 형식 라이브러리입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1089">The type library whose name is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1090">형식 라이브러리의 이름을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1090">Retrieves the name of a type library.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1091"><paramref name="pTLB" /> 매개 변수가 가리키는 형식 라이브러리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1091">The name of the type library that the <paramref name="pTLB" /> parameter points to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1092">이 메서드에서 반환 된 이름은 ADODB Microsoft ADO 형식 라이브러리와 같은 라이브러리 문으로 사용 하는 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1092">The name returned by this method is the identifier used with the library statement, such as ADODB for the Microsoft ADO type library.</span></span> <span data-ttu-id="bb2a9-1093">이름을 파일 이름이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1093">The name is not a file name.</span></span>  
  
 <span data-ttu-id="bb2a9-1094">형식 라이브러리 이름을 호출 하 여 검색할 수도 있습니다는 <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> 메서드 및-1의 첫 번째 매개 변수를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1094">You can also retrieve the type library name by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1095">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1095">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1096">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1096">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibVersionForAssembly">
      <MemberSignature Language="C#" Value="public static void GetTypeLibVersionForAssembly (System.Reflection.Assembly inputAssembly, out int majorVersion, out int minorVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTypeLibVersionForAssembly(class System.Reflection.Assembly inputAssembly, [out] int32&amp; majorVersion, [out] int32&amp; minorVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetTypeLibVersionForAssembly (inputAssembly As Assembly, ByRef majorVersion As Integer, ByRef minorVersion As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetTypeLibVersionForAssembly(System::Reflection::Assembly ^ inputAssembly, [Runtime::InteropServices::Out] int % majorVersion, [Runtime::InteropServices::Out] int % minorVersion);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibVersionForAssembly : System.Reflection.Assembly *  *  -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly (inputAssembly, majorVersion, minorVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputAssembly" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="majorVersion" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="minorVersion" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="inputAssembly"><span data-ttu-id="bb2a9-1097">관리되는 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1097">A managed assembly.</span></span></param>
        <param name="majorVersion"><span data-ttu-id="bb2a9-1098">주 버전 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1098">The major version number.</span></span></param>
        <param name="minorVersion"><span data-ttu-id="bb2a9-1099">부 버전 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1099">The minor version number.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1100">지정된 어셈블리에서 내보낼 형식 라이브러리의 버전 번호를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1100">Retrieves the version number of a type library that will be exported from the specified assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1101">사용 하 여 어셈블리를 내보내기 전에 <xref:System.Runtime.InteropServices.TypeLibExporterFlags> 사용 하 여는 `CallerResolvedReferences` 값 어셈블리에서 형식 라이브러리 버전을 검색 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1101">Before exporting an assembly by using <xref:System.Runtime.InteropServices.TypeLibExporterFlags> with the `CallerResolvedReferences` value, you can use this method to retrieve the type library version from the assembly.</span></span>  
  
 <span data-ttu-id="bb2a9-1102">적용 되지 않은 경우는 <xref:System.Runtime.InteropServices.TypeLibVersionAttribute> 생성된 된 형식 라이브러리의 버전 번호를 명시적으로 제어를 내보내는 어셈블리에 특성, 형식 라이브러리에는 어셈블리와 동일한 버전 번호를 갖습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1102">If you do not apply the <xref:System.Runtime.InteropServices.TypeLibVersionAttribute> attribute to an exported assembly to explicitly control the version number of the generated type library, the type library will have the same version number as the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1103"><paramref name="inputAssembly" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1103"><paramref name="inputAssembly" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1104">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1104">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1105">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1105">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.TypeLibExporterFlags" />
        <altmember cref="T:System.Runtime.InteropServices.TypeLibVersionAttribute" />
        <altmember cref="T:System.Runtime.InteropServices.ITypeLibConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetUniqueObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetUniqueObjectForIUnknown (IntPtr unknown);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetUniqueObjectForIUnknown(native int unknown) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUniqueObjectForIUnknown (unknown As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetUniqueObjectForIUnknown(IntPtr unknown);" />
      <MemberSignature Language="F#" Value="static member GetUniqueObjectForIUnknown : nativeint -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown unknown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unknown" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="unknown"><span data-ttu-id="bb2a9-1106"><see langword="IUnknown" /> 인터페이스에 대한 관리되는 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1106">A managed pointer to an <see langword="IUnknown" /> interface.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1107">지정된 <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> 인터페이스에 대해 고유한 [RCW(런타임 호출 가능 래퍼)](~/docs/framework/interop/runtime-callable-wrapper.md) 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1107">Creates a unique [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) object for a given <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> interface.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1108">지정된 <see langword="IUnknown" /> 인터페이스에 대한 고유한 RCW입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1108">A unique RCW for the specified <see langword="IUnknown" /> interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1109">합니다 <xref:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown%2A> 메서드를 사용 하면 고유한 RCW를 수신 하는 일치 하지 않으므로 `IUnknown` 기존 개체에 대 한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1109">The <xref:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown%2A> method ensures that you receive a unique RCW, because it does not match an `IUnknown` pointer to an existing object.</span></span> <span data-ttu-id="bb2a9-1110">호출 하는 다른 코드에 의해 영향을 받지 않는 고유한 RCW를 만들어야 할 경우이 메서드를 사용 합니다 <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1110">Use this method when you have to create a unique RCW that is not impacted by other code that calls the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1111">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1111">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1112">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1112">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedThunkForManagedMethodPtr">
      <MemberSignature Language="C#" Value="public static IntPtr GetUnmanagedThunkForManagedMethodPtr (IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetUnmanagedThunkForManagedMethodPtr(native int pfnMethodToWrap, native int pbSignature, int32 cbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnmanagedThunkForManagedMethodPtr (pfnMethodToWrap As IntPtr, pbSignature As IntPtr, cbSignature As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetUnmanagedThunkForManagedMethodPtr(IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="F#" Value="static member GetUnmanagedThunkForManagedMethodPtr : nativeint * nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr (pfnMethodToWrap, pbSignature, cbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The GetUnmanagedThunkForManagedMethodPtr method has been deprecated and will be removed in a future release.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pfnMethodToWrap" Type="System.IntPtr" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pbSignature" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="cbSignature" Type="System.Int32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pfnMethodToWrap"><span data-ttu-id="bb2a9-1113">마샬링할 메서드에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1113">A pointer to the method to marshal.</span></span></param>
        <param name="pbSignature"><span data-ttu-id="bb2a9-1114">메서드 시그니처에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1114">A pointer to the method signature.</span></span></param>
        <param name="cbSignature"><span data-ttu-id="bb2a9-1115"><paramref name="pbSignature" />의 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1115">The number of bytes in <paramref name="pbSignature" />.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1116">비관리 코드에서 관리 코드로 호출을 마샬링하는 런타임 생성 함수에 대한 포인터를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1116">Gets a pointer to a runtime-generated function that marshals a call from unmanaged to managed code.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1117"><paramref name="pfnMethodToWrap" />에서의 호출을 관리 코드로 마샬링할 함수에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1117">A pointer to a function that will marshal a call from <paramref name="pfnMethodToWrap" /> to managed code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1118"><xref:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr%2A> 컴파일러 지원만 노출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1118"><xref:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr%2A> is exposed for compiler support only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1119">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1119">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1120">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1120">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsComObject">
      <MemberSignature Language="C#" Value="public static bool IsComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsComObject (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsComObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member IsComObject : obj -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.IsComObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="bb2a9-1121">검사할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1121">The object to check.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1122">지정된 개체가 COM 개체를 나타낼지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1122">Indicates whether a specified object represents a COM object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1123"><paramref name="o" /> 매개 변수가 COM 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1123"><see langword="true" /> if the <paramref name="o" /> parameter is a COM type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1124"><xref:System.Runtime.InteropServices.Marshal.IsComObject%2A> 반환 `true` 인스턴스의 클래스 형식을 특성으로 지정 하는 경우 <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> 특성이 지정 된 클래스에서 직접 또는 간접적으로 파생 되는 경우 또는 <xref:System.Runtime.InteropServices.ComImportAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1124"><xref:System.Runtime.InteropServices.Marshal.IsComObject%2A> returns `true` if the class type of the instance is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> or if it derives directly or indirectly from a class attributed with <xref:System.Runtime.InteropServices.ComImportAttribute>.</span></span> <span data-ttu-id="bb2a9-1125">합니다 [Tlbimp.exe (형식 라이브러리 가져오기)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) 도구 형식 라이브러리를 가져올 때이 특성을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1125">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span>  
  
 <span data-ttu-id="bb2a9-1126">다른 두 메서드는 또한 지정 된 개체를 반환 하는 요구 사항이 COM 개체를 나타내는지 여부를 결정 `true` 이 메서드의 요구이 사항에서 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1126">Two other methods also determine whether a specified object represents a COM object, but the requirements for returning `true` differ from this method's requirements.</span></span> <span data-ttu-id="bb2a9-1127"><xref:System.Type.IsImport%2A?displayProperty=nameWithType> 반환 `true` 클래스 (또는 인터페이스)로 특성이 지정 하는 경우 <xref:System.Runtime.InteropServices.ComImportAttribute> 반환 하지 않는 직접; `true` 파생 형식에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1127"><xref:System.Type.IsImport%2A?displayProperty=nameWithType> returns `true` if the class (or interface) is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute> directly; it does not return `true` for derived types.</span></span> <span data-ttu-id="bb2a9-1128"><xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A?displayProperty=nameWithType> 반환 `true` 형식을 사용 하 여 특성을 사용 하는 경우 <xref:System.Runtime.InteropServices.ComImportAttribute> 동일한 GUID 사용 하는 형식에서 파생 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1128"><xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A?displayProperty=nameWithType> returns `true` if the type is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute> or derives from a type with the same GUID.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1129"><paramref name="o" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1129"><paramref name="o" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="P:System.Type.IsImport" />
        <altmember cref="M:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="IsTypeVisibleFromCom">
      <MemberSignature Language="C#" Value="public static bool IsTypeVisibleFromCom (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTypeVisibleFromCom(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTypeVisibleFromCom (t As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTypeVisibleFromCom(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member IsTypeVisibleFromCom : Type -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="bb2a9-1130">COM 표시 여부를 확인할 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1130">The type to check for COM visibility.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1131">형식이 COM 클라이언트에 표시되는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1131">Indicates whether a type is visible to COM clients.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1132">형식이 COM에 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1132"><see langword="true" /> if the type is visible to COM; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1133"><xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A> 한 번에 COM 표시 여부를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1133"><xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A> enables you to check for COM visibility in one step.</span></span> <span data-ttu-id="bb2a9-1134">표시 되지 않는 형식은 COM에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1134">Types that are not visible cannot be used from COM.</span></span> <span data-ttu-id="bb2a9-1135">형식이 있으면 표시 됨 `public` 사용 하 여 숨겨지지는 <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1135">A type is visible if it is `public` and not hidden with the <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="NumParamBytes">
      <MemberSignature Language="C#" Value="public static int NumParamBytes (System.Reflection.MethodInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 NumParamBytes(class System.Reflection.MethodInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NumParamBytes (m As MethodInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int NumParamBytes(System::Reflection::MethodInfo ^ m);" />
      <MemberSignature Language="F#" Value="static member NumParamBytes : System.Reflection.MethodInfo -&gt; int" Usage="System.Runtime.InteropServices.Marshal.NumParamBytes m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="bb2a9-1136">검사할 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1136">The method to be checked.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1137">지정된 메서드에 대한 매개 변수를 포함하는 데 필요한 관리되지 않는 메모리의 바이트 수를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1137">Calculates the number of bytes in unmanaged memory that are required to hold the parameters for the specified method.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1138">관리되지 않는 메모리에서 메서드 매개 변수를 나타내는 데 필요한 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1138">The number of bytes required to represent the method parameters in unmanaged memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1139"><xref:System.Runtime.InteropServices.Marshal.NumParamBytes%2A> 스택 크기 (바이트)의 관리 되지 않는 메모리에서 메서드 시그니처 매개 변수를 나타내는 데 필요한 메서드를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1139">The <xref:System.Runtime.InteropServices.Marshal.NumParamBytes%2A> method returns the stack size (in bytes) needed to represent the parameters of a method signature in unmanaged memory.</span></span>  
  
 <span data-ttu-id="bb2a9-1140">이 메서드의 반환 값은 플랫폼에 관계 없이 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1140">Note that the return value of this method is platform-dependent.</span></span> <span data-ttu-id="bb2a9-1141">예를 들어, 단일 정수 매개 변수를 사용 하 여 서명을 32 비트 플랫폼과 64 비트 플랫폼에서 8 값에서 값 4 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1141">For example, a signature with a single integer parameter returns a value of 4 on 32-bit platforms and a value of 8 on 64-bit platforms.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1142"><paramref name="m" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1142">The <paramref name="m" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1143"><paramref name="m" /> 매개 변수가 <see cref="T:System.Reflection.MethodInfo" /> 개체가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1143">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1144">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1144">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1145">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1145">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="OffsetOf">
      <MemberSignature Language="C#" Value="public static IntPtr OffsetOf (Type t, string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int OffsetOf(class System.Type t, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetOf (t As Type, fieldName As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr OffsetOf(Type ^ t, System::String ^ fieldName);" />
      <MemberSignature Language="F#" Value="static member OffsetOf : Type * string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.OffsetOf (t, fieldName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("OffsetOf(Type, string) may be unavailable in future releases. Instead, use OffsetOf&lt;T&gt;(string). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296511")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="bb2a9-1146">관리되는 클래스를 지정하는 값 형식이나 서식이 지정된 참조 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1146">A value type or formatted reference type that specifies the managed class.</span></span> <span data-ttu-id="bb2a9-1147">클래스에 <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" />를 적용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1147">You must apply the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> to the class.</span></span></param>
        <param name="fieldName"><span data-ttu-id="bb2a9-1148"><paramref name="t" /> 매개 변수에 있는 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1148">The field within the <paramref name="t" /> parameter.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1149">관리되는 클래스의 관리되지 않는 형식의 필드 오프셋을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1149">Returns the field offset of the unmanaged form of the managed class.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1150">플랫폼 호출로 선언된 지정된 클래스 내의 <paramref name="fieldName" /> 매개 변수에 대한 오프셋(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1150">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1151"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> 관리 되는 구조체 레이아웃의 오프셋을 반드시 일치 하지 않습니다는 관리 되지 않는 구조체 레이아웃 측면에서 오프셋을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1151"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> provides the offset in terms of the unmanaged structure layout, which does not necessarily correspond to the offset of the managed structure layout.</span></span> <span data-ttu-id="bb2a9-1152">마샬링 구조 레이아웃을 변환 하 고 오프셋을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1152">Marshaling the structure can transform the layout and alter the offset.</span></span> <span data-ttu-id="bb2a9-1153">`t` 값 형식 또는 sequential 또는 explicit 레이아웃) (포함 형식이 지정 된 참조 형식 매개 변수 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1153">The `t` parameter can be a value type or a formatted reference type (with either a sequential or explicit layout).</span></span> <span data-ttu-id="bb2a9-1154">사용 하 여 전체 레이아웃의 크기를 가져올 수 있습니다는 <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1154">You can obtain the size of the entire layout by using the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bb2a9-1155">자세한 내용은 참조 하세요. [값 형식에 대 한 기본 마샬링](https://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1155">For additional information, see [Default Marshaling for Value Types](https://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb2a9-1156">.NET Framework 버전 2.0 부터는 <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> private 필드를 노출 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1156">Beginning with the .NET Framework version 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> may expose private fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1157">클래스를 구조체로 내보낼 수 없거나 필드가 공용이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1157">The class cannot be exported as a structure or the field is nonpublic.</span></span> <span data-ttu-id="bb2a9-1158">.NET Framework 버전 2.0 이상에서는 이 필드가 private 필드일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1158">Beginning with the .NET Framework version 2.0, the field may be private.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1159"><paramref name="t" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1159">The <paramref name="t" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OffsetOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr OffsetOf&lt;T&gt; (string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int OffsetOf&lt;T&gt;(string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetOf(Of T) (fieldName As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr OffsetOf(System::String ^ fieldName);" />
      <MemberSignature Language="F#" Value="static member OffsetOf : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.OffsetOf fieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fieldName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bb2a9-1160">관리되는 값 또는 formatted 참조 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1160">A managed value type or formatted reference type.</span></span> <span data-ttu-id="bb2a9-1161">클래스에 <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> 특성을 적용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1161">You must apply the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> attribute to the class.</span></span></typeparam>
        <param name="fieldName"><span data-ttu-id="bb2a9-1162"><paramref name="T" /> 형식의 필드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1162">The name of the field in the <paramref name="T" /> type.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1163">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1163">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="bb2a9-1164">지정된 관리되는 클래스의 관리되지 않는 형식의 필드 오프셋을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1164">Returns the field offset of the unmanaged form of a specified managed class.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1165">플랫폼 호출로 선언된 지정된 클래스 내의 <paramref name="fieldName" /> 매개 변수에 대한 오프셋(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1165">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1166"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%60%601%28System.String%29> 관리 되는 구조체 레이아웃의 오프셋을 반드시 일치 하지 않습니다는 관리 되지 않는 구조체 레이아웃 측면에서 오프셋을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1166"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%60%601%28System.String%29> provides the offset in terms of the unmanaged structure layout, which does not necessarily correspond to the offset of the managed structure layout.</span></span> <span data-ttu-id="bb2a9-1167">마샬링 구조 레이아웃을 변환 하 고 오프셋을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1167">Marshaling the structure can transform the layout and alter the offset.</span></span> <span data-ttu-id="bb2a9-1168">`T` 제네릭 형식 매개 변수 값 형식 또는 sequential 또는 explicit 레이아웃) (포함 형식이 지정 된 참조 형식이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1168">The `T` generic type parameter can be a value type or a formatted reference type (with either a sequential or explicit layout).</span></span> <span data-ttu-id="bb2a9-1169">사용 하 여 전체 레이아웃의 크기를 가져올 수 있습니다는 <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1169">You can obtain the size of the entire layout by using the <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> method.</span></span> <span data-ttu-id="bb2a9-1170">자세한 내용은 참조 하세요. [값 형식에 대 한 기본 마샬링](https://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1170">For additional information, see [Default Marshaling for Value Types](https://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb2a9-1171">.NET Framework 버전 2.0 부터는 <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> private 필드를 노출 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1171">Beginning with the .NET Framework version 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> may expose private fields.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)" />
      </Docs>
    </Member>
    <Member MemberName="Prelink">
      <MemberSignature Language="C#" Value="public static void Prelink (System.Reflection.MethodInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Prelink(class System.Reflection.MethodInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Prelink (m As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Prelink(System::Reflection::MethodInfo ^ m);" />
      <MemberSignature Language="F#" Value="static member Prelink : System.Reflection.MethodInfo -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Prelink m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="bb2a9-1172">검사할 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1172">The method to be checked.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1173">메서드를 호출하지 않고 메서드 설정 작업을 한 번에 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1173">Executes one-time method setup tasks without calling the method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1174">설치 작업 빠른 초기화를 제공 하 고 대상 메서드가 호출 될 때 자동으로 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1174">Setup tasks provide early initialization and are performed automatically when the target method is invoked.</span></span> <span data-ttu-id="bb2a9-1175">첫 번째 작업은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1175">First-time tasks include the following:</span></span>  
  
-   <span data-ttu-id="bb2a9-1176">확인에 플랫폼 호출 메타 데이터는 형식이 잘못 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1176">Verifying that the platform invoke metadata is correctly formatted.</span></span>  
  
-   <span data-ttu-id="bb2a9-1177">함수를 호출 하는 모든 관리 되는 형식은 플랫폼의 올바른 매개 변수를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1177">Verifying that all the managed types are valid parameters of platform invoke functions.</span></span>  
  
-   <span data-ttu-id="bb2a9-1178">찾기 및 프로세스를 관리 되지 않는 DLL을 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1178">Locating and loading the unmanaged DLL into the process.</span></span>  
  
-   <span data-ttu-id="bb2a9-1179">프로세스의 진입점을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1179">Locating the entry point in the process.</span></span>  
  
 <span data-ttu-id="bb2a9-1180">호출 <xref:System.Runtime.InteropServices.Marshal.Prelink%2A> 플랫폼 외부에서 메서드를 호출 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1180">Calling <xref:System.Runtime.InteropServices.Marshal.Prelink%2A> on a method outside of platform invoke has no effect.</span></span> <span data-ttu-id="bb2a9-1181">설치 프로그램을 실행 하려면 모든 플랫폼에서 작업 형식 사용 하 여에서에서 메서드를 호출할 <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1181">To execute setup tasks on all platform invoke methods in a type, use <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1182"><paramref name="m" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1182">The <paramref name="m" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1183"><paramref name="m" /> 매개 변수가 <see cref="T:System.Reflection.MethodInfo" /> 개체가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1183">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1184">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1184">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1185">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1185">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)" />
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="PrelinkAll">
      <MemberSignature Language="C#" Value="public static void PrelinkAll (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrelinkAll(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PrelinkAll (c As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrelinkAll(Type ^ c);" />
      <MemberSignature Language="F#" Value="static member PrelinkAll : Type -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.PrelinkAll c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="bb2a9-1186">메서드를 검사할 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1186">The class whose methods are to be checked.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1187">클래스의 모든 메서드에 대해 링크 전 검사를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1187">Performs a pre-link check for all methods on a class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1188">합니다 <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> 메서드 호출 <xref:System.Runtime.InteropServices.Marshal.Prelink%2A?displayProperty=nameWithType> 모든 메서드에서 지정된 된 형식에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1188">The <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> method invokes <xref:System.Runtime.InteropServices.Marshal.Prelink%2A?displayProperty=nameWithType> on every method for a given type.</span></span> <span data-ttu-id="bb2a9-1189"><xref:System.Runtime.InteropServices.Marshal.Prelink%2A> 각 메서드를 호출 하지 않고 한 번 설치 작업을 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1189"><xref:System.Runtime.InteropServices.Marshal.Prelink%2A> executes one-time method setup tasks without calling each method.</span></span> <span data-ttu-id="bb2a9-1190">사용할 수 있습니다 <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> 플랫폼에 대해서만 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1190">You can use <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> only for platform invoke calls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1191"><paramref name="c" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1191">The <paramref name="c" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1192">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1192">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1193">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1193">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringAnsi">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1194">관리되는 <see cref="T:System.String" />을 할당하고 관리되지 않는 ANSI 문자열의 전체 또는 일부를 해당 개체로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1194">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged ANSI string into it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringAnsi">
      <MemberSignature Language="C#" Value="public static string PtrToStringAnsi (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAnsi(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAnsi (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAnsi(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAnsi : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAnsi ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1195">관리되지 않는 문자열의 첫 문자 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1195">The address of the first character of the unmanaged string.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1196">관리되지 않는 ANSI 문자열에서 첫 번째 null 문자가 나올 때까지의 모든 문자를 관리되는 <see cref="T:System.String" />으로 복사하고 각 ANSI 문자를 유니코드로 확장합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1196">Copies all characters up to the first null character from an unmanaged ANSI string to a managed <see cref="T:System.String" />, and widens each ANSI character to Unicode.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1197">관리되지 않는 ANSI 문자열의 복사본을 보유하는 관리되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1197">A managed string that holds a copy of the unmanaged ANSI string.</span></span> <span data-ttu-id="bb2a9-1198"><paramref name="ptr" />이 <see langword="null" />이면 메서드가 null 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1198">If <paramref name="ptr" /> is <see langword="null" />, the method returns a null string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1199"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> 사용자 지정 마샬링 또는 관리 및 비관리 코드를 혼합 하는 경우 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1199"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1200">이 메서드는 관리 되지 않는 문자열의 내용의 복사본을 만들기 때문에 원래 문자열을 적절 하 게 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1200">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="bb2a9-1201">이 메서드는의 반대 되는 기능을 제공 합니다 <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> 고 <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1201">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1202">다음 예제에서는 합니다 <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> 관리 되지 않는 관리 되는 문자열을 만들려면 메서드 `char` 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1202">The following example uses the <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> method to create a managed string from an unmanaged `char` array.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1203">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1203">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1204">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1204">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringAnsi">
      <MemberSignature Language="C#" Value="public static string PtrToStringAnsi (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAnsi(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAnsi (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAnsi(IntPtr ptr, int len);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAnsi : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAnsi (ptr, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1205">관리되지 않는 문자열의 첫 문자 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1205">The address of the first character of the unmanaged string.</span></span></param>
        <param name="len"><span data-ttu-id="bb2a9-1206">복사할 입력 문자열의 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1206">The byte count of the input string to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1207">관리되는 <see cref="T:System.String" />을 할당하고, 관리되지 않는 ANSI 문자열에서 지정된 수의 문자를 해당 개체로 복사한 다음 각 ANSI 문자를 유니코드로 확장합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1207">Allocates a managed <see cref="T:System.String" />, copies a specified number of characters from an unmanaged ANSI string into it, and widens each ANSI character to Unicode.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1208"><paramref name="ptr" /> 매개 변수의 값이 <see langword="null" />이 아니면 네이티브 ANSI 문자열의 복사본을 보유하는 관리되는 문자열이고, 그렇지 않으면 이 메서드에서 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1208">A managed string that holds a copy of the native ANSI string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1209"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> 사용자 지정 마샬링 또는 관리 및 비관리 코드를 혼합 하는 경우 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1209"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1210">이 메서드는 관리 되지 않는 문자열의 내용의 복사본을 만들기 때문에 원래 문자열을 적절 하 게 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1210">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="bb2a9-1211">이 메서드는의 반대 되는 기능을 제공 합니다 <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> 고 <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1211">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1212">다음 예제에서는 합니다 <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> 관리 되지 않는 관리 되는 문자열을 만들려면 메서드`char` 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1212">The following example uses the <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> method to create a managed string from an unmanaged`char` array.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr-int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr-int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1213"><paramref name="len" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1213"><paramref name="len" /> is less than zero.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1214">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1214">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1215">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1215">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringAuto">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1216">관리되는 <see cref="T:System.String" />을 할당하고 관리되지 않는 문자열의 전체 또는 일부를 그 안에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1216">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged string into it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringAuto">
      <MemberSignature Language="C#" Value="public static string PtrToStringAuto (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAuto(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAuto (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAuto(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAuto : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAuto ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1217">유니코드 플랫폼의 경우 첫째 유니코드 문자의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1217">For Unicode platforms, the address of the first Unicode character.</span></span>  
  
<span data-ttu-id="bb2a9-1218">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1218">-or-</span></span> 
<span data-ttu-id="bb2a9-1219">ANSI 플랫폼의 경우 첫째 ANSI 문자의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1219">For ANSI plaforms, the address of the first ANSI character.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1220">관리되는 <see cref="T:System.String" />을 할당하고 관리되지 않는 메모리에 저장된 문자열에서 첫 번째 null이 나올 때까지의 모든 문자를 해당 개체로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1220">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from a string stored in unmanaged memory into it.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1221"><paramref name="ptr" /> 매개 변수의 값이 <see langword="null" />가 아니면 관리되지 않는 문자열의 복사본을 보유하는 관리되는 문자열이고, 그렇지 않으면 이 메서드에서 <see langword="null" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1221">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1222">현재 플랫폼은 유니코드 각 ANSI 문자를 유니코드 문자로 확장 되 고이 메서드를 호출 <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1222">If the current platform is Unicode, each ANSI character is widened to a Unicode character and this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>.</span></span> <span data-ttu-id="bb2a9-1223">그렇지 않은 경우이 메서드를 호출 <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1223">Otherwise, this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span></span>  
  
 <span data-ttu-id="bb2a9-1224"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> 사용자 지정 마샬링 또는 관리 및 비관리 코드를 혼합 하는 경우 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1224"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1225">이 메서드는 관리 되지 않는 문자열의 내용의 복사본을 만들기 때문에 원래 문자열을 적절 하 게 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1225">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="bb2a9-1226"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> 반대 기능을 제공 합니다 <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> 고 <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1226"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1227">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1227">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1228">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1228">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringAuto">
      <MemberSignature Language="C#" Value="public static string PtrToStringAuto (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAuto(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAuto (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAuto(IntPtr ptr, int len);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAuto : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAuto (ptr, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="len" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1229">유니코드 플랫폼의 경우 첫째 유니코드 문자의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1229">For Unicode platforms, the address of the first Unicode character.</span></span>  
  
<span data-ttu-id="bb2a9-1230">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1230">-or-</span></span> 
<span data-ttu-id="bb2a9-1231">ANSI 플랫폼의 경우 첫째 ANSI 문자의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1231">For ANSI plaforms, the address of the first ANSI character.</span></span></param>
        <param name="len"><span data-ttu-id="bb2a9-1232">복사할 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1232">The number of characters to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1233">관리되는 <see cref="T:System.String" />을 할당하고 관리되지 않는 메모리에 저장된 문자열에서 지정된 수의 문자를 그 안에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1233">Allocates a managed <see cref="T:System.String" /> and copies the specified number of characters from a string stored in unmanaged memory into it.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1234"><paramref name="ptr" /> 매개 변수의 값이 <see langword="null" />이 아니면 네이티브 문자열의 복사본이 들어 있는 관리되는 문자열이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1234">A managed string that holds a copy of the native string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1235">유니코드 플랫폼에서이 메서드를 호출 <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>; ANSI 플랫폼에서 호출한 <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1235">On Unicode platforms, this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>; on ANSI platforms, it calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span></span> <span data-ttu-id="bb2a9-1236">이러한 메서드가 호출 되기 전에 변환이 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1236">No transformations are done before these methods are called.</span></span>  
  
 <span data-ttu-id="bb2a9-1237"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> 사용자 지정 마샬링 또는 관리 및 비관리 코드를 혼합 하는 경우 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1237"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1238">이 메서드는 관리 되지 않는 문자열의 내용의 복사본을 만들기 때문에 원래 문자열을 적절 하 게 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1238">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="bb2a9-1239"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> 반대 기능을 제공 <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> 고 <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1239"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1240"><paramref name="len" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1240"><paramref name="len" /> is less than zero.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1241">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1241">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1242">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1242">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringBSTR">
      <MemberSignature Language="C#" Value="public static string PtrToStringBSTR (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringBSTR(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringBSTR (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringBSTR(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringBSTR : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringBSTR ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1243">관리되지 않는 문자열의 첫 문자 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1243">The address of the first character of the unmanaged string.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1244">관리되는 <see cref="T:System.String" />을 할당하고 관리되지 않는 메모리에 저장된 [BSTR(이진 문자열)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx)을 그 안에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1244">Allocates a managed <see cref="T:System.String" /> and copies a [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) stored in unmanaged memory into it.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1245">관리되지 않는 문자열의 복사본을 보유하는 관리되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1245">A managed string that holds a copy of the unmanaged string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1246">할당 된 문자열에만이 메서드를 호출 합니다. 관리 되지 않는 [SysAllocString](https://msdn.microsoft.com/library/ms221458\(v=vs.85\).aspx) 하 고 [SysAllocStringLen](https://msdn.microsoft.com/library/ms221639\(v=vs.85\).aspx) 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1246">Call this method only on strings that were allocated with the unmanaged [SysAllocString](https://msdn.microsoft.com/library/ms221458\(v=vs.85\).aspx) and [SysAllocStringLen](https://msdn.microsoft.com/library/ms221639\(v=vs.85\).aspx) functions.</span></span>  
  
 <span data-ttu-id="bb2a9-1247"><xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A> 사용자 지정 마샬링 또는 관리 및 비관리 코드를 혼합 하는 경우 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1247"><xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1248">이 메서드는 관리 되지 않는 문자열의 내용의 복사본을 만들기 때문에 원래 문자열을 적절 하 게 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1248">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="bb2a9-1249">반대 기능을 제공 하는이 메서드는 <xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1249">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1250"><paramref name="ptr" />가 <see cref="F:System.IntPtr.Zero" />와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1250"><paramref name="ptr" /> equals <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1251">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1251">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1252">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1252">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringUni">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1253">관리되는 <see cref="T:System.String" />을 할당하고 관리되지 않는 유니코드 문자열의 전체 또는 일부를 그 안에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1253">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged Unicode string into it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringUni">
      <MemberSignature Language="C#" Value="public static string PtrToStringUni (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUni(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUni (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUni(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUni : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUni ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1254">관리되지 않는 문자열의 첫 문자 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1254">The address of the first character of the unmanaged string.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1255">관리되는 <see cref="T:System.String" />을 할당하고 관리되지 않는 유니코드 문자열에서 첫 번째 null이 나올 때까지의 모든 문자를 해당 개체로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1255">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from an unmanaged Unicode string into it.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1256"><paramref name="ptr" /> 매개 변수의 값이 <see langword="null" />가 아니면 관리되지 않는 문자열의 복사본을 보유하는 관리되는 문자열이고, 그렇지 않으면 이 메서드에서 <see langword="null" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1256">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1257"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> 관리 및 비관리 코드를 혼합 하는 경우 사용자 지정 마샬링 또는 용도로 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1257"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1258">이 메서드는 관리 되지 않는 문자열의 내용의 복사본을 만들기 때문에 원래 문자열을 적절 하 게 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1258">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="bb2a9-1259">이 메서드는의 반대 되는 기능을 제공 합니다 <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> 고 <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1259">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1260">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1260">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1261">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1261">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUni">
      <MemberSignature Language="C#" Value="public static string PtrToStringUni (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUni(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUni (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUni(IntPtr ptr, int len);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUni : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUni (ptr, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1262">관리되지 않는 문자열의 첫 문자 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1262">The address of the first character of the unmanaged string.</span></span></param>
        <param name="len"><span data-ttu-id="bb2a9-1263">복사할 유니코드 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1263">The number of Unicode characters to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1264">관리되는 <see cref="T:System.String" />을 할당하고 관리되지 않는 유니코드 문자열의 지정된 문자 수를 그 안에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1264">Allocates a managed <see cref="T:System.String" /> and copies a specified number of characters from an unmanaged Unicode string into it.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1265"><paramref name="ptr" /> 매개 변수의 값이 <see langword="null" />가 아니면 관리되지 않는 문자열의 복사본을 보유하는 관리되는 문자열이고, 그렇지 않으면 이 메서드에서 <see langword="null" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1265">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1266"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> 사용자 지정 마샬링 또는 관리 및 비관리 코드를 혼합 하는 경우 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1266"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1267">이 메서드는 관리 되지 않는 문자열의 내용의 복사본을 만들기 때문에 원래 문자열을 적절 하 게 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1267">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="bb2a9-1268">이 메서드는의 반대 되는 기능을 제공 합니다 <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> 고 <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1268">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1269">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1269">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1270">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1270">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUTF8">
      <MemberSignature Language="C#" Value="public static string PtrToStringUTF8 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUTF8(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUTF8 (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUTF8(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUTF8 : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUTF8 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUTF8">
      <MemberSignature Language="C#" Value="public static string PtrToStringUTF8 (IntPtr ptr, int byteLen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUTF8(native int ptr, int32 byteLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUTF8 (ptr As IntPtr, byteLen As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUTF8(IntPtr ptr, int byteLen);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUTF8 : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUTF8 (ptr, byteLen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="byteLen" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <param name="byteLen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStructure">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1271">관리되지 않는 메모리 블록의 데이터를 관리되는 개체로 마샬링합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1271">Marshals data from an unmanaged block of memory to a managed object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStructure">
      <MemberSignature Language="C#" Value="public static void PtrToStructure (IntPtr ptr, object structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PtrToStructure(native int ptr, object structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PtrToStructure (ptr As IntPtr, structure As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PtrToStructure(IntPtr ptr, System::Object ^ structure);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint * obj -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure (ptr, structure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("PtrToStructure(IntPtr, Object) may be unavailable in future releases. Instead, use PtrToStructure&lt;T&gt;(IntPtr). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296512")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1272">관리되지 않는 메모리 블록에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1272">A pointer to an unmanaged block of memory.</span></span></param>
        <param name="structure"><span data-ttu-id="bb2a9-1273">데이터가 복사될 대상 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1273">The object to which the data is to be copied.</span></span> <span data-ttu-id="bb2a9-1274">이 개체는 형식이 지정된 클래스의 인스턴스여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1274">This must be an instance of a formatted class.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1275">관리되지 않는 메모리 블록의 데이터를 관리되는 개체로 마샬링합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1275">Marshals data from an unmanaged block of memory to a managed object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1276"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> COM에서 필요한 경우가 구조 매개 변수는 라고 하는 경우 interop 및 플랫폼 호출을 <xref:System.IntPtr?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1276"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> is often necessary in COM interop and platform invoke when structure parameters are represented as an <xref:System.IntPtr?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="bb2a9-1277">이 오버 로드 메서드가 값 형식을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1277">You cannot use this overload method with value types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1278">구조체 레이아웃이 Sequential 또는 Explicit이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1278">Structure layout is not sequential or explicit.</span></span>  
  
<span data-ttu-id="bb2a9-1279">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1279">-or-</span></span> 
<span data-ttu-id="bb2a9-1280">구조체가 boxed 값 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1280">Structure is a boxed value type.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1281">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1281">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1282">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1282">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure">
      <MemberSignature Language="C#" Value="public static object PtrToStructure (IntPtr ptr, Type structureType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object PtrToStructure(native int ptr, class System.Type structureType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStructure (ptr As IntPtr, structureType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PtrToStructure(IntPtr ptr, Type ^ structureType);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint * Type -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure (ptr, structureType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("PtrToStructure(IntPtr, Type) may be unavailable in future releases. Instead, use PtrToStructure&lt;T&gt;(IntPtr). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296513")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structureType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1283">관리되지 않는 메모리 블록에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1283">A pointer to an unmanaged block of memory.</span></span></param>
        <param name="structureType"><span data-ttu-id="bb2a9-1284">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1284">The type of object to be created.</span></span> <span data-ttu-id="bb2a9-1285">이 개체는 서식이 지정된 클래스나 구조체를 나타내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1285">This object must represent a formatted class or a structure.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1286">관리되지 않는 메모리 블록의 데이터를 지정된 형식의 새로 할당된 관리되는 개체로 마샬링합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1286">Marshals data from an unmanaged block of memory to a newly allocated managed object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1287"><paramref name="ptr" /> 매개 변수가 가리키는 데이터가 있는 관리되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1287">A managed object containing the data pointed to by the <paramref name="ptr" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1288"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> COM에서 필요한 경우가 구조 매개 변수는 라고 하는 경우 interop 및 플랫폼 호출을 <xref:System.IntPtr?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1288"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> is often necessary in COM interop and platform invoke when structure parameters are represented as an <xref:System.IntPtr?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="bb2a9-1289">이 오버 로드 메서드에 값 형식을 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1289">You can pass a value type to this overload method.</span></span> <span data-ttu-id="bb2a9-1290">이 경우 반환 된 개체는 boxed 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1290">In this case, the returned object is a boxed instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1291">다음 예제에서는 관리 되는 구조를 만들고, 관리 되지 않는 메모리 전송 및를 사용 하 여 관리 되는 메모리에 다시 전송 된 <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1291">The following example creates a managed structure, transfers it to unmanaged memory, and then transfers it back to managed memory using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 <span data-ttu-id="bb2a9-1292">다음 예제에는 관리 되지 않는 메모리 블록을 사용 하 여 관리 되는 구조를 마샬링하는 방법을 보여 줍니다는 <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1292">The following example demonstrates how to marshal an unmanaged block of memory to a managed structure using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="bb2a9-1293">이 코드는 32 비트 컴파일을 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1293">This code assumes 32-bit compilation.</span></span> <span data-ttu-id="bb2a9-1294">64 비트 컴파일러를 사용 하기 전에 교체 <xref:System.IntPtr.ToInt32%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.IntPtr.ToInt64%2A?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1294">Before using a 64-bit compiler, replace <xref:System.IntPtr.ToInt32%2A?displayProperty=nameWithType> with <xref:System.IntPtr.ToInt64%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[PtrToStructure#1](~/samples/snippets/cpp/VS_Snippets_CLR/PtrToStructure/CPP/pts.cpp#1)]
 [!code-csharp[PtrToStructure#1](~/samples/snippets/csharp/VS_Snippets_CLR/PtrToStructure/CS/pts.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1295"><paramref name="structureType" /> 매개 변수 레이아웃이 Sequential 또는 Explicit이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1295">The <paramref name="structureType" /> parameter layout is not sequential or explicit.</span></span>  
  
<span data-ttu-id="bb2a9-1296">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1296">-or-</span></span> 
<span data-ttu-id="bb2a9-1297"><paramref name="structureType" /> 매개 변수는 제네릭 형식 정의입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1297">The <paramref name="structureType" /> parameter is a generic type definition.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1298"><paramref name="structureType" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1298"><paramref name="structureType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="bb2a9-1299"><paramref name="structureType" />에서 지정한 클래스에는 액세스할 수 있는 기본 생성자가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1299">The class specified by <paramref name="structureType" /> does not have an accessible default constructor.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1300">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1300">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1301">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1301">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T PtrToStructure&lt;T&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T PtrToStructure&lt;T&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStructure(Of T) (ptr As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T PtrToStructure(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint -&gt; 'T" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bb2a9-1302">데이터가 복사될 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1302">The type of the object to which the data is to be copied.</span></span> <span data-ttu-id="bb2a9-1303">이 개체는 서식이 지정된 클래스나 구조체여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1303">This must be a formatted class or a structure.</span></span></typeparam>
        <param name="ptr"><span data-ttu-id="bb2a9-1304">관리되지 않는 메모리 블록에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1304">A pointer to an unmanaged block of memory.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1305">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1305">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="bb2a9-1306">관리되지 않는 메모리 블록의 데이터를 제네릭 형식 매개 변수에 의해 지정된 형식의 새로 할당된 관리되는 개체로 마샬링합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1306">Marshals data from an unmanaged block of memory to a newly allocated managed object of the type specified by a generic type parameter.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1307"><paramref name="ptr" /> 매개 변수가 가리키는 데이터가 있는 관리되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1307">A managed object that contains the data that the <paramref name="ptr" /> parameter points to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1308"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%29> COM에서 필요한 경우가 구조 매개 변수는 라고 하는 경우 interop 및 플랫폼 호출 <xref:System.IntPtr?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1308"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%29> is often necessary in COM interop and platform invoke when structure parameters are represented as <xref:System.IntPtr?displayProperty=nameWithType> values.</span></span> <span data-ttu-id="bb2a9-1309">이 메서드 오버 로드 값 형식을 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1309">You can pass a value type to this method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1310"><typeparamref name="T" /> 레이아웃이 Sequential 또는 Explicit이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1310">The layout of <typeparamref name="T" /> is not sequential or explicit.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="bb2a9-1311"><typeparamref name="T" />에서 지정한 클래스에는 액세스할 수 있는 기본 생성자가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1311">The class specified by <typeparamref name="T" /> does not have an accessible default constructor.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1312">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1312">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1313">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1313">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void PtrToStructure&lt;T&gt; (IntPtr ptr, T structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PtrToStructure&lt;T&gt;(native int ptr, !!T structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PtrToStructure(Of T) (ptr As IntPtr, structure As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void PtrToStructure(IntPtr ptr, T structure);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint * 'T -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure (ptr, structure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="structure" Type="T" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bb2a9-1314"><paramref name="structure" />의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1314">The type of <paramref name="structure" />.</span></span> <span data-ttu-id="bb2a9-1315">형식이 지정된 클래스여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1315">This must be a formatted class.</span></span></typeparam>
        <param name="ptr"><span data-ttu-id="bb2a9-1316">관리되지 않는 메모리 블록에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1316">A pointer to an unmanaged block of memory.</span></span></param>
        <param name="structure"><span data-ttu-id="bb2a9-1317">데이터가 복사될 대상 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1317">The object to which the data is to be copied.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1318">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1318">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="bb2a9-1319">관리되지 않는 메모리 블록의 데이터를 지정된 형식의 관리되는 개체로 마샬링합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1319">Marshals data from an unmanaged block of memory to a managed object of the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1320"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%2C%60%600%29> COM에서 필요한 경우가 구조 매개 변수는 라고 하는 경우 interop 및 플랫폼 호출 <xref:System.IntPtr> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1320"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%2C%60%600%29> is often necessary in COM interop and platform invoke when structure parameters are represented as <xref:System.IntPtr> values.</span></span> <span data-ttu-id="bb2a9-1321">이 메서드 오버 로드 값 형식을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1321">You cannot use this method overload with value types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1322">구조체 레이아웃이 Sequential 또는 Explicit이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1322">Structure layout is not sequential or explicit.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1323">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1323">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1324">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1324">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="QueryInterface">
      <MemberSignature Language="C#" Value="public static int QueryInterface (IntPtr pUnk, ref Guid iid, out IntPtr ppv);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 QueryInterface(native int pUnk, valuetype System.Guid&amp; iid, [out] native int&amp; ppv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryInterface (pUnk As IntPtr, ByRef iid As Guid, ByRef ppv As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QueryInterface(IntPtr pUnk, Guid % iid, [Runtime::InteropServices::Out] IntPtr % ppv);" />
      <MemberSignature Language="F#" Value="static member QueryInterface : nativeint *  *  -&gt; int" Usage="System.Runtime.InteropServices.Marshal.QueryInterface (pUnk, iid, ppv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
        <Parameter Name="iid" Type="System.Guid" RefType="ref" />
        <Parameter Name="ppv" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pUnk"><span data-ttu-id="bb2a9-1325">쿼리될 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1325">The interface to be queried.</span></span></param>
        <param name="iid"><span data-ttu-id="bb2a9-1326">요청된 인터페이스의 IID(인터페이스 식별자)입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1326">The interface identifier (IID) of the requested interface.</span></span></param>
        <param name="ppv"><span data-ttu-id="bb2a9-1327">이 메서드는 반환될 때 반환된 인터페이스에 대한 참조를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1327">When this method returns, contains a reference to the returned interface.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1328">COM 개체에서 지정된 인터페이스에 대한 포인터를 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1328">Requests a pointer to a specified interface from a COM object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1329">호출의 성공이나 실패를 나타내는 HRESULT입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1329">An HRESULT that indicates the success or failure of the call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1330"><xref:System.Runtime.InteropServices.Marshal.QueryInterface%2A> 메서드를 노출 합니다 [iunknown:: Queryinterface](https://go.microsoft.com/fwlink/?LinkID=144867) 특정 인터페이스 포인터를 가져오려고 시도 하는 COM 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1330">The <xref:System.Runtime.InteropServices.Marshal.QueryInterface%2A> method exposes the [IUnknown::QueryInterface](https://go.microsoft.com/fwlink/?LinkID=144867) method of a COM object, which attempts to obtain a specific interface pointer.</span></span> <span data-ttu-id="bb2a9-1331">사용 하 여 `QueryInterface` COM 개체에 캐스트 작업을 수행 하는 관리 코드에서와 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1331">Using `QueryInterface` on a COM object is the same as performing a cast operation in managed code.</span></span> <span data-ttu-id="bb2a9-1332">이 메서드를 사용 하 여 개체를 호출 하면의 참조 횟수를 포인터 반환 되기 전에 인터페이스 포인터에 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1332">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="bb2a9-1333">항상 사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> 포인터를 사용 하 여 마친 후에 참조 횟수를 감소 시키기 위해.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1333">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="bb2a9-1334">가져올는 <xref:System.IntPtr> 를 나타내는 값을 [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) 인터페이스 포인터를 호출할 수 있습니다 <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, 또는 <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1334">To obtain an <xref:System.IntPtr> value that represents a [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) interface pointer, you can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1335">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1335">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1336">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1336">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1337">관리되지 않는 메모리에서 싱글바이트를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1337">Reads a single byte from unmanaged memory.</span></span> <span data-ttu-id="bb2a9-1338">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1338">Reading from unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As IntPtr) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadByte : nativeint -&gt; byte" Usage="System.Runtime.InteropServices.Marshal.ReadByte ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1339">읽을 관리되지 않는 메모리의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1339">The address in unmanaged memory from which to read.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1340">관리되지 않는 메모리에서 싱글바이트를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1340">Reads a single byte from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1341">관리되지 않는 메모리에서 읽은 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1341">The byte read from unmanaged memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1342"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> 암시 된 오프셋이 0에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1342"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> has an implied offset of 0.</span></span> <span data-ttu-id="bb2a9-1343">이 메서드를 사용 하면 관리 되지 않는 배열 전체를 복사를 제거 하는 관리 되지 않는 C-스타일 바이트 배열와 직접 상호 작용 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 읽기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1343">This method enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1344">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1344">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1345">다음 예제에서는 관리 되지 않는 메모리 블록을 만듭니다, 그리고 관리 되지 않는 메모리에 바이트를 씁니다, 그리고 관리 되지 않는 메모리에서 바이트를 읽고 및 관리 되지 않는 메모리를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1345">The following example creates a block of unmanaged memory, writes a byte to the unmanaged memory, reads the byte back from unmanaged memory, and then disposes the unmanaged memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/vb/example.vb#1)]  
  
 <span data-ttu-id="bb2a9-1346">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> 메서드는 관리 되지 않는 문자의 값을 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1346">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> method to read the value of an unmanaged character.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadByte#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1347"><paramref name="ptr" />의 형식을 인식할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1347"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="bb2a9-1348">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1348">-or-</span></span> 
 <span data-ttu-id="bb2a9-1349"><paramref name="ptr" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1349"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-1350">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1350">-or-</span></span> 
 <span data-ttu-id="bb2a9-1351"><paramref name="ptr" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1351"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1352">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1352">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1353">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1353">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As IntPtr, ofs As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadByte : nativeint * int -&gt; byte" Usage="System.Runtime.InteropServices.Marshal.ReadByte (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1354">읽을 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1354">The base address in unmanaged memory from which to read.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-1355">읽기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1355">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1356">관리되지 않는 메모리의 지정된 오프셋(또는 인덱스) 위치에서 싱글바이트를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1356">Reads a single byte at a given offset (or index) from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1357">관리되지 않는 메모리의 지정된 오프셋 위치에서 읽은 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1357">The byte read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1358"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> 직접 관리 되지 않는 배열 전체를 복사를 제거 하는 관리 되지 않는 C-스타일 바이트 배열와 상호 작용 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 읽기 전에 별도 관리 되는 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1358"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1359">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1359">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1360">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1360">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#3)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#3)]  
  
 <span data-ttu-id="bb2a9-1361">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> 메서드는 관리 되지 않는 문자의 값을 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1361">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> method to read the value of an unmanaged character.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadByte-IntPtr-int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte-IntPtr-int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1362">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1362">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1363">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1363">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1364">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1364">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As Object, ofs As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadByte : obj * int -&gt; byte" Usage="System.Runtime.InteropServices.Marshal.ReadByte (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.Obsolete("ReadByte(Object, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1365">소스 개체에 대한 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1365">The base address in unmanaged memory of the source object.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-1366">읽기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1366">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1367">관리되지 않는 메모리의 지정된 오프셋(또는 인덱스) 위치에서 싱글바이트를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1367">Reads a single byte at a given offset (or index) from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1368">관리되지 않는 메모리의 지정된 오프셋 위치에서 읽은 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1368">The byte read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1369"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> 직접 관리 되지 않는 배열 전체를 복사를 제거 하는 관리 되지 않는 C-스타일 바이트 배열와 상호 작용 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 읽기 전에 별도 관리 되는 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1369"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1370">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1370">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1371">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1371">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1372"><paramref name="ptr" />이 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 개체인 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1372"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="bb2a9-1373">이 메서드에는 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 매개 변수를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1373">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1374">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1374">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1375">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1375">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1376">관리되지 않는 메모리에서 16비트 부호 있는 정수를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1376">Reads a 16-bit signed integer from unmanaged memory.</span></span> <span data-ttu-id="bb2a9-1377">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1377">Reading from unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As IntPtr) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadInt16 : nativeint -&gt; int16" Usage="System.Runtime.InteropServices.Marshal.ReadInt16 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1378">읽을 관리되지 않는 메모리의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1378">The address in unmanaged memory from which to read.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1379">관리되지 않는 메모리에서 16비트 부호 있는 정수를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1379">Reads a 16-bit signed integer from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1380">관리되지 않는 메모리에서 읽은 16비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1380">The 16-bit signed integer read from unmanaged memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1381"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 암시 된 오프셋이 0에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1381"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> has an implied offset of 0.</span></span> <span data-ttu-id="bb2a9-1382">이 메서드를 사용 하면 관리 되지 않는 C-스타일을 사용 하 여 직접 상호 작용 `Int16` 배열에 관리 되지 않는 배열 전체를 복사 하지 않아도 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 읽기 전에 별도 관리 되는 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1382">This method enables direct interaction with an unmanaged C-style `Int16` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1383">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1383">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1384">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1384">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 <span data-ttu-id="bb2a9-1385">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 메서드를 관리 되지 않는 값을 읽을 `short` 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1385">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> method to read the value of an unmanaged `short` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt16#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt16/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1386"><paramref name="ptr" />의 형식을 인식할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1386"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="bb2a9-1387">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1387">-or-</span></span> 
 <span data-ttu-id="bb2a9-1388"><paramref name="ptr" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1388"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-1389">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1389">-or-</span></span> 
 <span data-ttu-id="bb2a9-1390"><paramref name="ptr" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1390"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1391">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1391">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1392">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1392">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As IntPtr, ofs As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt16 : nativeint * int -&gt; int16" Usage="System.Runtime.InteropServices.Marshal.ReadInt16 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1393">읽을 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1393">The base address in unmanaged memory from which to read.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-1394">읽기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1394">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1395">관리되지 않는 메모리의 지정된 오프셋 위치에서 16비트 부호 있는 정수를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1395">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1396">관리되지 않는 메모리의 지정된 오프셋 위치에서 읽은 16비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1396">The 16-bit signed integer read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1397"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 직접 배열 사용 하 여 관리 되지 않는 16 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 읽기 전에 별도 관리 되는 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1397"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1398">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1398">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1399">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1399">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 <span data-ttu-id="bb2a9-1400">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 메서드를 관리 되지 않는 값을 읽을 `short` 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1400">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> method to read the value of an unmanaged `short` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt16-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt16-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1401">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1401">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1402">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1402">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1403">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1403">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As Object, ofs As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt16 : obj * int -&gt; int16" Usage="System.Runtime.InteropServices.Marshal.ReadInt16 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.Obsolete("ReadInt16(Object, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1404">소스 개체에 대한 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1404">The base address in unmanaged memory of the source object.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-1405">읽기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1405">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1406">관리되지 않는 메모리의 지정된 오프셋 위치에서 16비트 부호 있는 정수를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1406">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1407">관리되지 않는 메모리의 지정된 오프셋 위치에서 읽은 16비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1407">The 16-bit signed integer read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1408"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 직접 배열 사용 하 여 관리 되지 않는 16 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 읽기 전에 별도 관리 되는 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1408"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1409">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1409">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1410">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1410">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1411"><paramref name="ptr" />이 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 개체인 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1411"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="bb2a9-1412">이 메서드에는 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 매개 변수를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1412">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1413">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1413">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1414">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1414">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1415">관리되지 않는 메모리에서 32비트 부호 있는 정수를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1415">Reads a 32-bit signed integer from unmanaged memory.</span></span> <span data-ttu-id="bb2a9-1416">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1416">Reading from unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadInt32 : nativeint -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReadInt32 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1417">읽을 관리되지 않는 메모리의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1417">The address in unmanaged memory from which to read.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1418">관리되지 않는 메모리에서 32비트 부호 있는 정수를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1418">Reads a 32-bit signed integer from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1419">관리되지 않는 메모리에서 읽은 32비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1419">The 32-bit signed integer read from unmanaged memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1420"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> 암시 된 오프셋이 0에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1420"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> has an implied offset of 0.</span></span> <span data-ttu-id="bb2a9-1421">이 메서드를 사용 하면 관리 되지 않는 C-스타일을 사용 하 여 직접 상호 작용 `Int32` 배열에 관리 되지 않는 배열 전체를 복사 하지 않아도 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 읽기 전에 별도 관리 되는 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1421">This method enables direct interaction with an unmanaged C-style `Int32` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1422">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1422">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1423">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1423">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 <span data-ttu-id="bb2a9-1424">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> 메서드를 관리 되지 않는 값을 읽을 `int` 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1424">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> method to read the value of an unmanaged `int` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt32#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt32/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1425"><paramref name="ptr" />의 형식을 인식할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1425"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="bb2a9-1426">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1426">-or-</span></span> 
 <span data-ttu-id="bb2a9-1427"><paramref name="ptr" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1427"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-1428">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1428">-or-</span></span> 
 <span data-ttu-id="bb2a9-1429"><paramref name="ptr" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1429"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1430">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1430">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1431">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1431">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As IntPtr, ofs As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt32 : nativeint * int -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReadInt32 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1432">읽을 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1432">The base address in unmanaged memory from which to read.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-1433">읽기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1433">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1434">관리되지 않는 메모리의 지정된 오프셋 위치에서 32비트 부호 있는 정수를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1434">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1435">관리되지 않는 메모리에서 읽은 32비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1435">The 32-bit signed integer read from unmanaged memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1436"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> 직접 배열 사용 하 여 관리 되지 않는 32 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 읽기 전에 별도 관리 되는 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1436"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1437">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1437">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1438">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1438">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 <span data-ttu-id="bb2a9-1439">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> 메서드를 관리 되지 않는 값을 읽을 `int` 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1439">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> method to read the value of an unmanaged `int` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt32-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt32-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1440">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1440">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1441">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1441">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1442">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1442">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As Object, ofs As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt32 : obj * int -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReadInt32 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.Obsolete("ReadInt32(Object, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1443">소스 개체에 대한 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1443">The base address in unmanaged memory of the source object.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-1444">읽기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1444">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1445">관리되지 않는 메모리의 지정된 오프셋 위치에서 32비트 부호 있는 정수를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1445">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1446">관리되지 않는 메모리의 지정된 오프셋 위치에서 읽은 32비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1446">The 32-bit signed integer read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1447"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> 직접 배열 사용 하 여 관리 되지 않는 32 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 읽기 전에 별도 관리 되는 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1447"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1448">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1448">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1449">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1449">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1450"><paramref name="ptr" />이 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 개체인 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1450"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="bb2a9-1451">이 메서드에는 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 매개 변수를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1451">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1452">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1452">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1453">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1453">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1454">관리되지 않는 메모리에서 64비트 부호 있는 정수를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1454">Reads a 64-bit signed integer from unmanaged memory.</span></span> <span data-ttu-id="bb2a9-1455">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1455">Reading from unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As IntPtr) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadInt64 : nativeint -&gt; int64" Usage="System.Runtime.InteropServices.Marshal.ReadInt64 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1456">읽을 관리되지 않는 메모리의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1456">The address in unmanaged memory from which to read.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1457">관리되지 않는 메모리에서 64비트 부호 있는 정수를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1457">Reads a 64-bit signed integer from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1458">관리되지 않는 메모리에서 읽은 64비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1458">The 64-bit signed integer read from unmanaged memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1459"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> 암시 된 오프셋이 0에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1459"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> has an implied offset of 0.</span></span> <span data-ttu-id="bb2a9-1460">이 메서드를 사용 하면 관리 되지 않는 C-스타일을 사용 하 여 직접 상호 작용 `Int64` 배열에 관리 되지 않는 배열 전체를 복사 하지 않아도 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 읽기 전에 별도 관리 되는 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1460">This method enables direct interaction with an unmanaged C-style `Int64` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1461">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1461">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1462">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1462">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 <span data-ttu-id="bb2a9-1463">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> 메서드를 관리 되지 않는 값을 읽을 `__int64` 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1463">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> method to read the value of an unmanaged `__int64` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt64/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1464"><paramref name="ptr" />의 형식을 인식할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1464"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="bb2a9-1465">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1465">-or-</span></span> 
 <span data-ttu-id="bb2a9-1466"><paramref name="ptr" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1466"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-1467">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1467">-or-</span></span> 
 <span data-ttu-id="bb2a9-1468"><paramref name="ptr" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1468"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1469">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1469">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1470">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1470">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As IntPtr, ofs As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt64 : nativeint * int -&gt; int64" Usage="System.Runtime.InteropServices.Marshal.ReadInt64 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1471">읽을 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1471">The base address in unmanaged memory from which to read.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-1472">읽기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1472">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1473">관리되지 않는 메모리의 지정된 오프셋 위치에서 64비트 부호 있는 정수를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1473">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1474">관리되지 않는 메모리의 지정된 오프셋 위치에서 읽은 64비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1474">The 64-bit signed integer read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1475"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> 직접 배열 사용 하 여 관리 되지 않는 64 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 읽기 전에 별도 관리 되는 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1475"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1476">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1476">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1477">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1477">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 <span data-ttu-id="bb2a9-1478">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> 메서드를 관리 되지 않는 값을 읽을 `__int64` 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1478">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> method to read the value of an unmanaged `__int64` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt64-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt64-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1479">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1479">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1480">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1480">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1481">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1481">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As Object, ofs As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt64 : obj * int -&gt; int64" Usage="System.Runtime.InteropServices.Marshal.ReadInt64 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.Obsolete("ReadInt64(Object, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1482">소스 개체에 대한 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1482">The base address in unmanaged memory of the source object.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-1483">읽기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1483">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1484">관리되지 않는 메모리의 지정된 오프셋 위치에서 64비트 부호 있는 정수를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1484">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1485">관리되지 않는 메모리의 지정된 오프셋 위치에서 읽은 64비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1485">The 64-bit signed integer read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1486"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> 직접 배열 사용 하 여 관리 되지 않는 64 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 읽기 전에 별도 관리 되는 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1486"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1487">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1487">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1488">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1488">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1489"><paramref name="ptr" />이 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 개체인 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1489"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="bb2a9-1490">이 메서드에는 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 매개 변수를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1490">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1491">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1491">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1492">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1492">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadIntPtr">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1493">관리되지 않는 메모리에서 프로세서의 기본 크기로 지정된 정수를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1493">Reads a processor native sized integer from unmanaged memory.</span></span> <span data-ttu-id="bb2a9-1494">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1494">Reading from unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadIntPtr : nativeint -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReadIntPtr ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1495">읽을 관리되지 않는 메모리의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1495">The address in unmanaged memory from which to read.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1496">관리되지 않는 메모리에서 프로세서의 기본 크기로 지정된 정수를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1496">Reads a processor native-sized integer from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1497">관리되지 않는 메모리에서 읽은 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1497">The integer read from unmanaged memory.</span></span> <span data-ttu-id="bb2a9-1498">32비트 컴퓨터에서는 32비트 정수가 반환되고 64비트 컴퓨터에서는 64비트 정수가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1498">A 32 bit integer is returned on 32 bit machines and a 64 bit integer is returned on 64 bit machines.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1499"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> 암시 된 오프셋이 0에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1499"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> has an implied offset of 0.</span></span> <span data-ttu-id="bb2a9-1500">이 메서드를 사용 하면 관리 되지 않는 C-스타일을 사용 하 여 직접 상호 작용 `IntPtr` 배열에 관리 되지 않는 배열 전체를 복사 하지 않아도 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 읽기 전에 별도 관리 되는 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1500">This method enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1501">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1501">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1502">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1502">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1503"><paramref name="ptr" />의 형식을 인식할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1503"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="bb2a9-1504">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1504">-or-</span></span> 
 <span data-ttu-id="bb2a9-1505"><paramref name="ptr" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1505"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-1506">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1506">-or-</span></span> 
 <span data-ttu-id="bb2a9-1507"><paramref name="ptr" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1507"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1508">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1508">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1509">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1509">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As IntPtr, ofs As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadIntPtr : nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReadIntPtr (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1510">읽을 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1510">The base address in unmanaged memory from which to read.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-1511">읽기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1511">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1512">관리되지 않는 메모리의 지정된 오프셋 위치에서 프로세서의 기본 크기로 지정된 정수를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1512">Reads a processor native sized integer at a given offset from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1513">관리되지 않는 메모리의 지정된 오프셋 위치에서 읽은 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1513">The integer read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1514"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> 직접 관리 되지 않는 C-스타일을 사용 하 여 상호 수 있으므로 `IntPtr` 배열에 관리 되지 않는 배열 전체를 복사 하지 않아도 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 읽기 전에 별도 관리 되는 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1514"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1515">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1515">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1516">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1516">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1517">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1517">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1518">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1518">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1519">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1519">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As Object, ofs As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadIntPtr : obj * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReadIntPtr (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.Obsolete("ReadIntPtr(Object, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1520">소스 개체에 대한 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1520">The base address in unmanaged memory of the source object.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-1521">읽기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1521">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1522">관리되지 않는 메모리에서 프로세서의 기본 크기로 지정된 정수를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1522">Reads a processor native sized integer from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1523">관리되지 않는 메모리의 지정된 오프셋 위치에서 읽은 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1523">The integer read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1524"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> 직접 관리 되지 않는 C-스타일을 사용 하 여 상호 수 있으므로 `IntPtr` 배열에 관리 되지 않는 배열 전체를 복사 하지 않아도 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 읽기 전에 별도 관리 되는 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1524"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1525">정렬되지 않은 메모리 위치에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1525">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1526">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1526">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1527"><paramref name="ptr" />이 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 개체인 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1527"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="bb2a9-1528">이 메서드에는 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 매개 변수를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1528">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1529">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1529">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1530">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1530">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReAllocCoTaskMem">
      <MemberSignature Language="C#" Value="public static IntPtr ReAllocCoTaskMem (IntPtr pv, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReAllocCoTaskMem(native int pv, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReAllocCoTaskMem (pv As IntPtr, cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReAllocCoTaskMem(IntPtr pv, int cb);" />
      <MemberSignature Language="F#" Value="static member ReAllocCoTaskMem : nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem (pv, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.IntPtr" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pv"><span data-ttu-id="bb2a9-1531"><see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />을 사용하여 할당된 메모리에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1531">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span></span></param>
        <param name="cb"><span data-ttu-id="bb2a9-1532">할당된 블록의 새 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1532">The new size of the allocated block.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1533"><see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />을 사용하여 이전에 할당된 메모리 블록 크기를 조정합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1533">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1534">다시 할당된 메모리 블록 주소를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1534">An integer representing the address of the reallocated block of memory.</span></span> <span data-ttu-id="bb2a9-1535">이 메모리는 <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />을 사용하여 해제되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1535">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1536"><xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A> 두 개의 메모리 재할당 메서드 중 하나는 <xref:System.Runtime.InteropServices.Marshal> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1536"><xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A> is one of two memory reallocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="bb2a9-1537">(<xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> 다른 됩니다.) 다시 할당된 메모리 콘텐츠 시작 부분의 원래 콘텐츠에 동일 그러나 전체 메모리 블록은 다른 위치에 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1537">(<xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> is the other.) The beginning of the reallocated memory content is the same as the original content; however, the entire memory block can be in a different location.</span></span> <span data-ttu-id="bb2a9-1538">이 메서드는 COM 노출 [CoTaskMemRealloc](https://go.microsoft.com/fwlink/?LinkId=148778) COM 작업 메모리 할당자 라고 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1538">This method exposes the COM [CoTaskMemRealloc](https://go.microsoft.com/fwlink/?LinkId=148778) function, which is referred to as the COM task memory allocator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-1539">메모리가 부족하여 요청을 만족시킬 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1539">There is insufficient memory to satisfy the request.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1540">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1540">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1541">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1541">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="ReAllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr ReAllocHGlobal (IntPtr pv, IntPtr cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReAllocHGlobal(native int pv, native int cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReAllocHGlobal (pv As IntPtr, cb As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReAllocHGlobal(IntPtr pv, IntPtr cb);" />
      <MemberSignature Language="F#" Value="static member ReAllocHGlobal : nativeint * nativeint -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReAllocHGlobal (pv, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.IntPtr" />
        <Parameter Name="cb" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pv"><span data-ttu-id="bb2a9-1542"><see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />을 사용하여 할당된 메모리에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1542">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span></span></param>
        <param name="cb"><span data-ttu-id="bb2a9-1543">할당된 블록의 새 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1543">The new size of the allocated block.</span></span> <span data-ttu-id="bb2a9-1544">이것은 포인터가 아니라 요청하는 바이트 수로, 형식 <see cref="T:System.IntPtr" />로 캐스팅합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1544">This is not a pointer; it is the byte count you are requesting, cast to type <see cref="T:System.IntPtr" />.</span></span> <span data-ttu-id="bb2a9-1545">포인터를 전달하면 크기로 처리됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1545">If you pass a pointer, it is treated as a size.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1546"><see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />을 사용하여 이전에 할당된 메모리 블록 크기를 조정합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1546">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1547">다시 할당된 메모리에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1547">A pointer to the reallocated memory.</span></span> <span data-ttu-id="bb2a9-1548">이 메모리는 <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />을 사용하여 해제되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1548">This memory must be released using <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1549"><xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> API 메서드는 두 메모리 재할당 중 하나는 <xref:System.Runtime.InteropServices.Marshal> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1549"><xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> is one of two memory reallocation API methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="bb2a9-1550">(<xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A?displayProperty=nameWithType> 다른 됩니다.)</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1550">(<xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A?displayProperty=nameWithType> is the other.)</span></span>  
  
 <span data-ttu-id="bb2a9-1551">이 메서드는 Win32 노출 [GlobalReAlloc](https://go.microsoft.com/fwlink/?LinkId=148780) Kernel32.dll에서 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1551">This method exposes the Win32 [GlobalReAlloc](https://go.microsoft.com/fwlink/?LinkId=148780) function from Kernel32.dll.</span></span> <span data-ttu-id="bb2a9-1552">반환된 된 포인터는 원래에서 달라질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1552">The returned pointer can differ from the original.</span></span> <span data-ttu-id="bb2a9-1553">다른 경우 원래 메모리 블록의 내용을 새 블록에 복사 되었는지 및 원래 메모리 블록이 해제 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1553">If it is different, the contents of the original memory block have been copied to the new block, and the original memory block has been freed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-1554">메모리가 부족하여 요청을 만족시킬 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1554">There is insufficient memory to satisfy the request.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1555">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1555">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1556">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1556">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=148781"><span data-ttu-id="bb2a9-1557">GlobalAlloc 함수</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1557">GlobalAlloc Function</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public static int Release (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Release(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Release (pUnk As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Release(IntPtr pUnk);" />
      <MemberSignature Language="F#" Value="static member Release : nativeint -&gt; int" Usage="System.Runtime.InteropServices.Marshal.Release pUnk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk"><span data-ttu-id="bb2a9-1558">해제할 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1558">The interface to release.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1559">지정된 인터페이스의 참조 횟수를 감소시킵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1559">Decrements the reference count on the specified interface.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1560"><paramref name="pUnk" /> 매개 변수에서 지정하는 인터페이스에 대한 참조 횟수의 새 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1560">The new value of the reference count on the interface specified by the <paramref name="pUnk" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1561">공용 언어 런타임에서이 메서드를 직접 사용 해야 하므로 사용자에 대 한 COM 개체의 참조 횟수를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1561">The common language runtime manages the reference count of a COM object for you, making it unnecessary to use this method directly.</span></span> <span data-ttu-id="bb2a9-1562">테스트 목적에 대해서만이 값을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1562">Use this value only for testing purposes.</span></span> <span data-ttu-id="bb2a9-1563">사용자 지정 마샬러에서 테스트와 같이 드문 경우에 필요할 수 있습니다이 개체의 수명을 수동으로 조작할 수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1563">In rare cases, such as testing a custom marshaler, you might find it necessary to manipulate an object's lifetime manually.</span></span> <span data-ttu-id="bb2a9-1564">호출 하는 프로그램만 <xref:System.Runtime.InteropServices.Marshal.AddRef%2A?displayProperty=nameWithType> 를 호출 해야 <xref:System.Runtime.InteropServices.Marshal.Release%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1564">Only programs that call <xref:System.Runtime.InteropServices.Marshal.AddRef%2A?displayProperty=nameWithType> should call <xref:System.Runtime.InteropServices.Marshal.Release%2A>.</span></span> <span data-ttu-id="bb2a9-1565">호출 <xref:System.Runtime.InteropServices.Marshal.Release%2A> 참조 횟수에 도달 하면 0이 정의 되지 않은 동작을 유발 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1565">Calling <xref:System.Runtime.InteropServices.Marshal.Release%2A> after the reference count has reached zero causes undefined behavior.</span></span>  
  
 <span data-ttu-id="bb2a9-1566">호출할 수 있습니다 <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, 또는 <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> 가져오려고는 <xref:System.IntPtr> 나타내는 값을 [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) 인터페이스 포인터를 해제 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1566">You can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to obtain an <xref:System.IntPtr> value that represents a [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) interface pointer to release.</span></span> <span data-ttu-id="bb2a9-1567">이러한 메서드를 사용할 수도 있습니다는 <xref:System.Runtime.InteropServices.Marshal.Release%2A> 관리 되는 개체에서 나타내는 COM 인터페이스를 해제 하기 위해 관리 되는 개체에서 메서드 [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1567">You can also use these methods and the <xref:System.Runtime.InteropServices.Marshal.Release%2A> method on managed objects to release the COM interfaces represented by the managed object's [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1568">다음 예제에서는 검색 하는 방법을 보여 줍니다는 `IUnknown` 사용 하 여 관리 되는 개체에 대 한 인터페이스를 <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1568">The following example demonstrates how to retrieve an `IUnknown` interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> method.</span></span> <span data-ttu-id="bb2a9-1569">다음 예제에서는 호출 하 여 인터페이스 포인터를 해제 합니다 <xref:System.Runtime.InteropServices.Marshal.Release%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1569">The example then releases the interface pointer by calling the <xref:System.Runtime.InteropServices.Marshal.Release%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1570">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1570">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1571">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1571">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseComObject">
      <MemberSignature Language="C#" Value="public static int ReleaseComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReleaseComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReleaseComObject (o As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReleaseComObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member ReleaseComObject : obj -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReleaseComObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="bb2a9-1572">해제할 COM 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1572">The COM object to release.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1573">지정된 COM 개체와 연결된 지정된 [RCW(런타임 호출 가능 래퍼)](~/docs/framework/interop/runtime-callable-wrapper.md)의 참조 횟수를 감소시킵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1573">Decrements the reference count of the [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) associated with the specified COM object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1574"><paramref name="o" />와 연결된 RCW 참조 횟수의 새 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1574">The new value of the reference count of the RCW associated with <paramref name="o" />.</span></span> <span data-ttu-id="bb2a9-1575">RCW는 참조를 호출하는 관리되는 클라이언트의 수에 관계없이 래핑된 COM 개체에 대한 참조를 하나만 유지하므로 일반적으로 이 값은 0이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1575">This value is typically zero since the RCW keeps just one reference to the wrapped COM object regardless of the number of managed clients calling it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1576">이 메서드는 관리 코드에서 사용 하는 COM 개체의 수명을 명시적으로 제어 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1576">This method is used to explicitly control the lifetime of a COM object used from managed code.</span></span> <span data-ttu-id="bb2a9-1577">이 메서드를 사용 하 여를 적시에 또는 특정 순서에 따라 개체를 해제 해야 하는 경우 리소스에 대 한 참조를 보유 하는 기본 COM 개체를 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1577">You should use this method to free the underlying COM object that holds references to resources in a timely manner or when objects must be freed in a specific order.</span></span>  
  
 <span data-ttu-id="bb2a9-1578">COM 인터페이스 포인터를 CLR (공용 언어 런타임)를 입력, 때마다 RCW에 래핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1578">Every time a COM interface pointer enters the common language runtime (CLR), it is wrapped in an RCW.</span></span>  
  
 <span data-ttu-id="bb2a9-1579">RCW는 COM 인터페이스 포인터를 매핑할 때마다 증가 되는 참조 횟수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1579">The RCW has a reference count that is incremented every time a COM interface pointer is mapped to it.</span></span> <span data-ttu-id="bb2a9-1580"><xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> 메서드는 RCW의 참조 횟수를 감소 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1580">The <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method decrements the reference count of an RCW.</span></span> <span data-ttu-id="bb2a9-1581">참조 횟수가 0에 도달 하면 런타임은 관리 되지 않는 COM 개체의 모든 참조를 해제 하 고 throw 된 <xref:System.NullReferenceException?displayProperty=nameWithType> 추가 개체를 사용 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1581">When the reference count reaches zero, the runtime releases all its references on the unmanaged COM object, and throws a <xref:System.NullReferenceException?displayProperty=nameWithType> if you attempt to use the object further.</span></span> <span data-ttu-id="bb2a9-1582">매번 증가 및 호출 래퍼에 대해 참조 개수는 같은 COM 인터페이스를 전달 하면 한 번 이상에서 관리 되지 않는 관리 코드에 <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> 남은 참조 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1582">If the same COM interface is passed more than one time from unmanaged to managed code, the reference count on the wrapper is incremented every time, and calling <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> returns the number of remaining references.</span></span>  
  
 <span data-ttu-id="bb2a9-1583">이 메서드를 사용 하면 정확 하 게 하려는 경우에 수행 되도록는 RCW 참조 횟수를 해제할을 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1583">This method enables you to force an RCW reference count release so that it occurs precisely when you want it to.</span></span> <span data-ttu-id="bb2a9-1584">그러나 잘못 사용 <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> 하면 응용 프로그램이 실패 또는 액세스 위반이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1584">However, improper use of <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> may cause your application to fail, or may cause an access violation.</span></span>  
  
 <span data-ttu-id="bb2a9-1585">응용 프로그램 도메인에서 관리 되는 코드는 COM 구성 요소를 나타내는 RCW에 유지 하는 시나리오를 고려해 보세요.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1585">Consider a scenario in which managed code in an application domain is holding onto an RCW that represents a COM component.</span></span> <span data-ttu-id="bb2a9-1586">호출 하는 경우는 <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> RCW에서 관리 코드의 RCW에 액세스할 수 없습니다 메서드와 시킵니다는 <xref:System.Runtime.InteropServices.InvalidComObjectException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1586">If you call the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method on the RCW, the managed code will be unable to access the RCW and will raise an <xref:System.Runtime.InteropServices.InvalidComObjectException> exception.</span></span>  
  
 <span data-ttu-id="bb2a9-1587">더 심각한 오류는 RCW에 대 한 호출 RCW를 놓을 때 실행 되는 경우에 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1587">A more serious error may occur if a call to the RCW is executing when the RCW is released.</span></span> <span data-ttu-id="bb2a9-1588">이 경우 호출을 수행 하는 스레드가 액세스 위반이 발생 하면 된다는 가능성이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1588">In this case, there is a good chance that the thread making the call will cause an access violation.</span></span> <span data-ttu-id="bb2a9-1589">그러나 프로세스 메모리 손상 될 수 및 디버그 하기 매우 어려운 이유로 실패할 때까지 실행 하는 프로세스를 계속할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1589">However, process memory may become corrupted, and the process may continue to run until it fails for reasons that are very difficult to debug.</span></span>  
  
 <span data-ttu-id="bb2a9-1590">이 위험에 사용 되는 COM 구성 요소는 다음과 같은 이유로 단일 때 더 심해 집니다. COM을 호출 하 여 COM 구성 요소를 활성화 하는 CLR [CoCreateInstance](https://go.microsoft.com/fwlink/?LinkID=142894) 단일 COM 구성 요소에 대해 호출 될 때마다 동일한 인터페이스 포인터를 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1590">This risk is compounded when the COM component that is being used is a singleton, for the following reason: The CLR activates COM components by calling the COM [CoCreateInstance](https://go.microsoft.com/fwlink/?LinkID=142894) function, which returns the same interface pointer every time it is called for singleton COM components.</span></span> <span data-ttu-id="bb2a9-1591">따라서 개별적이 고 독립적인 응용 프로그램 도메인에서 관리 되는 코드 조각을 사용할 수 있습니다 동일한 RCW는 단일 COM 구성 요소에 대 한 경우 및 하나의 호출을 <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> COM 구성 요소에서 메서드를 다른가 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1591">Thus, separate and independent pieces of managed code in an application domain can be using the same RCW for a singleton COM component, and if either one calls the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method on the COM component, the other will be broken.</span></span>  
  
 <span data-ttu-id="bb2a9-1592">따라서 사용 된 <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> 절대적으로 필요한 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1592">Therefore, use the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> only if it is absolutely required.</span></span> <span data-ttu-id="bb2a9-1593">COM 구성 요소를 결정된 한 번에 해제 되도록 하려면이 메서드를 호출 하려는 경우 사용을 고려 합니다 <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1593">If you want to call this method to ensure that a COM component is released at a determined time, consider using the <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method instead.</span></span> <span data-ttu-id="bb2a9-1594"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> CLR가 다시 입력 횟수에 관계 없이 기본 COM 구성 요소를 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1594"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> will release the underlying COM component regardless of how many times it has re-entered the CLR.</span></span> <span data-ttu-id="bb2a9-1595">내부 참조 횟수 RCW는 COM 구성 요소에는 다시 CLR 들어갈 때마다 1 씩 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1595">The internal reference count of the RCW is incremented by one every time the COM component re-enters the CLR.</span></span> <span data-ttu-id="bb2a9-1596">따라서 호출할 수 있습니다는 <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> 값이 반환 될 때까지 루프에서 메서드는 0입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1596">Therefore, you could call the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method in a loop until the value returned is zero.</span></span> <span data-ttu-id="bb2a9-1597">동일한 결과를 달성할 수는 <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1597">This achieves the same result as the <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1598"><paramref name="o" />가 올바른 개체 범위가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1598"><paramref name="o" /> is not a valid COM object.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="bb2a9-1599"><paramref name="o" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1599"><paramref name="o" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1600">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1600">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1601">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1601">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)" />
        <altmember cref="T:System.NullReferenceException" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseThreadCache">
      <MemberSignature Language="C#" Value="public static void ReleaseThreadCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseThreadCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReleaseThreadCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseThreadCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseThreadCache();" />
      <MemberSignature Language="F#" Value="static member ReleaseThreadCache : unit -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ReleaseThreadCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API did not perform any operation and will be removed in future versions of the CLR.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb2a9-1602">스레드 캐시를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1602">Releases the thread cache.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1603">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1603">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1604">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1604">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToBSTR (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToBSTR(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToBSTR (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToBSTR(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToBSTR : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToBSTR s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-1605">복사할 관리되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1605">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1606">관리되지 않는 [이진 문자열(BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx)을 할당하고 관리되는 <see cref="T:System.Security.SecureString" /> 개체의 내용을 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1606">Allocates an unmanaged [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) and copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into it.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1607">관리되지 않는 메모리에서 <paramref name="s" /> 매개 변수가 복사된 주소 또는 null 개체가 제공된 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1607">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1608"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> 경우 혼합 코드와 비관리 코드 또는 메서드는 사용자 지정 마샬링에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1608">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1609">이 메서드는 문자열에 필요한 관리 되지 않는 메모리를 할당 하기 때문에 항상 무료 인 합니다 `BSTR` 를 호출 하 여 완료 되 면를 <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1609">Because this method allocates the unmanaged memory required for a string, always free the `BSTR` when finished by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1610"><paramref name="s" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1610">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bb2a9-1611">현재 컴퓨터에서 Windows 2000 서비스 팩 3 이상을 실행하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1611">The current computer is not running Windows 2000 Service Pack 3 or later.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-1612">사용 가능한 메모리가 부족한 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1612">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1613">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1613">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1614">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1614">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <block subset="none" type="usage"><para><span data-ttu-id="bb2a9-1615">이 방법은 이상 또는 Windows 2000 서비스 팩 3을 실행 하는 컴퓨터에만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1615">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemAnsi(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToCoTaskMemAnsi : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-1616">복사할 관리되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1616">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1617">관리되는 <see cref="T:System.Security.SecureString" /> 개체의 내용을 관리되지 않는 COM 작업 할당자에서 할당된 메모리 블록으로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1617">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1618">관리되지 않는 메모리에서 <paramref name="s" /> 매개 변수가 복사된 주소 또는 null 개체가 제공된 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1618">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1619"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> 경우 혼합 코드와 비관리 코드 또는 메서드는 사용자 지정 마샬링에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1619">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1620">이 메서드는 문자열에 필요한 관리 되지 않는 메모리를 할당 하기 때문에 항상 사용 가능한 메모리를 호출 하 여 <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1620">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>.</span></span> <span data-ttu-id="bb2a9-1621">문자열의 문자를 ANSI 문자로 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1621">The characters of the string are copied as ANSI characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1622">다음 예제에서는 합니다 <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> 마샬링할의 내용을 해독 하는 메서드는 <xref:System.Security.SecureString> 관리 되지 않는 메모리 블록에는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1622">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="bb2a9-1623">사용 하 여는 <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> 메서드를 비우고 관리 되지 않는 블록을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1623">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1624"><paramref name="s" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1624">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bb2a9-1625">현재 컴퓨터에서 Windows 2000 서비스 팩 3 이상을 실행하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1625">The current computer is not running Windows 2000 Service Pack 3 or later.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-1626">사용 가능한 메모리가 부족한 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1626">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1627">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1627">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1628">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1628">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <block subset="none" type="usage"><para><span data-ttu-id="bb2a9-1629">이 방법은 이상 또는 Windows 2000 서비스 팩 3을 실행 하는 컴퓨터에만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1629">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemUnicode(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToCoTaskMemUnicode : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-1630">복사할 관리되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1630">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1631">관리되는 <see cref="T:System.Security.SecureString" /> 개체의 내용을 관리되지 않는 COM 작업 할당자에서 할당된 메모리 블록으로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1631">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1632">관리되지 않는 메모리에서 <paramref name="s" /> 매개 변수가 복사된 주소 또는 null 개체가 제공된 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1632">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1633"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> 경우 혼합 코드와 비관리 코드 또는 메서드는 사용자 지정 마샬링에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1633">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1634">이 메서드는 문자열에 필요한 관리 되지 않는 메모리를 할당 하기 때문에 항상 사용 가능한 메모리를 호출 하 여는 <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1634">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method.</span></span> <span data-ttu-id="bb2a9-1635">문자열의 문자는 유니코드 문자로 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1635">The characters of the string are copied as Unicode characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1636">다음 예제에서는 합니다 <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> 마샬링할의 내용을 해독 하는 메서드는 <xref:System.Security.SecureString> 관리 되지 않는 메모리 블록에는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1636">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="bb2a9-1637">사용 하 여는 <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> 메서드를 비우고 관리 되지 않는 블록을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1637">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1638"><paramref name="s" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1638">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bb2a9-1639">현재 컴퓨터에서 Windows 2000 서비스 팩 3 이상을 실행하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1639">The current computer is not running Windows 2000 Service Pack 3 or later.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-1640">사용 가능한 메모리가 부족한 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1640">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1641">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1641">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1642">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1642">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <block subset="none" type="usage"><para><span data-ttu-id="bb2a9-1643">이 방법은 이상 또는 Windows 2000 서비스 팩 3을 실행 하는 컴퓨터에만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1643">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocAnsi(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToGlobalAllocAnsi : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-1644">복사할 관리되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1644">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1645">복사할 때 ANSI 형식으로 변환하여 관리되는 <see cref="T:System.Security.SecureString" />의 내용을 관리되지 않는 메모리로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1645">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> into unmanaged memory, converting into ANSI format as it copies.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1646">관리되지 않는 메모리에서 <paramref name="s" /> 매개 변수가 복사된 주소이거나 null 개체가 제공된 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1646">The address, in unmanaged memory, to where the <paramref name="s" /> parameter was copied, or 0 if a null object was supplied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1647"><xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> 경우 혼합 코드와 비관리 코드 또는 메서드는 사용자 지정 마샬링에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1647">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1648">이 메서드는 문자열에 필요한 관리 되지 않는 메모리를 할당 하기 때문에 항상 사용 가능한 메모리를 호출 하 여는 <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1648">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1649">다음 예제에서는 합니다 <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> 마샬링할의 내용을 해독 하는 메서드는 <xref:System.Security.SecureString> 관리 되지 않는 메모리 블록에는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1649">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="bb2a9-1650">사용 하 여는 <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> 메서드를 비우고 관리 되지 않는 블록을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1650">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1651"><paramref name="s" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1651">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bb2a9-1652">현재 컴퓨터에서 Windows 2000 서비스 팩 3 이상을 실행하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1652">The current computer is not running Windows 2000 Service Pack 3 or later.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-1653">사용 가능한 메모리가 부족한 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1653">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1654">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1654">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1655">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1655">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <block subset="none" type="usage"><para><span data-ttu-id="bb2a9-1656">이 방법은 이상 또는 Windows 2000 서비스 팩 3을 실행 하는 컴퓨터에만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1656">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocUnicode(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToGlobalAllocUnicode : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-1657">복사할 관리되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1657">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1658">관리되는 <see cref="T:System.Security.SecureString" /> 개체의 콘텐츠를 관리되지 않는 메모리로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1658">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1659">관리되지 않는 메모리에서 <paramref name="s" />가 복사된 주소이거나 <paramref name="s" />가 길이가 0인 <see cref="T:System.Security.SecureString" /> 개체인 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1659">The address, in unmanaged memory, where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is a <see cref="T:System.Security.SecureString" /> object whose length is 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1660"><xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> 메서드는 관리 코드와 비관리 코드를 혼합 하는 경우 또는 사용자 지정 마샬링 사용에 대 한 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1660">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1661">이 메서드는 문자열에 필요한 관리 되지 않는 메모리를 할당 하기 때문에 항상 사용 가능한 메모리를 호출 하 여는 <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1661">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1662">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> 메서드는 관리 되지 않는 `LogonUser` 가장을 수행 하는 함수를 <xref:System.Security.SecureString> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1662">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method with the unmanaged `LogonUser` function to perform impersonation with the <xref:System.Security.SecureString> class.</span></span> <span data-ttu-id="bb2a9-1663">이 예제에서는 다음 사용을 <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> 메서드를 비우고 관리 되지 않는 문자열 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1663">The example then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method to zero out and free the unmanaged string reference.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1664"><paramref name="s" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1664">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bb2a9-1665">현재 컴퓨터에서 Windows 2000 서비스 팩 3 이상을 실행하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1665">The current computer is not running Windows 2000 Service Pack 3 or later.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-1666">사용 가능한 메모리가 부족한 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1666">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1667">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1667">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1668">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1668">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <block subset="none" type="usage"><para><span data-ttu-id="bb2a9-1669">이 방법은 이상 또는 Windows 2000 서비스 팩 3을 실행 하는 컴퓨터에만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1669">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SetComObjectData">
      <MemberSignature Language="C#" Value="public static bool SetComObjectData (object obj, object key, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetComObjectData(object obj, object key, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetComObjectData (obj As Object, key As Object, data As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetComObjectData(System::Object ^ obj, System::Object ^ key, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetComObjectData : obj * obj * obj -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.SetComObjectData (obj, key, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="key" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="bb2a9-1670">데이터를 저장할 COM 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1670">The COM object in which to store the data.</span></span></param>
        <param name="key"><span data-ttu-id="bb2a9-1671">데이터를 저장할 COM 개체의 내부 해시 테이블에 있는 키입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1671">The key in the internal hash table of the COM object in which to store the data.</span></span></param>
        <param name="data"><span data-ttu-id="bb2a9-1672">설정할 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1672">The data to set.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1673">지정된 COM 개체에서 지정된 키가 참조하는 데이터를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1673">Sets data referenced by the specified key in the specified COM object.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1674">데이터가 성공적으로 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1674"><see langword="true" /> if the data was set successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1675">에 래핑된 COM 개체를 모두를 [런타임 호출 가능 래퍼](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW)는 연결 된 해시 테이블을 <xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A> 데이터를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1675">All COM objects wrapped in a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) have an associated hash table, to which <xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A> adds data.</span></span> <span data-ttu-id="bb2a9-1676"><xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A?displayProperty=nameWithType> 해시 테이블에서 데이터를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1676"><xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A?displayProperty=nameWithType> retrieves data from the hash table.</span></span> <span data-ttu-id="bb2a9-1677">코드에서 두 방법 중 하나를 호출 하지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1677">You should never have to call either method from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1678"><paramref name="obj" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1678"><paramref name="obj" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-1679">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1679">-or-</span></span> 
 <span data-ttu-id="bb2a9-1680"><paramref name="key" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1680"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1681"><paramref name="obj" />가 COM 개체가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1681"><paramref name="obj" /> is not a COM object.</span></span>  
  
<span data-ttu-id="bb2a9-1682">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1682">-or-</span></span> 
 <span data-ttu-id="bb2a9-1683"><paramref name="obj" />가 [!INCLUDE[wrt](~/includes/wrt-md.md)] 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1683"><paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1684">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1684">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1685">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1685">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SizeOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1686">클래스의 관리되지 않는 크기(바이트)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1686">Returns the unmanaged size, in bytes, of a class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SizeOf">
      <MemberSignature Language="C#" Value="public static int SizeOf (object structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf(object structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf (structure As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SizeOf(System::Object ^ structure);" />
      <MemberSignature Language="F#" Value="static member SizeOf : obj -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf structure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("SizeOf(Object) may be unavailable in future releases. Instead, use SizeOf&lt;T&gt;(). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296514")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="structure"><span data-ttu-id="bb2a9-1687">크기가 반환되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1687">The object whose size is to be returned.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1688">개체의 관리되지 않는 크기(바이트)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1688">Returns the unmanaged size of an object in bytes.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1689">비관리 코드에서 지정된 개체의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1689">The size of the specified object in unmanaged code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1690">이 메서드는 boxed 값 형식 또는 참조 형식이 될 수 있는 구조체의 인스턴스를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1690">This method accepts an instance of a structure, which can be a reference type or a boxed value type.</span></span> <span data-ttu-id="bb2a9-1691">레이아웃이 sequential 또는 explicit 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1691">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="bb2a9-1692">반환 되는 크기는 관리 되지 않는 개체의 크기가입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1692">The size returned is the size of the unmanaged object.</span></span> <span data-ttu-id="bb2a9-1693">개체의 비관리 및 관리 되는 크기를 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1693">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="bb2a9-1694">문자 형식의 크기는 영향을 받지는 <xref:System.Runtime.InteropServices.CharSet> 클래스에 적용 되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1694">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 <span data-ttu-id="bb2a9-1695">사용할 수는 <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> 메서드를 사용 하 여 할당할 관리 되지 않는 메모리 양을 확인 합니다 <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> 및 <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1695">You can use the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method to determine how much unmanaged memory to allocate using the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> and <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1696">다음 예제에서는 관리 되는 구조를 만듭니다, 그리고 관리 되지 않는 메모리 전송 및 관리 되는 메모리에 다시 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1696">The following example creates a managed structure, transfers it to unmanaged memory, and then transfers it back to managed memory.</span></span> <span data-ttu-id="bb2a9-1697">이 예제에서는 <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> 할당할 관리 되지 않는 메모리 양을 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1697">This example uses the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method to determine how much unmanaged memory to allocate.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1698"><paramref name="structure" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1698">The <paramref name="structure" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="SizeOf">
      <MemberSignature Language="C#" Value="public static int SizeOf (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SizeOf(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member SizeOf : Type -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("SizeOf(Type) may be unavailable in future releases. Instead, use SizeOf&lt;T&gt;(). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296515")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="bb2a9-1699">크기가 반환되는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1699">The type whose size is to be returned.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1700">관리되지 않는 형식의 크기(바이트)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1700">Returns the size of an unmanaged type in bytes.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1701">비관리 코드에서 지정된 형식의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1701">The size of the specified type in unmanaged code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1702">구조를 없는 경우이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1702">You can use this method when you do not have a structure.</span></span> <span data-ttu-id="bb2a9-1703">레이아웃이 sequential 또는 explicit 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1703">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="bb2a9-1704">반환 되는 크기는 관리 되지 않는 형식의 크기가입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1704">The size returned is the size of the unmanaged type.</span></span> <span data-ttu-id="bb2a9-1705">개체의 비관리 및 관리 되는 크기를 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1705">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="bb2a9-1706">문자 형식의 크기는 영향을 받지는 <xref:System.Runtime.InteropServices.CharSet> 클래스에 적용 되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1706">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1707">다음 예제에서는 <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1707">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method.</span></span> <span data-ttu-id="bb2a9-1708">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Runtime.InteropServices.Marshal> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1708">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#3](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#3)]
 [!code-csharp[Marshal#3](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#3)]
 [!code-vb[Marshal#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1709"><paramref name="t" /> 매개 변수는 제네릭 형식 정의입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1709">The <paramref name="t" /> parameter is a generic type definition.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1710"><paramref name="t" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1710">The <paramref name="t" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf();" />
      <MemberSignature Language="F#" Value="static member SizeOf : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="bb2a9-1711">크기가 반환되는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1711">The type whose size is to be returned.</span></span></typeparam>
        <summary><span data-ttu-id="bb2a9-1712">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1712">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="bb2a9-1713">관리되지 않는 형식의 크기(바이트)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1713">Returns the size of an unmanaged type in bytes.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1714"><typeparamref name="T" /> 제네릭 형식 매개 변수로 지정된 형식의 크기(바이트 단위)입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1714">The size, in bytes, of the type that is specified by the <typeparamref name="T" /> generic type parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1715">구조를 없는 경우이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1715">You can use this method when you do not have a structure.</span></span> <span data-ttu-id="bb2a9-1716">레이아웃이 sequential 또는 explicit 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1716">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="bb2a9-1717">반환 되는 크기는 관리 되지 않는 형식의 크기가입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1717">The size returned is the size of the unmanaged type.</span></span> <span data-ttu-id="bb2a9-1718">개체의 비관리 및 관리 되는 크기를 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1718">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="bb2a9-1719">문자 형식의 크기는 영향을 받지는 <xref:System.Runtime.InteropServices.CharSet> 클래스에 적용 되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1719">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; (T structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;(!!T structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) (structure As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf(T structure);" />
      <MemberSignature Language="F#" Value="static member SizeOf : 'T -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf structure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="structure" Type="T" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bb2a9-1720"><paramref name="structure" /> 매개 변수의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1720">The type of the <paramref name="structure" /> parameter.</span></span></typeparam>
        <param name="structure"><span data-ttu-id="bb2a9-1721">크기가 반환되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1721">The object whose size is to be returned.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1722">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1722">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="bb2a9-1723">지정된 형식의 개체의 관리되지 않은 크기를 반환합니다(바이트 단위).</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1723">Returns the unmanaged size of an object of a specified type in bytes.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1724">비관리 코드에서 지정된 개체의 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1724">The size, in bytes, of the specified object in unmanaged code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1725">이 메서드는 boxed 값 형식 또는 참조 형식이 될 수 있는 구조체의 인스턴스를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1725">This method accepts an instance of a structure, which can be a reference type or a boxed value type.</span></span> <span data-ttu-id="bb2a9-1726">레이아웃이 sequential 또는 explicit 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1726">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="bb2a9-1727">반환 되는 크기는 관리 되지 않는 개체의 크기가입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1727">The size returned is the size of the unmanaged object.</span></span> <span data-ttu-id="bb2a9-1728">개체의 비관리 및 관리 되는 크기를 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1728">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="bb2a9-1729">문자 형식의 크기는 영향을 받지는 <xref:System.Runtime.InteropServices.CharSet> 클래스에 적용 되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1729">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 <span data-ttu-id="bb2a9-1730">사용할 수는 <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> 메서드를 사용 하 여 할당을 관리 되지 않는 메모리 양을 확인 합니다 <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> 및 <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1730">You can use the <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> method to determine how much unmanaged memory to allocate by using the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> and <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb2a9-1731"><paramref name="structure" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1731">The <paramref name="structure" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StringToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr StringToBSTR (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToBSTR(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToBSTR (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToBSTR(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToBSTR : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToBSTR s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-1732">복사할 관리되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1732">The managed string to be copied.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1733">[BSTR](https://msdn.microsoft.com/library/ms221069.aspx)을 할당하고 관리되는 <see cref="T:System.String" />의 내용을 그 안에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1733">Allocates a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) and copies the contents of a managed <see cref="T:System.String" /> into it.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1734"><see langword="BSTR" />에 대한 관리되지 않는 포인터 또는 <paramref name="s" />가 null인 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1734">An unmanaged pointer to the <see langword="BSTR" />, or 0 if <paramref name="s" /> is null.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1735"><xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A> 사용자 지정 마샬링 또는 관리 및 비관리 코드를 혼합 하는 경우 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1735"><xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1736">이 메서드는 문자열에 필요한 관리 되지 않는 메모리를 할당 하기 때문에 항상 무료 인 합니다 `BSTR` 를 호출 하 여 완료 되 면 <xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1736">Because this method allocates the unmanaged memory required for a string, always free the `BSTR` when finished by calling <xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bb2a9-1737">이 메서드는의 반대 되는 기능을 제공 <xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1737">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-1738">사용 가능한 메모리가 부족한 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1738">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb2a9-1739"><paramref name="s" />의 길이가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1739">The length for <paramref name="s" /> is out of range.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1740">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1740">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1741">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1741">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemAnsi (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemAnsi(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemAnsi (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemAnsi(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemAnsi : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-1742">복사할 관리되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1742">A managed string to be copied.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1743">관리되는 <see cref="T:System.String" />의 내용을 관리되지 않는 COM 작업 할당자에서 할당된 메모리 블록으로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1743">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1744">문자열에 할당된 메모리 블록에 대한 포인터를 나타내는 정수이거나 <paramref name="s" />가 <see langword="null" />인 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1744">An integer representing a pointer to the block of memory allocated for the string, or 0 if <paramref name="s" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1745"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A> 사용자 지정 마샬링 또는 관리 및 비관리 코드를 혼합 하는 경우 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1745"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1746">이 메서드는 문자열에 필요한 관리 되지 않는 메모리를 할당 하기 때문에 항상 사용 가능한 메모리를 호출 하 여 <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1746">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span> <span data-ttu-id="bb2a9-1747">이 메서드는의 반대 되는 기능을 제공 <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1747">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bb2a9-1748">문자열의 문자를 ANSI 문자로 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1748">The characters of the string are copied as ANSI characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-1749">사용 가능한 메모리가 부족한 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1749">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb2a9-1750"><paramref name="s" /> 매개 변수가 운영 체제에서 허용되는 최대 길이를 초과하는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1750">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1751">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1751">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1752">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1752">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemAuto">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemAuto (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemAuto(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemAuto (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemAuto(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemAuto : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-1753">복사할 관리되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1753">A managed string to be copied.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1754">관리되는 <see cref="T:System.String" />의 내용을 관리되지 않는 COM 작업 할당자에서 할당된 메모리 블록으로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1754">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1755">할당된 메모리 블록이거나 <paramref name="s" />가 <see langword="null" />인 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1755">The allocated memory block, or 0 if <paramref name="s" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1756"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A> 관리 및 비관리 코드를 혼합 하는 경우 사용자 지정 마샬링 또는 용도로 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1756"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1757">이 메서드는 문자열에 필요한 관리 되지 않는 메모리를 할당 하기 때문에 항상 사용 가능한 메모리를 호출 하 여 <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1757">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span> <span data-ttu-id="bb2a9-1758">이 메서드는의 반대 되는 기능을 제공 <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1758">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bb2a9-1759">문자열의 문자 코드가 실행 되는 운영 체제에 따라 ANSI 또는 유니코드 문자로 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1759">The characters of the string are copied as either ANSI or Unicode characters, depending on the operating system where the code is executing.</span></span> <span data-ttu-id="bb2a9-1760">Windows 98에서 문자를 ANSI 문자로 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1760">On Windows 98, the characters are copied as ANSI characters.</span></span> <span data-ttu-id="bb2a9-1761">Windows NT 4.0, Windows 2000, Windows XP 및 Windows Server 2003 제품군에는 문자는 유니코드 문자로 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1761">On Windows NT 4.0, Windows 2000, Windows XP, and the Windows Server 2003 family, the characters are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-1762">사용 가능한 메모리가 부족한 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1762">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb2a9-1763"><paramref name="s" />의 길이가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1763">The length for <paramref name="s" /> is out of range.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1764">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1764">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1765">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1765">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemUni">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemUni (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemUni(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemUni (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemUni(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemUni : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-1766">복사할 관리되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1766">A managed string to be copied.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1767">관리되는 <see cref="T:System.String" />의 내용을 관리되지 않는 COM 작업 할당자에서 할당된 메모리 블록으로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1767">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1768">문자열에 할당된 메모리 블록에 대한 포인터를 나타내는 정수이거나 s가 <see langword="null" />인 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1768">An integer representing a pointer to the block of memory allocated for the string, or 0 if s is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1769"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A> 관리 및 비관리 코드를 혼합 하는 경우 사용자 지정 마샬링 또는 용도로 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1769"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1770">이 메서드는 문자열에 필요한 관리 되지 않는 메모리를 할당 하기 때문에 항상 사용 가능한 메모리를 호출 하 여 <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1770">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bb2a9-1771">이 메서드는의 반대 되는 기능을 제공 <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1771">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bb2a9-1772">문자열의 문자는 유니코드 문자로 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1772">The characters of the string are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb2a9-1773"><paramref name="s" /> 매개 변수가 운영 체제에서 허용되는 최대 길이를 초과하는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1773">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-1774">사용 가능한 메모리가 부족한 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1774">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1775">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1775">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1776">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1776">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemUTF8">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemUTF8 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemUTF8(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemUTF8 (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemUTF8(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemUTF8 : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8 s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalAnsi (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalAnsi(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalAnsi (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalAnsi(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToHGlobalAnsi : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-1777">복사할 관리되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1777">A managed string to be copied.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1778">복사할 때 ANSI 형식으로 변환하여 관리되는 <see cref="T:System.String" />의 내용을 관리되지 않는 메모리로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1778">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format as it copies.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1779">관리되지 않는 메모리에서 <paramref name="s" />가 복사된 주소이거나 <paramref name="s" />가 <see langword="null" />인 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1779">The address, in unmanaged memory, to where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1780"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> 사용자 지정 마샬링 또는 관리 및 비관리 코드를 혼합 하는 경우 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1780"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1781">이 메서드는 문자열에 필요한 관리 되지 않는 메모리를 할당 하기 때문에 항상 사용 가능한 메모리를 호출 하 여 <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1781">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="bb2a9-1782"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> 반대 기능을 제공 <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1782"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bb2a9-1783">이 메서드는 포함 된 null 문자를 복사 하 고 null 종결 문자 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1783">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1784">다음 예제에서는 관리 되는 콘텐츠를 변환 하는 방법에 설명 <xref:System.String> 관리 되지 않는 메모리 클래스 및 다음 수행 하는 경우 관리 되지 않는 메모리를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1784">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/CPP/stringtohglobalansi.cpp#1)]
 [!code-csharp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/cs/stringtohglobalansi.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-1785">사용 가능한 메모리가 부족한 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1785">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb2a9-1786"><paramref name="s" /> 매개 변수가 운영 체제에서 허용되는 최대 길이를 초과하는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1786">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1787">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1787">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1788">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1788">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalAuto">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalAuto (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalAuto(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalAuto (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalAuto(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToHGlobalAuto : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToHGlobalAuto s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-1789">복사할 관리되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1789">A managed string to be copied.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1790">필요할 때 ANSI 형식으로 변환하여 관리되는 <see cref="T:System.String" />의 내용을 관리되지 않는 메모리로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1790">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format if required.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1791">관리되지 않는 메모리에서 문자열이 복사된 주소이거나 <paramref name="s" />가 <see langword="null" />인 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1791">The address, in unmanaged memory, to where the string was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1792"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A> 관리 및 비관리 코드를 혼합 하는 경우 사용자 지정 마샬링 또는 용도로 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1792"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1793">이 메서드는 문자열에 필요한 관리 되지 않는 메모리를 할당 하기 때문에 항상 사용 가능한 메모리를 호출 하 여 <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1793">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="bb2a9-1794">이 메서드는의 반대 되는 기능을 제공 <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1794">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bb2a9-1795">이 메서드는 포함 된 null 문자를 복사 하 고 null 종결 문자 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1795">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1796">다음 예제에서는 관리 되는 콘텐츠를 변환 하는 방법에 설명 <xref:System.String> 관리 되지 않는 메모리 클래스 및 다음 수행 하는 경우 관리 되지 않는 메모리를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1796">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAuto#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAuto/CPP/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-1797">사용 가능한 메모리가 부족한 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1797">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1798">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1798">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1799">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1799">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalUni">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalUni (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalUni(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalUni (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalUni(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToHGlobalUni : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToHGlobalUni s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-1800">복사할 관리되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1800">A managed string to be copied.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1801">관리되는 <see cref="T:System.String" />의 내용을 관리되지 않는 메모리로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1801">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1802">관리되지 않는 메모리에서 <paramref name="s" />가 복사된 주소이거나 <paramref name="s" />가 <see langword="null" />인 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1802">The address, in unmanaged memory, to where the <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1803"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A> 관리 및 비관리 코드를 혼합 하는 경우 사용자 지정 마샬링 또는 용도로 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1803"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="bb2a9-1804">이 메서드는 문자열에 필요한 관리 되지 않는 메모리를 할당 하기 때문에 항상 사용 가능한 메모리를 호출 하 여 <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1804">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="bb2a9-1805">이 메서드는의 반대 되는 기능을 제공 <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1805">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bb2a9-1806">이 메서드는 포함 된 null 문자를 복사 하 고 null 종결 문자 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1806">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="bb2a9-1807">메서드가 충분한 네이티브 힙 메모리를 할당할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1807">The method could not allocate enough native heap memory.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb2a9-1808"><paramref name="s" /> 매개 변수가 운영 체제에서 허용되는 최대 길이를 초과하는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1808">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1809">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1809">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1810">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1810">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StructureToPtr">
      <MemberSignature Language="C#" Value="public static void StructureToPtr (object structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StructureToPtr(object structure, native int ptr, bool fDeleteOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StructureToPtr (structure As Object, ptr As IntPtr, fDeleteOld As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StructureToPtr(System::Object ^ structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="F#" Value="static member StructureToPtr : obj * nativeint * bool -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.StructureToPtr (structure, ptr, fDeleteOld)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("StructureToPtr(Object, IntPtr, Boolean) may be unavailable in future releases. Instead, use StructureToPtr&lt;T&gt;(T, IntPtr, Boolean). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296516")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="System.Object" />
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="fDeleteOld" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="structure"><span data-ttu-id="bb2a9-1811">마샬링될 데이터가 있는 관리되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1811">A managed object that holds the data to be marshaled.</span></span> <span data-ttu-id="bb2a9-1812">이 개체는 구조체이거나 형식이 지정된 클래스의 인스턴스여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1812">This object must be a structure or an instance of a formatted class.</span></span></param>
        <param name="ptr"><span data-ttu-id="bb2a9-1813">관리되지 않는 메모리 블록에 대한 포인터로서 이 메서드가 호출되기 전에 할당되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1813">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span></span></param>
        <param name="fDeleteOld"><span data-ttu-id="bb2a9-1814">이 메서드가 데이터를 복사하기 전에 <paramref name="ptr" /> 매개 변수에 대해 <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> 메서드를 호출하려면 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1814"><see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> method on the <paramref name="ptr" /> parameter before this method copies the data.</span></span> <span data-ttu-id="bb2a9-1815">블록에는 유효한 데이터가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1815">The block must contain valid data.</span></span> <span data-ttu-id="bb2a9-1816">메모리 블록에 이미 데이터가 포함되어 있을 때 <see langword="false" />를 전달하면 메모리 누수가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1816">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1817">관리되는 개체의 데이터를 관리되지 않는 메모리 블록으로 마샬링합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1817">Marshals data from a managed object to an unmanaged block of memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1818">경우 `structure` 값 형식이 boxed 하거나 unboxed 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1818">If `structure` is a value type, it can be boxed or unboxed.</span></span> <span data-ttu-id="bb2a9-1819">Boxed 인 경우 없기 boxed 복사 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1819">If it is boxed, it is unboxed before copying.</span></span>  
  
 <span data-ttu-id="bb2a9-1820">서식이 지정 된 클래스는 해당 레이아웃이 지정 된 참조 형식 합니다 <xref:System.Runtime.InteropServices.StructLayoutAttribute> 특성을 하나로 <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> 또는 <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1820">A formatted class is a reference type whose layout is specified by the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute, as either <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> or <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bb2a9-1821"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> 내용을 복사 합니다 `structure` 미리 할당 된 메모리 블록에는 `ptr` 매개 변수를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1821"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> copies the contents of `structure` to the pre-allocated block of memory that the `ptr` parameter points to.</span></span> <span data-ttu-id="bb2a9-1822">하는 경우 `structure` COM 인터페이스 포인터를 마샬링하는 참조 형식을 포함 (인터페이스, 레이아웃, 없이 클래스 및 <xref:System.Object?displayProperty=nameWithType>), 관리 되는 개체 참조 횟수를 사용 하 여 활성 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1822">If `structure` contains reference types that marshal to COM interface pointers (interfaces, classes without layout, and <xref:System.Object?displayProperty=nameWithType>), the managed objects are kept alive with reference counts.</span></span> <span data-ttu-id="bb2a9-1823">다른 모든 참조 형식 (예: 문자열 및 배열) 복사본으로 마샬링됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1823">All other reference types (for example, strings and arrays) are marshaled to copies.</span></span> <span data-ttu-id="bb2a9-1824">이러한 관리 되거나 관리 되지 않는 개체를 해제 하려면를 <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A?displayProperty=nameWithType> 메모리 블록을 해제 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1824">To release these managed or unmanaged objects, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A?displayProperty=nameWithType> method before you free the memory block.</span></span>  
  
 <span data-ttu-id="bb2a9-1825">사용 하는 경우는 <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> 나중에 메모리 블록에 다른 인스턴스로 복사 하는 방법 지정 `true` 에 대 한 `fDeleteOld` 이전 인스턴스에 대 한 참조 형식에 대 한 계산 참조를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1825">If you use the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method to copy a different instance to the memory block at a later time, specify `true` for `fDeleteOld` to remove reference counts for reference types in the previous instance.</span></span> <span data-ttu-id="bb2a9-1826">이 고, 그렇지 관리 되는 참조 형식과 관리 되지 않는 복사본을 효과적으로 유출지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1826">Otherwise, the managed reference typesand unmanaged copies are effectively leaked.</span></span>  
  
 <span data-ttu-id="bb2a9-1827">사용에 대 한 전반적인 패턴 <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> 는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1827">The overall pattern for using <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> is as follows:</span></span>  
  
1.  <span data-ttu-id="bb2a9-1828">첫 번째 호출에서는 <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> 메모리 블록 할당 된 후 메서드가 `fDeleteOld` 이어야 합니다 `false`지우려면 내용이 있기 때문에, 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1828">On the first call to the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method after a memory block has been allocated, `fDeleteOld` must be `false`, because there are no contents to clear.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="bb2a9-1829">지정할 `true` 에 대 한 `fDeleteOld` 블록 유효한 데이터를 포함 하는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1829">Specify `true` for `fDeleteOld` only if the block contains valid data.</span></span>  
  
2.  <span data-ttu-id="bb2a9-1830">메모리 블록에 다른 인스턴스를 복사 하 고 개체 참조 형식을 포함 하는 경우 `fDeleteOld` 있어야 `true` 무료 이전 내용을 참조 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1830">If you copy a different instance to the memory block, and the object contains reference types, `fDeleteOld` must be `true` to free reference types in the old contents.</span></span>  
  
3.  <span data-ttu-id="bb2a9-1831">참조 형식을 포함 하는 개체를 호출 해야 합니다 <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> 메모리 블록을 해제 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1831">If the object contains reference types, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> method before you free the memory block.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb2a9-1832">복사 하는 대신 기존 구조를 고정 하려면 사용는 <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> 구조에 대 한 고정 된 핸들을 만들 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1832">To pin an existing structure instead of copying it, use the <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> type to create a pinned handle for the structure.</span></span> <span data-ttu-id="bb2a9-1833">고정 하는 방법에 대 한 세부 정보를 참조 하세요 [복사 및 고정](~/docs/framework/interop/copying-and-pinning.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1833">For details on how to pin, see [Copying and Pinning](~/docs/framework/interop/copying-and-pinning.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1834">다음 예제에서는 관리 되는 구조를 만들고, 관리 되지 않는 메모리를 사용 하 여 전송 합니다 <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> 메서드를 사용 하 여 관리 되는 메모리에 다시 다음 전송은 <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1834">The following example creates a managed structure, transfers it to unmanaged memory using the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method, and then transfers it back to managed memory using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1835"><paramref name="structure" />가 형식이 지정된 클래스가 아닌 참조 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1835"><paramref name="structure" /> is a reference type that is not a formatted class.</span></span>  
  
<span data-ttu-id="bb2a9-1836">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1836">-or-</span></span> 
 <span data-ttu-id="bb2a9-1837"><paramref name="structure" />은 제네릭 형식(.NET Framework 4.5 및 이전 버전에만 해당)의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1837"><paramref name="structure" /> is an instance of a generic type (in the .NET Framework 4.5 and earlier versions only).</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1838">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1838">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1839">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1839">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="StructureToPtr&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void StructureToPtr&lt;T&gt; (T structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StructureToPtr&lt;T&gt;(!!T structure, native int ptr, bool fDeleteOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StructureToPtr(Of T) (structure As T, ptr As IntPtr, fDeleteOld As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void StructureToPtr(T structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="F#" Value="static member StructureToPtr : 'T * nativeint * bool -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.StructureToPtr (structure, ptr, fDeleteOld)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="structure" Type="T" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ptr" Type="System.IntPtr" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fDeleteOld" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bb2a9-1840">관리되는 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1840">The type of the managed object.</span></span></typeparam>
        <param name="structure"><span data-ttu-id="bb2a9-1841">마샬링될 데이터가 있는 관리되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1841">A managed object that holds the data to be marshaled.</span></span> <span data-ttu-id="bb2a9-1842">이 개체는 구조체이거나 형식이 지정된 클래스의 인스턴스여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1842">The object must be a structure or an instance of a formatted class.</span></span></param>
        <param name="ptr"><span data-ttu-id="bb2a9-1843">관리되지 않는 메모리 블록에 대한 포인터로서 이 메서드가 호출되기 전에 할당되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1843">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span></span></param>
        <param name="fDeleteOld"><span data-ttu-id="bb2a9-1844">이 메서드가 데이터를 복사하기 전에 <paramref name="ptr" /> 매개 변수에 대해 <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> 메서드를 호출하려면 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1844"><see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> method on the <paramref name="ptr" /> parameter before this method copies the data.</span></span> <span data-ttu-id="bb2a9-1845">블록에는 유효한 데이터가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1845">The block must contain valid data.</span></span> <span data-ttu-id="bb2a9-1846">메모리 블록에 이미 데이터가 포함되어 있을 때 <see langword="false" />를 전달하면 메모리 누수가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1846">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1847">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1847">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="bb2a9-1848">지정된 형식의 관리되는 개체의 데이터를 관리되지 않는 메모리 블록으로 마샬링합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1848">Marshals data from a managed object of a specified type to an unmanaged block of memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1849">서식이 지정 된 클래스는 해당 레이아웃이 지정 된 참조 형식 합니다 <xref:System.Runtime.InteropServices.StructLayoutAttribute> 특성을 하나로 <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> 또는 <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1849">A formatted class is a reference type whose layout is specified by the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute, as either <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> or <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bb2a9-1850"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> 내용을 복사 합니다 `structure` 미리 할당 된 메모리 블록에는 `ptr` 매개 변수를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1850"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> copies the contents of `structure` to the pre-allocated block of memory that the `ptr` parameter points to.</span></span> <span data-ttu-id="bb2a9-1851">하는 경우 `structure` COM 인터페이스 포인터를 마샬링하는 참조 형식을 포함 (인터페이스, 레이아웃, 없이 클래스 및 <xref:System.Object?displayProperty=nameWithType>), 관리 되는 개체 참조 횟수를 사용 하 여 활성 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1851">If `structure` contains reference types that marshal to COM interface pointers (interfaces, classes without layout, and <xref:System.Object?displayProperty=nameWithType>), the managed objects are kept alive with reference counts.</span></span> <span data-ttu-id="bb2a9-1852">다른 모든 참조 형식 (예: 문자열 및 배열) 복사본으로 마샬링됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1852">All other reference types (for example, strings and arrays) are marshaled to copies.</span></span> <span data-ttu-id="bb2a9-1853">이러한 관리 되거나 관리 되지 않는 개체를 해제 하려면를 <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%60%601%28System.IntPtr%29> 메모리 블록을 해제 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1853">To release these managed or unmanaged objects, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%60%601%28System.IntPtr%29> method before you free the memory block.</span></span>  
  
 <span data-ttu-id="bb2a9-1854">사용 하는 경우는 <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> 나중에 메모리 블록에 다른 인스턴스로 복사 하는 방법 지정 `true` 에 대 한 `fDeleteOld` 이전 인스턴스에 대 한 참조 형식에 대 한 계산 참조를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1854">If you use the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> method to copy a different instance to the memory block at a later time, specify `true` for `fDeleteOld` to remove reference counts for reference types in the previous instance.</span></span> <span data-ttu-id="bb2a9-1855">이 고, 그렇지 관리 되는 참조 형식 및 관리 되지 않는 복사본 유출 효과적으로 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1855">Otherwise, the managed reference types and unmanaged copies are effectively leaked.</span></span>  
  
 <span data-ttu-id="bb2a9-1856">사용에 대 한 전반적인 패턴 <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> 는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1856">The overall pattern for using <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> is as follows:</span></span>  
  
1.  <span data-ttu-id="bb2a9-1857">첫 번째 호출에서는 <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> 메모리 블록 할당 된 후 메서드가 `fDeleteOld` 이어야 합니다 `false`지우려면 내용이 있기 때문에, 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1857">On the first call to the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method after a memory block has been allocated, `fDeleteOld` must be `false`, because there are no contents to clear.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="bb2a9-1858">지정할 `true` 에 대 한 `fDeleteOld` 블록 유효한 데이터를 포함 하는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1858">Specify `true` for `fDeleteOld` only if the block contains valid data.</span></span>  
  
2.  <span data-ttu-id="bb2a9-1859">메모리 블록에 다른 인스턴스를 복사 하 고 개체 참조 형식을 포함 하는 경우 `fDeleteOld` 있어야 `true` 무료 이전 내용을 참조 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1859">If you copy a different instance to the memory block, and the object contains reference types, `fDeleteOld` must be `true` to free reference types in the old contents.</span></span>  
  
3.  <span data-ttu-id="bb2a9-1860">참조 형식을 포함 하는 개체를 호출 해야 합니다 <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> 메모리 블록을 해제 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1860">If the object contains reference types, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> method before you free the memory block.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb2a9-1861">복사 하는 대신 기존 구조를 고정 하려면 사용는 <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> 구조에 대 한 고정 된 핸들을 만들 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1861">To pin an existing structure instead of copying it, use the <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> type to create a pinned handle for the structure.</span></span> <span data-ttu-id="bb2a9-1862">고정 하는 방법에 대 한 세부 정보를 참조 하세요 [복사 및 고정](~/docs/framework/interop/copying-and-pinning.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1862">For details on how to pin, see [Copying and Pinning](~/docs/framework/interop/copying-and-pinning.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1863"><paramref name="structure" />가 형식이 지정된 클래스가 아닌 참조 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1863"><paramref name="structure" /> is a reference type that is not a formatted class.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1864">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1864">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1865">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1865">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="SystemDefaultCharSize">
      <MemberSignature Language="C#" Value="public static readonly int SystemDefaultCharSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SystemDefaultCharSize" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SystemDefaultCharSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int SystemDefaultCharSize;" />
      <MemberSignature Language="F#" Value=" staticval mutable SystemDefaultCharSize : int" Usage="System.Runtime.InteropServices.Marshal.SystemDefaultCharSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1866">시스템의 기본 문자 크기를 나타냅니다. 유니코드 시스템의 경우 기본값이 2이고, ANSI 시스템의 경우 1입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1866">Represents the default character size on the system; the default is 2 for Unicode systems and 1 for ANSI systems.</span></span> <span data-ttu-id="bb2a9-1867">이 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1867">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb2a9-1868">다음 예제는 <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1868">The following example demonstrates the <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> field.</span></span> <span data-ttu-id="bb2a9-1869">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Runtime.InteropServices.Marshal> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1869">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#2](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#2)]
 [!code-csharp[Marshal#2](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#2)]
 [!code-vb[Marshal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SystemMaxDBCSCharSize">
      <MemberSignature Language="C#" Value="public static readonly int SystemMaxDBCSCharSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SystemMaxDBCSCharSize" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SystemMaxDBCSCharSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int SystemMaxDBCSCharSize;" />
      <MemberSignature Language="F#" Value=" staticval mutable SystemMaxDBCSCharSize : int" Usage="System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1870">현재 운영 체제에서 DBCS(더블바이트 문자 집합)의 최대 크기(바이트)를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1870">Represents the maximum size of a double byte character set (DBCS) size, in bytes, for the current operating system.</span></span> <span data-ttu-id="bb2a9-1871">이 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1871">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb2a9-1872">다음 예제는 <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1872">The following example demonstrates the <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> field.</span></span> <span data-ttu-id="bb2a9-1873">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Runtime.InteropServices.Marshal> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1873">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#2](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#2)]
 [!code-csharp[Marshal#2](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#2)]
 [!code-vb[Marshal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThrowExceptionForHR">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1874">오류가 있는 특정 HRESULT 값을 사용하여 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1874">Throws an exception with a specific failure HRESULT value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThrowExceptionForHR">
      <MemberSignature Language="C#" Value="public static void ThrowExceptionForHR (int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExceptionForHR(int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExceptionForHR (errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ThrowExceptionForHR(int errorCode);" />
      <MemberSignature Language="F#" Value="static member ThrowExceptionForHR : int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ThrowExceptionForHR errorCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorCode"><span data-ttu-id="bb2a9-1875">해당 예외에 해당하는 HRESULT입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1875">The HRESULT corresponding to the desired exception.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1876">오류가 있는 특정 HRESULT 값을 사용하여 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1876">Throws an exception with a specific failure HRESULT value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1877">이 메서드는 지정된 된 HRESULT 오류에 대 한 예외 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1877">This method creates an exception object for the specified failure HRESULT.</span></span> <span data-ttu-id="bb2a9-1878">HRESULT는 0 또는 양수 (성공 코드) 인 경우 메서드를 작성 하거나 예외를 throw 하지 않고 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1878">If the HRESULT is 0 or positive (a success code), the method returns without creating or throwing an exception.</span></span>  
  
 <span data-ttu-id="bb2a9-1879"><xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%28System.Int32%29> 메서드를 기반으로 하는 예외를 반환 합니다 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) 설정 된 경우 현재 스레드의 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1879">Note that the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%28System.Int32%29> method returns an exception based on the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread if one is set.</span></span> <span data-ttu-id="bb2a9-1880">이 경우는 `errorCode` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1880">When this happens, the `errorCode` parameter is ignored.</span></span>  
  
 <span data-ttu-id="bb2a9-1881">하지만 그렇지 않은 경우도 일부 오류 Hresult 정의 된 예외에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1881">Some failure HRESULTs map to defined exceptions, whereas others do not.</span></span> <span data-ttu-id="bb2a9-1882">정의 된 예외를 HRESULT 매핑되는 경우 <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> 예외의 인스턴스를 만들고 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1882">If the HRESULT maps to a defined exception, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> creates an instance of the exception and throws it.</span></span> <span data-ttu-id="bb2a9-1883">인스턴스를 만들고이 고, 그렇지 <xref:System.Runtime.InteropServices.COMException>, HRESULT 사용 하 여 오류 코드 필드를 초기화 하 고 해당 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1883">Otherwise, it creates an instance of <xref:System.Runtime.InteropServices.COMException>, initializes the error code field with the HRESULT, and throws that exception.</span></span> <span data-ttu-id="bb2a9-1884">때 <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> 는 관리 되지 않는 사용 하 여 오류와 관련 된 추가 정보를 검색 하려고 호출 [GetErrorInfo](https://msdn.microsoft.com/library/ms221032\(v=vs.85\).aspx) 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1884">When <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> is invoked, it attempts to retrieve extra information regarding the error by using the unmanaged [GetErrorInfo](https://msdn.microsoft.com/library/ms221032\(v=vs.85\).aspx) function.</span></span>  
  
 <span data-ttu-id="bb2a9-1885">각 HRESULT에서 매핑을.NET Framework에는 비교할 수 있는 예외 클래스를 참조 하세요. [방법: Hresult 및 예외 매핑](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1885">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 <span data-ttu-id="bb2a9-1886">경우에 따라 <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> COM에 대 한 이전 호출에서 예외를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1886">Occasionally, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> might return an exception from a previous COM call.</span></span> <span data-ttu-id="bb2a9-1887">다음 해결 방법을 사용 하 여 전달 하는 예에서 `IntPtr(-1)` 두 번째 매개 변수로 (`errorInfo`):</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1887">In this case, you can use the following workaround and pass `IntPtr(-1)` as the second parameter (`errorInfo`):</span></span>  
  
```  
[SecurityPermissionAttribute(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.UnmanagedCode)]  
public static void ThrowExceptionForHR(interrorCode,IntPtrerrorInfo)  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1888">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1888">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1889">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1889">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.COMException" />
      </Docs>
    </Member>
    <Member MemberName="ThrowExceptionForHR">
      <MemberSignature Language="C#" Value="public static void ThrowExceptionForHR (int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExceptionForHR(int32 errorCode, native int errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExceptionForHR (errorCode As Integer, errorInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ThrowExceptionForHR(int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="F#" Value="static member ThrowExceptionForHR : int * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ThrowExceptionForHR (errorCode, errorInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
        <Parameter Name="errorInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="errorCode"><span data-ttu-id="bb2a9-1890">해당 예외에 해당하는 HRESULT입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1890">The HRESULT corresponding to the desired exception.</span></span></param>
        <param name="errorInfo"><span data-ttu-id="bb2a9-1891">오류에 대한 추가 정보를 제공하는 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) 인터페이스에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1891">A pointer to the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface that provides more information about the error.</span></span> <span data-ttu-id="bb2a9-1892">현재 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) 인터페이스를 사용하려면 <c>IntPtr(0)</c>을 지정하고, 현재 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) 인터페이스를 무시하고 오류 코드에서만 예외를 생성하려면 <c>IntPtr(-1)</c>을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1892">You can specify <c>IntPtr(0)</c> to use the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface, or <c>IntPtr(-1)</c> to ignore the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface and construct the exception just from the error code.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1893">지정된 <see href="https://msdn.microsoft.com/library/ms221233\(v=vs.85\">IErrorInfo</see>.aspx 인터페이스에 따라 특정 오류 HRESULT가 포함된 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1893">Throws an exception with a specific failure HRESULT, based on the specified <see href="https://msdn.microsoft.com/library/ms221233\(v=vs.85\">IErrorInfo</see>.aspx) interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1894">이 메서드는 지정된 된 HRESULT 오류에 대 한 예외 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1894">This method creates an exception object for the specified failure HRESULT.</span></span> <span data-ttu-id="bb2a9-1895">HRESULT는 0 또는 양수 (성공 코드) 인 경우 메서드를 작성 하거나 예외를 throw 하지 않고 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1895">If the HRESULT is 0 or positive (a success code), the method returns without creating or throwing an exception.</span></span>  
  
 <span data-ttu-id="bb2a9-1896"><xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> 메서드 릴리스 합니다 `errorInfo` 매개 변수를 줄이면 COM 참조 개수를 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1896">The <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method releases the `errorInfo` parameter, decreasing the COM reference count of the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface.</span></span>  
  
 <span data-ttu-id="bb2a9-1897"><xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> 메서드를 기반으로 하는 예외를 반환 합니다 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) 설정 된 경우 현재 스레드의 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1897">Note that the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method returns an exception based on the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread if one is set.</span></span> <span data-ttu-id="bb2a9-1898">이 경우는 `errorCode` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1898">When this happens, the `errorCode` parameter is ignored.</span></span>  
  
 <span data-ttu-id="bb2a9-1899">하지만 그렇지 않은 경우도 일부 오류 Hresult 정의 된 예외에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1899">Some failure HRESULTs map to defined exceptions, whereas others do not.</span></span> <span data-ttu-id="bb2a9-1900">정의 된 예외를 HRESULT 매핑되는 경우 <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> 예외의 인스턴스를 만들고 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1900">If the HRESULT maps to a defined exception, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> creates an instance of the exception and throws it.</span></span> <span data-ttu-id="bb2a9-1901">인스턴스를 만들고이 고, 그렇지 <xref:System.Runtime.InteropServices.COMException?displayProperty=nameWithType>, HRESULT 사용 하 여 오류 코드 필드를 초기화 하 고 해당 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1901">Otherwise, it creates an instance of <xref:System.Runtime.InteropServices.COMException?displayProperty=nameWithType>, initializes the error code field with the HRESULT, and throws that exception.</span></span> <span data-ttu-id="bb2a9-1902">`errorInfo` 매개 변수를 사용 하는 오류에 대 한 추가 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1902">The `errorInfo` parameter is used to retrieve extra information regarding the error.</span></span>  
  
 <span data-ttu-id="bb2a9-1903">각 HRESULT에서 매핑을.NET Framework에는 비교할 수 있는 예외 클래스를 참조 하세요. [방법: Hresult 및 예외 매핑](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1903">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1904">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1904">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1905">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1905">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.COMException" />
      </Docs>
    </Member>
    <Member MemberName="UnsafeAddrOfPinnedArrayElement">
      <MemberSignature Language="C#" Value="public static IntPtr UnsafeAddrOfPinnedArrayElement (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int UnsafeAddrOfPinnedArrayElement(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeAddrOfPinnedArrayElement (arr As Array, index As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr UnsafeAddrOfPinnedArrayElement(Array ^ arr, int index);" />
      <MemberSignature Language="F#" Value="static member UnsafeAddrOfPinnedArrayElement : Array * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement (arr, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("UnsafeAddrOfPinnedArrayElement(Array, Int32) may be unavailable in future releases. Instead, use UnsafeAddrOfPinnedArrayElement&lt;T&gt;(T[], Int32). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296517")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr"><span data-ttu-id="bb2a9-1906">필요한 요소가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1906">The array that contains the desired element.</span></span></param>
        <param name="index"><span data-ttu-id="bb2a9-1907">원하는 요소의 <paramref name="arr" /> 매개 변수에 있는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1907">The index in the <paramref name="arr" /> parameter of the desired element.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1908">지정된 배열의 지정된 인덱스에 있는 요소의 주소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1908">Gets the address of the element at the specified index inside the specified array.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1909"><paramref name="index" />에 있는 <paramref name="arr" /> 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1909">The address of <paramref name="index" /> inside <paramref name="arr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1910">사용 하 여 배열에 고정 해야는 <xref:System.Runtime.InteropServices.GCHandle> 이 메서드에 전달 되기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1910">The array must be pinned using a <xref:System.Runtime.InteropServices.GCHandle> before it is passed to this method.</span></span> <span data-ttu-id="bb2a9-1911">최상의 성능을 위해이 메서드 적용 합니다. 전달 된 배열을 확인 하지 않습니다. 이 인해 예기치 않은 동작이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1911">For maximum performance, this method does not validate the array passed to it; this can result in unexpected behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1912">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1912">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1913">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1913">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="UnsafeAddrOfPinnedArrayElement&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr UnsafeAddrOfPinnedArrayElement&lt;T&gt; (T[] arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int UnsafeAddrOfPinnedArrayElement&lt;T&gt;(!!T[] arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeAddrOfPinnedArrayElement(Of T) (arr As T(), index As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr UnsafeAddrOfPinnedArrayElement(cli::array &lt;T&gt; ^ arr, int index);" />
      <MemberSignature Language="F#" Value="static member UnsafeAddrOfPinnedArrayElement : 'T[] * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement (arr, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="arr" Type="T[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bb2a9-1914">배열의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1914">The type of the array.</span></span></typeparam>
        <param name="arr"><span data-ttu-id="bb2a9-1915">필요한 요소가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1915">The array that contains the desired element.</span></span></param>
        <param name="index"><span data-ttu-id="bb2a9-1916"><paramref name="arr" /> 배열에서 원하는 요소의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1916">The index of the desired element in the <paramref name="arr" /> array.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1917">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1917">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="bb2a9-1918">지정된 형식의 배열에 지정된 인덱스에 있는 요소의 주소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1918">Gets the address of the element at the specified index in an array of a specified type.</span></span></summary>
        <returns><span data-ttu-id="bb2a9-1919"><paramref name="index" />에 있는 <paramref name="arr" /> 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1919">The address of <paramref name="index" /> in <paramref name="arr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1920">배열을 사용 하 여 고정 해야는 <xref:System.Runtime.InteropServices.GCHandle> 이 메서드에 전달 되기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1920">The array must be pinned by using a <xref:System.Runtime.InteropServices.GCHandle> before it is passed to this method.</span></span> <span data-ttu-id="bb2a9-1921">최상의 성능을 위해이 메서드 적용 합니다. 전달 된 배열을 확인 하지 않습니다. 이 인해 예기치 않은 동작이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1921">For maximum performance, this method does not validate the array passed to it; this can result in unexpected behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1922">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1922">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1923">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1923">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1924">관리되지 않는 메모리에 싱글바이트 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1924">Writes a single byte value to unmanaged memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (IntPtr ptr, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte(native int ptr, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As IntPtr, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(IntPtr ptr, System::Byte val);" />
      <MemberSignature Language="F#" Value="static member WriteByte : nativeint * byte -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteByte (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1925">관리되지 않는 메모리에서 값을 쓸 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1925">The address in unmanaged memory to write to.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-1926">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1926">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1927">관리되지 않는 메모리에 싱글바이트 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1927">Writes a single byte value to unmanaged memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1928"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> 직접 관리 되지 않는 배열 전체를 복사를 제거 하는 관리 되지 않는 C-스타일 바이트 배열와 상호 작용 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 설정 하기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1928"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1929">다음 예제에서는 관리 되지 않는 메모리 블록을 만듭니다, 그리고 관리 되지 않는 메모리에 바이트를 씁니다, 그리고 관리 되지 않는 메모리에서 바이트를 읽고 및 관리 되지 않는 메모리를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1929">The following example creates a block of unmanaged memory, writes a byte to the unmanaged memory, reads the byte back from unmanaged memory, and then disposes the unmanaged memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1930"><paramref name="ptr" />의 형식을 인식할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1930"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="bb2a9-1931">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1931">-or-</span></span> 
 <span data-ttu-id="bb2a9-1932"><paramref name="ptr" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1932"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-1933">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1933">-or-</span></span> 
 <span data-ttu-id="bb2a9-1934"><paramref name="ptr" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1934"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1935">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1935">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1936">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1936">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (IntPtr ptr, int ofs, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte(native int ptr, int32 ofs, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As IntPtr, ofs As Integer, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(IntPtr ptr, int ofs, System::Byte val);" />
      <MemberSignature Language="F#" Value="static member WriteByte : nativeint * int * byte -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteByte (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1937">관리되지 않는 메모리에서 값을 쓸 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1937">The base address in unmanaged memory to write to.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-1938">쓰기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1938">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-1939">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1939">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1940">관리되지 않는 메모리의 지정된 오프셋 위치에 싱글바이트 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1940">Writes a single byte value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1941"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> 직접 관리 되지 않는 배열 전체를 복사를 제거 하는 관리 되지 않는 C-스타일 바이트 배열와 상호 작용 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 설정 하기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1941"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1942">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1942">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#3)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1943">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1943">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1944">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1944">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1945">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1945">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (object ptr, int ofs, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte([out] object ptr, int32 ofs, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As Object, ofs As Integer, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(System::Object ^ ptr, int ofs, System::Byte val);" />
      <MemberSignature Language="F#" Value="static member WriteByte : obj * int * byte -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteByte (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.Obsolete("WriteByte(Object, Int32, Byte) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1946">대상 개체에 대한 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1946">The base address in unmanaged memory of the target object.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-1947">쓰기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1947">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-1948">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1948">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1949">관리되지 않는 메모리의 지정된 오프셋 위치에 싱글바이트 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1949">Writes a single byte value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1950"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> 직접 관리 되지 않는 배열 전체를 복사를 제거 하는 관리 되지 않는 C-스타일 바이트 배열와 상호 작용 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 설정 하기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1950"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1951">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1951">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-1952"><paramref name="ptr" />이 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 개체인 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1952"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="bb2a9-1953">이 메서드에는 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 매개 변수를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1953">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1954">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1954">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1955">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1955">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-1956">관리되지 않는 메모리에 부호 있는 16비트 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1956">Writes a 16-bit signed integer value to unmanaged memory.</span></span> <span data-ttu-id="bb2a9-1957">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1957">Writing to unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, char val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * char -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1958">관리되지 않는 메모리에서 값을 쓸 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1958">The address in unmanaged memory to write to.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-1959">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1959">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1960">관리되지 않는 메모리에 16비트 정수 값으로 문자를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1960">Writes a character as a 16-bit integer value to unmanaged memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1961"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 직접 배열 사용 하 여 관리 되지 않는 16 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 설정 하기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1961"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1962">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1962">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1963">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1963">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1964"><paramref name="ptr" />의 형식을 인식할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1964"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="bb2a9-1965">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1965">-or-</span></span> 
 <span data-ttu-id="bb2a9-1966"><paramref name="ptr" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1966"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-1967">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1967">-or-</span></span> 
 <span data-ttu-id="bb2a9-1968"><paramref name="ptr" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1968"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1969">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1969">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1970">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1970">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, short val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * int16 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1971">관리되지 않는 메모리에서 값을 쓸 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1971">The address in unmanaged memory to write to.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-1972">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1972">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1973">관리되지 않는 메모리에 16비트 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1973">Writes a 16-bit integer value to unmanaged memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1974"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 직접 배열 사용 하 여 관리 되지 않는 16 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 설정 하기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1974"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1975">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1975">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1976">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1976">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1977"><paramref name="ptr" />의 형식을 인식할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1977"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="bb2a9-1978">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1978">-or-</span></span> 
 <span data-ttu-id="bb2a9-1979"><paramref name="ptr" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1979"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-1980">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1980">-or-</span></span> 
 <span data-ttu-id="bb2a9-1981"><paramref name="ptr" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1981"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1982">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1982">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1983">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1983">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, int ofs, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int32 ofs, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, ofs As Integer, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, int ofs, char val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * int * char -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1984">네이티브 힙에서 값을 쓸 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1984">The base address in the native heap to write to.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-1985">쓰기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1985">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-1986">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1986">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1987">관리되지 않는 메모리의 지정된 오프셋 위치에 16비트 부호 있는 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1987">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1988"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 직접 배열 사용 하 여 관리 되지 않는 16 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 설정 하기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1988"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1989">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1989">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-1990">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1990">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-1991">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1991">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-1992">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1992">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-1993">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1993">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, int ofs, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int32 ofs, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, ofs As Integer, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, int ofs, short val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * int * int16 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-1994">관리되지 않는 메모리에서 값을 쓸 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1994">The base address in unmanaged memory to write to.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-1995">쓰기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1995">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-1996">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1996">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-1997">관리되지 않는 메모리의 지정된 오프셋 위치에 16비트 부호 있는 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1997">Writes a 16-bit signed integer value into unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-1998"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 직접 배열 사용 하 여 관리 되지 않는 16 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 설정 하기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1998"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-1999">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-1999">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-2000">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2000">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-2001">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2001">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2002">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2002">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2003">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2003">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (object ptr, int ofs, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16([out] object ptr, int32 ofs, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As Object, ofs As Integer, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(System::Object ^ ptr, int ofs, char val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : obj * int * char -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.Obsolete("WriteInt16(Object, Int32, Char) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-2004">대상 개체에 대한 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2004">The base address in unmanaged memory of the target object.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-2005">쓰기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2005">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-2006">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2006">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-2007">관리되지 않는 메모리의 지정된 오프셋 위치에 16비트 부호 있는 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2007">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-2008"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 직접 배열 사용 하 여 관리 되지 않는 16 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 설정 하기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2008"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-2009">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2009">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-2010">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2010">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-2011"><paramref name="ptr" />이 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 개체인 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2011"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="bb2a9-2012">이 메서드에는 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 매개 변수를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2012">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2013">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2013">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2014">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2014">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (object ptr, int ofs, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16([out] object ptr, int32 ofs, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As Object, ofs As Integer, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(System::Object ^ ptr, int ofs, short val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : obj * int * int16 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.Obsolete("WriteInt16(Object, Int32, Int16) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-2015">대상 개체에 대한 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2015">The base address in unmanaged memory of the target object.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-2016">쓰기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2016">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-2017">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2017">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-2018">관리되지 않는 메모리의 지정된 오프셋 위치에 16비트 부호 있는 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2018">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-2019"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 직접 배열 사용 하 여 관리 되지 않는 16 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 설정 하기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2019"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-2020">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2020">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-2021">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2021">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-2022"><paramref name="ptr" />이 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 개체인 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2022"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="bb2a9-2023">이 메서드에는 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 매개 변수를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2023">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2024">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2024">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2025">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2025">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-2026">관리되지 않는 메모리에 부호 있는 32비트 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2026">Writes a 32-bit signed integer value to unmanaged memory.</span></span> <span data-ttu-id="bb2a9-2027">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2027">Writing to unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (IntPtr ptr, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32(native int ptr, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As IntPtr, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(IntPtr ptr, int val);" />
      <MemberSignature Language="F#" Value="static member WriteInt32 : nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt32 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-2028">관리되지 않는 메모리에서 값을 쓸 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2028">The address in unmanaged memory to write to.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-2029">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2029">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-2030">관리되지 않는 메모리에 부호 있는 32비트 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2030">Writes a 32-bit signed integer value to unmanaged memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-2031"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> 직접 배열 사용 하 여 관리 되지 않는 32 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 설정 하기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2031"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-2032">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2032">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-2033">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2033">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-2034"><paramref name="ptr" />의 형식을 인식할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2034"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="bb2a9-2035">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2035">-or-</span></span> 
 <span data-ttu-id="bb2a9-2036"><paramref name="ptr" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2036"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-2037">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2037">-or-</span></span> 
 <span data-ttu-id="bb2a9-2038"><paramref name="ptr" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2038"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2039">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2039">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2040">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2040">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (IntPtr ptr, int ofs, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32(native int ptr, int32 ofs, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As IntPtr, ofs As Integer, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(IntPtr ptr, int ofs, int val);" />
      <MemberSignature Language="F#" Value="static member WriteInt32 : nativeint * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt32 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-2041">관리되지 않는 메모리에서 값을 쓸 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2041">The base address in unmanaged memory to write to.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-2042">쓰기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2042">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-2043">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2043">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-2044">관리되지 않는 메모리의 지정된 오프셋 위치에 32비트 부호 있는 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2044">Writes a 32-bit signed integer value into unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-2045"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> 직접 배열 사용 하 여 관리 되지 않는 32 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 설정 하기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2045"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-2046">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2046">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-2047">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2047">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-2048">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2048">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2049">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2049">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2050">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2050">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (object ptr, int ofs, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32([out] object ptr, int32 ofs, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As Object, ofs As Integer, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(System::Object ^ ptr, int ofs, int val);" />
      <MemberSignature Language="F#" Value="static member WriteInt32 : obj * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt32 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.Obsolete("WriteInt32(Object, Int32, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-2051">대상 개체에 대한 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2051">The base address in unmanaged memory of the target object.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-2052">쓰기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2052">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-2053">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2053">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-2054">관리되지 않는 메모리의 지정된 오프셋 위치에 32비트 부호 있는 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2054">Writes a 32-bit signed integer value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-2055"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> 직접 배열 사용 하 여 관리 되지 않는 32 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 설정 하기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2055"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-2056">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2056">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-2057">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2057">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-2058"><paramref name="ptr" />이 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 개체인 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2058"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="bb2a9-2059">이 메서드에는 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 매개 변수를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2059">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2060">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2060">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2061">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2061">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-2062">관리되지 않는 메모리에 부호 있는 64비트 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2062">Writes a 64-bit signed integer value to unmanaged memory.</span></span> <span data-ttu-id="bb2a9-2063">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2063">Writing to unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (IntPtr ptr, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64(native int ptr, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As IntPtr, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(IntPtr ptr, long val);" />
      <MemberSignature Language="F#" Value="static member WriteInt64 : nativeint * int64 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt64 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-2064">관리되지 않는 메모리에서 값을 쓸 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2064">The address in unmanaged memory to write to.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-2065">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2065">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-2066">관리되지 않는 메모리에 부호 있는 64비트 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2066">Writes a 64-bit signed integer value to unmanaged memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-2067"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> 직접 배열 사용 하 여 관리 되지 않는 64 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 설정 하기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2067"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-2068">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2068">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-2069">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2069">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-2070"><paramref name="ptr" />의 형식을 인식할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2070"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="bb2a9-2071">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2071">-or-</span></span> 
 <span data-ttu-id="bb2a9-2072"><paramref name="ptr" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2072"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-2073">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2073">-or-</span></span> 
 <span data-ttu-id="bb2a9-2074"><paramref name="ptr" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2074"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2075">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2075">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2076">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2076">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (IntPtr ptr, int ofs, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64(native int ptr, int32 ofs, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As IntPtr, ofs As Integer, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(IntPtr ptr, int ofs, long val);" />
      <MemberSignature Language="F#" Value="static member WriteInt64 : nativeint * int * int64 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt64 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-2077">데이터를 쓸 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2077">The base address in unmanaged memory to write.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-2078">쓰기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2078">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-2079">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2079">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-2080">관리되지 않는 메모리의 지정된 오프셋 위치에 64비트 부호 있는 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2080">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-2081"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> 직접 배열 사용 하 여 관리 되지 않는 64 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 설정 하기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2081"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-2082">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2082">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-2083">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2083">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-2084">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2084">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2085">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2085">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2086">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2086">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (object ptr, int ofs, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64([out] object ptr, int32 ofs, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As Object, ofs As Integer, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(System::Object ^ ptr, int ofs, long val);" />
      <MemberSignature Language="F#" Value="static member WriteInt64 : obj * int * int64 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt64 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.Obsolete("WriteInt64(Object, Int32, Int64) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-2087">대상 개체에 대한 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2087">The base address in unmanaged memory of the target object.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-2088">쓰기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2088">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-2089">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2089">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-2090">관리되지 않는 메모리의 지정된 오프셋 위치에 64비트 부호 있는 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2090">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-2091"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> 직접 배열 사용 하 여 관리 되지 않는 64 비트 부호 있는, 관리 되지 않는 배열 전체를 복사 하지 않아도 상호 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 설정 하기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2091"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-2092">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2092">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-2093">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2093">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-2094"><paramref name="ptr" />이 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 개체인 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2094"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="bb2a9-2095">이 메서드에는 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 매개 변수를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2095">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2096">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2096">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2097">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2097">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIntPtr">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb2a9-2098">관리되지 않는 메모리에 프로세서의 기본 크기로 지정된 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2098">Writes a processor native-sized integer value to unmanaged memory.</span></span> <span data-ttu-id="bb2a9-2099">32비트 시스템에는 32비트 정수를 쓰고 64비트 시스템에는 64비트 정수를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2099">32-bit integers are written on 32-bit systems, and 64-bit integers are written on 64-bit systems.</span></span> <span data-ttu-id="bb2a9-2100">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2100">Writing to unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (IntPtr ptr, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr(native int ptr, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As IntPtr, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(IntPtr ptr, IntPtr val);" />
      <MemberSignature Language="F#" Value="static member WriteIntPtr : nativeint * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteIntPtr (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-2101">관리되지 않는 메모리에서 값을 쓸 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2101">The address in unmanaged memory to write to.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-2102">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2102">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-2103">관리되지 않는 메모리에 프로세서의 기본 크기로 지정된 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2103">Writes a processor native sized integer value into unmanaged memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-2104"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> 직접 관리 되지 않는 C-스타일을 사용 하 여 상호 수 있으므로 `IntPtr` 배열에 관리 되지 않는 배열 전체를 복사 하지 않아도 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)를 별도 관리 되는 배열 요소의 값을 설정 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2104"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-2105">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2105">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-2106">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2106">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-2107"><paramref name="ptr" />의 형식을 인식할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2107"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="bb2a9-2108">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2108">-or-</span></span> 
 <span data-ttu-id="bb2a9-2109"><paramref name="ptr" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2109"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bb2a9-2110">또는</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2110">-or-</span></span> 
 <span data-ttu-id="bb2a9-2111"><paramref name="ptr" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2111"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2112">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2112">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2113">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2113">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (IntPtr ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr(native int ptr, int32 ofs, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As IntPtr, ofs As Integer, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(IntPtr ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="F#" Value="static member WriteIntPtr : nativeint * int * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteIntPtr (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-2114">관리되지 않는 메모리에서 값을 쓸 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2114">The base address in unmanaged memory to write to.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-2115">쓰기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2115">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-2116">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2116">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-2117">관리되지 않는 메모리의 지정된 오프셋 위치에 프로세서의 기본 크기로 지정된 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2117">Writes a processor native-sized integer value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-2118">이 메서드는 32 비트 시스템에 64 비트 시스템에서 64 비트 정수는 32 비트 정수를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2118">This method writes a 32 bit integer on 32 bit systems, and a 64 bit integer on 64 bit systems.</span></span>  
  
 <span data-ttu-id="bb2a9-2119"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> 직접 관리 되지 않는 C-스타일을 사용 하 여 상호 수 있으므로 `IntPtr` 배열에 관리 되지 않는 배열 전체를 복사 하지 않아도 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)를 별도 관리 되는 배열 요소의 값을 설정 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2119"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-2120">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2120">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-2121">다음 예제에서는 사용 하는 관리 되지 않는 배열에 읽기 및 쓰기에 대 한 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> 및 <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2121">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-2122">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2122">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2123">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2123">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2124">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2124">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (object ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr([out] object ptr, int32 ofs, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As Object, ofs As Integer, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(System::Object ^ ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="F#" Value="static member WriteIntPtr : obj * int * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteIntPtr (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.Obsolete("WriteIntPtr(Object, Int32, IntPtr) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="bb2a9-2125">대상 개체에 대한 관리되지 않는 메모리의 기본 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2125">The base address in unmanaged memory of the target object.</span></span></param>
        <param name="ofs"><span data-ttu-id="bb2a9-2126">쓰기 전에 <paramref name="ptr" /> 매개 변수에 추가되는 추가 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2126">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="bb2a9-2127">작성할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2127">The value to write.</span></span></param>
        <summary><span data-ttu-id="bb2a9-2128">관리되지 않는 메모리에 프로세서의 기본 크기로 지정된 정수 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2128">Writes a processor native sized integer value to unmanaged memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-2129"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> 직접 관리 되지 않는 배열 전체를 복사를 제거 하는 관리 되지 않는 C-스타일 바이트 배열와 상호 작용 수 있으므로 (사용 하 여 <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 해당 요소 값을 설정 하기 전에 별도 관리 되는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2129"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="bb2a9-2130">정렬되지 않은 메모리 위치에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2130">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="bb2a9-2131">기준 주소(<paramref name="ptr" />)에 오프셋 바이트(<paramref name="ofs" />)를 더하면 null 또는 잘못된 주소가 생성되는 경우</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2131">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb2a9-2132"><paramref name="ptr" />이 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 개체인 경우.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2132"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="bb2a9-2133">이 메서드에는 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 매개 변수를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2133">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2134">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2134">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2135">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2135">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeBSTR">
      <MemberSignature Language="C#" Value="public static void ZeroFreeBSTR (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeBSTR(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeBSTR (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeBSTR(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeBSTR : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeBSTR s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-2136">해제할 <see langword="BSTR" />의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2136">The address of the <see langword="BSTR" /> to free.</span></span></param>
        <summary><span data-ttu-id="bb2a9-2137"><see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" /> 메서드를 사용하여 할당된 [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) 포인터를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2137">Frees a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-2138"><xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> 메서드는 먼저 0 BSTR의 콘텐츠를 설정 하 고 BSTR를 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2138">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> method first sets the contents of the BSTR to zero, and then frees the BSTR.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2139">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2139">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2140">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2140">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemAnsi (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemAnsi(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemAnsi (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemAnsi(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeCoTaskMemAnsi : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-2141">해제할 관리되지 않는 문자열의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2141">The address of the unmanaged string to free.</span></span></param>
        <summary><span data-ttu-id="bb2a9-2142"><see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" /> 메서드를 사용하여 할당한 관리되지 않는 문자열 포인터를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2142">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-2143">합니다 <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> 메서드는 먼저 제거 하 고 사용 하 여 할당 된 관리 되지 않는 메모리를 해제 합니다는 <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2143">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-2144">다음 예제에서는 합니다 <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> 마샬링할의 내용을 해독 하는 메서드는 <xref:System.Security.SecureString> 관리 되지 않는 메모리 블록에는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2144">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="bb2a9-2145">사용 하 여는 <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> 메서드를 비우고 관리 되지 않는 블록을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2145">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2146">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2146">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2147">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2147">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemUnicode (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemUnicode(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemUnicode (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemUnicode(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeCoTaskMemUnicode : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-2148">해제할 관리되지 않는 문자열의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2148">The address of the unmanaged string to free.</span></span></param>
        <summary><span data-ttu-id="bb2a9-2149"><see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" /> 메서드를 사용하여 할당한 관리되지 않는 문자열 포인터를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2149">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-2150">합니다 <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> 메서드는 먼저 제거 하 고 사용 하 여 할당 된 관리 되지 않는 메모리를 해제 합니다는 <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2150">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2151">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2151">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2152">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2152">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemUTF8">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemUTF8 (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemUTF8(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemUTF8 (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemUTF8(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeCoTaskMemUTF8 : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8 s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static void ZeroFreeGlobalAllocAnsi (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeGlobalAllocAnsi(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeGlobalAllocAnsi (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeGlobalAllocAnsi(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeGlobalAllocAnsi : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-2153">해제할 관리되지 않는 문자열의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2153">The address of the unmanaged string to free.</span></span></param>
        <summary><span data-ttu-id="bb2a9-2154"><see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" /> 메서드를 사용하여 할당한 관리되지 않는 문자열 포인터를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2154">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-2155">합니다 <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> 메서드는 먼저 제거 하 고 사용 하 여 할당 된 관리 되지 않는 메모리를 해제 합니다는 <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2155">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-2156">다음 예제에서는 합니다 <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> 마샬링할의 내용을 해독 하는 메서드는 <xref:System.Security.SecureString> 관리 되지 않는 메모리 블록에는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2156">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="bb2a9-2157">사용 하 여는 <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> 메서드를 비우고 관리 되지 않는 블록을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2157">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2158">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2158">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2159">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2159">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static void ZeroFreeGlobalAllocUnicode (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeGlobalAllocUnicode(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeGlobalAllocUnicode (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeGlobalAllocUnicode(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeGlobalAllocUnicode : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="bb2a9-2160">해제할 관리되지 않는 문자열의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2160">The address of the unmanaged string to free.</span></span></param>
        <summary><span data-ttu-id="bb2a9-2161"><see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" /> 메서드를 사용하여 할당한 관리되지 않는 문자열 포인터를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2161">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb2a9-2162">합니다 <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> 메서드는 먼저 제거 하 고 사용 하 여 할당 된 관리 되지 않는 메모리를 해제 합니다는 <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2162">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb2a9-2163">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> 메서드는 관리 되지 않는 `LogonUser` 가장을 수행 하는 함수를 <xref:System.Security.SecureString> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2163">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method with the unmanaged `LogonUser` function to perform impersonation with the <xref:System.Security.SecureString> class.</span></span> <span data-ttu-id="bb2a9-2164">이 예제에서는 다음 사용을 <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> 메서드를 비우고 관리 되지 않는 문자열 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2164">The example then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method to zero out and free the unmanaged string reference.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="bb2a9-2165">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2165">requires full trust for the immediate caller.</span></span> <span data-ttu-id="bb2a9-2166">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb2a9-2166">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>