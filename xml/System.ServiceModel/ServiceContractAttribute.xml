<Type Name="ServiceContractAttribute" FullName="System.ServiceModel.ServiceContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="591893d27ef83ae1b88e924bc0e3e08c009c4179" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56771077" /></Metadata><TypeSignature Language="C#" Value="public sealed class ServiceContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ServiceContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-uwp-10.0;dotnet-plat-ext-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e98c0-101">인터페이스 또는 클래스에서 WCF(Windows Communication Foundation) 애플리케이션의 서비스 계약을 정의함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-101">Indicates that an interface or a class defines a service contract in a Windows Communication Foundation (WCF) application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98c0-102">서비스 계약을 정의하려면 인터페이스 또는 클래스의 <xref:System.ServiceModel.ServiceContractAttribute> 특성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-102">Use the <xref:System.ServiceModel.ServiceContractAttribute> attribute on an interface (or class) to define a service contract.</span></span> <span data-ttu-id="e98c0-103">그런 다음 하나 이상의 클래스 또는 인터페이스 메서드의 <xref:System.ServiceModel.OperationContractAttribute> 특성을 사용하여 계약의 서비스 작업을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-103">Then use the <xref:System.ServiceModel.OperationContractAttribute> attribute on one or more of the class (or interface) methods to define the contract's service operations.</span></span> <span data-ttu-id="e98c0-104">서비스 계약 구현 되 고 사용 하 여 결합 되는 경우는 [바인딩을](~/docs/framework/wcf/bindings.md) 및 <xref:System.ServiceModel.EndpointAddress> 클라이언트에서 사용할 서비스 계약이 노출 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-104">When the service contract is implemented and combined with a [Bindings](~/docs/framework/wcf/bindings.md) and an <xref:System.ServiceModel.EndpointAddress> object, the service contract is exposed for use by clients.</span></span> <span data-ttu-id="e98c0-105">간단한 예제를 사용 하는 프로세스의 개요를 보려면 [초보자를 위한 자습서](~/docs/framework/wcf/getting-started-tutorial.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-105">For an overview of the process using simple examples, see [Getting Started Tutorial](~/docs/framework/wcf/getting-started-tutorial.md).</span></span> <span data-ttu-id="e98c0-106">서비스 계약을 만드는 방법에 대 한 자세한 내용은 참조 하세요. [서비스 디자인 및 구현](~/docs/framework/wcf/designing-and-implementing-services.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-106">For more information about creating service contracts, see [Designing and Implementing Services](~/docs/framework/wcf/designing-and-implementing-services.md).</span></span>  
  
 <span data-ttu-id="e98c0-107"><xref:System.ServiceModel.ServiceContractAttribute>와 해당 인터페이스로 표현되는 정보는 WSDL(Web Services Description Language) `<portType>` 요소와 관련이 적습니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-107">The information expressed by a <xref:System.ServiceModel.ServiceContractAttribute> and its interface is loosely related to the Web Services Description Language (WSDL) `<portType>` element.</span></span> <span data-ttu-id="e98c0-108">서비스 계약을 서비스의 끝점이 호출자에 게 노출 하는 지정 하는 서비스 쪽에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-108">A service contract is used on the service side to specify what the service's endpoint exposes to callers.</span></span> <span data-ttu-id="e98c0-109">또한 클라이언트에서도 클라이언트와 통신하는 엔드포인트의 계약을 지정하고, 이중 계약의 경우 <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> 속성을 사용하여 클라이언트가 이중 대화에 참여하기 위해 구현해야 하는 콜백 계약을 지정하는 데 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-109">It is also used on the client side to specify the contract of the endpoint with which the client communicates and, in the case of duplex contracts, to specify the callback contract (using the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property) that the client must implement in order to participate in a duplex conversation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e98c0-110"><xref:System.ServiceModel.ServiceContractAttribute>로 데코레이팅된 인터페이스 또는 클래스는 <xref:System.ServiceModel.OperationContractAttribute> 특성으로 표시된 메서드가 한 개 이상 있어야 기능을 노출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-110">An interface or class that is decorated with <xref:System.ServiceModel.ServiceContractAttribute> must also have at least one method marked with the <xref:System.ServiceModel.OperationContractAttribute> attribute to expose any functionality.</span></span> <span data-ttu-id="e98c0-111">서비스 정의 및 구현을 위해 두 특성을 사용하는 가장 간단한 방법에 대한 코드 예제는 예제 단원을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="e98c0-111">See the Examples section for a code example of the simplest use of the two attributes to define and implement a service.</span></span>  
  
 <span data-ttu-id="e98c0-112">서비스 계약을 수정하려면 <xref:System.ServiceModel.ServiceContractAttribute> 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-112">Use the <xref:System.ServiceModel.ServiceContractAttribute> properties to modify the service contract.</span></span>  
  
-   <span data-ttu-id="e98c0-113"><xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A> 속성은 사용할 구성 파일에서 서비스 요소의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-113">The <xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A> property specifies the name of the service element in the configuration file to use.</span></span>  
  
-   <span data-ttu-id="e98c0-114"><xref:System.ServiceModel.ServiceContractAttribute.Name%2A> 및 <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> 속성은 WSDL `<portType>` 요소에서 계약의 이름과 네임스페이스를 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-114">The <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties control the name and namespace of the contract in the WSDL `<portType>` element.</span></span>  
  
-   <span data-ttu-id="e98c0-115"><xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> 속성은 계약에 세션을 지원하는 바인딩이 필요한지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-115">The <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property specifies whether the contract requires a binding that supports sessions.</span></span>  
  
-   <span data-ttu-id="e98c0-116"><xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> 속성은 양방향(이중) 대화에서 반환 계약을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-116">The <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property specifies the return contract in a two-way (duplex) conversation.</span></span>  
  
-   <span data-ttu-id="e98c0-117"><xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> 및 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> 속성은 계약을 지원하는 모든 메시지에 명시적인 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> 값이 있는지 여부를 나타내고, 값이 있는 경우 해당 수준도 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-117">The <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> and <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> properties indicate whether all messages supporting the contract have a explicit <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> value, and if so, what that level is.</span></span>  
  
 <span data-ttu-id="e98c0-118">서비스에서 서비스 계약을 구현하며, 서비스 계약은 서비스 유형이 지원하는 데이터 교환을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-118">Services implement service contracts, which represent the data exchange that a service type supports.</span></span> <span data-ttu-id="e98c0-119">서비스 클래스는 <xref:System.ServiceModel.ServiceContractAttribute>로 표시된 메서드가 있는 <xref:System.ServiceModel.OperationContractAttribute>로 표시된 인터페이스를 구현하여 서비스 계약을 구현합니다. 또는 <xref:System.ServiceModel.ServiceContractAttribute>로 표시할 수 있으며 <xref:System.ServiceModel.OperationContractAttribute> 특성을 자신의 메서드에 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-119">A service class can implement a service contract (by implementing an interface marked with <xref:System.ServiceModel.ServiceContractAttribute> that has methods marked with <xref:System.ServiceModel.OperationContractAttribute>) or it can be marked with the <xref:System.ServiceModel.ServiceContractAttribute> and apply the <xref:System.ServiceModel.OperationContractAttribute> attribute to its own methods.</span></span> <span data-ttu-id="e98c0-120">클래스가 <xref:System.ServiceModel.ServiceContractAttribute>로 표시된 인터페이스를 구현하는 경우 클래스 자체는 <xref:System.ServiceModel.ServiceContractAttribute>로 표시할 수 없습니다. <xref:System.ServiceModel.OperationContractAttribute>로 표시된 서비스 형식의 메서드는 서비스 형식 자체에서 지정한 기본 서비스 계약의 일부로 처리됩니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-120">(If a class implements an interface marked with <xref:System.ServiceModel.ServiceContractAttribute>, it cannot be itself marked with <xref:System.ServiceModel.ServiceContractAttribute>.) Methods on service types that are marked with the <xref:System.ServiceModel.OperationContractAttribute> are treated as part of a default service contract specified by the service type itself.</span></span> <span data-ttu-id="e98c0-121">서비스 작업에 대한 자세한 내용은 <xref:System.ServiceModel.OperationContractAttribute>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="e98c0-121">For details about service operations, see <xref:System.ServiceModel.OperationContractAttribute>.</span></span>  
  
 <span data-ttu-id="e98c0-122">기본적으로 <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> 및 <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> 속성은 각각 계약 형식의 이름 및 `http://tempuri.org`이며, <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A>은 <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-122">By default, the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties are the name of the contract type and `http://tempuri.org`, respectively, and <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e98c0-123">이러한 속성을 사용하여 서비스 계약의 이름, 네임스페이스 및 보호 수준을 명시적으로 설정하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-123">It is recommended that service contracts explicitly set their names, namespaces, and protection levels using these properties.</span></span> <span data-ttu-id="e98c0-124">이렇게 하면 다음 두 가지 목표가 달성됩니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-124">Doing so accomplishes two goals.</span></span> <span data-ttu-id="e98c0-125">우선 관리되는 형식 정보에 직접 연결되어 있지 않은 계약을 빌드하여 WSDL로 표현된 계약을 위반하지 않고도 관리되는 코드 및 네임스페이스를 리팩터링할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-125">First, it builds a contract that is not directly connected to the managed type information, enabling you to refactor your managed code and namespaces without breaking the contract as it is expressed in WSDL.</span></span> <span data-ttu-id="e98c0-126">두 번째로 계약 자체에 대한 특정 수준의 보호를 명시적으로 요구하면 런타임에서 바인딩 구성이 해당 보안 수준을 지원하는지 여부를 확인하여 잘못된 구성으로 인해 중요한 정보가 노출되지 않도록 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-126">Second, explicitly requiring a certain level of protection on the contract itself enables the runtime to validate whether the binding configuration supports that level of security, preventing poor configuration from exposing sensitive information.</span></span> <span data-ttu-id="e98c0-127">보호 수준에 대 한 자세한 내용은 참조 하세요. [보호 수준을 이해](~/docs/framework/wcf/understanding-protection-level.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-127">For more information about protection levels, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
 <span data-ttu-id="e98c0-128">클라이언트 애플리케이션에서 사용할 수 있도록 서비스를 노출 하려면 Windows Communication Foundation (WCF)를 사용 하 여 서비스 끝점을 등록 하는 호스트 애플리케이션을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-128">To expose a service for use by client applications, create a host application to register your service endpoint with Windows Communication Foundation (WCF).</span></span> <span data-ttu-id="e98c0-129">콘솔 애플리케이션, Windows 서비스 애플리케이션, ASP.NET 애플리케이션, Windows Forms 애플리케이션 또는 다른 유형의 애플리케이션 도메인에서 Windows 정품 인증 서비스 (WAS)를 사용 하 여 WCF 서비스를 호스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-129">You can host WCF services using Windows Activation Services (WAS), in console applications, Windows Service applications, ASP.NET applications, Windows Forms applications, or any other kind of application domain.</span></span>  
  
 <span data-ttu-id="e98c0-130">WAS에서 호스팅하는 것은 ASP.NET 애플리케이션을 만드는 것과 매우 비슷합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-130">Hosting in the WAS is very similar to creating an ASP.NET application.</span></span> <span data-ttu-id="e98c0-131">자세한 내용은 [방법: IIS에서 WCF 서비스 호스팅](~/docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-131">For details, see [How to: Host a WCF Service in IIS](~/docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis.md).</span></span>  
  
 <span data-ttu-id="e98c0-132">클라이언트는 서비스 계약 인터페이스(<xref:System.ServiceModel.ServiceContractAttribute>로 표시된 인터페이스)를 사용하여 서비스에 대한 채널을 만들거나, 서비스 계약 인터페이스의 형식 정보를 <xref:System.ServiceModel.ClientBase%601> 클래스와 결합하는 클라이언트 개체를 사용하여 서비스와 통신합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-132">Clients either use the service contract interface (the interface marked with <xref:System.ServiceModel.ServiceContractAttribute>) to create a channel to the service or they use the client objects (which combine the type information of the service contract interface with the <xref:System.ServiceModel.ClientBase%601> class) to communicate with your service.</span></span> <span data-ttu-id="e98c0-133">클라이언트 채널 서비스에 대 한 자세한 내용은 참조는 <xref:System.ServiceModel.ChannelFactory%601> 클래스 및 [WCF Client Overview](~/docs/framework/wcf/wcf-client-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-133">For details on client channels to services, see the <xref:System.ServiceModel.ChannelFactory%601> class and [WCF Client Overview](~/docs/framework/wcf/wcf-client-overview.md).</span></span>  
  
 <span data-ttu-id="e98c0-134">다른 <xref:System.ServiceModel.ServiceContractAttribute> 클래스 또는 인터페이스에서 상속하도록 <xref:System.ServiceModel.ServiceContractAttribute> 클래스 또는 인터페이스를 사용하면 부모 계약이 확장됩니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-134">Using a <xref:System.ServiceModel.ServiceContractAttribute> class or interface to inherit from another <xref:System.ServiceModel.ServiceContractAttribute> class or interface extends the parent contract.</span></span> <span data-ttu-id="e98c0-135">예를 들어 `IChildContract` 인터페이스가 <xref:System.ServiceModel.ServiceContractAttribute>로 표시되고 다른 서비스 계약 인터페이스인 `IParentContract`에서 상속되면 `IChildContract` 서비스 계약에 `IParentContract` 및 `IChildContract` 메서드가 모두 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-135">For example, if an `IChildContract` interface is marked with <xref:System.ServiceModel.ServiceContractAttribute> and inherited from another service contract interface, `IParentContract`, the `IChildContract` service contract contains the methods of both `IParentContract` and `IChildContract`.</span></span> <span data-ttu-id="e98c0-136">클래스 또는 인터페이스의 계약을 확장하는 것은 관리되는 클래스 및 인터페이스를 확장하는 것과 비슷합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-136">Extending contracts (whether on classes or interfaces) is very similar to extending managed classes and interfaces.</span></span>  
  
 <span data-ttu-id="e98c0-137">서비스를 만드는 가장 유연한 방법은 먼저 서비스 계약 인터페이스를 정의한 다음 서비스 클래스에서 해당 인터페이스를 구현하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-137">The most flexible approach to creating services is to define service contract interfaces first and then have your service class implement that interface.</span></span> <span data-ttu-id="e98c0-138">다른 사람이 정의한 서비스 계약을 구현해야 하는 경우 가장 간단하게 서비스를 빌드하는 방법이기도 합니다. 서비스에서 계약을 하나만 노출하지만 둘 이상의 엔드포인트에서 해당 계약을 노출할 수 있는 경우 클래스를 <xref:System.ServiceModel.ServiceContractAttribute>로 표시하고 클래스의 메서드를 <xref:System.ServiceModel.OperationContractAttribute>로 표시하면 서비스를 직접 빌드할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-138">(This is also the simplest way to build your services if you must implement service contracts that have been defined by others.) Building services directly by marking a class with <xref:System.ServiceModel.ServiceContractAttribute> and its methods with <xref:System.ServiceModel.OperationContractAttribute> works when the service exposes only one contract (but that contract can be exposed by more than one endpoint).</span></span>  
  
 <span data-ttu-id="e98c0-139">사용 하 여는 <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> 속성을 다른 서비스 계약을 원래 서비스 계약과 함께 바인딩된 경우 흐를 수 있는 두 가지 방법으로 독립적으로 메시지 교환을 정의 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-139">Use the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property to indicate another service contract that, when bound together with the original service contract, define a message exchange that can flow in two ways independently.</span></span> <span data-ttu-id="e98c0-140">자세한 내용은 <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e98c0-140">For details, see <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e98c0-141">다음 코드 예제에서는 인터페이스에 <xref:System.ServiceModel.ServiceContractAttribute>를 적용하여 <xref:System.ServiceModel.OperationContractAttribute>로 표시되는 하나의 서비스 메서드로 서비스 계약을 정의하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-141">The following code example shows how to apply the <xref:System.ServiceModel.ServiceContractAttribute> to an interface to define a service contract with one service method, indicated by the <xref:System.ServiceModel.OperationContractAttribute>.</span></span> <span data-ttu-id="e98c0-142">이 경우 모든 메시지를 바인딩하는 데 필요한 보호 수준은 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-142">In this case, the protection level required of bindings for all messages is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e98c0-143">코드 예제에서는 그런 다음 `SampleService` 클래스에 대한 해당 계약을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-143">The code example then implements that contract on the `SampleService` class.</span></span>  
  
 [!code-csharp[ServiceContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/services.cs#1)]
 [!code-vb[ServiceContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicecontractattribute/vb/services.vb#1)]  
  
 <span data-ttu-id="e98c0-144">다음 코드 예제에서는 하나의 엔드포인트를 만드는 앞의 서비스에 대한 간단한 구성 파일을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-144">The following code example shows a simple configuration file for the preceding service that creates one endpoint.</span></span>  
  
 [!code-xml[ServiceContractAttribute#2](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/hostapplication.exe.config#2)]   
  
 <span data-ttu-id="e98c0-145">다음 코드 예제에서는 앞의 `SampleService`를 호출하는 간단한 클라이언트를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-145">The following code example shows a simple client that invokes the preceding `SampleService`.</span></span>  
  
 [!code-csharp[ServiceContractAttribute#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/client.cs#3)]
 [!code-vb[ServiceContractAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicecontractattribute/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.OperationContractAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/036fae20-7c55-4002-b71d-ac4466e167a3"><span data-ttu-id="e98c0-146">서비스 계약 정의</span><span class="sxs-lookup"><span data-stu-id="e98c0-146">Defining Service Contracts</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/192be927-6be2-4fda-98f0-e513c4881acc"><span data-ttu-id="e98c0-147">서비스 호스팅</span><span class="sxs-lookup"><span data-stu-id="e98c0-147">Hosting a Service</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/7cf21bfe-23bd-46aa-8033-609f851dbf76"><span data-ttu-id="e98c0-148">서비스 만들기 개요</span><span class="sxs-lookup"><span data-stu-id="e98c0-148">Service Creation Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/28dfff47-d95b-4cc2-9d5c-b3b9ba71fd50"><span data-ttu-id="e98c0-149">클라이언트 빌드</span><span class="sxs-lookup"><span data-stu-id="e98c0-149">Building a Client</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/d780af9f-73c5-42db-9e52-077a5e4de7fe"><span data-ttu-id="e98c0-150">프록시 만들기 개요</span><span class="sxs-lookup"><span data-stu-id="e98c0-150">Proxy Creation Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e98c0-151"><see cref="T:System.ServiceModel.ServiceContractAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-151">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceContractAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98c0-152">생성자는 세션 요구 사항과 콜백 계약이 없으며, 기본 이름 및 네임스페이스가 있는 특성의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-152">The constructor creates an instance of the attribute with no session requirements, no callback contract, and the default name and namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallbackContract">
      <MemberSignature Language="C#" Value="public Type CallbackContract { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CallbackContract" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" />
      <MemberSignature Language="VB.NET" Value="Public Property CallbackContract As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ CallbackContract { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CallbackContract : Type with get, set" Usage="System.ServiceModel.ServiceContractAttribute.CallbackContract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e98c0-153">계약이 이중 계약인 경우 콜백 계약의 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-153">Gets or sets the type of callback contract when the contract is a duplex contract.</span></span></summary>
        <value><span data-ttu-id="e98c0-154">콜백 계약을 나타내는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-154">A <see cref="T:System.Type" /> that indicates the callback contract.</span></span> <span data-ttu-id="e98c0-155">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-155">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98c0-156">양방향(이중) 메시지 교환에서 필요한 반대 계약을 나타내는 <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> 속성의 인터페이스를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-156">Specify an interface in the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property that represents the required opposite contract in a two-way (or duplex) message exchange.</span></span> <span data-ttu-id="e98c0-157">이렇게 하면 클라이언트 애플리케이션에서는 서버측 서비스 애플리케이션이 클라이언트 동작과 별도로 보낼 수 있는 인바운드 작업 호출을 수신 대기할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-157">This enables client applications to listen for inbound operation calls that the server-side service application can send independently of client activity.</span></span> <span data-ttu-id="e98c0-158">단방향 작업이 있는 콜백 계약은 클라이언트에서 처리할 수 있는 서비스의 호출을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-158">Callback contracts that have one-way operations represent calls from the service that the client can handle.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e98c0-159"><xref:System.ServiceModel.ServiceContractAttribute> 특성은 콜백 계약에서 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-159">The <xref:System.ServiceModel.ServiceContractAttribute> attribute is ignored on callback contracts.</span></span> <span data-ttu-id="e98c0-160">콜백 개체의 런타임 동작을 구성하려면 <xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=nameWithType>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-160">To configure runtime behavior of callback objects, use the <xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e98c0-161">다음 코드 예제에서는 콜백 계약을 지정하는 서비스를 보여 주며, 이는 `IDuplexHello` 유형의 서비스에 `IHelloCallbackContract` 유형의 서비스를 구현하는 해당 항목이 있어야 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-161">The following code example shows a service that specifies a callback contract, which indicates that a service of type `IDuplexHello` must have a correspondent that implements a service of type `IHelloCallbackContract`.</span></span> <span data-ttu-id="e98c0-162">또한 `IHelloCallbackContract`는 서비스에서 회신을 기다리지 않고 클라이언트를 호출하여 분산 이벤트 구동 클라이언트를 지원할 수 있도록 단방향 콜백 메서드를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-162">In addition, `IHelloCallbackContract` implements a one-way callback method, enabling the service to call the client without waiting for a reply to support a distributed, event-driven client.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationName">
      <MemberSignature Language="C#" Value="public string ConfigurationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigurationName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigurationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConfigurationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConfigurationName : string with get, set" Usage="System.ServiceModel.ServiceContractAttribute.ConfigurationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e98c0-163">애플리케이션 구성 파일에서 서비스를 찾는 데 사용되는 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-163">Gets or sets the name used to locate the service in an application configuration file.</span></span></summary>
        <value><span data-ttu-id="e98c0-164">애플리케이션 구성 파일에서 서비스 요소를 찾는 데 사용되는 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-164">The name used to locate the service element in an application configuration file.</span></span> <span data-ttu-id="e98c0-165">기본값은 서비스 구현 클래스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-165">The default is the name of the service implementation class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98c0-166">구성 시스템이 구성 파일에서 계약 값을 찾는 데 사용하는 값을 설정하려면 <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="e98c0-166">To set the value by which the configuration system locates a contract value in the configuration file, see <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e98c0-167">값이 null인 경우</span><span class="sxs-lookup"><span data-stu-id="e98c0-167">The value is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e98c0-168">값이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="e98c0-168">The value is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasProtectionLevel : bool" Usage="System.ServiceModel.ServiceContractAttribute.HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e98c0-169">멤버에 보호 수준이 할당되어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-169">Gets a value that indicates whether the member has a protection level assigned.</span></span></summary>
        <value><span data-ttu-id="e98c0-170"><see langword="true" /> 속성이 <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" />이 아니면 <see cref="F:System.Net.Security.ProtectionLevel.None" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-170"><see langword="true" /> if the <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> property is not <see cref="F:System.Net.Security.ProtectionLevel.None" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e98c0-171">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-171">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98c0-172"><xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> 속성은 계약에 대해 `false` 이외의 보호 수준 값이 설정되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-172">The <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> property indicates whether a protection level value other than `false` has been set for the contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.ServiceContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e98c0-173">WSDL(웹 서비스 기술 언어)에서 <see langword="&lt;portType&gt;" /> 요소의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-173">Gets or sets the name for the <see langword="&lt;portType&gt;" /> element in Web Services Description Language (WSDL).</span></span></summary>
        <value><span data-ttu-id="e98c0-174">기본값은 <see cref="T:System.ServiceModel.ServiceContractAttribute" />가 적용되는 클래스 또는 인터페이스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-174">The default value is the name of the class or interface to which the <see cref="T:System.ServiceModel.ServiceContractAttribute" /> is applied.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98c0-175">WSDL에서 <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> 요소의 이름 및 네임스페이스를 제어하려면 <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> 및 `<portType>` 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-175">Use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and the <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties to control the name and namespace of the `<portType>` element in WSDL.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e98c0-176">다음 코드 예제에서는 <xref:System.ServiceModel.ServiceContractAttribute.Name%2A>의 <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> 및 <xref:System.ServiceModel.ServiceContractAttribute> 속성을 사용하여 WSDL에서 해당 값을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-176">The following code example shows how to use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties of the <xref:System.ServiceModel.ServiceContractAttribute> to set the corresponding values in WSDL.</span></span>  
  
 [!code-csharp[SCA.Names#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/services.cs#1)]
 [!code-vb[SCA.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/services.vb#1)]  
  
 <span data-ttu-id="e98c0-177">다음 코드 예제에서는 앞의 서비스에 대 한 Windows Communication Foundation (WCF) 클라이언트를 사용 하 여 가져온 WSDL 해당 합니다 [ServiceModel Metadata 유틸리티 도구 (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-177">The following code example shows an Windows Communication Foundation (WCF) client for the preceding service that imported WSDL using the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md).</span></span> <span data-ttu-id="e98c0-178">이 클라이언트는 `HelloWorldProxy`의 예제 단원에 나오는 예제의 경우처럼 `SampleServiceProxy` 클라이언트 대신 <xref:System.ServiceModel.ServiceContractAttribute> 클라이언트를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-178">This client uses a `HelloWorldProxy` client rather than a `SampleServiceProxy` client (as is the case with the sample in the Example section of <xref:System.ServiceModel.ServiceContractAttribute>).</span></span>  
  
 [!code-csharp[SCA.Names#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/client.cs#3)]
 [!code-vb[SCA.Names#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e98c0-179">값이 null인 경우</span><span class="sxs-lookup"><span data-stu-id="e98c0-179">The value is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e98c0-180">값이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="e98c0-180">The value is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.ServiceContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e98c0-181">WSDL(웹 서비스 기술 언어)에서 <see langword="&lt;portType&gt;" /> 요소의 네임스페이스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-181">Gets or sets the namespace of the <see langword="&lt;portType&gt;" /> element in Web Services Description Language (WSDL).</span></span></summary>
        <value><span data-ttu-id="e98c0-182"><see langword="&lt;portType&gt;" /> 요소의 WSDL 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-182">The WSDL namespace of the <see langword="&lt;portType&gt;" /> element.</span></span> <span data-ttu-id="e98c0-183">기본값은 "http://tempuri.org"입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-183">The default value is "http://tempuri.org".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e98c0-184">다음 코드 예제에서는 <xref:System.ServiceModel.ServiceContractAttribute.Name%2A>의 <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> 및 <xref:System.ServiceModel.ServiceContractAttribute> 속성을 사용하여 WSDL에서 해당 값을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-184">The following code example shows how to use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties of the <xref:System.ServiceModel.ServiceContractAttribute> to set the corresponding values in WSDL.</span></span>  
  
 [!code-csharp[SCA.Names#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/services.cs#1)]
 [!code-vb[SCA.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/services.vb#1)]  
  
 <span data-ttu-id="e98c0-185">다음 코드 예제에서는 앞의 서비스에 대 한 Windows Communication Foundation (WCF) 클라이언트를 사용 하 여 가져온 WSDL 해당 합니다 [ServiceModel Metadata 유틸리티 도구 (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-185">The following code example shows an Windows Communication Foundation (WCF) client for the preceding service that imported WSDL using the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md).</span></span> <span data-ttu-id="e98c0-186">이 클라이언트는 `HelloWorldClient`의 예제 단원에 나오는 예제의 경우처럼 `SampleServiceClient` 클라이언트 대신 <xref:System.ServiceModel.ServiceContractAttribute> 클라이언트를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-186">This client uses a `HelloWorldClient` client rather than a `SampleServiceClient` client (as is the case with the sample in the Example section of <xref:System.ServiceModel.ServiceContractAttribute>).</span></span>  
  
 [!code-csharp[SCA.Names#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/client.cs#3)]
 [!code-vb[SCA.Names#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.ServiceContractAttribute.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e98c0-187">계약에 대한 바인딩이 <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> 속성 값을 지원해야 하는지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-187">Specifies whether the binding for the contract must support the value of the <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> property.</span></span></summary>
        <value><span data-ttu-id="e98c0-188"><see cref="T:System.Net.Security.ProtectionLevel" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-188">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span> <span data-ttu-id="e98c0-189">기본값은 <see cref="F:System.Net.Security.ProtectionLevel.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-189">The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98c0-190">계약 바인딩에서 계약을 노출하는 엔드포인트에 대해 필요한 암호화, 디지털 서명 또는 둘 모두의 수준을 지정하려면 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-190">Use the <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> property to specify the degree to which the contract binding requires encryption, digital signatures, or both for endpoints that expose the contract.</span></span> <span data-ttu-id="e98c0-191">여기서 설정한 값이 오류를 포함한 모든 작업 메시지의 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-191">The value set here is the default value for all operation messages including faults.</span></span>  
  
 <span data-ttu-id="e98c0-192">런타임의 보호 동작은 다음 속성에서 설정한 보호 수준 값의 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-192">It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties.</span></span> <span data-ttu-id="e98c0-193">이러한 속성은 계층 구조로 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-193">These properties have a hierarchical structure.</span></span> <span data-ttu-id="e98c0-194">가장 바깥쪽 값을 설정하면 더 좁은 범위에 명시적으로 다른 값을 설정하지 않는 한 모든 더 좁은 범위에 이 값이 기본 설정으로 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-194">Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</span></span> <span data-ttu-id="e98c0-195">이 경우 특별히 설정된 범위를 제외하고 바깥쪽 값은 모든 더 좁은 범위의 기본값으로 유지됩니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-195">In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</span></span>  
  
 <span data-ttu-id="e98c0-196">예를 들어 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>을 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>으로 설정한 경우 더 좁은 다른 범위에는 보호 수준 설정이 없다면 작업 계약의 모든 메시지에 대해 암호화 및 서명이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-196">For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> is set to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</span></span> <span data-ttu-id="e98c0-197">이러한 작업 중 하나에 <xref:System.ServiceModel.OperationContractAttribute>으로 설정된 <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>이 있으면 해당 작업의 메시지에 대해서는 서명이 수행되지만, 계약의 다른 모든 메시지의 경우 암호화 및 서명이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-197">If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</span></span>  
  
 <span data-ttu-id="e98c0-198">보호 수준의 가정 및 범위에 대 한 자세한 내용은 참조 하세요 [보호 수준을 이해](~/docs/framework/wcf/understanding-protection-level.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-198">For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
 <span data-ttu-id="e98c0-199">이러한 값이 설정된 범위는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-199">The scopes at which these values are set are:</span></span>  
  
 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="e98c0-200"><xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType>의 <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType> 속성</span><span class="sxs-lookup"><span data-stu-id="e98c0-200">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e98c0-201"><xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType>의 <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType> 속성</span><span class="sxs-lookup"><span data-stu-id="e98c0-201">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e98c0-202">계약에 명시적으로 지정된 보호 수준이 없고 기본 바인딩이 전송 수준이나 메시지 수준에서 보안을 지원하는 경우 전체 계약에서 유효한 보호 수준은 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-202">When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e98c0-203">바인딩에서 보안을 지원하지 않는 경우(예: <xref:System.ServiceModel.BasicHttpBinding>) 전체 계약에서 유효한 <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType>은 <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-203">If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> for the whole contract.</span></span> <span data-ttu-id="e98c0-204">결과는 엔드포인트 바인딩에 따라 다르며, 계약에서 <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>을 지정하더라도 클라이언트가 다른 메시지 수준이나 전송 수준의 보안 보호를 요청할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-204">The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e98c0-205">값이 <see cref="T:System.Net.Security.ProtectionLevel" /> 값 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="e98c0-205">The value is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SessionMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.SessionMode SessionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.SessionMode SessionMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.SessionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SessionMode As SessionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::SessionMode SessionMode { System::ServiceModel::SessionMode get(); void set(System::ServiceModel::SessionMode value); };" />
      <MemberSignature Language="F#" Value="member this.SessionMode : System.ServiceModel.SessionMode with get, set" Usage="System.ServiceModel.ServiceContractAttribute.SessionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.SessionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e98c0-206">세션이 허용되는지, 허용되지 않는지 또는 필요한지를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-206">Gets or sets whether sessions are allowed, not allowed or required.</span></span></summary>
        <value><span data-ttu-id="e98c0-207">세션이 허용되는지, 허용되지 않는지 또는 필요한지를 나타내는 <see cref="T:System.ServiceModel.SessionMode" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-207">A <see cref="T:System.ServiceModel.SessionMode" /> that indicates whether sessions are allowed, not allowed, or required.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98c0-208">엔드포인트 간에 세션을 지원하는 바인딩을 요구하려면 <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-208">Use the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property to require bindings that support sessions between endpoints.</span></span> <span data-ttu-id="e98c0-209">세션은 둘 이상의 엔드포인트 간에 교환되는 메시지 집합을 상호 관련시키는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-209">A session is a way of correlating a set of messages exchanged between two or more endpoints.</span></span> <span data-ttu-id="e98c0-210">서비스에서 채널 세션을 지원하는 경우 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 속성을 사용하여 서비스 계약 구현의 인스턴스와 채널 세션 사이의 관계를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-210">If your service supports channel sessions, you can then use the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property to specify the relationship between instances your service contract implementation and the channel session.</span></span> <span data-ttu-id="e98c0-211">바인딩에서 세션을 지원하지 않으면 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-211">If a binding does not support sessions, an exception is thrown.</span></span>  
  
 <span data-ttu-id="e98c0-212">예를 들어 <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> 속성을 <xref:System.ServiceModel.SessionMode.Required?displayProperty=nameWithType>로 설정하고 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 속성을 <xref:System.ServiceModel.InstanceContextMode.PerSession>으로 설정하면 클라이언트에서는 같은 연결을 사용하여 같은 서비스 개체를 반복하여 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-212">For example, if the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property is set to <xref:System.ServiceModel.SessionMode.Required?displayProperty=nameWithType> and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property is set to <xref:System.ServiceModel.InstanceContextMode.PerSession>, clients can use the same connection to make repeated calls to the same service object.</span></span>  
  
 <span data-ttu-id="e98c0-213">세션 및 서비스 인스턴스에 대 한 자세한 내용은 참조 하세요. [를 사용 하 여 세션](~/docs/framework/wcf/using-sessions.md) 하 고 [세션, Instancing, and Concurrency](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-213">For more information about sessions and service instances, see [Using Sessions](~/docs/framework/wcf/using-sessions.md) and [Sessions, Instancing, and Concurrency](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e98c0-214">세션을 지원하는 채널은 특정 세션이 있는 서비스 인스턴스의 기본 연결을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-214">A channel that supports sessions supports the default association of a service instance with a particular session.</span></span> <span data-ttu-id="e98c0-215">그러나 여러 세션 구현에서 세션 기반 인스턴스 제어 외에 여러 기능을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-215">However, different session implementations support different features in addition to session-based instancing control.</span></span> <span data-ttu-id="e98c0-216">WCF는 네 가지 유형의 세션 애플리케이션 동작을 제공 하는 데 사용할 수 있는 세션을 제공 합니다. 세션의 각 유형에 세션의 형식에 맞는 추가 동작을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-216">WCF provides four types of sessions that you can use to provide sessionful application behavior; each type of session provides additional behavior specific to the type of session it is.</span></span>  
  
1.  <span data-ttu-id="e98c0-217"><xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=nameWithType>는 보안 세션을 지원합니다. 보안 세션의 경우 통신의 양쪽 끝에서 암호화 및/또는 디지털 서명 프로세스에 동의했으므로 모든 메시지가 해당하는 특정 보안 대화와 연관됩니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-217">The <xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=nameWithType> supports security sessions, in which both ends of communication have agreed upon an encryption and/or digital signature process; all messages are correlated with that specific secure conversation.</span></span> <span data-ttu-id="e98c0-218">자세한 내용은 [Securing Services](~/docs/framework/wcf/securing-services.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-218">For more information, see [Securing Services](~/docs/framework/wcf/securing-services.md).</span></span> <span data-ttu-id="e98c0-219">예를 들어 보안 세션과 신뢰할 수 있는 세션 모두에 대한 지원이 포함된 <xref:System.ServiceModel.WSHttpBinding?displayProperty=nameWithType>은 기본적으로 메시지에 대해 암호화 및 디지털 서명을 수행하는 보안 세션만 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-219">For example, the <xref:System.ServiceModel.WSHttpBinding?displayProperty=nameWithType>, which contains support for both security sessions and reliable sessions, by default uses only a secure session which encrypts and digitally signs messages.</span></span>  
  
2.  <span data-ttu-id="e98c0-220"><xref:System.ServiceModel.NetTcpBinding?displayProperty=nameWithType>은 모든 메시지가 소켓 수준의 연결 세션으로 연관될 수 있도록 TCP/IP 연결에 의해 노출되는 세션을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-220">The <xref:System.ServiceModel.NetTcpBinding?displayProperty=nameWithType> supports the sessions exposed by the TCP/IP connections to ensure that all messages are correlated by the connection session at the socket level.</span></span>  
  
3.  <span data-ttu-id="e98c0-221">WS-ReliableMessaging 사양을 구현하는 <xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=nameWithType>는 신뢰할 수 있는 세션에 대한 지원을 제공합니다. 신뢰할 수 있는 세션에서는 대화 중에 여러 노드에서 메시지가 전달되는 경우에도 신뢰도를 사용하여 메시지를 순서대로 정확히 한 번에 배달합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-221">The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=nameWithType>, which implements the WS-ReliableMessaging specification, provides support for reliable sessions in which messages are delivered in order and exactly once, enabling confidence even when messages travel across multiple nodes during the conversation.</span></span> <span data-ttu-id="e98c0-222">자세한 내용은 [신뢰할 수 있는 세션](~/docs/framework/wcf/feature-details/reliable-sessions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-222">For more information, see [Reliable Sessions](~/docs/framework/wcf/feature-details/reliable-sessions.md).</span></span>  
  
4.  <span data-ttu-id="e98c0-223"><xref:System.ServiceModel.NetMsmqBinding?displayProperty=nameWithType>은 MSMQ 데이터그램 세션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-223">The <xref:System.ServiceModel.NetMsmqBinding?displayProperty=nameWithType> provides MSMQ datagram sessions.</span></span> <span data-ttu-id="e98c0-224">자세한 내용은 [WCF의 큐](~/docs/framework/wcf/feature-details/queues-in-wcf.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-224">For more information, see [Queues in WCF](~/docs/framework/wcf/feature-details/queues-in-wcf.md).</span></span>  
  
 <span data-ttu-id="e98c0-225"><xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> 속성을 설정하면 계약에 필요한 세션 유형을 지정하지 않고 요구만 합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-225">Remember that setting the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property does not specify the type of session the contract requires, only that it requires one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e98c0-226">다음 서비스 계약에서는 구성된 바인딩이 `SampleDuplexHello` 서비스 구현과 상호 작용하는 경우 세션을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e98c0-226">The following service contract requires that configured bindings use sessions when interacting with `SampleDuplexHello` service implementations.</span></span>  
  
 [!code-csharp[SCA.Session#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.session/cs/services.cs#1)]
 [!code-vb[SCA.Session#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.session/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e98c0-227">값이 <see cref="T:System.ServiceModel.SessionMode" /> 값 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="e98c0-227">The value is not one of the <see cref="T:System.ServiceModel.SessionMode" /> values.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>