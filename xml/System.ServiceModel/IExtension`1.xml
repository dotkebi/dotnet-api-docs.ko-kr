<Type Name="IExtension&lt;T&gt;" FullName="System.ServiceModel.IExtension&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2d07b5750e2986bb9a86c000f4b106ac82775522" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56760976" /></Metadata><TypeSignature Language="C#" Value="public interface IExtension&lt;T&gt; where T : IExtensibleObject&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtension`1&lt;(class System.ServiceModel.IExtensibleObject`1&lt;!T&gt;) T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.IExtension`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtension(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : IExtensibleObject&lt;T&gt;public interface class IExtension" />
  <TypeSignature Language="F#" Value="type IExtension&lt;'T (requires 'T :&gt; IExtensibleObject&lt;'T&gt;)&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <InterfaceName>System.ServiceModel.IExtensibleObject&lt;T&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="7459e-101">사용자 지정 동작에 참여하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-101">The object that participates in the custom behavior.</span></span></typeparam>
    <summary><span data-ttu-id="7459e-102">집합체를 통해 개체에서 다른 개체를 확장할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-102">Enables an object to extend another object through aggregation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7459e-103">WCF를 사용 하면 확장할 수 있습니다 <xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType> 개체 (합니다 <xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType>, <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>, <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType>, 및 <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType> 클래스) 확장 가능한 개체 패턴을 사용 하 여 새 상태나 동작을 추가 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-103">WCF allows you to extend <xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType> objects (the <xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType>, <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>, <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType>, and <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType> classes) by adding a new state or behavior by using its extensible object pattern.</span></span> <span data-ttu-id="7459e-104">새로운 기능을 사용 하 여 기존 런타임 클래스를 확장 하거나 또는 개체에 새 상태 기능을 추가할 확장명 가능한 개체 패턴 WCF에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-104">The extensible object pattern is used in WCF to either extend existing run-time classes with new functionality or to add new state features to an object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (T owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(!T owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IExtension`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (owner As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(T owner);" />
      <MemberSignature Language="F#" Value="abstract member Attach : 'T -&gt; unit" Usage="iExtension.Attach owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="T" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="7459e-105">이 확장을 집계하는 확장명 가능한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-105">The extensible object that aggregates this extension.</span></span></param>
        <summary><span data-ttu-id="7459e-106">확장명 개체가 집계된 시기를 확인할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-106">Enables an extension object to find out when it has been aggregated.</span></span> <span data-ttu-id="7459e-107">확장이 <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> 속성에 추가되면 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-107">Called when the extension is added to the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7459e-108">확장의 현재 인스턴스가 속한 <xref:System.ServiceModel.IExtensibleObject%601> 개체를 추적하려면 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-108">Use this method to keep track of the <xref:System.ServiceModel.IExtensibleObject%601> object to which the current instance of the extension belongs.</span></span> <span data-ttu-id="7459e-109">이렇게 호출하면 확장에서 이벤트를 처리하고 소유자의 속성을 검사할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-109">This call gives extensions a chance to handle events or inspect properties of their owner.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7459e-110">다음 예제 코드에서는 확장의 현재 인스턴스가 속한 <xref:System.ServiceModel.IExtensibleObject%601> 개체를 추적하기 위해 이 메서드를 사용할 수 있는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-110">The following example code shows how this method can be used to keep track of the <xref:System.ServiceModel.IExtensibleObject%601> object to which the current instance of the extension belongs.</span></span>  
  
```csharp  
InstanceContext owner;  
  
public void Attach(InstanceContext owner)  
{  
  this.owner = owner;   
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach (T owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Detach(!T owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IExtension`1.Detach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach (owner As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach(T owner);" />
      <MemberSignature Language="F#" Value="abstract member Detach : 'T -&gt; unit" Usage="iExtension.Detach owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="T" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="7459e-111">이 확장을 집계하는 확장명 가능한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-111">The extensible object that aggregates this extension.</span></span></param>
        <summary><span data-ttu-id="7459e-112">확장 개체가 더 이상 집계되지 않는 시기를 확인할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-112">Enables an object to find out when it is no longer aggregated.</span></span> <span data-ttu-id="7459e-113">확장이 <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> 속성에서 제거되면 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-113">Called when an extension is removed from the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7459e-114">확장이 제거된 시기를 확인하려면 <xref:System.ServiceModel.IExtension%601.Detach%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-114">Use the <xref:System.ServiceModel.IExtension%601.Detach%2A> method to find out when the extension has been removed.</span></span> <span data-ttu-id="7459e-115">확장에서 이 메서드를 사용하여 확장 가능한 개체에서 이벤트를 언후크할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-115">An extension can use this to unhook events on the extensible object.</span></span> <span data-ttu-id="7459e-116">확장은 이 메서드의 <xref:System.InvalidOperationException?displayProperty=nameWithType>을 throw하여 확장을 추가한 후에는 제거할 수 없음을 나타낼 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-116">An extension can also throw <xref:System.InvalidOperationException?displayProperty=nameWithType> from this method to indicate that, once added, the extension cannot be removed.</span></span>  
  
 <span data-ttu-id="7459e-117">소유자 개체를 삭제하거나 닫으면 이 메서드가 호출되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-117">Note that this method is not called when the owner object is disposed or closed.</span></span> <span data-ttu-id="7459e-118">필요한 경우 확장이나 확장을 추가하는 코드에 따라 적절한 <xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType> 이벤트를 후크하거나, <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType>의 적절한 인터페이스를 구현하여 소유자의 수명을 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7459e-118">If needed, it is up to the extension or the code adding the extension to hook the appropriate <xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType> events or implement the appropriate interfaces (for <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType>) to observe the lifecycle of the owner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>