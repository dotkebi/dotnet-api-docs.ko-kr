<Type Name="PackageStore" FullName="System.IO.Packaging.PackageStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cb63b9884469dab5119b479d4d26748d23cfa155" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56400342" /></Metadata><TypeSignature Language="C#" Value="public static class PackageStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackageStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageStore" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageStore abstract sealed" />
  <TypeSignature Language="F#" Value="type PackageStore = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1d151-101"><see cref="T:System.IO.Packaging.Package" />와 함께 사용되는 응용 프로그램별 <see cref="T:System.IO.Packaging.PackWebRequest" /> 인스턴스의 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-101">Represents a collection of application-specific <see cref="T:System.IO.Packaging.Package" /> instances used in combination with <see cref="T:System.IO.Packaging.PackWebRequest" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d151-102"><xref:System.IO.Packaging.PackageStore> 열려 있고 애플리케이션에서 활성화 된 패키지의 참조 컬렉션을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-102">The <xref:System.IO.Packaging.PackageStore> defines a reference collections of package that are open and active in the application.</span></span>  <span data-ttu-id="1d151-103">패키지에 추가 된 <xref:System.IO.Packaging.PackageStore> 액세스 하는 해당 키 URI 값으로.</span><span class="sxs-lookup"><span data-stu-id="1d151-103">Packages added to the <xref:System.IO.Packaging.PackageStore> are accessed is by their key URI value.</span></span>  <span data-ttu-id="1d151-104"><xref:System.IO.Packaging.PackageStore> 세 가지 일반적인 사용을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-104">The <xref:System.IO.Packaging.PackageStore> supports three common uses:</span></span>  
  
1.  <span data-ttu-id="1d151-105">에 액세스 <xref:System.IO.Packaging.PackagePart> 를 통해 데이터 <xref:System.IO.Packaging.PackWebRequest>입니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-105">Accessing <xref:System.IO.Packaging.PackagePart> data through <xref:System.IO.Packaging.PackWebRequest>.</span></span>  
  
2.  <span data-ttu-id="1d151-106">인스턴스를 가져와 애플리케이션을 <xref:System.IO.Packaging.Package> 패키지의 URI를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-106">The application obtaining an instance of a <xref:System.IO.Packaging.Package> given the package's URI.</span></span>  
  
3.  <span data-ttu-id="1d151-107">패키지 생성 및 저장 되는 액세스를 <xref:System.IO.MemoryStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-107">Accessing packages that are created and stored in a <xref:System.IO.MemoryStream>.</span></span>  
  
 <span data-ttu-id="1d151-108">성능을 개선 하 고 반복된 파일 열기/닫기 작업의 오버 헤드를 최소화 합니다 <xref:System.IO.Packaging.PackageStore> 를 사용 하 여 액세스 하는 패키지의 인스턴스를 관리 <xref:System.IO.Packaging.PackWebRequest> 및 애플리케이션에서 직접.</span><span class="sxs-lookup"><span data-stu-id="1d151-108">To improve performance and minimize the overhead of repeated file open/close operations, the <xref:System.IO.Packaging.PackageStore> is used to manage instances of packages accessed by <xref:System.IO.Packaging.PackWebRequest> and directly by the application.</span></span>  <span data-ttu-id="1d151-109">패키지에서 데이터에 액세스할 때 합니다 <xref:System.IO.Packaging.Package> 요청된 된 주소의 <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A> 를 먼저 검사 패키지에 정의 된 열고 이미 인지 확인 하는 <xref:System.IO.Packaging.PackageStore>.</span><span class="sxs-lookup"><span data-stu-id="1d151-109">When accessing data in a package, the <xref:System.IO.Packaging.Package> address of a requested <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A> is first checked to see if the package is already defined and open in the <xref:System.IO.Packaging.PackageStore>.</span></span>  <span data-ttu-id="1d151-110">패키지에서 열린 상태로 정의 된 경우는 <xref:System.IO.Packaging.PackageStore>, 요청한 부분을 반복적으로 열고 닫는 각 요청에 대 한 패키지 없이 직접 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-110">If the package is defined as open in the <xref:System.IO.Packaging.PackageStore>, requested parts can be accessed directly without repeatedly opening and closing the package for each  request.</span></span>  
  
 <span data-ttu-id="1d151-111">애플리케이션 사용 하 여 패키지를 열면 <xref:System.IO.Packaging.Package.Open%2A?displayProperty=nameWithType>, <xref:System.IO.Packaging.PackageStore.AddPackage%2A> 패키지를 추가 하기 위해 호출할 수는 <xref:System.IO.Packaging.PackageStore>합니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-111">If your application opens a package with <xref:System.IO.Packaging.Package.Open%2A?displayProperty=nameWithType>, <xref:System.IO.Packaging.PackageStore.AddPackage%2A> can be called to add the package to the <xref:System.IO.Packaging.PackageStore>.</span></span>  <span data-ttu-id="1d151-112"><xref:System.IO.Packaging.PackageStore.RemovePackage%2A> 패키지를 제거 하도록 나중에 호출 해야 합니다 <xref:System.IO.Packaging.PackageStore> 호출 하기 전에 <xref:System.IO.Packaging.Package.Close%2A?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-112"><xref:System.IO.Packaging.PackageStore.RemovePackage%2A> should later be called to remove the package from the <xref:System.IO.Packaging.PackageStore> prior to calling <xref:System.IO.Packaging.Package.Close%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1d151-113">XPS 패키지를 사용 하 여 열을 <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> 생성자는 자동으로 추가 및 제거할는 <xref:System.IO.Packaging.PackageStore> 문서를 생성 하 고 삭제 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="1d151-113">XPS packages opened with an <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> constructor are automatically added and removed from the <xref:System.IO.Packaging.PackageStore> when the document is created and disposed.</span></span>  <span data-ttu-id="1d151-114">(호출할 필요가 없습니다 <xref:System.IO.Packaging.PackageStore.AddPackage%2A> 나 <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> XPS 패키지를 사용 하 여 열에 대해 별도로 <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> 생성자입니다.)</span><span class="sxs-lookup"><span data-stu-id="1d151-114">(You do not need to call <xref:System.IO.Packaging.PackageStore.AddPackage%2A> or <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> separately for XPS packages opened with <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> constructors.)</span></span>  
  
 <span data-ttu-id="1d151-115">통해 액세스 하는 패키지의 파일 I/O 권한을 <xref:System.IO.Packaging.PackageStore> 열릴 때 패키지에 대해 설정 된 I/O 사용 권한에 동일 하 게 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-115">The file I/O permissions of a package accessed through the <xref:System.IO.Packaging.PackageStore> remains the same as the I/O permissions set on the package when it is opened.</span></span>  <span data-ttu-id="1d151-116"><xref:System.IO.Packaging.PackageStore> 만 저장소에 추가 된 패키지에 대 한 참조를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-116">The <xref:System.IO.Packaging.PackageStore> only provides references to the packages that have been added the store.</span></span>  <span data-ttu-id="1d151-117">그러면 애플리케이션이 올바르게 열기, 업데이트 및 각 패키지를 닫기 것입니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-117">It is up to the application to correctly open, update, and close each package.</span></span>  
  
 <span data-ttu-id="1d151-118">패키지에 추가 합니다 <xref:System.IO.Packaging.PackageStore> 와 함께에서 사용할 때 다중 스레드 환경에서 액세스할 수 있습니다를 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 파서 같은 <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-118">Packages added to the <xref:System.IO.Packaging.PackageStore> can be accessed in multithreaded environments when they are used in combination with a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] parser such as <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="1d151-119">다중 스레드 환경에서 운영 하는 경우 애플리케이션에 액세스 하기 전에 패키지를 잠가야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-119">When operating in a multithreaded environment, the application must lock the package before access.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackWebRequest" />
    <altmember cref="T:System.IO.Packaging.PackWebResponse" />
  </Docs>
  <Members>
    <Member MemberName="AddPackage">
      <MemberSignature Language="C#" Value="public static void AddPackage (Uri uri, System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPackage(class System.Uri uri, class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPackage(Uri ^ uri, System::IO::Packaging::Package ^ package);" />
      <MemberSignature Language="F#" Value="static member AddPackage : Uri * System.IO.Packaging.Package -&gt; unit" Usage="System.IO.Packaging.PackageStore.AddPackage (uri, package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="1d151-120"><see cref="T:System.IO.Packaging.PackWebRequest" />에서 비교할 <paramref name="package" />의 키 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]입니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-120">The key [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the <paramref name="package" /> to compare in a <see cref="T:System.IO.Packaging.PackWebRequest" />.</span></span></param>
        <param name="package"><span data-ttu-id="1d151-121">저장소에 추가할 패키지입니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-121">The package to add to the store.</span></span></param>
        <summary><span data-ttu-id="1d151-122">저장소에 <see cref="T:System.IO.Packaging.Package" />를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-122">Adds a <see cref="T:System.IO.Packaging.Package" /> to the store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d151-123">`packageUri` 패키지의 키를 호출할 때 비교 되는 URI를 정의 <xref:System.IO.Packaging.PackWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-123">`packageUri` defines the package's key URI that is compared when you call <xref:System.IO.Packaging.PackWebRequest>.</span></span>  
  
 <span data-ttu-id="1d151-124">경우는 `packageUri` 일치 하는 <xref:System.IO.Packaging.PackagePart.Uri%2A> 에 대 한를 <xref:System.IO.Packaging.PackagePart> 에 <xref:System.IO.Packaging.PackWebRequest> 에 정의 된 패키지를 호출할를 <xref:System.IO.Packaging.PackageStore> 요청한 부분에 액세스 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-124">If the `packageUri` matches the <xref:System.IO.Packaging.PackagePart.Uri%2A> for a <xref:System.IO.Packaging.PackagePart> in a <xref:System.IO.Packaging.PackWebRequest> call, the package defined in the <xref:System.IO.Packaging.PackageStore> is used to access the requested part.</span></span>  
  
 <span data-ttu-id="1d151-125">경우는 `packageUri` 와 일치 하지 않습니다는 <xref:System.IO.Packaging.PackagePart.Uri%2A> 에 대 한를 <xref:System.IO.Packaging.PackagePart> 에 <xref:System.IO.Packaging.PackWebRequest> 요청한 부분에 액세스 호출에 지정된 된 URI 사용 하 여 패키지를 열.</span><span class="sxs-lookup"><span data-stu-id="1d151-125">If the `packageUri` does not match the <xref:System.IO.Packaging.PackagePart.Uri%2A> for a <xref:System.IO.Packaging.PackagePart> in a <xref:System.IO.Packaging.PackWebRequest> call, the package with the specified URI is opened to access the requested part.</span></span>  
  
 <span data-ttu-id="1d151-126">**보안 참고** 이 메서드 요청 <xref:System.Security.Permissions.EnvironmentPermission> 모든 사용자 지정에 대 한 <xref:System.IO.Packaging.Package> (비-<xref:System.IO.Packaging.ZipPackage>) 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-126">**Security Note** This method demands <xref:System.Security.Permissions.EnvironmentPermission> for all custom <xref:System.IO.Packaging.Package> (non-<xref:System.IO.Packaging.ZipPackage>) types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d151-127">다음 예제에서는 <xref:System.IO.Packaging.PackageStore.AddPackage%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-127">The following example shows how to use the <xref:System.IO.Packaging.PackageStore.AddPackage%2A> method.</span></span>  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewdecrypt)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d151-128"><paramref name="package" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-128"><paramref name="package" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d151-129"><paramref name="packageUri" />가 잘못된 패키지 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]인 경우</span><span class="sxs-lookup"><span data-stu-id="1d151-129"><paramref name="packageUri" /> is an invalid package [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d151-130">지정된 <paramref name="packageUri" />의 패키지가 이미 저장소에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="1d151-130">A package with the specified <paramref name="packageUri" /> is already in the store.</span></span></exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package GetPackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package GetPackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ GetPackage(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member GetPackage : Uri -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.PackageStore.GetPackage uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="1d151-131">반환할 패키지의 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]입니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-131">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the package to return.</span></span></param>
        <summary><span data-ttu-id="1d151-132">저장소에서 지정된 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]의 <see cref="T:System.IO.Packaging.Package" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-132">Returns the <see cref="T:System.IO.Packaging.Package" /> with a specified [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] from the store.</span></span></summary>
        <returns><span data-ttu-id="1d151-133">지정된 <paramref name="packageUri" />의 패키지입니다. 지정된 <paramref name="packageUri" />의 패키지가 저장소에 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-133">The package with a specified <paramref name="packageUri" />; or <see langword="null" />, if a package with the specified <paramref name="packageUri" /> is not in the store.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d151-134">`packageUri` Uri와 일치 하는에 지정 된 된 <xref:System.IO.Packaging.PackageStore.AddPackage%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-134">`packageUri` is matched to the URIs specified in the <xref:System.IO.Packaging.PackageStore.AddPackage%2A> method call.</span></span>  
  
 <span data-ttu-id="1d151-135">**보안 참고** 이 메서드 요청 <xref:System.Security.Permissions.EnvironmentPermission> 모든 사용자 지정에 대 한 <xref:System.IO.Packaging.Package> (비-<xref:System.IO.Packaging.ZipPackage>) 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-135">**Security Note** This method demands <xref:System.Security.Permissions.EnvironmentPermission> for all custom <xref:System.IO.Packaging.Package> (non-<xref:System.IO.Packaging.ZipPackage>) types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d151-136">다음 예제에서는 <xref:System.IO.Packaging.PackageStore.GetPackage%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-136">The following example shows how to use the <xref:System.IO.Packaging.PackageStore.GetPackage%2A> method.</span></span>  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewopendoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewopendoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d151-137"><paramref name="packageUri" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-137"><paramref name="packageUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d151-138"><paramref name="packageUri" />가 잘못된 패키지 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]인 경우</span><span class="sxs-lookup"><span data-stu-id="1d151-138"><paramref name="packageUri" /> is an invalid package [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span></span></exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePackage">
      <MemberSignature Language="C#" Value="public static void RemovePackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePackage(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member RemovePackage : Uri -&gt; unit" Usage="System.IO.Packaging.PackageStore.RemovePackage uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="1d151-139">제거할 패키지의 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]입니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-139">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the package to remove.</span></span></param>
        <summary><span data-ttu-id="1d151-140">저장소에서 지정된 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]의 <see cref="T:System.IO.Packaging.Package" />를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-140">Removes the <see cref="T:System.IO.Packaging.Package" /> with a specified [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] from the store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d151-141">`packageUri` Uri와 일치 하는에 지정 된 된 <xref:System.IO.Packaging.PackageStore.AddPackage%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-141">`packageUri` is matched to the URIs specified in the <xref:System.IO.Packaging.PackageStore.AddPackage%2A> method call.</span></span>  
  
 <span data-ttu-id="1d151-142">**보안 참고** 이 메서드 요청 <xref:System.Security.Permissions.EnvironmentPermission> 모든 사용자 지정에 대 한 <xref:System.IO.Packaging.Package> (비-<xref:System.IO.Packaging.ZipPackage>) 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-142">**Security Note** This method demands <xref:System.Security.Permissions.EnvironmentPermission> for all custom <xref:System.IO.Packaging.Package> (non-<xref:System.IO.Packaging.ZipPackage>) types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d151-143">다음 예제에서는 <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-143">The following example shows how to use the <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> method.</span></span>  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewclosedoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewclosedoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d151-144"><paramref name="packageUri" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1d151-144"><paramref name="packageUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d151-145"><paramref name="packageUri" />가 잘못된 패키지 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]인 경우</span><span class="sxs-lookup"><span data-stu-id="1d151-145"><paramref name="packageUri" /> is an invalid package [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span></span></exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>