<Type Name="WindowsPrincipal" FullName="System.Security.Principal.WindowsPrincipal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6b9ec750db587d817a634466d8f37354e89d37bc" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56758897" /></Metadata><TypeSignature Language="C#" Value="public class WindowsPrincipal : System.Security.Claims.ClaimsPrincipal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WindowsPrincipal extends System.Security.Claims.ClaimsPrincipal" />
  <TypeSignature Language="DocId" Value="T:System.Security.Principal.WindowsPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsPrincipal&#xA;Inherits ClaimsPrincipal" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsPrincipal : System::Security::Claims::ClaimsPrincipal" />
  <TypeSignature Language="F#" Value="type WindowsPrincipal = class&#xA;    inherit ClaimsPrincipal" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Principal.Windows</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsPrincipal</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="af72b-101">코드에서 Windows 사용자의 Windows 그룹 멤버 자격을 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-101">Enables code to check the Windows group membership of a Windows user.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af72b-102"><xref:System.Security.Principal.WindowsPrincipal> 클래스 Windows 사용자의 역할을 확인 하는 데 주로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-102">The <xref:System.Security.Principal.WindowsPrincipal> class is primarily used to check the role of a Windows user.</span></span> <span data-ttu-id="af72b-103"><xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A?displayProperty=nameWithType> 메서드 오버 로드를 통해 다른 역할 컨텍스트를 사용 하 여 사용자 역할을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-103">The <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A?displayProperty=nameWithType> method overloads let you check the user role by using different role contexts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af72b-104">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-104">The following example demonstrates how to use the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method overloads.</span></span> <span data-ttu-id="af72b-105"><xref:System.Security.Principal.WindowsBuiltInRole> 열거형은 기본 제공 역할을 식별 하는 상대 식별자 (Rid)에 대 한 원본으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-105">The <xref:System.Security.Principal.WindowsBuiltInRole> enumeration is used as the source for the relative identifiers (RIDs) that identify the built-in roles.</span></span> <span data-ttu-id="af72b-106">Rid는 현재 사용자의 역할을 결정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-106">The RIDs are used to determine the roles of the current principal.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CPP/source.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#1)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsPrincipal (System.Security.Principal.WindowsIdentity ntIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.WindowsIdentity ntIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.#ctor(System.Security.Principal.WindowsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ntIdentity As WindowsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsPrincipal(System::Security::Principal::WindowsIdentity ^ ntIdentity);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsPrincipal : System.Security.Principal.WindowsIdentity -&gt; System.Security.Principal.WindowsPrincipal" Usage="new System.Security.Principal.WindowsPrincipal ntIdentity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ntIdentity" Type="System.Security.Principal.WindowsIdentity" />
      </Parameters>
      <Docs>
        <param name="ntIdentity"><span data-ttu-id="af72b-107"><see cref="T:System.Security.Principal.WindowsPrincipal" />의 새 인스턴스를 만들 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-107">The object from which to construct the new instance of <see cref="T:System.Security.Principal.WindowsPrincipal" />.</span></span></param>
        <summary><span data-ttu-id="af72b-108">지정된 <see cref="T:System.Security.Principal.WindowsIdentity" /> 개체를 사용하여 <see cref="T:System.Security.Principal.WindowsPrincipal" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-108">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsPrincipal" /> class by using the specified <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="af72b-109">다음 예제에서는 새 <xref:System.Security.Principal.WindowsPrincipal> 현재에서 개체 <xref:System.Security.Principal.WindowsIdentity> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-109">The following example creates a new <xref:System.Security.Principal.WindowsPrincipal> object from the current <xref:System.Security.Principal.WindowsIdentity> object.</span></span>  
  
 [!code-cpp[Classic WindowsPrincipal.WindowsPrincipal Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.WindowsPrincipal Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WindowsPrincipal.WindowsPrincipal Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.WindowsPrincipal Example/CS/source.cs#1)]
 [!code-vb[Classic WindowsPrincipal.WindowsPrincipal Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic WindowsPrincipal.WindowsPrincipal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="af72b-110"><paramref name="ntIdentity" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="af72b-110"><paramref name="ntIdentity" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeviceClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; DeviceClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; DeviceClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsPrincipal.DeviceClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeviceClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ DeviceClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeviceClaims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsPrincipal.DeviceClaims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_DeviceClaims&gt;d__13))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_DeviceClaims&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_DeviceClaims&gt;d__10))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af72b-111">이 보안 주체의 모든 Windows 디바이스 클레임을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-111">Gets all Windows device claims from this principal.</span></span></summary>
        <value><span data-ttu-id="af72b-112">이 보안 주체의 모든 Windows 디바이스 클레임 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-112">A collection of all Windows device claims from this principal.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public override System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsPrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Security.Principal.IIdentity" Usage="System.Security.Principal.WindowsPrincipal.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af72b-113">현재 보안 주체(principal)의 ID를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-113">Gets the identity of the current principal.</span></span></summary>
        <value><span data-ttu-id="af72b-114">현재 보안 주체의 <see cref="T:System.Security.Principal.WindowsIdentity" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-114">The <see cref="T:System.Security.Principal.WindowsIdentity" /> object of the current principal.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="af72b-115">다음 예제를 사용 하 여 사용자의 이름을 검색 합니다 <xref:System.Security.Principal.WindowsPrincipal.Identity%2A> 의 속성을 <xref:System.Security.Principal.WindowsPrincipal> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-115">The following example retrieves the name of the user by using the <xref:System.Security.Principal.WindowsPrincipal.Identity%2A> property of the <xref:System.Security.Principal.WindowsPrincipal> object.</span></span>  
  
 [!code-cpp[Classic WindowsPrincipal.Identity Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.Identity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WindowsPrincipal.Identity Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.Identity Example/CS/source.cs#1)]
 [!code-vb[Classic WindowsPrincipal.Identity Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic WindowsPrincipal.Identity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsInRole">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="af72b-116">현재 보안 주체가 지정된 Windows 사용자 그룹에 속하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-116">Determines whether the current principal belongs to a specified Windows user group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af72b-117">이 메서드에 대 한 4 개의 오버 로드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-117">There are four overloads for this method.</span></span> <span data-ttu-id="af72b-118">성능상의 이유로 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> 오버 로드 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-118">For performance reasons, the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> overload is strongly recommended.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="af72b-119"><xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 메서드가 Windows 98 또는 Windows Millennium Edition에서 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-119">The <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (int rid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(int32 rid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (rid As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(int rid);" />
      <MemberSignature Language="F#" Value="override this.IsInRole : int -&gt; bool" Usage="windowsPrincipal.IsInRole rid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rid"><span data-ttu-id="af72b-120">보안 주체의 구성원 자격 상태를 확인할 Windows 사용자 그룹의 RID입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-120">The RID of the Windows user group in which to check for the principal's membership status.</span></span></param>
        <summary><span data-ttu-id="af72b-121">현재 보안 주체가 지정된 RID(상대 식별자)를 갖는 Windows 사용자 그룹에 속하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-121">Determines whether the current principal belongs to the Windows user group with the specified relative identifier (RID).</span></span></summary>
        <returns><span data-ttu-id="af72b-122">현재 보안 주체가 지정된 Windows 사용자 그룹의 멤버이면, 즉 특정 역할에 속해 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-122"><see langword="true" /> if the current principal is a member of the specified Windows user group, that is, in a particular role; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af72b-123">새 그룹을 새 사용자 등의 새로 만든된 역할 정보를 테스트할 때에 로그 아웃 했다가 로그인의 도메인 내에서 역할 정보 전파 되도록 하는 일을 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-123">When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain.</span></span> <span data-ttu-id="af72b-124">이렇게 하지 않으면 발생할 수 있습니다 합니다 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 반환할 테스트 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-124">Not doing so can cause the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> test to return `false`.</span></span> <span data-ttu-id="af72b-125">Windows 98 또는 Windows Millennium Edition에서 이 메서드가 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="af72b-125">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
 <span data-ttu-id="af72b-126">성능상의 이유로 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> 오버 로드가 사용자의 역할을 결정 하기 위한 것이 좋습니다 오버 로드로 권장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-126">For performance reasons, the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> overload is recommended as the preferable overload for determining the user's role.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="af72b-127">Windows Vista에서는 UAC(사용자 계정 컨트롤)가 사용자 권한을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-127">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="af72b-128">기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-128">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="af72b-129">기본적으로 표준 사용자 역할이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-129">By default, you are in the standard user role.</span></span> <span data-ttu-id="af72b-130">관리 권한이 필요한 작업을 수행 하려고 할 때 동의 대화 상자를 사용 하 여 사용자의 역할을 동적으로 높일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-130">When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.</span></span> <span data-ttu-id="af72b-131">실행 하는 코드는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 메서드 동의 대화 상자를 표시 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-131">The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box.</span></span> <span data-ttu-id="af72b-132">기본 제공 관리자 그룹에 있는 경우에 표준 사용자 역할이 있는 경우 false를 반환 하는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-132">The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.</span></span> <span data-ttu-id="af72b-133">애플리케이션 아이콘을 마우스 오른쪽 단추로 클릭 하 고 관리자 권한으로 실행을 클릭 하 여 코드를 실행 하기 전에 귀하의 권한을 높일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-133">You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="af72b-134">Rid (상대 식별자)는 Windows 사용자 그룹의 SID (보안 식별자)의 구성 요소 및 플랫폼 간 지역화 문제를 방지 하는 데 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-134">Relative identifiers (RIDs) are components of a Windows user group's security identifier (SID) and are supported to help prevent cross-platform localization issues.</span></span> <span data-ttu-id="af72b-135">여러 사용자 계정, 로컬 그룹 및 글로벌 그룹 기본값이 RID 모든 버전의 Windows에서 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-135">Many user accounts, local groups, and global groups have a default RID value that is constant across all versions of Windows.</span></span>  
  
 <span data-ttu-id="af72b-136">예를 들어, BUILTIN\Administrators 역할에 대 한 RID 0x220입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-136">For example, the RID for the BUILTIN\Administrators role is 0x220.</span></span> <span data-ttu-id="af72b-137">0x220이에 대 한 입력된 매개 변수로 사용 합니다 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 메서드 `true` 되 고 현재 사용자가 관리자 인지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-137">Using 0x220 as the input parameter for the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method results in `true` being returned if the current principal is an administrator.</span></span>  
  
 <span data-ttu-id="af72b-138">다음 표에서 기본 RID 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-138">The following tables list the default RID values.</span></span>  
  
|<span data-ttu-id="af72b-139">기본 제공 사용자</span><span class="sxs-lookup"><span data-stu-id="af72b-139">Built-in users</span></span>|<span data-ttu-id="af72b-140">RID</span><span class="sxs-lookup"><span data-stu-id="af72b-140">RID</span></span>|  
|---------------------|---------|  
|<span data-ttu-id="af72b-141">DOMAINNAME\Administrator</span><span class="sxs-lookup"><span data-stu-id="af72b-141">DOMAINNAME\Administrator</span></span>|<span data-ttu-id="af72b-142">0x1F4</span><span class="sxs-lookup"><span data-stu-id="af72b-142">0x1F4</span></span>|  
|<span data-ttu-id="af72b-143">DOMAINNAME\Guest</span><span class="sxs-lookup"><span data-stu-id="af72b-143">DOMAINNAME\Guest</span></span>|<span data-ttu-id="af72b-144">0x1F5</span><span class="sxs-lookup"><span data-stu-id="af72b-144">0x1F5</span></span>|  
  
|<span data-ttu-id="af72b-145">기본 제공 글로벌 그룹</span><span class="sxs-lookup"><span data-stu-id="af72b-145">Built-in global groups</span></span>|<span data-ttu-id="af72b-146">RID</span><span class="sxs-lookup"><span data-stu-id="af72b-146">RID</span></span>|  
|-----------------------------|---------|  
|<span data-ttu-id="af72b-147">DOMAINNAME\Domain 관리자</span><span class="sxs-lookup"><span data-stu-id="af72b-147">DOMAINNAME\Domain Admins</span></span>|<span data-ttu-id="af72b-148">0x200</span><span class="sxs-lookup"><span data-stu-id="af72b-148">0x200</span></span>|  
|<span data-ttu-id="af72b-149">DOMAINNAME\Domain 사용자</span><span class="sxs-lookup"><span data-stu-id="af72b-149">DOMAINNAME\Domain Users</span></span>|<span data-ttu-id="af72b-150">0x201</span><span class="sxs-lookup"><span data-stu-id="af72b-150">0x201</span></span>|  
|<span data-ttu-id="af72b-151">DOMAINNAME\Domain 게스트</span><span class="sxs-lookup"><span data-stu-id="af72b-151">DOMAINNAME\Domain Guests</span></span>|<span data-ttu-id="af72b-152">0x202</span><span class="sxs-lookup"><span data-stu-id="af72b-152">0x202</span></span>|  
  
|<span data-ttu-id="af72b-153">기본 제공 로컬 그룹</span><span class="sxs-lookup"><span data-stu-id="af72b-153">Built-in local groups</span></span>|<span data-ttu-id="af72b-154">RID</span><span class="sxs-lookup"><span data-stu-id="af72b-154">RID</span></span>|  
|----------------------------|---------|  
|<span data-ttu-id="af72b-155">BUILTIN\Administrators</span><span class="sxs-lookup"><span data-stu-id="af72b-155">BUILTIN\Administrators</span></span>|<span data-ttu-id="af72b-156">0x220</span><span class="sxs-lookup"><span data-stu-id="af72b-156">0x220</span></span>|  
|<span data-ttu-id="af72b-157">BUILTIN\Users</span><span class="sxs-lookup"><span data-stu-id="af72b-157">BUILTIN\Users</span></span>|<span data-ttu-id="af72b-158">0x221</span><span class="sxs-lookup"><span data-stu-id="af72b-158">0x221</span></span>|  
|<span data-ttu-id="af72b-159">BUILTIN\Guests</span><span class="sxs-lookup"><span data-stu-id="af72b-159">BUILTIN\Guests</span></span>|<span data-ttu-id="af72b-160">0x222</span><span class="sxs-lookup"><span data-stu-id="af72b-160">0x222</span></span>|  
|<span data-ttu-id="af72b-161">BUILTIN\Account 연산자</span><span class="sxs-lookup"><span data-stu-id="af72b-161">BUILTIN\Account Operators</span></span>|<span data-ttu-id="af72b-162">0x224</span><span class="sxs-lookup"><span data-stu-id="af72b-162">0x224</span></span>|  
|<span data-ttu-id="af72b-163">BUILTIN\Server 연산자</span><span class="sxs-lookup"><span data-stu-id="af72b-163">BUILTIN\Server Operators</span></span>|<span data-ttu-id="af72b-164">0x225</span><span class="sxs-lookup"><span data-stu-id="af72b-164">0x225</span></span>|  
|<span data-ttu-id="af72b-165">BUILTIN\Print 연산자</span><span class="sxs-lookup"><span data-stu-id="af72b-165">BUILTIN\Print Operators</span></span>|<span data-ttu-id="af72b-166">0x226</span><span class="sxs-lookup"><span data-stu-id="af72b-166">0x226</span></span>|  
|<span data-ttu-id="af72b-167">BUILTIN\Backup 연산자</span><span class="sxs-lookup"><span data-stu-id="af72b-167">BUILTIN\Backup Operators</span></span>|<span data-ttu-id="af72b-168">0x227</span><span class="sxs-lookup"><span data-stu-id="af72b-168">0x227</span></span>|  
|<span data-ttu-id="af72b-169">BUILTIN\Replicator</span><span class="sxs-lookup"><span data-stu-id="af72b-169">BUILTIN\Replicator</span></span>|<span data-ttu-id="af72b-170">0x228</span><span class="sxs-lookup"><span data-stu-id="af72b-170">0x228</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="af72b-171">다음 코드 예제에서는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="af72b-171">The following code example demonstrates the use of  the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> methods.</span></span> <span data-ttu-id="af72b-172"><xref:System.Security.Principal.WindowsBuiltInRole> 열거형은 기본 제공 역할을 식별 하는 Rid에 대 한 원본으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-172">The <xref:System.Security.Principal.WindowsBuiltInRole> enumeration is used as the source for the RIDs that identify the built-in roles.</span></span> <span data-ttu-id="af72b-173">Rid는 현재 사용자의 역할을 결정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-173">The RIDs are used to determine the roles of the current principal.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CPP/source.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#1)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (System.Security.Principal.SecurityIdentifier sid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(class System.Security.Principal.SecurityIdentifier sid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (sid As SecurityIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::Security::Principal::SecurityIdentifier ^ sid);" />
      <MemberSignature Language="F#" Value="override this.IsInRole : System.Security.Principal.SecurityIdentifier -&gt; bool" Usage="windowsPrincipal.IsInRole sid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sid"><span data-ttu-id="af72b-174">Windows 사용자 그룹을 고유하게 식별하는 <see cref="T:System.Security.Principal.SecurityIdentifier" />입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-174">A <see cref="T:System.Security.Principal.SecurityIdentifier" /> that uniquely identifies a Windows user group.</span></span></param>
        <summary><span data-ttu-id="af72b-175">현재 보안 주체가 지정된 SID(보안 식별자)를 갖는 Windows 사용자 그룹에 속하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-175">Determines whether the current principal belongs to the Windows user group with the specified security identifier (SID).</span></span></summary>
        <returns><span data-ttu-id="af72b-176">현재 보안 주체가 지정된 Windows 사용자 그룹의 멤버이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-176"><see langword="true" /> if the current principal is a member of the specified Windows user group; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af72b-177"><xref:System.Security.Principal.SecurityIdentifier> 사용자 또는 Windows 2000, Windows Server 및 Windows XP 구현에서 그룹을 고유 하 게 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-177">The <xref:System.Security.Principal.SecurityIdentifier> uniquely identifies a user or group on Windows 2000, Windows Server, and Windows XP implementations.</span></span> <span data-ttu-id="af72b-178">새 그룹을 새 사용자 등의 새로 만든된 역할 정보를 테스트할 때에 로그 아웃 했다가 로그인의 도메인 내에서 역할 정보 전파 되도록 하는 일을 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-178">When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain.</span></span> <span data-ttu-id="af72b-179">이렇게 하지 않으면 발생할 수 있습니다 합니다 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 반환할 테스트 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-179">Not doing so can cause the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> test to return `false`.</span></span> <span data-ttu-id="af72b-180">Windows 98 또는 Windows Millennium Edition에서 이 메서드가 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="af72b-180">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="af72b-181">Windows Vista에서는 UAC(사용자 계정 컨트롤)가 사용자 권한을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-181">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="af72b-182">기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-182">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="af72b-183">기본적으로 표준 사용자 역할이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-183">By default, you are in the standard user role.</span></span> <span data-ttu-id="af72b-184">관리 권한이 필요한 작업을 수행 하려고 할 때 동의 대화 상자를 사용 하 여 사용자의 역할을 동적으로 높일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-184">When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.</span></span> <span data-ttu-id="af72b-185">실행 하는 코드는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 메서드 동의 대화 상자를 표시 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-185">The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box.</span></span> <span data-ttu-id="af72b-186">기본 제공 관리자 그룹에 있는 경우에 표준 사용자 역할이 있는 경우 false를 반환 하는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-186">The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.</span></span> <span data-ttu-id="af72b-187">애플리케이션 아이콘을 마우스 오른쪽 단추로 클릭 하 고 관리자 권한으로 실행을 클릭 하 여 코드를 실행 하기 전에 귀하의 권한을 높일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-187">You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="af72b-188">성능상의 이유로, 사용자의 역할을 확인 하는 것이 좋습니다 오버 로드입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-188">For performance reasons, this is the preferable overload to determine a user's role.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af72b-189">다음 코드 예제에서는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="af72b-189">The following code example demonstrates the use of the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="af72b-190"><xref:System.Security.Principal.WellKnownSidType.BuiltinAdministratorsSid> 현재 보안 주체 관리자 인지 여부를 확인 하려면 열거형 값이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-190">The <xref:System.Security.Principal.WellKnownSidType.BuiltinAdministratorsSid> enumeration value is used to determine whether the current principal is an administrator.</span></span> <span data-ttu-id="af72b-191">전체 코드 예제에 대 한 참조를 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="af72b-191">For the full code example, see the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#5)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="af72b-192"><paramref name="sid" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="af72b-192"><paramref name="sid" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="af72b-193">Windows에서 Win32 오류를 반환한 경우</span><span class="sxs-lookup"><span data-stu-id="af72b-193">Windows returned a Win32 error.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (System.Security.Principal.WindowsBuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(valuetype System.Security.Principal.WindowsBuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (role As WindowsBuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::Security::Principal::WindowsBuiltInRole role);" />
      <MemberSignature Language="F#" Value="override this.IsInRole : System.Security.Principal.WindowsBuiltInRole -&gt; bool" Usage="windowsPrincipal.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.Security.Principal.WindowsBuiltInRole" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="af72b-194"><see cref="T:System.Security.Principal.WindowsBuiltInRole" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-194">One of the <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> values.</span></span></param>
        <summary><span data-ttu-id="af72b-195">현재 보안 주체가 지정된 <see cref="T:System.Security.Principal.WindowsBuiltInRole" />을 갖는 Windows 사용자 그룹에 속하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-195">Determines whether the current principal belongs to the Windows user group with the specified <see cref="T:System.Security.Principal.WindowsBuiltInRole" />.</span></span></summary>
        <returns><span data-ttu-id="af72b-196">현재 보안 주체가 지정된 Windows 사용자 그룹의 멤버이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-196"><see langword="true" /> if the current principal is a member of the specified Windows user group; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af72b-197">새 그룹을 새 사용자 등의 새로 만든된 역할 정보를 테스트할 때에 로그 아웃 했다가 로그인의 도메인 내에서 역할 정보 전파 되도록 하는 일을 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-197">When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain.</span></span> <span data-ttu-id="af72b-198">이렇게 하지 않으면 발생할 수 있습니다 합니다 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 반환할 테스트 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-198">Not doing so can cause the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> test to return `false`.</span></span> <span data-ttu-id="af72b-199">Windows 98 또는 Windows Millennium Edition에서 이 메서드가 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="af72b-199">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
 <span data-ttu-id="af72b-200">성능상의 이유로 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> 오버 로드가 사용자의 역할을 결정 하기 위한 것이 좋습니다 오버 로드로 권장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-200">For performance reasons, the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> overload is recommended as the preferable overload for determining the user's role.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="af72b-201">Windows Vista에서는 UAC(사용자 계정 컨트롤)가 사용자 권한을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-201">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="af72b-202">기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-202">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="af72b-203">기본적으로 표준 사용자 역할이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-203">By default, you are in the standard user role.</span></span> <span data-ttu-id="af72b-204">관리 권한이 필요한 작업을 수행 하려고 할 때 동의 대화 상자를 사용 하 여 사용자의 역할을 동적으로 높일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-204">When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.</span></span> <span data-ttu-id="af72b-205">실행 하는 코드는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 메서드 동의 대화 상자를 표시 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-205">The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box.</span></span> <span data-ttu-id="af72b-206">기본 제공 관리자 그룹에 있는 경우에 표준 사용자 역할이 있는 경우 false를 반환 하는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-206">The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.</span></span> <span data-ttu-id="af72b-207">애플리케이션 아이콘을 마우스 오른쪽 단추로 클릭 하 고 관리자 권한으로 실행을 클릭 하 여 코드를 실행 하기 전에 귀하의 권한을 높일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-207">You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af72b-208">다음 예제에서는 합니다 <xref:System.Security.Principal.WindowsBuiltInRole> 열거형 현재 보안 주체 인지 여부를 확인 하는 데 사용 됩니다는 <xref:System.Security.Principal.WindowsBuiltInRole.Administrator>합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-208">The following example uses the <xref:System.Security.Principal.WindowsBuiltInRole> enumeration is used to determine whether the current principal is an <xref:System.Security.Principal.WindowsBuiltInRole.Administrator>.</span></span> <span data-ttu-id="af72b-209">전체 코드 예제에 대 한 참조를 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="af72b-209">For the full code example, see the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#4)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="af72b-210"><paramref name="role" />은 유효한 <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-210"><paramref name="role" /> is not a valid <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public override bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="override this.IsInRole : string -&gt; bool" Usage="windowsPrincipal.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="af72b-211">멤버 자격을 확인할 Windows 사용자 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-211">The name of the Windows user group for which to check membership.</span></span></param>
        <summary><span data-ttu-id="af72b-212">현재 보안 주체가 지정된 이름을 갖는 Windows 사용자 그룹에 속하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-212">Determines whether the current principal belongs to the Windows user group with the specified name.</span></span></summary>
        <returns><span data-ttu-id="af72b-213">현재 보안 주체가 지정된 Windows 사용자 그룹의 멤버이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-213"><see langword="true" /> if the current principal is a member of the specified Windows user group; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af72b-214">새 그룹을 새 사용자 등의 새로 만든된 역할 정보를 테스트할 때에 로그 아웃 했다가 로그인의 도메인 내에서 역할 정보 전파 되도록 하는 일을 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-214">When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain.</span></span> <span data-ttu-id="af72b-215">이렇게 하지 않으면 발생할 수 있습니다 합니다 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 반환할 테스트 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-215">Not doing so can cause the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> test to return `false`.</span></span> <span data-ttu-id="af72b-216">Windows 98 또는 Windows Millennium Edition에서 이 메서드가 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="af72b-216">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
 <span data-ttu-id="af72b-217">성능상의 이유로 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> 오버 로드가 사용자의 역할을 결정 하기 위한 것이 좋습니다 오버 로드로 권장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-217">For performance reasons, the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> overload is recommended as the preferable overload for determining the user's role.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="af72b-218">Windows Vista에서는 UAC(사용자 계정 컨트롤)가 사용자 권한을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-218">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="af72b-219">기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-219">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="af72b-220">기본적으로 표준 사용자 역할이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-220">By default, you are in the standard user role.</span></span> <span data-ttu-id="af72b-221">관리 권한이 필요한 작업을 수행 하려고 할 때 동의 대화 상자를 사용 하 여 사용자의 역할을 동적으로 높일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-221">When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.</span></span> <span data-ttu-id="af72b-222">실행 하는 코드는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 메서드 동의 대화 상자를 표시 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-222">The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box.</span></span> <span data-ttu-id="af72b-223">기본 제공 관리자 그룹에 있는 경우에 표준 사용자 역할이 있는 경우 false를 반환 하는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-223">The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.</span></span> <span data-ttu-id="af72b-224">애플리케이션 아이콘을 마우스 오른쪽 단추로 클릭 하 고 관리자 권한으로 실행을 클릭 하 여 코드를 실행 하기 전에 귀하의 권한을 높일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-224">You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="af72b-225">기본 제공 역할에 대 한 합니다 `role` 문자열 형식에서 이어야 합니다 "BUILTIN\\*RoleNameHere*"입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-225">For built-in roles, the `role` string should be in the form "BUILTIN\\*RoleNameHere*".</span></span> <span data-ttu-id="af72b-226">예를 들어 Windows 관리자 역할의 멤버 자격을 테스트 하려면 역할을 나타내는 문자열 "BUILTIN\Administrators" 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-226">For example, to test for membership in the Windows administrator role, the string representing the role should be "BUILTIN\Administrators".</span></span> <span data-ttu-id="af72b-227">백슬래시를 이스케이프 처리 해야 할 수 있는 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-227">Note that the backslash might need to be escaped.</span></span> <span data-ttu-id="af72b-228">다음 표에서 기본 제공 역할을 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-228">The following table lists the built-in roles.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="af72b-229">에 사용 되는 맞춤법에서 다른 문자열 형식에 기본 제공 역할에 대 한 맞춤법을 <xref:System.Security.Principal.WindowsBuiltInRole> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-229">The spelling for the BUILTIN roles in string format differs from the spelling used in the <xref:System.Security.Principal.WindowsBuiltInRole> enumeration.</span></span> <span data-ttu-id="af72b-230">예를 들어, 열거형에는 관리자에 대 한 맞춤법 "관리자"가 아니라 "관리자"입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-230">For example, the spelling for an administrator in the enumeration is "Administrator", not "Administrators".</span></span> <span data-ttu-id="af72b-231">이 오버 로드를 사용 하는 경우 다음 테이블에서 역할에 대해 철자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-231">When using this overload, use the spelling for the role from the following table.</span></span>  
  
|<span data-ttu-id="af72b-232">기본 제공 로컬 그룹</span><span class="sxs-lookup"><span data-stu-id="af72b-232">Built-in local groups</span></span>|  
|----------------------------|  
|<span data-ttu-id="af72b-233">BUILTIN\Administrators</span><span class="sxs-lookup"><span data-stu-id="af72b-233">BUILTIN\Administrators</span></span>|  
|<span data-ttu-id="af72b-234">BUILTIN\Users</span><span class="sxs-lookup"><span data-stu-id="af72b-234">BUILTIN\Users</span></span>|  
|<span data-ttu-id="af72b-235">BUILTIN\Guests</span><span class="sxs-lookup"><span data-stu-id="af72b-235">BUILTIN\Guests</span></span>|  
|<span data-ttu-id="af72b-236">BUILTIN\Account 연산자</span><span class="sxs-lookup"><span data-stu-id="af72b-236">BUILTIN\Account Operators</span></span>|  
|<span data-ttu-id="af72b-237">BUILTIN\Server 연산자</span><span class="sxs-lookup"><span data-stu-id="af72b-237">BUILTIN\Server Operators</span></span>|  
|<span data-ttu-id="af72b-238">BUILTIN\Print 연산자</span><span class="sxs-lookup"><span data-stu-id="af72b-238">BUILTIN\Print Operators</span></span>|  
|<span data-ttu-id="af72b-239">BUILTIN\Backup 연산자</span><span class="sxs-lookup"><span data-stu-id="af72b-239">BUILTIN\Backup Operators</span></span>|  
|<span data-ttu-id="af72b-240">BUILTIN\Replicator</span><span class="sxs-lookup"><span data-stu-id="af72b-240">BUILTIN\Replicator</span></span>|  
  
 <span data-ttu-id="af72b-241">컴퓨터의 특정 역할에 대 한 합니다 `role` 문자열 형식에서 이어야 합니다 "MachineName\\*RoleNameHere*"입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-241">For machine-specific roles, the `role` string should be in the form "MachineName\\*RoleNameHere*".</span></span>  
  
 <span data-ttu-id="af72b-242">도메인 특정 역할에 대 한 합니다 `role` 문자열 형식에서 이어야 합니다 "DomainName\\*RoleNameHere*" 예를 들어, `"SomeDomain\Domain Users`"입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-242">For domain-specific roles, the `role` string should be in the form "DomainName\\*RoleNameHere*"; for example, `"SomeDomain\Domain Users`".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="af72b-243">.NET Framework 버전 1.0에에서는 `role` 매개 변수는 대/소문자 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-243">In the .NET Framework version 1.0, the `role` parameter is case-sensitive.</span></span> <span data-ttu-id="af72b-244">.NET Framework 버전 1.1 이상에 `role` 매개 변수는 대/소문자 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-244">In the .NET Framework version 1.1 and later, the `role` parameter is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af72b-245">다음 코드 예제에서는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="af72b-245">The following code example demonstrates the use of the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="af72b-246">문자열 `BUILTIN\Administrators` 고 `BUILTIN\Users` 현재 보안 주체 관리자 또는 사용자 인지 확인 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-246">The strings `BUILTIN\Administrators` and `BUILTIN\Users` are used to determine whether the current principal is an administrator or a user.</span></span> <span data-ttu-id="af72b-247">전체 코드 예제에 대 한 참조를 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="af72b-247">For the full code example, see the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#3)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="af72b-248">보안 주체 개체를 조작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-248">for the ability to manipulate the principal object.</span></span> <span data-ttu-id="af72b-249">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span><span class="sxs-lookup"><span data-stu-id="af72b-249">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span></span></permission>
        <altmember cref="T:System.Security.Principal.WindowsBuiltInRole" />
      </Docs>
    </Member>
    <Member MemberName="UserClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; UserClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; UserClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsPrincipal.UserClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ UserClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserClaims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsPrincipal.UserClaims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_UserClaims&gt;d__11))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_UserClaims&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_UserClaims&gt;d__8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af72b-250">이 보안 주체의 모든 Windows 사용자 클레임을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-250">Gets all Windows user claims from this principal.</span></span></summary>
        <value><span data-ttu-id="af72b-251">이 보안 주체의 모든 Windows 사용자 클레임 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="af72b-251">A collection of all Windows user claims from this principal.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>