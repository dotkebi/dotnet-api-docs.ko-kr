<Type Name="EventLog" FullName="System.Diagnostics.EventLog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8dbd7c54611eae4fc67bc3cfb380e97f4369f241" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58699707" /></Metadata><TypeSignature Language="C#" Value="public class EventLog : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLog extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLog" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLog&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLog : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type EventLog = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
      <AttributeName>System.ComponentModel.DefaultEvent("EntryWritten")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.Diagnostics.EventLogInstaller))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.Diagnostics.MonitoringDescription("Represents an event log")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Install.EventLogInstallableComponentDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.EventLogInstaller, System.Configuration.Install, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.EventLogInstaller, System.Configuration.Install, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.MonitoringDescription("EventLogDesc")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.EventLogInstaller, System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8d489-101">Windows 이벤트 로그 조작을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-101">Provides interaction with Windows event logs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-102"><xref:System.Diagnostics.EventLog> 에 액세스 하거나 중요 한 소프트웨어 또는 하드웨어 이벤트에 대 한 정보를 기록 하는 Windows 이벤트 로그를 사용자 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-102"><xref:System.Diagnostics.EventLog> lets you access or customize Windows event logs, which record information about important software or hardware events.</span></span> <span data-ttu-id="8d489-103">사용 하 여 <xref:System.Diagnostics.EventLog>, 기존 로그에서 읽기, 로그에 항목을 작성, 만들고 또는 이벤트 원본을 삭제, 로그를 삭제 하 로그 항목에 응답 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-103">Using <xref:System.Diagnostics.EventLog>, you can read from existing logs, write entries to logs, create or delete event sources, delete logs, and respond to log entries.</span></span> <span data-ttu-id="8d489-104">또한 이벤트 소스를 만들 때 새 로그를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-104">You can also create new logs when creating an event source.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8d489-105">이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-105">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="8d489-106">형식을 사용 하 여 마쳤으면 직접 또는 간접적으로의 삭제 해야 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="8d489-107">직접 형식의 dispose 호출 해당 <xref:System.IDisposable.Dispose%2A> 의 메서드를 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="8d489-108">삭제 하지 직접, 언어 구문 같은 사용 `using` (C#에서) 또는 `Using` (Visual Basic에서는).</span><span class="sxs-lookup"><span data-stu-id="8d489-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="8d489-109">자세한 내용은 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하세요.를 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="8d489-110">개별 이벤트 로그 및 해당 항목에 대 한 액세스를 제공 하는 것 외에도 <xref:System.Diagnostics.EventLog> 클래스를 사용 하면 모든 이벤트 로그의 컬렉션에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-110">In addition to providing access to individual event logs and their entries, the <xref:System.Diagnostics.EventLog> class lets you access the collection of all event logs.</span></span> <span data-ttu-id="8d489-111">사용할 수는 `static` 멤버인 <xref:System.Diagnostics.EventLog> 로그를 삭제 하려면 로그 목록 가져오기, 만들기 원본, 삭제 또는 컴퓨터에서 이미 특정 소스를 포함 하는 경우를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-111">You can use the `static` members of <xref:System.Diagnostics.EventLog> to delete logs, get log lists, create or delete a source, or determine if a computer already contains a particular source.</span></span>  
  
 <span data-ttu-id="8d489-112">3 가지 기본 이벤트 로그: 응용 프로그램, 시스템 및 보안입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-112">There are three default event logs: Application, System, and Security.</span></span> <span data-ttu-id="8d489-113">보안 로그에는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-113">A Security log is read-only.</span></span> <span data-ttu-id="8d489-114">다른 응용 프로그램과 서비스를 설치 하면 Active Directory와 같은 추가 이벤트 로그에 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-114">Other applications and services you install, such as Active Directory, might have additional event logs.</span></span>  
  
 <span data-ttu-id="8d489-115">사용 하는 경우 보안 고려 사항이 <xref:System.Diagnostics.EventLog> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-115">There are security considerations when using the <xref:System.Diagnostics.EventLog> class.</span></span> <span data-ttu-id="8d489-116"><xref:System.Diagnostics.EventLog> 필요한 <xref:System.Diagnostics.EventLogPermission> .NET Framework 2.0 및 이후 버전에서 특정 작업 또는.NET Framework 1.0 및 1.1에서 완전 신뢰에 대 한 사용 권한.</span><span class="sxs-lookup"><span data-stu-id="8d489-116"><xref:System.Diagnostics.EventLog> requires <xref:System.Diagnostics.EventLogPermission> permissions for specific actions in the .NET Framework 2.0 and later versions, or full trust in the .NET Framework 1.0 and 1.1.</span></span> <span data-ttu-id="8d489-117">좋습니다 <xref:System.Diagnostics.EventLogPermission> 부분적으로 신뢰할 수 있는 코드에 부여 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-117">We recommend that <xref:System.Diagnostics.EventLogPermission> not be granted to partially trusted code.</span></span>  <span data-ttu-id="8d489-118">직접 전달 하면 안 이벤트 로그 개체를 포함 하 여 <xref:System.Diagnostics.EventLogEntryCollection> 및 <xref:System.Diagnostics.EventLogEntry> 신뢰할 수 없는 코드의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-118">You should never pass any event log object, including <xref:System.Diagnostics.EventLogEntryCollection> and <xref:System.Diagnostics.EventLogEntry> objects, to less trusted code.</span></span> <span data-ttu-id="8d489-119">예를 들어 만들기는 <xref:System.Diagnostics.EventLog> 개체, 항목, 작성 및 전달 된 <xref:System.Diagnostics.EventLog> 부분적으로 신뢰할 수 있는 코드로 개체를 이벤트 로그를 읽고 쓸 수 실행 하는 등의 작업을 수행 하는 코드를 허용 하기 때문에 보안 문제를 만들 수 있습니다 다른 응용 프로그램의 이름을 이벤트 로그 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-119">For example, creating an <xref:System.Diagnostics.EventLog> object, writing an entry, and then passing the <xref:System.Diagnostics.EventLog> object to partially trusted code can create a security issue, because the ability to read and write to the event log allows code to perform actions such as issuing event log messages in the name of another application.</span></span>  
  
 <span data-ttu-id="8d489-120">사용자 계정 컨트롤 (UAC) Windows Vista부터 사용자의 자격 증명을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-120">Starting with Windows Vista, User Account Control (UAC) determines the credentials of a user.</span></span> <span data-ttu-id="8d489-121">기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-121">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="8d489-122">기본적으로 표준 사용자 역할이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-122">By default, you are in the standard user role.</span></span> <span data-ttu-id="8d489-123">보안 로그에 액세스 하는 코드를 실행 하려면 먼저 자격 증명에서 높여야 표준 사용자 관리자입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-123">To run the code that accesses the Security log, you must first elevate your credentials from standard user to administrator.</span></span> <span data-ttu-id="8d489-124">응용 프로그램에 대 한 바로 가기 메뉴를 열고 응용 프로그램을 시작 하는 경우이 수행할 수 있습니다 (마우스를 사용 하는 경우 오른쪽 응용 프로그램 아이콘)를 관리자 권한으로 실행 하려는 지 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-124">You can do this when you start an application by opening the shortcut menu for the application (if you're using a mouse, right-click the application icon) and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="8d489-125">사용할 수 있습니다 <xref:System.Diagnostics.EventLog> 의 이벤트 뷰어 서버를 통해 볼 수 있는 사용자 지정 이벤트 로그를 만들도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-125">You can use <xref:System.Diagnostics.EventLog> to create custom event logs that you can view through the server's Event Viewer.</span></span> <span data-ttu-id="8d489-126">사용 된 <xref:System.Diagnostics.EventLog.RegisterDisplayName%2A> 이벤트 뷰어에서 이벤트 로그에 대해 지역화 된 이름을 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-126">Use the <xref:System.Diagnostics.EventLog.RegisterDisplayName%2A> method to display a localized name for your event log in the Event Viewer.</span></span> <span data-ttu-id="8d489-127">사용 된 <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> 최대 로그 크기에 도달 하면 이벤트 로그의 동작을 구성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-127">Use the <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> method to configure the behavior of your event log when it reaches its maximum log size.</span></span>  
  
 <span data-ttu-id="8d489-128">이벤트 로그를 읽을 로그 이름을 지정 합니다 (<xref:System.Diagnostics.EventLog.Log%2A> 속성) 및 서버 컴퓨터 이름 (<xref:System.Diagnostics.EventLog.MachineName%2A> 이벤트 로그에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-128">To read from an event log, specify the log name (<xref:System.Diagnostics.EventLog.Log%2A> property) and server computer name (<xref:System.Diagnostics.EventLog.MachineName%2A> property for the event log.</span></span> <span data-ttu-id="8d489-129">로컬 컴퓨터에 서버 컴퓨터 이름을 지정 하지 않으면 "."를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-129">If you don't specify the server computer name, the local computer, ".", is assumed.</span></span> <span data-ttu-id="8d489-130">이벤트 소스를 지정할 필요는 없습니다 (<xref:System.Diagnostics.EventLog.Source%2A> 속성) 이므로 소스는 로그를 쓰는 데만 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-130">It's not necessary to specify the event source (<xref:System.Diagnostics.EventLog.Source%2A> property), because a source is required only for writing to logs.</span></span> <span data-ttu-id="8d489-131"><xref:System.Diagnostics.EventLog.Entries%2A> 속성 항목의 이벤트 로그의 목록에 자동으로 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-131">The  <xref:System.Diagnostics.EventLog.Entries%2A> property is automatically populated with the event log's list of entries.</span></span>  
  
 <span data-ttu-id="8d489-132">이벤트 로그에 쓰려면 지정 하거나 이벤트 원본 만들기 (<xref:System.Diagnostics.EventLog.Source%2A> 속성).</span><span class="sxs-lookup"><span data-stu-id="8d489-132">To write to an event log, specify or create an event source (<xref:System.Diagnostics.EventLog.Source%2A> property).</span></span> <span data-ttu-id="8d489-133">새 이벤트 원본을 만들려면 컴퓨터의 관리자 자격 증명이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-133">You must have administrative credentials on the computer to create a new event source.</span></span> <span data-ttu-id="8d489-134">이벤트 소스 항목의 유효한 소스로 이벤트 로그를 사용 하 여 응용 프로그램을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-134">The event source registers your application with the event log as a valid source of entries.</span></span> <span data-ttu-id="8d489-135">한 번에 하나의 로그만 쓸 이벤트 소스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-135">You can use the event source  to write to only one log at a time.</span></span> <span data-ttu-id="8d489-136"><xref:System.Diagnostics.EventLog.Source%2A> 속성에는 임의 문자열일 수 있지만 이름은 컴퓨터의 다른 원본에서 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-136">The <xref:System.Diagnostics.EventLog.Source%2A> property can be any random string, but the name must be distinct from other sources on the computer.</span></span> <span data-ttu-id="8d489-137">이벤트 소스는 일반적으로 응용 프로그램 또는 다른 식별 문자열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-137">The event source is typically the name of the application or another identifying string.</span></span> <span data-ttu-id="8d489-138">중복을 만들려고 <xref:System.Diagnostics.EventLog.Source%2A> 값 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-138">Trying to create a duplicate <xref:System.Diagnostics.EventLog.Source%2A> value throws an exception.</span></span> <span data-ttu-id="8d489-139">그러나 단일 이벤트 로그는 여러 원본과 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-139">However, a single event log can be associated with multiple sources.</span></span>  
  
 <span data-ttu-id="8d489-140">이벤트 로그에 대 한 이벤트 소스와 연결 된 경우는 <xref:System.Diagnostics.EventLog> 인스턴스가 없습니다., 새 이벤트 원본을 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-140">If the event source for the event log associated with the <xref:System.Diagnostics.EventLog> instance doesn't exist, a new event source is created.</span></span> <span data-ttu-id="8d489-141">이벤트 원본 Windows Vista 이상 또는 Windows Server 2003을 만들려면 관리자 자격 증명이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-141">To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative credentials.</span></span>  
  
 <span data-ttu-id="8d489-142">이 요구 사항 이므로 보안 로그를 비롯 한 모든 이벤트 로그를 이벤트 소스 고유한 지 확인 하기 위해 검색할 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-142">This requirement is because all event logs, including Security logs, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="8d489-143">Windows Vista부터 사용자 권한이 없습니다 보안 로그에 액세스 하려면 따라서는 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-143">Starting with Windows Vista, users do not have permission to access the Security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8d489-144">만들기 또는 삭제 된 이벤트 원본이 명명된 된 뮤텍스를 사용 하 여 기본 코드를 동기화가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-144">Creating or deleting an event source requires synchronization of the underlying code by using a named mutex.</span></span> <span data-ttu-id="8d489-145">높은 응용 프로그램을 명명 된 뮤텍스를 잠그는 경우 잠금이 해제 될 때까지 응답을 중지 하도록 응용을 프로그램이 만들거나 이벤트 소스를 삭제 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-145">If a highly privileged application locks the named mutex, trying to create or delete an event source causes the application to stop responding until the lock is released.</span></span> <span data-ttu-id="8d489-146">이 문제를 방지 하려면 부여 해서는 안 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> 신뢰할 수 없는 코드는 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-146">To help prevent this problem, never grant <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission to untrusted code.</span></span> <span data-ttu-id="8d489-147">또한 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> 권한에서 잠재적으로 다른 사용 권한을 무시 하 고 신뢰할 수 있는 코드에만 부여 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-147">In addition, <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission potentially allows other permissions to be bypassed and should only be granted to highly trusted code.</span></span>  
  
 <span data-ttu-id="8d489-148">응용 프로그램 및 서비스 응용 프로그램 로그 나 사용자 지정 로그를 작성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-148">Applications and services should write to the Application log or to a custom log.</span></span> <span data-ttu-id="8d489-149">장치 드라이버는 시스템 로그에 작성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-149">Device drivers should write to the System log.</span></span> <span data-ttu-id="8d489-150">명시적으로 설정 하지 않으면 경우는 <xref:System.Diagnostics.EventLog.Log%2A> 속성, 이벤트 로그의 응용 프로그램 로그에 기본값.</span><span class="sxs-lookup"><span data-stu-id="8d489-150">If you do not explicitly set the <xref:System.Diagnostics.EventLog.Log%2A> property, the event log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-151">등록 된 소스로 작성에서 응용 프로그램을 보호 하는 것과 관련이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-151">There is nothing to protect an application from writing as any registered source.</span></span>  <span data-ttu-id="8d489-152">응용 프로그램에 부여 하는 경우 <xref:System.Diagnostics.EventLogPermissionAccess.Write> 권한이 컴퓨터에 등록 된 유효한 소스에 대 한 이벤트 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-152">If an application is granted <xref:System.Diagnostics.EventLogPermissionAccess.Write> permission, it can write events for any valid source registered on the computer.</span></span>  
  
 <span data-ttu-id="8d489-153">사용 된 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 및 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 이벤트 로그에 이벤트를 기록 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-153">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods to write events to an event log.</span></span> <span data-ttu-id="8d489-154">이벤트를 작성 하는 이벤트 원본을 지정 해야 합니다. 만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-154">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="8d489-155">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-155">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-156">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-156">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-157">운영 체제 이벤트 소스 목록을 새로 고칠 경우 쓰려고 시도 하는 새 소스를 사용 하 여 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-157">If the operating system hasn't refreshed its list of event sources, and you try to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-158">사용 하 여 새 소스를 구성할 수는 <xref:System.Diagnostics.EventLogInstaller> 개체 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-158">You can configure a new source by using an <xref:System.Diagnostics.EventLogInstaller> object or the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-159">새 이벤트 원본을 만들려면 컴퓨터의 관리자 자격 증명이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-159">You must have administrative credentials on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-160">각 소스에서는 한 번에 하나의 이벤트 로그에 쓸 수 있습니다. 그러나 응용 프로그램이 여러 이벤트 로그에 쓸 여러 원본을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-160">Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="8d489-161">예를 들어, 응용 프로그램에 다른 이벤트 로그 또는 다른 리소스 파일에 대해 구성 된 여러 소스가 필요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-161">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span> <span data-ttu-id="8d489-162">기존 원본의 구성 세부 정보를 변경 하려면 소스를 삭제 하며 사용 하 여 새 구성을 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-162">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="8d489-163">다른 응용 프로그램이 나 구성 요소는 기존 소스를 사용 하는 경우 기존 소스를 삭제 하는 대신 업데이트 된 구성을 사용 하 여 새 소스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-163">If other applications or components use the existing source, create a new source with the updated configuration instead of deleting the existing source.</span></span>  
  
 <span data-ttu-id="8d489-164">이벤트 범주 및 메시지 문자열에 대 한 지역화 된 리소스를 사용 하 여 이벤트 소스를 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-164">You can register the event source with localized resources for your event category and message strings.</span></span> <span data-ttu-id="8d489-165">응용 프로그램 실제 문자열 값을 지정 하는 대신 리소스 식별자를 사용 하 여 이벤트 로그 엔트리를 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-165">Your application can write event log entries by using resource identifiers instead of specifying the actual string values.</span></span> <span data-ttu-id="8d489-166">참조 된 <xref:System.Diagnostics.EventLogInstaller> 및 <xref:System.Diagnostics.EventSourceCreationData> 클래스 리소스 파일을 사용 하 여 소스를 구성 하는 방법에 대 한 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-166">Refer to the <xref:System.Diagnostics.EventLogInstaller> and <xref:System.Diagnostics.EventSourceCreationData> classes for more information about configuring your source with resource files.</span></span>  
  
 <span data-ttu-id="8d489-167">응용 프로그램 이벤트 로그에 직접 문자열 값을 쓰는, 리소스는 원본에 대 한 파일 속성을 설정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-167">If your application writes string values directly to the event log, you do not have to set the resource file properties for the source.</span></span> <span data-ttu-id="8d489-168">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-168">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-169">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-169">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-170">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-170">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-171">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-171">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="8d489-172">이벤트를 쓸 때 메시지 문자열이 나 리소스 식별자를 메시지 문자열을 하나 이상 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-172">When writing events, you must at least specify either a message string or the resource identifier for a message string.</span></span> <span data-ttu-id="8d489-173">다른 이벤트 속성은 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-173">Other event properties are optional.</span></span> <span data-ttu-id="8d489-174">선택적 이벤트 설정의 예는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-174">Examples of optional event settings include the following:</span></span>  
  
-   <span data-ttu-id="8d489-175">설정할 수 있습니다는 <xref:System.Diagnostics.EventLogEntryType> 이벤트 뷰어에서 항목에 표시 되는 아이콘을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-175">You can set the <xref:System.Diagnostics.EventLogEntryType> to specify the icon that the Event Viewer displays for the entry.</span></span>  
  
-   <span data-ttu-id="8d489-176">응용 프로그램 범주를 사용 하 여 이벤트를 필터링 하는 경우 이벤트에 대 한 범주 식별자를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-176">You can specify a category identifier for the event, if your application uses categories for filtering the events.</span></span>  
  
-   <span data-ttu-id="8d489-177">지정된 된 이벤트를 사용 하 여 추가 정보를 연결 하려는 경우 이벤트 출품작에 이진 데이터를 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-177">You can attach binary data to your event entry if you want to associate additional information with a given event.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8d489-178">이벤트 로깅 디스크 공간, 프로세서 시간 및 기타 시스템 리소스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-178">Event logging consumes disk space, processor time, and other system resources.</span></span> <span data-ttu-id="8d489-179">중요 한 정보만 기록 하는 것이 반드시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-179">It is important to log only essential information.</span></span> <span data-ttu-id="8d489-180">오류 경로에서 이벤트 로그 호출을 배치 하지 않고 주 코드 경로에 있으므로 이러한 없는 성능이 저하 될 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-180">We recommend that you place event log calls in an error path, rather than in the main code path, so they don't adversely affect performance.</span></span>  
  
 <span data-ttu-id="8d489-181">인스턴스의 초기 속성 값의 목록을 <xref:System.Diagnostics.EventLog>, 참조는 <xref:System.Diagnostics.EventLog.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-181">For a list of initial property values for an instance of <xref:System.Diagnostics.EventLog>, see the <xref:System.Diagnostics.EventLog.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-182">다음 예제에서는 이벤트 원본 `MySource` 존재 하지 않는 경우 및 이벤트 로그에 엔트리를 씁니다 `MyNewLog`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-182">The following example creates the event source `MySource` if it doesn't already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-183">Windows Vista부터, 관리자 권한으로이 응용 프로그램을 실행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-183">Starting with Windows Vista, you must run this application as an administrator.</span></span>  
  
 [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLogInstaller" />
    <altmember cref="T:System.Diagnostics.EventLogEntry" />
    <altmember cref="T:System.Diagnostics.EntryWrittenEventArgs" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d489-184"><see cref="T:System.Diagnostics.EventLog" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-184">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d489-185"><see cref="T:System.Diagnostics.EventLog" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-185">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span> <span data-ttu-id="8d489-186">인스턴스를 로그와 연결하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-186">Does not associate the instance with any log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-187">호출 하기 전에 <xref:System.Diagnostics.EventLog.WriteEntry%2A>를 지정 합니다 <xref:System.Diagnostics.EventLog.Source%2A> 속성을는 <xref:System.Diagnostics.EventLog> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="8d489-187">Before calling <xref:System.Diagnostics.EventLog.WriteEntry%2A>, specify the <xref:System.Diagnostics.EventLog.Source%2A> property of the <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="8d489-188">읽기만 하는 경우 <xref:System.Diagnostics.EventLog.Entries%2A> 로그에서 지정할 수 있습니다만 합니다 <xref:System.Diagnostics.EventLog.Log%2A> 고 <xref:System.Diagnostics.EventLog.MachineName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-188">If you are only reading <xref:System.Diagnostics.EventLog.Entries%2A> from the log, you can alternatively specify only the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-189">지정 하지 않으면 경우는 <xref:System.Diagnostics.EventLog.MachineName%2A>, 로컬 컴퓨터 (".") 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-189">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="8d489-190">다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Diagnostics.EventLog>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-190">The following table shows initial property values for an instance of <xref:System.Diagnostics.EventLog>.</span></span>  
  
|<span data-ttu-id="8d489-191">속성</span><span class="sxs-lookup"><span data-stu-id="8d489-191">Property</span></span>|<span data-ttu-id="8d489-192">초기 값</span><span class="sxs-lookup"><span data-stu-id="8d489-192">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventLog.Source%2A>|<span data-ttu-id="8d489-193">빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-193">An empty string ("").</span></span>|  
|<xref:System.Diagnostics.EventLog.Log%2A>|<span data-ttu-id="8d489-194">빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-194">An empty string ("").</span></span>|  
|<xref:System.Diagnostics.EventLog.MachineName%2A>|<span data-ttu-id="8d489-195">로컬 컴퓨터 (".").</span><span class="sxs-lookup"><span data-stu-id="8d489-195">The local computer (".").</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="8d489-196">다음 예제에서는 소스를 만듭니다 `MySource` 아직 존재 하지 않는 경우 이벤트 로그에 엔트리를 씁니다 `MyNewLog`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-196">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-197">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-197">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-198">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-198">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLog (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLog(System::String ^ logName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLog : string -&gt; System.Diagnostics.EventLog" Usage="new System.Diagnostics.EventLog logName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="8d489-199">로컬 컴퓨터의 로그 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-199">The name of the log on the local computer.</span></span></param>
        <summary><span data-ttu-id="8d489-200"><see cref="T:System.Diagnostics.EventLog" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-200">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span> <span data-ttu-id="8d489-201">로컬 컴퓨터에 있는 로그에 인스턴스를 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-201">Associates the instance with a log on the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-202">이 오버 로드를 설정 합니다 <xref:System.Diagnostics.EventLog.Log%2A> 속성을는 `logName` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-202">This overload sets the <xref:System.Diagnostics.EventLog.Log%2A> property to the `logName` parameter.</span></span> <span data-ttu-id="8d489-203">호출 하기 전에 <xref:System.Diagnostics.EventLog.WriteEntry%2A>를 지정 합니다 <xref:System.Diagnostics.EventLog.Source%2A> 속성을는 <xref:System.Diagnostics.EventLog> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="8d489-203">Before calling <xref:System.Diagnostics.EventLog.WriteEntry%2A>, specify the <xref:System.Diagnostics.EventLog.Source%2A> property of the <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="8d489-204">읽기만 하는 경우 <xref:System.Diagnostics.EventLog.Entries%2A> 로그에서 지정할 수 있습니다만 합니다 <xref:System.Diagnostics.EventLog.Log%2A> 고 <xref:System.Diagnostics.EventLog.MachineName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-204">If you are only reading <xref:System.Diagnostics.EventLog.Entries%2A> from the log, you can alternatively specify only the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-205">지정 하지 않으면 경우는 <xref:System.Diagnostics.EventLog.MachineName%2A>, 로컬 컴퓨터 (".") 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-205">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span> <span data-ttu-id="8d489-206">생성자의이 오버 로드는 지정 된 <xref:System.Diagnostics.EventLog.Log%2A> 속성인 되지만 변경할 수 있습니다이 읽기 전에 <xref:System.Diagnostics.EventLog.Entries%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="8d489-206">This overload of the constructor specifies the <xref:System.Diagnostics.EventLog.Log%2A> property, but you can change this before reading the <xref:System.Diagnostics.EventLog.Entries%2A> property.</span></span>  
  
 <span data-ttu-id="8d489-207">지정 하면 원본 합니다 <xref:System.Diagnostics.EventLog.Source%2A> 속성은 컴퓨터에 대 한 후속 호출에서 다른 원본의 고유 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 아직 없는 경우 지정된 된 이름을 사용 하 여 로그를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-207">If the source you specify in the <xref:System.Diagnostics.EventLog.Source%2A> property is unique from other sources on the computer, a subsequent call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> creates a log with the specified name, if it does not already exist.</span></span>  
  
 <span data-ttu-id="8d489-208">다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Diagnostics.EventLog>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-208">The following table shows initial property values for an instance of <xref:System.Diagnostics.EventLog>.</span></span>  
  
|<span data-ttu-id="8d489-209">속성</span><span class="sxs-lookup"><span data-stu-id="8d489-209">Property</span></span>|<span data-ttu-id="8d489-210">초기 값</span><span class="sxs-lookup"><span data-stu-id="8d489-210">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventLog.Source%2A>|<span data-ttu-id="8d489-211">빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-211">An empty string ("").</span></span>|  
|<xref:System.Diagnostics.EventLog.Log%2A>|<span data-ttu-id="8d489-212">`logName` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-212">The `logName` parameter.</span></span>|  
|<xref:System.Diagnostics.EventLog.MachineName%2A>|<span data-ttu-id="8d489-213">로컬 컴퓨터 (".").</span><span class="sxs-lookup"><span data-stu-id="8d489-213">The local computer (".").</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="8d489-214">다음 예제에서는 "myNewLog" 로컬 컴퓨터의 이벤트 로그에 항목을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-214">The following example reads entries in the event log, "myNewLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.EventLog1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EventLog1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EventLog1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EventLog1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EventLog1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EventLog1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d489-215">로그 이름이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-215">The log name is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-216">로그 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-216">The log name is invalid.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-217">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-217">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-218">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-218">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLog (string logName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLog(System::String ^ logName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLog : string * string -&gt; System.Diagnostics.EventLog" Usage="new System.Diagnostics.EventLog (logName, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="8d489-219">지정된 컴퓨터의 로그 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-219">The name of the log on the specified computer.</span></span></param>
        <param name="machineName"><span data-ttu-id="8d489-220">로그가 있는 컴퓨터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-220">The computer on which the log exists.</span></span></param>
        <summary><span data-ttu-id="8d489-221"><see cref="T:System.Diagnostics.EventLog" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-221">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span> <span data-ttu-id="8d489-222">지정한 컴퓨터에 있는 로그에 인스턴스를 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-222">Associates the instance with a log on the specified computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-223">이 오버 로드를 설정 합니다 <xref:System.Diagnostics.EventLog.Log%2A> 속성을 합니다 `logName` 매개 변수 및 <xref:System.Diagnostics.EventLog.MachineName%2A> 속성을는 `machineName` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="8d489-223">This overload sets the <xref:System.Diagnostics.EventLog.Log%2A> property to the `logName` parameter and the <xref:System.Diagnostics.EventLog.MachineName%2A> property to the `machineName` parameter.</span></span> <span data-ttu-id="8d489-224">호출 하기 전에 <xref:System.Diagnostics.EventLog.WriteEntry%2A>를 지정 합니다 <xref:System.Diagnostics.EventLog.Source%2A> 의 속성은 <xref:System.Diagnostics.EventLog>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-224">Before calling <xref:System.Diagnostics.EventLog.WriteEntry%2A>, specify the <xref:System.Diagnostics.EventLog.Source%2A> property of the <xref:System.Diagnostics.EventLog>.</span></span> <span data-ttu-id="8d489-225">읽기만 하는 경우 <xref:System.Diagnostics.EventLog.Entries%2A> 로그에서 지정할 수 있습니다만 합니다 <xref:System.Diagnostics.EventLog.Log%2A> 고 <xref:System.Diagnostics.EventLog.MachineName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-225">If you are only reading <xref:System.Diagnostics.EventLog.Entries%2A> from the log, you can alternatively specify only the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-226">이 오버 로드 생성자의 지정 합니다 <xref:System.Diagnostics.EventLog.Log%2A> 및 <xref:System.Diagnostics.EventLog.MachineName%2A> 있지만 속성을 읽기 전에 하거나 변경할 수는 <xref:System.Diagnostics.EventLog.Entries%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-226">This overload of the constructor specifies the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties, but you can change either before reading the <xref:System.Diagnostics.EventLog.Entries%2A> property.</span></span>  
  
 <span data-ttu-id="8d489-227">다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Diagnostics.EventLog>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-227">The following table shows initial property values for an instance of <xref:System.Diagnostics.EventLog>.</span></span>  
  
|<span data-ttu-id="8d489-228">속성</span><span class="sxs-lookup"><span data-stu-id="8d489-228">Property</span></span>|<span data-ttu-id="8d489-229">초기 값</span><span class="sxs-lookup"><span data-stu-id="8d489-229">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventLog.Source%2A>|<span data-ttu-id="8d489-230">빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-230">An empty string ("").</span></span>|  
|<xref:System.Diagnostics.EventLog.Log%2A>|<span data-ttu-id="8d489-231">`logName` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-231">The `logName` parameter.</span></span>|  
|<xref:System.Diagnostics.EventLog.MachineName%2A>|<span data-ttu-id="8d489-232">`machineName` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-232">The `machineName` parameter.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="8d489-233">다음 예제에서는 "myNewLog" 컴퓨터 "myServer"의 이벤트 로그에 항목을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-233">The following example reads entries in the event log, "myNewLog", on the computer "myServer".</span></span>  
  
 [!code-cpp[Classic EventLog.EventLog2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EventLog2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EventLog2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EventLog2 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EventLog2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EventLog2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d489-234">로그 이름이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-234">The log name is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-235">로그 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-235">The log name is invalid.</span></span>  
  
<span data-ttu-id="8d489-236">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-236">-or-</span></span> 
<span data-ttu-id="8d489-237">컴퓨터 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-237">The computer name is invalid.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-238">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-238">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-239">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-239">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLog (string logName, string machineName, string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName, string machineName, string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String, machineName As String, source As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLog(System::String ^ logName, System::String ^ machineName, System::String ^ source);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLog : string * string * string -&gt; System.Diagnostics.EventLog" Usage="new System.Diagnostics.EventLog (logName, machineName, source)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="8d489-240">지정된 컴퓨터의 로그 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-240">The name of the log on the specified computer</span></span></param>
        <param name="machineName"><span data-ttu-id="8d489-241">로그가 있는 컴퓨터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-241">The computer on which the log exists.</span></span></param>
        <param name="source"><span data-ttu-id="8d489-242">이벤트 로그 항목의 원본입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-242">The source of event log entries.</span></span></param>
        <summary><span data-ttu-id="8d489-243"><see cref="T:System.Diagnostics.EventLog" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-243">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span> <span data-ttu-id="8d489-244">지정한 컴퓨터에 있는 로그에 인스턴스를 연결하고 <see cref="T:System.Diagnostics.EventLog" />에 지정한 원본을 만들거나 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-244">Associates the instance with a log on the specified computer and creates or assigns the specified source to the <see cref="T:System.Diagnostics.EventLog" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-245">이 생성자는 설정 합니다 <xref:System.Diagnostics.EventLog.Log%2A> 속성을를 `logName` 매개 변수를를 <xref:System.Diagnostics.EventLog.MachineName%2A> 속성을를 `machineName` 매개 변수를 및 <xref:System.Diagnostics.EventLog.Source%2A> 속성을를 `source` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-245">This constructor sets the <xref:System.Diagnostics.EventLog.Log%2A> property to the `logName` parameter, the <xref:System.Diagnostics.EventLog.MachineName%2A> property to the `machineName` parameter, and the <xref:System.Diagnostics.EventLog.Source%2A> property to the `source` parameter.</span></span> <span data-ttu-id="8d489-246"><xref:System.Diagnostics.EventLog.Source%2A> 속성은 이벤트 로그에 쓸 때 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-246">The <xref:System.Diagnostics.EventLog.Source%2A> property is required when writing to an event log.</span></span> <span data-ttu-id="8d489-247">그러나만 이벤트 로그에서 읽기만 하는 경우는 <xref:System.Diagnostics.EventLog.Log%2A> 고 <xref:System.Diagnostics.EventLog.MachineName%2A> (으로 서버의 이벤트 로그에 이미 연결 된 원본) 속성은 필수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-247">However, if you are only reading from an event log, only the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties are required (as long as the event log on the server has a source already associated with it).</span></span> <span data-ttu-id="8d489-248">이벤트 로그에서 읽기만 하는, 다른 오버 로드 생성자의 충분히 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-248">If you are only reading from the event log, another overload of the constructor might suffice.</span></span>  
  
 <span data-ttu-id="8d489-249">다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Diagnostics.EventLog>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-249">The following table shows initial property values for an instance of <xref:System.Diagnostics.EventLog>.</span></span>  
  
|<span data-ttu-id="8d489-250">속성</span><span class="sxs-lookup"><span data-stu-id="8d489-250">Property</span></span>|<span data-ttu-id="8d489-251">초기 값</span><span class="sxs-lookup"><span data-stu-id="8d489-251">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventLog.Source%2A>|<span data-ttu-id="8d489-252">`source` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-252">The `source` parameter.</span></span>|  
|<xref:System.Diagnostics.EventLog.Log%2A>|<span data-ttu-id="8d489-253">`logName` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-253">The `logName` parameter.</span></span>|  
|<xref:System.Diagnostics.EventLog.MachineName%2A>|<span data-ttu-id="8d489-254">`machineName` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-254">The `machineName` parameter.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="8d489-255">다음 예제에서는 "소스가"를 사용 하 여 로컬 컴퓨터에서 "MyNewLog" 이벤트 로그에 엔트리를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-255">The following example writes an entry to an event log, "MyNewLog", on the local computer, using the source "MySource".</span></span>  
  
 [!code-cpp[Classic EventLog.EventLog3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EventLog3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EventLog3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EventLog3 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EventLog3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EventLog3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d489-256">로그 이름이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-256">The log name is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-257">로그 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-257">The log name is invalid.</span></span>  
  
<span data-ttu-id="8d489-258">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-258">-or-</span></span> 
<span data-ttu-id="8d489-259">컴퓨터 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-259">The computer name is invalid.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-260">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-260">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-261">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-261">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="eventLog.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d489-262">양식에서 사용하거나 다른 구성 요소에서 사용하는 <see cref="T:System.Diagnostics.EventLog" />를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-262">Begins the initialization of an <see cref="T:System.Diagnostics.EventLog" /> used on a form or used by another component.</span></span> <span data-ttu-id="8d489-263">초기화는 런타임에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-263">The initialization occurs at runtime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-264">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] 디자인 환경에서이 메서드를 사용 하 여 폼에 또는 다른 구성 요소를 사용 하는 구성의 초기화를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-264">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to start the initialization of a component used on a form or by another component.</span></span> <span data-ttu-id="8d489-265"><xref:System.Diagnostics.EventLog.EndInit%2A> 메서드 초기화를 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-265">The <xref:System.Diagnostics.EventLog.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="8d489-266">사용 하는 <xref:System.Diagnostics.EventLog.BeginInit%2A> 및 <xref:System.Diagnostics.EventLog.EndInit%2A> 메서드 컨트롤을 완전히 초기화 되기 전에 사용 되지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-266">Using the <xref:System.Diagnostics.EventLog.BeginInit%2A> and <xref:System.Diagnostics.EventLog.EndInit%2A> methods prevent the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-267"><see cref="T:System.Diagnostics.EventLog" />가 이미 초기화된 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-267"><see cref="T:System.Diagnostics.EventLog" /> is already initialized.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-268">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-268">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-269">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-269">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.EndInit" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="eventLog.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d489-270">이벤트 로그에서 모든 엔트리를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-270">Removes all entries from the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-271">이벤트 로그를 포함할 수 있습니다 항목의 개수를 결정 하는 최대 크기를 사용 하 여 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-271">Event logs are set with a maximum size that determines how many entries they can contain.</span></span> <span data-ttu-id="8d489-272">이벤트 로그 꽉 차면 새 이벤트 정보 기록을 중지 하거나 이전 항목을 덮어쓰기 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-272">When an event log is full, it stops recording new event information or begins to overwrite earlier entries.</span></span> <span data-ttu-id="8d489-273">이벤트 기록 중지 되 면 기존 항목에 대 한 로그를 지우고 이벤트 기록을 다시 시작할 수 있도록 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-273">If event recording stops, you can use this method to clear the log of existing entries and allow it to start recording events again.</span></span> <span data-ttu-id="8d489-274">이벤트 로그 엔트리를 지우려면 로그 상주 하는 컴퓨터에 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-274">You must have administrator permissions to the computer on which the log resides to clear event log entries.</span></span>  
  
 <span data-ttu-id="8d489-275"><xref:System.Diagnostics.EventLog.Clear%2A> 이벤트 로그를 닫고 새 검색 읽기 및 쓰기 핸들을 이벤트 핸들을 해제 이벤트 로그를 다시 열립니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-275"><xref:System.Diagnostics.EventLog.Clear%2A> closes the event log, releases the event handles, retrieves new read and write handles, and reopens the event log.</span></span> <span data-ttu-id="8d489-276">기존 이벤트와 함께 메서드를 호출한 후에 수신 된 이벤트 취소 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-276">Events received after the call to the method are not cleared along with the existing events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-277">다음 예제에서는 이벤트 로그를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-277">The following example clears an event log.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8d489-278">응용 프로그램, 시스템, 보안 및 기타 사용자 지정이 아닌 로그에는 중요 한 정보를 포함할 수 있으므로 이 예제 코드를 실행 하기 전에 사용자 지정 로그를 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-278">Because Application, System, Security, and other non-custom logs can contain crucial information; be sure to specify a custom log before executing this example code.</span></span> <span data-ttu-id="8d489-279">사용자 지정 로그를 삭제 하는이 예제 `myNewLog`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-279">This example deletes the custom log `myNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-280">이벤트 로그가 지워지지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-280">The event log was not cleared successfully.</span></span>  
  
<span data-ttu-id="8d489-281">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-281">-or-</span></span> 
<span data-ttu-id="8d489-282">로그를 열 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-282">The log cannot be opened.</span></span> <span data-ttu-id="8d489-283">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-283">A Windows error code is not available.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-284"><see cref="P:System.Diagnostics.EventLog.Log" /> 속성에 값이 지정되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-284">A value is not specified for the <see cref="P:System.Diagnostics.EventLog.Log" /> property.</span></span> <span data-ttu-id="8d489-285">로그 이름이 빈 문자열이 아닌지 확인하십시오.</span><span class="sxs-lookup"><span data-stu-id="8d489-285">Make sure the log name is not an empty string.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-286">로그가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-286">The log does not exist.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-287">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-287">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-288">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-288">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Close" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="eventLog.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d489-289">이벤트 로그를 닫고 읽기 및 쓰기 핸들을 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-289">Closes the event log and releases read and write handles.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-290">합니다 <xref:System.Diagnostics.EventLog.Close%2A> 메서드는 보호 된 여 <xref:System.ComponentModel.Component.Dispose%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-290">The <xref:System.Diagnostics.EventLog.Close%2A> method is called by the protected <xref:System.ComponentModel.Component.Dispose%2A> method.</span></span> <span data-ttu-id="8d489-291">호출할 필요가 없습니다 <xref:System.Diagnostics.EventLog.Close%2A> 호출 하기 전에 <xref:System.ComponentModel.Component.Dispose%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-291">You do not need to invoke <xref:System.Diagnostics.EventLog.Close%2A> before calling <xref:System.ComponentModel.Component.Dispose%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-292">이벤트 로그의 읽기 또는 쓰기 핸들을 해제하지 못한 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-292">The event log's read handle or write handle was not released successfully.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-293">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-293">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-294">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-294">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEventSource">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d489-295">시스템의 특정 로그에 이벤트 정보를 쓸 수 있도록 응용 프로그램을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-295">Establishes an application as able to write event information to a particular log on the system.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEventSource">
      <MemberSignature Language="C#" Value="public static void CreateEventSource (System.Diagnostics.EventSourceCreationData sourceData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateEventSource(class System.Diagnostics.EventSourceCreationData sourceData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateEventSource (sourceData As EventSourceCreationData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateEventSource(System::Diagnostics::EventSourceCreationData ^ sourceData);" />
      <MemberSignature Language="F#" Value="static member CreateEventSource : System.Diagnostics.EventSourceCreationData -&gt; unit" Usage="System.Diagnostics.EventLog.CreateEventSource sourceData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceData" Type="System.Diagnostics.EventSourceCreationData" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceData"><span data-ttu-id="8d489-296">이벤트 원본과 대상 이벤트 로그에 대한 구성 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-296">The configuration properties for the event source and its target event log.</span></span></param>
        <summary><span data-ttu-id="8d489-297">이벤트 소스와 해당 이벤트 로그에 대한 지정된 구성 속성을 사용하여 지역화된 이벤트 메시지를 작성할 올바른 이벤트 소스를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-297">Establishes a valid event source for writing localized event messages, using the specified configuration properties for the event source and the corresponding event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-298">이 오버 로드를 사용 하 여 로컬 컴퓨터 또는 원격 컴퓨터에서 이벤트 로그에 엔트리를 쓰기 위한 새 소스를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-298">Use this overload to configure a new source for writing entries to an event log on the local computer or a remote computer.</span></span> <span data-ttu-id="8d489-299">이 메서드는 이벤트 로그에서 읽기를 사용 하는 데 필요한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-299">It is not necessary to use this method to read from an event log.</span></span>  
  
 <span data-ttu-id="8d489-300">합니다 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드는 입력을 사용 하 여 `sourceData` <xref:System.Diagnostics.EventSourceCreationData.Source%2A>를 <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> 및 <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> 새 소스와 관련된 된 이벤트 로그에 대 한 대상 컴퓨터의 레지스트리 값을 만들기 위한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-300">The <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method uses the input `sourceData`<xref:System.Diagnostics.EventSourceCreationData.Source%2A>, <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> and <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> properties to create registry values on the target computer for the new source and its associated event log.</span></span> <span data-ttu-id="8d489-301">새 원본 이름을 기존 원본 이름 또는 대상 컴퓨터의 기존 이벤트 로그 이름과 일치할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-301">A new source name cannot match an existing source name or an existing event log name on the target computer.</span></span> <span data-ttu-id="8d489-302">경우는 <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> 속성이 설정 되지 않은, 응용 프로그램 이벤트 로그에 대 한 소스가 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-302">If the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property is not set, the source is registered for the Application event log.</span></span> <span data-ttu-id="8d489-303">경우는 <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> 소스가 로컬 컴퓨터의 등록을 설정 하지 않으면.</span><span class="sxs-lookup"><span data-stu-id="8d489-303">If the <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> is not set, the source is registered on the local computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-304">이벤트 원본 Windows Vista 이상 또는 Windows Server 2003을 만들려면 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-304">To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="8d489-305">이 요구 사항에 대 한 이유 보안을 포함 한 모든 이벤트 로그, 이벤트 소스 고유한 지 확인 하려면 검색 해야입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-305">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="8d489-306">Windows Vista부터 사용자 권한이 없습니다 보안 로그에 액세스 하려면 따라서는 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-306">Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="8d489-307">Windows Vista부터 사용자 계정 컨트롤 (UAC)는 사용자의 권한을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-307">Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="8d489-308">기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-308">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="8d489-309">기본적으로 표준 사용자 역할이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-309">By default, you are in the standard user role.</span></span> <span data-ttu-id="8d489-310">보안 로그에 액세스 하는 코드를 실행 하려면 먼저 높여야 권한을 표준 사용자에서 관리자에 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-310">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="8d489-311">응용 프로그램 아이콘을 마우스 오른쪽 단추로 클릭하고 관리자로 실행하도록 지정하여 응용 프로그램을 시작하면 이 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-311">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="8d489-312">사용 하 여 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 및 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 이벤트 로그에 이벤트를 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-312">Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log.</span></span> <span data-ttu-id="8d489-313">이벤트를 작성 하는 이벤트 원본을 지정 해야 합니다. 만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-313">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="8d489-314">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-314">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-315">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-315">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-316">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-316">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-317">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-317">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-318">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-318">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-319">기존 이벤트 로그 또는 새 이벤트 로그의 이벤트 소스를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-319">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="8d489-320">새 이벤트 로그에 대 한 새 소스를 만들면 해당 로그에 대 한 소스를 등록 하는 시스템 있지만 첫 번째 항목에 기록할 때 까지는 로그가 만들어지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-320">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="8d489-321">운영 체제 파일과 이벤트 로그를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-321">The operating system stores event logs as files.</span></span> <span data-ttu-id="8d489-322">사용 하는 경우 <xref:System.Diagnostics.EventLogInstaller> 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 새 이벤트 로그를 만들려면 연결된 된 파일은 지정된 된 컴퓨터에서 %SystemRoot%\System32\Config 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-322">When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="8d489-323">파일 이름은의 처음 8 개 문자를 추가 하 여 설정 됩니다는 <xref:System.Diagnostics.EventLog.Log%2A> ".evt" 파일 이름 확장명을 가진 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-323">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="8d489-324">각 소스에서는 한 번에 하나의 이벤트 로그에 쓸 수 있습니다만 그러나 응용 프로그램이 여러 이벤트 로그에 쓸 여러 원본을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-324">Each source can only write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="8d489-325">예를 들어, 응용 프로그램에 다른 이벤트 로그 또는 다른 리소스 파일에 대해 구성 된 여러 소스가 필요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-325">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="8d489-326">이벤트 범주 및 메시지 문자열에 대 한 지역화 된 리소스 파일을 사용 하 여 이벤트 소스를 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-326">You can register the event source with localized resource file(s) for your event category and message strings.</span></span> <span data-ttu-id="8d489-327">응용 프로그램 실제 문자열을 지정 하는 대신 리소스 식별자를 사용 하 여 이벤트 로그 엔트리를 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-327">Your application can write event log entries using resource identifiers, rather than specifying the actual string.</span></span> <span data-ttu-id="8d489-328">이벤트 뷰어를 찾아 현재 언어 설정에 따라 지역화 된 리소스 파일에서 해당 문자열을 표시할 리소스 식별자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-328">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="8d489-329">이벤트 범주, 메시지 및 매개 변수 삽입 문자열에 대 한 별도 파일을 등록할 수 있습니다 또는 세 가지 유형의 문자열 모두에 같은 리소스 파일을 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-329">You can register a separate file for event categories, messages and parameter insertion strings, or you can register the same resource file for all three types of strings.</span></span> <span data-ttu-id="8d489-330">사용 합니다 <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>, <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>를 <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>, 및 <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> 이벤트 로그에 지역화 된 엔트리를 쓸 원본을 구성 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-330">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>, <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log.</span></span> <span data-ttu-id="8d489-331">응용 프로그램 이벤트 로그에 직접 문자열 값을 쓰는, 경우에 이러한 속성을 설정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-331">If your application writes strings values directly to the event log, you do not need to set these properties.</span></span>  
  
 <span data-ttu-id="8d489-332">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-332">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-333">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-333">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-334">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-334">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-335">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-335">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="8d489-336">기존 원본의 구성 세부 정보를 변경 하려면 소스를 삭제 하며 사용 하 여 새 구성을 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-336">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="8d489-337">다른 응용 프로그램이 나 구성 요소는 기존 소스를 사용 하는 경우 기존 소스를 삭제 하는 대신 업데이트 된 구성을 사용 하 여 새 소스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-337">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-338">원본 이벤트 로그에 대해 구성 된 다른 이벤트 로그에 대 한 다시 구성 하 고 변경 내용을 적용 하려면 컴퓨터를 다시 시작 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-338">If a source is configured for an event log, and you reconfigure it for another event log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-339">다음 예제에서는 라는 이벤트 소스가 있는지 여부를 결정 `SampleApplicationSource` 로컬 컴퓨터에 등록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-339">The following example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="8d489-340">이벤트 원본이 존재 하지 않는 경우이 예제에서는 소스의 메시지 리소스 파일을 설정 하 고 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-340">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="8d489-341">이 예제에서는 리소스 식별자 값을 사용 하 여 이벤트 로그의 지역화 된 표시 이름을 설정 하는 마지막으로, `DisplayNameMsgId` 및 리소스 파일 경로 `messageFile`입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-341">Finally, the example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="8d489-342">이 예제에서는 리소스 라이브러리 EventLogMsgs.dll 내장 다음 메시지 텍스트 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-342">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="8d489-343">메시지 텍스트 파일은 메시지 리소스 파일 생성 되는 원본.</span><span class="sxs-lookup"><span data-stu-id="8d489-343">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="8d489-344">메시지 텍스트 파일의 리소스 식별자와 범주, 이벤트 메시지 및 매개 변수 삽입 문자열에 대 한 텍스트를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-344">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span> <span data-ttu-id="8d489-345">특히, 리소스 식별자 5001 이벤트 로그의 지역화 된 이름에 대해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-345">Specifically, resource identifier 5001 is defined for the localized name of the event log.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-346"><paramref name="sourceData" />에 지정한 컴퓨터 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-346">The computer name specified in <paramref name="sourceData" /> is not valid.</span></span>  
  
<span data-ttu-id="8d489-347">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-347">-or-</span></span> 
<span data-ttu-id="8d489-348"><paramref name="sourceData" />에 지정된 소스 이름이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-348">The source name specified in <paramref name="sourceData" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8d489-349">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-349">-or-</span></span> 
<span data-ttu-id="8d489-350"><paramref name="sourceData" />에 지정한 로그 이름이 잘못된 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-350">The log name specified in <paramref name="sourceData" /> is not valid.</span></span> <span data-ttu-id="8d489-351">이벤트 로그 이름은 인쇄할 수 있는 문자로 구성되어야 하며 '\*', '?' 또는 '\\'를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-351">Event log names must consist of printable characters and cannot include the characters '\*', '?', or '\\'.</span></span>  
  
<span data-ttu-id="8d489-352">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-352">-or-</span></span> 
<span data-ttu-id="8d489-353"><paramref name="sourceData" />에 지정한 로그 이름을 사용자 로그를 만드는 데 사용할 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-353">The log name specified in <paramref name="sourceData" /> is not valid for user log creation.</span></span> <span data-ttu-id="8d489-354">이벤트 로그 이름 AppEvent, SysEvent 및 SecEvent는 시스템용으로 예약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-354">The Event log names AppEvent, SysEvent, and SecEvent are reserved for system use.</span></span>  
  
<span data-ttu-id="8d489-355">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-355">-or-</span></span> 
<span data-ttu-id="8d489-356">로그 이름이 기존 이벤트 소스 이름과 일치하는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-356">The log name matches an existing event source name.</span></span>  
  
<span data-ttu-id="8d489-357">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-357">-or-</span></span> 
<span data-ttu-id="8d489-358"><paramref name="sourceData" />에 지정한 소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-358">The source name specified in <paramref name="sourceData" /> results in a registry key path longer than 254 characters.</span></span>  
  
<span data-ttu-id="8d489-359">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-359">-or-</span></span> 
<span data-ttu-id="8d489-360"><paramref name="sourceData" />에 지정한 로그 이름의 처음 8개 문자가 고유하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-360">The first 8 characters of the log name specified in <paramref name="sourceData" /> are not unique.</span></span>  
  
<span data-ttu-id="8d489-361">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-361">-or-</span></span> 
<span data-ttu-id="8d489-362"><paramref name="sourceData" />에 지정한 소스 이름이 이미 등록된 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-362">The source name specified in <paramref name="sourceData" /> is already registered.</span></span>  
  
<span data-ttu-id="8d489-363">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-363">-or-</span></span> 
<span data-ttu-id="8d489-364"><paramref name="sourceData" />에 지정한 소스 이름이 기존 이벤트 로그 이름과 일치하는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-364">The source name specified in <paramref name="sourceData" /> matches an existing event log name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-365">이벤트 로그의 레지스트리 키를 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-365">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d489-366"><paramref name="sourceData" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-366"><paramref name="sourceData" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-367">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-367">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-368">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-368">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventSourceCreationData" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLogInstaller" />
      </Docs>
    </Member>
    <Member MemberName="CreateEventSource">
      <MemberSignature Language="C#" Value="public static void CreateEventSource (string source, string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateEventSource(string source, string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateEventSource (source As String, logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateEventSource(System::String ^ source, System::String ^ logName);" />
      <MemberSignature Language="F#" Value="static member CreateEventSource : string * string -&gt; unit" Usage="System.Diagnostics.EventLog.CreateEventSource (source, logName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8d489-369">로컬 컴퓨터에 등록되는 응용 프로그램의 원본 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-369">The source name by which the application is registered on the local computer.</span></span></param>
        <param name="logName"><span data-ttu-id="8d489-370">소스 엔트리를 쓸 로그의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-370">The name of the log the source's entries are written to.</span></span> <span data-ttu-id="8d489-371">가능한 값은 응용 프로그램, 시스템 또는 사용자 지정 이벤트 로그를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-371">Possible values include Application, System, or a custom event log.</span></span></param>
        <summary><span data-ttu-id="8d489-372">로컬 컴퓨터의 로그에 엔트리를 쓰는 유효한 이벤트 소스로 지정된 소스 이름을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-372">Establishes the specified source name as a valid event source for writing entries to a log on the local computer.</span></span> <span data-ttu-id="8d489-373">또한 이 방법을 사용하면 로컬 컴퓨터에 새로운 사용자 지정 로그를 만들 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-373">This method can also create a new custom log on the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-374">이 오버 로드를 사용 하 여 사용자 지정 로그를 만들지 또는 만들고 등록 하는 <xref:System.Diagnostics.EventLog.Source%2A> 로컬 컴퓨터에 있는 기존 로그 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-374">Use this overload to create a custom log or to create and register a <xref:System.Diagnostics.EventLog.Source%2A> to an existing log on the local computer.</span></span>  
  
 <span data-ttu-id="8d489-375">경우 `logName` 됩니다 `null` 이거나 빈 문자열 ("") 호출 하는 경우 <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, 응용 프로그램 로그에 기본적으로 로그.</span><span class="sxs-lookup"><span data-stu-id="8d489-375">If `logName` is `null` or an empty string ("") when you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, the log defaults to the Application log.</span></span> <span data-ttu-id="8d489-376">로그는 로컬 컴퓨터에 없는 경우 시스템 사용자 지정 로그를 만들고 응용 프로그램으로 등록을 <xref:System.Diagnostics.EventLog.Source%2A> 해당 로그에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-376">If the log does not exist on the local computer, the system creates a custom log and registers your application as a <xref:System.Diagnostics.EventLog.Source%2A> for that log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-377">이벤트 원본 Windows Vista 이상 또는 Windows Server 2003을 만들려면 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-377">To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="8d489-378">이 요구 사항에 대 한 이유 보안을 포함 한 모든 이벤트 로그, 이벤트 소스 고유한 지 확인 하려면 검색 해야입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-378">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="8d489-379">Windows Vista부터 사용자 권한이 없습니다 보안 로그에 액세스 하려면 따라서는 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-379">Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="8d489-380">Windows Vista 이상에서는 UAC(사용자 계정 컨트롤)가 사용자 권한을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-380">In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="8d489-381">기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-381">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="8d489-382">기본적으로 표준 사용자 역할이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-382">By default, you are in the standard user role.</span></span> <span data-ttu-id="8d489-383">보안 로그에 액세스 하는 코드를 실행 하려면 먼저 높여야 권한을 표준 사용자에서 관리자에 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-383">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="8d489-384">응용 프로그램 아이콘을 마우스 오른쪽 단추로 클릭하고 관리자로 실행하도록 지정하여 응용 프로그램을 시작하면 이 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-384">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="8d489-385">이벤트 로그에 작성 하는 경우 이벤트 소스를 생성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-385">You only need to create an event source if you are writing to the event log.</span></span> <span data-ttu-id="8d489-386">이벤트 로그에 항목이 기록 되기 전에 이벤트의 유효한 소스로 이벤트 로그를 사용 하 여 이벤트 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-386">Before writing an entry to an event log, you must register the event source with the event log as a valid source of events.</span></span> <span data-ttu-id="8d489-387">로그 엔트리를 쓸 때 시스템 사용를 <xref:System.Diagnostics.EventLog.Source%2A> 출품작을 배치 하는 적절 한 로그를 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-387">When you write a log entry, the system uses the <xref:System.Diagnostics.EventLog.Source%2A> to find the appropriate log in which to place your entry.</span></span> <span data-ttu-id="8d489-388">읽는 경우 이벤트 로그를 지정 하거나 합니다 <xref:System.Diagnostics.EventLog.Source%2A>, 또는 <xref:System.Diagnostics.EventLog.Log%2A> 및 <xref:System.Diagnostics.EventLog.MachineName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-388">If you are reading the event log, you can either specify the <xref:System.Diagnostics.EventLog.Source%2A>, or a <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-389">지정할 필요가 없습니다를 <xref:System.Diagnostics.EventLog.MachineName%2A> 로컬 컴퓨터의 로그에 연결 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-389">You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log on the local computer.</span></span> <span data-ttu-id="8d489-390">지정 하지 않으면 경우는 <xref:System.Diagnostics.EventLog.MachineName%2A> 를 읽을 때 로그를 로컬 컴퓨터 (".") 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-390">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A> when reading from a log, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="8d489-391">사용 하 여 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 및 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 이벤트 로그에 이벤트를 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-391">Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log.</span></span> <span data-ttu-id="8d489-392">이벤트를 작성 하는 이벤트 원본을 지정 해야 합니다. 만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-392">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="8d489-393">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-393">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-394">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-394">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-395">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-395">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-396">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-396">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-397">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-397">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-398">기존 이벤트 로그 또는 새 이벤트 로그의 이벤트 소스를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-398">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="8d489-399">새 이벤트 로그에 대 한 새 소스를 만들면 해당 로그에 대 한 소스를 등록 하는 시스템 있지만 첫 번째 항목에 기록할 때 까지는 로그가 만들어지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-399">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="8d489-400">운영 체제 파일과 이벤트 로그를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-400">The operating system stores event logs as files.</span></span> <span data-ttu-id="8d489-401">사용 하는 경우 <xref:System.Diagnostics.EventLogInstaller> 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 새 이벤트 로그를 만들려면 연결된 된 파일은 지정된 된 컴퓨터에서 %SystemRoot%\System32\Config 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-401">When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="8d489-402">파일 이름은의 처음 8 개 문자를 추가 하 여 설정 됩니다는 <xref:System.Diagnostics.EventLog.Log%2A> ".evt" 파일 이름 확장명을 가진 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-402">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="8d489-403">소스는 로컬 컴퓨터에서 고유 해야 합니다. 새 원본 이름을 기존 원본 이름 또는 기존 이벤트 로그 이름과 일치할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-403">The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name.</span></span> <span data-ttu-id="8d489-404">각 소스에서는 한 번에 하나의 이벤트 로그에 쓸 수 있습니다. 그러나 응용 프로그램이 여러 이벤트 로그에 쓸 여러 원본을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-404">Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="8d489-405">예를 들어, 응용 프로그램에 다른 이벤트 로그 또는 다른 리소스 파일에 대해 구성 된 여러 소스가 필요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-405">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="8d489-406">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-406">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-407">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-407">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-408">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-408">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-409">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-409">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="8d489-410">기존 원본의 구성 세부 정보를 변경 하려면 소스를 삭제 하며 사용 하 여 새 구성을 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-410">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="8d489-411">다른 응용 프로그램이 나 구성 요소는 기존 소스를 사용 하는 경우 기존 소스를 삭제 하는 대신 업데이트 된 구성을 사용 하 여 새 소스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-411">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-412">원본 로그에 이미 매핑 되었습니다. 새 로그에 다시 매핑하려면을 하는 경우 변경 내용 적용 하려면 컴퓨터를 다시 시작 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-412">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-413">다음 예제에서는 소스를 만듭니다 `MySource` 아직 존재 하지 않는 경우 이벤트 로그에 엔트리를 씁니다 `MyNewLog`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-413">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-414"><paramref name="source" />가 빈 문자열("")이나 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-414"><paramref name="source" /> is an empty string ("") or <see langword="null" />.</span></span>  
  
<span data-ttu-id="8d489-415">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-415">-or-</span></span> 
 <span data-ttu-id="8d489-416"><paramref name="logName" />이 올바른 이벤트 로그 이름이 아닌 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-416"><paramref name="logName" /> is not a valid event log name.</span></span> <span data-ttu-id="8d489-417">이벤트 로그 이름은 인쇄할 수 있는 문자로 구성되어야 하며 '\*', '?' 또는 '\\'를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-417">Event log names must consist of printable characters, and cannot include the characters '\*', '?', or '\\'.</span></span>  
  
<span data-ttu-id="8d489-418">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-418">-or-</span></span> 
 <span data-ttu-id="8d489-419"><paramref name="logName" />은 사용자 로그 작성에 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-419"><paramref name="logName" /> is not valid for user log creation.</span></span> <span data-ttu-id="8d489-420">이벤트 로그 이름 AppEvent, SysEvent 및 SecEvent는 시스템용으로 예약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-420">The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.</span></span>  
  
<span data-ttu-id="8d489-421">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-421">-or-</span></span> 
<span data-ttu-id="8d489-422">로그 이름이 기존 이벤트 소스 이름과 일치하는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-422">The log name matches an existing event source name.</span></span>  
  
<span data-ttu-id="8d489-423">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-423">-or-</span></span> 
<span data-ttu-id="8d489-424">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-424">The source name results in a registry key path longer than 254 characters.</span></span>  
  
<span data-ttu-id="8d489-425">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-425">-or-</span></span> 
<span data-ttu-id="8d489-426"><paramref name="logName" />의 처음 8개 문자가 기존 이벤트 로그 이름의 처음 8개 문자와 일치하는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-426">The first 8 characters of <paramref name="logName" /> match the first 8 characters of an existing event log name.</span></span>  
  
<span data-ttu-id="8d489-427">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-427">-or-</span></span> 
<span data-ttu-id="8d489-428">소스가 이미 로컬 컴퓨터에 있기 때문에 해당 소스를 등록할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-428">The source cannot be registered because it already exists on the local computer.</span></span>  
  
<span data-ttu-id="8d489-429">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-429">-or-</span></span> 
<span data-ttu-id="8d489-430">소스 이름이 기존 이벤트 로그 이름과 일치하는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-430">The source name matches an existing event log name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-431">이벤트 로그의 레지스트리 키를 로컬 컴퓨터에서 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-431">The registry key for the event log could not be opened on the local computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-432">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-432">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-433">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-433">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEventSource">
      <MemberSignature Language="C#" Value="public static void CreateEventSource (string source, string logName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateEventSource(string source, string logName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateEventSource (source As String, logName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateEventSource(System::String ^ source, System::String ^ logName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member CreateEventSource : string * string * string -&gt; unit" Usage="System.Diagnostics.EventLog.CreateEventSource (source, logName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("use CreateEventSource(EventSourceCreationData) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.EventLog.CreateEventSource(EventSourceCreationData sourceData) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.EventLog.CreateEventSource(EventSourceCreationData sourceData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8d489-434">지정한 컴퓨터에 등록되는 응용 프로그램의 원본입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-434">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="logName"><span data-ttu-id="8d489-435">소스 엔트리를 쓸 로그의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-435">The name of the log the source's entries are written to.</span></span> <span data-ttu-id="8d489-436">가능한 값은 응용 프로그램, 시스템 또는 사용자 지정 이벤트 로그를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-436">Possible values include Application, System, or a custom event log.</span></span> <span data-ttu-id="8d489-437">값을 지정하지 않은 경우 기본적으로 <paramref name="logName" />은 응용 프로그램이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-437">If you do not specify a value, <paramref name="logName" /> defaults to Application.</span></span></param>
        <param name="machineName"><span data-ttu-id="8d489-438">이 이벤트 원본을 등록할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우에는 "."입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-438">The name of the computer to register this event source with, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="8d489-439">지정된 컴퓨터의 로그에 엔트리를 쓰는 유효한 이벤트 소스로 지정된 소스 이름을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-439">Establishes the specified source name as a valid event source for writing entries to a log on the specified computer.</span></span> <span data-ttu-id="8d489-440">또한 이 방법을 사용하면 지정한 컴퓨터에 새로운 사용자 지정 로그를 만들 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-440">This method can also be used to create a new custom log on the specified computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-441">이 오버 로드를 사용 하 여 사용자 지정 로그를 만들지 또는 만들고 등록 하는 <xref:System.Diagnostics.EventLog.Source%2A> 지정한 컴퓨터에 있는 기존 로그 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-441">Use this overload to create a custom log or to create and register a <xref:System.Diagnostics.EventLog.Source%2A> to an existing log on the specified computer.</span></span>  
  
 <span data-ttu-id="8d489-442">경우 `logName` 됩니다 `null` 이거나 빈 문자열 ("") 호출 하는 경우 <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, 응용 프로그램 로그에 기본적으로 로그.</span><span class="sxs-lookup"><span data-stu-id="8d489-442">If `logName` is `null` or an empty string ("") when you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, the log defaults to the Application log.</span></span> <span data-ttu-id="8d489-443">지정한 컴퓨터의 로그 없으면 시스템 사용자 지정 로그를 만들고 응용 프로그램으로 등록을 <xref:System.Diagnostics.EventLog.Source%2A> 해당 로그에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-443">If the log does not exist on the specified computer, the system creates a custom log and registers your application as a <xref:System.Diagnostics.EventLog.Source%2A> for that log.</span></span>  
  
 <span data-ttu-id="8d489-444">이벤트 로그에 작성 하는 경우 이벤트 소스를 생성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-444">You only need to create an event source if you are writing to the event log.</span></span> <span data-ttu-id="8d489-445">이벤트 로그에 항목이 기록 되기 전에 이벤트의 유효한 소스로 이벤트 로그를 사용 하 여 이벤트 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-445">Before writing an entry to an event log, you must register the event source with the event log as a valid source of events.</span></span> <span data-ttu-id="8d489-446">로그 엔트리를 쓸 때 시스템 사용를 <xref:System.Diagnostics.EventLog.Source%2A> 출품작을 배치 하는 적절 한 로그를 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-446">When you write a log entry, the system uses the <xref:System.Diagnostics.EventLog.Source%2A> to find the appropriate log in which to place your entry.</span></span> <span data-ttu-id="8d489-447">읽는 경우 이벤트 로그를 지정 하거나 합니다 <xref:System.Diagnostics.EventLog.Source%2A>, 또는 <xref:System.Diagnostics.EventLog.Log%2A> 및 <xref:System.Diagnostics.EventLog.MachineName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-447">If you are reading the event log, you can either specify the <xref:System.Diagnostics.EventLog.Source%2A>, or a <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-448">이벤트 원본 Windows Vista 이상 또는 Windows Server 2003을 만들려면 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-448">To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="8d489-449">이 요구 사항에 대 한 이유 보안을 포함 한 모든 이벤트 로그, 이벤트 소스 고유한 지 확인 하려면 검색 해야입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-449">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="8d489-450">Windows Vista 이상 버전에서는 사용자가 권한이 없습니다 보안 로그에 액세스 하려면 따라서는 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-450">In Windows Vista and later, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="8d489-451">Windows Vista 이상에서는 UAC(사용자 계정 컨트롤)가 사용자 권한을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-451">In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="8d489-452">기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-452">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="8d489-453">기본적으로 표준 사용자 역할이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-453">By default, you are in the standard user role.</span></span> <span data-ttu-id="8d489-454">보안 로그에 액세스 하는 코드를 실행 하려면 먼저 높여야 권한을 표준 사용자에서 관리자에 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-454">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="8d489-455">응용 프로그램 아이콘을 마우스 오른쪽 단추로 클릭하고 관리자로 실행하도록 지정하여 응용 프로그램을 시작하면 이 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-455">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="8d489-456">사용 하 여 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 및 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 이벤트 로그에 이벤트를 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-456">Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log.</span></span> <span data-ttu-id="8d489-457">이벤트를 작성 하는 이벤트 원본을 지정 해야 합니다. 만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-457">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="8d489-458">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-458">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-459">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-459">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-460">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-460">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-461">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-461">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-462">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-462">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-463">기존 이벤트 로그 또는 새 이벤트 로그의 이벤트 소스를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-463">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="8d489-464">새 이벤트 로그에 대 한 새 소스를 만들면 해당 로그에 대 한 소스를 등록 하는 시스템 있지만 첫 번째 항목에 기록할 때 까지는 로그가 만들어지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-464">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="8d489-465">운영 체제 파일과 이벤트 로그를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-465">The operating system stores event logs as files.</span></span> <span data-ttu-id="8d489-466">사용 하는 경우 <xref:System.Diagnostics.EventLogInstaller> 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 새 이벤트 로그를 만들려면 연결된 된 파일은 지정된 된 컴퓨터에서 %SystemRoot%\System32\Config 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-466">When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="8d489-467">파일 이름은의 처음 8 개 문자를 추가 하 여 설정 됩니다는 <xref:System.Diagnostics.EventLog.Log%2A> ".evt" 파일 이름 확장명을 가진 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-467">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="8d489-468">소스는 로컬 컴퓨터에서 고유 해야 합니다. 새 원본 이름을 기존 원본 이름 또는 기존 이벤트 로그 이름과 일치할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-468">The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name.</span></span> <span data-ttu-id="8d489-469">각 소스에서는 한 번에 하나의 이벤트 로그에 쓸 수 있습니다. 그러나 응용 프로그램이 여러 이벤트 로그에 쓸 여러 원본을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-469">Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="8d489-470">예를 들어, 응용 프로그램에 다른 이벤트 로그 또는 다른 리소스 파일에 대해 구성 된 여러 소스가 필요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-470">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="8d489-471">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-471">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-472">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-472">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-473">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-473">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-474">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-474">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="8d489-475">기존 원본의 구성 세부 정보를 변경 하려면 소스를 삭제 하며 사용 하 여 새 구성을 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-475">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="8d489-476">다른 응용 프로그램이 나 구성 요소는 기존 소스를 사용 하는 경우 기존 소스를 삭제 하는 대신 업데이트 된 구성을 사용 하 여 새 소스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-476">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-477">원본 로그에 이미 매핑 되었습니다. 새 로그에 다시 매핑하려면을 하는 경우 변경 내용 적용 하려면 컴퓨터를 다시 시작 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-477">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-478">다음 예제에서는 소스를 만듭니다 `MySource` 컴퓨터의 `MyServer`, 이벤트 로그에 항목을 쓰고 `MyNewLog`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-478">The following example creates the source `MySource` on the computer `MyServer`, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-479"><paramref name="machineName" />이 올바른 컴퓨터 이름이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-479">The <paramref name="machineName" /> is not a valid computer name.</span></span>  
  
<span data-ttu-id="8d489-480">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-480">-or-</span></span> 
 <span data-ttu-id="8d489-481"><paramref name="source" />가 빈 문자열("")이나 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-481"><paramref name="source" /> is an empty string ("") or <see langword="null" />.</span></span>  
  
<span data-ttu-id="8d489-482">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-482">-or-</span></span> 
 <span data-ttu-id="8d489-483"><paramref name="logName" />이 올바른 이벤트 로그 이름이 아닌 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-483"><paramref name="logName" /> is not a valid event log name.</span></span> <span data-ttu-id="8d489-484">이벤트 로그 이름은 인쇄할 수 있는 문자로 구성되어야 하며 '\*', '?' 또는 '\\'를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-484">Event log names must consist of printable characters, and cannot include the characters '\*', '?', or '\\'.</span></span>  
  
<span data-ttu-id="8d489-485">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-485">-or-</span></span> 
 <span data-ttu-id="8d489-486"><paramref name="logName" />은 사용자 로그 작성에 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-486"><paramref name="logName" /> is not valid for user log creation.</span></span> <span data-ttu-id="8d489-487">이벤트 로그 이름 AppEvent, SysEvent 및 SecEvent는 시스템용으로 예약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-487">The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.</span></span>  
  
<span data-ttu-id="8d489-488">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-488">-or-</span></span> 
<span data-ttu-id="8d489-489">로그 이름이 기존 이벤트 소스 이름과 일치하는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-489">The log name matches an existing event source name.</span></span>  
  
<span data-ttu-id="8d489-490">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-490">-or-</span></span> 
<span data-ttu-id="8d489-491">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-491">The source name results in a registry key path longer than 254 characters.</span></span>  
  
<span data-ttu-id="8d489-492">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-492">-or-</span></span> 
<span data-ttu-id="8d489-493"><paramref name="logName" />의 처음 8개 문자가 지정된 컴퓨터에 있는 기존 이벤트 로그 이름의 처음 8개 문자와 일치하는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-493">The first 8 characters of <paramref name="logName" /> match the first 8 characters of an existing event log name on the specified computer.</span></span>  
  
<span data-ttu-id="8d489-494">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-494">-or-</span></span> 
<span data-ttu-id="8d489-495">소스가 이미 지정한 컴퓨터에 있기 때문에 해당 소스를 등록할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-495">The source cannot be registered because it already exists on the specified computer.</span></span>  
  
<span data-ttu-id="8d489-496">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-496">-or-</span></span> 
<span data-ttu-id="8d489-497">소스 이름이 기존 이벤트 소스 이름과 일치하는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-497">The source name matches an existing event source name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-498">이벤트 로그의 레지스트리 키를 지정한 컴퓨터에서 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-498">The registry key for the event log could not be opened on the specified computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-499">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-499">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-500">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-500">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d489-501">로그 리소스를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-501">Removes a log resource.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ logName);" />
      <MemberSignature Language="F#" Value="static member Delete : string -&gt; unit" Usage="System.Diagnostics.EventLog.Delete logName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="8d489-502">삭제할 로그의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-502">The name of the log to delete.</span></span> <span data-ttu-id="8d489-503">가능한 값은 다음과 같습니다. 애플리케이션, 보안, 시스템 및 컴퓨터의 모든 사용자 지정 이벤트 로그를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-503">Possible values include: Application, Security, System, and any custom event logs on the computer.</span></span></param>
        <summary><span data-ttu-id="8d489-504">로컬 컴퓨터에서 이벤트 로그를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-504">Removes an event log from the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-505">삭제 하려는 로그를 로컬 컴퓨터의 경우이 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-505">Use this method when the log you want to delete is on the local computer.</span></span> <span data-ttu-id="8d489-506">적절 한 레지스트리 권한이 제공 된 컴퓨터의 모든 로그를 삭제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-506">You can delete any log on the computer, provided you have the appropriate registry permissions.</span></span>  
  
 <span data-ttu-id="8d489-507"><xref:System.Diagnostics.EventLog.Delete%2A> 지정 된 로그 제거 `logName` 로컬 컴퓨터에서.</span><span class="sxs-lookup"><span data-stu-id="8d489-507"><xref:System.Diagnostics.EventLog.Delete%2A> removes the log specified by `logName` from the local computer.</span></span> <span data-ttu-id="8d489-508">삭제 하려는 경우 원본만을 로그에 등록, 호출 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-508">If you want to delete only the source registered to a log, call <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>.</span></span> <span data-ttu-id="8d489-509">로그 항목을 삭제 하려는 경우 호출 <xref:System.Diagnostics.EventLog.Clear%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-509">If you only want to delete the log entries, call <xref:System.Diagnostics.EventLog.Clear%2A>.</span></span> <span data-ttu-id="8d489-510"><xref:System.Diagnostics.EventLog.Delete%2A> 및 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 는 `static` 메서드, 클래스 자체에서 호출할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-510"><xref:System.Diagnostics.EventLog.Delete%2A> and <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> are `static` methods, so they can be called on the class itself.</span></span> <span data-ttu-id="8d489-511">새 인스턴스를 만드는 데 필요한 아닙니다 <xref:System.Diagnostics.EventLog> 하거나 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-511">It is not necessary to create a new instance of <xref:System.Diagnostics.EventLog> to call either method.</span></span>  
  
 <span data-ttu-id="8d489-512"><xref:System.Diagnostics.EventLog.Delete%2A> 메서드는 먼저 로그의 내용이 들어 있는 파일을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-512">The <xref:System.Diagnostics.EventLog.Delete%2A> method first deletes the file that holds the contents of the log.</span></span> <span data-ttu-id="8d489-513">레지스트리에 액세스 하 고 해당 로그에 등록 된 모든 이벤트 소스를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-513">It then accesses the registry and removes all the event sources registered for that log.</span></span> <span data-ttu-id="8d489-514">나중에 로그를 다시 등록 해야 이벤트 원본을 마찬가지로 다시 사용 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-514">If you recreate the log at a later point, you should register the event sources again, if they are to be reused.</span></span> <span data-ttu-id="8d489-515">이벤트 원본을 등록 하지 않은 경우 로그 이름을 지정 하지 않고 이벤트 소스에 작성 하는 다른 사용자에 게 응용 프로그램 이벤트 로그에 이벤트 소스가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-515">If you do not register the event sources and other users write to an event source without specifying a log name, the event source will be created in the Application event log.</span></span> <span data-ttu-id="8d489-516">따라서 삭제 하 고 다시 로그에 엔트리를 쓸 수 있었던 응용 프로그램 작성 응용 프로그램 로그 대신 이제 이벤트 소스를 포함 하기 때문에 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-516">Therefore, applications that previously were able to write entries to the log you deleted and recreated will write to the Application log instead, because it now contains the event source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-517">이벤트 로그를 다시 만드는 과정은 어려울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-517">Recreating an event log can be a difficult process.</span></span> <span data-ttu-id="8d489-518">응용 프로그램 로그와 같은 시스템 생성 이벤트 로그를 삭제 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="8d489-518">Avoid deleting any of the system-created event logs, such as the Application log.</span></span>  
  
 <span data-ttu-id="8d489-519">호출 하 여 로그를 삭제 <xref:System.Diagnostics.EventLog.Delete%2A> 해당 로그에 등록 된 원본과 자동으로 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-519">Deleting a log through a call to <xref:System.Diagnostics.EventLog.Delete%2A> automatically deletes the sources registered to that log.</span></span> <span data-ttu-id="8d489-520">이 작동 하지 않는 해당 로그를 사용 하 여 다른 응용 프로그램을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-520">This can make other applications using that log inoperative.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-521">다음 예제에서는 로컬 컴퓨터에서 로그를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-521">The following example deletes a log from the local computer.</span></span> <span data-ttu-id="8d489-522">이 예제에서는 해당 원본에서 로그를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-522">The example determines the log from its source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-523">둘 이상의 소스 이벤트 로그를 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-523">More than one source might write to an event log.</span></span> <span data-ttu-id="8d489-524">사용자 지정 로그를 삭제 하기 전에 해당 로그에 쓰는 다른 소스가 없는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-524">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-525"><paramref name="logName" />가 빈 문자열("")이나 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-525"><paramref name="logName" /> is an empty string ("") or <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-526">이벤트 로그의 레지스트리 키를 로컬 컴퓨터에서 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-526">The registry key for the event log could not be opened on the local computer.</span></span>  
  
<span data-ttu-id="8d489-527">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-527">-or-</span></span> 
<span data-ttu-id="8d489-528">로컬 컴퓨터에 로그가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-528">The log does not exist on the local computer.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-529">이벤트 로그가 지워지지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-529">The event log was not cleared successfully.</span></span>  
  
<span data-ttu-id="8d489-530">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-530">-or-</span></span> 
<span data-ttu-id="8d489-531">로그를 열 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-531">The log cannot be opened.</span></span> <span data-ttu-id="8d489-532">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-532">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-533">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-533">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-534">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-534">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
        <altmember cref="M:System.Diagnostics.EventLog.Close" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string logName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string logName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Delete(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (logName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ logName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member Delete : string * string -&gt; unit" Usage="System.Diagnostics.EventLog.Delete (logName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="8d489-535">삭제할 로그의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-535">The name of the log to delete.</span></span> <span data-ttu-id="8d489-536">가능한 값은 다음과 같습니다. 애플리케이션, 보안, 시스템 및 지정된 컴퓨터의 모든 사용자 지정 이벤트 로그를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-536">Possible values include: Application, Security, System, and any custom event logs on the specified computer.</span></span></param>
        <param name="machineName"><span data-ttu-id="8d489-537">로그를 삭제할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우에는 "."입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-537">The name of the computer to delete the log from, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="8d489-538">지정한 컴퓨터에서 이벤트 로그를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-538">Removes an event log from the specified computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-539">원격 컴퓨터 로그 삭제 하려는 경우이 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-539">Use this method when the log you want to delete is on a remote computer.</span></span> <span data-ttu-id="8d489-540">적절 한 레지스트리 권한이 제공 된 컴퓨터의 모든 로그를 삭제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-540">You can delete any log on the computer, provided you have the appropriate registry permissions.</span></span>  
  
 <span data-ttu-id="8d489-541"><xref:System.Diagnostics.EventLog.Delete%2A> 지정 된 로그를 제거 `logName` 에 지정 된 컴퓨터에서 `machineName`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-541"><xref:System.Diagnostics.EventLog.Delete%2A> removes the log specified by `logName` from the computer specified by `machineName`.</span></span> <span data-ttu-id="8d489-542">삭제 하려는 경우 원본만을 로그에 등록, 호출 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-542">If you want to delete only the source registered to a log, call <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>.</span></span> <span data-ttu-id="8d489-543">로그 항목을 삭제 하려는 경우 호출 <xref:System.Diagnostics.EventLog.Clear%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-543">If you only want to delete the log entries, call <xref:System.Diagnostics.EventLog.Clear%2A>.</span></span> <span data-ttu-id="8d489-544"><xref:System.Diagnostics.EventLog.Delete%2A> 및 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 는 `static` 메서드, 클래스 자체에서 호출할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-544"><xref:System.Diagnostics.EventLog.Delete%2A> and <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> are `static` methods, so they can be called on the class itself.</span></span> <span data-ttu-id="8d489-545">인스턴스를 만들 필요는 없습니다 <xref:System.Diagnostics.EventLog> 하거나 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-545">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call either method.</span></span>  
  
 <span data-ttu-id="8d489-546">이 메서드는 먼저 로그의 내용이 들어 있는 파일을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-546">This method first deletes the file that holds the contents of the log.</span></span> <span data-ttu-id="8d489-547">레지스트리에 액세스 하 고 해당 로그에 등록 된 모든 이벤트 소스를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-547">It then accesses the registry and removes all the event sources registered for that log.</span></span> <span data-ttu-id="8d489-548">나중에 로그를 다시 등록 해야 이벤트 원본을 마찬가지로 다시 사용 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-548">If you recreate the log at a later point, you should register the event sources again, if they are to be reused.</span></span> <span data-ttu-id="8d489-549">이벤트 원본을 등록 하지 않은 경우 로그 이름을 지정 하지 않고 이벤트 소스에 작성 하는 다른 사용자에 게 응용 프로그램 이벤트 로그에 이벤트 소스가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-549">If you do not register the event sources and other users write to an event source without specifying a log name, the event source will be created in the Application event log.</span></span> <span data-ttu-id="8d489-550">따라서 삭제 하 고 다시 로그에 엔트리를 쓸 수 있었던 응용 프로그램 작성 응용 프로그램 로그 대신 이제 이벤트 소스를 포함 하기 때문에 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-550">Therefore, applications that previously were able to write entries to the log you deleted and recreated will write to the Application log instead, because it now contains the event source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-551">이벤트 로그를 다시 만드는 과정은 어려울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-551">Recreating an event log can be a difficult process.</span></span> <span data-ttu-id="8d489-552">응용 프로그램 로그와 같은 시스템 생성 이벤트 로그를 삭제 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="8d489-552">Avoid deleting any of the system-created event logs, such as the Application log.</span></span>  
  
 <span data-ttu-id="8d489-553">호출 하 여 로그를 삭제 <xref:System.Diagnostics.EventLog.Delete%2A> 해당 로그에 등록 된 원본과 자동으로 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-553">Deleting a log through a call to <xref:System.Diagnostics.EventLog.Delete%2A> automatically deletes the sources registered to that log.</span></span> <span data-ttu-id="8d489-554">이 작동 하지 않는 해당 로그를 사용 하 여 다른 응용 프로그램을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-554">This can make other applications using that log inoperative.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-555">다음 예제에서는 지정된 된 컴퓨터에서 로그를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-555">The following example deletes a log from the specified computer.</span></span> <span data-ttu-id="8d489-556">이 예제에서는 해당 원본에서 로그를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-556">The example determines the log from its source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-557">둘 이상의 소스 이벤트 로그를 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-557">More than one source might write to an event log.</span></span> <span data-ttu-id="8d489-558">사용자 지정 로그를 삭제 하기 전에 해당 로그에 쓰는 다른 소스가 없는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-558">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.Delete1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Delete1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Delete1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-559"><paramref name="logName" />가 빈 문자열("")이나 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-559"><paramref name="logName" /> is an empty string ("") or <see langword="null" />.</span></span>  
  
<span data-ttu-id="8d489-560">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-560">-or-</span></span> 
 <span data-ttu-id="8d489-561"><paramref name="machineName" />이 올바른 컴퓨터 이름이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-561"><paramref name="machineName" /> is not a valid computer name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-562">이벤트 로그의 레지스트리 키를 지정한 컴퓨터에서 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-562">The registry key for the event log could not be opened on the specified computer.</span></span>  
  
<span data-ttu-id="8d489-563">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-563">-or-</span></span> 
<span data-ttu-id="8d489-564">지정된 컴퓨터에 로그가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-564">The log does not exist on the specified computer.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-565">이벤트 로그가 지워지지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-565">The event log was not cleared successfully.</span></span>  
  
<span data-ttu-id="8d489-566">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-566">-or-</span></span> 
<span data-ttu-id="8d489-567">로그를 열 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-567">The log cannot be opened.</span></span> <span data-ttu-id="8d489-568">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-568">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-569">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-569">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-570">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-570">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
        <altmember cref="M:System.Diagnostics.EventLog.Close" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteEventSource">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d489-571">이벤트 로그에서 응용 프로그램의 이벤트 소스 등록을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-571">Removes an application's event source registration from the event log.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteEventSource">
      <MemberSignature Language="C#" Value="public static void DeleteEventSource (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteEventSource(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteEventSource (source As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteEventSource(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member DeleteEventSource : string -&gt; unit" Usage="System.Diagnostics.EventLog.DeleteEventSource source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8d489-572">이벤트 로그 시스템에 등록된 응용 프로그램 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-572">The name by which the application is registered in the event log system.</span></span></param>
        <summary><span data-ttu-id="8d489-573">로컬 컴퓨터의 이벤트 로그에서 이벤트 소스 등록을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-573">Removes the event source registration from the event log of the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-574">이 메서드를 사용 하 여의 등록을 제거 하는 <xref:System.Diagnostics.EventLog.Source%2A> 로컬 컴퓨터에서.</span><span class="sxs-lookup"><span data-stu-id="8d489-574">Use this method to remove the registration of a <xref:System.Diagnostics.EventLog.Source%2A> from the local computer.</span></span> <span data-ttu-id="8d489-575"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 로컬 컴퓨터의 레지스트리에 액세스 하 고 이벤트의 유효한 소스로 응용 프로그램의 등록을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-575"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> accesses the registry on the local computer and removes the registration of your application as a valid source of events.</span></span>  
  
 <span data-ttu-id="8d489-576">해당 로그에 엔트리를 쓸 이상 필요할 경우 이벤트의 유효한 소스로 구성 요소를 제거할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-576">You can remove your component as a valid source of events if you no longer need it to write entries to that log.</span></span> <span data-ttu-id="8d489-577">예를 들어, 다른 구성 요소가 하나의 로그에서 변경 해야 할 경우이 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-577">For example, you might do this if you need to change your component from one log to another.</span></span> <span data-ttu-id="8d489-578">원본만 한 번에 하나의 로그에 등록할 수, 있으므로 로그를 변경 해야 현재 등록을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-578">Because a source can only be registered to one log at a time, changing the log requires you to remove the current registration.</span></span>  
  
 <span data-ttu-id="8d489-579"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 로그에 등록 하는 원본만 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-579"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> removes only the source registered to a log.</span></span> <span data-ttu-id="8d489-580">호출 자체 로그를 제거 하려는 경우 <xref:System.Diagnostics.EventLog.Delete%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-580">If you want to remove the log itself, call <xref:System.Diagnostics.EventLog.Delete%2A>.</span></span> <span data-ttu-id="8d489-581">로그 항목을 삭제 하려는 경우 호출 <xref:System.Diagnostics.EventLog.Clear%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-581">If you only want to delete the log entries, call <xref:System.Diagnostics.EventLog.Clear%2A>.</span></span> <span data-ttu-id="8d489-582"><xref:System.Diagnostics.EventLog.Delete%2A> 및 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 는 `static` 메서드, 클래스 자체에서 호출할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-582"><xref:System.Diagnostics.EventLog.Delete%2A> and <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> are `static` methods, so they can be called on the class itself.</span></span> <span data-ttu-id="8d489-583">인스턴스를 만들 필요는 없습니다 <xref:System.Diagnostics.EventLog> 하거나 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-583">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call either method.</span></span>  
  
 <span data-ttu-id="8d489-584">호출 하 여 로그를 삭제 <xref:System.Diagnostics.EventLog.Delete%2A> 해당 로그에 등록 된 원본과 자동으로 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-584">Deleting a log through a call to <xref:System.Diagnostics.EventLog.Delete%2A> automatically deletes the sources registered to that log.</span></span> <span data-ttu-id="8d489-585">이 작동 하지 않는 해당 로그를 사용 하 여 다른 응용 프로그램을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-585">This can make other applications using that log inoperative.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-586">원본 로그에 이미 매핑 되었습니다. 새 로그에 다시 매핑하려면을 하는 경우 변경 내용 적용 하려면 컴퓨터를 다시 시작 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-586">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-587">다음 예제에서는 로컬 컴퓨터에서 소스를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-587">The following example deletes a source from the local computer.</span></span> <span data-ttu-id="8d489-588">이 예제에서는 해당 원본에서 로그를 확인 하 고 로그를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-588">The example determines the log from its source, and then deletes the log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-589">둘 이상의 소스 이벤트 로그를 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-589">More than one source might write to an event log.</span></span> <span data-ttu-id="8d489-590">사용자 지정 로그를 삭제 하기 전에 해당 로그에 쓰는 다른 소스가 없는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-590">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-591"><paramref name="source" /> 매개 변수가 로컬 컴퓨터의 레지스트리에 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-591">The <paramref name="source" /> parameter does not exist in the registry of the local computer.</span></span>  
  
<span data-ttu-id="8d489-592">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-592">-or-</span></span> 
<span data-ttu-id="8d489-593">이벤트 로그의 레지스트리 키에 대한 쓰기 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-593">You do not have write access on the registry key for the event log.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-594">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-594">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-595">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-595">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
      </Docs>
    </Member>
    <Member MemberName="DeleteEventSource">
      <MemberSignature Language="C#" Value="public static void DeleteEventSource (string source, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteEventSource(string source, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteEventSource (source As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteEventSource(System::String ^ source, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member DeleteEventSource : string * string -&gt; unit" Usage="System.Diagnostics.EventLog.DeleteEventSource (source, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8d489-596">이벤트 로그 시스템에 등록된 응용 프로그램 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-596">The name by which the application is registered in the event log system.</span></span></param>
        <param name="machineName"><span data-ttu-id="8d489-597">등록을 제거할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우에는 "."입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-597">The name of the computer to remove the registration from, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="8d489-598">지정한 컴퓨터에서 응용 프로그램의 이벤트 소스 등록을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-598">Removes the application's event source registration from the specified computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-599">이 오버 로드를 사용 하 여의 등록을 제거 하는 <xref:System.Diagnostics.EventLog.Source%2A> 원격 컴퓨터에서.</span><span class="sxs-lookup"><span data-stu-id="8d489-599">Use this overload to remove the registration of a <xref:System.Diagnostics.EventLog.Source%2A> from a remote computer.</span></span> <span data-ttu-id="8d489-600"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 지정 된 컴퓨터의 레지스트리에 액세스 `machineName` 이벤트의 유효한 소스로 응용 프로그램의 등록을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-600"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> accesses the registry on the computer specified by `machineName` and removes the registration of your application as a valid source of events.</span></span>  
  
 <span data-ttu-id="8d489-601">해당 로그에 엔트리를 쓸 이상 필요할 경우 이벤트의 유효한 소스로 구성 요소를 제거할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-601">You can remove your component as a valid source of events if you no longer need it to write entries to that log.</span></span> <span data-ttu-id="8d489-602">예를 들어, 다른 구성 요소가 하나의 로그에서 변경 해야 할 경우이 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-602">For example, you might do this if you need to change your component from one log to another.</span></span> <span data-ttu-id="8d489-603">원본만 한 번에 하나의 로그에 등록할 수, 있으므로 로그를 변경 해야 현재 등록을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-603">Because a source can only be registered to one log at a time, changing the log requires you to remove the current registration.</span></span>  
  
 <span data-ttu-id="8d489-604"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 로그에 등록 하는 원본만 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-604"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> removes only the source registered to a log.</span></span> <span data-ttu-id="8d489-605">호출 자체 로그를 제거 하려는 경우 <xref:System.Diagnostics.EventLog.Delete%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-605">If you want to remove the log itself, call <xref:System.Diagnostics.EventLog.Delete%2A>.</span></span> <span data-ttu-id="8d489-606">로그 항목을 삭제 하려는 경우 호출 <xref:System.Diagnostics.EventLog.Clear%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-606">If you only want to delete the log entries, call <xref:System.Diagnostics.EventLog.Clear%2A>.</span></span> <span data-ttu-id="8d489-607"><xref:System.Diagnostics.EventLog.Delete%2A> 및 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 는 `static` 메서드, 클래스 자체에서 호출할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-607"><xref:System.Diagnostics.EventLog.Delete%2A> and <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> are `static` methods, so they can be called on the class itself.</span></span> <span data-ttu-id="8d489-608">인스턴스를 만들 필요는 없습니다 <xref:System.Diagnostics.EventLog> 하거나 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-608">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call either method.</span></span>  
  
 <span data-ttu-id="8d489-609">호출 하 여 로그를 삭제 <xref:System.Diagnostics.EventLog.Delete%2A> 해당 로그에 등록 된 원본과 자동으로 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-609">Deleting a log through a call to <xref:System.Diagnostics.EventLog.Delete%2A> automatically deletes the sources registered to that log.</span></span> <span data-ttu-id="8d489-610">이 작동 하지 않는 해당 로그를 사용 하 여 다른 응용 프로그램을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-610">This can make other applications using that log inoperative.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-611">원본 로그에 이미 매핑 되었습니다. 새 로그에 다시 매핑하려면을 하는 경우 변경 내용 적용 하려면 컴퓨터를 다시 시작 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-611">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-612">다음 예제에서는 지정된 된 컴퓨터에서 소스를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-612">The following example deletes a source from the specified computer.</span></span> <span data-ttu-id="8d489-613">이 예제에서는 해당 원본에서 로그를 확인 하 고 로그를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-613">The example determines the log from its source, and then deletes the log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-614">둘 이상의 소스 이벤트 로그를 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-614">More than one source might write to an event log.</span></span> <span data-ttu-id="8d489-615">사용자 지정 로그를 삭제 하기 전에 해당 로그에 쓰는 다른 소스가 없는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-615">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.Delete1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Delete1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Delete1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-616"><paramref name="machineName" /> 매개 변수가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-616">The <paramref name="machineName" /> parameter is invalid.</span></span>  
  
<span data-ttu-id="8d489-617">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-617">-or-</span></span> 
<span data-ttu-id="8d489-618"><paramref name="source" /> 매개 변수가 지정한 컴퓨터의 레지스트리에 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-618">The <paramref name="source" /> parameter does not exist in the registry of the specified computer.</span></span>  
  
<span data-ttu-id="8d489-619">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-619">-or-</span></span> 
<span data-ttu-id="8d489-620">이벤트 로그의 레지스트리 키에 대한 쓰기 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-620">You do not have write access on the registry key for the event log.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-621">레지스트리에서 <paramref name="source" />에 대한 부모 레지스트리 키에 같은 이름의 하위 키가 없기 때문에 <paramref name="source" />를 삭제할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-621"><paramref name="source" /> cannot be deleted because in the registry, the parent registry key for <paramref name="source" /> does not contain a subkey with the same name.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-622">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-622">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-623">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-623">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="eventLog.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="8d489-624">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-624"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="8d489-625"><see cref="T:System.Diagnostics.EventLog" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-625">Releases the unmanaged resources used by the <see cref="T:System.Diagnostics.EventLog" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-626">이 메서드는 공용 `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-626">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="8d489-627">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-627">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="8d489-628"><xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-628"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="8d489-629">경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 되는 개체가 보유 한 모든 리소스를 해제이 <xref:System.Diagnostics.EventLog> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-629">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Diagnostics.EventLog> references.</span></span> <span data-ttu-id="8d489-630">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-630">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8d489-631">
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-631">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="8d489-632">재정의 하는 경우 <see langword="Dispose(Boolean)" /> 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 해야 <see langword="Dispose" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-632">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="8d489-633">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-633">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="8d489-634">에 대 한 자세한 내용은 <see langword="Dispose" /> 하 고 <see cref="M:System.Object.Finalize" />를 참조 하세요 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-634">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EnableRaisingEvents">
      <MemberSignature Language="C#" Value="public bool EnableRaisingEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRaisingEvents" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.EnableRaisingEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRaisingEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRaisingEvents { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableRaisingEvents : bool with get, set" Usage="System.Diagnostics.EventLog.EnableRaisingEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("If enabled raises event when a log is written.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogMonitoring")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d489-635"><see cref="T:System.Diagnostics.EventLog" />가 <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> 이벤트 알림을 받는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-635">Gets or sets a value indicating whether the <see cref="T:System.Diagnostics.EventLog" /> receives <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> event notifications.</span></span></summary>
        <value><span data-ttu-id="8d489-636">로그에 항목을 쓸 때 <see cref="T:System.Diagnostics.EventLog" />에서 알림을 받으면 <see langword="true" />이고, 받지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-636"><see langword="true" /> if the <see cref="T:System.Diagnostics.EventLog" /> receives notification when an entry is written to the log; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-637">합니다 <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> 속성에 따라 결정 하는지 여부를 <xref:System.Diagnostics.EventLog> 로그에 엔트리를 쓸 경우 이벤트를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-637">The <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> property determines whether the <xref:System.Diagnostics.EventLog> raises events when entries are written to the log.</span></span> <span data-ttu-id="8d489-638">속성이 `true`를 수신 하는 구성 요소를 <xref:System.Diagnostics.EventLog.EntryWritten> 이벤트 알림이 제공 됩니다 모든 시간에 지정 된 로그 항목이 기록 됩니다는 <xref:System.Diagnostics.EventLog.Log%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-638">When the property is `true`, components that receive the <xref:System.Diagnostics.EventLog.EntryWritten> event will receive notification any time an entry is written to the log that is specified in the <xref:System.Diagnostics.EventLog.Log%2A> property.</span></span> <span data-ttu-id="8d489-639">하는 경우 <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> 는 `false`, 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-639">If <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> is `false`, no events are raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-640">로컬 컴퓨터에 엔트리를 쓸 때에 이벤트 알림을 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-640">You can receive event notifications only when entries are written on the local computer.</span></span> <span data-ttu-id="8d489-641">원격 컴퓨터에서 작성 하는 항목에 대 한 알림을 받을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-641">You cannot receive notifications for entries written on remote computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-642">다음 예제에서는 처리를 <xref:System.Diagnostics.EventLog.EntryWritten> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-642">The following example handles an <xref:System.Diagnostics.EventLog.EntryWritten> event.</span></span>  
  
 [!code-cpp[Classic EventLog.EnableRaisingEvents Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EnableRaisingEvents Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EnableRaisingEvents Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EnableRaisingEvents Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EnableRaisingEvents Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EnableRaisingEvents Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-643">이벤트 로그가 원격 컴퓨터에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-643">The event log is on a remote computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-644">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-644">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-645">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-645">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="E:System.Diagnostics.EventLog.EntryWritten" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="eventLog.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d489-646">양식에서 사용하거나 다른 구성 요소에서 사용하는 <see cref="T:System.Diagnostics.EventLog" />의 초기화를 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-646">Ends the initialization of an <see cref="T:System.Diagnostics.EventLog" /> used on a form or by another component.</span></span> <span data-ttu-id="8d489-647">초기화는 런타임에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-647">The initialization occurs at runtime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-648">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] 디자인 환경에서이 메서드를 사용 하 여 폼에 또는 다른 구성 요소를 사용 하는 구성의 초기화를 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-648">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to end the initialization of a component used on a form or by another component.</span></span> <span data-ttu-id="8d489-649"><xref:System.Diagnostics.EventLog.BeginInit%2A> 메서드 초기화를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-649">The <xref:System.Diagnostics.EventLog.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="8d489-650">사용 하는 <xref:System.Diagnostics.EventLog.BeginInit%2A> 및 <xref:System.Diagnostics.EventLog.EndInit%2A> 메서드 컨트롤을 완전히 초기화 되기 전에 사용 되지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-650">Using the <xref:System.Diagnostics.EventLog.BeginInit%2A> and <xref:System.Diagnostics.EventLog.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-651">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-651">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-652">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-652">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLogEntryCollection Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.EventLogEntryCollection Entries" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.Entries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entries As EventLogEntryCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLogEntryCollection ^ Entries { System::Diagnostics::EventLogEntryCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Entries : System.Diagnostics.EventLogEntryCollection" Usage="System.Diagnostics.EventLog.Entries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The entries in the log.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogEntries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLogEntryCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d489-653">이벤트 로그의 내용을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-653">Gets the contents of the event log.</span></span></summary>
        <value><span data-ttu-id="8d489-654">이벤트 로그에서 항목을 유지하는 <see cref="T:System.Diagnostics.EventLogEntryCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-654">An <see cref="T:System.Diagnostics.EventLogEntryCollection" /> holding the entries in the event log.</span></span> <span data-ttu-id="8d489-655">각 항목은 <see cref="T:System.Diagnostics.EventLogEntry" /> 클래스의 인스턴스에 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-655">Each entry is associated with an instance of the <see cref="T:System.Diagnostics.EventLogEntry" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-656">사용 된 <xref:System.Diagnostics.EventLog.Entries%2A> 이벤트 로그에서 읽을 때 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-656">Use the <xref:System.Diagnostics.EventLog.Entries%2A> member when reading from the event log.</span></span>  
  
 <span data-ttu-id="8d489-657">항목을 수정 하거나 사용 하 여 로그에 쓸 수 없습니다 속성이 읽기 전용 이므로 <xref:System.Diagnostics.EventLog.Entries%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-657">Because the property is read-only, you cannot modify an entry or write to the log using <xref:System.Diagnostics.EventLog.Entries%2A>.</span></span> <span data-ttu-id="8d489-658">대신 지정는 <xref:System.Diagnostics.EventLog.Source%2A> 호출 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 새 로그 항목을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-658">Instead, specify a <xref:System.Diagnostics.EventLog.Source%2A> and call <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write a new log entry.</span></span> <span data-ttu-id="8d489-659">사용할 수 있습니다 <xref:System.Diagnostics.EventLog.Entries%2A> 이벤트 로그에 있는 항목의 수를 계산 하 여 각 보고 <xref:System.Diagnostics.EventLogEntry> 컬렉션에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-659">You can use <xref:System.Diagnostics.EventLog.Entries%2A> to count the number of entries in the event log, and view each <xref:System.Diagnostics.EventLogEntry> in the collection.</span></span> <span data-ttu-id="8d489-660">사용 하 여 인덱싱된 <xref:System.Diagnostics.EventLogEntryCollection.Item%2A> 와 같은 특정 항목에 대 한 정보를 검색 하는 멤버 <xref:System.Diagnostics.EventLogEntry.Message%2A>, <xref:System.Diagnostics.EventLogEntry.Category%2A>, <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>, 또는 <xref:System.Diagnostics.EventLogEntry.EntryType%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-660">Use the indexed <xref:System.Diagnostics.EventLogEntryCollection.Item%2A> member to retrieve information about a specific entry, such as <xref:System.Diagnostics.EventLogEntry.Message%2A>, <xref:System.Diagnostics.EventLogEntry.Category%2A>, <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>, or <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.</span></span>  
  
 <span data-ttu-id="8d489-661">지정 하는 데 필요한 것을 <xref:System.Diagnostics.EventLog.Source%2A> 로그에서 읽기만 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-661">It is not necessary to specify a <xref:System.Diagnostics.EventLog.Source%2A> when only reading from a log.</span></span> <span data-ttu-id="8d489-662">만 지정할 수 있습니다 합니다 <xref:System.Diagnostics.EventLog.Log%2A> 이름 및 <xref:System.Diagnostics.EventLog.MachineName%2A> (서버 컴퓨터 이름) 속성에 대 한는 <xref:System.Diagnostics.EventLog> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="8d489-662">You can specify only the <xref:System.Diagnostics.EventLog.Log%2A> name and <xref:System.Diagnostics.EventLog.MachineName%2A> (server computer name) properties for the <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="8d489-663">두 경우 모두는 <xref:System.Diagnostics.EventLog.Entries%2A> 멤버 항목의 이벤트 로그의 목록에 자동으로 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-663">In either case, the <xref:System.Diagnostics.EventLog.Entries%2A> member is automatically populated with the event log's list of entries.</span></span> <span data-ttu-id="8d489-664">개별 항목을 읽는이 목록의 항목에 대 한 적절 한 인덱스를 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-664">You can select the appropriate index for an item in this list to read individual entries.</span></span>  
  
 <span data-ttu-id="8d489-665">읽기 및 쓰기 로그 항목의 중요 한 차이 읽기 메서드를 명시적으로 호출 하는 데 필요한 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-665">An important distinction between reading and writing log entries is that it is not necessary to explicitly call a read method.</span></span> <span data-ttu-id="8d489-666">후는 <xref:System.Diagnostics.EventLog.Log%2A> 하 고 <xref:System.Diagnostics.EventLog.MachineName%2A> 지정 된는 <xref:System.Diagnostics.EventLog.Entries%2A> 속성이 자동으로 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-666">After the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> are specified, the <xref:System.Diagnostics.EventLog.Entries%2A> property is automatically populated.</span></span> <span data-ttu-id="8d489-667">값을 변경 하는 경우는 <xref:System.Diagnostics.EventLog.Log%2A> 또는 <xref:System.Diagnostics.EventLog.MachineName%2A> 속성을 <xref:System.Diagnostics.EventLog.Entries%2A> 속성 읽을 때 다음에 다시 채워야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-667">If you change the value of the <xref:System.Diagnostics.EventLog.Log%2A> or <xref:System.Diagnostics.EventLog.MachineName%2A> property, the <xref:System.Diagnostics.EventLog.Entries%2A> property is repopulated the next time you read it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-668">지정할 필요가 없습니다를 <xref:System.Diagnostics.EventLog.MachineName%2A> 로그에 연결 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-668">You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log.</span></span> <span data-ttu-id="8d489-669">지정 하지 않는 경우는 <xref:System.Diagnostics.EventLog.MachineName%2A>, 로컬 컴퓨터에 ".", 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-669">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer, ".", is assumed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-670">다음 예제에서는 이벤트 로그에 "MyNewLog" 로컬 컴퓨터의 항목을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-670">The following example reads entries in the event log, "MyNewLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.Entries Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Entries Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Entries Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Entries Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Entries Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Entries Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-671">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-671">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-672">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-672">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryCollection" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
      </Docs>
    </Member>
    <Member MemberName="EntryWritten">
      <MemberSignature Language="C#" Value="public event System.Diagnostics.EntryWrittenEventHandler EntryWritten;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Diagnostics.EntryWrittenEventHandler EntryWritten" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.EventLog.EntryWritten" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EntryWritten As EntryWrittenEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Diagnostics::EntryWrittenEventHandler ^ EntryWritten;" />
      <MemberSignature Language="F#" Value="member this.EntryWritten : System.Diagnostics.EntryWrittenEventHandler " Usage="member this.EntryWritten : System.Diagnostics.EntryWrittenEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Raised for each EventLog entry written.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogEntryWritten")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EntryWrittenEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d489-673">로컬 컴퓨터에 있는 이벤트 로그에 엔트리를 쓸 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-673">Occurs when an entry is written to an event log on the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-674">이벤트 알림을 받는 설정 해야 합니다 <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> 에 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-674">To get event notifications, you must set <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> to `true`.</span></span> <span data-ttu-id="8d489-675">로컬 컴퓨터의 엔트리를 쓸 경우에 이벤트 알림을 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-675">You can only receive event notifications when entries are written on the local computer.</span></span> <span data-ttu-id="8d489-676">원격 컴퓨터에서 작성 하는 항목에 대 한 알림을 받을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-676">You cannot receive notifications for entries written on remote computers.</span></span>  
  
 <span data-ttu-id="8d489-677"><xref:System.Diagnostics.EventLog.EntryWritten> 대리자를 만드는 경우 이벤트를 처리할 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-677">When you create an <xref:System.Diagnostics.EventLog.EntryWritten> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="8d489-678">이벤트를 이벤트 처리기와 연결하려면 대리자의 인스턴스를 해당 이벤트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-678">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="8d489-679">이벤트 처리기 대리자를 제거할 때까지 이벤트가 발생할 때마다 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-679">The event handler is called whenever the event occurs, until you remove the delegate.</span></span> <span data-ttu-id="8d489-680">대리자를 사용 하 여 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-680">For more information about handling events with delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8d489-681">시스템에 응답할 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 마지막 쓰기 이벤트가 6 초 이상 이전에 발생 하는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-681">The system responds to <xref:System.Diagnostics.EventLog.WriteEntry%2A> only if the last write event occurred at least six seconds previously.</span></span> <span data-ttu-id="8d489-682">즉,만 받게 하나 <xref:System.Diagnostics.EventLog.EntryWritten> 는 6 초 간격 내에서 이벤트 알림이 둘 이상의 이벤트 로그 변경 하는 경우에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-682">This implies you will only receive one <xref:System.Diagnostics.EventLog.EntryWritten> event notification within a six-second interval, even if more than one event log change occurs.</span></span> <span data-ttu-id="8d489-683">충분히 긴 대기 간격 (약 10 초)에 대 한 호출을 삽입 하면 <xref:System.Diagnostics.EventLog.WriteEntry%2A>, 이벤트 손실이 발생 하지는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-683">If you insert a sufficiently long sleep interval (around 10 seconds) between calls to <xref:System.Diagnostics.EventLog.WriteEntry%2A>, you are less likely to miss an event.</span></span> <span data-ttu-id="8d489-684">그러나 쓰기 이벤트가 더 자주 발생 하는 경우 다음 간격까지 이벤트 알림을 받지 못할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-684">However, if write events occur more frequently, you might not receive the event notification until the next interval.</span></span> <span data-ttu-id="8d489-685">일반적으로 누락 된 이벤트 알림은 분실 시, 없지만 지연 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-685">Typically, missed event notifications are not lost, but delayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-686">다음 예제에서는 이벤트를 기록 하는 항목을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-686">The following example handles an entry written event.</span></span>  
  
 [!code-cpp[Classic EventLog.EntryWritten Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EntryWritten Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EntryWritten Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EntryWritten Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EntryWritten Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EntryWritten Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-687">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-687">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-688">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-688">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.EnableRaisingEvents" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Exists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d489-689">지정한 로그가 있는지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-689">Determines whether the specified log exists.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (logName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ logName);" />
      <MemberSignature Language="F#" Value="static member Exists : string -&gt; bool" Usage="System.Diagnostics.EventLog.Exists logName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="8d489-690">검색할 로그의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-690">The name of the log to search for.</span></span> <span data-ttu-id="8d489-691">가능한 값은 다음과 같습니다. 애플리케이션, 보안, 시스템, 기타 애플리케이션 관련 로그(예: Active Directory와 연결된 로그) 또는 컴퓨터에 있는 모든 사용자 지정 로그를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-691">Possible values include: Application, Security, System, other application-specific logs (such as those associated with Active Directory), or any custom log on the computer.</span></span></param>
        <summary><span data-ttu-id="8d489-692">로컬 컴퓨터에 로그가 있는지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-692">Determines whether the log exists on the local computer.</span></span></summary>
        <returns><span data-ttu-id="8d489-693">로컬 컴퓨터에 로그가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-693"><see langword="true" /> if the log exists on the local computer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-694">이 메서드를 사용 하 여 로그를 로컬 컴퓨터에 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-694">Use this method to determine if a log exists on the local computer.</span></span> <span data-ttu-id="8d489-695">사용 하 여 로컬 컴퓨터에 소스가 있는지 여부를 확인 하려는 경우 <xref:System.Diagnostics.EventLog.SourceExists%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-695">If you want to determine whether a source exists on the local computer, use <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
 <span data-ttu-id="8d489-696">이 메서드는 레지스트리를 액세스, 하므로 적절 한 레지스트리 권한 로컬 컴퓨터에 있어야 쿼리에서 반환 하는 고, 그렇지 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-696">Because this method accesses the registry, you must have the appropriate registry permissions on the local computer; otherwise, the query returns `false`.</span></span>  
  
 <span data-ttu-id="8d489-697">동일한 컴퓨터에 새 로그에 기존 로그의 이름을 지정할 수 없습니다, 되므로이 메서드를 만들기 전에 사용 새 로그를 확인 된 `logName` 로컬 컴퓨터에 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-697">Because you cannot give a new log the name of an existing log on the same computer, use this method before creating a new log to determine if the specified `logName` already exists on the local computer.</span></span> <span data-ttu-id="8d489-698">`logName` 매개 변수는 대/소문자 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-698">The `logName` parameter is not case sensitive.</span></span>  
  
 <span data-ttu-id="8d489-699"><xref:System.Diagnostics.EventLog.Exists%2A> 가 `static` 메서드, 클래스 자체에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-699"><xref:System.Diagnostics.EventLog.Exists%2A> is a `static` method, so it can be called on the class itself.</span></span> <span data-ttu-id="8d489-700">인스턴스를 만들 필요는 없습니다 <xref:System.Diagnostics.EventLog> 호출할 <xref:System.Diagnostics.EventLog.Exists%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-700">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call <xref:System.Diagnostics.EventLog.Exists%2A>.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_Exists_1#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_Exists_1/CPP/eventlog_exists_1.cpp#1)]
 [!code-csharp[EventLog_Exists_1#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_Exists_1/CS/eventlog_exists_1.cs#1)]
 [!code-vb[EventLog_Exists_1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_Exists_1/VB/eventlog_exists_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-701">logName이 <see langword="null" />이거나 값이 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-701">The logName is <see langword="null" /> or the value is empty.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-702">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-702">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-703">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-703">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string logName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string logName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Exists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (logName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ logName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member Exists : string * string -&gt; bool" Usage="System.Diagnostics.EventLog.Exists (logName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="8d489-704">검색할 로그입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-704">The log for which to search.</span></span> <span data-ttu-id="8d489-705">가능한 값은 다음과 같습니다. 애플리케이션, 보안, 시스템, 기타 애플리케이션 관련 로그(예: Active Directory와 연결된 로그) 또는 컴퓨터에 있는 모든 사용자 지정 로그를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-705">Possible values include: Application, Security, System, other application-specific logs (such as those associated with Active Directory), or any custom log on the computer.</span></span></param>
        <param name="machineName"><span data-ttu-id="8d489-706">로그를 검색할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우 "."입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-706">The name of the computer on which to search for the log, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="8d489-707">지정한 컴퓨터에 로그가 있는지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-707">Determines whether the log exists on the specified computer.</span></span></summary>
        <returns><span data-ttu-id="8d489-708">지정한 컴퓨터에 로그가 있으면 <see langword="true" />이고, 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-708"><see langword="true" /> if the log exists on the specified computer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-709">이 메서드를 사용 하 여 로그를 원격 컴퓨터에 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-709">Use this method to determine if a log exists on a remote computer.</span></span> <span data-ttu-id="8d489-710">사용 하 여 원격 컴퓨터에 소스가 있는지 여부를 확인 하려는 경우 <xref:System.Diagnostics.EventLog.SourceExists%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-710">If you want to determine whether a source exists on a remote computer, use <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
 <span data-ttu-id="8d489-711">이 메서드는 레지스트리를 액세스, 하므로 적절 한 레지스트리 사용 권한을 지정 된 컴퓨터에 있어야 쿼리에서 반환 하는 고, 그렇지 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-711">Because this method accesses the registry, you must have the appropriate registry permissions on the specified computer; otherwise, the query returns `false`.</span></span>  
  
 <span data-ttu-id="8d489-712">동일한 컴퓨터에 새 로그에 기존 로그의 이름을 지정할 수 없습니다, 되므로이 메서드를 만들기 전에 사용 새 로그를 결정 한 경우 지정 된 `logName` 에서 지정한 서버에 이미 있습니다를 `machineName` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-712">Because you cannot give a new log the name of an existing log on the same computer, use this method before creating a new log to determine if one with the specified `logName` already exists on the server specified by the `machineName` parameter.</span></span> <span data-ttu-id="8d489-713">합니다 `logName` 고 `machineName` 매개 변수는 대/소문자 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-713">The `logName` and `machineName` parameters are not case sensitive.</span></span>  
  
 <span data-ttu-id="8d489-714"><xref:System.Diagnostics.EventLog.Exists%2A> 가 `static` 메서드, 클래스 자체에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-714"><xref:System.Diagnostics.EventLog.Exists%2A> is a `static` method, so it can be called on the class itself.</span></span> <span data-ttu-id="8d489-715">새 인스턴스를 만드는 데 필요한 아닙니다 <xref:System.Diagnostics.EventLog> 호출할 <xref:System.Diagnostics.EventLog.Exists%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-715">It is not necessary to create a new instance of <xref:System.Diagnostics.EventLog> to call <xref:System.Diagnostics.EventLog.Exists%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-716">잘못된 형식의 <paramref name="machineName" /> 매개 변수인 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-716">The <paramref name="machineName" /> parameter is an invalid format.</span></span> <span data-ttu-id="8d489-717">검색할 컴퓨터에 적절한 구문을 사용했는지 확인하십시오.</span><span class="sxs-lookup"><span data-stu-id="8d489-717">Make sure you have used proper syntax for the computer on which you are searching.</span></span>  
  
<span data-ttu-id="8d489-718">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-718">-or-</span></span> 
<span data-ttu-id="8d489-719"><paramref name="logName" />이 <see langword="null" />이거나 값이 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-719">The <paramref name="logName" /> is <see langword="null" /> or the value is empty.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-720">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-720">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-721">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-721">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEventLogs">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d489-722">이벤트 로그의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-722">Creates an array of the event logs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEventLogs">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.EventLog[] GetEventLogs ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.EventLog[] GetEventLogs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.GetEventLogs" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEventLogs () As EventLog()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::EventLog ^&gt; ^ GetEventLogs();" />
      <MemberSignature Language="F#" Value="static member GetEventLogs : unit -&gt; System.Diagnostics.EventLog[]" Usage="System.Diagnostics.EventLog.GetEventLogs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLog[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d489-723">로컬 컴퓨터에서 모든 이벤트 로그를 검색하여 목록을 포함하는 <see cref="T:System.Diagnostics.EventLog" /> 개체의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-723">Searches for all event logs on the local computer and creates an array of <see cref="T:System.Diagnostics.EventLog" /> objects that contain the list.</span></span></summary>
        <returns><span data-ttu-id="8d489-724">로컬 컴퓨터의 로그를 나타내는 <see cref="T:System.Diagnostics.EventLog" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-724">An array of type <see cref="T:System.Diagnostics.EventLog" /> that represents the logs on the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-725">배열을 <xref:System.Diagnostics.EventLog> 개체는 로컬 컴퓨터의 모든 이벤트 로그의 스냅숏을 때 호출 <xref:System.Diagnostics.EventLog.GetEventLogs%2A> 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-725">The array of <xref:System.Diagnostics.EventLog> objects is a snapshot of all event logs on the local computer when the call to <xref:System.Diagnostics.EventLog.GetEventLogs%2A> is made.</span></span> <span data-ttu-id="8d489-726">이 아니므로 동적 컬렉션을 삭제 또는 로그를 실시간으로 생성 되지는지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-726">This is not a dynamic collection, so it does not reflect the deletion or creation of logs in real time.</span></span> <span data-ttu-id="8d489-727">배열에서 로그를 읽거나 쓸 전에 있는지 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-727">You should verify that a log in the array exists before you read or write to it.</span></span> <span data-ttu-id="8d489-728">배열에는 일반적으로 3 개 이상의 로그 포함 됩니다. 응용 프로그램, 시스템 및 보안입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-728">The array usually includes at least three logs: Application, System, and Security.</span></span> <span data-ttu-id="8d489-729">로컬 컴퓨터의 사용자 지정 로그를 만든 경우를 배열에도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-729">If you created custom logs on the local computer, they will appear in the array as well.</span></span>  
  
 <span data-ttu-id="8d489-730">이벤트 로그 목록을 검색 하려면 적절 한 레지스트리 사용 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-730">To retrieve the list of event logs, you must have the appropriate registry permissions.</span></span> <span data-ttu-id="8d489-731">이러한 권한은 동일 하 게 호출 하는 데 필요한 <xref:System.Diagnostics.EventLog.Exists%2A> 고 <xref:System.Diagnostics.EventLog.SourceExists%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-731">These permissions are identical to those required to call <xref:System.Diagnostics.EventLog.Exists%2A> and <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-732">다음 예제에서는 로컬 컴퓨터에 정의 된 이벤트 로그를 열거 하 고 각 이벤트 로그에 대 한 구성 세부 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-732">The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="8d489-733">레지스트리에 대한 읽기 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-733">You do not have read access to the registry.</span></span>  
  
<span data-ttu-id="8d489-734">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-734">-or-</span></span> 
<span data-ttu-id="8d489-735">컴퓨터에 이벤트 로그 서비스가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-735">There is no event log service on the computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-736">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-736">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-737">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-737">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
      </Docs>
    </Member>
    <Member MemberName="GetEventLogs">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.EventLog[] GetEventLogs (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.EventLog[] GetEventLogs(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.GetEventLogs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEventLogs (machineName As String) As EventLog()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::EventLog ^&gt; ^ GetEventLogs(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetEventLogs : string -&gt; System.Diagnostics.EventLog[]" Usage="System.Diagnostics.EventLog.GetEventLogs machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLog[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName"><span data-ttu-id="8d489-738">이벤트 로그를 검색할 컴퓨터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-738">The computer on which to search for event logs.</span></span></param>
        <summary><span data-ttu-id="8d489-739">지정한 컴퓨터에서 모든 이벤트 로그를 검색하여 목록을 포함하는 <see cref="T:System.Diagnostics.EventLog" /> 개체의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-739">Searches for all event logs on the given computer and creates an array of <see cref="T:System.Diagnostics.EventLog" /> objects that contain the list.</span></span></summary>
        <returns><span data-ttu-id="8d489-740">지정한 컴퓨터의 로그를 나타내는 <see cref="T:System.Diagnostics.EventLog" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-740">An array of type <see cref="T:System.Diagnostics.EventLog" /> that represents the logs on the given computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-741">배열을 <xref:System.Diagnostics.EventLog> 개체는 지정 된 컴퓨터의 모든 이벤트 로그의 스냅숏을 합니다 `machineName` 매개 변수 때 호출 <xref:System.Diagnostics.EventLog.GetEventLogs%2A> 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-741">The array of <xref:System.Diagnostics.EventLog> objects is a snapshot of all event logs on the computer specified by the `machineName` parameter when the call to <xref:System.Diagnostics.EventLog.GetEventLogs%2A> is made.</span></span> <span data-ttu-id="8d489-742">이 아니므로 동적 컬렉션을 삭제 또는 로그를 실시간으로 생성 되지는지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-742">This is not a dynamic collection, so it does not reflect the deletion or creation of logs in real time.</span></span> <span data-ttu-id="8d489-743">배열에서 로그를 읽거나 쓸 전에 있는지 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-743">You should verify that a log in the array exists before you read or write to it.</span></span> <span data-ttu-id="8d489-744">배열에는 일반적으로 3 개 이상의 로그 포함 됩니다. 응용 프로그램, 시스템 및 보안입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-744">The array usually includes at least three logs: Application, System, and Security.</span></span> <span data-ttu-id="8d489-745">지정한 컴퓨터의 사용자 지정 로그를 만든 경우를 배열에도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-745">If you created custom logs on the specified computer, they will appear in the array as well.</span></span>  
  
 <span data-ttu-id="8d489-746"><xref:System.Diagnostics.EventLog.GetEventLogs%2A> `static` 메서드를 호출 될 수 있도록 합니다 <xref:System.Diagnostics.EventLog> 클래스 자체입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-746"><xref:System.Diagnostics.EventLog.GetEventLogs%2A> is a `static` method, so it can be called on the <xref:System.Diagnostics.EventLog> class itself.</span></span> <span data-ttu-id="8d489-747">인스턴스를 만들 필요는 없습니다를 <xref:System.Diagnostics.EventLog> 메서드를 호출 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-747">It is not necessary to create an instance of an <xref:System.Diagnostics.EventLog> object to make a call to the method.</span></span>  
  
 <span data-ttu-id="8d489-748">이벤트 로그 목록을 검색 하려면 적절 한 레지스트리 사용 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-748">To retrieve the list of event logs, you must have the appropriate registry permissions.</span></span> <span data-ttu-id="8d489-749">이러한 권한은 동일 하 게 호출 하는 데 필요한 <xref:System.Diagnostics.EventLog.Exists%2A> 고 <xref:System.Diagnostics.EventLog.SourceExists%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-749">These permissions are identical to those required to call <xref:System.Diagnostics.EventLog.Exists%2A> and <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-750">다음 예제에서는 "myServer" 컴퓨터에서 로그 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-750">The following example gets a list of logs on the computer "myServer".</span></span> <span data-ttu-id="8d489-751">그런 다음 각 로그의 이름을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-751">It then outputs the name of each log.</span></span>  
  
 [!code-cpp[Classic EventLog.GetEventLogs1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.GetEventLogs1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.GetEventLogs1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.GetEventLogs1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.GetEventLogs1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.GetEventLogs1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-752"><paramref name="machineName" /> 매개 변수가 잘못된 컴퓨터 이름인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-752">The <paramref name="machineName" /> parameter is an invalid computer name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-753">레지스트리에 대한 읽기 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-753">You do not have read access to the registry.</span></span>  
  
<span data-ttu-id="8d489-754">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-754">-or-</span></span> 
<span data-ttu-id="8d489-755">컴퓨터에 이벤트 로그 서비스가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-755">There is no event log service on the computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-756">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-756">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-757">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-757">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public string Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Log" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Log { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : string with get, set" Usage="System.Diagnostics.EventLog.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.LogConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Name of the log that is read and written.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.LogConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogLog")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.LogConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d489-758">읽거나 쓸 로그의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-758">Gets or sets the name of the log to read from or write to.</span></span></summary>
        <value><span data-ttu-id="8d489-759">로그의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-759">The name of the log.</span></span> <span data-ttu-id="8d489-760">이 이름에는 응용 프로그램, 시스템, 보안 또는 사용자 지정 로그 이름을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-760">This can be Application, System, Security, or a custom log name.</span></span> <span data-ttu-id="8d489-761">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-761">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-762">3 개의 로그 파일 서버에서 기본적으로 존재합니다. 응용 프로그램, 시스템 및 보안입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-762">Three log files exist by default on the server: Application, System, and Security.</span></span> <span data-ttu-id="8d489-763">응용 프로그램 및 서비스 응용 프로그램 로그 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-763">Applications and services use the Application log file.</span></span> <span data-ttu-id="8d489-764">장치 드라이버는 시스템 로그 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-764">Device drivers use the System log file.</span></span> <span data-ttu-id="8d489-765">시스템 감사를 켤 때 보안 로그에 성공 및 실패 감사 이벤트를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-765">The system generates success and failure audit events in the Security log when auditing is turned on.</span></span> <span data-ttu-id="8d489-766">설치 된 Windows 서버에서 Active Directory와 같은 다른 응용 프로그램이 있는 경우 다른 기본 로그 파일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-766">If you have other applications installed, like Active Directory on Windows servers, there might be other default log files.</span></span> <span data-ttu-id="8d489-767">또한 로컬 또는 원격 컴퓨터에서 사용자 지정 로그 파일을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-767">In addition, you can create custom log files on a local or remote computer.</span></span> <span data-ttu-id="8d489-768">사용자 지정 로그는 구성 요소는 기본 응용 프로그램 로그에 이벤트를 쓸 때 허용 된 것 보다 더 자세한 방식에서 엔트리를 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-768">Custom logs help organize your entries in a more detailed way than is allowed when your components write events to the default Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-769">로그 이름은 8 자로 제한 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-769">Log names are limited to eight characters.</span></span> <span data-ttu-id="8d489-770">시스템에 따라 MyLogSample1 MyLogSample2와 동일한 로그입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-770">According to the system, MyLogSample1 and MyLogSample2 are the same log.</span></span>  
  
 <span data-ttu-id="8d489-771">이벤트 로그에 쓸 수 없는 경우 지정 하는 데 충분 합니다 <xref:System.Diagnostics.EventLog.Log%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-771">If you write to an event log, it is not enough to specify the <xref:System.Diagnostics.EventLog.Log%2A> property.</span></span> <span data-ttu-id="8d489-772">연결 해야 합니다는 <xref:System.Diagnostics.EventLog.Source%2A> 특정 로그에 연결할 이벤트 로그 리소스를 사용 하 여 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-772">You must associate a <xref:System.Diagnostics.EventLog.Source%2A> property with your event log resource to connect it to a particular log.</span></span> <span data-ttu-id="8d489-773">지정 하는 데 필요한 것을 <xref:System.Diagnostics.EventLog.Source%2A> 로그를 이벤트 소스에서 읽기만 서버의 레지스트리에 이벤트 로그 리소스를 사용 하 여 연결 해야 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-773">It is not necessary to specify a <xref:System.Diagnostics.EventLog.Source%2A> when only reading from a log, but an event source must be associated with the event log resource in the server's registry.</span></span> <span data-ttu-id="8d489-774">만 지정할 수 있습니다 합니다 <xref:System.Diagnostics.EventLog.Log%2A> 이름 및 <xref:System.Diagnostics.EventLog.MachineName%2A> (서버 컴퓨터 이름)에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-774">You can specify only the <xref:System.Diagnostics.EventLog.Log%2A> name and <xref:System.Diagnostics.EventLog.MachineName%2A> (server computer name) to read from it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-775">지정할 필요가 없습니다를 <xref:System.Diagnostics.EventLog.MachineName%2A> 로그에 연결 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-775">You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log.</span></span> <span data-ttu-id="8d489-776">지정 하지 않으면 경우는 <xref:System.Diagnostics.EventLog.MachineName%2A>, 로컬 컴퓨터 (".") 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-776">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="8d489-777">경우는 <xref:System.Diagnostics.EventLog.Source%2A> 속성을 지정 하지 호출 <xref:System.Diagnostics.EventLog.Log%2A> 경우 빈 문자열을 반환 <xref:System.Diagnostics.EventLog.Log%2A> 명시적으로 설정 되지 않았습니다 (설정 하 여는 <xref:System.Diagnostics.EventLog.Log%2A> 속성 또는 생성자를 통해).</span><span class="sxs-lookup"><span data-stu-id="8d489-777">If the <xref:System.Diagnostics.EventLog.Source%2A> property has not been specified, a call to <xref:System.Diagnostics.EventLog.Log%2A> returns an empty string if <xref:System.Diagnostics.EventLog.Log%2A> has not been explicitly set (by setting the <xref:System.Diagnostics.EventLog.Log%2A> property, or through the constructor).</span></span> <span data-ttu-id="8d489-778">경우는 <xref:System.Diagnostics.EventLog.Source%2A> 가 지정 된 <xref:System.Diagnostics.EventLog.Log%2A> 는 소스가 등록 되어 로그의 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-778">If the <xref:System.Diagnostics.EventLog.Source%2A> has been specified, <xref:System.Diagnostics.EventLog.Log%2A> returns the name of the log to which that source was registered.</span></span>  
  
 <span data-ttu-id="8d489-779">만 원본 한 번에 하나의 로그에 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-779">A source can only be registered to one log at a time.</span></span> <span data-ttu-id="8d489-780">경우는 <xref:System.Diagnostics.EventLog.Source%2A> 인스턴스에 대 한 속성을 설정한 <xref:System.Diagnostics.EventLog>를 변경할 수 없습니다는 <xref:System.Diagnostics.EventLog.Log%2A> 속성에 대 한 <xref:System.Diagnostics.EventLog> 의 값을 변경 하지 않고 <xref:System.Diagnostics.EventLog.Source%2A> 호출 또는 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 첫 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-780">If the <xref:System.Diagnostics.EventLog.Source%2A> property was set for an instance of <xref:System.Diagnostics.EventLog>, you cannot change the <xref:System.Diagnostics.EventLog.Log%2A> property for that <xref:System.Diagnostics.EventLog> without changing the value of <xref:System.Diagnostics.EventLog.Source%2A> or calling <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> first.</span></span> <span data-ttu-id="8d489-781">변경 하는 경우는 <xref:System.Diagnostics.EventLog.Log%2A> 후에는 <xref:System.Diagnostics.EventLog.Source%2A> 속성이 설정 되어, 예외를 throw 하는 로그 항목을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-781">If you change the <xref:System.Diagnostics.EventLog.Log%2A> property after the <xref:System.Diagnostics.EventLog.Source%2A> property has been set, writing a log entry throws an exception.</span></span>  
  
 <span data-ttu-id="8d489-782">운영 체제 파일과 이벤트 로그를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-782">The operating system stores event logs as files.</span></span> <span data-ttu-id="8d489-783">사용 하는 경우 <xref:System.Diagnostics.EventLogInstaller> 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 새 이벤트 로그를 만들려면 연결된 된 파일은 지정된 된 컴퓨터에서 %SystemRoot%\System32\Config 디렉터리에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-783">When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="8d489-784">파일 이름은의 처음 8 개 문자를 추가 하 여 설정 됩니다는 <xref:System.Diagnostics.EventLog.Log%2A> ".evt" 파일 이름 확장명을 가진 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-784">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="8d489-785">사용 하 여 새 로그를 만들 수 없습니다는 <xref:System.Diagnostics.EventLog.Log%2A> 속성 (로그에 대 한 원본을 지정) 없이 단독으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-785">You cannot create a new log using the <xref:System.Diagnostics.EventLog.Log%2A> property alone (without specifying a source for the log).</span></span> <span data-ttu-id="8d489-786">호출할 수 있습니다 <xref:System.Diagnostics.EventLog.CreateEventSource%2A>새 로그 이름을 매개 변수로 전달 하 고, 다음 호출 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-786">You can call <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, passing in a new log name as a parameter, and then call <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>.</span></span> <span data-ttu-id="8d489-787">그러나 의도 일반적으로 만들기 (및 항목을 쓰기)를 새 응용 프로그램 관련 로그 또는 기존 로그에서 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-787">However, the intent is usually either to create (and write entries to) new application-specific logs, or to read from existing logs.</span></span>  
  
 <span data-ttu-id="8d489-788">경우는 <xref:System.Diagnostics.EventLog.Log%2A> 값이 변경 이벤트 로그가 닫힙니다 및 모든 이벤트 핸들이 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-788">If the <xref:System.Diagnostics.EventLog.Log%2A> value changes, the event log is closed and all event handles are released.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8d489-789">설정 하는 경우는 <xref:System.Diagnostics.EventLog.Log%2A> 존재 하지 않는 로그의 이름으로 속성 시스템에 연결 합니다 <xref:System.Diagnostics.EventLog> 응용 프로그램 로그에 경고가 나타나지는 않습니다 지정한 이외의 로그를 사용 하는 있지만 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-789">If you set the <xref:System.Diagnostics.EventLog.Log%2A> property to the name of a log that does not exist, the system attaches the <xref:System.Diagnostics.EventLog> to the Application log, but does not warn you that it is using a log other than the one you specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-790">다음 예제에서는 이벤트 로그에 "NewEventLog" 로컬 컴퓨터의 항목을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-790">The following example reads entries in the event log, "NewEventLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.Log Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Log Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Log Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Log Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Log Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Log Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-791">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-791">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-792">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-792">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="T:System.Diagnostics.EventLogEntryCollection" />
      </Docs>
    </Member>
    <Member MemberName="LogDisplayName">
      <MemberSignature Language="C#" Value="public string LogDisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogDisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.LogDisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogDisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogDisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogDisplayName : string" Usage="System.Diagnostics.EventLog.LogDisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d489-793">이벤트 로그 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-793">Gets the event log's friendly name.</span></span></summary>
        <value><span data-ttu-id="8d489-794">시스템의 이벤트 뷰어에서 이벤트 로그를 나타내는 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-794">A name that represents the event log in the system's event viewer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="8d489-795">Windows Vista 이상 버전에서는 사용자가 보안 로그에 액세스할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-795">In Windows Vista and later, users do not have permission to access the security log.</span></span> <span data-ttu-id="8d489-796">Windows Vista를 실행 하는 경우 나중에 사용자로 받을 수는 <xref:System.Security.SecurityException> 보안 로그에 이벤트에 대 한 표시 이름에 액세스 하려고 시도 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-796">If you are running Windows Vista or later as a user, you will get a <xref:System.Security.SecurityException> when you attempt to access the display name for an event in the security log.</span></span>  
>   
>  <span data-ttu-id="8d489-797">Windows Vista 이상에서는 UAC(사용자 계정 컨트롤)가 사용자 권한을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-797">In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="8d489-798">기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-798">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="8d489-799">기본적으로 표준 사용자 역할이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-799">By default, you are in the standard user role.</span></span> <span data-ttu-id="8d489-800">보안 로그에 액세스 하는 코드를 실행 하려면 먼저 높여야 권한을 표준 사용자에서 관리자에 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-800">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="8d489-801">응용 프로그램 아이콘을 마우스 오른쪽 단추로 클릭하고 관리자로 실행하도록 지정하여 응용 프로그램을 시작하면 이 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-801">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-802">다음 예제에서는 로컬 컴퓨터에 정의 된 이벤트 로그를 열거 하 고 표시 된 <xref:System.Diagnostics.EventLog.LogDisplayName%2A> 각 이벤트 로그에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-802">The following example enumerates the event logs defined on the local computer and displays the <xref:System.Diagnostics.EventLog.LogDisplayName%2A> for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-803">지정한 <see cref="P:System.Diagnostics.EventLog.Log" />가 이 컴퓨터의 레지스트리에 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-803">The specified <see cref="P:System.Diagnostics.EventLog.Log" /> does not exist in the registry for this computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-804">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-804">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-805">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-805">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="8d489-806">지정 된 레지스트리 키를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-806">for the ability to read the specified registry key.</span></span> <span data-ttu-id="8d489-807">연결 된 열거형: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="8d489-807">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="8d489-808">경우에 지정 된 레지스트리 키에 액세스할 수 있도록 원격 키 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-808">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="8d489-809">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="8d489-809">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="LogNameFromSourceName">
      <MemberSignature Language="C#" Value="public static string LogNameFromSourceName (string source, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LogNameFromSourceName(string source, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogNameFromSourceName (source As String, machineName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LogNameFromSourceName(System::String ^ source, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member LogNameFromSourceName : string * string -&gt; string" Usage="System.Diagnostics.EventLog.LogNameFromSourceName (source, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8d489-810">이벤트 원본의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-810">The name of the event source.</span></span></param>
        <param name="machineName"><span data-ttu-id="8d489-811">검색할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우 "."입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-811">The name of the computer on which to look, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="8d489-812">지정한 소스가 등록된 로그의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-812">Gets the name of the log to which the specified source is registered.</span></span></summary>
        <returns><span data-ttu-id="8d489-813">레지스트리에서 지정한 소스와 연결된 로그의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-813">The name of the log associated with the specified source in the registry.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-814">이벤트 원본을 이벤트 로그를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-814">The event source indicates what logs the event.</span></span> <span data-ttu-id="8d489-815">것이 응용 프로그램의 이름 또는 응용 프로그램의 하위 구성의 이름을 응용 프로그램이 큰 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-815">It is often the name of the application, or the name of a subcomponent of the application, if the application is large.</span></span> <span data-ttu-id="8d489-816">응용 프로그램 및 서비스 응용 프로그램 로그 나 사용자 지정 로그에 작성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-816">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="8d489-817">장치 드라이버는 시스템 로그에 작성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-817">Device drivers should write to the System log.</span></span>  
  
 <span data-ttu-id="8d489-818">수만 로그에 작성 한 한 번에는 새 원본으로 만든 시스템 이벤트 로그를 사용 하 여 응용 프로그램 항목의 유효한 소스로 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-818">When you create a new source, which can only write to one log at a time, the system registers your application with the event log as a valid source of entries.</span></span> <span data-ttu-id="8d489-819"><xref:System.Diagnostics.EventLog.Source%2A> 속성에는 모든 문자열이 될 수 있지만 이름을 컴퓨터의 다른 원본에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-819">The <xref:System.Diagnostics.EventLog.Source%2A> property can be any string, but the name cannot be used by other sources on the computer.</span></span> <span data-ttu-id="8d489-820">중복 된 경우 만들려는 시도가 <xref:System.Diagnostics.EventLog.Source%2A> 값 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-820">An attempt to create a duplicated <xref:System.Diagnostics.EventLog.Source%2A> value throws an exception.</span></span> <span data-ttu-id="8d489-821">그러나 단일 이벤트 로그를 기록 하는 다양 한 원본 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-821">However, a single event log can have many different sources writing to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-822">다음 예제에서는 로컬 컴퓨터에서 소스를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-822">The following example deletes a source from the local computer.</span></span> <span data-ttu-id="8d489-823">이 예제에서는 해당 원본에서 로그를 확인 하 고 로그를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-823">The example determines the log from its source, and then deletes the log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-824">둘 이상의 소스 이벤트 로그를 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-824">More than one source might write to an event log.</span></span> <span data-ttu-id="8d489-825">사용자 지정 로그를 삭제 하기 전에 해당 로그에 쓰는 다른 소스가 없는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-825">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-826">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-826">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-827">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-827">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Diagnostics.EventLog.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Name of the machine that this log get written to.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogMachineName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d489-828">이벤트를 읽거나 쓸 컴퓨터 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-828">Gets or sets the name of the computer on which to read or write events.</span></span></summary>
        <value><span data-ttu-id="8d489-829">이벤트 로그가 있는 서버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-829">The name of the server on which the event log resides.</span></span> <span data-ttu-id="8d489-830">기본값은 로컬 컴퓨터(".")입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-830">The default is the local computer (".").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-831">이벤트 로그에 작성 하는 경우 연결 해야 합니다는 <xref:System.Diagnostics.EventLog.Source%2A> 특정 로그에 연결할 이벤트 로그 개체를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-831">If you write to an event log, you must associate a <xref:System.Diagnostics.EventLog.Source%2A> with your event log object to connect it to a particular log.</span></span> <span data-ttu-id="8d489-832">지정 하는 데 필요한 것은 <xref:System.Diagnostics.EventLog.Source%2A> 만 로그에서 읽을 때 속성.</span><span class="sxs-lookup"><span data-stu-id="8d489-832">It is not necessary to specify the <xref:System.Diagnostics.EventLog.Source%2A> property when only reading from a log.</span></span> <span data-ttu-id="8d489-833">만 지정할 수 있습니다 합니다 <xref:System.Diagnostics.EventLog.Log%2A> 이름 및 <xref:System.Diagnostics.EventLog.MachineName%2A> (서버 컴퓨터 이름).</span><span class="sxs-lookup"><span data-stu-id="8d489-833">You can specify only the <xref:System.Diagnostics.EventLog.Log%2A> name and <xref:System.Diagnostics.EventLog.MachineName%2A> (server computer name).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-834">지정 하지 않아도 <xref:System.Diagnostics.EventLog.MachineName%2A> 로그에 연결 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-834">You need not specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log.</span></span> <span data-ttu-id="8d489-835">지정 하지 않으면 경우는 <xref:System.Diagnostics.EventLog.MachineName%2A>, 로컬 컴퓨터 (".") 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-835">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="8d489-836">만 원본 한 번에 하나의 로그에 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-836">A source can only be registered to one log at a time.</span></span> <span data-ttu-id="8d489-837">경우는 <xref:System.Diagnostics.EventLog.Source%2A> 인스턴스에 대 한 속성을 설정한 <xref:System.Diagnostics.EventLog>를 변경할 수 없습니다는 <xref:System.Diagnostics.EventLog.MachineName%2A> 속성에 대 한 <xref:System.Diagnostics.EventLog> 의 값을 변경 하지 않고 <xref:System.Diagnostics.EventLog.Source%2A> 호출 또는 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 첫 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-837">If the <xref:System.Diagnostics.EventLog.Source%2A> property was set for an instance of <xref:System.Diagnostics.EventLog>, you cannot change the <xref:System.Diagnostics.EventLog.MachineName%2A> property for that <xref:System.Diagnostics.EventLog> without changing the value of <xref:System.Diagnostics.EventLog.Source%2A> or calling <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> first.</span></span> <span data-ttu-id="8d489-838">변경 하는 경우는 <xref:System.Diagnostics.EventLog.MachineName%2A> 속성을 <xref:System.Diagnostics.EventLog> 핸들을 모두 닫고 로그 및 새 컴퓨터의 원본에 다시 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-838">If you change the <xref:System.Diagnostics.EventLog.MachineName%2A> property, the <xref:System.Diagnostics.EventLog> closes all handles and reattaches to the log and source on the new computer.</span></span>  
  
 <span data-ttu-id="8d489-839"><xref:System.Diagnostics.EventLog.MachineName%2A> 값에는 빈 문자열일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-839">The <xref:System.Diagnostics.EventLog.MachineName%2A> value cannot be an empty string.</span></span> <span data-ttu-id="8d489-840">명시적으로 설정 하지 않으면 기본값은 로컬 컴퓨터 (".").</span><span class="sxs-lookup"><span data-stu-id="8d489-840">If it is not explicitly set, it defaults to the local computer (".").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-841">다음 예제에서는 이벤트 로그에 "NewEventLog" 지정된 된 컴퓨터에서 항목을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-841">The following example reads entries in the event log, "NewEventLog", on a specified computer.</span></span>  
  
 [!code-cpp[Classic EventLog.MachineName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.MachineName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.MachineName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.MachineName Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.MachineName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.MachineName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-842">컴퓨터 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-842">The computer name is invalid.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-843">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-843">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-844">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-844">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.GetEventLogs" />
      </Docs>
    </Member>
    <Member MemberName="MaximumKilobytes">
      <MemberSignature Language="C#" Value="public long MaximumKilobytes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumKilobytes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.MaximumKilobytes" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumKilobytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumKilobytes { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumKilobytes : int64 with get, set" Usage="System.Diagnostics.EventLog.MaximumKilobytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d489-845">최대 이벤트 로그 크기(KB)를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-845">Gets or sets the maximum event log size in kilobytes.</span></span></summary>
        <value><span data-ttu-id="8d489-846">최대 이벤트 로그 크기(KB)입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-846">The maximum event log size in kilobytes.</span></span> <span data-ttu-id="8d489-847">기본값은 512로, 최대 파일 크기가 512KB임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-847">The default is 512, indicating a maximum file size of 512 kilobytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-848"><xref:System.Diagnostics.EventLog.MaximumKilobytes%2A> 속성 이벤트 로그 파일의 크기 제한을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-848">The <xref:System.Diagnostics.EventLog.MaximumKilobytes%2A> property represents the size limit of the event log file.</span></span> <span data-ttu-id="8d489-849">이벤트 로그 구성된 된 크기 제한에 도달 하는 경우 <xref:System.Diagnostics.EventLog.OverflowAction%2A> 값 새 엔트리가 삭제 여부 또는 이전 항목 덮어쓰는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-849">When the event log reaches the size limit, the configured <xref:System.Diagnostics.EventLog.OverflowAction%2A> value determines whether new entries are discarded, or whether new entries overwrite older entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-850">이 속성에는이 인스턴스가 나타내는 이벤트 로그에 대 한 구성 설정을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-850">This property represents a configuration setting for the event log represented by this instance.</span></span> <span data-ttu-id="8d489-851">이벤트 로그 최대 크기에 도달 하면이 속성 운영 체제 이벤트 로그에 등록 된 모든 이벤트 소스에서 작성 하는 새 항목을 처리 하는 방법을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-851">When the event log reaches its maximum size, this property specifies how the operating system handles new entries written by all event sources registered for the event log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-852">다음 예제에서는 로컬 컴퓨터에 정의 된 이벤트 로그를 열거 하 고 각 이벤트 로그에 대 한 구성 세부 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-852">The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8d489-853">지정된 값이 64보다 작거나 4194240보다 크거나 64의 짝수 배수가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-853">The specified value is less than 64, or greater than 4194240, or not an even multiple of 64.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-854"><see cref="P:System.Diagnostics.EventLog.Log" /> 값이 올바른 로그 이름이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-854">The <see cref="P:System.Diagnostics.EventLog.Log" /> value is not a valid log name.</span></span>  
  
<span data-ttu-id="8d489-855">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-855">-or-</span></span> 
<span data-ttu-id="8d489-856">이벤트 로그의 레지스트리 키를 대상 컴퓨터에서 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-856">The registry key for the event log could not be opened on the target computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-857">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-857">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-858">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-858">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.OverflowAction" />
        <altmember cref="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MinimumRetentionDays">
      <MemberSignature Language="C#" Value="public int MinimumRetentionDays { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumRetentionDays" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.MinimumRetentionDays" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinimumRetentionDays As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumRetentionDays { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimumRetentionDays : int" Usage="System.Diagnostics.EventLog.MinimumRetentionDays" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d489-859">이벤트 로그에 엔트리를 유지할 날짜 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-859">Gets the number of days to retain entries in the event log.</span></span></summary>
        <value><span data-ttu-id="8d489-860">이벤트 로그의 엔트리가 유지되는 날짜 수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-860">The number of days that entries in the event log are retained.</span></span> <span data-ttu-id="8d489-861">기본값은 7입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-861">The default value is 7.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-862">사용 된 <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 이벤트 로그에 대 한 현재 설정을 검사 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-862">Use the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> property to examine the current setting for an event log.</span></span> <span data-ttu-id="8d489-863">사용 하 여 <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> 이벤트 로그의 각 항목을 유지 해야 할 일의 최소 수를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-863">Use <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> to change the minimum number of days that each entry in the event log must be retained.</span></span>  
  
 <span data-ttu-id="8d489-864"><xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 값 이벤트 로그의 구성 된 오버플로 동작에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-864">The <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> value depends on the configured overflow behavior of the event log.</span></span> <span data-ttu-id="8d489-865">경우는 <xref:System.Diagnostics.OverflowAction> 이벤트 로그에 대 한 속성이로 설정 되어 <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>, 그런 다음 <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-865">If the <xref:System.Diagnostics.OverflowAction> property for an event log is set to <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>, then the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> value is 0.</span></span> <span data-ttu-id="8d489-866">경우는 <xref:System.Diagnostics.OverflowAction> 이벤트 로그에 대 한 속성이로 설정 되어 <xref:System.Diagnostics.OverflowAction.DoNotOverwrite>, 그런 다음 <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 값이-1입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-866">If the <xref:System.Diagnostics.OverflowAction> property for an event log is set to <xref:System.Diagnostics.OverflowAction.DoNotOverwrite>, then the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> value is -1.</span></span> <span data-ttu-id="8d489-867">경우는 <xref:System.Diagnostics.OverflowAction> 이벤트 로그에 대 한 속성이로 설정 되어 <xref:System.Diagnostics.OverflowAction.OverwriteOlder>, 그런 다음 <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 값이 0 보다 크면 및 이벤트 로그가 꽉 찬 경우 이벤트 로그 엔트리를 보존할 일 수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-867">If the <xref:System.Diagnostics.OverflowAction> property for an event log is set to <xref:System.Diagnostics.OverflowAction.OverwriteOlder>, then the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> value is greater than zero, and represents the number of days to retain event log entries when the event log is full.</span></span>  
  
 <span data-ttu-id="8d489-868">오버플로 동작을 이벤트 로그 크기 제한에 도달 하는 경우에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-868">The overflow behavior only occurs when an event log reaches its size limit.</span></span> <span data-ttu-id="8d489-869">경우는 <xref:System.Diagnostics.EventLog> 에 해당 <xref:System.Diagnostics.EventLog.OverflowAction%2A> 로 설정 <xref:System.Diagnostics.OverflowAction.OverwriteOlder>, 이벤트 로그 최대 크기에 도달 하 고 해당 기간을 초과 하는 항목을 대체할 수 있는 경우 새 항목만 기록 합니다 <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 기간입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-869">When an <xref:System.Diagnostics.EventLog> has its <xref:System.Diagnostics.EventLog.OverflowAction%2A> set to <xref:System.Diagnostics.OverflowAction.OverwriteOlder>, and the event log reaches its maximum size, then new entries are written only if they can replace entries whose age exceeds the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> period.</span></span> <span data-ttu-id="8d489-870">이벤트 항목을 유지 하 고 최소 기간에 대 한 이벤트 로그를 정기적으로 보관 하는 경우 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-870">Retaining event entries for a minimum period is appropriate when the event log is archived regularly.</span></span> <span data-ttu-id="8d489-871">그렇지 않으면 이벤트 로그에는 제한에 도달할 때 새 항목이 손실 위험이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-871">Otherwise, you risk losing new entries when the event log reaches its limit.</span></span> <span data-ttu-id="8d489-872">새 이벤트 정보를 잃지를 방지 하려면 특정 이벤트 로그에 대 한 보관 일정에 따라 이벤트에 대 한 최소 보존 기간을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-872">To avoid losing new event information, set the minimum retention days for events based on your archive schedule for a particular event log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-873">다음 예제에서는 로컬 컴퓨터에 정의 된 이벤트 로그를 열거 하 고 각 이벤트 로그에 대 한 구성 세부 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-873">The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-874">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-874">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-875">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-875">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.MaximumKilobytes" />
        <altmember cref="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
        <altmember cref="P:System.Diagnostics.EventLog.OverflowAction" />
      </Docs>
    </Member>
    <Member MemberName="ModifyOverflowPolicy">
      <MemberSignature Language="C#" Value="public void ModifyOverflowPolicy (System.Diagnostics.OverflowAction action, int retentionDays);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ModifyOverflowPolicy(valuetype System.Diagnostics.OverflowAction action, int32 retentionDays) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ModifyOverflowPolicy (action As OverflowAction, retentionDays As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyOverflowPolicy(System::Diagnostics::OverflowAction action, int retentionDays);" />
      <MemberSignature Language="F#" Value="member this.ModifyOverflowPolicy : System.Diagnostics.OverflowAction * int -&gt; unit" Usage="eventLog.ModifyOverflowPolicy (action, retentionDays)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Diagnostics.OverflowAction" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="retentionDays" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="8d489-876">이벤트 로그에 새 항목을 쓰기 위한 오버플로 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-876">The overflow behavior for writing new entries to the event log.</span></span></param>
        <param name="retentionDays"><span data-ttu-id="8d489-877">각 이벤트 로그 엔트리가 유지되는 최소 날짜 수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-877">The minimum number of days each event log entry is retained.</span></span> <span data-ttu-id="8d489-878">이 매개 변수는 <paramref name="action" />이 <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />로 설정되어 있는 경우에만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-878">This parameter is used only if <paramref name="action" /> is set to <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />.</span></span></param>
        <summary><span data-ttu-id="8d489-879">이벤트 로그가 최대 파일 크기에 도달할 때 새 엔트리를 쓰기 위한 구성된 동작을 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-879">Changes the configured behavior for writing new entries when the event log reaches its maximum file size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-880">이벤트 로그에 대 한 오버플로 동작을 새 항목은 최대 파일 크기에 도달 하는 로그를 쓸 수 있도록 하는 경우를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-880">The overflow behavior for an event log specifies what happens when new entries are to be written to a log that has reached its maximum file size.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-881">오버플로 동작을 이벤트 로그가 최대 파일 크기에 도달 하는 경우에 적용이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-881">The overflow behavior takes effect only when an event log reaches its maximum file size.</span></span> <span data-ttu-id="8d489-882">오버플로 동작을 새 항목 추가 이벤트 로그 엔트리를 수용할 수 있는 로그에 쓰기 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-882">The overflow behavior does not affect writing a new entry to a log that can accommodate additional event log entries.</span></span>  
  
 <span data-ttu-id="8d489-883"><xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> 메서드를 이벤트 로그의 오버플로 동작을 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-883">The <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> method configures the overflow behavior of an event log.</span></span> <span data-ttu-id="8d489-884"><xref:System.Diagnostics.EventLog> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-884"><xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="8d489-885">지정 된 이벤트 로그에 대 한이 메서드를 호출한 후는 <xref:System.Diagnostics.EventLog.Log%2A> 속성을 <xref:System.Diagnostics.EventLog.OverflowAction%2A> 및 <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 새로 구성된 된 오버플로 동작을 반영 하는 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-885">After calling this method for the event log specified by the <xref:System.Diagnostics.EventLog.Log%2A> property, the <xref:System.Diagnostics.EventLog.OverflowAction%2A> and <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> property values reflect the newly configured overflow behavior.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-886">이 속성에는이 인스턴스가 나타내는 이벤트 로그에 대 한 구성 설정을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-886">This property represents a configuration setting for the event log represented by this instance.</span></span> <span data-ttu-id="8d489-887">이벤트 로그 최대 크기에 도달 하면이 속성 운영 체제 이벤트 로그에 등록 된 모든 이벤트 소스에서 작성 하는 새 항목을 처리 하는 방법을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-887">When the event log reaches its maximum size, this property specifies how the operating system handles new entries written by all event sources registered for the event log.</span></span>  
  
 <span data-ttu-id="8d489-888">설정 합니다 `action` 매개 변수를 <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded> 새 항목이 가장 오래 된 엔트리를 덮어씀을 나타냅니다 때는 <xref:System.Diagnostics.EventLog> 최대 크기에 도달 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-888">Set the `action` parameter to <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded> to indicate that a new entry overwrites the oldest entry when the <xref:System.Diagnostics.EventLog> reaches its maximum size.</span></span> <span data-ttu-id="8d489-889">경우는 `action` 매개 변수는 설정 <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>, `retentionDays` 매개 변수 값은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-889">If the `action` parameter is set to <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>, the `retentionDays` parameter value is ignored.</span></span>  
  
 <span data-ttu-id="8d489-890">설정 합니다 `action` 매개 변수를 <xref:System.Diagnostics.OverflowAction.OverwriteOlder> 각각의 새 항목이 이전 항목을 덮어씀을 나타냅니다 때는 <xref:System.Diagnostics.EventLog> 최대 크기에 도달 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-890">Set the `action` parameter to <xref:System.Diagnostics.OverflowAction.OverwriteOlder> to indicate that each new entry overwrites older entries when the <xref:System.Diagnostics.EventLog> reaches its maximum size.</span></span> <span data-ttu-id="8d489-891">사용 하 여 로그의 이벤트를 유지 해야 할 일 수를 지정 합니다 `retentionDays` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-891">Specify the number of days that events must be retained in the log using the `retentionDays` parameter.</span></span> <span data-ttu-id="8d489-892">보존 범위 내에 기록 된 이벤트는 새 항목으로 덮어쓰지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-892">Events written within the retention range are not overwritten by new entries.</span></span>  
  
 <span data-ttu-id="8d489-893">설정 합니다 `action` 매개 변수를 <xref:System.Diagnostics.OverflowAction.DoNotOverwrite> 최대 로그 크기에 도달한 경우 새 이벤트를 삭제 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-893">Set the `action` parameter to <xref:System.Diagnostics.OverflowAction.DoNotOverwrite> to discard new events when the maximum log size is reached.</span></span> <span data-ttu-id="8d489-894">경우는 `action` 매개 변수는 설정 <xref:System.Diagnostics.OverflowAction.DoNotOverwrite>, `retentionDays` 매개 변수 값은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-894">If the `action` parameter is set to <xref:System.Diagnostics.OverflowAction.DoNotOverwrite>, the `retentionDays` parameter value is ignored.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8d489-895">오버플로 정책 설정을 <xref:System.Diagnostics.OverflowAction.DoNotOverwrite> 이벤트 로그가 꽉 찼을 때 새 엔트리는 삭제 하도록 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-895">Setting the overflow policy to <xref:System.Diagnostics.OverflowAction.DoNotOverwrite> specifies that new entries are discarded when the event log is full.</span></span> <span data-ttu-id="8d489-896">이 설정을 사용 하는 경우 이벤트 로그는 정기적으로 보관 되 고 해당 최대 크기 한도 도달 하지 않으려면 삭제를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-896">If you use this setting, ensure the event log is regularly archived and cleared to avoid reaching its maximum size limit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-897">다음 예제에서는 지정된 된 이벤트 로그에 대 한 구성 된 오버플로 정책을 표시 하 고 이벤트 로그에 대 한 새 오버플로 정책 설정을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-897">The following example displays the configured overflow policy for a specified event log, and allows the user to select a new overflow policy setting for the event log.</span></span>  
  
 [!code-cpp[EventLogProperties#3](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#3)]
 [!code-csharp[EventLogProperties#3](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#3)]
 [!code-vb[EventLogProperties#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8d489-898"><paramref name="action" />는 유효한 <see cref="P:System.Diagnostics.EventLog.OverflowAction" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-898"><paramref name="action" /> is not a valid <see cref="P:System.Diagnostics.EventLog.OverflowAction" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8d489-899"><paramref name="retentionDays" />가 0보다 작거나 365보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-899"><paramref name="retentionDays" /> is less than one, or larger than 365.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-900"><see cref="P:System.Diagnostics.EventLog.Log" /> 값이 올바른 로그 이름이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-900">The <see cref="P:System.Diagnostics.EventLog.Log" /> value is not a valid log name.</span></span>  
  
<span data-ttu-id="8d489-901">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-901">-or-</span></span> 
<span data-ttu-id="8d489-902">이벤트 로그의 레지스트리 키를 대상 컴퓨터에서 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-902">The registry key for the event log could not be opened on the target computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-903">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-903">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-904">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-904">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.OverflowAction" />
        <altmember cref="P:System.Diagnostics.EventLog.MaximumKilobytes" />
        <altmember cref="P:System.Diagnostics.EventLog.OverflowAction" />
        <altmember cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" />
      </Docs>
    </Member>
    <Member MemberName="OverflowAction">
      <MemberSignature Language="C#" Value="public System.Diagnostics.OverflowAction OverflowAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.OverflowAction OverflowAction" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.OverflowAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverflowAction As OverflowAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::OverflowAction OverflowAction { System::Diagnostics::OverflowAction get(); };" />
      <MemberSignature Language="F#" Value="member this.OverflowAction : System.Diagnostics.OverflowAction" Usage="System.Diagnostics.EventLog.OverflowAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.OverflowAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d489-905">이벤트 로그가 최대 파일 크기에 도달할 때 새 엔트리를 저장하기 위한 구성된 동작을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-905">Gets the configured behavior for storing new entries when the event log reaches its maximum log file size.</span></span></summary>
        <value><span data-ttu-id="8d489-906">이벤트 로그가 최대 로그 크기에 도달할 때 새 항목을 저장하기 위해 구성된 동작을 지정하는 <see cref="T:System.Diagnostics.OverflowAction" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-906">The <see cref="T:System.Diagnostics.OverflowAction" /> value that specifies the configured behavior for storing new entries when the event log reaches its maximum log size.</span></span> <span data-ttu-id="8d489-907">기본값은 <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-907">The default is <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-908">새 이벤트에 기록 될 이벤트 로그의 크기가 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-908">Event logs grow in size as new events are written to them.</span></span> <span data-ttu-id="8d489-909">각 이벤트 로그에는 구성 된 최대 크기 제한이 있습니다. <xref:System.Diagnostics.EventLog.MaximumKilobytes%2A> 속성 (킬로바이트) 이벤트 로그 파일 크기에 허용 된 최대 수를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-909">Each event log has a configured maximum size limit; the <xref:System.Diagnostics.EventLog.MaximumKilobytes%2A> property defines the maximum number of kilobytes allowed for the event log file size.</span></span>  
  
 <span data-ttu-id="8d489-910">사용 된 <xref:System.Diagnostics.EventLog.OverflowAction%2A> 해당 최대 크기는 이벤트 로그에 대해 구성 된 오버플로 동작을 검사 하는 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-910">Use the <xref:System.Diagnostics.EventLog.OverflowAction%2A> property value to examine the configured overflow behavior for an event log at its maximum size.</span></span> <span data-ttu-id="8d489-911">사용 된 <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> 이벤트 로그에 대 한 오버플로 동작을 변경 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-911">Use the <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> method to change the overflow behavior for an event log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-912">오버플로 동작을 이벤트 로그가 최대 파일 크기에 도달 하는 경우에 적용이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-912">The overflow behavior takes effect only when an event log reaches its maximum file size.</span></span> <span data-ttu-id="8d489-913">오버플로 동작을 새 항목 추가 이벤트 로그 엔트리를 수용할 수 있는 로그에 쓰기 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-913">The overflow behavior does not affect writing a new entry to a log that can accommodate additional event log entries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-914">다음 예제에서는 로컬 컴퓨터에 정의 된 이벤트 로그를 열거 하 고 각 이벤트 로그에 대 한 구성 세부 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-914">The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-915">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-915">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-916">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-916">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.OverflowAction" />
        <altmember cref="P:System.Diagnostics.EventLog.MaximumKilobytes" />
        <altmember cref="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
        <altmember cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" />
      </Docs>
    </Member>
    <Member MemberName="RegisterDisplayName">
      <MemberSignature Language="C#" Value="public void RegisterDisplayName (string resourceFile, long resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDisplayName(string resourceFile, int64 resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterDisplayName (resourceFile As String, resourceId As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterDisplayName(System::String ^ resourceFile, long resourceId);" />
      <MemberSignature Language="F#" Value="member this.RegisterDisplayName : string * int64 -&gt; unit" Usage="eventLog.RegisterDisplayName (resourceFile, resourceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceFile" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="resourceId" Type="System.Int64" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resourceFile"><span data-ttu-id="8d489-917">지역화된 리소스 파일의 완전하게 지정된 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-917">The fully specified path to a localized resource file.</span></span></param>
        <param name="resourceId"><span data-ttu-id="8d489-918">리소스 파일에 있는 지역화된 문자열을 인덱싱하는 리소스 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-918">The resource identifier that indexes a localized string within the resource file.</span></span></param>
        <summary><span data-ttu-id="8d489-919">서버 이벤트 뷰어에 표시되는 이벤트 로그의 지역화된 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-919">Specifies the localized name of the event log, which is displayed in the server Event Viewer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-920">사용 하 여 <xref:System.Diagnostics.EventLog.RegisterDisplayName%2A> 등록 하 고 사용자 지정 이벤트 로그에 대 한 이벤트 뷰어에서 지역화 된 이름을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-920">Use <xref:System.Diagnostics.EventLog.RegisterDisplayName%2A> to register and display a localized name in the Event Viewer for custom event logs.</span></span>  
  
 <span data-ttu-id="8d489-921">지정 된 리소스 식별자는 리소스 파일에 정의 된 지역화 된 문자열 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-921">The specified resource identifier must correspond to a localized string defined in the resource file.</span></span> <span data-ttu-id="8d489-922">이벤트 뷰어는 지역화 된 문자열 및 현재 문화권 설정을 사용 하 여 사용자 지정 이벤트 로그 이름을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-922">The Event Viewer displays the custom event log name using the localized string and the current culture settings.</span></span> <span data-ttu-id="8d489-923">예를 들어, 다양 한 문화권 리소스 파일에 대해 지역화 된 여러 이벤트 로그 이름을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-923">For example, you can define multiple event log names localized for different cultures in your resource file.</span></span> <span data-ttu-id="8d489-924">이벤트 뷰어에서 현재 사용자의 문화권 설정에 해당 하는 지역화 된 문자열을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-924">The Event Viewer displays the localized string corresponding to the culture settings of the current user.</span></span>  
  
 <span data-ttu-id="8d489-925">이벤트 뷰어 리소스 파일에서 지역화 된 문자열을 로드할 수 없습니다 또는 이벤트 로그에 대 한 표시 이름이 없는 등록 된 경우 다음 이벤트 뷰어에서 이벤트 로그 이름을 표시에 정의 된 경우 <xref:System.Diagnostics.EventLog.Log%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-925">If the Event Viewer cannot load the localized string from the resource file, or if no display name was registered for the event log, then the Event Viewer displays the event log name defined in <xref:System.Diagnostics.EventLog.Log%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-926">미리 정의 된 이벤트 로그에 대 한 표시 이름을 등록할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-926">You do not need to register a display name for the pre-defined event logs.</span></span> <span data-ttu-id="8d489-927">운영 체제는 응용 프로그램, 시스템 및 보안 이벤트 로그에 대 한 지역화 된 표시 이름을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-927">The operating system registers the localized display names for the Application, System, and Security event logs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-928">다음 예제에서는 라는 이벤트 소스가 있는지 여부를 결정 `SampleApplicationSource` 로컬 컴퓨터에 등록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-928">The following example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="8d489-929">이벤트 원본이 존재 하지 않는 경우이 예제에서는 소스의 메시지 리소스 파일을 설정 하 고 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-929">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="8d489-930">이 예제에서는 리소스 식별자 값을 사용 하 여 이벤트 로그의 지역화 된 표시 이름을 설정 하는 마지막으로, `DisplayNameMsgId` 및 리소스 파일 경로 `messageFile`입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-930">Finally, the example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="8d489-931">이 예제에서는 리소스 라이브러리 EventLogMsgs.dll 내장 다음 메시지 텍스트 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-931">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="8d489-932">메시지 텍스트 파일은 메시지 리소스 파일 생성 되는 원본.</span><span class="sxs-lookup"><span data-stu-id="8d489-932">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="8d489-933">메시지 텍스트 파일의 리소스 식별자와 범주, 이벤트 메시지 및 매개 변수 삽입 문자열에 대 한 텍스트를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-933">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span> <span data-ttu-id="8d489-934">특히, 리소스 식별자 5001 이벤트 로그의 지역화 된 이름에 대해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-934">Specifically, resource identifier 5001 is defined for the localized name of the event log.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-935"><see cref="P:System.Diagnostics.EventLog.Log" /> 값이 올바른 로그 이름이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-935">The <see cref="P:System.Diagnostics.EventLog.Log" /> value is not a valid log name.</span></span>  
  
<span data-ttu-id="8d489-936">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-936">-or-</span></span> 
<span data-ttu-id="8d489-937">이벤트 로그의 레지스트리 키를 대상 컴퓨터에서 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-937">The registry key for the event log could not be opened on the target computer.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d489-938"><paramref name="resourceFile" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-938"><paramref name="resourceFile" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-939">컴퓨터의 이벤트 로그 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-939">for administering event log information on the computer.</span></span> <span data-ttu-id="8d489-940">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="8d489-940">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.LogDisplayName" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Diagnostics.EventLog.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The application name that writes the log.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogSource")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d489-941">이벤트 로그에 쓸 때 등록하고 사용할 소스 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-941">Gets or sets the source name to register and use when writing to the event log.</span></span></summary>
        <value><span data-ttu-id="8d489-942">엔트리 소스로 이벤트 로그에 등록되는 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-942">The name registered with the event log as a source of entries.</span></span> <span data-ttu-id="8d489-943">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-943">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-944">이벤트 원본을 이벤트 로그를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-944">The event source indicates what logs the event.</span></span> <span data-ttu-id="8d489-945">것이 응용 프로그램의 이름 또는 응용 프로그램의 하위 구성의 이름을 응용 프로그램이 큰 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-945">It is often the name of the application, or the name of a subcomponent of the application, if the application is large.</span></span> <span data-ttu-id="8d489-946">응용 프로그램 및 서비스 응용 프로그램 로그 나 사용자 지정 로그에 작성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-946">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="8d489-947">장치 드라이버는 시스템 로그에 작성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-947">Device drivers should write to the System log.</span></span>  
  
 <span data-ttu-id="8d489-948">이벤트 로그에 작성 하는 경우 이벤트 소스를 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-948">You only need to specify an event source if you are writing to an event log.</span></span> <span data-ttu-id="8d489-949">이벤트 로그에 항목이 기록 되기 전에 이벤트의 유효한 소스로 이벤트 로그를 사용 하 여 이벤트 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-949">Before writing an entry to an event log, you must register the event source with the event log as a valid source of events.</span></span> <span data-ttu-id="8d489-950">시스템에 사용 하 여 로그 항목을 작성 하는 경우는 <xref:System.Diagnostics.EventLog.Source%2A> 출품작을 배치 하는 적절 한 로그를 검색할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-950">When you write a log entry, the system uses the <xref:System.Diagnostics.EventLog.Source%2A> property to find the appropriate log in which to place your entry.</span></span> <span data-ttu-id="8d489-951">읽는 경우 이벤트 로그를 지정 하거나 합니다 <xref:System.Diagnostics.EventLog.Source%2A>, 또는 <xref:System.Diagnostics.EventLog.Log%2A> 및 <xref:System.Diagnostics.EventLog.MachineName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-951">If you are reading the event log, you can either specify the <xref:System.Diagnostics.EventLog.Source%2A>, or a <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-952">지정할 필요가 없습니다를 <xref:System.Diagnostics.EventLog.MachineName%2A> 로컬 컴퓨터의 로그에 연결 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-952">You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log on the local computer.</span></span> <span data-ttu-id="8d489-953">지정 하지 않으면 경우는 <xref:System.Diagnostics.EventLog.MachineName%2A>, 로컬 컴퓨터 (".") 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-953">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="8d489-954">사용 하 여 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 및 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 이벤트 로그에 이벤트를 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-954">Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log.</span></span> <span data-ttu-id="8d489-955">이벤트를 작성 하는 이벤트 원본을 지정 해야 합니다. 만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-955">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="8d489-956">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-956">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-957">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-957">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-958">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-958">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-959">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-959">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-960">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-960">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-961">기존 이벤트 로그 또는 새 이벤트 로그의 이벤트 소스를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-961">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="8d489-962">새 이벤트 로그에 대 한 새 소스를 만들면 해당 로그에 대 한 소스를 등록 하는 시스템 있지만 첫 번째 항목에 기록할 때 까지는 로그가 만들어지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-962">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="8d489-963">소스는 로컬 컴퓨터에서 고유 해야 합니다. 새 원본 이름을 기존 원본 이름 또는 기존 이벤트 로그 이름과 일치할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-963">The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name.</span></span> <span data-ttu-id="8d489-964">각 소스에서는 한 번에 하나의 이벤트 로그에 쓸 수 있습니다. 그러나 응용 프로그램이 여러 이벤트 로그에 쓸 여러 원본을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-964">Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="8d489-965">예를 들어, 응용 프로그램에 다른 이벤트 로그 또는 다른 리소스 파일에 대해 구성 된 여러 소스가 필요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-965">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="8d489-966">변경 하는 경우는 <xref:System.Diagnostics.EventLog.Source%2A> 값을 <xref:System.Diagnostics.EventLog> 에 등록 되는 미디어가 닫히고 모든 이벤트 핸들이 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-966">If you change the <xref:System.Diagnostics.EventLog.Source%2A> value, the <xref:System.Diagnostics.EventLog> to which it is registered is closed and all event handles are released.</span></span>  
  
 <span data-ttu-id="8d489-967">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-967">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-968">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-968">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-969">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-969">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-970">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-970">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="8d489-971">기존 원본의 구성 세부 정보를 변경 하려면 소스를 삭제 하며 사용 하 여 새 구성을 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-971">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="8d489-972">다른 응용 프로그램이 나 구성 요소는 기존 소스를 사용 하는 경우 기존 소스를 삭제 하는 대신 업데이트 된 구성을 사용 하 여 새 소스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-972">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-973">원본 로그에 이미 매핑 되었습니다. 새 로그에 다시 매핑하려면을 하는 경우 변경 내용 적용 하려면 컴퓨터를 다시 시작 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-973">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-974">다음 예제에서는 소스를 만듭니다 `MySource` 아직 존재 하지 않는 경우 이벤트 로그에 엔트리를 씁니다 `MyNewLog`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-974">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.Source Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Source Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Source Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Source Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Source Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Source Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-975">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-975">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-976">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-976">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-977">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-977">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SourceExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d489-978">컴퓨터 레지스트리에서 지정한 이벤트 소스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-978">Searches a computer's registry for a given event source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SourceExists">
      <MemberSignature Language="C#" Value="public static bool SourceExists (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SourceExists(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SourceExists (source As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SourceExists(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member SourceExists : string -&gt; bool" Usage="System.Diagnostics.EventLog.SourceExists source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8d489-979">이벤트 원본의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-979">The name of the event source.</span></span></param>
        <summary><span data-ttu-id="8d489-980">이벤트 소스가 로컬 컴퓨터에 등록되었는지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-980">Determines whether an event source is registered on the local computer.</span></span></summary>
        <returns><span data-ttu-id="8d489-981">로컬 컴퓨터에 이벤트 소스가 등록되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-981"><see langword="true" /> if the event source is registered on the local computer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-982">이벤트 소스가 로컬 컴퓨터에 있는지 여부를 확인 하려면이 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-982">Use this method to determine whether an event source exists on the local computer.</span></span> <span data-ttu-id="8d489-983">사용 하 여 로컬 컴퓨터에 로그가 있는지 여부를 확인 하려는 경우 <xref:System.Diagnostics.EventLog.Exists%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-983">If you want to determine whether a log exists on the local computer, use <xref:System.Diagnostics.EventLog.Exists%2A>.</span></span>  
  
 <span data-ttu-id="8d489-984">이 메서드는 레지스트리를 액세스, 하므로 적절 한 레지스트리 권한 로컬 컴퓨터에 있어야 그렇지 않은 경우는 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-984">Because this method accesses the registry, you must have the appropriate registry permissions on the local computer; otherwise, a <xref:System.Security.SecurityException> will be thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-985">이벤트 원본 Windows Vista 이상 또는 Windows Server 2003을 검색 하려면 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-985">To search for an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="8d489-986">이 요구 사항에 대 한 이유 보안을 포함 한 모든 이벤트 로그, 이벤트 소스 고유한 지 확인 하려면 검색 해야입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-986">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="8d489-987">Windows Vista부터 사용자 권한이 없습니다 보안 로그에 액세스 하려면 따라서는 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-987">Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="8d489-988">Windows Vista부터 사용자 계정 컨트롤 (UAC)는 사용자의 권한을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-988">Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="8d489-989">기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-989">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="8d489-990">기본적으로 표준 사용자 역할이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-990">By default, you are in the standard user role.</span></span> <span data-ttu-id="8d489-991">성능 카운터에 액세스 하는 코드를 실행 하려면 먼저 높여야 권한을 표준 사용자에서 관리자에 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-991">To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="8d489-992">응용 프로그램 아이콘을 마우스 오른쪽 단추로 클릭하고 관리자로 실행하도록 지정하여 응용 프로그램을 시작하면 이 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-992">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-993">환경에서 실행 중인 서비스는 <xref:System.ServiceProcess.ServiceAccount.LocalSystem> 계정에이 메서드를 실행 하는 데 필요한 권한이 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-993">A service that is executing under the <xref:System.ServiceProcess.ServiceAccount.LocalSystem> account does not have the privileges required to execute this method.</span></span> <span data-ttu-id="8d489-994">솔루션은 이벤트 원본에 있는지 여부를 확인 하는 <xref:System.ServiceProcess.ServiceInstaller>에 없는, 설치 관리자에서 소스를 만드는 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-994">The solution is to check whether the event source exists in the <xref:System.ServiceProcess.ServiceInstaller>, and if it does not exist, to create the source in the installer.</span></span>  
  
 <span data-ttu-id="8d489-995">동일한 컴퓨터에서 기존 소스 이름을 새 소스를 지정할 수 없습니다, 되므로이 메서드를 사용 하기 전에 호출 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 하도록 원본에서 지정한 이름을 가진 `source` 로컬 컴퓨터에 존재 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-995">Because you cannot give a new source the name of an existing source on the same computer, use this method before attempting to call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to ensure that a source with the name specified by `source` does not already exist on the local computer.</span></span> <span data-ttu-id="8d489-996">`source` 매개 변수는 대/소문자 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-996">The `source` parameter is not case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-997">다음 예제에서는 소스를 만듭니다 `MySource` 아직 존재 하지 않는 경우 이벤트 로그에 엔트리를 씁니다 `MyNewLog`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-997">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.Source Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Source Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Source Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Source Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Source Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Source Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8d489-998"><paramref name="source" />를 찾을 수 없었지만 모든 또는 일부 이벤트 로그를 검색할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-998"><paramref name="source" /> was not found, but some or all of the event logs could not be searched.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-999">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-999">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1000">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1000">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
      </Docs>
    </Member>
    <Member MemberName="SourceExists">
      <MemberSignature Language="C#" Value="public static bool SourceExists (string source, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SourceExists(string source, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SourceExists (source As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SourceExists(System::String ^ source, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member SourceExists : string * string -&gt; bool" Usage="System.Diagnostics.EventLog.SourceExists (source, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8d489-1001">이벤트 원본의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1001">The name of the event source.</span></span></param>
        <param name="machineName"><span data-ttu-id="8d489-1002">검색할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우에는 "."입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1002">The name the computer on which to look, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="8d489-1003">이벤트 소스가 지정한 컴퓨터에 등록되었는지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1003">Determines whether an event source is registered on a specified computer.</span></span></summary>
        <returns><span data-ttu-id="8d489-1004">지정한 컴퓨터에 이벤트 원본이 등록되어 있으면 <see langword="true" />이고, 등록되지 않았으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1004"><see langword="true" /> if the event source is registered on the given computer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-1005">이 메서드를 사용 하 여 이벤트 소스에서 지정한 컴퓨터에 있는지 확인 합니다 `machineName` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1005">Use this method to determine whether an event source exists on the computer specified by the `machineName` parameter.</span></span> <span data-ttu-id="8d489-1006">로그를 사용 하 여 지정된 된 컴퓨터에 있는지 여부를 확인 하려는 경우 <xref:System.Diagnostics.EventLog.Exists%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1006">If you want to determine whether a log exists on the specified computer, use <xref:System.Diagnostics.EventLog.Exists%2A>.</span></span>  
  
 <span data-ttu-id="8d489-1007">이 메서드는 레지스트리를 액세스, 하므로 적절 한 레지스트리 사용 권한을 지정 된 서버에 있어야 그렇지 않은 경우는 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1007">Because this method accesses the registry, you must have the appropriate registry permissions on the given server; otherwise, a <xref:System.Security.SecurityException> will be thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1008">이벤트 원본 Windows Vista 이상 또는 Windows Server 2003을 검색 하려면 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1008">To search for an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="8d489-1009">이 요구 사항에 대 한 이유 보안을 포함 한 모든 이벤트 로그, 이벤트 소스 고유한 지 확인 하려면 검색 해야입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1009">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="8d489-1010">Windows Vista부터 사용자 권한이 없습니다 보안 로그에 액세스 하려면 따라서는 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1010">Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="8d489-1011">Windows Vista부터 사용자 계정 컨트롤 (UAC)는 사용자의 권한을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1011">Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="8d489-1012">기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1012">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="8d489-1013">기본적으로 표준 사용자 역할이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1013">By default, you are in the standard user role.</span></span> <span data-ttu-id="8d489-1014">성능 카운터에 액세스 하는 코드를 실행 하려면 먼저 높여야 권한을 표준 사용자에서 관리자에 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1014">To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="8d489-1015">응용 프로그램 아이콘을 마우스 오른쪽 단추로 클릭하고 관리자로 실행하도록 지정하여 응용 프로그램을 시작하면 이 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1015">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1016">환경에서 실행 중인 서비스는 <xref:System.ServiceProcess.ServiceAccount.LocalSystem> 계정에이 메서드를 실행 하는 데 필요한 권한이 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1016">A service that is executing under the <xref:System.ServiceProcess.ServiceAccount.LocalSystem> account does not have the privileges required to execute this method.</span></span> <span data-ttu-id="8d489-1017">솔루션은 이벤트 원본에 있는지 여부를 확인 하는 <xref:System.ServiceProcess.ServiceInstaller>에 없는, 설치 관리자에서 소스를 만드는 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1017">The solution is to check whether the event source exists in the <xref:System.ServiceProcess.ServiceInstaller>, and if it does not exist, to create the source in the installer.</span></span>  
  
 <span data-ttu-id="8d489-1018">동일한 컴퓨터에서 기존 소스 이름을 새 소스를 지정할 수 없습니다, 되므로이 메서드를 사용 하기 전에 호출 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 하도록 원본에서 지정한 이름을 가진 `source` 컴퓨터에 존재 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1018">Because you cannot give a new source the name of an existing source on the same computer, use this method before attempting to call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to ensure that a source with the name specified by `source` does not already exist on the computer.</span></span> <span data-ttu-id="8d489-1019">합니다 `source` 고 `machineName` 매개 변수는 대/소문자 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1019">The `source` and `machineName` parameters are not case sensitive.</span></span>  
  
 <span data-ttu-id="8d489-1020"><xref:System.Diagnostics.EventLog.SourceExists%2A> 가 `static` 메서드, 클래스 자체에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1020"><xref:System.Diagnostics.EventLog.SourceExists%2A> is a `static` method, so it can be called on the class itself.</span></span> <span data-ttu-id="8d489-1021">인스턴스를 만들 필요는 없습니다 <xref:System.Diagnostics.EventLog> 호출할 <xref:System.Diagnostics.EventLog.SourceExists%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1021">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-1022">다음 예제에서는 소스를 만듭니다 `MySource` 컴퓨터의 `MyServer`, 이벤트 로그에 항목을 쓰고 `MyNewLog`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1022">The following example creates the source `MySource` on the computer `MyServer`, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-1023"><paramref name="machineName" />이 잘못된 컴퓨터 이름인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1023"><paramref name="machineName" /> is an invalid computer name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8d489-1024"><paramref name="source" />를 찾을 수 없었지만 모든 또는 일부 이벤트 로그를 검색할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1024"><paramref name="source" /> was not found, but some or all of the event logs could not be searched.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-1025">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1025">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1026">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1026">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Diagnostics.EventLog.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("An object that synchronizes event handler calls.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogSynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d489-1027"><see cref="T:System.Diagnostics.EventLog" /> 항목 쓰기 이벤트의 결과로 발생하는 이벤트 처리기 호출을 마샬링하는 데 사용되는 개체를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1027">Gets or sets the object used to marshal the event handler calls issued as a result of an <see cref="T:System.Diagnostics.EventLog" /> entry written event.</span></span></summary>
        <value><span data-ttu-id="8d489-1028">이벤트 로그에서 <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> 이벤트의 결과로 발생하는 이벤트 처리기 호출을 마샬링하는 데 사용되는 <see cref="T:System.ComponentModel.ISynchronizeInvoke" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1028">The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> used to marshal event-handler calls issued as a result of an <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> event on the event log.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-1029">때 <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> 됩니다 `null`를 처리 하는 메서드가 <xref:System.Diagnostics.EventLog.EntryWritten> 이벤트 시스템 스레드 풀의 스레드에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1029">When <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> is `null`, methods handling the <xref:System.Diagnostics.EventLog.EntryWritten> event are called on a thread from the system thread pool.</span></span> <span data-ttu-id="8d489-1030">시스템 스레드 풀에 대 한 자세한 내용은 참조 하세요. <xref:System.Threading.ThreadPool>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1030">For more information on system thread pools, see <xref:System.Threading.ThreadPool>.</span></span>  
  
 <span data-ttu-id="8d489-1031">경우는 <xref:System.Diagnostics.EventLog.EntryWritten> visual Windows Forms 시스템 스레드 풀을 통해 구성 요소를 액세스 단추와 같은 구성 요소에서 작동 하지 않거나 예외가 발생할 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1031">When the <xref:System.Diagnostics.EventLog.EntryWritten> event is handled by a visual Windows Forms component, such as a button, accessing the component through the system thread pool might not work, or might result in an exception.</span></span> <span data-ttu-id="8d489-1032">설정 하 여이 문제를 방지 <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> Windows Forms 구성 요소에 메서드가 처리는 <xref:System.Diagnostics.EventLog.EntryWritten> 구성 요소를 만든 동일한 스레드에서 호출 되는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1032">Avoid this by setting <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> to a Windows Forms component, which causes the methods handling the <xref:System.Diagnostics.EventLog.EntryWritten> event to be called on the same thread on which the component was created.</span></span>  
  
 <span data-ttu-id="8d489-1033">경우는 <xref:System.Diagnostics.EventLog> 내에서 사용 되 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Windows Forms 디자이너에서 <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> 포함 하는 컨트롤에 자동으로 설정 됩니다는 <xref:System.Diagnostics.EventLog>.</span><span class="sxs-lookup"><span data-stu-id="8d489-1033">If the <xref:System.Diagnostics.EventLog> is used inside [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] in a Windows Forms designer, <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> is automatically set to the control containing the <xref:System.Diagnostics.EventLog>.</span></span> <span data-ttu-id="8d489-1034">예를 들어, 배치 하는 경우는 <xref:System.Diagnostics.EventLog> form1 디자이너에서 (에서 상속 하는 <xref:System.Windows.Forms.Form>)를 <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> 속성의 <xref:System.Diagnostics.EventLog> Form1의 인스턴스로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1034">For example, if you place an <xref:System.Diagnostics.EventLog> on a designer for Form1 (which inherits from <xref:System.Windows.Forms.Form>) the <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> property of <xref:System.Diagnostics.EventLog> is set to the instance of Form1.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-1035">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1035">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1036">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1036">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="E:System.Diagnostics.EventLog.EntryWritten" />
        <altmember cref="T:System.Threading.ThreadPool" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d489-1037">이벤트 로그에 엔트리를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1037">Writes an entry in the event log.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string -&gt; unit" Usage="eventLog.WriteEntry message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8d489-1038">이벤트 로그에 쓸 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1038">The string to write to the event log.</span></span></param>
        <summary><span data-ttu-id="8d489-1039">지정한 메시지 텍스트로 정보 형식 엔트리를 이벤트 로그에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1039">Writes an information type entry, with the given message text, to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-1040">이 메서드를 사용 하 여이 사용 하 여 연결 된 이벤트 로그에 정보 항목을 쓸 <xref:System.Diagnostics.EventLog> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="8d489-1040">Use this method to write an information entry to the event log associated with this <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="8d489-1041">다른 지정 하려는 경우 <xref:System.Diagnostics.EventLogEntryType>, 다른 오버 로드를 사용 하 여 <xref:System.Diagnostics.EventLog.WriteEntry%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1041">If you want to specify any other <xref:System.Diagnostics.EventLogEntryType>, use a different overload of <xref:System.Diagnostics.EventLog.WriteEntry%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1042">합니다 `message` 문자열 %를 포함할 수 없습니다*n*여기서 *n* 정수 값 (예: %1) 이므로 이벤트 뷰어를 삽입 문자열로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1042">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="8d489-1043">인터넷 프로토콜 버전 6 (IPv6) 주소가이 포함 될 수 있습니다 문자 시퀀스를 하므로 IPv6 주소를 포함 하는 이벤트 메시지를 기록할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1043">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="8d489-1044">설정 해야 합니다는 <xref:System.Diagnostics.EventLog.Source%2A> 속성에 <xref:System.Diagnostics.EventLog> 로그에 항목을 작성 하기 전에 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1044">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="8d489-1045">만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1045">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="8d489-1046">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1046">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-1047">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1047">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-1048">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1048">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-1049">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-1049">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-1050">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1050">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-1051">소스에 지정 하는 경우는 <xref:System.Diagnostics.EventLog.Source%2A> 속성 <xref:System.Diagnostics.EventLog> 인스턴스 구성 요소를 작성 하는 컴퓨터에 등록 되지 않았습니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 호출 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 하 고 소스를 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1051">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1052">지정 하지 않는 경우는 <xref:System.Diagnostics.EventLog.MachineName%2A> 에 대 한 사용자 <xref:System.Diagnostics.EventLog> 를 호출 하기 전에 인스턴스 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 또는 <xref:System.Diagnostics.EventLog.WriteEntry%2A>, 로컬 컴퓨터 (".") 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1052">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="8d489-1053">시스템을 등록 해야 하는 경우는 <xref:System.Diagnostics.EventLog.Source%2A> 호출을 통해 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 및 <xref:System.Diagnostics.EventLog.Log%2A> 속성에서 설정 되지 않은 프로그램 <xref:System.Diagnostics.EventLog> 경우 로그는 응용 프로그램 로그에 기본적입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1053">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1054">등록 프로세스 중 발생 한 오류에 의해 생성 된 대부분의 위에 나열 된 예외는 <xref:System.Diagnostics.EventLog.Source%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1054">Many of the exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="8d489-1055">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1055">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-1056"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 지역화할 수 있는 메시지 리소스 파일을 사용 하지 않는; 메서드는 이벤트 로그에 직접 지정된 된 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1056">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="8d489-1057">사용 된 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 지역화 된 메시지 리소스 파일을 사용 하 여 이벤트를 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1057">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="8d489-1058">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1058">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-1059">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1059">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-1060">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1060">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1061">원격 컴퓨터에 항목을 작성 하는 경우 메시지 (텍스트 문자열)은 원격 컴퓨터에.NET Framework 실행 하지 않는 경우 예상 되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1061">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1062">경우는 `message` NUL 문자를 포함 하는 매개 변수, 이벤트 로그에 메시지 NUL 문자에서 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1062">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-1063">다음 예제에서는 소스를 만듭니다 `MySource` 아직 존재 하지 않는 경우 이벤트 로그에 엔트리를 씁니다 `MyNewLog`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1063">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-1064"><see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1064">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="8d489-1065">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1065">-or-</span></span> 
<span data-ttu-id="8d489-1066">메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1066">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="8d489-1067">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1067">-or-</span></span> 
<span data-ttu-id="8d489-1068">소스가 이미 다른 이벤트 로그에 등록된 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1068">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="8d489-1069">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1069">-or-</span></span> 
<span data-ttu-id="8d489-1070">메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).</span><span class="sxs-lookup"><span data-stu-id="8d489-1070">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="8d489-1071">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1071">-or-</span></span> 
<span data-ttu-id="8d489-1072">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1072">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-1073">이벤트 로그의 레지스트리 키를 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1073">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-1074">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1074">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="8d489-1075">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1075">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-1076">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1076">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1077">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1077">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message, valuetype System.Diagnostics.EventLogEntryType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, type As EventLogEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::EventLogEntryType type);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.EventLogEntryType -&gt; unit" Usage="eventLog.WriteEntry (message, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8d489-1078">이벤트 로그에 쓸 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1078">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="8d489-1079"><see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1079">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <summary><span data-ttu-id="8d489-1080">지정한 메시지 텍스트로 오류, 경고, 정보, 성공 감사 또는 실패 감사 엔트리를 이벤트 로그에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1080">Writes an error, warning, information, success audit, or failure audit entry with the given message text to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-1081">이 메서드를 사용 하 여 지정 된 항목을 쓸 <xref:System.Diagnostics.EventLogEntryType> 이벤트 로그에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1081">Use this method to write an entry of a specified <xref:System.Diagnostics.EventLogEntryType> to the event log.</span></span> <span data-ttu-id="8d489-1082">`type` 아이콘 및 텍스트 로그의 이벤트 뷰어에서 형식 열에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1082">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1083">합니다 `message` 문자열 %를 포함할 수 없습니다*n*여기서 *n* 정수 값 (예: %1) 이므로 이벤트 뷰어를 삽입 문자열로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1083">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="8d489-1084">인터넷 프로토콜 버전 6 (IPv6) 주소가이 포함 될 수 있습니다 문자 시퀀스를 하므로 IPv6 주소를 포함 하는 이벤트 메시지를 기록할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1084">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="8d489-1085">설정 해야 합니다는 <xref:System.Diagnostics.EventLog.Source%2A> 속성에 <xref:System.Diagnostics.EventLog> 로그에 항목을 작성 하기 전에 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1085">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="8d489-1086">만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1086">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="8d489-1087">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1087">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-1088">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1088">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-1089">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1089">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-1090">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-1090">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-1091">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1091">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-1092">소스에 지정 하는 경우는 <xref:System.Diagnostics.EventLog.Source%2A> 속성 <xref:System.Diagnostics.EventLog> 인스턴스 구성 요소를 작성 하는 컴퓨터에 등록 되지 않았습니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 호출 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 하 고 소스를 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1092">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1093">지정 하지 않는 경우는 <xref:System.Diagnostics.EventLog.MachineName%2A> 에 대 한 사용자 <xref:System.Diagnostics.EventLog> 를 호출 하기 전에 인스턴스 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 또는 <xref:System.Diagnostics.EventLog.WriteEntry%2A>, 로컬 컴퓨터 (".") 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1093">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="8d489-1094">시스템을 등록 해야 하는 경우는 <xref:System.Diagnostics.EventLog.Source%2A> 호출을 통해 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 및 <xref:System.Diagnostics.EventLog.Log%2A> 속성에서 설정 되지 않은 프로그램 <xref:System.Diagnostics.EventLog> 경우 로그는 응용 프로그램 로그에 기본적입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1094">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1095">등록 프로세스 중 발생 한 오류에는 위에 나열 된 많은 예외가 생성 된 <xref:System.Diagnostics.EventLog.Source%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1095">Many exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="8d489-1096">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1096">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-1097"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 지역화할 수 있는 메시지 리소스 파일을 사용 하지 않는; 메서드는 이벤트 로그에 직접 지정된 된 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1097">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="8d489-1098">사용 된 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 지역화 된 메시지 리소스 파일을 사용 하 여 이벤트를 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1098">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="8d489-1099">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1099">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-1100">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1100">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-1101">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1101">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1102">원격 컴퓨터에 항목을 작성 하는 경우 메시지 (텍스트 문자열)은 원격 컴퓨터에.NET Framework 실행 하지 않는 경우 예상 되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1102">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1103">경우는 `message` NUL 문자를 포함 하는 매개 변수, 이벤트 로그에 메시지 NUL 문자에서 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1103">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-1104">다음 예제에서는 로컬 컴퓨터의 "MyNewLog" 이벤트 로그에 경고 엔트리를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1104">The following example writes a warning entry to an event log, "MyNewLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.WriteEntry2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.WriteEntry2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry2 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.WriteEntry2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-1105"><see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1105">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="8d489-1106">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1106">-or-</span></span> 
<span data-ttu-id="8d489-1107">메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1107">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="8d489-1108">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1108">-or-</span></span> 
<span data-ttu-id="8d489-1109">소스가 이미 다른 이벤트 로그에 등록된 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1109">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="8d489-1110">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1110">-or-</span></span> 
<span data-ttu-id="8d489-1111">메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).</span><span class="sxs-lookup"><span data-stu-id="8d489-1111">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="8d489-1112">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1112">-or-</span></span> 
<span data-ttu-id="8d489-1113">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1113">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8d489-1114"><paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1114"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-1115">이벤트 로그의 레지스트리 키를 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1115">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-1116">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1116">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="8d489-1117">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1117">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-1118">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1118">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1119">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1119">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8d489-1120">지정한 컴퓨터에 등록되는 응용 프로그램의 원본입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1120">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="8d489-1121">이벤트 로그에 쓸 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1121">The string to write to the event log.</span></span></param>
        <summary><span data-ttu-id="8d489-1122">특정 등록 이벤트 소스를 사용하여 정보 형식 엔트리를 지정된 메시지 텍스트로 이벤트 로그에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1122">Writes an information type entry with the given message text to the event log, using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-1123">이 메서드를 사용 하 여 적절 한 로그는 이벤트 원본으로 이미 등록 되어 있는 원본을 사용 하 여 이벤트 로그에 정보 항목을 쓸입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1123">Use this method to write an information entry to the event log, using a source that is already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="8d489-1124">다른 지정 하려는 경우 <xref:System.Diagnostics.EventLogEntryType>, 다른 오버 로드를 사용 하 여 <xref:System.Diagnostics.EventLog.WriteEntry%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1124">If you want to specify any other <xref:System.Diagnostics.EventLogEntryType>, use a different overload of <xref:System.Diagnostics.EventLog.WriteEntry%2A>.</span></span>  
  
 <span data-ttu-id="8d489-1125">만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1125">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="8d489-1126">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1126">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-1127">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1127">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-1128">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1128">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-1129">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-1129">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-1130">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1130">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-1131">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1131">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-1132"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 지역화할 수 있는 메시지 리소스 파일을 사용 하지 않는; 메서드는 이벤트 로그에 직접 지정된 된 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1132">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="8d489-1133">사용 된 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 지역화 된 메시지 리소스 파일을 사용 하 여 이벤트를 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1133">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="8d489-1134">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1134">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-1135">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1135">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-1136">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1136">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1137">경우는 `message` NUL 문자를 포함 하는 매개 변수, 이벤트 로그에 메시지 NUL 문자에서 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1137">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
>   
>  <span data-ttu-id="8d489-1138">합니다 `message` 문자열 %를 포함할 수 없습니다*n*여기서 *n* 정수 값 (예: %1) 이므로 이벤트 뷰어를 삽입 문자열로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1138">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="8d489-1139">인터넷 프로토콜 버전 6 (IPv6) 주소가이 포함 될 수 있습니다 문자 시퀀스를 하므로 IPv6 주소를 포함 하는 이벤트 메시지를 기록할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1139">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-1140">다음 예제에서는 소스를 만듭니다 `MySource` 아직 존재 하지 않는 경우 이벤트 로그에 엔트리를 씁니다 `MyNewLog`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1140">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.WriteEntry1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.WriteEntry1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.WriteEntry1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-1141"><paramref name="source" /> 값이 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1141">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="8d489-1142">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1142">-or-</span></span> 
<span data-ttu-id="8d489-1143"><paramref name="source" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1143">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8d489-1144">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1144">-or-</span></span> 
<span data-ttu-id="8d489-1145">메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).</span><span class="sxs-lookup"><span data-stu-id="8d489-1145">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="8d489-1146">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1146">-or-</span></span> 
<span data-ttu-id="8d489-1147">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1147">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-1148">이벤트 로그의 레지스트리 키를 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1148">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-1149">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1149">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="8d489-1150">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1150">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-1151">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1151">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1152">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1152">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, type As EventLogEntryType, eventID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.EventLogEntryType * int -&gt; unit" Usage="eventLog.WriteEntry (message, type, eventID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8d489-1153">이벤트 로그에 쓸 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1153">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="8d489-1154"><see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1154">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="8d489-1155">이벤트의 응용 프로그램별 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1155">The application-specific identifier for the event.</span></span></param>
        <summary><span data-ttu-id="8d489-1156">지정한 메시지 텍스트와 응용 프로그램 정의 이벤트 식별자로 엔트리를 이벤트 로그에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1156">Writes an entry with the given message text and application-defined event identifier to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-1157">이 메서드를 사용 하 여 응용 프로그램 정의 된 항목을 쓸 `eventID` 이벤트 로그에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1157">Use this method to write an entry with an application-defined `eventID` to the event log.</span></span> <span data-ttu-id="8d489-1158">`eventID` 소스와 함께 이벤트 고유 하 게 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1158">The `eventID` together with the source uniquely identify an event.</span></span> <span data-ttu-id="8d489-1159">각 응용 프로그램은 번호가 매겨진된 자체 이벤트 및 매핑되는 설명 문자열을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1159">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="8d489-1160">이벤트 뷰어 사용자 문제가 무엇 인지 이해 하 고 수행할 작업을 제안 하는 데 다음 문자열 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1160">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1161">합니다 `message` 문자열 %를 포함할 수 없습니다*n*여기서 *n* 정수 값 (예: %1) 이므로 이벤트 뷰어를 삽입 문자열로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1161">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="8d489-1162">인터넷 프로토콜 버전 6 (IPv6) 주소가이 포함 될 수 있습니다 문자 시퀀스를 하므로 IPv6 주소를 포함 하는 이벤트 메시지를 기록할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1162">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="8d489-1163">이벤트 식별자 외에도 지정할 수 있습니다는 <xref:System.Diagnostics.EventLogEntryType> 이벤트 로그에 쓰고 이벤트에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1163">In addition to the event identifier, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="8d489-1164">`type` 아이콘 및 텍스트 로그의 이벤트 뷰어에서 형식 열에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1164">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="8d489-1165">이 매개 변수는 오류, 경고, 정보, 성공 감사 또는 실패 감사 이벤트 유형 인지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1165">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="8d489-1166">설정 해야 합니다는 <xref:System.Diagnostics.EventLog.Source%2A> 속성에 <xref:System.Diagnostics.EventLog> 로그에 항목을 작성 하기 전에 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1166">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="8d489-1167">만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1167">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="8d489-1168">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1168">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-1169">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1169">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-1170">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1170">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-1171">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-1171">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-1172">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1172">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-1173">소스에 지정 하는 경우는 <xref:System.Diagnostics.EventLog.Source%2A> 속성 <xref:System.Diagnostics.EventLog> 인스턴스 구성 요소를 작성 하는 컴퓨터에 등록 되지 않았습니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 호출 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 하 고 소스를 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1173">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1174">지정 하지 않는 경우는 <xref:System.Diagnostics.EventLog.MachineName%2A> 에 대 한 사용자 <xref:System.Diagnostics.EventLog> 를 호출 하기 전에 인스턴스 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 또는 <xref:System.Diagnostics.EventLog.WriteEntry%2A>, 로컬 컴퓨터 (".") 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1174">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="8d489-1175">시스템을 등록 해야 하는 경우는 <xref:System.Diagnostics.EventLog.Source%2A> 호출을 통해 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 및 <xref:System.Diagnostics.EventLog.Log%2A> 속성에서 설정 되지 않은 프로그램 <xref:System.Diagnostics.EventLog> 경우 로그는 응용 프로그램 로그에 기본적입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1175">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1176">등록 프로세스 중 발생 한 오류에는 위에 나열 된 많은 예외가 생성 된 <xref:System.Diagnostics.EventLog.Source%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1176">Many exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="8d489-1177">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1177">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-1178"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 지역화할 수 있는 메시지 리소스 파일을 사용 하지 않는; 메서드는 이벤트 로그에 직접 지정된 된 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1178">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="8d489-1179">사용 된 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 지역화 된 메시지 리소스 파일을 사용 하 여 이벤트를 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1179">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="8d489-1180">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1180">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-1181">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1181">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-1182">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1182">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1183">원격 컴퓨터에 항목을 작성 하는 경우 메시지 (텍스트 문자열)은 원격 컴퓨터에.NET Framework 실행 하지 않는 경우 예상 되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1183">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1184">경우는 `message` NUL 문자를 포함 하는 매개 변수, 이벤트 로그에 메시지 NUL 문자에서 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1184">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_1_3#3](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CPP/eventlog_writeentry_1_3.cpp#3)]
 [!code-csharp[EventLog_WriteEntry_1_3#3](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CS/eventlog_writeentry_1_3.cs#3)]
 [!code-vb[EventLog_WriteEntry_1_3#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_1_3/VB/eventlog_writeentry_1_3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-1185"><see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1185">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="8d489-1186">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1186">-or-</span></span> 
<span data-ttu-id="8d489-1187">메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1187">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="8d489-1188">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1188">-or-</span></span> 
<span data-ttu-id="8d489-1189">소스가 이미 다른 이벤트 로그에 등록된 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1189">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="8d489-1190">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1190">-or-</span></span> 
 <span data-ttu-id="8d489-1191"><paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1191"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="8d489-1192">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1192">-or-</span></span> 
<span data-ttu-id="8d489-1193">메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).</span><span class="sxs-lookup"><span data-stu-id="8d489-1193">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="8d489-1194">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1194">-or-</span></span> 
<span data-ttu-id="8d489-1195">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1195">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-1196">이벤트 로그의 레지스트리 키를 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1196">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8d489-1197"><paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1197"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-1198">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1198">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="8d489-1199">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1199">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-1200">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1200">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1201">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1201">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message, valuetype System.Diagnostics.EventLogEntryType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String, type As EventLogEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message, System::Diagnostics::EventLogEntryType type);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string * System.Diagnostics.EventLogEntryType -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8d489-1202">지정한 컴퓨터에 등록되는 응용 프로그램의 원본입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1202">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="8d489-1203">이벤트 로그에 쓸 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1203">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="8d489-1204"><see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1204">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <summary><span data-ttu-id="8d489-1205">특정 등록 이벤트 소스를 사용하여 지정된 메시지 텍스트로 오류, 경고, 정보, 성공 감사 또는 실패 감사 엔트리를 이벤트 로그에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1205">Writes an error, warning, information, success audit, or failure audit entry with the given message text to the event log, using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-1206">이 메서드를 사용 하 여 지정 된 항목을 쓸 <xref:System.Diagnostics.EventLogEntryType> 적절 한 로그 이벤트 소스로 이벤트 로그에 소스를 이미 사용 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1206">Use this method to write an entry of a specified <xref:System.Diagnostics.EventLogEntryType> to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="8d489-1207">`type` 아이콘 및 텍스트 로그의 이벤트 뷰어에서 형식 열에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1207">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1208">합니다 `message` 문자열 %를 포함할 수 없습니다*n*여기서 *n* 정수 값 (예: %1) 이므로 이벤트 뷰어를 삽입 문자열로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1208">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="8d489-1209">인터넷 프로토콜 버전 6 (IPv6) 주소가이 포함 될 수 있습니다 문자 시퀀스를 하므로 IPv6 주소를 포함 하는 이벤트 메시지를 기록할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1209">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="8d489-1210">만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1210">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="8d489-1211">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1211">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-1212">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1212">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-1213">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1213">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-1214">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-1214">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-1215">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1215">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-1216">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1216">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-1217"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 지역화할 수 있는 메시지 리소스 파일을 사용 하지 않는; 메서드는 이벤트 로그에 직접 지정된 된 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1217">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="8d489-1218">사용 된 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 지역화 된 메시지 리소스 파일을 사용 하 여 이벤트를 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1218">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="8d489-1219">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1219">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-1220">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1220">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-1221">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1221">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1222">경우는 `message` NUL 문자를 포함 하는 매개 변수, 이벤트 로그에 메시지 NUL 문자에서 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1222">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-1223">다음 예제에서는 로컬 컴퓨터의 "MyNewLog" 이벤트 로그에 경고 엔트리를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1223">The following example writes a warning entry to an event log, "MyNewLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.WriteEntry3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.WriteEntry3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry3 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.WriteEntry3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-1224"><paramref name="source" /> 값이 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1224">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="8d489-1225">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1225">-or-</span></span> 
<span data-ttu-id="8d489-1226"><paramref name="source" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1226">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8d489-1227">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1227">-or-</span></span> 
<span data-ttu-id="8d489-1228">메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).</span><span class="sxs-lookup"><span data-stu-id="8d489-1228">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="8d489-1229">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1229">-or-</span></span> 
<span data-ttu-id="8d489-1230">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1230">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-1231">이벤트 로그의 레지스트리 키를 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1231">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8d489-1232"><paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1232"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-1233">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1233">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="8d489-1234">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1234">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-1235">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1235">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1236">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1236">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID, short category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID, int16 category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, type As EventLogEntryType, eventID As Integer, category As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID, short category);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.EventLogEntryType * int * int16 -&gt; unit" Usage="eventLog.WriteEntry (message, type, eventID, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
        <Parameter Name="category" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8d489-1237">이벤트 로그에 쓸 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1237">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="8d489-1238"><see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1238">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="8d489-1239">이벤트의 응용 프로그램별 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1239">The application-specific identifier for the event.</span></span></param>
        <param name="category"><span data-ttu-id="8d489-1240">메시지와 연결된 응용 프로그램별 하위 범주입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1240">The application-specific subcategory associated with the message.</span></span></param>
        <summary><span data-ttu-id="8d489-1241">지정한 메시지 텍스트, 응용 프로그램 정의 이벤트 식별자 및 응용 프로그램 정의 범주로 엔트리를 이벤트 로그에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1241">Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-1242">이 메서드를 사용 하 여 응용 프로그램 정의 된 항목을 쓸 `category` 이벤트 로그에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1242">Use this method to write an entry with an application-defined `category` to the event log.</span></span> <span data-ttu-id="8d489-1243">이벤트 뷰어에서 이벤트 소스를 기록한 이벤트를 필터링 하려면 범주를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1243">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="8d489-1244">이벤트 뷰어를 숫자 값으로 범주를 표시 하거나 지역화 된 범주 문자열을 표시 하는 범주 리소스 식별자로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1244">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1245">`category` 매개 변수는 양수 값 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1245">The `category` parameter should be a positive value.</span></span> <span data-ttu-id="8d489-1246">부정 범주 값 뷰어를 이벤트 양의 보수로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1246">Negative category values appear as a complementary positive number in the Event Viewer.</span></span> <span data-ttu-id="8d489-1247">예를 들어를-10 65,526, 65,535로-1로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1247">For example, a -10 appears as 65,526, a -1 as 65,535.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1248">합니다 `message` 문자열 %를 포함할 수 없습니다*n*여기서 *n* 정수 값 (예: %1) 이므로 이벤트 뷰어를 삽입 문자열로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1248">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="8d489-1249">인터넷 프로토콜 버전 6 (IPv6) 주소가이 포함 될 수 있습니다 문자 시퀀스를 하므로 IPv6 주소를 포함 하는 이벤트 메시지를 기록할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1249">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="8d489-1250">이벤트 뷰어에서 지역화 된 범주 문자열을 표시할 범주 리소스 파일을 구성 하 고 설정한 이벤트 소스를 사용 해야 합니다는 `category` 범주 리소스 파일의 리소스 식별자로.</span><span class="sxs-lookup"><span data-stu-id="8d489-1250">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the `category` to a resource identifier in the category resource file.</span></span> <span data-ttu-id="8d489-1251">구성된 범주 리소스 파일 또는 지정 된 이벤트 소스에 없는 경우 `category` 이벤트 뷰어에서 해당 항목에 대해 숫자 범주 값을 표시 하는 다음 범주 리소스 파일에서 문자열을 인덱싱하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1251">If the event source does not have a configured category resource file, or the specified `category` does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="8d489-1252">범주 리소스 파일 리소스 파일에서 범주 문자열의 수와 함께 구성를 사용 하 여 <xref:System.Diagnostics.EventLogInstaller> 또는 <xref:System.Diagnostics.EventSourceCreationData> 클래스.</span><span class="sxs-lookup"><span data-stu-id="8d489-1252">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="8d489-1253">범주와 함께 이벤트 로그에 쓰고 이벤트에 대 한 이벤트 식별자를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1253">In addition to the category, you can specify an event identifier for the event being written to the event log.</span></span> <span data-ttu-id="8d489-1254">이벤트 소스와 함께 이벤트 식별자, 이벤트를 고유 하 게 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1254">Event identifiers, along with the event source, uniquely identify an event.</span></span> <span data-ttu-id="8d489-1255">각 응용 프로그램은 번호가 매겨진된 자체 이벤트 및 매핑되는 설명 문자열을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1255">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="8d489-1256">이벤트 뷰어 사용자 문제가 무엇 인지 이해 하 고 수행할 작업을 제안 하는 데 다음 문자열 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1256">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
 <span data-ttu-id="8d489-1257">마지막으로 지정할 수는 <xref:System.Diagnostics.EventLogEntryType> 이벤트 로그에 쓰고 이벤트에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1257">Finally, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="8d489-1258">`type` 아이콘 및 텍스트 로그의 이벤트 뷰어에서 형식 열에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1258">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="8d489-1259">이 매개 변수는 오류, 경고, 정보, 성공 감사 또는 실패 감사 이벤트 유형 인지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1259">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="8d489-1260">설정 해야 합니다는 <xref:System.Diagnostics.EventLog.Source%2A> 속성에 <xref:System.Diagnostics.EventLog> 로그에 항목을 작성 하기 전에 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1260">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="8d489-1261">만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1261">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="8d489-1262">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1262">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-1263">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1263">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-1264">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1264">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-1265">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-1265">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-1266">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1266">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-1267">소스에 지정 하는 경우는 <xref:System.Diagnostics.EventLog.Source%2A> 속성 <xref:System.Diagnostics.EventLog> 인스턴스 구성 요소를 작성 하는 컴퓨터에 등록 되지 않았습니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 호출 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 하 고 소스를 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1267">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1268">지정 하지 않는 경우는 <xref:System.Diagnostics.EventLog.MachineName%2A> 에 대 한 사용자 <xref:System.Diagnostics.EventLog> 를 호출 하기 전에 인스턴스 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 또는 <xref:System.Diagnostics.EventLog.WriteEntry%2A>, 로컬 컴퓨터 (".") 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1268">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="8d489-1269">시스템을 등록 해야 하는 경우는 <xref:System.Diagnostics.EventLog.Source%2A> 호출을 통해 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 및 <xref:System.Diagnostics.EventLog.Log%2A> 속성에서 설정 되지 않은 프로그램 <xref:System.Diagnostics.EventLog> 경우 로그는 응용 프로그램 로그에 기본적입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1269">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1270">등록 프로세스 중 발생 한 오류에는 위에 나열 된 많은 예외가 생성 된 <xref:System.Diagnostics.EventLog.Source%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1270">Many exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="8d489-1271">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1271">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-1272"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 지역화할 수 있는 메시지 리소스 파일을 사용 하지 않는; 메서드는 이벤트 로그에 직접 지정된 된 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1272">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="8d489-1273">사용 된 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 지역화 된 메시지 리소스 파일을 사용 하 여 이벤트를 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1273">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="8d489-1274">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1274">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-1275">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1275">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-1276">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1276">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1277">원격 컴퓨터에 항목을 작성 하는 경우 메시지 (텍스트 문자열)은 원격 컴퓨터에.NET Framework 실행 하지 않는 경우 예상 되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1277">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1278">경우는 `message` NUL 문자를 포함 하는 매개 변수, 이벤트 로그에 메시지 NUL 문자에서 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1278">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_1_3#3](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CPP/eventlog_writeentry_1_3.cpp#3)]
 [!code-csharp[EventLog_WriteEntry_1_3#3](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CS/eventlog_writeentry_1_3.cs#3)]
 [!code-vb[EventLog_WriteEntry_1_3#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_1_3/VB/eventlog_writeentry_1_3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-1279"><see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1279">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="8d489-1280">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1280">-or-</span></span> 
<span data-ttu-id="8d489-1281">메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1281">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="8d489-1282">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1282">-or-</span></span> 
<span data-ttu-id="8d489-1283">소스가 이미 다른 이벤트 로그에 등록된 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1283">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="8d489-1284">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1284">-or-</span></span> 
 <span data-ttu-id="8d489-1285"><paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1285"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="8d489-1286">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1286">-or-</span></span> 
<span data-ttu-id="8d489-1287">메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).</span><span class="sxs-lookup"><span data-stu-id="8d489-1287">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="8d489-1288">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1288">-or-</span></span> 
<span data-ttu-id="8d489-1289">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1289">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-1290">이벤트 로그의 레지스트리 키를 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1290">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8d489-1291"><paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1291"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-1292">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1292">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="8d489-1293">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1293">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-1294">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1294">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1295">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1295">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String, type As EventLogEntryType, eventID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string * System.Diagnostics.EventLogEntryType * int -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message, type, eventID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8d489-1296">지정한 컴퓨터에 등록되는 응용 프로그램의 원본입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1296">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="8d489-1297">이벤트 로그에 쓸 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1297">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="8d489-1298"><see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1298">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="8d489-1299">이벤트의 응용 프로그램별 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1299">The application-specific identifier for the event.</span></span></param>
        <summary><span data-ttu-id="8d489-1300">특정 등록 이벤트 소스를 사용하여 엔트리를 지정된 메시지 텍스트와 응용 프로그램 정의 이벤트 식별자로 이벤트 로그에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1300">Writes an entry with the given message text and application-defined event identifier to the event log, using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-1301">이 메서드를 사용 하 여 응용 프로그램 정의 된 항목을 쓸 `eventID` 적절 한 로그 이벤트 소스로 이벤트 로그에 소스를 이미 사용 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1301">Use this method to write an entry with an application-defined `eventID` to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="8d489-1302">`eventID`, 소스와 함께 이벤트 고유 하 게 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1302">The `eventID`, along with the source, uniquely identify an event.</span></span> <span data-ttu-id="8d489-1303">각 응용 프로그램은 번호가 매겨진된 자체 이벤트 및 매핑되는 설명 문자열을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1303">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="8d489-1304">이벤트 뷰어 사용자 문제가 무엇 인지 이해 하 고 수행할 작업을 제안 하는 데 사용자에 게 이러한 문자열을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1304">Event viewers present these strings to the user to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1305">합니다 `message` 문자열 %를 포함할 수 없습니다*n*여기서 *n* 정수 값 (예: %1) 이므로 이벤트 뷰어를 삽입 문자열로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1305">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="8d489-1306">인터넷 프로토콜 버전 6 (IPv6) 주소가이 포함 될 수 있습니다 문자 시퀀스를 하므로 IPv6 주소를 포함 하는 이벤트 메시지를 기록할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1306">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="8d489-1307">이벤트 식별자 외에도이 오버 로드 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 지정할 수는 <xref:System.Diagnostics.EventLogEntryType> 이벤트 로그에 쓰고 이벤트에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1307">In addition to the event identifier, this overload of <xref:System.Diagnostics.EventLog.WriteEntry%2A> lets you specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="8d489-1308">`type` 아이콘 및 텍스트 로그의 이벤트 뷰어에서 형식 열에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1308">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="8d489-1309">이 매개 변수는 오류, 경고, 정보, 성공 감사 또는 실패 감사 이벤트 유형 인지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1309">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="8d489-1310">만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1310">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="8d489-1311">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1311">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-1312">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1312">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-1313">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1313">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-1314">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-1314">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-1315">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1315">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-1316">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1316">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-1317"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 지역화할 수 있는 메시지 리소스 파일을 사용 하지 않는; 메서드는 이벤트 로그에 직접 지정된 된 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1317">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="8d489-1318">사용 된 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 지역화 된 메시지 리소스 파일을 사용 하 여 이벤트를 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1318">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="8d489-1319">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1319">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-1320">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1320">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-1321">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1321">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1322">경우는 `message` NUL 문자를 포함 하는 매개 변수, 이벤트 로그에 메시지 NUL 문자에서 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1322">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_4#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_4/CPP/eventlog_writeentry_4.cpp#1)]
 [!code-csharp[EventLog_WriteEntry_4#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_4/CS/eventlog_writeentry_4.cs#1)]
 [!code-vb[EventLog_WriteEntry_4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_4/VB/eventlog_writeentry_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-1323"><paramref name="source" /> 값이 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1323">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="8d489-1324">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1324">-or-</span></span> 
<span data-ttu-id="8d489-1325"><paramref name="source" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1325">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8d489-1326">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1326">-or-</span></span> 
 <span data-ttu-id="8d489-1327"><paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1327"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="8d489-1328">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1328">-or-</span></span> 
<span data-ttu-id="8d489-1329">메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).</span><span class="sxs-lookup"><span data-stu-id="8d489-1329">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="8d489-1330">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1330">-or-</span></span> 
<span data-ttu-id="8d489-1331">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1331">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-1332">이벤트 로그의 레지스트리 키를 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1332">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8d489-1333"><paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1333"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-1334">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1334">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="8d489-1335">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1335">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-1336">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1336">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1337">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1337">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID, short category, byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID, int16 category, unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, type As EventLogEntryType, eventID As Integer, category As Short, rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID, short category, cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.EventLogEntryType * int * int16 * byte[] -&gt; unit" Usage="eventLog.WriteEntry (message, type, eventID, category, rawData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
        <Parameter Name="category" Type="System.Int16" />
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8d489-1338">이벤트 로그에 쓸 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1338">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="8d489-1339"><see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1339">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="8d489-1340">이벤트의 응용 프로그램별 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1340">The application-specific identifier for the event.</span></span></param>
        <param name="category"><span data-ttu-id="8d489-1341">메시지와 연결된 응용 프로그램별 하위 범주입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1341">The application-specific subcategory associated with the message.</span></span></param>
        <param name="rawData"><span data-ttu-id="8d489-1342">항목과 연관된 이진 데이터를 보유하는 바이트의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1342">An array of bytes that holds the binary data associated with the entry.</span></span></param>
        <summary><span data-ttu-id="8d489-1343">지정한 메시지 텍스트, 응용 프로그램 정의 이벤트 식별자, 응용 프로그램 정의 범주로 엔트리를 이벤트 로그에 쓰고 메시지에 이진 데이터를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1343">Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log, and appends binary data to the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-1344">이 오버 로드를 사용 하 여 이벤트 로그에 응용 프로그램 정의 이벤트 관련 데이터를 쓸입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1344">Use this overload to write application-defined event-specific data to the event log.</span></span> <span data-ttu-id="8d489-1345">이벤트 뷰어는이 데이터를 해석 하지 않으므로 원시 데이터를 결합 된 16 진수 및 텍스트 형식에만 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1345">The Event Viewer does not interpret this data; it displays raw data only in a combined hexadecimal and text format.</span></span> <span data-ttu-id="8d489-1346">사용 이벤트 관련 데이터 제한적으로 문제를 디버깅 하는 사람에 게 유용할 것 확실 한 경우에 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1346">Use event-specific data sparingly, including it only if you are sure it will be useful to someone debugging the problem.</span></span> <span data-ttu-id="8d489-1347">또한 응용 프로그램 이벤트 뷰어를 독립적으로 처리할 수 정보를 저장할 이벤트 관련 데이터를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1347">You can also use event-specific data to store information the application can process independently of the Event Viewer.</span></span> <span data-ttu-id="8d489-1348">예를 들어, 뷰어를 사용자 이벤트에 대해 특별히 작성 하거나 이벤트 관련 데이터에서 정보를 포함 하는 보고서를 만들고 로그 파일을 검색 하는 프로그램을 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1348">For example, you could write a viewer specifically for your events, or write a program that scans the logfile and creates reports that include information from the event-specific data.</span></span>  
  
 <span data-ttu-id="8d489-1349">이진 데이터를 외에도 응용 프로그램 정의 범주를 및 응용 프로그램 정의 이벤트 식별자를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1349">In addition to the binary data, you can specify an application-defined category and an application-defined event identifier.</span></span> <span data-ttu-id="8d489-1350">이벤트 뷰어에서 이벤트 소스를 기록한 이벤트를 필터링 하려면 범주를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1350">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="8d489-1351">이벤트 뷰어를 숫자 값으로 범주를 표시 하거나 지역화 된 범주 문자열을 표시 하는 범주 리소스 식별자로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1351">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1352">합니다 `message` 문자열 %를 포함할 수 없습니다*n*여기서 *n* 정수 값 (예: %1) 이므로 이벤트 뷰어를 삽입 문자열로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1352">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="8d489-1353">인터넷 프로토콜 버전 6 (IPv6) 주소가이 포함 될 수 있습니다 문자 시퀀스를 하므로 IPv6 주소를 포함 하는 이벤트 메시지를 기록할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1353">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1354">`category` 매개 변수는 양수 값 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1354">The `category` parameter should be a positive value.</span></span> <span data-ttu-id="8d489-1355">부정 범주 값 뷰어를 이벤트 양의 보수로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1355">Negative category values appear as a complementary positive number in the Event Viewer.</span></span> <span data-ttu-id="8d489-1356">예를 들어를-10 65,526, 65,535로-1로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1356">For example, a -10 appears as 65,526, a -1 as 65,535.</span></span>  
  
 <span data-ttu-id="8d489-1357">이벤트 뷰어에서 지역화 된 범주 문자열을 표시할 범주 리소스 파일을 구성 하 고 설정한 이벤트 소스를 사용 해야 합니다는 `category` 범주 리소스 파일의 리소스 식별자로.</span><span class="sxs-lookup"><span data-stu-id="8d489-1357">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the `category` to a resource identifier in the category resource file.</span></span> <span data-ttu-id="8d489-1358">구성된 범주 리소스 파일 또는 지정 된 이벤트 소스에 없는 경우 `category` 이벤트 뷰어에서 해당 항목에 대해 숫자 범주 값을 표시 하는 다음 범주 리소스 파일에서 문자열을 인덱싱하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1358">If the event source does not have a configured category resource file, or the specified `category` does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="8d489-1359">범주 리소스 파일 리소스 파일에서 범주 문자열의 수와 함께 구성를 사용 하 여 <xref:System.Diagnostics.EventLogInstaller> 또는 <xref:System.Diagnostics.EventSourceCreationData> 클래스.</span><span class="sxs-lookup"><span data-stu-id="8d489-1359">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="8d489-1360">이벤트 소스와 함께 이벤트 식별자, 이벤트를 고유 하 게 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1360">Event identifiers, along with the event source, uniquely identify an event.</span></span> <span data-ttu-id="8d489-1361">각 응용 프로그램은 번호가 매겨진된 자체 이벤트 및 매핑되는 설명 문자열을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1361">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="8d489-1362">이벤트 뷰어 사용자 문제가 무엇 인지 이해 하 고 수행할 작업을 제안 하는 데 다음 문자열 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1362">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
 <span data-ttu-id="8d489-1363">마지막으로 지정할 수는 <xref:System.Diagnostics.EventLogEntryType> 이벤트 로그에 쓰고 이벤트에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1363">Finally, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="8d489-1364">`type` 아이콘 및 텍스트 로그의 이벤트 뷰어에서 형식 열에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1364">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="8d489-1365">이 매개 변수는 오류, 경고, 정보, 성공 감사 또는 실패 감사 이벤트 유형 인지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1365">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="8d489-1366">설정 해야 합니다는 <xref:System.Diagnostics.EventLog.Source%2A> 속성에 <xref:System.Diagnostics.EventLog> 로그에 항목을 작성 하기 전에 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1366">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="8d489-1367">만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1367">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="8d489-1368">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1368">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-1369">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1369">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-1370">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1370">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-1371">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-1371">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-1372">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1372">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-1373">소스에 지정 하는 경우는 <xref:System.Diagnostics.EventLog.Source%2A> 속성 <xref:System.Diagnostics.EventLog> 인스턴스 구성 요소를 작성 하는 컴퓨터에 등록 되지 않았습니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 호출 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 하 고 소스를 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1373">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1374">지정 하지 않는 경우는 <xref:System.Diagnostics.EventLog.MachineName%2A> 에 대 한 사용자 <xref:System.Diagnostics.EventLog> 를 호출 하기 전에 인스턴스 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 또는 <xref:System.Diagnostics.EventLog.WriteEntry%2A>, 로컬 컴퓨터 (".") 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1374">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="8d489-1375">시스템을 등록 해야 하는 경우는 <xref:System.Diagnostics.EventLog.Source%2A> 호출을 통해 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 및 <xref:System.Diagnostics.EventLog.Log%2A> 속성에서 설정 되지 않은 프로그램 <xref:System.Diagnostics.EventLog> 경우 로그는 응용 프로그램 로그에 기본적입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1375">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1376">등록 프로세스 중 발생 한 오류에는 위에 나열 된 많은 예외가 생성 된 <xref:System.Diagnostics.EventLog.Source%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1376">Many exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="8d489-1377">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1377">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-1378"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 지역화할 수 있는 메시지 리소스 파일을 사용 하지 않는; 메서드는 이벤트 로그에 직접 지정된 된 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1378">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="8d489-1379">사용 된 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 지역화 된 메시지 리소스 파일을 사용 하 여 이벤트를 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1379">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="8d489-1380">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1380">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-1381">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1381">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-1382">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1382">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1383">원격 컴퓨터에 항목을 작성 하는 경우 메시지 (텍스트 문자열)은 원격 컴퓨터에.NET Framework 실행 하지 않는 경우 예상 되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1383">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1384">경우는 `message` NUL 문자를 포함 하는 매개 변수, 이벤트 로그에 메시지 NUL 문자에서 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1384">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_5#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_5/CPP/eventlog_writeentry_5.cpp#1)]
 [!code-csharp[EventLog_WriteEntry_5#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_5/CS/eventlog_writeentry_5.cs#1)]
 [!code-vb[EventLog_WriteEntry_5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_5/VB/eventlog_writeentry_5.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-1385"><see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1385">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="8d489-1386">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1386">-or-</span></span> 
<span data-ttu-id="8d489-1387">메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1387">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="8d489-1388">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1388">-or-</span></span> 
<span data-ttu-id="8d489-1389">소스가 이미 다른 이벤트 로그에 등록된 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1389">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="8d489-1390">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1390">-or-</span></span> 
 <span data-ttu-id="8d489-1391"><paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1391"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="8d489-1392">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1392">-or-</span></span> 
<span data-ttu-id="8d489-1393">메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).</span><span class="sxs-lookup"><span data-stu-id="8d489-1393">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="8d489-1394">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1394">-or-</span></span> 
<span data-ttu-id="8d489-1395">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1395">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-1396">이벤트 로그의 레지스트리 키를 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1396">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8d489-1397"><paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1397"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-1398">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1398">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="8d489-1399">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1399">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-1400">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1400">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1401">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1401">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID, short category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID, int16 category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String, type As EventLogEntryType, eventID As Integer, category As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID, short category);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string * System.Diagnostics.EventLogEntryType * int * int16 -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message, type, eventID, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
        <Parameter Name="category" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8d489-1402">지정한 컴퓨터에 등록되는 응용 프로그램의 원본입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1402">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="8d489-1403">이벤트 로그에 쓸 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1403">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="8d489-1404"><see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1404">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="8d489-1405">이벤트의 응용 프로그램별 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1405">The application-specific identifier for the event.</span></span></param>
        <param name="category"><span data-ttu-id="8d489-1406">메시지와 연결된 응용 프로그램별 하위 범주입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1406">The application-specific subcategory associated with the message.</span></span></param>
        <summary><span data-ttu-id="8d489-1407">특정 등록 이벤트 소스를 사용하여 엔트리를 지정된 메시지 텍스트, 응용 프로그램 정의 이벤트 식별자, 응용 프로그램 정의 범주로 이벤트 로그에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1407">Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log, using the specified registered event source.</span></span> <span data-ttu-id="8d489-1408">이벤트 뷰어에서 <paramref name="category" />를 사용하여 로그의 이벤트를 필터링할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1408">The <paramref name="category" /> can be used by the Event Viewer to filter events in the log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-1409">이 메서드를 사용 하 여 응용 프로그램 정의 된 항목을 쓸 `category` 이벤트 로그에 적절 한 로그는 이벤트 원본으로 이미 등록 되어 있는 소스를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1409">Use this method to write an entry with an application-defined `category` to the event log, using a source that is already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="8d489-1410">이벤트 뷰어에서 이벤트 소스를 기록한 이벤트를 필터링 하려면 범주를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1410">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="8d489-1411">이벤트 뷰어를 숫자 값으로 범주를 표시 하거나 지역화 된 범주 문자열을 표시 하는 범주 리소스 식별자로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1411">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1412">`category` 매개 변수는 양수 값 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1412">The `category` parameter should be a positive value.</span></span> <span data-ttu-id="8d489-1413">부정 범주 값 뷰어를 이벤트 양의 보수로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1413">Negative category values appear as a complementary positive number in the Event Viewer.</span></span> <span data-ttu-id="8d489-1414">예를 들어를-10 65,526, 65,535로-1로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1414">For example, a -10 appears as 65,526, a -1 as 65,535.</span></span>  
  
 <span data-ttu-id="8d489-1415">이벤트 뷰어에서 지역화 된 범주 문자열을 표시할 범주 리소스 파일을 구성 하 고 설정한 이벤트 소스를 사용 해야 합니다는 `category` 범주 리소스 파일의 리소스 식별자로.</span><span class="sxs-lookup"><span data-stu-id="8d489-1415">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the `category` to a resource identifier in the category resource file.</span></span> <span data-ttu-id="8d489-1416">구성된 범주 리소스 파일 또는 지정 된 이벤트 소스에 없는 경우 `category` 이벤트 뷰어에서 해당 항목에 대해 숫자 범주 값을 표시 하는 다음 범주 리소스 파일에서 문자열을 인덱싱하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1416">If the event source does not have a configured category resource file, or the specified `category` does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="8d489-1417">범주 리소스 파일 리소스 파일에서 범주 문자열의 수와 함께 구성를 사용 하 여 <xref:System.Diagnostics.EventLogInstaller> 또는 <xref:System.Diagnostics.EventSourceCreationData> 클래스.</span><span class="sxs-lookup"><span data-stu-id="8d489-1417">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="8d489-1418">범주와 함께 이벤트 로그에 쓰고 이벤트에 대 한 이벤트 식별자를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1418">In addition to the category, you can specify an event identifier for the event being written to the event log.</span></span> <span data-ttu-id="8d489-1419">이벤트 소스와 함께 이벤트 식별자, 이벤트를 고유 하 게 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1419">Event identifiers, along with the event source, uniquely identify an event.</span></span> <span data-ttu-id="8d489-1420">각 응용 프로그램은 번호가 매겨진된 자체 이벤트 및 매핑되는 설명 문자열을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1420">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="8d489-1421">이벤트 뷰어 사용자 문제가 무엇 인지 이해 하 고 수행할 작업을 제안 하는 데 다음 문자열 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1421">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
 <span data-ttu-id="8d489-1422">마지막으로 지정할 수는 <xref:System.Diagnostics.EventLogEntryType> 이벤트 로그에 쓰고 이벤트에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1422">Finally, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="8d489-1423">`type` 아이콘 및 텍스트 로그의 이벤트 뷰어에서 형식 열에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1423">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="8d489-1424">이 매개 변수는 오류, 경고, 정보, 성공 감사 또는 실패 감사 이벤트 유형 인지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1424">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="8d489-1425">만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1425">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="8d489-1426">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1426">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-1427">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1427">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-1428">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1428">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-1429">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-1429">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-1430">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1430">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-1431">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1431">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-1432"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 지역화할 수 있는 메시지 리소스 파일을 사용 하지 않는; 메서드는 이벤트 로그에 직접 지정된 된 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1432">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="8d489-1433">사용 된 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 지역화 된 메시지 리소스 파일을 사용 하 여 이벤트를 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1433">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="8d489-1434">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1434">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-1435">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1435">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-1436">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1436">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1437">경우는 `message` NUL 문자를 포함 하는 매개 변수, 이벤트 로그에 메시지 NUL 문자에서 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1437">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
>   
>  <span data-ttu-id="8d489-1438">합니다 `message` 문자열 %를 포함할 수 없습니다*n*여기서 *n* 정수 값 (예: %1) 이므로 이벤트 뷰어를 삽입 문자열로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1438">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="8d489-1439">인터넷 프로토콜 버전 6 (IPv6) 주소가이 포함 될 수 있습니다 문자 시퀀스를 하므로 IPv6 주소를 포함 하는 이벤트 메시지를 기록할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1439">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_1_3#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CPP/eventlog_writeentry_1_3.cpp#1)]
 [!code-csharp[EventLog_WriteEntry_1_3#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CS/eventlog_writeentry_1_3.cs#1)]
 [!code-vb[EventLog_WriteEntry_1_3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_1_3/VB/eventlog_writeentry_1_3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-1440"><paramref name="source" /> 값이 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1440">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="8d489-1441">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1441">-or-</span></span> 
<span data-ttu-id="8d489-1442"><paramref name="source" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1442">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8d489-1443">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1443">-or-</span></span> 
 <span data-ttu-id="8d489-1444"><paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1444"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="8d489-1445">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1445">-or-</span></span> 
<span data-ttu-id="8d489-1446">메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).</span><span class="sxs-lookup"><span data-stu-id="8d489-1446">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="8d489-1447">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1447">-or-</span></span> 
<span data-ttu-id="8d489-1448">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1448">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-1449">이벤트 로그의 레지스트리 키를 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1449">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8d489-1450"><paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1450"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-1451">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1451">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="8d489-1452">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1452">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-1453">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1453">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1454">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1454">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID, short category, byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID, int16 category, unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String, type As EventLogEntryType, eventID As Integer, category As Short, rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID, short category, cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string * System.Diagnostics.EventLogEntryType * int * int16 * byte[] -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message, type, eventID, category, rawData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
        <Parameter Name="category" Type="System.Int16" />
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8d489-1455">지정한 컴퓨터에 등록되는 응용 프로그램의 원본입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1455">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="8d489-1456">이벤트 로그에 쓸 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1456">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="8d489-1457"><see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1457">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="8d489-1458">이벤트의 응용 프로그램별 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1458">The application-specific identifier for the event.</span></span></param>
        <param name="category"><span data-ttu-id="8d489-1459">메시지와 연결된 응용 프로그램별 하위 범주입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1459">The application-specific subcategory associated with the message.</span></span></param>
        <param name="rawData"><span data-ttu-id="8d489-1460">항목과 연관된 이진 데이터를 보유하는 바이트의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1460">An array of bytes that holds the binary data associated with the entry.</span></span></param>
        <summary><span data-ttu-id="8d489-1461">특정 등록 이벤트 소스를 사용하여 엔트리를 지정된 메시지 텍스트, 응용 프로그램 정의 이벤트 식별자, 응용 프로그램 정의 범주로 이벤트 로그에 쓰고 메시지에 이진 데이터를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1461">Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log (using the specified registered event source) and appends binary data to the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-1462">이 메서드를 사용 하 여 적절 한 로그는 이벤트 원본으로 이미 등록 된 소스를 사용 하 여 이벤트 로그에 응용 프로그램 정의 이벤트 관련 데이터를 쓸입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1462">Use this method to write application-defined event-specific data to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="8d489-1463">이벤트 뷰어는이 데이터를 해석 하지 않으므로 원시 데이터를 결합 된 16 진수 및 텍스트 형식에만 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1463">The Event Viewer does not interpret this data; it displays raw data only in a combined hexadecimal and text format.</span></span> <span data-ttu-id="8d489-1464">이벤트 관련 데이터를 사용 하 여 제한적입니다. 것이 유용할 수는 경우에이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1464">Use event-specific data sparingly; include it only if you are sure it will be useful.</span></span> <span data-ttu-id="8d489-1465">또한 응용 프로그램 이벤트 뷰어를 독립적으로 처리할 수 정보를 저장할 이벤트 관련 데이터를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1465">You can also use event-specific data to store information the application can process independently of the Event Viewer.</span></span> <span data-ttu-id="8d489-1466">예를 들어, 뷰어를 사용자 이벤트에 대해 특별히 작성 하거나 이벤트 관련 데이터에서 정보를 포함 하는 보고서를 만들고 로그 파일을 검색 하는 프로그램을 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1466">For example, you could write a viewer specifically for your events, or write a program that scans the logfile and creates reports that include information from the event-specific data.</span></span>  
  
 <span data-ttu-id="8d489-1467">이진 데이터를 외에도 응용 프로그램 정의 범주를 및 응용 프로그램 정의 이벤트 식별자를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1467">In addition to the binary data, you can specify an application-defined category and an application-defined event identifier.</span></span> <span data-ttu-id="8d489-1468">이벤트 뷰어에서 이벤트 소스를 기록한 이벤트를 필터링 하려면 범주를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1468">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="8d489-1469">이벤트 뷰어를 숫자 값으로 범주를 표시 하거나 지역화 된 범주 문자열을 표시 하는 범주 리소스 식별자로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1469">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1470">`category` 매개 변수는 양수 값 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1470">The `category` parameter should be a positive value.</span></span> <span data-ttu-id="8d489-1471">부정 범주 값 뷰어를 이벤트 양의 보수로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1471">Negative category values appear as a complementary positive number in the Event Viewer.</span></span> <span data-ttu-id="8d489-1472">예를 들어를-10 65,526, 65,535로-1로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1472">For example, a -10 will appear as 65,526, a -1 as 65,535.</span></span>  
  
 <span data-ttu-id="8d489-1473">이벤트 뷰어에서 지역화 된 범주 문자열을 표시할 범주 리소스 파일을 구성 하 고 설정한 이벤트 소스를 사용 해야 합니다는 `category` 범주 리소스 파일의 리소스 식별자로.</span><span class="sxs-lookup"><span data-stu-id="8d489-1473">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the `category` to a resource identifier in the category resource file.</span></span> <span data-ttu-id="8d489-1474">구성된 범주 리소스 파일 또는 지정 된 이벤트 소스에 없는 경우 `category` 이벤트 뷰어에서 해당 항목에 대해 숫자 범주 값을 표시 하는 다음 범주 리소스 파일에서 문자열을 인덱싱하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1474">If the event source does not have a configured category resource file, or the specified `category` does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="8d489-1475">범주 리소스 파일 리소스 파일에서 범주 문자열의 수와 함께 구성를 사용 하 여 <xref:System.Diagnostics.EventLogInstaller> 또는 <xref:System.Diagnostics.EventSourceCreationData> 클래스.</span><span class="sxs-lookup"><span data-stu-id="8d489-1475">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="8d489-1476">이벤트 소스와 함께 이벤트 식별자, 이벤트를 고유 하 게 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1476">Event identifiers, together with the event source, uniquely identify an event.</span></span> <span data-ttu-id="8d489-1477">각 응용 프로그램은 번호가 매겨진된 자체 이벤트 및 매핑되는 설명 문자열을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1477">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="8d489-1478">이벤트 뷰어 사용자 문제가 무엇 인지 이해 하 고 수행할 작업을 제안 하는 데 다음 문자열 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1478">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
 <span data-ttu-id="8d489-1479">마지막으로 지정할 수는 <xref:System.Diagnostics.EventLogEntryType> 이벤트 로그에 쓰고 이벤트에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1479">Finally, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="8d489-1480">`type` 아이콘 및 텍스트 로그의 이벤트 뷰어에서 형식 열에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1480">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="8d489-1481">이 매개 변수는 오류, 경고, 정보, 성공 감사 또는 실패 감사 이벤트 유형 인지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1481">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="8d489-1482">만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1482">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="8d489-1483">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1483">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-1484">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1484">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-1485">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1485">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-1486">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-1486">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-1487">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1487">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-1488">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1488">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-1489"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 지역화할 수 있는 메시지 리소스 파일을 사용 하지 않는; 메서드는 이벤트 로그에 직접 지정된 된 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1489">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="8d489-1490">사용 된 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 지역화 된 메시지 리소스 파일을 사용 하 여 이벤트를 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1490">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="8d489-1491">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1491">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-1492">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1492">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-1493">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1493">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1494">경우는 `message` NUL 문자를 포함 하는 매개 변수, 이벤트 로그에 메시지 NUL 문자에서 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1494">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
>   
>  <span data-ttu-id="8d489-1495">합니다 `message` 문자열 %를 포함할 수 없습니다*n*여기서 *n* 정수 값 (예: %1) 이므로 이벤트 뷰어를 삽입 문자열로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1495">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="8d489-1496">인터넷 프로토콜 버전 6 (IPv6) 주소가이 포함 될 수 있습니다 문자 시퀀스를 하므로 IPv6 주소를 포함 하는 이벤트 메시지를 기록할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1496">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_1_3#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CPP/eventlog_writeentry_1_3.cpp#2)]
 [!code-csharp[EventLog_WriteEntry_1_3#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CS/eventlog_writeentry_1_3.cs#2)]
 [!code-vb[EventLog_WriteEntry_1_3#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_1_3/VB/eventlog_writeentry_1_3.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-1497"><paramref name="source" /> 값이 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1497">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="8d489-1498">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1498">-or-</span></span> 
<span data-ttu-id="8d489-1499"><paramref name="source" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1499">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8d489-1500">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1500">-or-</span></span> 
 <span data-ttu-id="8d489-1501"><paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1501"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="8d489-1502">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1502">-or-</span></span> 
<span data-ttu-id="8d489-1503">메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).</span><span class="sxs-lookup"><span data-stu-id="8d489-1503">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="8d489-1504">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1504">-or-</span></span> 
<span data-ttu-id="8d489-1505">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1505">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8d489-1506"><paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1506"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-1507">이벤트 로그의 레지스트리 키를 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1507">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-1508">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1508">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="8d489-1509">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1509">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-1510">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1510">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1511">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1511">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEvent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d489-1512">이벤트 로그에 지역화된 이벤트 엔트리를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1512">Writes a localized event entry to the event log.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public void WriteEvent (System.Diagnostics.EventInstance instance, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEvent(class System.Diagnostics.EventInstance instance, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEvent (instance As EventInstance, ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEvent(System::Diagnostics::EventInstance ^ instance, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : System.Diagnostics.EventInstance * obj[] -&gt; unit" Usage="eventLog.WriteEvent (instance, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="8d489-1513">지역화된 이벤트 로그 항목을 나타내는 <see cref="T:System.Diagnostics.EventInstance" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1513">An <see cref="T:System.Diagnostics.EventInstance" /> instance that represents a localized event log entry.</span></span></param>
        <param name="values"><span data-ttu-id="8d489-1514">이벤트 로그 항목의 메시지 텍스트로 병합될 문자열의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1514">An array of strings to merge into the message text of the event log entry.</span></span></param>
        <summary><span data-ttu-id="8d489-1515">이벤트 로그에 지역화된 엔트리를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1515">Writes a localized entry to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-1516">이 메서드를 사용 하 여 지역화 된 엔트리를 이벤트 로그에 쓸입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1516">Use this method to write a localized entry to the event log.</span></span> <span data-ttu-id="8d489-1517">문자열 값이 아니라 리소스 식별자를 사용 하 여 이벤트 속성을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1517">You specify the event properties with resource identifiers rather than string values.</span></span> <span data-ttu-id="8d489-1518">이벤트 뷰어는 리소스 식별자를 사용 하 여 지역화 된 리소스 파일에서 해당 문자열 표시를 <xref:System.Diagnostics.EventLog.Source%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1518">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span> <span data-ttu-id="8d489-1519">리소스 식별자를 사용 하 여 이벤트를 작성 하기 전에 해당 리소스 파일을 사용 하 여 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1519">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="8d489-1520">입력 `instance` 인스턴스 이벤트 메시지 및 속성을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1520">The input `instance` instance specifies the event message and properties.</span></span> <span data-ttu-id="8d489-1521">설정 된 <xref:System.Diagnostics.EventInstance.InstanceId%2A> 의 `instance` 원본 메시지 리소스 파일에 정의 된 메시지에 대 한 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1521">Set the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` input for the defined message in the source message resource file.</span></span> <span data-ttu-id="8d489-1522">선택적으로 설정할 수는 <xref:System.Diagnostics.EventInstance.CategoryId%2A> 및 <xref:System.Diagnostics.EventInstance.EntryType%2A> 의 `instance` 에 이벤트 엔트리의 범주 및 이벤트 형식을 정의 하는 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1522">You can optionally set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> and <xref:System.Diagnostics.EventInstance.EntryType%2A> of the `instance` input to define the category and event type of your event entry.</span></span> <span data-ttu-id="8d489-1523">지역화 된 메시지 텍스트에 삽입할 언어 독립적인 문자열의 배열도 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1523">You can also specify an array of language-independent strings to insert into the localized message text.</span></span> <span data-ttu-id="8d489-1524">설정할 `values` 에 `null` 이벤트 메시지 대체 문자열에 대 한 서식 자리 표시자 포함 되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1524">Set `values` to `null` if the event message does not contain formatting placeholders for replacement strings.</span></span>  
  
 <span data-ttu-id="8d489-1525">설정 해야 합니다 <xref:System.Diagnostics.EventLog.Source%2A> 속성에 <xref:System.Diagnostics.EventLog> 사용 하기 전에 구성 요소 <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d489-1525">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before using <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span></span> <span data-ttu-id="8d489-1526">로그에 지역화 된 엔트리를 쓰기 위한 지정한 소스를 구성 해야 합니다. 소스 최소한 있어야 메시지 리소스 파일을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1526">The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</span></span>  
  
 <span data-ttu-id="8d489-1527">만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1527">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="8d489-1528">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1528">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-1529">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1529">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-1530">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1530">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-1531">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-1531">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-1532">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1532">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-1533">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1533">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-1534">사용 된 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드 응용 프로그램 이벤트 로그에 직접 문자열 값을 기록 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1534">Use the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method if your application writes string values directly to the event log.</span></span>  
  
 <span data-ttu-id="8d489-1535">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1535">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-1536">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1536">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-1537">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1537">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1538">원격 컴퓨터의 값에 항목을 기록 하는 경우는 `message` 문자열 원격 컴퓨터에.NET Framework 실행 하지 않는 경우 예상 되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1538">If you write an entry to a remote computer, the value of the `message` string might not be what you expect if the remote computer is not running the .NET Framework.</span></span> <span data-ttu-id="8d489-1539">또한 합니다 `message` 문자열 %를 포함할 수 없습니다*n*여기서 *n* 정수 값 (예: %1) 이므로 이벤트 뷰어를 삽입 문자열로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1539">Also, the `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="8d489-1540">인터넷 프로토콜 버전 6 (IPv6) 주소가이 포함 될 수 있습니다 문자 시퀀스를 하므로 IPv6 주소를 포함 하는 이벤트 메시지를 기록할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1540">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-1541">다음 예제에서는 두 개의 감사 이벤트 로그에 엔트리를 씁니다 `myNewLog`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1541">The following example writes two audit entries to the event log `myNewLog`.</span></span> <span data-ttu-id="8d489-1542">이 예제에서는 로컬 컴퓨터에 존재 하지 않는 경우 새 이벤트 소스 및 새 이벤트 로그를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1542">The example creates a new event source and a new event log if they do not exist on the local computer.</span></span> <span data-ttu-id="8d489-1543">이벤트 메시지 텍스트는 리소스 식별자를 사용 하 여 리소스 파일에 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1543">The event message text is specified using a resource identifier in a resource file.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#7](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#7)]
 [!code-csharp[EventLog_WriteEvent#7](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#7)]
 [!code-vb[EventLog_WriteEvent#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#7)]  
  
 <span data-ttu-id="8d489-1544">이 예제에서는 리소스 라이브러리 EventLogMsgs.dll 내장 다음 메시지 텍스트 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1544">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="8d489-1545">메시지 텍스트 파일은 메시지 리소스 파일 생성 되는 원본.</span><span class="sxs-lookup"><span data-stu-id="8d489-1545">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="8d489-1546">메시지 텍스트 파일의 리소스 식별자와 범주, 이벤트 메시지 및 매개 변수 삽입 문자열에 대 한 텍스트를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1546">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-1547"><see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1547">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="8d489-1548">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1548">-or-</span></span> 
<span data-ttu-id="8d489-1549">메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1549">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="8d489-1550">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1550">-or-</span></span> 
<span data-ttu-id="8d489-1551">소스가 이미 다른 이벤트 로그에 등록된 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1551">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="8d489-1552">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1552">-or-</span></span> 
 <span data-ttu-id="8d489-1553"><paramref name="instance.InstanceId" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1553"><paramref name="instance.InstanceId" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="8d489-1554">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1554">-or-</span></span> 
 <span data-ttu-id="8d489-1555"><paramref name="values" />의 요소가 256개가 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1555"><paramref name="values" /> has more than 256 elements.</span></span>  
  
<span data-ttu-id="8d489-1556">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1556">-or-</span></span> 
<span data-ttu-id="8d489-1557"><paramref name="values" /> 요소 중 하나가 32766바이트보다 긴 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1557">One of the <paramref name="values" /> elements is longer than 32766 bytes.</span></span>  
  
<span data-ttu-id="8d489-1558">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1558">-or-</span></span> 
<span data-ttu-id="8d489-1559">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1559">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d489-1560"><paramref name="instance" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1560"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-1561">이벤트 로그의 레지스트리 키를 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1561">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-1562">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1562">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="8d489-1563">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1563">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-1564">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1564">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1565">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1565">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="T:System.Diagnostics.EventInstance" />
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public void WriteEvent (System.Diagnostics.EventInstance instance, byte[] data, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEvent(class System.Diagnostics.EventInstance instance, unsigned int8[] data, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEvent (instance As EventInstance, data As Byte(), ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEvent(System::Diagnostics::EventInstance ^ instance, cli::array &lt;System::Byte&gt; ^ data, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : System.Diagnostics.EventInstance * byte[] * obj[] -&gt; unit" Usage="eventLog.WriteEvent (instance, data, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="8d489-1566">지역화된 이벤트 로그 항목을 나타내는 <see cref="T:System.Diagnostics.EventInstance" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1566">An <see cref="T:System.Diagnostics.EventInstance" /> instance that represents a localized event log entry.</span></span></param>
        <param name="data"><span data-ttu-id="8d489-1567">항목과 연관된 이진 데이터를 보유하는 바이트의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1567">An array of bytes that holds the binary data associated with the entry.</span></span></param>
        <param name="values"><span data-ttu-id="8d489-1568">이벤트 로그 항목의 메시지 텍스트로 병합될 문자열의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1568">An array of strings to merge into the message text of the event log entry.</span></span></param>
        <summary><span data-ttu-id="8d489-1569">지정된 이벤트 데이터, 메시지 대체 문자열 및 관련 이진 데이터가 포함된 이벤트 로그 엔트리를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1569">Writes an event log entry with the given event data, message replacement strings, and associated binary data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-1570">이 메서드를 사용 하 여 추가 이벤트 관련 데이터를 사용 하 여 지역화 된 엔트리를 이벤트 로그에 쓸.</span><span class="sxs-lookup"><span data-stu-id="8d489-1570">Use this method to write a localized entry with additional event-specific data to the event log.</span></span> <span data-ttu-id="8d489-1571">문자열 값이 아니라 리소스 식별자를 사용 하 여 이벤트 속성을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1571">You specify the event properties with resource identifiers rather than string values.</span></span> <span data-ttu-id="8d489-1572">이벤트 뷰어는 리소스 식별자를 사용 하 여 지역화 된 리소스 파일에서 해당 문자열 표시를 <xref:System.Diagnostics.EventLog.Source%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1572">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span> <span data-ttu-id="8d489-1573">리소스 식별자를 사용 하 여 이벤트를 작성 하기 전에 해당 리소스 파일을 사용 하 여 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1573">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="8d489-1574">입력 `instance` 인스턴스 이벤트 메시지 및 속성을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1574">The input `instance` instance specifies the event message and properties.</span></span> <span data-ttu-id="8d489-1575">설정 된 <xref:System.Diagnostics.EventInstance.InstanceId%2A> 의 `instance` 원본 메시지 리소스 파일에 정의 된 메시지에 대 한 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1575">Set the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` input for the defined message in the source message resource file.</span></span> <span data-ttu-id="8d489-1576">선택적으로 설정할 수는 <xref:System.Diagnostics.EventInstance.CategoryId%2A> 및 <xref:System.Diagnostics.EventInstance.EntryType%2A> 의 `instance` 에 이벤트 엔트리의 범주 및 이벤트 형식을 정의 하는 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1576">You can optionally set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> and <xref:System.Diagnostics.EventInstance.EntryType%2A> of the `instance` input to define the category and event type of your event entry.</span></span> <span data-ttu-id="8d489-1577">지역화 된 메시지 텍스트에 삽입할 언어 독립적인 문자열의 배열도 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1577">You can also specify an array of language-independent strings to insert into the localized message text.</span></span> <span data-ttu-id="8d489-1578">설정할 `values` 에 `null` 이벤트 메시지 대체 문자열에 대 한 서식 자리 표시자 포함 되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1578">Set `values` to `null` if the event message does not contain formatting placeholders for replacement strings.</span></span>  
  
 <span data-ttu-id="8d489-1579">이벤트에 대 한 추가 정보를 제공 하는 데 필요한 경우 이벤트를 사용 하 여 이진 데이터를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1579">Specify binary data with an event when it is necessary to provide additional details for the event.</span></span> <span data-ttu-id="8d489-1580">예를 들어, 사용를 `data` 매개 변수를 특정 오류에 대 한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1580">For example, use the `data` parameter to include information on a specific error.</span></span> <span data-ttu-id="8d489-1581">이벤트 뷰어에서 관련된 이벤트 데이터를 해석 하지는 않습니다. 데이터 결합 된 16 진수 및 텍스트 형식으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1581">The Event Viewer does not interpret the associated event data; it displays the data in a combined hexadecimal and text format.</span></span> <span data-ttu-id="8d489-1582">이벤트 관련 데이터를 사용 하 여 제한적입니다. 것이 유용할 수는 경우에이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1582">Use event-specific data sparingly; include it only if you are sure it will be useful.</span></span> <span data-ttu-id="8d489-1583">또한 응용 프로그램 이벤트 뷰어를 독립적으로 처리할 수 정보를 저장할 이벤트 관련 데이터를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1583">You can also use event-specific data to store information the application can process independently of the Event Viewer.</span></span> <span data-ttu-id="8d489-1584">예를 들어, 사용자 이벤트에 대해 특별히 뷰어를 작성 하거나 이벤트 관련 데이터에서 정보를 포함 하는 보고서를 만들고 이벤트 로그를 검색 하는 프로그램을 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1584">For example, you could write a viewer specifically for your events, or write a program that scans the event log and creates reports that include information from the event-specific data.</span></span>  
  
 <span data-ttu-id="8d489-1585">설정 해야 합니다는 <xref:System.Diagnostics.EventLog.Source%2A> 속성에 <xref:System.Diagnostics.EventLog> 구성 요소를 사용 하기 전에 하기 전에 구성 요소 <xref:System.Diagnostics.EventLog.WriteEvent%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1585">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before component before using <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span></span> <span data-ttu-id="8d489-1586">로그에 지역화 된 엔트리를 쓰기 위한 지정한 소스를 구성 해야 합니다. 소스 최소한 있어야 메시지 리소스 파일을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1586">The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</span></span>  
  
 <span data-ttu-id="8d489-1587">만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1587">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="8d489-1588">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1588">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-1589">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1589">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-1590">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1590">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-1591">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-1591">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-1592">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1592">You must have administrative rights on the computer to create a new event source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1593">지정 하지 않는 경우는 <xref:System.Diagnostics.EventLog.MachineName%2A> 에 대 한 사용자 <xref:System.Diagnostics.EventLog> 를 호출 하기 전에 인스턴스 <xref:System.Diagnostics.EventLog.WriteEvent%2A>, 로컬 컴퓨터 (".") 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1593">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.WriteEvent%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="8d489-1594">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1594">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-1595">사용 된 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드 응용 프로그램 이벤트 로그에 직접 문자열 값을 기록 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1595">Use the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method if your application writes string values directly to the event log.</span></span>  
  
 <span data-ttu-id="8d489-1596">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1596">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-1597">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1597">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-1598">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1598">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d489-1599">원격 컴퓨터의 값에 항목을 기록 하는 경우는 `message` 문자열 원격 컴퓨터에.NET Framework 실행 하지 않는 경우 예상 되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1599">If you write an entry to a remote computer, the value of the `message` string might not be what you expect if the remote computer is not running the .NET Framework.</span></span> <span data-ttu-id="8d489-1600">또한 합니다 `message` 문자열 %를 포함할 수 없습니다*n*여기서 *n* 정수 값 (예: %1) 이므로 이벤트 뷰어를 삽입 문자열로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1600">Also, the `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="8d489-1601">인터넷 프로토콜 버전 6 (IPv6) 주소가이 포함 될 수 있습니다 문자 시퀀스를 하므로 IPv6 주소를 포함 하는 이벤트 메시지를 기록할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1601">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-1602">다음 예제에서는 두 개의 감사 이벤트 로그에 엔트리를 씁니다 `myNewLog`합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1602">The following example writes two audit entries to the event log `myNewLog`.</span></span> <span data-ttu-id="8d489-1603">이 예제에서는 로컬 컴퓨터에 존재 하지 않는 경우 새 이벤트 소스 및 새 이벤트 로그를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1603">The example creates a new event source and a new event log if they do not exist on the local computer.</span></span> <span data-ttu-id="8d489-1604">이벤트 메시지 텍스트는 리소스 식별자를 사용 하 여 리소스 파일에 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1604">The event message text is specified using a resource identifier in a resource file.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#7](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#7)]
 [!code-csharp[EventLog_WriteEvent#7](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#7)]
 [!code-vb[EventLog_WriteEvent#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#7)]  
  
 <span data-ttu-id="8d489-1605">이 예제에서는 리소스 라이브러리 EventLogMsgs.dll 내장 다음 메시지 텍스트 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1605">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="8d489-1606">메시지 텍스트 파일은 메시지 리소스 파일 생성 되는 원본.</span><span class="sxs-lookup"><span data-stu-id="8d489-1606">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="8d489-1607">메시지 텍스트 파일의 리소스 식별자와 범주, 이벤트 메시지 및 매개 변수 삽입 문자열에 대 한 텍스트를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1607">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-1608"><see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1608">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="8d489-1609">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1609">-or-</span></span> 
<span data-ttu-id="8d489-1610">메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1610">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="8d489-1611">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1611">-or-</span></span> 
<span data-ttu-id="8d489-1612">소스가 이미 다른 이벤트 로그에 등록된 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1612">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="8d489-1613">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1613">-or-</span></span> 
 <span data-ttu-id="8d489-1614"><paramref name="instance.InstanceId" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1614"><paramref name="instance.InstanceId" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="8d489-1615">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1615">-or-</span></span> 
 <span data-ttu-id="8d489-1616"><paramref name="values" />의 요소가 256개가 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1616"><paramref name="values" /> has more than 256 elements.</span></span>  
  
<span data-ttu-id="8d489-1617">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1617">-or-</span></span> 
<span data-ttu-id="8d489-1618"><paramref name="values" /> 요소 중 하나가 32766바이트보다 긴 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1618">One of the <paramref name="values" /> elements is longer than 32766 bytes.</span></span>  
  
<span data-ttu-id="8d489-1619">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1619">-or-</span></span> 
<span data-ttu-id="8d489-1620">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1620">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d489-1621"><paramref name="instance" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1621"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-1622">이벤트 로그의 레지스트리 키를 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1622">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-1623">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1623">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="8d489-1624">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1624">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-1625">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1625">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1626">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1626">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="T:System.Diagnostics.EventInstance" />
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public static void WriteEvent (string source, System.Diagnostics.EventInstance instance, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEvent(string source, class System.Diagnostics.EventInstance instance, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEvent (source As String, instance As EventInstance, ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEvent(System::String ^ source, System::Diagnostics::EventInstance ^ instance, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member WriteEvent : string * System.Diagnostics.EventInstance * obj[] -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEvent (source, instance, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8d489-1627">지정된 컴퓨터의 응용 프로그램에 등록된 이벤트 원본의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1627">The name of the event source registered for the application on the specified computer.</span></span></param>
        <param name="instance"><span data-ttu-id="8d489-1628">지역화된 이벤트 로그 항목을 나타내는 <see cref="T:System.Diagnostics.EventInstance" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1628">An <see cref="T:System.Diagnostics.EventInstance" /> instance that represents a localized event log entry.</span></span></param>
        <param name="values"><span data-ttu-id="8d489-1629">이벤트 로그 항목의 메시지 텍스트로 병합될 문자열의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1629">An array of strings to merge into the message text of the event log entry.</span></span></param>
        <summary><span data-ttu-id="8d489-1630">지정한 등록된 이벤트 소스를 사용하여 지정된 이벤트 데이터와 메시지 대체 문자열이 포함된 이벤트 로그 엔트리를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1630">Writes an event log entry with the given event data and message replacement strings, using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-1631">이 메서드를 사용 하 여 지역화 된 엔트리를 적절 한 로그는 이벤트 원본으로 이미 등록 된 소스를 사용 하 여 이벤트 로그에 쓸입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1631">Use this method to write a localized entry to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="8d489-1632">문자열 값이 아니라 리소스 식별자를 사용 하 여 이벤트 속성을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1632">You specify the event properties with resource identifiers rather than string values.</span></span> <span data-ttu-id="8d489-1633">이벤트 뷰어는 원본에 대 한 지역화 된 리소스 파일에서 해당 문자열을 표시 하려면 리소스 식별자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1633">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the source.</span></span> <span data-ttu-id="8d489-1634">리소스 식별자를 사용 하 여 이벤트를 작성 하기 전에 해당 리소스 파일을 사용 하 여 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1634">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="8d489-1635">입력 `instance` 인스턴스 이벤트 메시지 및 속성을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1635">The input `instance` instance specifies the event message and properties.</span></span> <span data-ttu-id="8d489-1636">설정 된 <xref:System.Diagnostics.EventInstance.InstanceId%2A> 의 `instance` 원본 메시지 리소스 파일에 정의 된 메시지에 대 한 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1636">Set the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` input for the defined message in the source message resource file.</span></span> <span data-ttu-id="8d489-1637">선택적으로 설정할 수는 <xref:System.Diagnostics.EventInstance.CategoryId%2A> 및 <xref:System.Diagnostics.EventInstance.EntryType%2A> 의 `instance` 에 이벤트 엔트리의 범주 및 이벤트 형식을 정의 하는 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1637">You can optionally set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> and <xref:System.Diagnostics.EventInstance.EntryType%2A> of the `instance` input to define the category and event type of your event entry.</span></span> <span data-ttu-id="8d489-1638">지역화 된 메시지 텍스트에 삽입할 언어 독립적인 문자열의 배열도 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1638">You can also specify an array of language-independent strings to insert into the localized message text.</span></span> <span data-ttu-id="8d489-1639">설정할 `values` 에 `null` 이벤트 메시지 대체 문자열에 대 한 서식 자리 표시자 포함 되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1639">Set `values` to `null` if the event message does not contain formatting placeholders for replacement strings.</span></span>  
  
 <span data-ttu-id="8d489-1640">지정된 된 소스 이벤트 로그에 대 한 사용 하기 전에 등록 해야 <xref:System.Diagnostics.EventLog.WriteEvent%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1640">The specified source must be registered for an event log before using <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span></span> <span data-ttu-id="8d489-1641">로그에 지역화 된 엔트리를 쓰기 위한 지정한 소스를 구성 해야 합니다. 소스 최소한 있어야 메시지 리소스 파일을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1641">The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</span></span>  
  
 <span data-ttu-id="8d489-1642">만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1642">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="8d489-1643">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1643">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-1644">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1644">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-1645">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1645">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-1646">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-1646">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-1647">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1647">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-1648">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1648">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-1649">사용 된 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드 응용 프로그램 이벤트 로그에 직접 문자열 값을 기록 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1649">Use the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method if your application writes string values directly to the event log.</span></span>  
  
 <span data-ttu-id="8d489-1650">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1650">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-1651">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1651">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-1652">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1652">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-1653">다음 예제에서는 기존 이벤트 로그에 정보 이벤트 항목 및 경고 이벤트 엔트리를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1653">The following example writes an informational event entry and a warning event entry to an existing event log.</span></span> <span data-ttu-id="8d489-1654">이벤트 메시지 텍스트는 리소스 식별자를 사용 하 여 리소스 파일에 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1654">The event message text is specified using a resource identifier in a resource file.</span></span> <span data-ttu-id="8d489-1655">해당 리소스 파일이 원본에 대 한 등록 되었다고 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1655">The example assumes the corresponding resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#8](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#8)]
 [!code-csharp[EventLog_WriteEvent#8](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#8)]
 [!code-vb[EventLog_WriteEvent#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#8)]  
  
 <span data-ttu-id="8d489-1656">이 예제에서는 리소스 라이브러리 EventLogMsgs.dll 내장 다음 메시지 텍스트 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1656">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="8d489-1657">메시지 텍스트 파일은 메시지 리소스 파일 생성 되는 원본.</span><span class="sxs-lookup"><span data-stu-id="8d489-1657">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="8d489-1658">메시지 텍스트 파일의 리소스 식별자와 범주, 이벤트 메시지 및 매개 변수 삽입 문자열에 대 한 텍스트를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1658">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-1659"><paramref name="source" /> 값이 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1659">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="8d489-1660">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1660">-or-</span></span> 
<span data-ttu-id="8d489-1661"><paramref name="source" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1661">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8d489-1662">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1662">-or-</span></span> 
 <span data-ttu-id="8d489-1663"><paramref name="instance.InstanceId" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1663"><paramref name="instance.InstanceId" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="8d489-1664">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1664">-or-</span></span> 
 <span data-ttu-id="8d489-1665"><paramref name="values" />의 요소가 256개가 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1665"><paramref name="values" /> has more than 256 elements.</span></span>  
  
<span data-ttu-id="8d489-1666">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1666">-or-</span></span> 
<span data-ttu-id="8d489-1667"><paramref name="values" /> 요소 중 하나가 32766바이트보다 긴 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1667">One of the <paramref name="values" /> elements is longer than 32766 bytes.</span></span>  
  
<span data-ttu-id="8d489-1668">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1668">-or-</span></span> 
<span data-ttu-id="8d489-1669">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1669">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d489-1670"><paramref name="instance" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1670"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-1671">이벤트 로그의 레지스트리 키를 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1671">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-1672">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1672">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="8d489-1673">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1673">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-1674">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1674">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1675">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1675">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="T:System.Diagnostics.EventInstance" />
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public static void WriteEvent (string source, System.Diagnostics.EventInstance instance, byte[] data, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEvent(string source, class System.Diagnostics.EventInstance instance, unsigned int8[] data, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEvent (source As String, instance As EventInstance, data As Byte(), ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEvent(System::String ^ source, System::Diagnostics::EventInstance ^ instance, cli::array &lt;System::Byte&gt; ^ data, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member WriteEvent : string * System.Diagnostics.EventInstance * byte[] * obj[] -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEvent (source, instance, data, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8d489-1676">지정된 컴퓨터의 응용 프로그램에 등록된 이벤트 원본의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1676">The name of the event source registered for the application on the specified computer.</span></span></param>
        <param name="instance"><span data-ttu-id="8d489-1677">지역화된 이벤트 로그 항목을 나타내는 <see cref="T:System.Diagnostics.EventInstance" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1677">An <see cref="T:System.Diagnostics.EventInstance" /> instance that represents a localized event log entry.</span></span></param>
        <param name="data"><span data-ttu-id="8d489-1678">항목과 연관된 이진 데이터를 보유하는 바이트의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1678">An array of bytes that holds the binary data associated with the entry.</span></span></param>
        <param name="values"><span data-ttu-id="8d489-1679">이벤트 로그 항목의 메시지 텍스트로 병합될 문자열의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1679">An array of strings to merge into the message text of the event log entry.</span></span></param>
        <summary><span data-ttu-id="8d489-1680">지정한 등록된 이벤트 소스를 사용하여 지정된 이벤트 데이터, 메시지 대체 문자열 및 관련 이진 데이터가 포함된 이벤트 로그 엔트리를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1680">Writes an event log entry with the given event data, message replacement strings, and associated binary data, and using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d489-1681">이 메서드를 사용 하 여 추가 이벤트 관련 데이터를 사용 하 여 지역화 된 엔트리를 적절 한 로그는 이벤트 원본으로 이미 등록 된 소스를 사용 하 여 이벤트 로그에 쓸입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1681">Use this method to write a localized entry with additional event-specific data to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="8d489-1682">문자열 값이 아니라 리소스 식별자를 사용 하 여 이벤트 속성을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1682">You specify the event properties with resource identifiers rather than string values.</span></span> <span data-ttu-id="8d489-1683">이벤트 뷰어는 원본에 대 한 지역화 된 리소스 파일에서 해당 문자열을 표시 하려면 리소스 식별자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1683">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the source.</span></span> <span data-ttu-id="8d489-1684">리소스 식별자를 사용 하 여 이벤트를 작성 하기 전에 해당 리소스 파일을 사용 하 여 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1684">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="8d489-1685">입력 `instance` 인스턴스 이벤트 메시지 및 속성을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1685">The input `instance` instance specifies the event message and properties.</span></span> <span data-ttu-id="8d489-1686">설정 된 <xref:System.Diagnostics.EventInstance.InstanceId%2A> 의 `instance` 원본 메시지 리소스 파일에 정의 된 메시지에 대 한 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1686">Set the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` input for the defined message in the source message resource file.</span></span> <span data-ttu-id="8d489-1687">선택적으로 설정할 수는 <xref:System.Diagnostics.EventInstance.CategoryId%2A> 및 <xref:System.Diagnostics.EventInstance.EntryType%2A> 의 `instance` 에 이벤트 엔트리의 범주 및 이벤트 형식을 정의 하는 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1687">You can optionally set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> and <xref:System.Diagnostics.EventInstance.EntryType%2A> of the `instance` input to define the category and event type of your event entry.</span></span> <span data-ttu-id="8d489-1688">지역화 된 메시지 텍스트에 삽입할 언어 독립적인 문자열의 배열도 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1688">You can also specify an array of language-independent strings to insert into the localized message text.</span></span> <span data-ttu-id="8d489-1689">설정할 `values` 에 `null` 이벤트 메시지 대체 문자열에 대 한 서식 자리 표시자 포함 되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1689">Set `values` to `null` if the event message does not contain formatting placeholders for replacement strings.</span></span>  
  
 <span data-ttu-id="8d489-1690">이벤트에 대 한 추가 정보를 제공 하는 데 필요한 경우 이벤트를 사용 하 여 이진 데이터를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1690">Specify binary data with an event when it is necessary to provide additional details for the event.</span></span> <span data-ttu-id="8d489-1691">예를 들어, 사용를 `data` 매개 변수를 특정 오류에 대 한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1691">For example, use the `data` parameter to include information on a specific error.</span></span> <span data-ttu-id="8d489-1692">이벤트 뷰어에서 관련된 이벤트 데이터를 해석 하지는 않습니다. 데이터 결합 된 16 진수 및 텍스트 형식으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1692">The Event Viewer does not interpret the associated event data; it displays the data in a combined hexadecimal and text format.</span></span> <span data-ttu-id="8d489-1693">이벤트 관련 데이터를 사용 하 여 제한적입니다. 것이 유용할 수는 경우에이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1693">Use event-specific data sparingly; include it only if you are sure it will be useful.</span></span> <span data-ttu-id="8d489-1694">또한 응용 프로그램 이벤트 뷰어를 독립적으로 처리할 수 정보를 저장할 이벤트 관련 데이터를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1694">You can also use event-specific data to store information the application can process independently of the Event Viewer.</span></span> <span data-ttu-id="8d489-1695">예를 들어, 사용자 이벤트에 대해 특별히 뷰어를 작성 하거나 이벤트 관련 데이터에서 정보를 포함 하는 보고서를 만들고 이벤트 로그를 검색 하는 프로그램을 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1695">For example, you could write a viewer specifically for your events, or write a program that scans the event log and creates reports that include information from the event-specific data.</span></span>  
  
 <span data-ttu-id="8d489-1696">지정된 된 소스 이벤트 로그에 대 한 사용 하기 전에 등록 해야 <xref:System.Diagnostics.EventLog.WriteEvent%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1696">The specified source must be registered for an event log before using <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span></span> <span data-ttu-id="8d489-1697">로그에 지역화 된 엔트리를 쓰기 위한 지정한 소스를 구성 해야 합니다. 소스 최소한 있어야 메시지 리소스 파일을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1697">The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</span></span>  
  
 <span data-ttu-id="8d489-1698">만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1698">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="8d489-1699">응용 프로그램을 설치 하는 동안 새 이벤트 원본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1699">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8d489-1700">이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1700">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="8d489-1701">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1701">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8d489-1702">사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d489-1702">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8d489-1703">새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1703">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8d489-1704">원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1704">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8d489-1705">사용 된 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드 응용 프로그램 이벤트 로그에 직접 문자열 값을 기록 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1705">Use the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method if your application writes string values directly to the event log.</span></span>  
  
 <span data-ttu-id="8d489-1706">응용 프로그램 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1706">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8d489-1707">예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1707">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8d489-1708">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 합니다 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1708">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d489-1709">다음 예제에서는 기존 이벤트 로그에 정보 이벤트 항목 및 경고 이벤트 엔트리를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1709">The following example writes an informational event entry and a warning event entry to an existing event log.</span></span> <span data-ttu-id="8d489-1710">이벤트 메시지 텍스트는 리소스 식별자를 사용 하 여 리소스 파일에 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1710">The event message text is specified using a resource identifier in a resource file.</span></span> <span data-ttu-id="8d489-1711">해당 리소스 파일이 원본에 대 한 등록 되었다고 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1711">The example assumes the corresponding resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#8](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#8)]
 [!code-csharp[EventLog_WriteEvent#8](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#8)]
 [!code-vb[EventLog_WriteEvent#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#8)]  
  
 <span data-ttu-id="8d489-1712">이 예제에서는 리소스 라이브러리 EventLogMsgs.dll 내장 다음 메시지 텍스트 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1712">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="8d489-1713">메시지 텍스트 파일은 메시지 리소스 파일 생성 되는 원본.</span><span class="sxs-lookup"><span data-stu-id="8d489-1713">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="8d489-1714">메시지 텍스트 파일의 리소스 식별자와 범주, 이벤트 메시지 및 매개 변수 삽입 문자열에 대 한 텍스트를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1714">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d489-1715"><paramref name="source" /> 값이 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1715">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="8d489-1716">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1716">-or-</span></span> 
<span data-ttu-id="8d489-1717"><paramref name="source" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1717">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8d489-1718">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1718">-or-</span></span> 
 <span data-ttu-id="8d489-1719"><paramref name="instance.InstanceId" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1719"><paramref name="instance.InstanceId" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="8d489-1720">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1720">-or-</span></span> 
 <span data-ttu-id="8d489-1721"><paramref name="values" />의 요소가 256개가 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1721"><paramref name="values" /> has more than 256 elements.</span></span>  
  
<span data-ttu-id="8d489-1722">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1722">-or-</span></span> 
<span data-ttu-id="8d489-1723"><paramref name="values" /> 요소 중 하나가 32766바이트보다 긴 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1723">One of the <paramref name="values" /> elements is longer than 32766 bytes.</span></span>  
  
<span data-ttu-id="8d489-1724">또는</span><span class="sxs-lookup"><span data-stu-id="8d489-1724">-or-</span></span> 
<span data-ttu-id="8d489-1725">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1725">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d489-1726"><paramref name="instance" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1726"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d489-1727">이벤트 로그의 레지스트리 키를 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8d489-1727">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8d489-1728">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우.</span><span class="sxs-lookup"><span data-stu-id="8d489-1728">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="8d489-1729">Windows 오류 코드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1729">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="8d489-1730">컴퓨터의 이벤트 로그 정보를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d489-1730">for writing the event log information on the computer.</span></span> <span data-ttu-id="8d489-1731">연결 된 열거형: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="8d489-1731">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="T:System.Diagnostics.EventInstance" />
      </Docs>
    </Member>
  </Members>
</Type>