<Type Name="PerformanceCounterType" FullName="System.Diagnostics.PerformanceCounterType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="31188917af63ca23d0aa794354eb56773ccd7b8b" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56780312" /></Metadata><TypeSignature Language="C#" Value="public enum PerformanceCounterType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PerformanceCounterType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounterType" />
  <TypeSignature Language="VB.NET" Value="Public Enum PerformanceCounterType" />
  <TypeSignature Language="C++ CLI" Value="public enum class PerformanceCounterType" />
  <TypeSignature Language="F#" Value="type PerformanceCounterType = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Diagnostics.AlphabeticalEnumConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8d5bd-101"><see cref="M:System.Diagnostics.PerformanceCounter.NextValue" /> 인스턴스의 <see cref="T:System.Diagnostics.PerformanceCounter" /> 메서드를 계산하는 데 사용되는 수식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-101">Specifies the formula used to calculate the <see cref="M:System.Diagnostics.PerformanceCounter.NextValue" /> method for a <see cref="T:System.Diagnostics.PerformanceCounter" /> instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="8d5bd-102">일부 카운터 형식은 하나 이상의 카운터 샘플을 기반으로 하는 계산 된 값을 나타내지만 원시 데이터를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-102">Some counter types represent raw data, while others represent calculated values that are based on one or more counter samples.</span></span> <span data-ttu-id="8d5bd-103">다음 범주에 사용할 수 있는 카운터의 유형을 분류 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-103">The following categories classify the types of counters available.</span></span>  
  
- <span data-ttu-id="8d5bd-104">**평균**: 시간이 지남에 따라 값을 측정 하 고 마지막 두 측정값의 평균을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-104">**Average**: Measures a value over time and displays the average of the last two measurements.</span></span> <span data-ttu-id="8d5bd-105">포함 된 샘플의 수를 추적 하는 기본 카운터는 평균 각 카운터와 관련 된입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-105">Associated with each average counter is a base counter that tracks the number of samples involved.</span></span>  
  
- <span data-ttu-id="8d5bd-106">**차이**: 위의 마지막으로 측정 한 빼고 양수; 이면 차이점 표시 음수 이면 0이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-106">**Difference**: Subtracts the last measurement from the previous one and displays the difference, if it is positive; if negative, it displays a zero.</span></span>  
  
- <span data-ttu-id="8d5bd-107">**즉각적인**: 가장 최근의 측정값을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-107">**Instantaneous**: Displays the most recent measurement.</span></span>  
  
- <span data-ttu-id="8d5bd-108">**백분율**: 백분율로 계산 된 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-108">**Percentage**: Displays calculated values as a percentage.</span></span>  
  
- <span data-ttu-id="8d5bd-109">**속도**: 시간이 지남에 따라는 증가 하는 이벤트 개수를 샘플링 하 고 개수 값의 변경 작업의 비율을 표시 하는 시간에서 변경의 영향을 나눕니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-109">**Rate**: Samples an increasing count of events over time and divides the change in count values by the change in time to display a rate of activity.</span></span>  
  
<span data-ttu-id="8d5bd-110">성능 카운터 데이터를 샘플링 하는 경우 평균을 나타내는 카운터 형식을 사용 하 여 가능 원시 데이터 값 사용에 대 한 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-110">When sampling performance counter data, using a counter type that represents an average can make raw data values meaningful for your use.</span></span> <span data-ttu-id="8d5bd-111">예를 들어, 원시 데이터 카운터 `NumberOfItems64` 는 임의의 샘플에서 샘플 데이터를 노출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-111">For example, the raw data counter `NumberOfItems64` can expose data that is fairly random from sample to sample.</span></span> <span data-ttu-id="8d5bd-112">카운터가 반환 하는 값의 평균을 계산에 대 한 계산 됩니다 (X 0 + X 1 +... + X n) n / X 각 i는 원시 카운터 샘플.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-112">The formula for an average calculation of the values that the counter returns would be (X 0 +X 1 +…+X n)/n, where each X i is a raw counter sample.</span></span>  
  
<span data-ttu-id="8d5bd-113">비율 카운터는 평균 카운터와 유사 하지만 속도 증가 리소스 사용 되는 상황에 더 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-113">Rate counters are similar to average counters, but more useful for situations in which the rate increases as a resource is used.</span></span> <span data-ttu-id="8d5bd-114">신속 하 게 평균을 계산 하는 수식은 ((n-X X 0) / (n-T 0)) / 빈도 X 각 카운터 샘플 및 각 T i는 i 해당 샘플에 수행 된 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-114">A formula that quickly calculates the average is ((X n -X 0)/(T n -T 0)) / frequency, where each X i is a counter sample and each T i is the time that the corresponding sample was taken.</span></span> <span data-ttu-id="8d5bd-115">초당 평균 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-115">The result is the average usage per second.</span></span>  

<span data-ttu-id="8d5bd-116">*Multitimer 카운터* 프로세서 또는 디스크와 같은 구성 요소 인스턴스가 둘 이상에서 데이터를 수집 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-116">*Multitimer counters* collect data from more than one instance of a component, such as a processor or disk.</span></span> 
 
<span data-ttu-id="8d5bd-117">*역 카운터* 구성 요소가 비활성 상태인 시간을 측정 및 측정 값 으로부터 활성 시간을 구합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-117">*Inverse counters* measure the time that a component is not active and derive the active time from that measurement.</span></span>  
 
   
> [!NOTE]
>  <span data-ttu-id="8d5bd-118">지정 하지 않을 경우 기본 시간은 시간 (초)입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-118">Unless otherwise indicated, the time base is seconds.</span></span>  
  
 <span data-ttu-id="8d5bd-119">(만들고 사용자 지정 성능 카운터를 기록할) 애플리케이션을 계측 하는 경우 계산에서 사용 되는 함께 제공 되는 기본 카운터를 사용 하는 성능 카운터 형식으로 작업 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-119">When instrumenting applications (creating and writing custom performance counters), you might be working with performance counter types that rely on an accompanying base counter that is used in the calculations.</span></span> <span data-ttu-id="8d5bd-120">기본 카운터에서 연결된 된 카운터 직후 해야는 <xref:System.Diagnostics.CounterCreationDataCollection> 애플리케이션에서 사용 하는 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-120">The base counter must be immediately after its associated counter in the <xref:System.Diagnostics.CounterCreationDataCollection> collection your application uses.</span></span> <span data-ttu-id="8d5bd-121">다음 표에서 해당 성능 카운터 유형 사용 하는 기본 카운터 목록을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-121">The following table lists the base counter types with their corresponding performance counter types.</span></span>  
  
|<span data-ttu-id="8d5bd-122">기본 카운터 형식</span><span class="sxs-lookup"><span data-stu-id="8d5bd-122">Base counter type</span></span>|<span data-ttu-id="8d5bd-123">성능 카운터 형식</span><span class="sxs-lookup"><span data-stu-id="8d5bd-123">Performance counter types</span></span>|  
|-----------------------|-------------------------------|  
|`AverageBase`|`AverageTimer32`<br /><br /> `AverageCount64`|  
|`CounterMultiBase`|`CounterMultiTimer`<br /><br /> `CounterMultiTimerInverse`<br /><br /> `CounterMultiTimer100Ns`<br /><br /> `CounterMultiTimer100NsInverse`|  
|`RawBase`|`RawFraction`|  
|`SampleBase`|`SampleFraction`|  
  
<span data-ttu-id="8d5bd-124">다음은 계산 된 값을 나타내는 카운터의 일부에서 사용 하는 수식입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-124">The following are the formulas used by some of the counters that represent calculated values:</span></span>

- <span data-ttu-id="8d5bd-125">`AverageCount64`: (N1-N0) /(B1-B0), 여기서 N 1 및 N 0은 성능 카운터 정보 및 B1 및 B0은 해당 `AverageBase` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-125">`AverageCount64`: (N1 - N0)/(B1 - B0), where N 1 and N 0 are performance counter readings, and B1 and B0 are their corresponding `AverageBase` values.</span></span> <span data-ttu-id="8d5bd-126">따라서 분자 샘플 간격 동안 처리 되는 항목 수가 나타내며 분모 샘플 간격 동안 완료 된 작업의 수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-126">Thus, the numerator represents the numbers of items processed during the sample interval, and the denominator represents the number of operations completed during the sample interval.</span></span>   
  
- <span data-ttu-id="8d5bd-127">`AverageTimer32`: ((N1-N0) /F) /(B1-B0), 여기서 N1 고 n0은 성능 카운터 판독값, B1 되며 B0 해당 `AverageBase` 값 및 F는 초당 틱 수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-127">`AverageTimer32`: ((N1 - N0)/F)/(B1 - B0), where N1 and N0 are performance counter readings, B1 and B0 are their corresponding `AverageBase` values, and F is the number of ticks per second.</span></span> <span data-ttu-id="8d5bd-128">F 값은 초 단위로 결과 표시할 수 있도록 수식에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-128">The value of F is factored into the equation so that the result can be displayed in seconds.</span></span> <span data-ttu-id="8d5bd-129">따라서 분자 마지막 샘플 간격 동안 계산 하는 틱 수를 나타내고, F는 눈금의 빈도 나타냅니다 및 분모 마지막 샘플 간격 동안 완료 된 작업의 수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-129">Thus, the numerator represents the numbers of ticks counted during the last sample interval, F represents the frequency of the ticks, and the denominator represents the number of operations completed during the last sample interval.</span></span>

- <span data-ttu-id="8d5bd-130">`CounterDelta32`: N1-N0, N1 고 n0은으로 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-130">`CounterDelta32`: N1 - N0, where N1 and N0 are performance counter readings.</span></span> 

- <span data-ttu-id="8d5bd-131">`CounterDelta64`: N1-N0, N1 고 n0은으로 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-131">`CounterDelta64`: N1 - N0, where N1 and N0 are performance counter readings.</span></span>  

- <span data-ttu-id="8d5bd-132">`CounterMultiTimer`: ((N1-N0) / (D1-D0)) x 100 B, 여기서 N1 고 n0은 성능 카운터 판독값, (d1 및 D0 시스템 성능 타이머의 틱이 해당 시간 판독값 있으며 변수 B는 모니터링 되는 구성에 대 한 기본 수를 나타냅니다 (사용 하 여 ty 기본 카운터 pe `CounterMultiBase`).</span><span class="sxs-lookup"><span data-stu-id="8d5bd-132">`CounterMultiTimer`: ((N1 - N0) / (D1 - D0)) x 100 / B, where N1 and N0 are performance counter readings, D1 and D0 are their corresponding time readings in ticks of the system performance timer, and the variable B denotes the base count for the monitored components (using a base counter of type `CounterMultiBase`).</span></span> <span data-ttu-id="8d5bd-133">따라서 분자 샘플 간격 동안 활성화 된 모니터링 되는 구성 하 고 분모 샘플 기간의 총 경과 시간을 나타내는 부분을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-133">Thus, the numerator represents the portions of the sample interval during which the monitored components were active, and the denominator represents the total elapsed time of the sample interval.</span></span>  

- <span data-ttu-id="8d5bd-134">`CounterMultiTimer100Ns`: ((N1-N0) / (D1-D0)) x 100 / N1 고 n0은 있는 성능 카운터 판독값 (d1 및 D0 B는 100 나노초 단위는 해당 시간 판독값 및 변수 B는 모니터링 되는 구성에 대 한 기본 수를 나타냅니다 (기본 형식의 카운터를사용하여`CounterMultiBase`</c0>).</span><span class="sxs-lookup"><span data-stu-id="8d5bd-134">`CounterMultiTimer100Ns`: ((N1 - N0) / (D1 - D0)) x 100 / B, where N1 and N0 are performance counter readings, D1 and D0 are their corresponding time readings in 100-nanosecond units, and the variable B denotes the base count for the monitored components (using a base counter of type `CounterMultiBase`).</span></span> <span data-ttu-id="8d5bd-135">따라서 분자 샘플 간격 동안 활성화 된 모니터링 되는 구성 하 고 분모 샘플 기간의 총 경과 시간을 나타내는 부분을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-135">Thus, the numerator represents the portions of the sample interval during which the monitored components were active, and the denominator represents the total elapsed time of the sample interval.</span></span>

- <span data-ttu-id="8d5bd-136">`CounterMultiTimer100NsInverse`: (B-((N1-N0) / (D1-D0))) x 100, 분모 샘플 기간의 총 경과 시간을 나타내는 경우 분자 때 시간을 나타냅니다 간격 모니터링 대상된 구성 요소 활성화 했으며 B 모니터링 되는 구성 요소 수를 나타냅니다. 를 기본 형식의 카운터를 사용 하 여 `CounterMultiBase`입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-136">`CounterMultiTimer100NsInverse`: (B - ((N1 - N0) / (D1 - D0))) x 100, where the denominator represents the total elapsed time of the sample interval, the numerator represents the time during the interval when monitored components were inactive, and B represents the number of components being monitored, using a base counter of type `CounterMultiBase`.</span></span>  

- <span data-ttu-id="8d5bd-137">`CounterMultiTimerInverse`: (B-((N1-N0) / (D1-D0))) x 100, 분모 샘플 기간의 총 경과 시간을 나타내는 경우 분자 때 시간을 나타냅니다 간격 모니터링 대상된 구성 요소 활성화 했으며 B 모니터링 되는 구성 요소 수를 나타냅니다. 를 기본 형식의 카운터를 사용 하 여 `CounterMultiBase`입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-137">`CounterMultiTimerInverse`: (B- ((N1 - N0) / (D1 - D0))) x 100, where the denominator represents the total elapsed time of the sample interval, the numerator represents the time during the interval when monitored components were inactive, and B represents the number of components being monitored, using a base counter of type `CounterMultiBase`.</span></span>

- <span data-ttu-id="8d5bd-138">`CounterTimer`: (N1-N0) / (D1-D0), 여기서 N1 고 n0은 성능 카운터 판독값 되며 (d1 및 D0가 해당 시간 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-138">`CounterTimer`: (N1 - N0) / (D1 - D0), where N1 and N0 are performance counter readings, and D1 and D0 are their corresponding time readings.</span></span> <span data-ttu-id="8d5bd-139">따라서 분자 샘플 간격 동안 활성화 된 모니터링 되는 구성 하 고 분모 샘플 기간의 총 경과 시간을 나타내는 부분을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-139">Thus, the numerator represents the portions of the sample interval during which the monitored components were active, and the denominator represents the total elapsed time of the sample interval.</span></span>  

- <span data-ttu-id="8d5bd-140">`CounterTimerInverse`: (1-((N1-N0) / (D1-D0))) x 100, 모니터링 대상된 구성 요소 활성화 되었으며 분모 샘플 기간의 총 경과 시간을 나타내는 경우 분자가 그 간격의 시간을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-140">`CounterTimerInverse`: (1- ((N1 - N0) / (D1 - D0))) x 100, where the numerator represents the time during the interval when the monitored components were inactive, and the denominator represents the total elapsed time of the sample interval.</span></span>  

- <span data-ttu-id="8d5bd-141">`CountPerTimeInterval32`: (N1-N0) / (D1-D0), 마지막 샘플 간격 동안 경과 된 분자 큐의 항목 수를 나타내는 않았고 분모 시간을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-141">`CountPerTimeInterval32`: (N1 - N0) / (D1 - D0), where the numerator represents the number of items in the queue, and the denominator represents the time elapsed during the last sample interval.</span></span>

- <span data-ttu-id="8d5bd-142">`CountPerTimeInterval64`: (N1-N0) / (D1-D0), 샘플 간격 동안 경과 된 분자 큐의 항목 수를 나타내는 않았고 분모 시간을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-142">`CountPerTimeInterval64`: (N1 - N0) / (D1 - D0), where the numerator represents the number of items in a queue and the denominator represents the time elapsed during the sample interval.</span></span>

- <span data-ttu-id="8d5bd-143">`ElapsedTime`: (D0-N0) / F, D0 현재 시간을 나타내는 경우 N0 개체 시작 된 시간을 나타내는 및 F는 1 초에서 경과 된 시간 단위의 수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-143">`ElapsedTime`: (D0 - N0) / F, where D0 represents the current time, N0 represents the time the object was started, and F represents the number of time units that elapse in one second.</span></span> <span data-ttu-id="8d5bd-144">F 값은 초 단위로 결과 표시할 수 있도록 수식에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-144">The value of F is factored into the equation so that the result can be displayed in seconds.</span></span>  
  
- <span data-ttu-id="8d5bd-145">`NumberOfItems32`: 없음</span><span class="sxs-lookup"><span data-stu-id="8d5bd-145">`NumberOfItems32`: None.</span></span> <span data-ttu-id="8d5bd-146">평균을 표시 되지 않지만 수집 된 원시 데이터를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-146">Does not display an average, but shows the raw data as it is collected.</span></span> 

- <span data-ttu-id="8d5bd-147">`NumberOfItems64`: 없음</span><span class="sxs-lookup"><span data-stu-id="8d5bd-147">`NumberOfItems64`: None.</span></span> <span data-ttu-id="8d5bd-148">평균을 표시 되지 않지만 수집 된 원시 데이터를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-148">Does not display an average, but shows the raw data as it is collected.</span></span>

- <span data-ttu-id="8d5bd-149">`NumberOfItemsHEX32`: 없음</span><span class="sxs-lookup"><span data-stu-id="8d5bd-149">`NumberOfItemsHEX32`: None.</span></span> <span data-ttu-id="8d5bd-150">평균을 표시 되지 않지만 수집 된 원시 데이터를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-150">Does not display an average, but shows the raw data as it is collected.</span></span>  

- <span data-ttu-id="8d5bd-151">`NumberOfItemsHEX64`: 없음</span><span class="sxs-lookup"><span data-stu-id="8d5bd-151">`NumberOfItemsHEX64`: None.</span></span> <span data-ttu-id="8d5bd-152">평균을 표시 되지 않지만 수집 되는 원시 데이터를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-152">Does not display an average, but shows the raw data as it is collected</span></span>  
 
- <span data-ttu-id="8d5bd-153">`RateOfCountsPerSecond32`: (N1-N0) / ((D1-D0) / F), 여기서 N1 고 n0은 성능 카운터 정보는, (d1 및 D0가 해당 시간 판독값 되며 F 초당 틱 수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-153">`RateOfCountsPerSecond32`: (N1 - N0) / ((D1 - D0) / F), where N1 and N0 are performance counter readings, D1 and D0 are their corresponding time readings, and F represents the number of ticks per second.</span></span> <span data-ttu-id="8d5bd-154">따라서 분자는 마지막 샘플 기간 동안 경과 된 틱 분모 나타내는 마지막 샘플 간격 동안 수행 된 작업의 수 나타내며 F는 눈금의 빈도입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-154">Thus, the numerator represents the number of operations performed during the last sample interval, the denominator represents the number of ticks elapsed during the last sample interval, and F is the frequency of the ticks.</span></span> <span data-ttu-id="8d5bd-155">F 값은 초 단위로 결과 표시할 수 있도록 수식에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-155">The value of F is factored into the equation so that the result can be displayed in seconds.</span></span>  

- <span data-ttu-id="8d5bd-156">`RateOfCountsPerSecond64`: (N1-N0) / ((D1-D0) / F), 여기서 N1 고 n0은 성능 카운터 정보는, (d1 및 D0가 해당 시간 판독값 되며 F 초당 틱 수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-156">`RateOfCountsPerSecond64`: (N1 - N0) / ((D1 - D0) / F), where N1 and N0 are performance counter readings, D1 and D0 are their corresponding time readings, and F represents the number of ticks per second.</span></span> <span data-ttu-id="8d5bd-157">따라서 분자는 마지막 샘플 기간 동안 경과 된 틱 분모 나타내는 마지막 샘플 간격 동안 수행 된 작업의 수 나타내며 F는 눈금의 빈도입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-157">Thus, the numerator represents the number of operations performed during the last sample interval, the denominator represents the number of ticks elapsed during the last sample interval, and F is the frequency of the ticks.</span></span> <span data-ttu-id="8d5bd-158">F 값은 초 단위로 결과 표시할 수 있도록 수식에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-158">The value of F is factored into the equation so that the result can be displayed in seconds.</span></span>  

- <span data-ttu-id="8d5bd-159">`RawFraction`: (N0 / D0) x 100, 여기서 D0 측정 된 특성을 나타냅니다 (기본 형식의 카운터를 사용 하 여 `RawBase`) n0은 해당 특성의 한 구성 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-159">`RawFraction`: (N0 / D0) x 100, where D0 represents a measured attribute (using a base counter of type `RawBase`) and N0 represents one component of that attribute.</span></span>

- <span data-ttu-id="8d5bd-160">`SampleCounter`: (N1-N0) / ((D1-D0) / F), 여기서 분자 (N) 완료 된 작업의 수, 분모 (D)의 시스템 성능 타이머의 틱 단위로 경과 시간을 나타냅니다 나타내며 F는 1 초에서 경과 된 틱 수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-160">`SampleCounter`: (N1 - N0) / ((D1 - D0) / F), where the numerator (N) represents the number of operations completed, the denominator (D) represents elapsed time in units of ticks of the system performance timer, and F represents the number of ticks that elapse in one second.</span></span> <span data-ttu-id="8d5bd-161">결과 시간 (초)에 표시할 수 있도록 F 수식에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-161">F is factored into the equation so that the result can be displayed in seconds.</span></span>

- <span data-ttu-id="8d5bd-162">`SampleFraction`: ((N1-N0) / (D1-D0)) x 100, 분자 마지막 샘플 간격 동안 성공한 작업 수를 나타내는 분모에는 샘플 간격 동안 완료 (측정 형식)의 모든 작업의 수의 변경을 나타내는 않았고, 형식의 카운터를 사용 하 여 `SampleBase`입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-162">`SampleFraction`: ((N1 - N0) / (D1 - D0)) x 100, where the numerator represents the number of successful operations during the last sample interval, and the denominator represents the change in the number of all operations (of the type measured) completed during the sample interval, using counters of type `SampleBase`.</span></span>

- <span data-ttu-id="8d5bd-163">`Timer100Ns`: (N1-N0) / (D1-D0) x 100, 여기서 분자 모니터링 되는 구성 하는 동안 활성화 된 샘플 간격의 일부 이며 분모 샘플 기간의 총 경과 시간을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-163">`Timer100Ns`: (N1 - N0) / (D1 - D0) x 100, where the numerator represents the portions of the sample interval during which the monitored components were active, and the denominator represents the total elapsed time of the sample interval.</span></span>

- <span data-ttu-id="8d5bd-164">`Timer100NsInverse`: (1-((N1-N0) / (D1-D0))) x 100, 모니터링 대상된 구성 요소 활성화 되었으며 분모 샘플 기간의 총 경과 시간을 나타내는 경우 분자가 그 간격의 시간을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-164">`Timer100NsInverse`: (1- ((N1 - N0) / (D1 - D0))) x 100, where the numerator represents the time during the interval when the monitored components were inactive, and the denominator represents the total elapsed time of the sample interval.</span></span>  

## Examples  
 <span data-ttu-id="8d5bd-165">다음 예제에서는 카운터 형식 중 일부를 보여 줍니다는 <xref:System.Diagnostics.PerformanceCounterType> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-165">The following examples demonstrate several of the counter types in the <xref:System.Diagnostics.PerformanceCounterType> enumeration.</span></span>  
  
 `AverageCount64`  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 `AverageTimer32`  
  
 [!code-cpp[PerformanceCounterType.AverageTimer32#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageTimer32/CPP/averagetimer32.cpp#2)]
 [!code-csharp[PerformanceCounterType.AverageTimer32#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageTimer32/CS/averagetimer32.cs#2)]
 [!code-vb[PerformanceCounterType.AverageTimer32#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageTimer32/VB/averagetimer32.vb#2)]  
  
 `ElapsedTime`  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 `NumberOfItems32`  
  
 [!code-cpp[PerformanceCounterType.NumberOfItems32#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems32/CPP/numberofitems32.cpp#1)]
 [!code-csharp[PerformanceCounterType.NumberOfItems32#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems32/CS/numberofitems32.cs#1)]
 [!code-vb[PerformanceCounterType.NumberOfItems32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems32/VB/numberofitems32.vb#1)]  
  
 `NumberOfItems64`  
  
 [!code-cpp[PerformanceCounterType.NumberOfItems64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems64/CPP/numberofitems64.cpp#1)]
 [!code-csharp[PerformanceCounterType.NumberOfItems64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems64/CS/numberofitems64.cs#1)]
 [!code-vb[PerformanceCounterType.NumberOfItems64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems64/VB/numberofitems64.vb#1)]  
  
 `SampleFraction`  
  
 [!code-csharp[PerformanceCounterType.SampleFraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.SampleFraction/CS/program.cs#1)]
 [!code-vb[PerformanceCounterType.SampleFraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.SampleFraction/VB/program.vb#1)]  
  
 `RateOfCountsPerSecond32`  
  
 [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond/CPP/rateofcountspersecond32.cpp#1)]
 [!code-csharp[PerformanceCounterType.RateOfCountsPerSecond#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond/CS/rateofcountspersecond32.cs#1)]
 [!code-vb[PerformanceCounterType.RateOfCountsPerSecond#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond/VB/rateofcountspersecond32.vb#1)]  
  
 `RateOfCountsPerSecond64`  
  
 [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond64/CPP/rateofcountspersecond64.cpp#1)]
 [!code-csharp[PerformanceCounterType.RateOfCountsPerSecond64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond64/CS/rateofcountspersecond64.cs#1)]
 [!code-vb[PerformanceCounterType.RateOfCountsPerSecond64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond64/VB/rateofcountspersecond64.vb#1)]  
  
 `RawFraction`  
  
 [!code-cpp[PerformanceCounterType.RawFraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.RawFraction/CPP/rawfraction.cpp#1)]
 [!code-csharp[PerformanceCounterType.RawFraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.RawFraction/CS/rawfraction.cs#1)]
 [!code-vb[PerformanceCounterType.RawFraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.RawFraction/VB/rawfraction.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounter" />
  </Docs>
  <Members>
    <Member MemberName="AverageBase">
      <MemberSignature Language="C#" Value="AverageBase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType AverageBase = int32(1073939458)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.AverageBase" />
      <MemberSignature Language="VB.NET" Value="AverageBase" />
      <MemberSignature Language="C++ CLI" Value="AverageBase" />
      <MemberSignature Language="F#" Value="AverageBase = 1073939458" Usage="System.Diagnostics.PerformanceCounterType.AverageBase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1073939458</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-166"><see langword="AverageTimer32" /> 및 <see langword="AverageCount64" />처럼 시간이나 횟수 평균을 계산하는 데 사용되는 기본 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-166">A base counter that is used in the calculation of time or count averages, such as <see langword="AverageTimer32" /> and <see langword="AverageCount64" />.</span></span> <span data-ttu-id="8d5bd-167">"연산 당 시간" 또는 "연산 당 수"를 나타내는 카운터를 계산하는 데 사용되는 분모를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-167">Stores the denominator for calculating a counter to present "time per operation" or "count per operation".</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AverageCount64">
      <MemberSignature Language="C#" Value="AverageCount64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType AverageCount64 = int32(1073874176)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.AverageCount64" />
      <MemberSignature Language="VB.NET" Value="AverageCount64" />
      <MemberSignature Language="C++ CLI" Value="AverageCount64" />
      <MemberSignature Language="F#" Value="AverageCount64 = 1073874176" Usage="System.Diagnostics.PerformanceCounterType.AverageCount64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1073874176</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-168">작업하는 동안에 처리되는 평균 항목 수를 표시하는 평균 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-168">An average counter that shows how many items are processed, on average, during an operation.</span></span> <span data-ttu-id="8d5bd-169">이 형식의 카운터는 완성되는 작업 수에 대한 처리되는 항목의 비율을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-169">Counters of this type display a ratio of the items processed to the number of operations completed.</span></span> <span data-ttu-id="8d5bd-170">이 비율은 마지막 기간 동안 처리되는 항목의 수를 해당 기간 동안 완성되는 작업의 수와 비교하여 계산됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-170">The ratio is calculated by comparing the number of items processed during the last interval to the number of operations completed during the last interval.</span></span> <span data-ttu-id="8d5bd-171">이 형식의 카운터에는 PhysicalDisk\Avg. Disk Bytes/Transfer가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-171">Counters of this type include PhysicalDisk\ Avg. Disk Bytes/Transfer.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AverageTimer32">
      <MemberSignature Language="C#" Value="AverageTimer32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType AverageTimer32 = int32(805438464)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.AverageTimer32" />
      <MemberSignature Language="VB.NET" Value="AverageTimer32" />
      <MemberSignature Language="C++ CLI" Value="AverageTimer32" />
      <MemberSignature Language="F#" Value="AverageTimer32 = 805438464" Usage="System.Diagnostics.PerformanceCounterType.AverageTimer32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>805438464</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-172">프로세스나 작업을 완성하는 데 소요되는 평균 시간을 측정하는 평균 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-172">An average counter that measures the time it takes, on average, to complete a process or operation.</span></span> <span data-ttu-id="8d5bd-173">이 형식의 카운터는 샘플 기간 동안 완성되는 프로세스나 작업의 수에 대한 해당 기간의 총 경과 시간의 비율을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-173">Counters of this type display a ratio of the total elapsed time of the sample interval to the number of processes or operations completed during that time.</span></span> <span data-ttu-id="8d5bd-174">이 카운터 형식은 시스템 시계의 틱을 단위로 하여 시간을 측정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-174">This counter type measures time in ticks of the system clock.</span></span> <span data-ttu-id="8d5bd-175">이 형식의 카운터에는 PhysicalDisk\Avg. Disk sec/Transfer가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-175">Counters of this type include PhysicalDisk\ Avg. Disk sec/Transfer.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CounterDelta32">
      <MemberSignature Language="C#" Value="CounterDelta32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterDelta32 = int32(4195328)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterDelta32" />
      <MemberSignature Language="VB.NET" Value="CounterDelta32" />
      <MemberSignature Language="C++ CLI" Value="CounterDelta32" />
      <MemberSignature Language="F#" Value="CounterDelta32 = 4195328" Usage="System.Diagnostics.PerformanceCounterType.CounterDelta32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4195328</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-176">가장 최근의 두 샘플 기간 사이에 측정된 특성의 변경 내용을 표시하는 차이 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-176">A difference counter that shows the change in the measured attribute between the two most recent sample intervals.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CounterDelta64">
      <MemberSignature Language="C#" Value="CounterDelta64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterDelta64 = int32(4195584)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterDelta64" />
      <MemberSignature Language="VB.NET" Value="CounterDelta64" />
      <MemberSignature Language="C++ CLI" Value="CounterDelta64" />
      <MemberSignature Language="F#" Value="CounterDelta64 = 4195584" Usage="System.Diagnostics.PerformanceCounterType.CounterDelta64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4195584</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-177">가장 최근의 두 샘플 기간 사이에 측정된 특성의 변경 내용을 표시하는 차이 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-177">A difference counter that shows the change in the measured attribute between the two most recent sample intervals.</span></span> <span data-ttu-id="8d5bd-178">큰 값을 수용하기 위해 좀 더 큰 필드를 사용한다는 점을 제외하면 이 카운터 형식은 <see langword="CounterDelta32" /> 카운터 형식과 같습니다. </span><span class="sxs-lookup"><span data-stu-id="8d5bd-178">It is the same as the <see langword="CounterDelta32" /> counter type except that is uses larger fields to accomodate larger values.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiBase">
      <MemberSignature Language="C#" Value="CounterMultiBase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiBase = int32(1107494144)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiBase" />
      <MemberSignature Language="VB.NET" Value="CounterMultiBase" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiBase" />
      <MemberSignature Language="F#" Value="CounterMultiBase = 1107494144" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiBase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1107494144</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-179">샘플링되는 항목의 수를 나타내는 기본 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-179">A base counter that indicates the number of items sampled.</span></span> <span data-ttu-id="8d5bd-180">이 카운터는 여러 개의 유사한 타이밍 항목을 사용하는 경우에 샘플링된 항목들의 평균을 구하는 계산에서 분모로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-180">It is used as the denominator in the calculations to get an average among the items sampled when taking timings of multiple, but similar items.</span></span> <span data-ttu-id="8d5bd-181"><see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" /> 및 <see langword="CounterMultiTimer100NsInverse" />와 함께 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-181">Used with <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, and <see langword="CounterMultiTimer100NsInverse" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiTimer">
      <MemberSignature Language="C#" Value="CounterMultiTimer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiTimer = int32(574686464)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer" />
      <MemberSignature Language="VB.NET" Value="CounterMultiTimer" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiTimer" />
      <MemberSignature Language="F#" Value="CounterMultiTimer = 574686464" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiTimer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>574686464</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-182">하나 이상의 구성 요소에 대한 활성 시간을 샘플 기간의 총 시간에 대한 백분율로 표시하는 백분율 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-182">A percentage counter that displays the active time of one or more components as a percentage of the total time of the sample interval.</span></span> <span data-ttu-id="8d5bd-183">분자는 동시에 작동하는 구성 요소의 활성 시간을 기록하므로 결과 백분율은 100%를 초과할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-183">Because the numerator records the active time of components operating simultaneously, the resulting percentage can exceed 100 percent.</span></span> <span data-ttu-id="8d5bd-184">이 카운터 형식은 100나노초가 아닌 시스템 성능 타이머의 틱을 단위로 하여 시간을 측정한다는 점에서 <see langword="CounterMultiTimer100Ns" />와는 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-184">This counter type differs from <see langword="CounterMultiTimer100Ns" /> in that it measures time in units of ticks of the system performance timer, rather than in 100 nanosecond units.</span></span> <span data-ttu-id="8d5bd-185">이 카운터 형식은 멀티타이머입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-185">This counter type is a multitimer.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiTimer100Ns">
      <MemberSignature Language="C#" Value="CounterMultiTimer100Ns" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiTimer100Ns = int32(575735040)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns" />
      <MemberSignature Language="VB.NET" Value="CounterMultiTimer100Ns" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiTimer100Ns" />
      <MemberSignature Language="F#" Value="CounterMultiTimer100Ns = 575735040" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>575735040</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-186">하나 이상의 구성 요소에 대한 활성 시간을 샘플 기간의 총 시간에 대한 백분율로 표시하는 백분율 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-186">A percentage counter that shows the active time of one or more components as a percentage of the total time of the sample interval.</span></span> <span data-ttu-id="8d5bd-187">이 카운터는 100나노초(ns)를 단위로 하여 시간을 측정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-187">It measures time in 100 nanosecond (ns) units.</span></span> <span data-ttu-id="8d5bd-188">이 카운터 형식은 멀티타이머입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-188">This counter type is a multitimer.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiTimer100NsInverse">
      <MemberSignature Language="C#" Value="CounterMultiTimer100NsInverse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiTimer100NsInverse = int32(592512256)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse" />
      <MemberSignature Language="VB.NET" Value="CounterMultiTimer100NsInverse" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiTimer100NsInverse" />
      <MemberSignature Language="F#" Value="CounterMultiTimer100NsInverse = 592512256" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>592512256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-189">하나 이상의 구성 요소에 대한 활성 시간을 샘플 기간의 총 시간에 대한 백분율로 표시하는 백분율 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-189">A percentage counter that shows the active time of one or more components as a percentage of the total time of the sample interval.</span></span> <span data-ttu-id="8d5bd-190">이 형식의 카운터는 100나노초(ns)를 단위로 하여 시간을 측정하며,</span><span class="sxs-lookup"><span data-stu-id="8d5bd-190">Counters of this type measure time in 100 nanosecond (ns) units.</span></span> <span data-ttu-id="8d5bd-191">구성 요소가 비활성 상태인 시간을 측정한 다음 모니터링되는 개체의 수에 100%를 곱한 값에서 이 시간을 빼서 활성 시간을 구합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-191">They derive the active time by measuring the time that the components were not active and subtracting the result from multiplying 100 percent by the number of objects monitored.</span></span> <span data-ttu-id="8d5bd-192">이 카운터 형식은 멀티타이머와는 정반대입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-192">This counter type is an inverse multitimer.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiTimerInverse">
      <MemberSignature Language="C#" Value="CounterMultiTimerInverse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiTimerInverse = int32(591463680)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse" />
      <MemberSignature Language="VB.NET" Value="CounterMultiTimerInverse" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiTimerInverse" />
      <MemberSignature Language="F#" Value="CounterMultiTimerInverse = 591463680" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>591463680</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-193">하나 이상의 구성 요소에 대한 활성 시간을 샘플 기간의 총 시간에 대한 백분율로 표시하는 백분율 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-193">A percentage counter that shows the active time of one or more components as a percentage of the total time of the sample interval.</span></span> <span data-ttu-id="8d5bd-194">이 카운터는 구성 요소가 비활성 상태인 시간을 측정한 다음 모니터링되는 개체의 수에 100%를 곱한 값에서 이 시간을 빼서 활성 시간을 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-194">It derives the active time by measuring the time that the components were not active and subtracting the result from 100 percent by the number of objects monitored.</span></span> <span data-ttu-id="8d5bd-195">이 카운터 형식은 멀티타이머와는 정반대입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-195">This counter type is an inverse multitimer.</span></span> <span data-ttu-id="8d5bd-196">이는 100나노초가 아닌 시스템 성능 타이머의 틱을 단위로 하여 시간을 측정한다는 점에서 `CounterMultiTimer100NsInverse`와는 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-196">It differs from `CounterMultiTimer100NsInverse` in that it measures time in units of ticks of the system performance timer, rather than in 100 nanosecond units.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CounterTimer">
      <MemberSignature Language="C#" Value="CounterTimer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterTimer = int32(541132032)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterTimer" />
      <MemberSignature Language="VB.NET" Value="CounterTimer" />
      <MemberSignature Language="C++ CLI" Value="CounterTimer" />
      <MemberSignature Language="F#" Value="CounterTimer = 541132032" Usage="System.Diagnostics.PerformanceCounterType.CounterTimer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>541132032</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-197">구성 요소가 활성 상태인 평균 시간을 총 샘플 시간에 대한 백분율로 나타내는 백분율 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-197">A percentage counter that shows the average time that a component is active as a percentage of the total sample time.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CounterTimerInverse">
      <MemberSignature Language="C#" Value="CounterTimerInverse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterTimerInverse = int32(557909248)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterTimerInverse" />
      <MemberSignature Language="VB.NET" Value="CounterTimerInverse" />
      <MemberSignature Language="C++ CLI" Value="CounterTimerInverse" />
      <MemberSignature Language="F#" Value="CounterTimerInverse = 557909248" Usage="System.Diagnostics.PerformanceCounterType.CounterTimerInverse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>557909248</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-198">샘플 기간 동안 관찰되는 활성 시간의 평균 백분율을 표시하는 백분율 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-198">A percentage counter that displays the average percentage of active time observed during sample interval.</span></span> <span data-ttu-id="8d5bd-199">이러한 카운터의 값은 서비스가 비활성 상태인 시간의 백분율을 모니터링한 다음 이 값을 100%에서 빼서 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-199">The value of these counters is calculated by monitoring the percentage of time that the service was inactive and then subtracting that value from 100 percent.</span></span> <span data-ttu-id="8d5bd-200">이 형식은 카운터 형식과는 정반대입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-200">This is an inverse counter type.</span></span> <span data-ttu-id="8d5bd-201">이는 100나노초 단위가 아닌 시스템 성능 타이머의 틱을 단위로 시간을 측정한다는 점을 제외하고 `CounterTimer100NsInv`와는 동일합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-201">It is the same as `CounterTimer100NsInv`, except that it measures time in units of ticks of the system performance timer rather than in 100 nanosecond units.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CountPerTimeInterval32">
      <MemberSignature Language="C#" Value="CountPerTimeInterval32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CountPerTimeInterval32 = int32(4523008)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32" />
      <MemberSignature Language="VB.NET" Value="CountPerTimeInterval32" />
      <MemberSignature Language="C++ CLI" Value="CountPerTimeInterval32" />
      <MemberSignature Language="F#" Value="CountPerTimeInterval32 = 4523008" Usage="System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4523008</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-202">평균 카운터는 시간 경과에 따라 리소스 큐의 평균 길이를 모니터링하도록 설계되었으며,</span><span class="sxs-lookup"><span data-stu-id="8d5bd-202">An average counter designed to monitor the average length of a queue to a resource over time.</span></span> <span data-ttu-id="8d5bd-203">기간별로 나누어진 마지막 두 샘플 기간 중에 관찰되는 큐 길이 간 차이를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-203">It shows the difference between the queue lengths observed during the last two sample intervals divided by the duration of the interval.</span></span> <span data-ttu-id="8d5bd-204">일반적으로 이 형식의 카운터는 큐에 들어와 있거나 대기 중인 항목 수를 추적하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-204">This type of counter is typically used to track the number of items that are queued or waiting.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CountPerTimeInterval64">
      <MemberSignature Language="C#" Value="CountPerTimeInterval64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CountPerTimeInterval64 = int32(4523264)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64" />
      <MemberSignature Language="VB.NET" Value="CountPerTimeInterval64" />
      <MemberSignature Language="C++ CLI" Value="CountPerTimeInterval64" />
      <MemberSignature Language="F#" Value="CountPerTimeInterval64 = 4523264" Usage="System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4523264</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-205">시간 경과에 따라 리소스 큐의 평균 길이를 모니터링하는 평균 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-205">An average counter that monitors the average length of a queue to a resource over time.</span></span> <span data-ttu-id="8d5bd-206">이 형식의 카운터는 기간별로 나누어진 마지막 두 샘플 기간 중에 관찰되는 큐 길이 간 차이를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-206">Counters of this type display the difference between the queue lengths observed during the last two sample intervals, divided by the duration of the interval.</span></span> <span data-ttu-id="8d5bd-207">큰 값을 수용하기 위해 좀 더 큰 필드를 사용한다는 점을 제외하면 이 카운터 형식은 <see langword="CountPerTimeInterval32" />와 같습니다. </span><span class="sxs-lookup"><span data-stu-id="8d5bd-207">This counter type is the same as <see langword="CountPerTimeInterval32" /> except that it uses larger fields to accommodate larger values.</span></span> <span data-ttu-id="8d5bd-208">일반적으로 이 형식의 카운터는 큐에 들어와 있거나 대기 중인 대용량 또는 다수의 항목을 추적하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-208">This type of counter is typically used to track a high-volume or very large number of items that are queued or waiting.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ElapsedTime">
      <MemberSignature Language="C#" Value="ElapsedTime" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType ElapsedTime = int32(807666944)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.ElapsedTime" />
      <MemberSignature Language="VB.NET" Value="ElapsedTime" />
      <MemberSignature Language="C++ CLI" Value="ElapsedTime" />
      <MemberSignature Language="F#" Value="ElapsedTime = 807666944" Usage="System.Diagnostics.PerformanceCounterType.ElapsedTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>807666944</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-209">구성 요소나 프로세스가 시작된 시간과 이 값이 계산되는 시간 간의 총 시간을 표시하는 차이 타이머입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-209">A difference timer that shows the total time between when the component or process started and the time when this value is calculated.</span></span> <span data-ttu-id="8d5bd-210">이 형식의 카운터에는 System\System Up Time이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-210">Counters of this type include System\ System Up Time.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NumberOfItems32">
      <MemberSignature Language="C#" Value="NumberOfItems32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType NumberOfItems32 = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" />
      <MemberSignature Language="VB.NET" Value="NumberOfItems32" />
      <MemberSignature Language="C++ CLI" Value="NumberOfItems32" />
      <MemberSignature Language="F#" Value="NumberOfItems32 = 65536" Usage="System.Diagnostics.PerformanceCounterType.NumberOfItems32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-211">가장 최근에 관찰된 값을 표시하는 순간 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-211">An instantaneous counter that shows the most recently observed value.</span></span> <span data-ttu-id="8d5bd-212">예를 들어, 항목 또는 연산의 단순한 수를 유지하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-212">Used, for example, to maintain a simple count of items or operations.</span></span> <span data-ttu-id="8d5bd-213">이 형식의 카운터에는 Memory\Available Bytes가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-213">Counters of this type include Memory\Available Bytes.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NumberOfItems64">
      <MemberSignature Language="C#" Value="NumberOfItems64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType NumberOfItems64 = int32(65792)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.NumberOfItems64" />
      <MemberSignature Language="VB.NET" Value="NumberOfItems64" />
      <MemberSignature Language="C++ CLI" Value="NumberOfItems64" />
      <MemberSignature Language="F#" Value="NumberOfItems64 = 65792" Usage="System.Diagnostics.PerformanceCounterType.NumberOfItems64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>65792</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-214">가장 최근에 관찰된 값을 표시하는 순간 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-214">An instantaneous counter that shows the most recently observed value.</span></span> <span data-ttu-id="8d5bd-215">예를 들어, 매우 많은 항목 또는 연산의 단순한 수를 유지하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-215">Used, for example, to maintain a simple count of a very large number of items or operations.</span></span> <span data-ttu-id="8d5bd-216">큰 값을 수용하기 위해 좀 더 큰 필드를 사용한다는 점을 제외하면 이 카운터 형식은 <see langword="NumberOfItems32" />와 같습니다. </span><span class="sxs-lookup"><span data-stu-id="8d5bd-216">It is the same as <see langword="NumberOfItems32" /> except that it uses larger fields to accommodate larger values.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NumberOfItemsHEX32">
      <MemberSignature Language="C#" Value="NumberOfItemsHEX32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType NumberOfItemsHEX32 = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32" />
      <MemberSignature Language="VB.NET" Value="NumberOfItemsHEX32" />
      <MemberSignature Language="C++ CLI" Value="NumberOfItemsHEX32" />
      <MemberSignature Language="F#" Value="NumberOfItemsHEX32 = 0" Usage="System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-217">가장 최근에 관찰된 값을 16진수 형식으로 표시하는 순간 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-217">An instantaneous counter that shows the most recently observed value in hexadecimal format.</span></span> <span data-ttu-id="8d5bd-218">예를 들어, 항목 또는 연산의 단순한 수를 유지하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-218">Used, for example, to maintain a simple count of items or operations.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NumberOfItemsHEX64">
      <MemberSignature Language="C#" Value="NumberOfItemsHEX64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType NumberOfItemsHEX64 = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64" />
      <MemberSignature Language="VB.NET" Value="NumberOfItemsHEX64" />
      <MemberSignature Language="C++ CLI" Value="NumberOfItemsHEX64" />
      <MemberSignature Language="F#" Value="NumberOfItemsHEX64 = 256" Usage="System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-219">가장 최근에 관찰된 값을 표시하는 순간 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-219">An instantaneous counter that shows the most recently observed value.</span></span> <span data-ttu-id="8d5bd-220">예를 들어, 매우 많은 항목 또는 연산의 단순한 수를 유지하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-220">Used, for example, to maintain a simple count of a very large number of items or operations.</span></span> <span data-ttu-id="8d5bd-221">큰 값을 수용하기 위해 좀 더 큰 필드를 사용한다는 점을 제외하면 이 카운터 형식은 <see langword="NumberOfItemsHEX32" />와 같습니다. </span><span class="sxs-lookup"><span data-stu-id="8d5bd-221">It is the same as <see langword="NumberOfItemsHEX32" /> except that it uses larger fields to accommodate larger values.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="RateOfCountsPerSecond32">
      <MemberSignature Language="C#" Value="RateOfCountsPerSecond32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType RateOfCountsPerSecond32 = int32(272696320)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32" />
      <MemberSignature Language="VB.NET" Value="RateOfCountsPerSecond32" />
      <MemberSignature Language="C++ CLI" Value="RateOfCountsPerSecond32" />
      <MemberSignature Language="F#" Value="RateOfCountsPerSecond32 = 272696320" Usage="System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>272696320</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-222">샘플 기간에 초 당 완성되는 평균 작업 수를 표시하는 차이 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-222">A difference counter that shows the average number of operations completed during each second of the sample interval.</span></span> <span data-ttu-id="8d5bd-223">이 형식의 카운터는 시스템 시계의 틱을 단위로 하여 시간을 측정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-223">Counters of this type measure time in ticks of the system clock.</span></span> <span data-ttu-id="8d5bd-224">이 형식의 카운터에는 System\File Read Operations/sec가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-224">Counters of this type include System\ File Read Operations/sec.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="RateOfCountsPerSecond64">
      <MemberSignature Language="C#" Value="RateOfCountsPerSecond64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType RateOfCountsPerSecond64 = int32(272696576)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64" />
      <MemberSignature Language="VB.NET" Value="RateOfCountsPerSecond64" />
      <MemberSignature Language="C++ CLI" Value="RateOfCountsPerSecond64" />
      <MemberSignature Language="F#" Value="RateOfCountsPerSecond64 = 272696576" Usage="System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>272696576</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-225">샘플 기간에 초 당 완성되는 평균 작업 수를 표시하는 차이 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-225">A difference counter that shows the average number of operations completed during each second of the sample interval.</span></span> <span data-ttu-id="8d5bd-226">이 형식의 카운터는 시스템 시계의 틱을 단위로 하여 시간을 측정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-226">Counters of this type measure time in ticks of the system clock.</span></span> <span data-ttu-id="8d5bd-227">이 카운터 형식은 <see langword="RateOfCountsPerSecond32" /> 형식과 같지만 큰 값을 수용하기 위해 좀 더 큰 필드를 사용하여 초 당 많은 수의 항목 또는 작업을 추적합니다(예: 바이트 전송률).</span><span class="sxs-lookup"><span data-stu-id="8d5bd-227">This counter type is the same as the <see langword="RateOfCountsPerSecond32" /> type, but it uses larger fields to accommodate larger values to track a high-volume number of items or operations per second, such as a byte-transmission rate.</span></span> <span data-ttu-id="8d5bd-228">이 형식의 카운터에는 System\File Read Bytes/sec가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-228">Counters of this type include System\ File Read Bytes/sec.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="RawBase">
      <MemberSignature Language="C#" Value="RawBase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType RawBase = int32(1073939459)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.RawBase" />
      <MemberSignature Language="VB.NET" Value="RawBase" />
      <MemberSignature Language="C++ CLI" Value="RawBase" />
      <MemberSignature Language="F#" Value="RawBase = 1073939459" Usage="System.Diagnostics.PerformanceCounterType.RawBase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1073939459</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-229">일반 산술 분수를 제공하는 카운터의 분모를 저장하는 기본 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-229">A base counter that stores the denominator of a counter that presents a general arithmetic fraction.</span></span> <span data-ttu-id="8d5bd-230">해당 값을 분모로 사용하여 <see langword="RawFraction" /> 값을 계산하려는 경우 이 값이 0보다 커야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-230">Check that this value is greater than zero before using it as the denominator in a <see langword="RawFraction" /> value calculation.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="RawFraction">
      <MemberSignature Language="C#" Value="RawFraction" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType RawFraction = int32(537003008)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.RawFraction" />
      <MemberSignature Language="VB.NET" Value="RawFraction" />
      <MemberSignature Language="C++ CLI" Value="RawFraction" />
      <MemberSignature Language="F#" Value="RawFraction = 537003008" Usage="System.Diagnostics.PerformanceCounterType.RawFraction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>537003008</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-231">해당 집합에 대한 하위 집합의 비율을 백분율로 표시하는 순간 백분율 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-231">An instantaneous percentage counter that shows the ratio of a subset to its set as a percentage.</span></span> <span data-ttu-id="8d5bd-232">예를 들어, 이 카운터는 디스크에서 사용되는 바이트 수를 디스크에 있는 총 바이트 수와 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-232">For example, it compares the number of bytes in use on a disk to the total number of bytes on the disk.</span></span> <span data-ttu-id="8d5bd-233">이 형식의 카운터는 현재 백분율만 표시하며 시간 경과에 따른 평균은 표시하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-233">Counters of this type display the current percentage only, not an average over time.</span></span> <span data-ttu-id="8d5bd-234">이 형식의 카운터에는 Paging File\\% Usage Peak이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-234">Counters of this type include Paging File\\% Usage Peak.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SampleBase">
      <MemberSignature Language="C#" Value="SampleBase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType SampleBase = int32(1073939457)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.SampleBase" />
      <MemberSignature Language="VB.NET" Value="SampleBase" />
      <MemberSignature Language="C++ CLI" Value="SampleBase" />
      <MemberSignature Language="F#" Value="SampleBase = 1073939457" Usage="System.Diagnostics.PerformanceCounterType.SampleBase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1073939457</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-235">샘플링한 샘플링 인터럽트의 수를 저장하며 샘플링 분수에서 분모로 사용되는 기본 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-235">A base counter that stores the number of sampling interrupts taken and is used as a denominator in the sampling fraction.</span></span> <span data-ttu-id="8d5bd-236">샘플링 분수는 샘플 인터럽트가1(또는 <see langword="true" />)인 샘플의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-236">The sampling fraction is the number of samples that were 1 (or <see langword="true" />) for a sample interrupt.</span></span> <span data-ttu-id="8d5bd-237">해당 값을 분모로 사용하여 <see langword="SampleFraction" />을 계산하려는 경우 이 값이 0보다 커야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-237">Check that this value is greater than zero before using it as the denominator in a calculation of <see langword="SampleFraction" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SampleCounter">
      <MemberSignature Language="C#" Value="SampleCounter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType SampleCounter = int32(4260864)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.SampleCounter" />
      <MemberSignature Language="VB.NET" Value="SampleCounter" />
      <MemberSignature Language="C++ CLI" Value="SampleCounter" />
      <MemberSignature Language="F#" Value="SampleCounter = 4260864" Usage="System.Diagnostics.PerformanceCounterType.SampleCounter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4260864</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-238">초 당 완성되는 평균 작업 수를 표시하는 평균 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-238">An average counter that shows the average number of operations completed in one second.</span></span> <span data-ttu-id="8d5bd-239">이 형식의 카운터가 데이터를 샘플링할 때 각 샘플링 인터럽트가 1 또는 0을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-239">When a counter of this type samples the data, each sampling interrupt returns one or zero.</span></span> <span data-ttu-id="8d5bd-240">카운터 데이터는 샘플링된 데이터 수입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-240">The counter data is the number of ones that were sampled.</span></span> <span data-ttu-id="8d5bd-241">이는 시스템 성능 타이머의 틱을 단위로 하여 시간을 측정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-241">It measures time in units of ticks of the system performance timer.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SampleFraction">
      <MemberSignature Language="C#" Value="SampleFraction" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType SampleFraction = int32(549585920)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.SampleFraction" />
      <MemberSignature Language="VB.NET" Value="SampleFraction" />
      <MemberSignature Language="C++ CLI" Value="SampleFraction" />
      <MemberSignature Language="F#" Value="SampleFraction = 549585920" Usage="System.Diagnostics.PerformanceCounterType.SampleFraction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>549585920</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-242">마지막 두 샘플 기간 동안의 모든 작업에 대한 평균 적중 비율을 표시하는 백분율 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-242">A percentage counter that shows the average ratio of hits to all operations during the last two sample intervals.</span></span> <span data-ttu-id="8d5bd-243">이 형식의 카운터에는 Cache\Pin Read Hits %가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-243">Counters of this type include Cache\Pin Read Hits %.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Timer100Ns">
      <MemberSignature Language="C#" Value="Timer100Ns" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType Timer100Ns = int32(542180608)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.Timer100Ns" />
      <MemberSignature Language="VB.NET" Value="Timer100Ns" />
      <MemberSignature Language="C++ CLI" Value="Timer100Ns" />
      <MemberSignature Language="F#" Value="Timer100Ns = 542180608" Usage="System.Diagnostics.PerformanceCounterType.Timer100Ns" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>542180608</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-244">구성 요소의 활성 시간을 샘플 기간의 총 경과 시간에 대한 백분율로 표시하는 백분율 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-244">A percentage counter that shows the active time of a component as a percentage of the total elapsed time of the sample interval.</span></span> <span data-ttu-id="8d5bd-245">이 카운터는 100나노초(ns)를 단위로 하여 시간을 측정합니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-245">It measures time in units of 100 nanoseconds (ns).</span></span> <span data-ttu-id="8d5bd-246">이 형식의 카운터는 한 번에 하나의 구성 요소에 대한 작업을 측정하도록 설계되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-246">Counters of this type are designed to measure the activity of one component at a time.</span></span> <span data-ttu-id="8d5bd-247">이 형식의 카운터에는 Processor\% User Time이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-247">Counters of this type include Processor\ % User Time.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Timer100NsInverse">
      <MemberSignature Language="C#" Value="Timer100NsInverse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType Timer100NsInverse = int32(558957824)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.Timer100NsInverse" />
      <MemberSignature Language="VB.NET" Value="Timer100NsInverse" />
      <MemberSignature Language="C++ CLI" Value="Timer100NsInverse" />
      <MemberSignature Language="F#" Value="Timer100NsInverse = 558957824" Usage="System.Diagnostics.PerformanceCounterType.Timer100NsInverse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>558957824</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d5bd-248">샘플 기간 동안 관찰되는 활성 시간의 평균 백분율을 표시하는 백분율 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-248">A percentage counter that shows the average percentage of active time observed during the sample interval.</span></span> <span data-ttu-id="8d5bd-249">이는 역 카운터입니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-249">This is an inverse counter.</span></span> <span data-ttu-id="8d5bd-250">이 형식의 카운터에는 Processor\% Processor Time이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="8d5bd-250">Counters of this type include Processor\ % Processor Time.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>