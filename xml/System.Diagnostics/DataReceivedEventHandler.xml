<Type Name="DataReceivedEventHandler" FullName="System.Diagnostics.DataReceivedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5547cfd812823bc4784c80d4d1f24c3e6767adfd" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58684323" /></Metadata><TypeSignature Language="C#" Value="public delegate void DataReceivedEventHandler(object sender, DataReceivedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DataReceivedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DataReceivedEventHandler(sender As Object, e As DataReceivedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DataReceivedEventHandler(System::Object ^ sender, DataReceivedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type DataReceivedEventHandler = delegate of obj * DataReceivedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Diagnostics.DataReceivedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="7c395-101">이벤트 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="7c395-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="7c395-102">이벤트 데이터를 포함하는 <see cref="T:System.Diagnostics.DataReceivedEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7c395-102">A <see cref="T:System.Diagnostics.DataReceivedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="7c395-103"><see cref="E:System.Diagnostics.Process.OutputDataReceived" />의 <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> 이벤트 또는 <see cref="T:System.Diagnostics.Process" /> 이벤트를 처리할 메서드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="7c395-103">Represents the method that will handle the <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> event or <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> event of a <see cref="T:System.Diagnostics.Process" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c395-104"><xref:System.Diagnostics.DataReceivedEventHandler> 대리자를 만들 때, 이벤트를 처리할 메서드를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="7c395-104">When you create a <xref:System.Diagnostics.DataReceivedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="7c395-105">이벤트를 이벤트 처리기와 연결하려면 대리자의 인스턴스를 해당 이벤트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="7c395-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="7c395-106">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7c395-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="7c395-107">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7c395-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="7c395-108">비동기적으로 리디렉션된를 수집 하려면 <xref:System.Diagnostics.Process.StandardOutput%2A> 나 <xref:System.Diagnostics.Process.StandardError%2A> 프로세스의 출력 스트림, 이벤트 처리기를 추가 합니다 <xref:System.Diagnostics.Process.OutputDataReceived> 또는 <xref:System.Diagnostics.Process.ErrorDataReceived> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="7c395-108">To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, add your event handler to the <xref:System.Diagnostics.Process.OutputDataReceived> or <xref:System.Diagnostics.Process.ErrorDataReceived> event.</span></span> <span data-ttu-id="7c395-109">이러한 이벤트는 프로세스에서는 해당 리디렉션된 스트림에 줄 기록 될 때마다 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="7c395-109">These events are raised each time the process writes a line to the corresponding redirected stream.</span></span> <span data-ttu-id="7c395-110">리디렉션된 스트림이 닫힐 때 null 줄 이벤트 처리기에 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7c395-110">When the redirected stream is closed, a null line is sent to the event handler.</span></span> <span data-ttu-id="7c395-111">이벤트 처리기에 액세스 하기 전에이 조건에 대 한 검사는 확인 된 <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="7c395-111">Ensure that your event handler checks for this condition before accessing the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property.</span></span> <span data-ttu-id="7c395-112">예를 들어 사용할 수 있습니다 합니다 `static` 메서드 <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> 유효성을 검사 하는 <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> 이벤트 처리기의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="7c395-112">For example, you can use the `static` method <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c395-113">다음 코드 예제에서는 리디렉션된에 대해 비동기 읽기 작업을 수행 하는 방법을 보여 줍니다 <xref:System.Diagnostics.Process.StandardOutput%2A> 스트림의 합니다 **정렬** 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="7c395-113">The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the **sort** command.</span></span> <span data-ttu-id="7c395-114">합니다 **정렬** 명령 읽고 텍스트 입력을 정렬 하는 콘솔 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="7c395-114">The **sort** command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="7c395-115">만듭니다는 <xref:System.Diagnostics.DataReceivedEventHandler> 에 대 한 대리자를 `SortOutputHandler` 이벤트 처리기 사용 하 여 대리자를 연결 하 고는 <xref:System.Diagnostics.Process.OutputDataReceived> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="7c395-115">The example creates a <xref:System.Diagnostics.DataReceivedEventHandler> delegate for the `SortOutputHandler` event handler and associates the delegate with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="7c395-116">이벤트 처리기에서 리디렉션된 텍스트 줄을 받아서 <xref:System.Diagnostics.Process.StandardOutput%2A> 스트림에 텍스트의 서식을 지정 하 고 화면에 텍스트를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="7c395-116">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventArgs" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
</Type>