<Type Name="Switch" FullName="System.Diagnostics.Switch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de79450517f2fd4434121900b84d3dbfad97e9c0" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58700024" /></Metadata><TypeSignature Language="C#" Value="public abstract class Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Switch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Switch" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Switch abstract" />
  <TypeSignature Language="F#" Value="type Switch = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8b781-101">디버깅 및 추적 스위치를 새로 만들기 위한 추상 기본 클래스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-101">Provides an abstract base class to create new debugging and tracing switches.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b781-102">스위치를 외부 설정을 사용 하 여 런타임에 추적 및 디버깅 출력을 제어 하는 것에 대 한 효율적인 메커니즘을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-102">A switch provides an efficient mechanism for controlling tracing and debugging output at run time using external settings.</span></span> <span data-ttu-id="8b781-103"><xref:System.Diagnostics.Switch> 스위치의 경우 스위치 수준 런타임에 변경할 수 있도록 기본 동작을 구현 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-103">The <xref:System.Diagnostics.Switch> class implements default behavior for switches, allowing you to change the switch level at run time.</span></span>  
  
 <span data-ttu-id="8b781-104">이 클래스는 기본 클래스를 <xref:System.Diagnostics.BooleanSwitch>, <xref:System.Diagnostics.SourceSwitch> 및 <xref:System.Diagnostics.TraceSwitch> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-104">This class is the base class for the <xref:System.Diagnostics.BooleanSwitch>, <xref:System.Diagnostics.SourceSwitch> and the <xref:System.Diagnostics.TraceSwitch> classes.</span></span> <span data-ttu-id="8b781-105">이러한 스위치는 대부분의 디버깅 및 추적 요구 사항을 충족 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-105">These switches meet most debugging and tracing needs.</span></span> <span data-ttu-id="8b781-106">추적 스위치에 대 한 자세한 내용은 참조 하세요. [추적 스위치](~/docs/framework/debug-trace-profile/trace-switches.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-106">For more information about trace switches, see [Trace Switches](~/docs/framework/debug-trace-profile/trace-switches.md).</span></span>  
  
 <span data-ttu-id="8b781-107">추적 또는 디버깅 스위치를 사용 하도록 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-107">You must enable tracing or debugging to use a switch.</span></span> <span data-ttu-id="8b781-108">다음 구문은 특정 컴파일러입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-108">The following syntax is compiler specific.</span></span> <span data-ttu-id="8b781-109">C# 또는 Visual Basic 이외의 컴파일러를 사용 하면 컴파일러에 대 한 설명서를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-109">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="8b781-110">C# 디버깅을 사용 하려면 다음을 추가 합니다 `/d:DEBUG` 플래그를 추가할 수 있습니다 하거나 코드를 컴파일할 때 컴파일러 명령줄 `#define DEBUG` 파일의 맨 위로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-110">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="8b781-111">Visual Basic에서 추가 된 `/d:DEBUG=True` 컴파일러 명령줄 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-111">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="8b781-112">C#에서 사용 하 여 추적을 사용 하도록 설정 하려면 추가 합니다 `/d:TRACE` 코드를 컴파일할 때 컴파일러 명령줄 플래그 `#define TRACE` 파일의 맨 위로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-112">To enable tracing using in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="8b781-113">Visual Basic에서 추가 된 `/d:TRACE=True` 컴파일러 명령줄 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-113">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="8b781-114">스위치의 수준을 설정 하려면 응용 프로그램의 이름에 해당 하는 구성 파일을 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-114">To set the level of your switch, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="8b781-115">이 파일에서 스위치를 추가 하 고 해당 값을 설정, 스위치를 제거 하거나 지울 수 스위치 응용 프로그램에서 이전에 설정한 모든 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-115">Within this file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application.</span></span> <span data-ttu-id="8b781-116">다음 예제와 같이 구성 파일의 형식은 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-116">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="true" />  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="8b781-117">이 예제에서는 구성 섹션 정의 <xref:System.Diagnostics.BooleanSwitch> 사용 하 여는 <xref:System.Diagnostics.Switch.DisplayName%2A> 속성이로 설정 `mySwitch` 하며 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 값으로 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-117">This example configuration section defines a <xref:System.Diagnostics.BooleanSwitch> with the <xref:System.Diagnostics.Switch.DisplayName%2A> property set to `mySwitch` and the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> value set to `true`.</span></span> <span data-ttu-id="8b781-118">애플리케이션 내에서 만들어 구성 된 스위치 값을 사용할 수 있습니다는 <xref:System.Diagnostics.BooleanSwitch> 다음 코드 예제와 같이 동일한 이름을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-118">Within your application, you can use the configured switch value by creating a <xref:System.Diagnostics.BooleanSwitch> with the same name, as shown in the following code example.</span></span>  
  
 [!code-cpp[Classic Switch Example#4](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Switch Example/CPP/remarks.cpp#4)]
 [!code-csharp[Classic Switch Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Switch Example/CS/remarks.cs#4)]  
  
   
  
## Examples  
 <span data-ttu-id="8b781-119">다음 예제에서는 새 정의 하는 방법을 보여 줍니다 <xref:System.Diagnostics.Switch> 호출 스택 추적을 사용할 수 있는 추적 수준이 4 인 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-119">The following example shows how to define a new <xref:System.Diagnostics.Switch> class with four levels of tracing that can be used to trace a call stack.</span></span> <span data-ttu-id="8b781-120">계측 메서드 때마다 로그인 하도록 응용 프로그램 시작 되거나 종료 스위치를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-120">You can use the switch to instrument your application to log each time the method is entered or exited.</span></span>  
  
 <span data-ttu-id="8b781-121">첫 번째 예에서는 스위치의 수준을 설정 하는 데 사용 하는 열거형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-121">The first example creates the enumeration used to set the level of the switch.</span></span>  
  
 [!code-cpp[Classic Switch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Switch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Switch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Switch Example/CS/source.cs#1)]
 [!code-vb[Classic Switch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Switch Example/VB/source.vb#1)]  
  
 <span data-ttu-id="8b781-122">다음 예제에서는 새 스위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-122">The following example creates the new switch.</span></span> <span data-ttu-id="8b781-123">코드를 구현 하는 `Level` 새 스위치의 값을 설정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-123">The code implements a `Level` property to set the value of the new switch.</span></span> <span data-ttu-id="8b781-124">`Level` 보호 된 속성을 호출 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 새 스위치에 값을 할당 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-124">`Level` calls the protected property <xref:System.Diagnostics.Switch.SwitchSetting%2A> that assigns the value to the new switch.</span></span> <span data-ttu-id="8b781-125">또한이 예제에서는 스위치의 할당 된 값을 가져올 두 접근자 속성을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-125">This example also implements two assessor properties to get the assigned value of the switch.</span></span>  
  
 [!code-cpp[Classic Switch Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Switch Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Switch Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Switch Example/CS/source.cs#2)]
 [!code-vb[Classic Switch Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Switch Example/VB/source.vb#2)]  
  
 <span data-ttu-id="8b781-126">다음 예제에서 새 스위치인 `Main`합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-126">The following example creates a new switch in `Main`.</span></span> <span data-ttu-id="8b781-127">새 스위치를 만들고 값을 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-127">It creates a new switch and assigns it a value.</span></span> <span data-ttu-id="8b781-128">그런 다음 스위치 설정에 따라 디버깅 메시지를 입력 하 고 메서드 종료를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-128">Then, depending on the switch settings, it outputs debugging messages for entering and leaving the method.</span></span>  
  
 [!code-cpp[Classic Switch Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Switch Example/CPP/source.cpp#3)]
 [!code-csharp[Classic Switch Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Switch Example/CS/source.cs#3)]
 [!code-vb[Classic Switch Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Switch Example/VB/source.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="8b781-129">추적 수준이 필요한 경우 메커니즘 설정에 대 한 스위치에서 제공 하는 것과 다른 수준을 <see cref="T:System.Diagnostics.BooleanSwitch" />, <see cref="T:System.Diagnostics.SourceSwitch" /> 하 고 <see cref="T:System.Diagnostics.TraceSwitch" />에서 상속할 수 있습니다 <see cref="T:System.Diagnostics.Switch" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-129">If you need trace levels, or mechanisms for setting switch levels different from those provided by <see cref="T:System.Diagnostics.BooleanSwitch" />, <see cref="T:System.Diagnostics.SourceSwitch" /> and <see cref="T:System.Diagnostics.TraceSwitch" />, you can inherit from <see cref="T:System.Diagnostics.Switch" />.</span></span> <span data-ttu-id="8b781-130">이 클래스에서 상속 하는 경우 구현 해야 합니다는 <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8b781-130">When inheriting from this class, you must implement the <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> method.</span></span></para></block>
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
    <related type="Article" href="https://msdn.microsoft.com/library/8ab913aa-f400-4406-9436-f45bc6e54fbe"><span data-ttu-id="8b781-131">추적 스위치</span><span class="sxs-lookup"><span data-stu-id="8b781-131">Trace Switches</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b781-132"><see cref="T:System.Diagnostics.Switch" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-132">Initializes a new instance of the <see cref="T:System.Diagnostics.Switch" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Switch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Switch(System::String ^ displayName, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Switch : string * string -&gt; System.Diagnostics.Switch" Usage="new System.Diagnostics.Switch (displayName, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName"><span data-ttu-id="8b781-133">스위치의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-133">The name of the switch.</span></span></param>
        <param name="description"><span data-ttu-id="8b781-134">스위치에 대한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-134">The description for the switch.</span></span></param>
        <summary><span data-ttu-id="8b781-135"><see cref="T:System.Diagnostics.Switch" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-135">Initializes a new instance of the <see cref="T:System.Diagnostics.Switch" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b781-136">새로 만들 때 <xref:System.Diagnostics.Switch> 값, 개체는 `displayName` 매개 변수는 초기 스위치 설정을 찾는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-136">When you create a new <xref:System.Diagnostics.Switch> object, the value of the `displayName` parameter is used to find initial switch settings.</span></span> <span data-ttu-id="8b781-137">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-137">The default value is an empty string ("").</span></span>  
  
 <span data-ttu-id="8b781-138">XML 구성 파일에서 스위치를 추가 하 고 해당 값을 설정, 스위치를 제거 하거나 지울 수 스위치 응용 프로그램에서 이전에 설정한 모든 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-138">Within the XML configuration file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application.</span></span> <span data-ttu-id="8b781-139">응용 프로그램이 실행 되는 동안에 구성 파일에 동적 변경 내용은 검색 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-139">Dynamic changes to the configuration file are not detected while the application is executing.</span></span> <span data-ttu-id="8b781-140">중지 하 고 구성 파일에 변경 내용을 적용 하려면 응용 프로그램을 다시 시작 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-140">You must stop and restart an application before changes to the configuration file take effect.</span></span> <span data-ttu-id="8b781-141">다음 예제와 같이 구성 파일의 형식은 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-141">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="10" />  
      <add name="myNewSwitch" value="20" />  
      <remove name="mySwitch" />  
      <clear/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8b781-142">스위치의 값을 설정 하려면 설정의 <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> 생성자에서 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-142">To set the value of the switch, set the <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> property in the constructor.</span></span></para></block>
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.SourceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Switch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Switch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Switch : string * string * string -&gt; System.Diagnostics.Switch" Usage="new System.Diagnostics.Switch (displayName, description, defaultSwitchValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultSwitchValue" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="displayName"><span data-ttu-id="8b781-143">스위치의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-143">The name of the switch.</span></span></param>
        <param name="description"><span data-ttu-id="8b781-144">스위치에 대한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-144">The description of the switch.</span></span></param>
        <param name="defaultSwitchValue"><span data-ttu-id="8b781-145">스위치의 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-145">The default value for the switch.</span></span></param>
        <summary><span data-ttu-id="8b781-146"><see cref="T:System.Diagnostics.Switch" /> 클래스의 새 인스턴스를 초기화하고 스위치의 표시 이름, 설명 및 기본값을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-146">Initializes a new instance of the <see cref="T:System.Diagnostics.Switch" /> class, specifying the display name, description, and default value for the switch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b781-147">`displayName` 매개 변수 값을 설정 하는 합니다 <xref:System.Diagnostics.Switch.DisplayName%2A> 속성 및 `description` 매개 변수 값을 설정 하는 데 사용 됩니다는 <xref:System.Diagnostics.Switch.Description%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-147">The `displayName` parameter is used to set the value of the <xref:System.Diagnostics.Switch.DisplayName%2A> property, and the `description` parameter is use to set the value of the <xref:System.Diagnostics.Switch.Description%2A> property.</span></span> <span data-ttu-id="8b781-148">`defaultSwitchValue` 매개 변수는 스위치 값 경우는 <xref:System.Diagnostics.Switch.Value%2A> 코드 또는 구성 파일 특성에 의해 속성이 설정 되지 않은 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-148">The `defaultSwitchValue` parameter is the value for the switch if the <xref:System.Diagnostics.Switch.Value%2A> property is not set by code or by the configuration file attribute.</span></span> <span data-ttu-id="8b781-149">참조 된 <xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29> 추가 정보에 대 한 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-149">See the <xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29> overload for additional information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.Switch.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b781-150">애플리케이션 구성 파일에 정의된 사용자 지정 스위치 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-150">Gets the custom switch attributes defined in the application configuration file.</span></span></summary>
        <value><span data-ttu-id="8b781-151">추적 스위치의 대/소문자를 구분하지 않는 사용자 지정 특성이 포함된 <see cref="T:System.Collections.Specialized.StringDictionary" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-151">A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the case-insensitive custom attributes for the trace switch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b781-152"><xref:System.Diagnostics.Switch.Attributes%2A> 속성 응용 프로그램의 구성 파일에서 참조 하는 사용자 지정 특성을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-152">The <xref:System.Diagnostics.Switch.Attributes%2A> property identifies the custom attributes referenced in the application's configuration file.</span></span> <span data-ttu-id="8b781-153">참조 되지 않은 사용자 지정 특성을 열거 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-153">Unreferenced custom attributes are not enumerated.</span></span> <span data-ttu-id="8b781-154">클래스에서 상속 되는 <xref:System.Diagnostics.Switch> 클래스를 재정의 하 여 사용자 지정 특성을 추가할 수는 <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> 메서드 및 사용자 지정 특성 이름의 문자열 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-154">Classes that inherit from the <xref:System.Diagnostics.Switch> class can add custom attributes by overriding the <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> method and returning a string array of custom attribute names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b781-155">다음 코드 샘플에는 사용자 지정 스위치를 인식할 수 없는 특성을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-155">The following code sample shows how to display the unrecognized attributes for a custom switch.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#15)]
 [!code-vb[System.Diagnostics.TraceSource#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Diagnostics.Switch.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b781-156">스위치에 대한 설명을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-156">Gets a description of the switch.</span></span></summary>
        <value><span data-ttu-id="8b781-157">스위치에 대한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-157">The description of the switch.</span></span> <span data-ttu-id="8b781-158">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-158">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b781-159">이 속성의 스위치; 함수를 나타내야 합니다. 예를 들어, "추적을 활성화 디렉터리 감시자 구성 요소에 대 한 합니다."</span><span class="sxs-lookup"><span data-stu-id="8b781-159">This property should indicate the function of the switch; for example, "Enables tracing for a directory watcher component."</span></span> <span data-ttu-id="8b781-160">값 설정 됩니다는 `descriptor` 의 매개 변수는 <xref:System.Diagnostics.Switch.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-160">The value is set by the `descriptor` parameter in the <xref:System.Diagnostics.Switch.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Diagnostics.Switch.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b781-161">스위치를 식별하는 데 사용되는 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-161">Gets a name used to identify the switch.</span></span></summary>
        <value><span data-ttu-id="8b781-162">스위치를 식별하는 데 사용되는 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-162">The name used to identify the switch.</span></span> <span data-ttu-id="8b781-163">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-163">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b781-164">새로 만들 때 <xref:System.Diagnostics.Switch> 개체는 <xref:System.Diagnostics.Switch.DisplayName%2A> 초기 스위치 설정을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-164">When you create a new <xref:System.Diagnostics.Switch> object, the <xref:System.Diagnostics.Switch.DisplayName%2A> finds initial switch settings.</span></span> <span data-ttu-id="8b781-165">자세한 내용은 참조는 <xref:System.Diagnostics.Switch.%23ctor%2A> 생성자 및 [방법: 만들기, 초기화 및 추적 스위치 구성](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) Visual Studio 설명서에서.</span><span class="sxs-lookup"><span data-stu-id="8b781-165">For more information, see the <xref:System.Diagnostics.Switch.%23ctor%2A> constructor and [How to: Create, Initialize and Configure Trace Switches](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) in the Visual Studio documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b781-166">다음 코드 예제에서는 추적 소스에서 사용 중인 스위치의 표시 이름을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-166">The following code example displays the display name for the switch in use by a trace source.</span></span>  <span data-ttu-id="8b781-167">이 코드 예제는에서 찾을 수 있는 보다 큰 예제의 일부는 <xref:System.Diagnostics.TraceSource> 클래스 요약 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-167">This code example is part of a larger example that can be found in the <xref:System.Diagnostics.TraceSource> class summary.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#10)]
 [!code-vb[System.Diagnostics.TraceSource#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="switch.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b781-168">스위치에서 지원하는 사용자 지정 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-168">Gets the custom attributes supported by the switch.</span></span></summary>
        <returns><span data-ttu-id="8b781-169">스위치에서 지원하는 사용자 지정 특성의 이름이 들어 있는 문자열 배열을 반환하며, 지원되는 사용자 지정 특성이 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-169">A string array that contains the names of the custom attributes supported by the switch, or <see langword="null" /> if there no custom attributes are supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b781-170">기본 구현 된 <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> 메서드가 반환 되는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-170">The default implementation for the <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> method returns `null`.</span></span> <span data-ttu-id="8b781-171">스위치를 구성 파일에 추가 되 고 반환 하는 문자열 배열에 포함 되지 않는 사용자 지정 특성을 지정 하는 경우 <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A>, <xref:System.Configuration.ConfigurationException> 스위치를 로드 하는 경우에 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-171">If a switch is added in a configuration file and custom attributes are specified that are not included in the string array returned by <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A>, a <xref:System.Configuration.ConfigurationException> is thrown when the switch is loaded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b781-172">다음 코드 샘플의 재정의 보여 줍니다.는 <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> 메서드 스위치의 사용자 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-172">The following code sample shows an override of the <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> method for a custom switch.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource#34](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#34)]
 [!code-vb[System.Diagnostics.TraceSource#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#34)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8b781-173">상속 하는 경우는 <see cref="T:System.Diagnostics.Switch" /> 클래스나 파생된 클래스에서 재정의할 수 있습니다는 <see cref="M:System.Diagnostics.Switch.GetSupportedAttributes" /> 클래스에 대 한 사용자 지정 특성을 제공 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-173">When inheriting from the <see cref="T:System.Diagnostics.Switch" /> class or a derived class, you can override the <see cref="M:System.Diagnostics.Switch.GetSupportedAttributes" /> method to provide custom attributes for your class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSwitchSettingChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSwitchSettingChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSwitchSettingChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.OnSwitchSettingChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSwitchSettingChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSwitchSettingChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnSwitchSettingChanged : unit -&gt; unit&#xA;override this.OnSwitchSettingChanged : unit -&gt; unit" Usage="switch.OnSwitchSettingChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b781-174"><see cref="P:System.Diagnostics.Switch.SwitchSetting" /> 속성이 변경될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-174">Invoked when the <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> property is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b781-175"><xref:System.Diagnostics.Switch.OnSwitchSettingChanged%2A> 스위치를 읽고 처음으로 호출 되는 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 구성 파일에서 값 및 스위치의 값이 변경 될 때마다 다시 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-175"><xref:System.Diagnostics.Switch.OnSwitchSettingChanged%2A> is invoked the first time a switch reads the <xref:System.Diagnostics.Switch.SwitchSetting%2A> value from the configuration file and is invoked again each time the switch's value is changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnValueChanged : unit -&gt; unit&#xA;override this.OnValueChanged : unit -&gt; unit" Usage="switch.OnValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b781-176"><see cref="P:System.Diagnostics.Switch.Value" /> 속성이 변경될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-176">Invoked when the <see cref="P:System.Diagnostics.Switch.Value" /> property is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b781-177">기본 구현은의 새 값을 구문 분석 합니다 <xref:System.Diagnostics.Switch.Value%2A> 속성을 설정 하는 정수 값을는 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-177">The default implementation parses the new value of the <xref:System.Diagnostics.Switch.Value%2A> property to an integer value which it uses to set the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8b781-178">이 메서드를 재정의 하 고 적절 한 설정 하는 변환을 사용 해야 <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> 스위치에 대 한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-178">You should override this method and use a conversion that sets the appropriate <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> value for your switch.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SwitchSetting">
      <MemberSignature Language="C#" Value="protected int SwitchSetting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SwitchSetting" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.SwitchSetting" />
      <MemberSignature Language="VB.NET" Value="Protected Property SwitchSetting As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int SwitchSetting { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SwitchSetting : int with get, set" Usage="System.Diagnostics.Switch.SwitchSetting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b781-179">이 스위치의 현재 설정을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-179">Gets or sets the current setting for this switch.</span></span></summary>
        <value><span data-ttu-id="8b781-180">이 스위치의 현재 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-180">The current setting for this switch.</span></span> <span data-ttu-id="8b781-181">기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-181">The default is zero.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="protected string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.Value" />
      <MemberSignature Language="VB.NET" Value="Protected Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Diagnostics.Switch.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b781-182">스위치의 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-182">Gets or sets the value of the switch.</span></span></summary>
        <value><span data-ttu-id="8b781-183">스위치의 값을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-183">A string representing the value of the switch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b781-184"><xref:System.Diagnostics.Switch.OnValueChanged%2A> 메서드를 호출한 경우 값은 <xref:System.Diagnostics.Switch.Value%2A> 속성이 변경 될 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-184">The <xref:System.Diagnostics.Switch.OnValueChanged%2A> method is called when the value of the <xref:System.Diagnostics.Switch.Value%2A> property is changed.</span></span> <span data-ttu-id="8b781-185"><xref:System.Diagnostics.Switch.OnValueChanged%2A> 이 속성의 값을 구문 분석 하 고 집합을 사용 하는 정수 값을 변환 하는 메서드는 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-185">The <xref:System.Diagnostics.Switch.OnValueChanged%2A> method parses the value of this property and converts it to an integer value, which is then used to set the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="8b781-186">값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="8b781-186">The value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8b781-187">또는</span><span class="sxs-lookup"><span data-stu-id="8b781-187">-or-</span></span> 
<span data-ttu-id="8b781-188">값이 선택적인 음수 부호와 0부터 9 사이의 숫자로만 구성되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8b781-188">The value does not consist solely of an optional negative sign followed by a sequence of digits ranging from 0 to 9.</span></span>  
  
<span data-ttu-id="8b781-189">또는</span><span class="sxs-lookup"><span data-stu-id="8b781-189">-or-</span></span> 
<span data-ttu-id="8b781-190">값이 <see cref="F:System.Int32.MinValue" />보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큰 숫자를 나타내는 경우</span><span class="sxs-lookup"><span data-stu-id="8b781-190">The value represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="8b781-191">재정의 해야 합니다 <see cref="M:System.Diagnostics.Switch.OnValueChanged" /> 메서드 적절 한 설정 하는 변환 작업을 제공 하 고 <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> 스위치에 대 한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8b781-191">You should override the <see cref="M:System.Diagnostics.Switch.OnValueChanged" /> method and provide a conversion operation that sets the appropriate <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> value for your switch.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>