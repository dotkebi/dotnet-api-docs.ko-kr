<Type Name="XmlWriterTraceListener" FullName="System.Diagnostics.XmlWriterTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="018649113dd09ead1653339657b6e61f572875b1" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57949123" /></Metadata><TypeSignature Language="C#" Value="public class XmlWriterTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlWriterTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.XmlWriterTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlWriterTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type XmlWriterTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="70433-101">XML로 인코딩된 데이터인 추적 또는 디버깅 출력을 <see cref="T:System.IO.TextWriter" />나 <see cref="T:System.IO.Stream" />(예: <see cref="T:System.IO.FileStream" />)으로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="70433-101">Directs tracing or debugging output as XML-encoded data to a <see cref="T:System.IO.TextWriter" /> or to a <see cref="T:System.IO.Stream" />, such as a <see cref="T:System.IO.FileStream" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70433-102">수 해야 비관리 코드 권한이의 인스턴스를 만들려고 합니다 <xref:System.Diagnostics.XmlWriterTraceListener> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-102">You must have unmanaged code permission to create an instance of the <xref:System.Diagnostics.XmlWriterTraceListener> class.</span></span>  
  
 <span data-ttu-id="70433-103"><xref:System.Diagnostics.XmlWriterTraceListener> 클래스에는 추적 및 디버깅 정보를 XML로 인코딩된 텍스트 스트림으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-103">The <xref:System.Diagnostics.XmlWriterTraceListener> class converts tracing and debugging information into an XML-encoded text stream.</span></span> <span data-ttu-id="70433-104">XML 출력의 설명에 따라 테이블에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70433-104">The description of the XML output is shown in the tables that follow.</span></span> <span data-ttu-id="70433-105">사용할 수는 [Service Trace Viewer 도구 (SvcTraceViewer.exe)](https://go.microsoft.com/fwlink/p/?LinkId=240129) 출력 XML을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-105">You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](https://go.microsoft.com/fwlink/p/?LinkId=240129) to display the XML output.</span></span>  
  
 <span data-ttu-id="70433-106">활성화 하거나 비활성화할 수는 <xref:System.Diagnostics.XmlWriterTraceListener> 응용 프로그램 구성 파일을 사용 하 여 구성된 된 통해 <xref:System.Diagnostics.XmlWriterTraceListener> 응용 프로그램에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-106">You can enable or disable an <xref:System.Diagnostics.XmlWriterTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.XmlWriterTraceListener> in your application.</span></span> <span data-ttu-id="70433-107">만들 수는 또는 <xref:System.Diagnostics.XmlWriterTraceListener> 코드에서.</span><span class="sxs-lookup"><span data-stu-id="70433-107">Alternately, you can create an <xref:System.Diagnostics.XmlWriterTraceListener> in your code.</span></span>  
  
 <span data-ttu-id="70433-108">구성 하는 <xref:System.Diagnostics.XmlWriterTraceListener>, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-108">To configure an <xref:System.Diagnostics.XmlWriterTraceListener>, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="70433-109">이 파일을 추가 또는 수신기 제거는 수신기에 대 한 속성을 설정 하거나 수 수신기를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-109">In this file, you can add or remove a listener, set the properties for a listener, or remove listeners.</span></span> <span data-ttu-id="70433-110">다음 예제와 같이 구성 파일의 형식은 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-110">The configuration file should be formatted like the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="xmlListener"   
          type="System.Diagnostics.XmlWriterTraceListener"   
          initializeData="xmlOutput.xml"   
          traceOutputOptions="ProcessId, DateTime" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="70433-111">합니다 <xref:System.Diagnostics.XmlWriterTraceListener> 클래스를 상속 합니다 <xref:System.Diagnostics.TraceListener.Filter%2A> 기본 클래스에서 속성 <xref:System.Diagnostics.TraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-111">The <xref:System.Diagnostics.XmlWriterTraceListener> class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>.</span></span>  <span data-ttu-id="70433-112"><xref:System.Diagnostics.TraceListener.Filter%2A> 속성 수신기에서 필터링 하는 추적 출력의 추가 수준을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-112">The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows an additional level of trace output filtering at the listener.</span></span>  <span data-ttu-id="70433-113">이면 있는 필터를 `Trace` 추적 수신기 호출의 메서드는 <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> 메서드는 추적을 내보낼지 여부를 결정 하는 필터입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-113">If there is a filter present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70433-114">사용 중인 파일에 기록 하려고 시도 하거나 사용할 수 없거나, 파일 이름을 자동으로 옵니다 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-114">If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70433-115">수신기 메서드는 메서드로 호출할 되어는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-115">Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes.</span></span>  <span data-ttu-id="70433-116">수신기 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-116">The listener methods are not intended to be called directly from application code.</span></span> <span data-ttu-id="70433-117">합니다 <xref:System.Diagnostics.XmlWriterTraceListener> 사용에 대 한 수신기는 주로 <xref:System.Diagnostics.TraceSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-117">The <xref:System.Diagnostics.XmlWriterTraceListener> listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class.</span></span> <span data-ttu-id="70433-118"><xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> 및 <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> 에서 메서드를 호출할 수 있습니다를 <xref:System.Diagnostics.Trace> 및 <xref:System.Diagnostics.Debug> XML 요소에 대 한 클래스 및 기본 값 제공 되는 <xref:System.Diagnostics.Trace> 및 <xref:System.Diagnostics.Debug> 에 대 한 값을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-118">The <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> and <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> methods can be called by the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> classes, and default values are provided for the XML elements that <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> do not supply values for.</span></span>  
  
 <span data-ttu-id="70433-119">다음 표에서 XML 출력의 특성과 해당 요소에 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-119">The following table describes the elements and attributes of the XML output.</span></span>  
  
|<span data-ttu-id="70433-120">요소</span><span class="sxs-lookup"><span data-stu-id="70433-120">Element</span></span>|<span data-ttu-id="70433-121">특성</span><span class="sxs-lookup"><span data-stu-id="70433-121">Attributes</span></span>|<span data-ttu-id="70433-122">출력</span><span class="sxs-lookup"><span data-stu-id="70433-122">Output</span></span>|<span data-ttu-id="70433-123">참고 사항</span><span class="sxs-lookup"><span data-stu-id="70433-123">Notes</span></span>|  
|-------------|----------------|------------|-----------|  
|`CallStack`|<span data-ttu-id="70433-124">없음</span><span class="sxs-lookup"><span data-stu-id="70433-124">None</span></span>|<span data-ttu-id="70433-125">현재 상태에 따라 달라 집니다 합니다 <xref:System.Diagnostics.TraceOptions.Callstack> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-125">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Callstack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="70433-126">특수 문자 등 > 또는 < 이스케이프 시퀀스로 대체 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70433-126">Special characters such as > or < are replaced with escape sequences.</span></span> <span data-ttu-id="70433-127">이스케이프 된 문자 변환 표를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="70433-127">See the escaped character translation table that follows.</span></span>|  
|`Computer`|<span data-ttu-id="70433-128">없음</span><span class="sxs-lookup"><span data-stu-id="70433-128">None</span></span>|<span data-ttu-id="70433-129">항상 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-129">Always present.</span></span>|<span data-ttu-id="70433-130"><xref:System.Environment.MachineName%2A> 속성 값</span><span class="sxs-lookup"><span data-stu-id="70433-130">The value of the <xref:System.Environment.MachineName%2A> property.</span></span>|  
|`Correlation`|`ActivityID`|<span data-ttu-id="70433-131">항상 있음</span><span class="sxs-lookup"><span data-stu-id="70433-131">Always present</span></span>|<span data-ttu-id="70433-132">지정 하지 않으면 기본값은 빈 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-132">If not specified, the default is an empty GUID.</span></span>|  
||`RelatedActivityID`|<span data-ttu-id="70433-133">현재 상태에 따라 달라 집니다는 `relatedActivityId` 추적 메서드 호출의 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-133">Depends on the presence of the `relatedActivityId` parameter in the Trace method call.</span></span>|<span data-ttu-id="70433-134"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> 메서드의 `relatedActivityId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-134">The `relatedActivityId` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method.</span></span>|  
|`DataItem`|<span data-ttu-id="70433-135">없음</span><span class="sxs-lookup"><span data-stu-id="70433-135">None</span></span>|<span data-ttu-id="70433-136">에 따라 달라 집니다 합니다 `data` 의 매개 변수는 <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70433-136">Depends on the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method.</span></span>|<span data-ttu-id="70433-137">이 요소 값의 집합으로 기록 하므로 요소 또는 한 요소의 배열을 포함할 수 있습니다 `DataItem` 아래에 있는 노드는 `TraceData` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-137">This element can contain an array of elements or one element, so the values are written as a set of `DataItem` nodes under the `TraceData` element.</span></span><br /><br /> <span data-ttu-id="70433-138">데이터를 사용 하 여 출력을 `ToString` 전달 된 데이터 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="70433-138">The data output uses the `ToString` method of the passed-in data objects.</span></span>|  
|`EventID`|<span data-ttu-id="70433-139">없음</span><span class="sxs-lookup"><span data-stu-id="70433-139">None</span></span>|<span data-ttu-id="70433-140">항상 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-140">Always present.</span></span>|<span data-ttu-id="70433-141">매개 변수 입력 (`id`).</span><span class="sxs-lookup"><span data-stu-id="70433-141">Parameter input (`id`).</span></span>|  
|`Execution`|`ProcessName`|<span data-ttu-id="70433-142">항상 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-142">Always present.</span></span>|<span data-ttu-id="70433-143"><xref:System.Diagnostics.TraceEventCache>합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-143">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
||`ProcessID`|<span data-ttu-id="70433-144">항상 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-144">Always present.</span></span>|<span data-ttu-id="70433-145"><xref:System.Diagnostics.TraceEventCache>합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-145">From the <xref:System.Diagnostics.TraceEventCache>.</span></span> <span data-ttu-id="70433-146">Windows 98 및 Windows Me 운영 체제의 경우 `ProcessID` 음수를 양의 표현한 이며 올바른 프로세스 식별자를 가져오는 변환할지 2,147,483,647 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="70433-146">On Windows 98 and Windows Me operating systems, if `ProcessID` is greater than 2,147,483,647 it is a positive representation of a negative number and should be converted to obtain the correct process identifier.</span></span>|  
||`ThreadID`|<span data-ttu-id="70433-147">항상 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-147">Always present.</span></span>|<span data-ttu-id="70433-148"><xref:System.Diagnostics.TraceEventCache>합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-148">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`Level`|<span data-ttu-id="70433-149">없음</span><span class="sxs-lookup"><span data-stu-id="70433-149">None</span></span>|<span data-ttu-id="70433-150">항상 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-150">Always present.</span></span>|<span data-ttu-id="70433-151">매개 변수 입력 (의 숫자 값을 `eventType`).</span><span class="sxs-lookup"><span data-stu-id="70433-151">Parameter input (the numeric value of `eventType`).</span></span> <span data-ttu-id="70433-152">매개 변수 값을 255 보다 큰 255로 출력 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70433-152">Parameter values greater than 255 are output as 255.</span></span>|  
|`LogicalOperationStack`|<span data-ttu-id="70433-153">없음</span><span class="sxs-lookup"><span data-stu-id="70433-153">None</span></span>|<span data-ttu-id="70433-154">현재 상태에 따라 달라 집니다 합니다 <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-154">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="70433-155">값은로 작성 되므로 둘 이상의 논리 작업 수 `LogicalOperation` 아래에 있는 노드는 `LogicalOperationStack` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-155">There can be more than one logical operation, so the values are written as `LogicalOperation` nodes under the `LogicalOperationStack` element.</span></span>|  
|`Message`|<span data-ttu-id="70433-156">없음</span><span class="sxs-lookup"><span data-stu-id="70433-156">None</span></span>|<span data-ttu-id="70433-157">추적 메서드 호출에서 메시지의 존재 여부에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="70433-157">Depends on the presence of a message in the Trace method call.</span></span>|<span data-ttu-id="70433-158">이 요소는 형식 인수가 제공 되지 경우 형식이 지정 된 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-158">This element is a formatted message if formatting arguments are provided.</span></span>|  
|`Source`|`Name`|<span data-ttu-id="70433-159">항상 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-159">Always present.</span></span>|<span data-ttu-id="70433-160">입력 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-160">Parameter input.</span></span>|  
|`SubType`|`Name`|<span data-ttu-id="70433-161">항상 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-161">Always present.</span></span>|<span data-ttu-id="70433-162">입력 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-162">Parameter input.</span></span>|  
|`TimeCreated`|`SystemTime`|<span data-ttu-id="70433-163">항상 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-163">Always present.</span></span>|<span data-ttu-id="70433-164">에 없는 경우는 <xref:System.Diagnostics.TraceEventCache>, 기본값은 현재 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-164">If not present in the <xref:System.Diagnostics.TraceEventCache>, the default is the current time.</span></span>|  
|`TimeStamp`|<span data-ttu-id="70433-165">없음</span><span class="sxs-lookup"><span data-stu-id="70433-165">None</span></span>|<span data-ttu-id="70433-166">현재 상태에 따라 달라 집니다 합니다 <xref:System.Diagnostics.TraceOptions.Timestamp> 플래그를 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-166">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Timestamp> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="70433-167"><xref:System.Diagnostics.TraceEventCache>합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-167">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`Type`|<span data-ttu-id="70433-168">없음</span><span class="sxs-lookup"><span data-stu-id="70433-168">None</span></span>|<span data-ttu-id="70433-169">항상 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-169">Always present.</span></span>|<span data-ttu-id="70433-170">항상 값 3입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-170">Always the value 3.</span></span>|  
  
 <span data-ttu-id="70433-171">다음 표에서 XML 출력에는 이스케이프 된 문자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="70433-171">The following table shows the characters that are escaped in the XML output.</span></span> <span data-ttu-id="70433-172">모든 요소에 나타나고 제외 특성 이스케이프 합니다 `DataItem` 요소는 개체에 전달 하는 경우 이스케이프 되지 않습니다는 `data` 의 매개 변수를 <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> 메서드는는 <xref:System.Xml.XPath.XPathNavigator> 개체.</span><span class="sxs-lookup"><span data-stu-id="70433-172">Escaping occurs in all the elements and attributes with the exception of the `DataItem` element, which is not escaped if the object passed to the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method is an <xref:System.Xml.XPath.XPathNavigator> object.</span></span> <span data-ttu-id="70433-173">경우는 <xref:System.Xml.XPath.XPathNavigator> 데이터 개체에 사용 되는 <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> 메서드가 호출 되 고 전체 루트 노드는 이스케이프 되지 않은 데이터와 추적 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70433-173">If an <xref:System.Xml.XPath.XPathNavigator> is used for the data object, the <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> method is called and the entire root node is traced as unescaped data.</span></span>  
  
|<span data-ttu-id="70433-174">이스케이프된 문자</span><span class="sxs-lookup"><span data-stu-id="70433-174">Escaped character</span></span>|<span data-ttu-id="70433-175">값</span><span class="sxs-lookup"><span data-stu-id="70433-175">Value</span></span>|  
|-----------------------|-----------|  
|&|&amp;|  
|\<|&lt;|  
|>|&gt;|  
|<span data-ttu-id="70433-176">"</span><span class="sxs-lookup"><span data-stu-id="70433-176">"</span></span>|&quot;|  
|\|&apos;|  
|<span data-ttu-id="70433-177">0xD</span><span class="sxs-lookup"><span data-stu-id="70433-177">0xD</span></span>|<span data-ttu-id="70433-178">&\#xD;</span><span class="sxs-lookup"><span data-stu-id="70433-178">&\#xD;</span></span>|  
|<span data-ttu-id="70433-179">0xA</span><span class="sxs-lookup"><span data-stu-id="70433-179">0xA</span></span>|<span data-ttu-id="70433-180">&\#xA;</span><span class="sxs-lookup"><span data-stu-id="70433-180">&\#xA;</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="70433-181">다음 코드 예제에서는 <xref:System.Diagnostics.XmlWriterTraceListener> 이스케이프 및 이스케이프 되지 않은 데이터 파일 로그를 쓸 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-181">The following code example shows the use of the <xref:System.Diagnostics.XmlWriterTraceListener> class to write both escaped and non-escaped data to file logs.</span></span>  
  
 [!code-csharp[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/VB/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70433-182">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-182">for the ability to call unmanaged code.</span></span> <span data-ttu-id="70433-183">연관된 열거형: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="70433-183">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70433-184"><see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-184">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.Stream -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="70433-185">추적 수신기가 쓸 스트림을 나타내는 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-185">A <see cref="T:System.IO.Stream" /> that represents the stream the trace listener writes to.</span></span></param>
        <summary><span data-ttu-id="70433-186">지정된 스트림을 디버깅 및 추적 출력의 수신자로 사용하여 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-186">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class, using the specified stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70433-187"><xref:System.Diagnostics.TraceListener.Name%2A> 속성은 빈 문자열로 초기화 됩니다 ("").</span><span class="sxs-lookup"><span data-stu-id="70433-187">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="70433-188"><paramref name="stream" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-188"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70433-189">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-189">for the ability to call unmanaged code.</span></span> <span data-ttu-id="70433-190">연관된 열거형: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="70433-190">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.TextWriter -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="70433-191">추적 수신기에서 출력을 받는 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-191">A <see cref="T:System.IO.TextWriter" /> that receives the output from the trace listener.</span></span></param>
        <summary><span data-ttu-id="70433-192">지정된 작성자를 디버깅 및 추적 출력의 수신자로 사용하여 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-192">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class using the specified writer as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70433-193"><xref:System.Diagnostics.TraceListener.Name%2A> 속성은 빈 문자열로 초기화 됩니다 ("").</span><span class="sxs-lookup"><span data-stu-id="70433-193">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="70433-194"><paramref name="writer" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-194"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70433-195">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-195">for the ability to call unmanaged code.</span></span> <span data-ttu-id="70433-196">연관된 열거형: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="70433-196">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="70433-197">쓸 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-197">The name of the file to write to.</span></span></param>
        <summary><span data-ttu-id="70433-198">지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-198">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class, using the specified file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70433-199">이 생성자의 새 인스턴스를 초기화 합니다 <xref:System.IO.StreamWriter> 지정된 된 경로에서 지정된 된 파일에 대 한 클래스를 사용 하 여 <xref:System.Text.Encoding.UTF8%2A> 인코딩.</span><span class="sxs-lookup"><span data-stu-id="70433-199">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="70433-200">파일이 존재 하는 경우에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70433-200">If the file exists, it is appended to.</span></span> <span data-ttu-id="70433-201">파일이 없으면 새 파일이 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="70433-201">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70433-202">예외의 가능성을 줄이기 위해 사용 하 여 출력을 무효화할 수 있는 모든 문자 바뀝니다는 "?" 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-202">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="70433-203"><xref:System.Diagnostics.TraceListener.Name%2A> 속성은 빈 문자열로 초기화 됩니다 ("").</span><span class="sxs-lookup"><span data-stu-id="70433-203">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="70433-204"><paramref name="filename" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-204"><paramref name="filename" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70433-205">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-205">for the ability to call unmanaged code.</span></span> <span data-ttu-id="70433-206">연관된 열거형: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="70433-206">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.Stream * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (stream, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="70433-207">추적 수신기가 쓸 스트림을 나타내는 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-207">A <see cref="T:System.IO.Stream" /> that represents the stream the trace listener writes to.</span></span></param>
        <param name="name"><span data-ttu-id="70433-208">새 인스턴스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-208">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="70433-209">지정된 스트림을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름을 가진 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-209">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70433-210">이 생성자는 <xref:System.Diagnostics.TraceListener.Name%2A> 속성을를 `name` 매개 변수 값 또는 빈 문자열 ("") 경우는 `name` 매개 변수는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-210">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="70433-211">이름을 인덱스로 사용할 수는 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> 컬렉션을 프로그래밍 방식으로 수신기에 대 한 속성을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-211">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="70433-212">예를 들어, 다음 코드에서는 합니다 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 인스턴스에 대 한 속성 <xref:System.Diagnostics.XmlWriterTraceListener> 인 <xref:System.Diagnostics.TraceListener.Name%2A> 속성이 "xmllistener 인" 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-212">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =   
    TraceOptions.Timestamp  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="70433-213"><paramref name="stream" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-213"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70433-214">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-214">for the ability to call unmanaged code.</span></span> <span data-ttu-id="70433-215">연관된 열거형: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="70433-215">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.TextWriter * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (writer, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="70433-216">추적 수신기에서 출력을 받는 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-216">A <see cref="T:System.IO.TextWriter" /> that receives the output from the trace listener.</span></span></param>
        <param name="name"><span data-ttu-id="70433-217">새 인스턴스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-217">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="70433-218">지정된 작성자를 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름을 가진 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-218">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified writer as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70433-219">이 생성자는 <xref:System.Diagnostics.TraceListener.Name%2A> 속성을를 `name` 매개 변수 값 또는 빈 문자열 ("") 경우는 `name` 매개 변수는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-219">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="70433-220">이름을 인덱스로 사용할 수는 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> 컬렉션을 프로그래밍 방식으로 수신기에 대 한 속성을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-220">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="70433-221">예를 들어, 다음 코드에서는 합니다 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 인스턴스에 대 한 속성 <xref:System.Diagnostics.XmlWriterTraceListener> 인 <xref:System.Diagnostics.TraceListener.Name%2A> 속성이 "xmllistener 인" 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-221">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =   
    TraceOptions.Timestamp.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="70433-222"><paramref name="writer" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-222"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70433-223">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-223">for the ability to call unmanaged code.</span></span> <span data-ttu-id="70433-224">연관된 열거형: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="70433-224">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (string filename, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::String ^ filename, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : string * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (filename, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="70433-225">쓸 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-225">The name of the file to write to.</span></span></param>
        <param name="name"><span data-ttu-id="70433-226">새 인스턴스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-226">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="70433-227">지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름을 가진 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-227">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70433-228">이 생성자의 새 인스턴스를 초기화 합니다 <xref:System.IO.StreamWriter> 지정된 된 경로에서 지정된 된 파일에 대 한 클래스를 사용 하 여 <xref:System.Text.Encoding.UTF8%2A> 인코딩.</span><span class="sxs-lookup"><span data-stu-id="70433-228">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="70433-229">파일이 존재 하는 경우에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70433-229">If the file exists, it is appended to.</span></span> <span data-ttu-id="70433-230">파일이 없으면 새 파일이 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="70433-230">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70433-231">예외의 가능성을 줄이기 위해 사용 하 여 출력을 무효화할 수 있는 모든 문자 바뀝니다는 "?" 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-231">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="70433-232"><xref:System.Diagnostics.TraceListener.Name%2A> 속성을 `name` 매개 변수 값 또는 빈 문자열 ("") 경우는 `name` 매개 변수는 `null`.</span><span class="sxs-lookup"><span data-stu-id="70433-232">The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="70433-233">이름을 인덱스로 사용할 수는 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> 컬렉션을 프로그래밍 방식으로 수신기에 대 한 속성을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-233">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="70433-234">예를 들어, 다음 코드에서는 합니다 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 인스턴스에 대 한 속성 <xref:System.Diagnostics.XmlWriterTraceListener> 인 <xref:System.Diagnostics.TraceListener.Name%2A> 속성이 "xmllistener 인" 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-234">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =  
    TraceOptions.Timestamp.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="70433-235"><paramref name="stream" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-235"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70433-236">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-236">for the ability to call unmanaged code.</span></span> <span data-ttu-id="70433-237">연관된 열거형: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="70433-237">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlWriterTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="70433-238">추적 또는 디버깅 출력을 더 이상 받지 않도록 이 수신기에 대한 <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-238">Closes the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> for this listener so that it no longer receives tracing or debugging output.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="override this.Fail : string * string -&gt; unit" Usage="xmlWriterTraceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="70433-239">쓸 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-239">The error message to write.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="70433-240">오류 메시지에 추가할 자세한 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-240">The detailed error message to append to the error message.</span></span></param>
        <summary><span data-ttu-id="70433-241">오류 메시지와 자세한 오류 메시지를 포함한 추적 정보를 파일이나 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="70433-241">Writes trace information including an error message and a detailed error message to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70433-242">기본 동작은 응용 프로그램 및 사용자 인터페이스 모드로 실행 중일 때 메시지 상자에 메시지와 자세한 메시지를 표시 하는 <xref:System.Diagnostics.TraceListener> 인스턴스는 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-242">The default behavior is to display the message and detailed message in a message box when the application is running in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span></span> <span data-ttu-id="70433-243">기본적으로 컬렉션의 인스턴스를 포함 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-243">By default, the collection contains an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="70433-244">추가 하거나 제거 하 여이 동작을 사용자 지정할 수는 <xref:System.Diagnostics.TraceListener> 컬렉션에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-244">You can customize this behavior by adding or removing a <xref:System.Diagnostics.TraceListener> from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70433-245">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-245">for the ability to call unmanaged code.</span></span> <span data-ttu-id="70433-246">연관된 열거형: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="70433-246">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70433-247">추적 데이터를 출력 파일이나 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="70433-247">Writes trace data to the output file or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="xmlWriterTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="70433-248">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-248">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="70433-249">소스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-249">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="70433-250"><see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-250">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="70433-251">이벤트의 숫자 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-251">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="70433-252">내보낼 데이터 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-252">A data object to emit.</span></span></param>
        <summary><span data-ttu-id="70433-253">추적 정보, 데이터 개체 및 이벤트 정보를 파일이나 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="70433-253">Writes trace information, a data object, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70433-254">합니다 `eventCache`, `source`를 `eventType`, 및 `id` 머리글 및 바닥글 추적의 매개 변수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-254">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="70433-255">합니다 `id` 매개 변수는 부호 없는 정수로 변환 쓰기 전에 따라서 음수 `id` 큰 양의 정수 값이 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70433-255">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="70433-256">합니다 `data` 매개 변수는 기록를 `DataItem` 노드에서 `TraceData` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-256">The `data` parameter is written as a `DataItem` node in the `TraceData` element.</span></span> <span data-ttu-id="70433-257">`ToString` 개체를 문자열로 변환할 데이터 개체의 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-257">The `ToString` method of the data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="70433-258">이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-258">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="70433-259">메서드에서 호출 되는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 작성 하는 클래스.</span><span class="sxs-lookup"><span data-stu-id="70433-259">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70433-260">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-260">for the ability to call unmanaged code.</span></span> <span data-ttu-id="70433-261">연관된 열거형: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="70433-261">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="xmlWriterTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="70433-262">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-262">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="70433-263">소스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-263">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="70433-264"><see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-264">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="70433-265">이벤트의 숫자 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-265">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="70433-266">내보낼 데이터 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-266">An array of data objects to emit.</span></span></param>
        <summary><span data-ttu-id="70433-267">추적 정보, 데이터 개체 및 이벤트 정보를 파일이나 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="70433-267">Writes trace information, data objects, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70433-268">합니다 `eventCache`, `source`를 `eventType`, 및 `id` 머리글 및 바닥글 추적의 매개 변수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-268">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="70433-269">합니다 `id` 매개 변수는 부호 없는 정수로 변환 쓰기 전에 따라서 음수 `id` 큰 양의 정수 값이 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70433-269">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="70433-270">개체는 `data` 매개 변수 배열으로 기록 됩니다 `DataItem` 의 노드는 `TraceData` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-270">The objects in the `data` parameter array are written as `DataItem` nodes in the `TraceData` element.</span></span> <span data-ttu-id="70433-271">`ToString` 개체를 문자열로 변환할 각 데이터 개체의 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-271">The `ToString` method of each data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="70433-272">이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-272">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="70433-273">메서드에서 호출 되는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 작성 하는 클래스.</span><span class="sxs-lookup"><span data-stu-id="70433-273">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70433-274">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-274">for the ability to call unmanaged code.</span></span> <span data-ttu-id="70433-275">연관된 열거형: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="70433-275">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70433-276">이벤트 추적 정보를 출력 파일이나 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="70433-276">Writes event trace information to the output file or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="xmlWriterTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="70433-277">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-277">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="70433-278">소스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-278">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="70433-279"><see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-279">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="70433-280">이벤트의 숫자 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-280">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="70433-281">쓸 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-281">The message to write.</span></span></param>
        <summary><span data-ttu-id="70433-282">추적 정보, 메시지 및 이벤트 정보를 파일이나 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="70433-282">Writes trace information, a message, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70433-283">합니다 `eventCache`, `source`를 `eventType`, 및 `id` 머리글 및 바닥글 추적의 매개 변수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-283">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="70433-284">합니다 `id` 매개 변수는 부호 없는 정수로 변환 쓰기 전에 따라서 음수 `id` 큰 양의 정수 값이 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70433-284">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="70433-285">합니다 `message` 매개 변수는 기록 된 `Message` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-285">The `message` parameter is written as the `Message` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="70433-286">이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-286">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="70433-287">메서드에서 호출 되는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 작성 하는 클래스.</span><span class="sxs-lookup"><span data-stu-id="70433-287">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70433-288">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-288">for the ability to call unmanaged code.</span></span> <span data-ttu-id="70433-289">연관된 열거형: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="70433-289">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="xmlWriterTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="70433-290">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-290">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="70433-291">소스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-291">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="70433-292"><see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-292">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="70433-293">이벤트의 숫자 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-293">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="70433-294"><paramref name="args" /> 배열에 들어 있는 개체에 해당하는 0개 이상의 형식 항목이 포함된 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-294">A format string that contains zero or more format items that correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="70433-295">형식을 지정할 개체를 0개 이상 포함하는 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-295">An object array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="70433-296">추적 정보, 형식 지정된 메시지 및 이벤트 정보를 파일이나 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="70433-296">Writes trace information, a formatted message, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70433-297">합니다 `eventCache`, `source`를 `eventType`, 및 `id` 머리글 및 바닥글 추적의 매개 변수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-297">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="70433-298">합니다 `id` 매개 변수는 부호 없는 정수로 변환 쓰기 전에 따라서 음수 `id` 큰 양의 정수 값이 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70433-298">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="70433-299"><xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 전달 메서드가 호출 되는 `format` 문자열 및 `args` 배열 형식을 매개 변수로 `args` 개체 배열을 `Message` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-299">The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called, passing in the `format` string and `args` array as parameters, to format the `args` object array as the `Message` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="70433-300">이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-300">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="70433-301">메서드에서 호출 되는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 작성 하는 클래스.</span><span class="sxs-lookup"><span data-stu-id="70433-301">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70433-302">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-302">for the ability to call unmanaged code.</span></span> <span data-ttu-id="70433-303">연관된 열거형: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="70433-303">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="override this.TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit" Usage="xmlWriterTraceListener.TraceTransfer (eventCache, source, id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="70433-304">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" />입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-304">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="70433-305">소스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-305">The source name.</span></span></param>
        <param name="id"><span data-ttu-id="70433-306">이벤트의 숫자 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-306">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="70433-307">쓸 추적 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-307">A trace message to write.</span></span></param>
        <param name="relatedActivityId"><span data-ttu-id="70433-308">관련 작업을 식별하는 <see cref="T:System.Guid" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-308">A <see cref="T:System.Guid" /> structure that identifies a related activity.</span></span></param>
        <summary><span data-ttu-id="70433-309">관련 작업의 ID를 포함한 추적 정보, 메시지 및 이벤트 정보를 파일이나 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="70433-309">Writes trace information including the identity of a related activity, a message, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70433-310"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> 관련된 추적의 상관 관계에 대 한 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-310">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is used for the correlation of related traces.</span></span> <span data-ttu-id="70433-311">합니다 `eventCache`, `source`를 `id`, 및 `relatedActivityId` 머리글 및 바닥글 추적의 매개 변수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-311">The `eventCache`, `source`, `id`, and `relatedActivityId` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="70433-312">합니다 `id` 매개 변수는 부호 없는 정수로 변환 쓰기 전에 따라서 음수 `id` 큰 양의 정수 값이 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="70433-312">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="70433-313">합니다 `message` 매개 변수는 기록 된 `Message` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-313">The `message` parameter is written as the `Message` element.</span></span> <span data-ttu-id="70433-314"><xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> 메서드는 변환할를 `relatedActivityId`"B"로 값 형식 헤더에 표시 되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-314">The <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> method is called to convert the `relatedActivityId`value to a "B" formatted string, which appears in the header.</span></span> <span data-ttu-id="70433-315">합니다 `SubTypeName` 추적 이벤트 유형으로 식별 하는 바닥글에는 요소는 <xref:System.Diagnostics.TraceEventType.Transfer>합니다.</span><span class="sxs-lookup"><span data-stu-id="70433-315">The `SubTypeName` element in the footer identifies the trace event type as a <xref:System.Diagnostics.TraceEventType.Transfer>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="70433-316"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> 메서드는 응용 프로그램 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-316">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is not intended to be called by application code.</span></span>  <span data-ttu-id="70433-317">호출 하는 것을 <xref:System.Diagnostics.TraceSource> 개체에 대 한 추적 정보를 내보내려면 해당 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="70433-317">It is intended to be called by a <xref:System.Diagnostics.TraceSource> object to emit the trace information for its <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70433-318">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-318">for the ability to call unmanaged code.</span></span> <span data-ttu-id="70433-319">연관된 열거형: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="70433-319">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="xmlWriterTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="70433-320">쓸 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-320">The message to write.</span></span></param>
        <summary><span data-ttu-id="70433-321">추가 컨텍스트 정보가 없는 verbatim 메시지를 파일이나 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="70433-321">Writes a verbatim message without any additional context information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70433-322">사용 된 <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> 로그 출력에 컨텍스트 정보를 포함 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-322">Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70433-323">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-323">for the ability to call unmanaged code.</span></span> <span data-ttu-id="70433-324">연관된 열거형: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="70433-324">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="xmlWriterTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="70433-325">쓸 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-325">The message to write.</span></span></param>
        <summary><span data-ttu-id="70433-326">현재 줄 종결자가 뒤에 오고 추가 컨텍스트 정보가 없는 verbatim 메시지를 파일이나 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="70433-326">Writes a verbatim message without any additional context information followed by the current line terminator to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70433-327">사용 된 <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> 로그 출력에 컨텍스트 정보를 포함 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="70433-327">Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="70433-328">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="70433-328">for the ability to call unmanaged code.</span></span> <span data-ttu-id="70433-329">연관된 열거형: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="70433-329">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>