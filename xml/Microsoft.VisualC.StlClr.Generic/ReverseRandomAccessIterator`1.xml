<Type Name="ReverseRandomAccessIterator&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="41fa80f044744672bc25680d1455ba412c22cb2f" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56786495" /></Metadata><TypeSignature Language="C#" Value="public class ReverseRandomAccessIterator&lt;TValue&gt; : Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReverseRandomAccessIterator`1&lt;TValue&gt; extends System.Object implements class Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1&lt;!TValue&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ReverseRandomAccessIterator(Of TValue)&#xA;Implements IRandomAccessIterator(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public ref class ReverseRandomAccessIterator : Microsoft::VisualC::StlClr::Generic::IRandomAccessIterator&lt;TValue&gt;" />
  <TypeSignature Language="F#" Value="type ReverseRandomAccessIterator&lt;'Value&gt; = class&#xA;    interface IRandomAccessIterator&lt;'Value&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IBaseIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IForwardIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IOutputIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue">[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]</typeparam>
    <summary><span data-ttu-id="6957f-101"><c>operator--</c>를 호출하여 한 위치만큼 앞으로 이동, <c>operator++</c>를 호출하여 한 위치만큼 뒤로 이동, <c>operator[]</c>를 사용하여 요소에 액세스, 포인터 산술 연산을 사용하여 요소에 액세스하는 등의 작업을 지원하는 반복기를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-101">Provides an iterator that supports the following operations: moving forward one position by calling <c>operator--</c>, moving backward one position by calling <c>operator++</c>, accessing an element by using <c>operator[]</c>, and accessing an element by using pointer arithmetic.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6957f-102">새 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체를 할당하고 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-102">Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReverseRandomAccessIterator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReverseRandomAccessIterator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6957f-103">새 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체를 할당하고 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-103">Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReverseRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt; _Iter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1&lt;!TValue&gt; _Iter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_Iter As IRandomAccessIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReverseRandomAccessIterator(Microsoft::VisualC::StlClr::Generic::IRandomAccessIterator&lt;TValue&gt; ^ _Iter);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; : Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;'Value&gt; -&gt; Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt;" Usage="new Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; _Iter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="_Iter" Type="Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Iter"><span data-ttu-id="6957f-104">현재 컨테이너에 복사할 기존 <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-104">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> object to be copied to the current container.</span></span></param>
        <summary><span data-ttu-id="6957f-105">기존 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체에서 새 <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> 개체를 할당 및 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-105">Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReverseRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_Right As ReverseRandomAccessIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReverseRandomAccessIterator(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; : Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; -&gt; Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt;" Usage="new Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; _Right" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="6957f-106">현재 컨테이너에 복사할 기존 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-106">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to be copied to the current container.</span></span></param>
        <summary><span data-ttu-id="6957f-107">기존 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체에서 새 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체를 할당 및 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-107">Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="base">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt; base ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1&lt;!TValue&gt; base() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base" />
      <MemberSignature Language="VB.NET" Value="Public Function base () As IRandomAccessIterator(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::Generic::IRandomAccessIterator&lt;TValue&gt; ^ base();" />
      <MemberSignature Language="F#" Value="member this.base : unit -&gt; Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;'Value&gt;" Usage="reverseRandomAccessIterator.base " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6957f-108"><see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체에 대한 기본 기준 반복기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-108">Gets the underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</span></span></summary>
        <returns><span data-ttu-id="6957f-109"><see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체에 대한 기본 기준 반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-109">The underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="reverseRandomAccessIterator.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6957f-110">현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체의 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-110">Creates a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</span></span></summary>
        <returns><span data-ttu-id="6957f-111">현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체의 복사본입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-111">A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="container">
      <MemberSignature Language="C#" Value="public virtual object container ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object container() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function container () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ container();" />
      <MemberSignature Language="F#" Value="abstract member container : unit -&gt; obj&#xA;override this.container : unit -&gt; obj" Usage="reverseRandomAccessIterator.container " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6957f-112">반복기가 이동하고 있는 컨테이너를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-112">Gets the container that the iterator is traversing.</span></span></summary>
        <returns><span data-ttu-id="6957f-113">반복기가 이동하고 있는 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-113">The container that the iterator is traversing.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="distance">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6957f-114">현재 반복기가 가리키고 있는 요소와 지정된 반복기가 가리키고 있는 요소 사이의 거리를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-114">Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="distance">
      <MemberSignature Language="C#" Value="public virtual int distance (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 distance(class Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function distance (_Right As IRandomAccessIterator(Of TValue)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int distance(Microsoft::VisualC::StlClr::Generic::IRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member distance : Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;'Value&gt; -&gt; int&#xA;override this.distance : Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;'Value&gt; -&gt; int" Usage="reverseRandomAccessIterator.distance _Right" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="6957f-115">현재 반복기와 같은 컨테이너를 가리키는 유효한 반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-115">A valid iterator that points to the same container as the current iterator.</span></span></param>
        <summary><span data-ttu-id="6957f-116">현재 반복기가 가리키고 있는 요소와 지정된 반복기가 가리키고 있는 요소 사이의 거리를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-116">Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</span></span></summary>
        <returns><span data-ttu-id="6957f-117">현재 반복기가 가리키고 있는 요소와 <paramref name="_Right" />가 가리키고 있는 요소 사이의 거리(요소의 수로 표현)입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-117">The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to.</span></span> <span data-ttu-id="6957f-118"><paramref name="_Right" />가 현재 반복기가 가리키는 요소 앞의 요소를 가리키는 경우 이 숫자는 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-118">This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="distance">
      <MemberSignature Language="C#" Value="public int distance (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 distance(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Function distance (_Right As ReverseRandomAccessIterator(Of TValue)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int distance(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.distance : Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; -&gt; int" Usage="reverseRandomAccessIterator.distance _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="6957f-119">현재 반복기와 같은 컨테이너를 가리키는 유효한 반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-119">A valid iterator that points to the same container as the current iterator.</span></span></param>
        <summary><span data-ttu-id="6957f-120">현재 반복기가 가리키고 있는 요소와 지정된 반복기가 가리키고 있는 요소 사이의 거리를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-120">Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</span></span></summary>
        <returns><span data-ttu-id="6957f-121">현재 반복기가 가리키고 있는 요소와 <paramref name="_Right" />가 가리키고 있는 요소 사이의 거리(요소의 수로 표현)입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-121">The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to.</span></span> <span data-ttu-id="6957f-122"><paramref name="_Right" />가 현재 반복기가 가리키는 요소 앞의 요소를 가리키는 경우 이 숫자는 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-122">This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="equal_to">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6957f-123">두 반복기가 같은 개체인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-123">Determines whether two iterators are the same object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="equal_to">
      <MemberSignature Language="C#" Value="public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool equal_to(class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function equal_to (_Right As IInputIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool equal_to(Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member equal_to : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; bool&#xA;override this.equal_to : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; bool" Usage="reverseRandomAccessIterator.equal_to _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="6957f-124">현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체와 비교할 <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-124">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</span></span></param>
        <summary><span data-ttu-id="6957f-125">지정된 <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> 개체가 현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체와 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-125">Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</span></span></summary>
        <returns><span data-ttu-id="6957f-126">두 반복기가 같은 개체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-126"><see langword="true" /> if the two iterators are the same object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="equal_to">
      <MemberSignature Language="C#" Value="public bool equal_to (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool equal_to(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Function equal_to (_Right As ReverseRandomAccessIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool equal_to(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.equal_to : Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; -&gt; bool" Usage="reverseRandomAccessIterator.equal_to _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="6957f-127">현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체와 비교할 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-127">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</span></span></param>
        <summary><span data-ttu-id="6957f-128">지정된 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체가 현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체와 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-128">Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</span></span></summary>
        <returns><span data-ttu-id="6957f-129">두 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체가 같은 개체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-129"><see langword="true" /> if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> objects are the same object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="get_bias">
      <MemberSignature Language="C#" Value="public virtual int get_bias ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 get_bias() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_bias" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function get_bias () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int get_bias();" />
      <MemberSignature Language="F#" Value="abstract member get_bias : unit -&gt; int&#xA;override this.get_bias : unit -&gt; int" Usage="reverseRandomAccessIterator.get_bias " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6957f-130">반복기의 바이어스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-130">Gets the bias of the iterator.</span></span> <span data-ttu-id="6957f-131">바이어스는 요소 0에 대한 반복기의 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-131">The bias is the offset of the iterator from element zero.</span></span></summary>
        <returns><span data-ttu-id="6957f-132">반복기의 바이어스입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-132">The bias of the iterator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="get_cref">
      <MemberSignature Language="C#" Value="public virtual ref TValue get_cref ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue get_cref() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_cref" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function get_cref () As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TValue % get_cref();" />
      <MemberSignature Language="F#" Value="abstract member get_cref : unit -&gt; &#xA;override this.get_cref : unit -&gt; " Usage="reverseRandomAccessIterator.get_cref " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6957f-133">반복기가 현재 가리키고 있는 요소에 대한 상수 참조를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-133">Returns a constant reference to the element that the iterator is currently pointing to.</span></span></summary>
        <returns><span data-ttu-id="6957f-134">반복기가 현재 가리키고 있는 요소에 대한 상수 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-134">A constant reference to the element that the iterator is currently pointing to.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="get_node">
      <MemberSignature Language="C#" Value="public virtual object get_node ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object get_node() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_node" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function get_node () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ get_node();" />
      <MemberSignature Language="F#" Value="abstract member get_node : unit -&gt; obj&#xA;override this.get_node : unit -&gt; obj" Usage="reverseRandomAccessIterator.get_node " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6957f-135">반복기가 가리키고 있는 노드 또는 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-135">Gets the node, or element, that the iterator is pointing to.</span></span></summary>
        <returns><span data-ttu-id="6957f-136">반복기가 가리키고 있는 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-136">The node that the iterator is pointing to.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="get_ref">
      <MemberSignature Language="C#" Value="public virtual ref TValue get_ref ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue get_ref() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_ref" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function get_ref () As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TValue % get_ref();" />
      <MemberSignature Language="F#" Value="abstract member get_ref : unit -&gt; &#xA;override this.get_ref : unit -&gt; " Usage="reverseRandomAccessIterator.get_ref " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6957f-137">반복기가 현재 가리키고 있는 요소에 대한 참조를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-137">Returns a reference to the element that the iterator is currently pointing to.</span></span></summary>
        <returns><span data-ttu-id="6957f-138">반복기가 현재 가리키고 있는 요소에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-138">A reference to the element that the iterator is currently pointing to.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[int _Pos] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(_Pos As Integer) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[int] { TValue get(int _Pos); void set(int _Pos, TValue value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'Value with get, set" Usage="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Pos"><span data-ttu-id="6957f-139">액세스할 요소의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-139">The position of the element to access.</span></span></param>
        <summary><span data-ttu-id="6957f-140">컨테이너의 지정된 위치에 있는 요소에 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-140">Accesses the element at the given position in the container.</span></span></summary>
        <value><span data-ttu-id="6957f-141">컨테이너의 지정된 위치에 있는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-141">The element at the given position in the container.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="less_than">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6957f-142">현재 반복기가 컨테이너에서 지정된 반복기가 가리키는 요소 앞에 있는 요소를 가리키는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-142">Determines whether the current iterator is pointing to an element in the container that is before the element that a given iterator points to.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="less_than">
      <MemberSignature Language="C#" Value="public virtual bool less_than (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool less_than(class Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function less_than (_Right As IRandomAccessIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool less_than(Microsoft::VisualC::StlClr::Generic::IRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member less_than : Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;'Value&gt; -&gt; bool&#xA;override this.less_than : Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;'Value&gt; -&gt; bool" Usage="reverseRandomAccessIterator.less_than _Right" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="6957f-143">현재 반복기와 같은 컨테이너를 가리키는 유효한 반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-143">A valid iterator that points to the same container as the current iterator.</span></span></param>
        <summary><span data-ttu-id="6957f-144">현재 반복기가 컨테이너에서 지정된 반복기가 가리키는 요소 앞에 있는 요소를 가리키는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-144">Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</span></span></summary>
        <returns><span data-ttu-id="6957f-145">현재 반복기가 <paramref name="_Right" />가 가리키는 요소의 앞에 있는 요소를 가리키면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-145"><see langword="true" /> if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="less_than">
      <MemberSignature Language="C#" Value="public bool less_than (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool less_than(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Function less_than (_Right As ReverseRandomAccessIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool less_than(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.less_than : Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; -&gt; bool" Usage="reverseRandomAccessIterator.less_than _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="6957f-146">현재 반복기와 같은 컨테이너를 가리키는 유효한 반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-146">A valid iterator that points to the same container as the current iterator.</span></span></param>
        <summary><span data-ttu-id="6957f-147">현재 반복기가 컨테이너에서 지정된 반복기가 가리키는 요소 앞에 있는 요소를 가리키는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-147">Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</span></span></summary>
        <returns><span data-ttu-id="6957f-148">현재 반복기가 <paramref name="_Right" />가 가리키는 요소의 앞에 있는 요소를 가리키면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-148"><see langword="true" /> if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="move">
      <MemberSignature Language="C#" Value="public virtual int move (int _Offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 move(int32 _Offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function move (_Offset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int move(int _Offset);" />
      <MemberSignature Language="F#" Value="abstract member move : int -&gt; int&#xA;override this.move : int -&gt; int" Usage="reverseRandomAccessIterator.move _Offset" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Offset"><span data-ttu-id="6957f-149">이동할 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-149">The number of elements to traverse.</span></span> <span data-ttu-id="6957f-150">반복기를 앞쪽으로 이동하려면 음수를 지정하고</span><span class="sxs-lookup"><span data-stu-id="6957f-150">To move the iterator forward, specify a negative number.</span></span> <span data-ttu-id="6957f-151">뒤쪽으로 이동하려면 양수를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-151">To move the iterator backward, use a positive number.</span></span></param>
        <summary><span data-ttu-id="6957f-152">반복기를 지정된 요소 수만큼 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-152">Moves the iterator by the given number of elements.</span></span></summary>
        <returns><span data-ttu-id="6957f-153">이동된 실제 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-153">The actual number of elements traversed.</span></span> <span data-ttu-id="6957f-154">원하는 요소 수를 반복하기 전에 컨테이너의 시작 또는 끝에 도달하는 경우 이 숫자는 <paramref name="_Offset" />과 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-154">This number will differ from <paramref name="_Offset" /> if the beginning or end of the container is reached before iterating the desired number of elements.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="next">
      <MemberSignature Language="C#" Value="public virtual void next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void next() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub next ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void next();" />
      <MemberSignature Language="F#" Value="abstract member next : unit -&gt; unit&#xA;override this.next : unit -&gt; unit" Usage="reverseRandomAccessIterator.next " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6957f-155">역방향 반복기를 기본 컨테이너의 다음 위치로, 또는 컨테이너를 모두 이동한 경우에는 컨테이너 시작 부분 맨 앞의 첫 번째 위치로 증가시킵니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-155">Increments the reverse iterator to the next position in the underlying container, or to the first position in front of the beginning of container if the container has been completely traversed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Addition">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6957f-156">역방향 반복기를 지정된 요소 수만큼 증가시킵니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-156">Increments the reverse iterator by the given number of elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public void operator + (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; , int _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance class System.void op_Addition(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt;&amp; , int32 _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Operator + (ByRef  As ReverseRandomAccessIterator(Of TValue), _Right As Integer) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ operator +(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ % , int _Right);" />
      <MemberSignature Language="F#" Value="member this.( + ) :  * int -&gt; unit" Usage=" + _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Right" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="6957f-157">현재 반복기에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-157">A reference to the current iterator.</span></span></param>
        <param name="_Right"><span data-ttu-id="6957f-158">증가시킬 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-158">The number of elements to increment.</span></span></param>
        <summary><span data-ttu-id="6957f-159">역방향 반복기를 지정된 요소 수만큼 증가시킵니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-159">Increments the reverse iterator by the given number of elements.</span></span> <span data-ttu-id="6957f-160">정수 매개 변수는 더하기 연산자의 오른쪽에 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-160">The integer parameter is specified on the right side of the addition operator.</span></span></summary>
        <returns><span data-ttu-id="6957f-161">반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-161">An iterator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static void operator + (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; , int _Left, Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.void op_Addition(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt;&amp; , int32 _Left, class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (ByRef  As ReverseRandomAccessIterator(Of TValue), _Left As Integer, _Right As ReverseRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ^ operator +(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ % , int _Left, Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="static member ( + ) :  * int * Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; -&gt; unit" Usage=" + _Left _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1000")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Left" Type="System.Int32" />
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="6957f-162">현재 반복기에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-162">A reference to the current iterator.</span></span></param>
        <param name="_Left"><span data-ttu-id="6957f-163">증가시킬 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-163">The number of elements to increment.</span></span></param>
        <param name="_Right"><span data-ttu-id="6957f-164">증가시킬 반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-164">The iterator to increment.</span></span></param>
        <summary><span data-ttu-id="6957f-165">역방향 반복기를 지정된 요소 수만큼 증가시킵니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-165">Increments the reverse iterator by the given number of elements.</span></span> <span data-ttu-id="6957f-166">정수 매개 변수는 더하기 연산자의 왼쪽에 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-166">The integer parameter is specified on the left side of the addition operator.</span></span></summary>
        <returns><span data-ttu-id="6957f-167">반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-167">An iterator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Assign">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; op_Assign (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt; op_Assign(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public op_Assign (_Right As ReverseRandomAccessIterator(Of TValue)) As ReverseRandomAccessIterator(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ op_Assign(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.op_Assign : Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; -&gt; Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt;" Usage="reverseRandomAccessIterator.op_Assign _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="6957f-168">현재 개체에 할당할 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-168">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to assign to the current object.</span></span></param>
        <summary><span data-ttu-id="6957f-169">지정된 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체를 현재 개체에 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-169">Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to the current object.</span></span></summary>
        <returns><span data-ttu-id="6957f-170">\*가 현재 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-170">The current object (\*this).</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Decrement">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6957f-171">역방향 반복기를 한 요소 감소시킵니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-171">Decrements the reverse iterator by one element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public void operator -- (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance class System.void op_Decrement(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public op_Decrement (ByRef  As ReverseRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ operator --(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="member this.op_Decrement :  -&gt; unit" Usage="reverseRandomAccessIterator.op_Decrement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="6957f-172">현재 반복기에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-172">A reference to the current iterator.</span></span></param>
        <summary><span data-ttu-id="6957f-173">역방향 반복기를 한 요소 감소시킵니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-173">Decrements the reverse iterator by one element.</span></span> <span data-ttu-id="6957f-174">이는 감소 연산자의 전위 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-174">This is the prefix version of the decrement operator.</span></span></summary>
        <returns><span data-ttu-id="6957f-175">반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-175">An iterator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public void operator -- (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; , int );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance class System.void op_Decrement(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt;&amp; , int32 ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public op_Decrement (ByRef  As ReverseRandomAccessIterator(Of TValue),  As Integer) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ operator --(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ % , int );" />
      <MemberSignature Language="F#" Value="member this.op_Decrement :  * int -&gt; unit" Usage="reverseRandomAccessIterator.op_Decrement (, )" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="System.Int32" RefType="ref" />
        <Parameter Name="A_0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="6957f-176">현재 반복기에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-176">A reference to the current iterator.</span></span></param>
        <param name="A_0"><span data-ttu-id="6957f-177">연산자의 후위 버전임을 나타내는 사용하지 않는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-177">An unused parameter that indicates this is the postfix version of the operator.</span></span></param>
        <summary><span data-ttu-id="6957f-178">역방향 반복기를 한 요소 감소시킵니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-178">Decrements the reverse iterator by one element.</span></span> <span data-ttu-id="6957f-179">감소 연산자의 후위 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-179">This is the postfix version of the decrement operator.</span></span></summary>
        <returns><span data-ttu-id="6957f-180">반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-180">An iterator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public bool operator == (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance bool op_Equality(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Operator == (_Right As ReverseRandomAccessIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool operator ==(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.( = ) : Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; -&gt; bool" Usage="= _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="6957f-181">현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체와 비교할 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-181">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</span></span></param>
        <summary><span data-ttu-id="6957f-182">두 반복기가 같은 개체인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-182">Determines whether two iterators are the same object.</span></span></summary>
        <returns><span data-ttu-id="6957f-183">두 반복기가 같은 개체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-183"><see langword="true" /> if the two iterators are the same object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public bool operator &gt; (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance bool op_GreaterThan(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Operator &gt; (_Right As ReverseRandomAccessIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool operator &gt;(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.( &gt; ) : Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; -&gt; bool" Usage="&gt; _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="6957f-184">왼쪽 반복기와 비교할 반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-184">The iterator to compare with the left-side iterator.</span></span></param>
        <summary><span data-ttu-id="6957f-185">왼쪽 반복기의 위치가 지정된 오른쪽 반복기의 위치보다 큰지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-185">Determines whether the position of the left-side iterator is greater than the position of the given right-side iterator.</span></span></summary>
        <returns><span data-ttu-id="6957f-186">왼쪽 반복기가 지정된 오른쪽 반복기보다 크면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-186"><see langword="true" /> if the left-side iterator is greater than the given right-side iterator; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public bool operator &gt;= (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance bool op_GreaterThanOrEqual(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Operator &gt;= (_Right As ReverseRandomAccessIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool operator &gt;=(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.( &gt;= ) : Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; -&gt; bool" Usage="&gt;= _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="6957f-187">왼쪽 반복기와 비교할 반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-187">The iterator to compare with the left-side iterator.</span></span></param>
        <summary><span data-ttu-id="6957f-188">왼쪽 반복기의 위치가 지정된 오른쪽 반복기의 위치보다 크거나 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-188">Determines whether the position of the left-side iterator is greater than or equal to the position of the given right-side iterator.</span></span></summary>
        <returns><span data-ttu-id="6957f-189">왼쪽 반복기가 지정된 오른쪽 반복기보다 크거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-189"><see langword="true" /> if the left-side iterator is greater than or equal to the given right-side iterator; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public implicit operator Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance class Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1&lt;!TValue&gt; op_Implicit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Widening Operator CType () As IRandomAccessIterator(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; operator Microsoft::VisualC::StlClr::Generic::IRandomAccessIterator&lt;TValue&gt; ^();" />
      <MemberSignature Language="F#" Value="member this.op_Implicit : unit -&gt; Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;'Value&gt;" Usage="reverseRandomAccessIterator.op_Implicit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6957f-190"><see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />를 <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-190">Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</span></span></summary>
        <returns><span data-ttu-id="6957f-191"><see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />인 현재 반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-191">The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Increment">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6957f-192">역방향 반복기를 한 요소 증가시킵니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-192">Increments the reverse iterator by one element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public void operator ++ (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance class System.void op_Increment(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public op_Increment (ByRef  As ReverseRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ operator ++(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="member this.op_Increment :  -&gt; unit" Usage="reverseRandomAccessIterator.op_Increment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="6957f-193">현재 반복기에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-193">A reference to the current iterator.</span></span></param>
        <summary><span data-ttu-id="6957f-194">역방향 반복기를 한 요소 증가시킵니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-194">Increments the reverse iterator by one element.</span></span> <span data-ttu-id="6957f-195">이는 증가 연산자의 전위 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-195">This is the prefix version of the increment operator.</span></span></summary>
        <returns><span data-ttu-id="6957f-196">반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-196">An iterator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public void operator ++ (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; , int );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance class System.void op_Increment(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt;&amp; , int32 ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public op_Increment (ByRef  As ReverseRandomAccessIterator(Of TValue),  As Integer) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ operator ++(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ % , int );" />
      <MemberSignature Language="F#" Value="member this.op_Increment :  * int -&gt; unit" Usage="reverseRandomAccessIterator.op_Increment (, )" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="System.Int32" RefType="ref" />
        <Parameter Name="A_0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="6957f-197">현재 반복기에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-197">A reference to the current iterator.</span></span></param>
        <param name="A_0"><span data-ttu-id="6957f-198">연산자의 후위 버전임을 나타내는 사용하지 않는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-198">An unused parameter that indicates this is the postfix version of the operator.</span></span></param>
        <summary><span data-ttu-id="6957f-199">역방향 반복기를 한 요소 증가시킵니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-199">Increments the reverse iterator by one element.</span></span> <span data-ttu-id="6957f-200">증가 연산자의 후위 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-200">This is the postfix version of the increment operator.</span></span></summary>
        <returns><span data-ttu-id="6957f-201">반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-201">An iterator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public bool operator != (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance bool op_Inequality(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Operator != (_Right As ReverseRandomAccessIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool operator !=(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.op_Inequality : Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; -&gt; bool" Usage="reverseRandomAccessIterator.op_Inequality _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="6957f-202">현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체와 비교할 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-202">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</span></span></param>
        <summary><span data-ttu-id="6957f-203">지정된 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체가 현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> 개체와 다른지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-203">Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</span></span></summary>
        <returns><span data-ttu-id="6957f-204">두 반복기가 서로 다른 개체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-204"><see langword="true" /> if the two iterators are different objects; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public bool operator &lt; (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance bool op_LessThan(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Operator &lt; (_Right As ReverseRandomAccessIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool operator &lt;(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.( &lt; ) : Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; -&gt; bool" Usage="&lt; _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="6957f-205">왼쪽 반복기와 비교할 반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-205">The iterator to compare with the left-side iterator.</span></span></param>
        <summary><span data-ttu-id="6957f-206">왼쪽 반복기의 위치가 지정된 오른쪽 반복기의 위치보다 작은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-206">Determines whether the position of the left-side iterator is less than the position of the given right-side iterator.</span></span></summary>
        <returns><span data-ttu-id="6957f-207">왼쪽 반복기가 지정된 오른쪽 반복기보다 작으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-207"><see langword="true" /> if the left-side iterator is less than the given right-side iterator; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public bool operator &lt;= (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance bool op_LessThanOrEqual(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Operator &lt;= (_Right As ReverseRandomAccessIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool operator &lt;=(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.( &lt;= ) : Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; -&gt; bool" Usage="&lt;= _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="6957f-208">왼쪽 반복기와 비교할 반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-208">The iterator to compare with the left-side iterator.</span></span></param>
        <summary><span data-ttu-id="6957f-209">왼쪽 반복기의 위치가 지정된 오른쪽 반복기의 위치보다 작거나 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-209">Determines whether the position of the left-side iterator is less than or equal to the position of the given right-side iterator.</span></span></summary>
        <returns><span data-ttu-id="6957f-210">왼쪽 반복기가 지정된 오른쪽 반복기보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-210"><see langword="true" /> if the left-side iterator is less than or equal to the given right-side iterator; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_MemberSelection">
      <MemberSignature Language="C#" Value="public static ref TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; _Left);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname !TValue op_MemberSelection(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt; _Left) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_MemberSelection (_Left As ReverseRandomAccessIterator(Of TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TValue % op_MemberSelection(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ _Left);" />
      <MemberSignature Language="F#" Value="static member op_MemberSelection : Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; -&gt; " Usage="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt;.op_MemberSelection _Left" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1000")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue RefType="Ref">
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Left" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Left"><span data-ttu-id="6957f-211">연산자가 적용되는 반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-211">The iterator that the operator is applied to.</span></span></param>
        <summary><span data-ttu-id="6957f-212">반복기가 현재 가리키고 있는 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-212">Returns the element that the iterator is currently pointing to.</span></span></summary>
        <returns><span data-ttu-id="6957f-213">반복기가 현재 가리키고 있는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-213">The element that the iterator is currently pointing to.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_PointerDereference">
      <MemberSignature Language="C#" Value="public static ref TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; _Left);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname !TValue op_PointerDereference(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt; _Left) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_PointerDereference (_Left As ReverseRandomAccessIterator(Of TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TValue % op_PointerDereference(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ _Left);" />
      <MemberSignature Language="F#" Value="static member op_PointerDereference : Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt; -&gt; " Usage="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;'Value&gt;.op_PointerDereference _Left" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1000")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue RefType="Ref">
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Left" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Left"><span data-ttu-id="6957f-214">연산자가 적용되는 반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-214">The iterator that the operator is applied to.</span></span></param>
        <summary><span data-ttu-id="6957f-215">반복기가 현재 가리키고 있는 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-215">Returns the element that the iterator is currently pointing to.</span></span></summary>
        <returns><span data-ttu-id="6957f-216">반복기가 현재 가리키고 있는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-216">The element that the iterator is currently pointing to.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6957f-217">반복기를 지정된 요소 수만큼 감소시키거나 두 반복기 사이의 차이를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-217">Decrements the iterator by the given number of elements, or determines the difference between two iterators.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public int operator - (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance int32 op_Subtraction(class Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Operator - (_Right As IRandomAccessIterator(Of TValue)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int operator -(Microsoft::VisualC::StlClr::Generic::IRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.( - ) : Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;'Value&gt; -&gt; int" Usage="- _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="6957f-218">현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> 개체에서 뺄 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-218">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> to be subtracted from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</span></span></param>
        <summary><span data-ttu-id="6957f-219">두 반복기 사이의 차이를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-219">Determines the difference between two iterators.</span></span></summary>
        <returns><span data-ttu-id="6957f-220">두 반복기 사이의 차이(요소 수)입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-220">The difference, in number of elements, between the two iterators.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public void operator - (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; , int _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance class System.void op_Subtraction(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt;&amp; , int32 _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Operator - (ByRef  As ReverseRandomAccessIterator(Of TValue), _Right As Integer) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ operator -(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ % , int _Right);" />
      <MemberSignature Language="F#" Value="member this.( - ) :  * int -&gt; unit" Usage=" - _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Right" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="6957f-221">현재 반복기에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-221">A reference to the current iterator.</span></span></param>
        <param name="_Right"><span data-ttu-id="6957f-222">감소시킬 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-222">The number of elements to decrement.</span></span></param>
        <summary><span data-ttu-id="6957f-223">반복기를 지정된 요소 수만큼 감소시킵니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-223">Decrements the iterator by the given number of elements.</span></span> <span data-ttu-id="6957f-224">정수 매개 변수는 빼기 연산자의 오른쪽에 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-224">The integer parameter is specified on the right side of the subtraction operator.</span></span></summary>
        <returns><span data-ttu-id="6957f-225">반복기입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-225">An iterator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="prev">
      <MemberSignature Language="C#" Value="public virtual void prev ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void prev() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub prev ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void prev();" />
      <MemberSignature Language="F#" Value="abstract member prev : unit -&gt; unit&#xA;override this.prev : unit -&gt; unit" Usage="reverseRandomAccessIterator.prev " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6957f-226">반복기를 현재 요소 바로 뒤의 요소에 배치합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-226">Positions the iterator to the element immediately after the current element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="valid">
      <MemberSignature Language="C#" Value="public virtual bool valid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool valid() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function valid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool valid();" />
      <MemberSignature Language="F#" Value="abstract member valid : unit -&gt; bool&#xA;override this.valid : unit -&gt; bool" Usage="reverseRandomAccessIterator.valid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6957f-227">반복기가 유효하며 기본 컨테이너를 이동하는 데 안전하게 사용할 수 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-227">Determines whether the iterator is valid and can be safely used to traverse the underlying container.</span></span></summary>
        <returns><span data-ttu-id="6957f-228">반복기가 유효하고 사용하기에 안전하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6957f-228"><see langword="true" /> if the iterator is valid and safe to use; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>