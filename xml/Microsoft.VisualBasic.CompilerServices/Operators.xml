<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64734fd08704fe605ee40c629bac5127c28f455e" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57911319" /></Metadata><TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <TypeSignature Language="F#" Value="type Operators = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="be65a-101">Visual Basic 컴파일러에서 내부적으로 사용하는 <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> 및 <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />와 같은 런타임에 바인딩된 수학 연산자를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-102">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <related type="Article" href="~/docs/visual-basic/language-reference/operators/index.md"><span data-ttu-id="be65a-103">연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-103">Operators (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AddObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AddObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-104">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-104">Required.</span></span> <span data-ttu-id="be65a-105">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-105">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-106">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-106">Required.</span></span> <span data-ttu-id="be65a-107">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-107">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="be65a-108">Visual Basic 더하기(+) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-108">Represents the Visual Basic addition (+) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-109"><paramref name="Left" />와 <paramref name="Right" />의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-109">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-110">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-110">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="be65a-111">+ 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-111">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AndObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AndObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-112">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-112">Required.</span></span> <span data-ttu-id="be65a-113">임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-113">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-114">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-114">Required.</span></span> <span data-ttu-id="be65a-115">임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-115">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="be65a-116">Visual Basic <see langword="And" /> 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-116">Represents the Visual Basic <see langword="And" /> operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-117"><see langword="Boolean" /> 연산의 경우 <paramref name="Left" />와 <paramref name="Right" />가 모두 <see langword="True" />로 계산되면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-117">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="be65a-118">비트 연산의 경우 <paramref name="Left" />와 <paramref name="Right" />가 모두 1로 계산되면 1이고, 그렇지 않으면 0입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-118">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-119">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="be65a-120">And 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-120">And Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObject : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Right" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="TextCompare" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-121">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-121">Required.</span></span> <span data-ttu-id="be65a-122">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-122">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-123">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-123">Required.</span></span> <span data-ttu-id="be65a-124">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-124">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="be65a-125">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-125">Required.</span></span> <span data-ttu-id="be65a-126">대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-126"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="be65a-127">Visual Basic 비교 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-127">Represents Visual Basic comparison operators.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="be65a-128">값</span><span class="sxs-lookup"><span data-stu-id="be65a-128">Value</span></span> 
 </term>
              <description> <span data-ttu-id="be65a-129">조건</span><span class="sxs-lookup"><span data-stu-id="be65a-129">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="be65a-130">-1</span><span class="sxs-lookup"><span data-stu-id="be65a-130">-1</span></span> 
 </term>
              <description><span data-ttu-id="be65a-131">
                <paramref name="Left" />가 <paramref name="Right" />보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="be65a-131">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="be65a-132">0</span><span class="sxs-lookup"><span data-stu-id="be65a-132">0</span></span> 
 </term>
              <description><span data-ttu-id="be65a-133">
                <paramref name="Left" />와 <paramref name="Right" />가 같은 경우</span><span class="sxs-lookup"><span data-stu-id="be65a-133">
                <paramref name="Left" /> and <paramref name="Right" /> are equal.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="be65a-134">1</span><span class="sxs-lookup"><span data-stu-id="be65a-134">1</span></span> 
 </term>
              <description><span data-ttu-id="be65a-135">
                <paramref name="Left" />가 <paramref name="Right" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="be65a-135">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-136">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-136">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="be65a-137">비교 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-137">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-138">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-138">Required.</span></span> <span data-ttu-id="be65a-139">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-139">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-140">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-140">Required.</span></span> <span data-ttu-id="be65a-141">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-141">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="be65a-142">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-142">Required.</span></span> <span data-ttu-id="be65a-143">대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-143"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="be65a-144">Visual Basic 같음(=) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-144">Represents the Visual Basic equal (=) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-145"><paramref name="Left" />과 <paramref name="Right" />가 같으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-145"><see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-146">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-146">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="be65a-147">비교 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-147">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreater : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-148">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-148">Required.</span></span> <span data-ttu-id="be65a-149">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-149">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-150">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-150">Required.</span></span> <span data-ttu-id="be65a-151">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-151">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="be65a-152">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-152">Required.</span></span> <span data-ttu-id="be65a-153">대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-153"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="be65a-154">Visual Basic 보다 큼(&gt;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-154">Represents the Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-155"><see langword="True" />이 <paramref name="Left" />보다 크면 <paramref name="Right" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-155"><see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-156">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-156">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="be65a-157">비교 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-157">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreaterEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-158">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-158">Required.</span></span> <span data-ttu-id="be65a-159">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-159">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-160">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-160">Required.</span></span> <span data-ttu-id="be65a-161">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-161">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="be65a-162">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-162">Required.</span></span> <span data-ttu-id="be65a-163">대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-163"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="be65a-164">Visual Basic 보다 크거나 같음(&gt;=) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-164">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-165"><paramref name="Left" />가 <paramref name="Right" />보다 크거나 같으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-165"><see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-166">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-166">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="be65a-167">비교 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-167">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLess : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-168">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-168">Required.</span></span> <span data-ttu-id="be65a-169">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-169">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-170">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-170">Required.</span></span> <span data-ttu-id="be65a-171">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-171">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="be65a-172">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-172">Required.</span></span> <span data-ttu-id="be65a-173">대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-173"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="be65a-174">Visual Basic 보다 작음(&lt;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-174">Represents the Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-175"><paramref name="Left" />가 <paramref name="Right" />보다 작으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-175"><see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-176">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-176">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="be65a-177">비교 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-177">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLessEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-178">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-178">Required.</span></span> <span data-ttu-id="be65a-179">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-179">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-180">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-180">Required.</span></span> <span data-ttu-id="be65a-181">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-181">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="be65a-182">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-182">Required.</span></span> <span data-ttu-id="be65a-183">대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-183"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="be65a-184">Visual Basic 보다 작거나 같음(&lt;=) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-184">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-185"><paramref name="Left" />가 <paramref name="Right" />보다 작거나 같으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-185"><see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-186">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-186">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="be65a-187">비교 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-187">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectNotEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-188">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-188">Required.</span></span> <span data-ttu-id="be65a-189">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-189">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-190">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-190">Required.</span></span> <span data-ttu-id="be65a-191">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-191">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="be65a-192">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-192">Required.</span></span> <span data-ttu-id="be65a-193">대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-193"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="be65a-194">Visual Basic 같지 않음(&lt;&gt;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-194">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-195"><see langword="True" />가 <paramref name="Left" />와 다르면 <paramref name="Right" />이고, 그러지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-195"><see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-196">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-196">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="be65a-197">비교 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-197">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareString : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareString (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-198">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-198">Required.</span></span> <span data-ttu-id="be65a-199">임의의 <see langword="String" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-199">Any <see langword="String" /> expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-200">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-200">Required.</span></span> <span data-ttu-id="be65a-201">임의의 <see langword="String" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-201">Any <see langword="String" /> expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="be65a-202">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-202">Required.</span></span> <span data-ttu-id="be65a-203">대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-203"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="be65a-204">이진 비교를 수행하거나, 두 문자열이 지정된 경우 텍스트 문자열 비교를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-204">Performs binary or text string comparison when given two strings.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="be65a-205">값</span><span class="sxs-lookup"><span data-stu-id="be65a-205">Value</span></span> 
 </term>
              <description> <span data-ttu-id="be65a-206">조건</span><span class="sxs-lookup"><span data-stu-id="be65a-206">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="be65a-207">-1</span><span class="sxs-lookup"><span data-stu-id="be65a-207">-1</span></span> 
 </term>
              <description><span data-ttu-id="be65a-208">
                <paramref name="Left" />가 <paramref name="Right" />보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="be65a-208">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="be65a-209">0</span><span class="sxs-lookup"><span data-stu-id="be65a-209">0</span></span> 
 </term>
              <description><span data-ttu-id="be65a-210">
                <paramref name="Left" />가 <paramref name="Right" />와 같은 경우</span><span class="sxs-lookup"><span data-stu-id="be65a-210">
                <paramref name="Left" /> is equal to <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="be65a-211">1</span><span class="sxs-lookup"><span data-stu-id="be65a-211">1</span></span> 
 </term>
              <description><span data-ttu-id="be65a-212">
                <paramref name="Left" />가 <paramref name="Right" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="be65a-212">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-213">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-213">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="be65a-214">두 문자열을 비교 하는 Visual Basic 같음 연산자를 사용 하면 문자열을 전달 합니다 <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> 의 값과 함께 메서드 `False` 에 대 한는 `TextCompare` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-214">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="be65a-215">이 서 수 또는 값에 따라 현재 문화권에 따라 대/소문자 구분 비교를 수행 합니다 [Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md) 문입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-215">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the [Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md) statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="be65a-216">비교 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-216">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ConcatenateObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-217">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-217">Required.</span></span> <span data-ttu-id="be65a-218">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-218">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-219">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-219">Required.</span></span> <span data-ttu-id="be65a-220">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-220">Any expression.</span></span></param>
        <summary><span data-ttu-id="be65a-221">Visual Basic 연결(&amp;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-221">Represents the Visual Basic concatenation (&amp;) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-222"><paramref name="Left" />와 <paramref name="Right" />를 연결한 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-222">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-223">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-223">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md"><span data-ttu-id="be65a-224">&amp; 연산자 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-224">&amp; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-225">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-225">Required.</span></span> <span data-ttu-id="be65a-226">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-226">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-227">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-227">Required.</span></span> <span data-ttu-id="be65a-228">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-228">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="be65a-229">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-229">Required.</span></span> <span data-ttu-id="be65a-230">대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-230"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="be65a-231">오버로드된 Visual Basic 같음(=) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-231">Represents the overloaded Visual Basic equals (=) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-232">오버로드된 같음 연산자의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-232">The result of the overloaded equals operator.</span></span> <span data-ttu-id="be65a-233">연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-233"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-234">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-234">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="be65a-235">연산자 프로시저</span><span class="sxs-lookup"><span data-stu-id="be65a-235">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreater : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-236">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-236">Required.</span></span> <span data-ttu-id="be65a-237">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-237">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-238">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-238">Required.</span></span> <span data-ttu-id="be65a-239">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-239">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="be65a-240">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-240">Required.</span></span> <span data-ttu-id="be65a-241">대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-241"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="be65a-242">오버로드된 Visual Basic 보다 큼(&gt;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-242">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-243">오버로드된 보다 큼 연산자의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-243">The result of the overloaded greater-than operator.</span></span> <span data-ttu-id="be65a-244">연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-244"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-245">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-245">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="be65a-246">연산자 프로시저</span><span class="sxs-lookup"><span data-stu-id="be65a-246">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreaterEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-247">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-247">Required.</span></span> <span data-ttu-id="be65a-248">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-248">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-249">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-249">Required.</span></span> <span data-ttu-id="be65a-250">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-250">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="be65a-251">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-251">Required.</span></span> <span data-ttu-id="be65a-252">대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-252"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="be65a-253">오버로드된 Visual Basic 보다 크거나 같음(&gt;=) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-253">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-254">오버로드된 보다 크거나 같음 연산자의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-254">The result of the overloaded greater-than or equal-to operator.</span></span> <span data-ttu-id="be65a-255">연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-255"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-256">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-256">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="be65a-257">연산자 프로시저</span><span class="sxs-lookup"><span data-stu-id="be65a-257">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLess : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-258">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-258">Required.</span></span> <span data-ttu-id="be65a-259">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-259">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-260">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-260">Required.</span></span> <span data-ttu-id="be65a-261">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-261">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="be65a-262">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-262">Required.</span></span> <span data-ttu-id="be65a-263">대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-263"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="be65a-264">오버로드된 Visual Basic 보다 작음(&lt;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-264">Represents the overloaded Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-265">오버로드된 보다 작음 연산자의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-265">The result of the overloaded less-than operator.</span></span> <span data-ttu-id="be65a-266">연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-266"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-267">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-267">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="be65a-268">연산자 프로시저</span><span class="sxs-lookup"><span data-stu-id="be65a-268">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLessEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-269">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-269">Required.</span></span> <span data-ttu-id="be65a-270">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-270">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-271">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-271">Required.</span></span> <span data-ttu-id="be65a-272">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-272">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="be65a-273">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-273">Required.</span></span> <span data-ttu-id="be65a-274">대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-274"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="be65a-275">오버로드된 Visual Basic 보다 작거나 같음(&lt;=) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-275">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-276">오버로드된 보다 작거나 같음 연산자의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-276">The result of the overloaded less-than or equal-to operator.</span></span> <span data-ttu-id="be65a-277">연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-277"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-278">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-278">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="be65a-279">연산자 프로시저</span><span class="sxs-lookup"><span data-stu-id="be65a-279">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectNotEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-280">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-280">Required.</span></span> <span data-ttu-id="be65a-281">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-281">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-282">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-282">Required.</span></span> <span data-ttu-id="be65a-283">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-283">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="be65a-284">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-284">Required.</span></span> <span data-ttu-id="be65a-285">대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-285"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="be65a-286">오버로드된 Visual Basic 같지 않음(&lt;&gt;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-286">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-287">오버로드된 같지 않음 연산자의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-287">The result of the overloaded not-equal operator.</span></span> <span data-ttu-id="be65a-288">연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-288"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-289">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-289">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="be65a-290">연산자 프로시저</span><span class="sxs-lookup"><span data-stu-id="be65a-290">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member DivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.DivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-291">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-291">Required.</span></span> <span data-ttu-id="be65a-292">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-292">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-293">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-293">Required.</span></span> <span data-ttu-id="be65a-294">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-294">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="be65a-295">Visual Basic 나누기(/) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-295">Represents the Visual Basic division (/) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-296"><paramref name="Left" />를 <paramref name="Right" />로 나눈 전체 몫(나머지 포함)입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-296">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-297">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-297">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md"><span data-ttu-id="be65a-298">/ 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-298">/ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ExponentObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-299">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-299">Required.</span></span> <span data-ttu-id="be65a-300">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-300">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-301">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-301">Required.</span></span> <span data-ttu-id="be65a-302">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-302">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="be65a-303">Visual Basic 지수(^) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-303">Represents the Visual Basic exponent (^) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-304"><paramref name="Left" />를 <paramref name="Right" />번 거듭제곱한 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-304">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-305">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-305">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operators.md"><span data-ttu-id="be65a-306">^ 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-306">^ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, Arguments)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] arguments);" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object FallbackInvokeUserDefinedOperator(object vbOp, object[] arguments) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, arguments As Object()) As Object" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ arguments);" FrameworkAlternate="netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Arguments" Type="System.Object[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="vbOp"><span data-ttu-id="be65a-307">사용자 정의 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-307">The user-defined operator.</span></span></param>
        <param name="Arguments"><span data-ttu-id="be65a-308">사용자 정의 연산자에 전달할 인수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-308">Argument values to pass to the user-defined operator.</span></span></param>
        <param name="arguments">To be added.</param>
        <summary><span data-ttu-id="be65a-309">런타임에 바인딩된 사용자 정의 연산자 계산을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-309">Executes a late-bound evaluation of a user-defined operator.</span></span> <span data-ttu-id="be65a-310">이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-310">This helper method is not meant to be called directly from your code.</span></span></summary>
        <returns><span data-ttu-id="be65a-311">사용자 정의 연산자에서 반환된 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-311">The result returned from the user-defined operator.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member IntDivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-312">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-312">Required.</span></span> <span data-ttu-id="be65a-313">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-313">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-314">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-314">Required.</span></span> <span data-ttu-id="be65a-315">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-315">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="be65a-316">Visual Basic 정수 나누기(\\) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-316">Represents the Visual Basic integer division (\\) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-317"><paramref name="Left" />를 <paramref name="Right" />로 나눠 나머지는 버리고 정수 부분만 남긴 몫입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-317">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-318">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-318">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md"><span data-ttu-id="be65a-319">\ 연산자</span><span class="sxs-lookup"><span data-stu-id="be65a-319">\ Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member LeftShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="be65a-320">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-320">Required.</span></span> <span data-ttu-id="be65a-321">정수 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-321">Integral numeric expression.</span></span> <span data-ttu-id="be65a-322">이동할 비트 패턴입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-322">The bit pattern to be shifted.</span></span> <span data-ttu-id="be65a-323">데이터 형식은 정수 계열 형식(<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> 또는 <see langword="ULong" />)이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-323">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="be65a-324">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-324">Required.</span></span> <span data-ttu-id="be65a-325">숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-325">Numeric expression.</span></span> <span data-ttu-id="be65a-326">비트 패턴을 이동할 비트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-326">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="be65a-327">데이터 형식은 <see langword="Integer" />이거나 <see langword="Integer" />로 확장되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-327">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="be65a-328">Visual Basic 산술 왼쪽 시프트(&lt;&lt;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-328">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-329">정수 숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-329">An integral numeric value.</span></span> <span data-ttu-id="be65a-330">비트 패턴을 이동한 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-330">The result of shifting the bit pattern.</span></span> <span data-ttu-id="be65a-331">데이터 형식은 <paramref name="Operand" />의 형식과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-331">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-332">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-332">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md"><span data-ttu-id="be65a-333">&lt;&lt; 연산자 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-333">&lt;&lt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObject : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeObject (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Pattern" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="be65a-334">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-334">Required.</span></span> <span data-ttu-id="be65a-335">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-335">Any expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="be65a-336">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-336">Required.</span></span> <span data-ttu-id="be65a-337">Like Operator에 설명된 패턴 일치 규칙을 따르는 문자열 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-337">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="be65a-338">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-338">Required.</span></span> <span data-ttu-id="be65a-339">작업에서 텍스트 비교를 사용할지 이진 비교를 사용할지를 지정하는 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-339">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="be65a-340">Visual Basic <see langword="Like" /> 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-340">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-341"><paramref name="Source" />의 값에 대한 문자열 표현이 <paramref name="Pattern" />에 들어 있는 패턴을 따르면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-341"><see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="be65a-342"><paramref name="Source" /> 및 <paramref name="Pattern" />이 모두 <see langword="True" />이면 <see langword="Nothing" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-342"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-343">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-343">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="be65a-344">Like 연산자</span><span class="sxs-lookup"><span data-stu-id="be65a-344">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeString : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeString (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Pattern" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="be65a-345">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-345">Required.</span></span> <span data-ttu-id="be65a-346">임의의 <see langword="String" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-346">Any <see langword="String" /> expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="be65a-347">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-347">Required.</span></span> <span data-ttu-id="be65a-348">Like 연산자에 설명된 패턴 일치 규칙을 따르는 <see langword="String" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-348">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="be65a-349">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-349">Required.</span></span> <span data-ttu-id="be65a-350">작업에서 텍스트 비교를 사용할지 이진 비교를 사용할지를 지정하는 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-350">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="be65a-351">Visual Basic <see langword="Like" /> 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-351">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-352"><paramref name="Source" />의 값이 <paramref name="Pattern" />에 들어 있는 패턴을 따르면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-352"><see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="be65a-353"><paramref name="Source" /> 및 <paramref name="Pattern" />이 모두 비어 있으면 <see langword="True" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-353"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-354">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-354">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="be65a-355">Like 연산자</span><span class="sxs-lookup"><span data-stu-id="be65a-355">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ModObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ModObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-356">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-356">Required.</span></span> <span data-ttu-id="be65a-357">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-357">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-358">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-358">Required.</span></span> <span data-ttu-id="be65a-359">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-359">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="be65a-360">Visual Basic <see langword="Mod" /> 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-360">Represents the Visual Basic <see langword="Mod" /> operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-361"><paramref name="Left" />를 <paramref name="Right" />로 나눈 나머지입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-361">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-362">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-362">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="be65a-363">Mod 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-363">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member MultiplyObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-364">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-364">Required.</span></span> <span data-ttu-id="be65a-365">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-365">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-366">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-366">Required.</span></span> <span data-ttu-id="be65a-367">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-367">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="be65a-368">Visual Basic 곱하기(\*) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-368">Represents the Visual Basic multiply (\*) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-369"><paramref name="Left" />와 <paramref name="Right" />의 곱입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-369">The product of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-370">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-370">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md"><span data-ttu-id="be65a-371">\* 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-371">\* Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NegateObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NegateObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="be65a-372">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-372">Required.</span></span> <span data-ttu-id="be65a-373">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-373">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="be65a-374">Visual Basic 단항 빼기(-) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-374">Represents the Visual Basic unary minus (-) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-375"><paramref name="Operand" />의 음수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-375">The negative value of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-376">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-376">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="be65a-377">- 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-377">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NotObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NotObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="be65a-378">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-378">Required.</span></span> <span data-ttu-id="be65a-379">임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-379">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="be65a-380">Visual Basic <see langword="Not" /> 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-380">Represents the Visual Basic <see langword="Not" /> operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-381"><see langword="Boolean" /> 연산의 경우 <paramref name="Operand" />가 <see langword="False" />이면 <see langword="True" />이고, 그렇지 않으면 <see langword="True" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-381">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="be65a-382">비트 연산의 경우 <paramref name="Operand" />가 0이면 1이고, 그렇지 않으면 0입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-382">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-383">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-383">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md"><span data-ttu-id="be65a-384">Not 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-384">Not Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member OrObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.OrObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-385">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-385">Required.</span></span> <span data-ttu-id="be65a-386">임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-386">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-387">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-387">Required.</span></span> <span data-ttu-id="be65a-388">임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-388">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="be65a-389">Visual Basic <see langword="Or" /> 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-389">Represents the Visual Basic <see langword="Or" /> operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-390"><see langword="Boolean" /> 연산의 경우 <paramref name="Left" />와 <paramref name="Right" />가 모두 <see langword="False" />로 계산되면 <see langword="False" />이고, 그렇지 않으면 <see langword="True" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-390">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="be65a-391">비트 연산의 경우 <paramref name="Left" />와 <paramref name="Right" />이 모두 0으로 계산되면 0이고, 그렇지 않으면 1입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-391">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-392">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-392">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md"><span data-ttu-id="be65a-393">Or 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-393">Or Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member PlusObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.PlusObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="be65a-394">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-394">Required.</span></span> <span data-ttu-id="be65a-395">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-395">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="be65a-396">Visual Basic 단항 더하기(-) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-396">Represents the Visual Basic unary plus (+) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-397"><paramref name="Operand" />의 값</span><span class="sxs-lookup"><span data-stu-id="be65a-397">The value of <paramref name="Operand" />.</span></span> <span data-ttu-id="be65a-398"><paramref name="Operand" />의 부호는 변경되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-398">(The sign of the <paramref name="Operand" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-399">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-399">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="be65a-400">+ 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-400">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member RightShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="be65a-401">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-401">Required.</span></span> <span data-ttu-id="be65a-402">정수 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-402">Integral numeric expression.</span></span> <span data-ttu-id="be65a-403">이동할 비트 패턴입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-403">The bit pattern to be shifted.</span></span> <span data-ttu-id="be65a-404">데이터 형식은 정수 계열 형식(<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> 또는 <see langword="ULong" />)이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-404">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="be65a-405">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-405">Required.</span></span> <span data-ttu-id="be65a-406">숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-406">Numeric expression.</span></span> <span data-ttu-id="be65a-407">비트 패턴을 이동할 비트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-407">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="be65a-408">데이터 형식은 <see langword="Integer" />이거나 <see langword="Integer" />로 확장되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-408">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="be65a-409">Visual Basic 산술 오른쪽 시프트(&gt;&gt;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-409">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-410">정수 숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-410">An integral numeric value.</span></span> <span data-ttu-id="be65a-411">비트 패턴을 이동한 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-411">The result of shifting the bit pattern.</span></span> <span data-ttu-id="be65a-412">데이터 형식은 <paramref name="Operand" />의 형식과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-412">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-413">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-413">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md"><span data-ttu-id="be65a-414">&gt;&gt; 연산자 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-414">&gt;&gt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member SubtractObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-415">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-415">Required.</span></span> <span data-ttu-id="be65a-416">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-416">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-417">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-417">Required.</span></span> <span data-ttu-id="be65a-418">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-418">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="be65a-419">Visual Basic 빼기(-) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-419">Represents the Visual Basic subtraction (-) operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-420"><paramref name="Left" />와 <paramref name="Right" />의 차이입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-420">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-421">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-421">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="be65a-422">- 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-422">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member XorObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.XorObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="be65a-423">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-423">Required.</span></span> <span data-ttu-id="be65a-424">임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-424">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="be65a-425">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="be65a-425">Required.</span></span> <span data-ttu-id="be65a-426">임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-426">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="be65a-427">Visual Basic <see langword="Xor" /> 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-427">Represents the Visual Basic <see langword="Xor" /> operator.</span></span></summary>
        <returns><span data-ttu-id="be65a-428"><see langword="Boolean" /> 또는 숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-428">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="be65a-429"><see langword="Boolean" /> 비교의 경우 반환 값은 두 <see langword="Boolean" /> 값의 배타적 논리합입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-429">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="be65a-430">비트(숫자) 연산의 경우 반환 값은 두 숫자 비트 패턴의 배타적 비트 논리합을 나타내는 숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-430">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="be65a-431">자세한 내용은 <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="be65a-431">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be65a-432">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be65a-432">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="be65a-433">배타적 or 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="be65a-433">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>