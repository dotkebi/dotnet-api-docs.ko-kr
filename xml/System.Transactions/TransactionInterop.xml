<Type Name="TransactionInterop" FullName="System.Transactions.TransactionInterop">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e11f94538a8379fa12a0488430c4fc8daf4f448e" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58744423" /></Metadata><TypeSignature Language="C#" Value="public static class TransactionInterop" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TransactionInterop extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.TransactionInterop" />
  <TypeSignature Language="VB.NET" Value="Public Class TransactionInterop" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransactionInterop abstract sealed" />
  <TypeSignature Language="F#" Value="type TransactionInterop = class" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="72eb4-101"><see cref="N:System.Transactions" />와 구성 요소(MSDTC, COM+ 또는 <see cref="N:System.EnterpriseServices" />와 상호 작용하도록 이전에 작성된 구성 요소) 간의 상호 작용을 원활하게 합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-101">Facilitates interaction between <see cref="N:System.Transactions" /> and components that were previously written to interact with MSDTC, COM+, or <see cref="N:System.EnterpriseServices" />.</span></span> <span data-ttu-id="72eb4-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72eb4-103">이 클래스는 트랜잭션 전파에 대 한 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-103">This class provides methods for transaction propagation.</span></span> <span data-ttu-id="72eb4-104">이 프로세스의 작동 방식에 대 한 자세한 내용은 참조 하세요. [트랜잭션 전파](https://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp)합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-104">For more information on how this process works, see [Transaction Propagation](https://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp).</span></span>  
  
 <span data-ttu-id="72eb4-105">이 클래스에서 제공 하는 메서드를 사용 하 두 가지 유형의 트랜잭션 전파를 내보내기/가져오기 (밀어넣기 모델) 및 전송기/수신기 (끌어오기 모델)에 참여할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-105">Using the methods provided by this class, you can engage in two types of transaction propagations, Export/Import (push model) and Transmitter/Receiver (pull model).</span></span>  
  
 <span data-ttu-id="72eb4-106">내보내기/가져오기 (밀어넣기 모델) 전파이 단계 포함</span><span class="sxs-lookup"><span data-stu-id="72eb4-106">The Export/Import (push model) propagation involves these steps,</span></span>  
  
1.  <span data-ttu-id="72eb4-107">원격 컴퓨터에는 "위치" 해당 컴퓨터의 트랜잭션 관리자의 호출 하 여 가져올는 <xref:System.Transactions.TransactionInterop.GetWhereabouts%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="72eb4-107">On the remote machine, obtain the "whereabouts" of the transaction manager of that machine by calling the <xref:System.Transactions.TransactionInterop.GetWhereabouts%2A> method.</span></span> <span data-ttu-id="72eb4-108">그런 다음이 부분은 향후 사용을 위해 클라이언트 컴퓨터에 대 한 정보를 캐시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-108">You can then cache this piece of information on the client machine for future usage.</span></span>  
  
2.  <span data-ttu-id="72eb4-109">기본 메서드를 사용 하 여 클라이언트 컴퓨터에 위치를 포함 하는 데이터를 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-109">Send the data containing the whereabouts to the client machine using any preferred method</span></span>  
  
3.  <span data-ttu-id="72eb4-110">클라이언트 컴퓨터의 whereabouts를 사용 하 여 트랜잭션을 원격 컴퓨터에 "export" 트랜잭션 "쿠키"를 생성 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-110">On the client machine, use the whereabouts to "export" the transaction to the remote machine and generate a transaction "cookie".</span></span>  <span data-ttu-id="72eb4-111">호출 하 여 이렇게 <xref:System.Transactions.TransactionInterop.GetExportCookie%2A> 원격 컴퓨터의 위치를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-111">This is done by calling <xref:System.Transactions.TransactionInterop.GetExportCookie%2A> and passing in the remote machine's whereabouts.</span></span>  
  
4.  <span data-ttu-id="72eb4-112">기본 메서드를 사용 하 여 원격 컴퓨터에 "쿠키" 트랜잭션을 포함 하는 데이터를 보내기</span><span class="sxs-lookup"><span data-stu-id="72eb4-112">Send the data containing the transaction "cookie" to the remote machine using any preferred method</span></span>  
  
5.  <span data-ttu-id="72eb4-113">원격 컴퓨터를 사용 하 여 트랜잭션 "쿠키"를 호출 하 여 클라이언트 트랜잭션의 복제본을 가져옵니다는 <xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="72eb4-113">On the remote machine, use the transaction "cookie" to obtain a clone of the client transaction by calling the <xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A> method.</span></span>  
  
6.  <span data-ttu-id="72eb4-114">원격 컴퓨터를 사용 하 여 복제 트랜잭션을 사용 하 여 리소스 관리자를 등록 합니다 <xref:System.Transactions.Transaction.EnlistVolatile%2A> 또는 <xref:System.Transactions.Transaction.EnlistDurable%2A> 의 메서드는 <xref:System.Transactions.Transaction> 클래스.</span><span class="sxs-lookup"><span data-stu-id="72eb4-114">On the remote machine, use the clone transaction to enlist the resource manager using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> or <xref:System.Transactions.Transaction.EnlistDurable%2A> methods of the <xref:System.Transactions.Transaction> class.</span></span>  
  
 <span data-ttu-id="72eb4-115">(끌어오기 모델) 전송기/수신기 전파에서는 다음이 단계</span><span class="sxs-lookup"><span data-stu-id="72eb4-115">The Transmitter/Receiver (pull model) propagation involves these steps,</span></span>  
  
-   <span data-ttu-id="72eb4-116">클라이언트 컴퓨터는 트랜잭션을 사용 하 여 토큰을 생성 해당 "전파"를 호출 하 여 <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A></span><span class="sxs-lookup"><span data-stu-id="72eb4-116">On the client machine, using the transaction generates a corresponding "propagation token" by calling <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A></span></span>  
  
-   <span data-ttu-id="72eb4-117">토큰이 포함 된 "전파" 트랜잭션의 기본 메서드를 사용 하 여 원격 컴퓨터에 데이터 보내기</span><span class="sxs-lookup"><span data-stu-id="72eb4-117">Send the data containing the "propagation token" of the transaction to the remote machine using any preferred method</span></span>  
  
-   <span data-ttu-id="72eb4-118">원격 컴퓨터에서 "전파 토큰"을 사용 하 여 호출 하 여 클라이언트 트랜잭션 복제를 가져오려면 <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A></span><span class="sxs-lookup"><span data-stu-id="72eb4-118">On the remote machine, use the "propagation token" to obtain a clone of the client transaction by calling <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A></span></span>  
  
 <span data-ttu-id="72eb4-119">전송기/수신기 모델 트랜잭션 토큰이 원격 컴퓨터에 전송 됩니다 하지만 원격 컴퓨터를 사용할 수 없으며 트랜잭션을 가져올 수 있는 시나리오에 더 나은 성능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-119">The Transmitter/Receiver model provides better performance in scenarios where the transaction token is sent to a remote machine, but the remote machine may not use it to obtain the transaction.</span></span>  <span data-ttu-id="72eb4-120">될 때까지 트랜잭션 전파 되지 않으므로 이것이 <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-120">This is because the transaction is not propagated until <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A> is called.</span></span> <span data-ttu-id="72eb4-121">또 다른 장점은 내보내기 쿠키 whereabouts를 제공 하는 컴퓨터 에서만 사용할 수 있지만 모든 원격 컴퓨터에 전파 토큰을 받을 수 있는지입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-121">Another advantage is that the propagation token can be sent to any remote machine, while the export cookie can be used only on the machine that provided the whereabouts.</span></span>  
  
 <span data-ttu-id="72eb4-122">그러나 유의 원격 트랜잭션 관리자의 whereabouts 전파 토큰에서 캡슐화 되는 내보내기/가져오기 모델에서 해당 트랜잭션 쿠키 보다 커집니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-122">However, you should also note that the whereabouts of remote transaction managers are encapsulated in all the propagation tokens, making them bigger than the corresponding transaction cookies from the Export/Import model.</span></span>  
  
 <span data-ttu-id="72eb4-123">**하지만 참고** 이 형식을 사용 하 여 <xref:System.Security.Permissions.SecurityAction.LinkDemand> 신뢰할 수 없는 코드에서 호출할를 방지 하기 위해 필요, 직접 실행 호출자만 소유는 `FullTrust` 권한 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-123">**Note** This type uses <xref:System.Security.Permissions.SecurityAction.LinkDemand> to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the `FullTrust` permission set.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetDtcTransaction">
      <MemberSignature Language="C#" Value="public static System.Transactions.IDtcTransaction GetDtcTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Transactions.IDtcTransaction GetDtcTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Transactions::IDtcTransaction ^ GetDtcTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="static member GetDtcTransaction : System.Transactions.Transaction -&gt; System.Transactions.IDtcTransaction" Usage="System.Transactions.TransactionInterop.GetDtcTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.IDtcTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction"><span data-ttu-id="72eb4-124">마샬링할 <see cref="T:System.Transactions.Transaction" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-124">A <see cref="T:System.Transactions.Transaction" /> instance to be marshaled.</span></span></param>
        <summary><span data-ttu-id="72eb4-125"><see cref="T:System.Transactions.Transaction" />을 나타내는 <see cref="T:System.Transactions.IDtcTransaction" /> 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-125">Gets an <see cref="T:System.Transactions.IDtcTransaction" /> instance that represents a <see cref="T:System.Transactions.Transaction" />.</span></span></summary>
        <returns><span data-ttu-id="72eb4-126"><see cref="T:System.Transactions.IDtcTransaction" />을 나타내는 <see cref="T:System.Transactions.Transaction" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-126">An <see cref="T:System.Transactions.IDtcTransaction" /> instance that represents a <see cref="T:System.Transactions.Transaction" />.</span></span>  <span data-ttu-id="72eb4-127"><see cref="T:System.Transactions.IDtcTransaction" /> 인스턴스는 MSDTC에서 사용되는 관리되지 않는 형식의 <see href="https://docs.microsoft.com/previous-versions/windows/desktop/ms686531(v=vs.85)">ITransaction</see> 및 <see cref="N:System.EnterpriseServices" />에서 사용되는 관리된 형식의 <see cref="T:System.EnterpriseServices.ITransaction" />과 호환됩니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-127">The <see cref="T:System.Transactions.IDtcTransaction" /> instance is compatible with the unmanaged form of <see href="https://docs.microsoft.com/previous-versions/windows/desktop/ms686531(v=vs.85)">ITransaction</see> used by MSDTC and with the Managed form of <see cref="T:System.EnterpriseServices.ITransaction" /> used by <see cref="N:System.EnterpriseServices" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportCookie">
      <MemberSignature Language="C#" Value="public static byte[] GetExportCookie (System.Transactions.Transaction transaction, byte[] whereabouts);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetExportCookie(class System.Transactions.Transaction transaction, unsigned int8[] whereabouts) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetExportCookie(System::Transactions::Transaction ^ transaction, cli::array &lt;System::Byte&gt; ^ whereabouts);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public static byte[] GetExportCookie (System.Transactions.Transaction transaction, byte[] exportCookie);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetExportCookie(class System.Transactions.Transaction transaction, unsigned int8[] exportCookie) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetExportCookie(System::Transactions::Transaction ^ transaction, cli::array &lt;System::Byte&gt; ^ exportCookie);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="static member GetExportCookie : System.Transactions.Transaction * byte[] -&gt; byte[]" Usage="System.Transactions.TransactionInterop.GetExportCookie (transaction, exportCookie)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member GetExportCookie : System.Transactions.Transaction * byte[] -&gt; byte[]" Usage="System.Transactions.TransactionInterop.GetExportCookie (transaction, exportCookie)" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" Index="0" />
        <Parameter Name="whereabouts" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="exportCookie" Type="System.Byte[]" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="transaction"><span data-ttu-id="72eb4-128">마샬링할 <see cref="T:System.Transactions.Transaction" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-128">The <see cref="T:System.Transactions.Transaction" /> object to be marshaled.</span></span></param>
        <param name="whereabouts"><span data-ttu-id="72eb4-129">대상 트랜잭션 관리자의 위치를 설명하는 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-129">An address that describes the location of the destination transaction manager.</span></span> <span data-ttu-id="72eb4-130">이 주소를 통해 두 트랜잭션 관리자가 서로 통신하여 시스템 간에 트랜잭션을 전파할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-130">This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other.</span></span></param>
        <param name="exportCookie"><span data-ttu-id="72eb4-131">대상 트랜잭션 관리자의 위치를 설명하는 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-131">An address that describes the location of the destination transaction manager.</span></span> <span data-ttu-id="72eb4-132">이 주소를 통해 두 트랜잭션 관리자가 서로 통신하여 시스템 간에 트랜잭션을 전파할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-132">This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other.</span></span></param>
        <summary><span data-ttu-id="72eb4-133">트랜잭션 개체를 내보내기 트랜잭션 쿠키로 변형합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-133">Transforms a transaction object into an export transaction cookie.</span></span></summary>
        <returns><span data-ttu-id="72eb4-134">지정된 <see cref="T:System.Transactions.Transaction" /> 개체를 나타내는 내보내기 트랜잭션 쿠키입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-134">An export transaction cookie representing the specified <see cref="T:System.Transactions.Transaction" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72eb4-135">트랜잭션 내보내려는 경우이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-135">Call this method if you want to export a transaction.</span></span> <span data-ttu-id="72eb4-136">`transaction` 전달 되는 함께 트랜잭션 쿠키로 마샬링됩니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-136">The `transaction` that is passed along is marshaled into a transaction cookie.</span></span> <span data-ttu-id="72eb4-137">그런 다음 대상 프로세스에 트랜잭션 쿠키를 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-137">You can then send the transaction cookie to the destination process.</span></span> <span data-ttu-id="72eb4-138">이 프로세스 또는 시스템 간에 트랜잭션을 전파할 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-138">This is referred to as propagating the transaction between processes or systems.</span></span> <span data-ttu-id="72eb4-139">전파는 로컬 트랜잭션이 대상에 푸시됩니다. 여기서 푸시 모델으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-139">The propagation is considered to be a push model where the local transaction is pushed to the destination.</span></span>  <span data-ttu-id="72eb4-140">따라서에 포함 된 정보 `whereabouts` 대상 트랜잭션 관리자에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-140">Therefore, information contained in `whereabouts` must describe the destination transaction manager.</span></span>  
  
 <span data-ttu-id="72eb4-141">다양한 전파 모델에 대한 자세한 내용은 <xref:System.Transactions.TransactionInterop> 클래스의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="72eb4-141">For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransactionFromDtcTransaction">
      <MemberSignature Language="C#" Value="public static System.Transactions.Transaction GetTransactionFromDtcTransaction (System.Transactions.IDtcTransaction transactionNative);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Transactions.Transaction GetTransactionFromDtcTransaction(class System.Transactions.IDtcTransaction transactionNative) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTransactionFromDtcTransaction (transactionNative As IDtcTransaction) As Transaction" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Transactions::Transaction ^ GetTransactionFromDtcTransaction(System::Transactions::IDtcTransaction ^ transactionNative);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public static System.Transactions.Transaction GetTransactionFromDtcTransaction (System.Transactions.IDtcTransaction dtc);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Transactions.Transaction GetTransactionFromDtcTransaction(class System.Transactions.IDtcTransaction dtc) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTransactionFromDtcTransaction (dtc As IDtcTransaction) As Transaction" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Transactions::Transaction ^ GetTransactionFromDtcTransaction(System::Transactions::IDtcTransaction ^ dtc);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="static member GetTransactionFromDtcTransaction : System.Transactions.IDtcTransaction -&gt; System.Transactions.Transaction" Usage="System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction dtc" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member GetTransactionFromDtcTransaction : System.Transactions.IDtcTransaction -&gt; System.Transactions.Transaction" Usage="System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction dtc" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionNative" Type="System.Transactions.IDtcTransaction" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="dtc" Type="System.Transactions.IDtcTransaction" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="transactionNative"><span data-ttu-id="72eb4-142">마샬링할 <see cref="T:System.Transactions.IDtcTransaction" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-142">The <see cref="T:System.Transactions.IDtcTransaction" /> object to be marshaled.</span></span></param>
        <param name="dtc"><span data-ttu-id="72eb4-143">마샬링할 <see cref="T:System.Transactions.IDtcTransaction" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-143">The <see cref="T:System.Transactions.IDtcTransaction" /> object to be marshaled.</span></span></param>
        <summary><span data-ttu-id="72eb4-144">지정된 <see cref="T:System.Transactions.IDtcTransaction" />에서 <see cref="T:System.Transactions.Transaction" />을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-144">Generates a <see cref="T:System.Transactions.Transaction" /> from a specified <see cref="T:System.Transactions.IDtcTransaction" />.</span></span></summary>
        <returns><span data-ttu-id="72eb4-145">지정된 <see cref="T:System.Transactions.IDtcTransaction" />을 나타내는 <see cref="T:System.Transactions.Transaction" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-145">A <see cref="T:System.Transactions.Transaction" /> instance that represents the given <see cref="T:System.Transactions.IDtcTransaction" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72eb4-146">합니다 `transactionNative` 관리 되지 않는 형식의 호환 [ITransaction](https://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) MSDTC에서 관리 되는 형식으로 사용 <xref:System.EnterpriseServices.ITransaction> 에서 사용 하는 <xref:System.EnterpriseServices>합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-146">The `transactionNative` is compatible with the unmanaged form of [ITransaction](https://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) used by MSDTC and with the Managed form of <xref:System.EnterpriseServices.ITransaction> used by <xref:System.EnterpriseServices>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransactionFromExportCookie">
      <MemberSignature Language="C#" Value="public static System.Transactions.Transaction GetTransactionFromExportCookie (byte[] cookie);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Transactions.Transaction GetTransactionFromExportCookie(unsigned int8[] cookie) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTransactionFromExportCookie (cookie As Byte()) As Transaction" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Transactions::Transaction ^ GetTransactionFromExportCookie(cli::array &lt;System::Byte&gt; ^ cookie);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public static System.Transactions.Transaction GetTransactionFromExportCookie (byte[] exportCookie);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Transactions.Transaction GetTransactionFromExportCookie(unsigned int8[] exportCookie) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTransactionFromExportCookie (exportCookie As Byte()) As Transaction" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Transactions::Transaction ^ GetTransactionFromExportCookie(cli::array &lt;System::Byte&gt; ^ exportCookie);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="static member GetTransactionFromExportCookie : byte[] -&gt; System.Transactions.Transaction" Usage="System.Transactions.TransactionInterop.GetTransactionFromExportCookie exportCookie" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member GetTransactionFromExportCookie : byte[] -&gt; System.Transactions.Transaction" Usage="System.Transactions.TransactionInterop.GetTransactionFromExportCookie exportCookie" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="exportCookie" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cookie"><span data-ttu-id="72eb4-147">마샬링된 형식의 트랜잭션 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-147">A marshaled form of the transaction object.</span></span></param>
        <param name="exportCookie"><span data-ttu-id="72eb4-148">마샬링된 형식의 트랜잭션 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-148">A marshaled form of the transaction object.</span></span></param>
        <summary><span data-ttu-id="72eb4-149">지정된 내보내기 쿠키에서 <see cref="T:System.Transactions.Transaction" />을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-149">Generates a <see cref="T:System.Transactions.Transaction" /> from the specified an export cookie.</span></span></summary>
        <returns><span data-ttu-id="72eb4-150">지정된 내보내기 쿠키에서 생성된 <see cref="T:System.Transactions.Transaction" />입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-150">A <see cref="T:System.Transactions.Transaction" /> from the specified export cookie.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72eb4-151">다양한 전파 모델에 대한 자세한 내용은 <xref:System.Transactions.TransactionInterop> 클래스의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="72eb4-151">For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransactionFromTransmitterPropagationToken">
      <MemberSignature Language="C#" Value="public static System.Transactions.Transaction GetTransactionFromTransmitterPropagationToken (byte[] propagationToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Transactions.Transaction GetTransactionFromTransmitterPropagationToken(unsigned int8[] propagationToken) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTransactionFromTransmitterPropagationToken (propagationToken As Byte()) As Transaction" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Transactions::Transaction ^ GetTransactionFromTransmitterPropagationToken(cli::array &lt;System::Byte&gt; ^ propagationToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public static System.Transactions.Transaction GetTransactionFromTransmitterPropagationToken (byte[] token);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Transactions.Transaction GetTransactionFromTransmitterPropagationToken(unsigned int8[] token) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTransactionFromTransmitterPropagationToken (token As Byte()) As Transaction" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Transactions::Transaction ^ GetTransactionFromTransmitterPropagationToken(cli::array &lt;System::Byte&gt; ^ token);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="static member GetTransactionFromTransmitterPropagationToken : byte[] -&gt; System.Transactions.Transaction" Usage="System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken token" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member GetTransactionFromTransmitterPropagationToken : byte[] -&gt; System.Transactions.Transaction" Usage="System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken token" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propagationToken" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="token" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="propagationToken"><span data-ttu-id="72eb4-152">트랜잭션을 나타내는 전파 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-152">A propagation token representing a transaction.</span></span></param>
        <param name="token"><span data-ttu-id="72eb4-153">트랜잭션을 나타내는 전파 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-153">A propagation token representing a transaction.</span></span></param>
        <summary><span data-ttu-id="72eb4-154">지정된 전송기 전파 토큰에서 <see cref="T:System.Transactions.Transaction" /> 인스턴스를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-154">Generates a <see cref="T:System.Transactions.Transaction" /> instance from the specified transmitter propagation token.</span></span></summary>
        <returns><span data-ttu-id="72eb4-155">지정된 전송기 전파 토큰에서 생성된 <see cref="T:System.Transactions.Transaction" />입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-155">A <see cref="T:System.Transactions.Transaction" /> from the specified transmitter propagation token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72eb4-156">와 함께이 메서드는 <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A> 메서드는 트랜잭션을 "끌어옵니다" 원격 컴퓨터에서 트랜잭션을 역마샬링을이 메서드가 호출 되 면 "끌어오기" 전파에 대 한 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-156">This method, together with the <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A> method, provide functionality for "pull" propagation, in which the transaction is "pulled" from the remote machine when this method is called to unmarshal the transaction.</span></span>  
  
 <span data-ttu-id="72eb4-157">다양한 전파 모델에 대한 자세한 내용은 <xref:System.Transactions.TransactionInterop> 클래스의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="72eb4-157">For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionManagerCommunicationException"><span data-ttu-id="72eb4-158">트랜잭션 관리자에 연결할 수 없어 트랜잭션의 deserialization에 실패한 경우.</span><span class="sxs-lookup"><span data-stu-id="72eb4-158">The deserialization of a transaction fails because the transaction manager cannot be contacted.</span></span> <span data-ttu-id="72eb4-159">이 예외는 네트워크 방화벽이나 보안 설정으로 인해 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-159">This may be caused by network firewall or security settings.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTransmitterPropagationToken">
      <MemberSignature Language="C#" Value="public static byte[] GetTransmitterPropagationToken (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetTransmitterPropagationToken(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetTransmitterPropagationToken(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="static member GetTransmitterPropagationToken : System.Transactions.Transaction -&gt; byte[]" Usage="System.Transactions.TransactionInterop.GetTransmitterPropagationToken transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction"><span data-ttu-id="72eb4-160">전파 토큰으로 마샬링할 트랜잭션입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-160">A transaction to be marshaled into a propagation token.</span></span></param>
        <summary><span data-ttu-id="72eb4-161">지정된 <see cref="T:System.Transactions.Transaction" />에 대한 전파 토큰을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-161">Generates a propagation token for the specified <see cref="T:System.Transactions.Transaction" />.</span></span></summary>
        <returns><span data-ttu-id="72eb4-162">이 메서드는 <see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" /> 메서드와 함께 전송기/수신기 전파 기능을 제공하는데 전송기/수신기 전파에서는 트랜잭션의 역마샬링을 위해 후자가 호출될 때 원격 컴퓨터로부터 트랜잭션을 “끌어옵니다”.</span><span class="sxs-lookup"><span data-stu-id="72eb4-162">This method, together with the <see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" /> method, provide functionality for Transmitter/Receiver propagation, in which the transaction is "pulled" from the remote machine when the latter is called to unmarshal the transaction.</span></span>  
  
<span data-ttu-id="72eb4-163">다양한 전파 모델에 대한 자세한 내용은 <see cref="T:System.Transactions.TransactionInterop" /> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="72eb4-163">For more information on different propagation models, see <see cref="T:System.Transactions.TransactionInterop" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWhereabouts">
      <MemberSignature Language="C#" Value="public static byte[] GetWhereabouts ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetWhereabouts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetWhereabouts" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWhereabouts () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetWhereabouts();" />
      <MemberSignature Language="F#" Value="static member GetWhereabouts : unit -&gt; byte[]" Usage="System.Transactions.TransactionInterop.GetWhereabouts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72eb4-164"><see cref="N:System.Transactions" />에서 사용되는 분산 트랜잭션 관리자의 Whereabouts를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-164">Gets the Whereabouts of the distributed transaction manager that <see cref="N:System.Transactions" /> uses.</span></span></summary>
        <returns><span data-ttu-id="72eb4-165"><see cref="N:System.Transactions" />에서 사용되는 분산 트랜잭션 관리자의 Whereabouts입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-165">The Whereabouts of the distributed transaction manager that <see cref="N:System.Transactions" /> uses.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72eb4-166">Whereabouts는 트랜잭션 관리자의 위치를 설명 하는 주소를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-166">The Whereabouts contains an address that describes the location of a transaction manager.</span></span> <span data-ttu-id="72eb4-167">이 주소를 통해 두 트랜잭션 관리자가 서로 통신하여 시스템 간에 트랜잭션을 전파할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-167">This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other.</span></span> <span data-ttu-id="72eb4-168">이 메서드에서 반환 되는 정보를 사용 하 여 푸시 모델 트랜잭션 전파에 대 한 위치 정보를 제공 하 사용할 수는 <xref:System.Transactions.TransactionInterop.GetExportCookie%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="72eb4-168">The information returned by this method can be used to provide location information for push model transaction propagation with the <xref:System.Transactions.TransactionInterop.GetExportCookie%2A> method.</span></span>  
  
 <span data-ttu-id="72eb4-169">다양한 전파 모델에 대한 자세한 내용은 <xref:System.Transactions.TransactionInterop> 클래스의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="72eb4-169">For more information on different propagation models, see the Remarks section of the <xref:System.Transactions.TransactionInterop> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PromoterTypeDtc">
      <MemberSignature Language="C#" Value="public static readonly Guid PromoterTypeDtc;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Guid PromoterTypeDtc" />
      <MemberSignature Language="DocId" Value="F:System.Transactions.TransactionInterop.PromoterTypeDtc" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PromoterTypeDtc As Guid " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Guid PromoterTypeDtc;" />
      <MemberSignature Language="F#" Value=" staticval mutable PromoterTypeDtc : Guid" Usage="System.Transactions.TransactionInterop.PromoterTypeDtc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72eb4-170">분산된 트랜잭션 프로세서의 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="72eb4-170">The type of the distributed transaction processor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72eb4-171">에 대 한이 값은 사용 합니다 `Transaction.PromoterType` 트랜잭션이 또는 MSDTC 승격 됩니다 하는 경우 속성 및 `Transaction.GetPromotedToken` 메서드는 MSDTC 트랜잭션 전파 토큰을 반환 합니다 `byte[]` 결과.</span><span class="sxs-lookup"><span data-stu-id="72eb4-171">This value is used for the `Transaction.PromoterType` property if the transaction is or will be promoted to MSDTC and the `Transaction.GetPromotedToken` method will return an MSDTC transaction propagation token for the `byte[]` result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>