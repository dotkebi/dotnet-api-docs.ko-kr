<Type Name="InstancePersistenceCommand" FullName="System.Runtime.DurableInstancing.InstancePersistenceCommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="19daa066fb85e09918ec96fc08eb31d80e540ded" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58703850" /></Metadata><TypeSignature Language="C#" Value="public abstract class InstancePersistenceCommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InstancePersistenceCommand extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstancePersistenceCommand" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InstancePersistenceCommand" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstancePersistenceCommand abstract" />
  <TypeSignature Language="F#" Value="type InstancePersistenceCommand = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="95a9f-101">모든 지속성 관련 명령에 대한 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-101">Base class for all persistence related commands.</span></span> <span data-ttu-id="95a9f-102">명령은 이름으로 구별됩니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-102">Commands are distinguished by their Name.</span></span> <span data-ttu-id="95a9f-103">일반적으로 파생 형식으로도 명령을 구별할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-103">Usually commands can also be distinguished by their derived type.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstancePersistenceCommand (System.Xml.Linq.XName name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceCommand.#ctor(System.Xml.Linq.XName)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As XName)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstancePersistenceCommand(System::Xml::Linq::XName ^ name);" />
      <MemberSignature Language="F#" Value="new System.Runtime.DurableInstancing.InstancePersistenceCommand : System.Xml.Linq.XName -&gt; System.Runtime.DurableInstancing.InstancePersistenceCommand" Usage="new System.Runtime.DurableInstancing.InstancePersistenceCommand name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="95a9f-104">명령의 XName(네임스페이스와 이름의 조합)입니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-104">The XName (the combination of namespace and name) of the command.</span></span></param>
        <summary><span data-ttu-id="95a9f-105"><see cref="T:System.Runtime.DurableInstancing.InstancePersistenceCommand" /> 클래스의 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-105">Initializes an instance of the <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceCommand" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticallyAcquiringLock">
      <MemberSignature Language="C#" Value="protected internal virtual bool AutomaticallyAcquiringLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticallyAcquiringLock" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceCommand.AutomaticallyAcquiringLock" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property AutomaticallyAcquiringLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool AutomaticallyAcquiringLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticallyAcquiringLock : bool" Usage="System.Runtime.DurableInstancing.InstancePersistenceCommand.AutomaticallyAcquiringLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95a9f-106">명령이 인스턴스에 대한 잠금 획득을 시도할 수 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-106">Indicates whether the command could attempt to acquire a lock on the instance.</span></span></summary>
        <value><span data-ttu-id="95a9f-107">명령이 인스턴스에 대한 잠금을 획득하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-107"><see langword="true" /> if the command acquires a lock on the instance;, otherwise <see langword="false" />.</span></span> <span data-ttu-id="95a9f-108">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-108">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a9f-109">이 클래스에서 파생 되는 명령 클래스를 설정 하려면이 속성을 재정의할 수 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-109">The command classes that derive from this class can override this property to set it to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransactionEnlistmentOptional">
      <MemberSignature Language="C#" Value="protected internal virtual bool IsTransactionEnlistmentOptional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactionEnlistmentOptional" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceCommand.IsTransactionEnlistmentOptional" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property IsTransactionEnlistmentOptional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool IsTransactionEnlistmentOptional { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTransactionEnlistmentOptional : bool" Usage="System.Runtime.DurableInstancing.InstancePersistenceCommand.IsTransactionEnlistmentOptional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95a9f-110">이 명령을 실행할 때 지속성 공급자가 엠비언트 트랜잭션(Transaction.Current)에 참여하지 않기로 선택할 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-110">Returns a value that indicates whether the persistence provider may choose not to enlist in the ambient transaction (Transaction.Current) when executing this command.</span></span></summary>
        <value><span data-ttu-id="95a9f-111">이 명령에 대해 트랜잭션 참여가 선택 사항인 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-111"><see langword="true" /> if enlisting in the transaction is optional for this command, otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a9f-112">이 클래스에서 파생 되는 명령 클래스를 설정 하려면이 속성을 재정의할 수 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-112">The command classes that derive from this class can override this property to set it to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XName Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XName Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceCommand.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As XName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XName ^ Name { System::Xml::Linq::XName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : System.Xml.Linq.XName" Usage="System.Runtime.DurableInstancing.InstancePersistenceCommand.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95a9f-113">지속성 명령의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-113">Gets the name of the persistence command.</span></span></summary>
        <value><span data-ttu-id="95a9f-114">XName(네임스페이스와 이름의 조합)입니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-114">An XName (the combination of namespace and name).</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="protected internal virtual void Validate (System.Runtime.DurableInstancing.InstanceView view);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Validate(class System.Runtime.DurableInstancing.InstanceView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceCommand.Validate(System.Runtime.DurableInstancing.InstanceView)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Validate (view As InstanceView)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Validate(System::Runtime::DurableInstancing::InstanceView ^ view);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.Runtime.DurableInstancing.InstanceView -&gt; unit&#xA;override this.Validate : System.Runtime.DurableInstancing.InstanceView -&gt; unit" Usage="instancePersistenceCommand.Validate view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Runtime.DurableInstancing.InstanceView" />
      </Parameters>
      <Docs>
        <param name="view"><span data-ttu-id="95a9f-115">인스턴스 핸들의 현재 상태를 나타내는 <see cref="T:System.Runtime.DurableInstancing.InstanceView" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-115">An <see cref="T:System.Runtime.DurableInstancing.InstanceView" /> object representing the current state of the instance handle.</span></span></param>
        <summary><span data-ttu-id="95a9f-116">명령의 유효성을 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-116">Validates the command.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a9f-117">Validate를 재정의하는 명령으로, 현재 시점에서 명령 실행이 유효한지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-117">Commands override Validate to ensure that a command is valid to execute at the current time.</span></span> <span data-ttu-id="95a9f-118">매개 변수로 전달된 InstanceView에 대해 명령 실행이 유효하지 않은 경우 구현에서 InvalidOperationException을 throw해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-118">Implementations should throw an InvalidOperationException if the command is not valid to execute against the InstanceView passed as a parameter.</span></span>  <span data-ttu-id="95a9f-119">Validate 메서드는 명령이 InstanceStore.TryCommand로 전달되기 전에 InstanceStore에 의해 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="95a9f-119">The Validate method is called by InstanceStore before the command is passed to InstanceStore.TryCommand.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>