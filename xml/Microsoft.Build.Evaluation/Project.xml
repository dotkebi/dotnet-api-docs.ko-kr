<Type Name="Project" FullName="Microsoft.Build.Evaluation.Project">
  <Metadata><Meta Name="ms.openlocfilehash" Value="be67c66acf5965e34367a1f0a1fea321d2677ccc" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57920939" /></Metadata><TypeSignature Language="C#" Value="public class Project" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Project extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.Project" />
  <TypeSignature Language="VB.NET" Value="Public Class Project" />
  <TypeSignature Language="C++ CLI" Value="public ref class Project" />
  <TypeSignature Language="F#" Value="type Project = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={data.globalProperties.Count} #Properties={data.Properties.Count} #ItemTypes={data.ItemTypes.Count} #ItemDefinitions={data.ItemDefinitions.Count} #Items={data.Items.Count} #Targets={data.Targets.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="83d4f-101">디자인 타임 의미 체계를 사용하여 프로젝트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-101">Represents a project with design time semantics.</span></span> <span data-ttu-id="83d4f-102">이 클래스는 프로젝트 파일을 로드하고, 항목 및 속성을 편집하고, 프로젝트를 빌드할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-102">This class can load project files, edit items and properties and build projects.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83d4f-103">전역 프로젝트 컬렉션의 전역 속성 및 기본 도구 버전을 사용하여 빈 프로젝트를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-103">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83d4f-104">전역 프로젝트 컬렉션의 전역 속성 및 기본 도구 버전을 사용하여 빈 프로젝트를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-104">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-105">이 프로젝트는 해당 경로 지정 하면 전체 원본 프로젝트 파일에 일반적으로 프로젝트를 저장 하 여 때 전역 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-105">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="83d4f-106">확인에 사용할 ProjectRootElement입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-106">ProjectRootElement to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="83d4f-107">빈 프로젝트를 생성하고 지정된 프로젝트 루트, 전역 프로젝트 컬렉션의 전역 속성 및 기본 도구 버전을 사용하여 이를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-107">Constructs an empty project and evaluates it using the given project root and the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-108">이 프로젝트는이 프로젝트 또는 지정된 된 프로젝트 루트 된 소스 프로젝트 파일 전체 경로 지정 하는 경우 전역 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-108">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="83d4f-109">InvalidProjectFileException 평가가 실패할 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-109">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="83d4f-110">해당 프로젝트를 이미 있으면 throw InvalidOperationException 프로젝트 컬렉션에 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-110">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectCollection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectCollection"><span data-ttu-id="83d4f-111">새 프로젝트를 추가할 프로젝트 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-111">The project collection that the new project is added to.</span></span></param>
        <summary><span data-ttu-id="83d4f-112">지정된 프로젝트 컬렉션의 전역 속성 및 기본 도구 버전을 사용하여 빈 프로젝트를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-112">Constructs an empty project using the given project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-113">이 프로젝트는 해당 경로 지정 하면 전체 원본 프로젝트 파일에 일반적으로 프로젝트를 저장 하 여 하는 경우 지정된 된 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-113">This project is added to the given project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="83d4f-114">확인할 소스 프로젝트 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-114">The source project file to be evaluated.</span></span></param>
        <summary><span data-ttu-id="83d4f-115">프로젝트를 생성하고 지정된 소스 프로젝트 파일에서 전역 프로젝트 컬렉션의 전역 속성 및 기본 도구 버전을 사용하여 이를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-115">Constructs a project and evaluates it from the given source project file and with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-116">프로젝트는 전역 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-116">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="83d4f-117">이 소스 프로젝트 파일을 평가 하는 프로젝트 컬렉션에서 프로젝트를 이미이 InvalidOperationException을 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-117">Throws InvalidOperationException if there is already a project in the project collection that evaluates this source project file.</span></span> <span data-ttu-id="83d4f-118">IO 관련 예외를 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-118">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="83d4f-119">평가가 실패할 경우.</span><span class="sxs-lookup"><span data-stu-id="83d4f-119">If the evaluation fails.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xmlReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="83d4f-120">프로젝트 소스 코드를 읽을 XML 판독기입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-120">Xml reader to read project source code from.</span></span></param>
        <summary><span data-ttu-id="83d4f-121">프로젝트를 생성하고 지정된 XML 판독기에서 소스 코드를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-121">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="83d4f-122">소스 코드는 전역 프로젝트 컬렉션의 전역 속성 및 기본 도구 버전을 사용하여 확인됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-122">The source code is evaluated with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-123">이 프로젝트는 해당 경로 지정 하면 전체 원본 프로젝트 파일에 일반적으로 프로젝트를 저장 하 여 때 전역 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-123">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="83d4f-124">InvalidProjectFileException 평가가 실패할 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-124">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="83d4f-125">해당 프로젝트를 이미 있으면 throw InvalidOperationException 프로젝트 컬렉션에 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-125">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="83d4f-126">확인에 사용할 프로젝트 루트입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-126">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="83d4f-127">확인에 사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-127">Global properties to evaluate with.</span></span> <span data-ttu-id="83d4f-128">포함하는 프로젝트 컬렉션의 전역 속성이 사용되는 경우 null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-128">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="83d4f-129">확인에 사용할 도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-129">Tools version to evaluate with.</span></span> <span data-ttu-id="83d4f-130">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-130">May be null.</span></span></param>
        <summary><span data-ttu-id="83d4f-131">빈 프로젝트를 생성하고 지정된 프로젝트 루트와 지정된 전역 속성 및 지정된 도구 버전을 사용하여 이를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-131">Constructs an empty project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-132">이 프로젝트는이 프로젝트 또는 지정된 된 프로젝트 루트 된 소스 프로젝트 파일 전체 경로 지정 하는 경우 전역 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-132">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="83d4f-133">InvalidProjectFileException 평가가 실패할 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-133">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="83d4f-134">해당 프로젝트를 이미 있으면 throw InvalidOperationException 프로젝트 컬렉션에 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-134">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="globalProperties"><span data-ttu-id="83d4f-135">확인에 사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-135">Global properties to evaluate with.</span></span> <span data-ttu-id="83d4f-136">포함하는 프로젝트 컬렉션의 전역 속성이 사용되는 경우 null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-136">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="83d4f-137">프로젝트 확인에 사용할 도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-137">The tools version used to evaluate the project.</span></span> <span data-ttu-id="83d4f-138">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-138">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="83d4f-139">새 프로젝트를 추가할 프로젝트 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-139">The project collection the new project will be added to.</span></span></param>
        <summary><span data-ttu-id="83d4f-140">지정된 프로젝트 컬렉션과 지정된 전역 속성 및 지정된 도구 버전을 사용하여 확인할 빈 프로젝트를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-140">Constructs an empty project, to be evaluated with the given project collection and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-141">프로젝트를 제공 하면 전체 경로 소스 프로젝트 파일을 일반적으로 프로젝트를 저장 하 여 지정된 된 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-141">The project is added to the specified project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="83d4f-142">확인할 소스 프로젝트 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-142">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="83d4f-143">확인에 사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-143">Global properties to evaluate with.</span></span> <span data-ttu-id="83d4f-144">포함하는 프로젝트 컬렉션의 전역 속성이 사용되는 경우 null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-144">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="83d4f-145">확인에 사용할 도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-145">Tools version to evaluate with.</span></span> <span data-ttu-id="83d4f-146">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-146">May be null.</span></span></param>
        <summary><span data-ttu-id="83d4f-147">프로젝트를 생성하고 지정된 소스 프로젝트 파일에서 지정된 전역 속성 및 지정된 도구 버전을 사용하여 이를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-147">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-148">프로젝트는 전역 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-148">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="83d4f-149">InvalidProjectFileException 평가가 실패할 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-149">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="83d4f-150">해당 프로젝트를 이미 있으면 throw InvalidOperationException 프로젝트 컬렉션에 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-150">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="83d4f-151">IO 관련 예외를 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-151">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="83d4f-152">프로젝트 소스 코드를 읽을 XML 판독기입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-152">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="83d4f-153">확인에 사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-153">Global properties to evaluate with.</span></span> <span data-ttu-id="83d4f-154">포함하는 프로젝트 컬렉션의 전역 속성이 사용되는 경우 null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-154">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="83d4f-155">확인에 사용할 도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-155">Tools version to evaluate with.</span></span> <span data-ttu-id="83d4f-156">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-156">May be null.</span></span></param>
        <summary><span data-ttu-id="83d4f-157">프로젝트를 생성하고 지정된 XML 판독기에서 소스 코드를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-157">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="83d4f-158">소스 코드는 지정된 전역 속성과 지정된 도구 버전을 사용하여 확인됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-158">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-159">이 프로젝트는 해당 경로 지정 하면 전체 원본 프로젝트 파일에 일반적으로 프로젝트를 저장 하 여 때 전역 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-159">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="83d4f-160">InvalidProjectFileException 평가가 실패할 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-160">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="83d4f-161">해당 프로젝트를 이미 있으면 throw InvalidOperationException 프로젝트 컬렉션에 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-161">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="83d4f-162">확인에 사용할 프로젝트 루트입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-162">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="83d4f-163">확인에 사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-163">Global properties to evaluate with.</span></span> <span data-ttu-id="83d4f-164">포함하는 프로젝트 컬렉션의 전역 속성이 사용되는 경우 null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-164">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="83d4f-165">확인에 사용할 도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-165">Tools version to evaluate with.</span></span> <span data-ttu-id="83d4f-166">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-166">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="83d4f-167">프로젝트를 추가할 프로젝트 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-167">The project collection the project is added to.</span></span></param>
        <summary><span data-ttu-id="83d4f-168">프로젝트를 생성하고 지정된 프로젝트 루트와 지정된 전역 속성 및 지정된 도구 버전을 사용하여 이를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-168">Constructs a project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-169">이 프로젝트는이 프로젝트 또는 지정된 된 프로젝트 루트 된 소스 프로젝트 파일 전체 경로 지정 하는 경우 지정된 된 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-169">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="83d4f-170">InvalidProjectFileException 평가가 실패할 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-170">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="83d4f-171">해당 프로젝트를 이미 있으면 throw InvalidOperationException 프로젝트 컬렉션에 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-171">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="83d4f-172">확인할 소스 프로젝트 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-172">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="83d4f-173">전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-173">The global properties.</span></span> <span data-ttu-id="83d4f-174">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-174">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="83d4f-175">도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-175">The tools version.</span></span> <span data-ttu-id="83d4f-176">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-176">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="83d4f-177">프로젝트를 추가할 프로젝트 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-177">The project collection the project is added to.</span></span> <span data-ttu-id="83d4f-178">null일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-178">May not be null.</span></span></param>
        <summary><span data-ttu-id="83d4f-179">프로젝트를 생성하고 지정된 소스 프로젝트 파일에서 지정된 전역 속성 및 지정된 도구 버전을 사용하여 이를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-179">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-180">프로젝트는 지정된 된 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-180">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="83d4f-181">InvalidProjectFileException 평가가 실패할 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-181">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="83d4f-182">해당 프로젝트를 이미 있으면 throw InvalidOperationException 프로젝트 컬렉션에 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-182">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="83d4f-183">IO 관련 예외를 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-183">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="83d4f-184">프로젝트 소스 코드를 읽을 XML 판독기입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-184">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="83d4f-185">확인에 사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-185">Global properties to evaluate with.</span></span> <span data-ttu-id="83d4f-186">포함하는 프로젝트 컬렉션의 전역 속성이 사용되는 경우 null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-186">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="83d4f-187">확인에 사용할 도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-187">Tools version to evaluate with.</span></span> <span data-ttu-id="83d4f-188">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-188">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="83d4f-189">프로젝트를 추가할 프로젝트 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-189">The project collection the project is added to.</span></span> <span data-ttu-id="83d4f-190">null일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-190">May not be null.</span></span></param>
        <summary><span data-ttu-id="83d4f-191">프로젝트를 생성하고 지정된 XML 판독기에서 소스 코드를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-191">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="83d4f-192">소스 코드는 지정된 전역 속성과 지정된 도구 버전을 사용하여 확인됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-192">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-193">이 프로젝트는이 프로젝트 또는 지정된 된 프로젝트 루트 된 소스 프로젝트 파일 전체 경로 지정 하는 경우 지정된 된 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-193">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="83d4f-194">InvalidProjectFileException 평가가 실패할 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-194">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="83d4f-195">해당 프로젝트를 이미 있으면 throw InvalidOperationException 프로젝트 컬렉션에 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-195">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="83d4f-196">확인에 사용할 프로젝트 루트입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-196">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="83d4f-197">확인에 사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-197">Global properties to evaluate with.</span></span> <span data-ttu-id="83d4f-198">포함하는 프로젝트 컬렉션의 전역 속성이 사용되는 경우 null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-198">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="83d4f-199">확인에 사용할 도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-199">Tools version to evaluate with.</span></span> <span data-ttu-id="83d4f-200">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-200">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="83d4f-201">프로젝트를 추가할 프로젝트 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-201">The project collection the project is added to.</span></span> <span data-ttu-id="83d4f-202">null일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-202">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="83d4f-203">확인에 사용할 로드 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-203">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="83d4f-204">프로젝트를 생성하고 지정된 프로젝트 루트와 지정된 전역 속성, 지정된 도구 버전 및 지정된 로드 설정을 사용하여 이를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-204">Constructs a project and evaluates it using the given project root and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-205">이 프로젝트는이 프로젝트 또는 지정된 된 프로젝트 루트 된 소스 프로젝트 파일 전체 경로 지정 하는 경우 지정된 된 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-205">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="83d4f-206">InvalidProjectFileException 평가가 실패할 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-206">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="83d4f-207">해당 프로젝트를 이미 있으면 throw InvalidOperationException 프로젝트 컬렉션에 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-207">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="83d4f-208">확인할 소스 프로젝트 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-208">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="83d4f-209">확인에 사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-209">Global properties to evaluate with.</span></span> <span data-ttu-id="83d4f-210">포함하는 프로젝트 컬렉션의 전역 속성이 사용되는 경우 null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-210">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="83d4f-211">도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-211">The tools version.</span></span> <span data-ttu-id="83d4f-212">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-212">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="83d4f-213">프로젝트를 추가할 프로젝트 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-213">The project collection the project is added to.</span></span> <span data-ttu-id="83d4f-214">null일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-214">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="83d4f-215">확인에 사용할 로드 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-215">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="83d4f-216">프로젝트를 생성하고 지정된 소스 프로젝트 파일에서 지정된 전역 속성, 지정된 도구 버전 및 지정된 로드 설정을 사용하여 이를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-216">Constructs a project and evaluates it from the given source project file and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-217">프로젝트는 지정된 된 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-217">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="83d4f-218">InvalidProjectFileException 평가가 실패할 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-218">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="83d4f-219">해당 프로젝트를 이미 있으면 throw InvalidOperationException 프로젝트 컬렉션에 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-219">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="83d4f-220">IO 관련 예외를 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-220">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="83d4f-221">프로젝트 소스 코드를 읽을 XML 판독기입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-221">Xml reader from which to read project source code.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="83d4f-222">확인에 사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-222">Global properties to evaluate with.</span></span> <span data-ttu-id="83d4f-223">포함하는 프로젝트 컬렉션의 전역 속성이 사용되는 경우 null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-223">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="83d4f-224">확인에 사용할 도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-224">Tools version to evaluate with.</span></span> <span data-ttu-id="83d4f-225">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-225">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="83d4f-226">프로젝트를 추가할 프로젝트 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-226">The project collection the project is added to.</span></span> <span data-ttu-id="83d4f-227">null일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-227">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="83d4f-228">확인에 사용할 로드 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-228">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="83d4f-229">프로젝트를 생성하고 지정된 XML 판독기에서 소스 코드를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-229">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="83d4f-230">소스 코드는 지정된 전역 속성과 지정된 도구 버전을 사용하여 확인됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-230">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-231">이 프로젝트는이 프로젝트 또는 지정된 된 프로젝트 루트 된 소스 프로젝트 파일 전체 경로 지정 하는 경우 지정된 된 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-231">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="83d4f-232">InvalidProjectFileException 평가가 실패할 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-232">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="83d4f-233">해당 프로젝트를 이미 있으면 throw InvalidOperationException 프로젝트 컬렉션에 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-233">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="83d4f-234">확인에 사용할 프로젝트 루트입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-234">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="83d4f-235">확인에 사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-235">Global properties to evaluate with.</span></span> <span data-ttu-id="83d4f-236">포함하는 프로젝트 컬렉션의 전역 속성이 사용되는 경우 null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-236">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="83d4f-237">확인에 사용할 도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-237">Tools version to evaluate with.</span></span> <span data-ttu-id="83d4f-238">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-238">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="83d4f-239">확인에 사용할 하위 도구 집합 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-239">Sub toolset version to evaluate with.</span></span> <span data-ttu-id="83d4f-240">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-240">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="83d4f-241">프로젝트를 추가할 프로젝트 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-241">The project collection the project is added to.</span></span> <span data-ttu-id="83d4f-242">null일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-242">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="83d4f-243">확인에 사용할 로드 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-243">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="83d4f-244">프로젝트를 생성하고 지정된 프로젝트 루트를 사용하여 지정된 전역 속성, 도구와 하위 도구 집합 버전, 프로젝트 컬렉션 및 로드 설정을 사용하여 이를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-244">Constructs a project and evaluates it using the given project root and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-245">이 프로젝트는이 프로젝트 또는 지정된 된 프로젝트 루트 된 소스 프로젝트 파일 전체 경로 지정 하는 경우 지정된 된 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-245">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="83d4f-246">InvalidProjectFileException 평가가 실패할 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-246">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="83d4f-247">해당 프로젝트를 이미 있으면 throw InvalidOperationException 프로젝트 컬렉션에 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-247">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="83d4f-248">확인할 소스 프로젝트 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-248">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="83d4f-249">확인에 사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-249">Global properties to evaluate with.</span></span> <span data-ttu-id="83d4f-250">포함하는 프로젝트 컬렉션의 전역 속성이 사용되는 경우 null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-250">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="83d4f-251">도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-251">The tools version.</span></span> <span data-ttu-id="83d4f-252">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-252">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="83d4f-253">하위 도구 집합의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-253">The sub toolset version.</span></span> <span data-ttu-id="83d4f-254">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-254">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="83d4f-255">프로젝트를 추가할 프로젝트 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-255">The project collection the project is added to.</span></span> <span data-ttu-id="83d4f-256">null일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-256">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="83d4f-257">확인에 사용할 로드 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-257">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="83d4f-258">프로젝트를 생성하고 지정된 소스 프로젝트 파일에서 지정된 전역 속성, 도구와 하위 도구 집합 버전, 프로젝트 컬렉션 및 로드 설정을 사용하여 이를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-258">Constructs a project and evaluates it from the given source project file and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-259">프로젝트는 지정된 된 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-259">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="83d4f-260">InvalidProjectFileException 평가가 실패할 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-260">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="83d4f-261">해당 프로젝트를 이미 있으면 throw InvalidOperationException 프로젝트 컬렉션에 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-261">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="83d4f-262">IO 관련 예외를 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-262">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="83d4f-263">프로젝트 소스 코드를 읽을 XML 판독기입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-263">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="83d4f-264">확인에 사용할 전역 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-264">Global properties to evaluate with.</span></span> <span data-ttu-id="83d4f-265">포함하는 프로젝트 컬렉션의 전역 속성이 사용되는 경우 null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-265">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="83d4f-266">확인에 사용할 도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-266">Tools version to evaluate with.</span></span> <span data-ttu-id="83d4f-267">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-267">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="83d4f-268">확인에 사용할 하위 도구 집합 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-268">Sub Toolset version to evaluate with.</span></span> <span data-ttu-id="83d4f-269">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-269">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="83d4f-270">프로젝트를 추가할 프로젝트 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-270">The project collection the project is added to.</span></span> <span data-ttu-id="83d4f-271">null일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-271">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="83d4f-272">확인에 사용할 로드 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-272">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="83d4f-273">프로젝트를 생성하고 지정된 XML 판독기에서 소스 코드를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-273">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="83d4f-274">소스 코드는 전역 속성, 하위 도구 집합 버전, 프로젝트 컬렉션 및 로드 설정이 지정된 상태로 계산됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-274">The source code is evaluated with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-275">이 프로젝트는이 프로젝트 또는 지정된 된 프로젝트 루트 된 소스 프로젝트 파일 전체 경로 지정 하는 경우 지정된 된 프로젝트 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-275">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="83d4f-276">InvalidProjectFileException 평가가 실패할 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-276">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="83d4f-277">해당 프로젝트를 이미 있으면 throw InvalidOperationException 프로젝트 컬렉션에 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-277">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83d4f-278">항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-278">Adds an item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="83d4f-279">추가할 항목의 항목 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-279">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="83d4f-280">추가할 항목의 Include 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-280">Include attribute of the item to be added.</span></span></param>
        <summary><span data-ttu-id="83d4f-281">프로젝트에 메타데이터가 없는 항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-281">Adds an item with no metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="83d4f-282">추가된 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-282">The added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-283">모든 메타 데이터는 나중에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-283">Any metadata can be added later.</span></span> <span data-ttu-id="83d4f-284">와일드 카드 식을 이미 새 항목을 포함 하는 경우에 프로젝트 소스를 수정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-284">Does not modify the project source if a wildcard expression already includes the new item.</span></span>  
  
 <span data-ttu-id="83d4f-285">평가 사용 하면 최상의 노력을 기준으로 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-285">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="83d4f-286">평가 대 한 새 항목 다음에 프로젝트 소스에 정의 된 항목을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-286">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="83d4f-287">이 항목에만 평가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-287">Only this item is evaluated.</span></span> <span data-ttu-id="83d4f-288">에 종속 된 다른 항목을 받지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-288">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="83d4f-289">추가할 항목의 항목 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-289">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="83d4f-290">추가할 항목의 Include 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-290">Include attribute of the item to be added.</span></span></param>
        <param name="metadata"><span data-ttu-id="83d4f-291">추가할 항목의 메타데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-291">The metadata of the added item.</span></span></param>
        <summary><span data-ttu-id="83d4f-292">지정된 메타데이터가 있는 항목을 프로젝트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-292">Adds an item with the given metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="83d4f-293">추가된 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-293">The added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-294">메타 데이터를 나타내는 메타 데이터를 null 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-294">The metadata may be null, which indicates no metadata.</span></span>  
  
 <span data-ttu-id="83d4f-295">평가 사용 하면 최상의 노력을 기준으로 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-295">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="83d4f-296">평가 대 한 새 항목 다음에 프로젝트 소스에 정의 된 항목을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-296">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="83d4f-297">이 항목에만 평가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-297">Only this item is evaluated.</span></span> <span data-ttu-id="83d4f-298">에 종속 된 다른 항목을 받지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-298">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItemFast">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83d4f-299">프로젝트에 메타데이터가 없는 항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-299">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="83d4f-300">항목 그룹의 첫 번째 항목이 아닌 경우 기존 와일드카드가 새 항목과 일치하는지 여부를 확인하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-300">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="83d4f-301">유사한 항목 주변에는 새 항목을 추가하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-301">Makes no effort to locate the new item near similar items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="83d4f-302">추가할 항목 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-302">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="83d4f-303">항목에 추가할 확인되지 않은 Include 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-303">The unevaluated Include attribute to be added to the item.</span></span></param>
        <summary><span data-ttu-id="83d4f-304">프로젝트에 메타데이터가 없는 항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-304">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="83d4f-305">항목 그룹의 첫 번째 항목이 아닌 경우 기존 와일드카드가 새 항목과 일치하는지 여부를 확인하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-305">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="83d4f-306">유사한 항목 주변에는 새 항목을 추가하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-306">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="83d4f-307">추가된 프로젝트 항목 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-307">A list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-308">첫 번째 자식이 동일한 유형의 항목 또는 조건이 없는 하 고 자식이 첫 번째 항목 그룹에 항목을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-308">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="83d4f-309">최상의 노력을 기준으로 평가 합니다.-모든 항목을 사용 하 여 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-309">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="83d4f-310">새 항목 아래 XML에 정의 된 항목으로 실제 평가 되지 됩니다 하는 경우에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-310">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="83d4f-311">이 항목에만 평가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-311">Only this item is evaluated.</span></span> <span data-ttu-id="83d4f-312">에 종속 된 다른 항목을 받지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-312">Other items that might depend on it are not affected.</span></span>  
  
 <span data-ttu-id="83d4f-313">이 편의 위해 이해 하 반드시 유지 프로젝트 자체 완벽 하 게 일관 된 상태에서 다시 확인할 때까지 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-313">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="83d4f-314">추가할 항목 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-314">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="83d4f-315">항목에 추가할 확인되지 않은 Include 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-315">The unevaluated Include attribute to be added to the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="83d4f-316">추가할 메타데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-316">The metadata to be added.</span></span></param>
        <summary><span data-ttu-id="83d4f-317">프로젝트에 메타데이터가 있는 항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-317">Adds an item with metadata to the project.</span></span> <span data-ttu-id="83d4f-318">메타데이터는 null일 수 있습니다. null은 메타데이터가 없음을 의미합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-318">Metadata may be null, indicating no metadata.</span></span> <span data-ttu-id="83d4f-319">항목 그룹의 첫 번째 항목이 아닌 경우 기존 와일드카드가 새 항목과 일치하는지 여부를 확인하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-319">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span> <span data-ttu-id="83d4f-320">유사한 항목 주변에는 새 항목을 추가하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-320">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="83d4f-321">추가된 프로젝트 항목 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-321">A list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-322">첫 번째 자식이 동일한 유형의 항목 또는 조건이 없는 하 고 자식이 첫 번째 항목 그룹에 항목을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-322">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="83d4f-323">최상의 노력을 기준으로 평가 합니다.-모든 항목을 사용 하 여 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-323">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="83d4f-324">새 항목 아래 XML에 정의 된 항목으로 실제 평가 되지 됩니다 하는 경우에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-324">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="83d4f-325">이 항목에만 평가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-325">Only this item is evaluated.</span></span> <span data-ttu-id="83d4f-326">에 종속 된 다른 항목을 받지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-326">Other items that might depend on it is not affected.</span></span>  
  
 <span data-ttu-id="83d4f-327">이 편의 위해 이해 하 반드시 유지 프로젝트 자체 완벽 하 게 일관 된 상태에서 다시 확인할 때까지 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-327">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItemDefinitionMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItemDefinitionMetadata As ICollection(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ AllEvaluatedItemDefinitionMetadata { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItemDefinitionMetadata : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-328">확인하는 동안 발견된 모든 항목 정의 메타데이터를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-328">Gets all item definition metadata encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="83d4f-329">모든 항목 정의 메타 데이터 확인 하는 동안 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-329">All item definition metadata encountered during evaluation.</span></span> <span data-ttu-id="83d4f-330">해당 조건이 true가 되지 않는 요소는 포함하지 않으며 마지막 확인 이후 추가된 항목 정의 메타데이터도 포함하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-330">This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-331">두 번째 확인 패스에서 항목 메타 데이터를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-331">Item metadata is read during the second evaluation pass.</span></span> <span data-ttu-id="83d4f-332">ItemDefinitions 속성에서 반환 된 메타 데이터와 달리이 메타 데이터 정렬 되 고 이후에 동일한 이름 및 항목 유형으로 재정의 하는 모든 메타 데이터를 포함.</span><span class="sxs-lookup"><span data-stu-id="83d4f-332">Unlike metadata returned by the ItemDefinitions property, this metadata is ordered, and includes any metadata subsequently overridden with the same name and item type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItems As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AllEvaluatedItems { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItems : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-333">확인하는 동안 발견된 모든 항목에 대한 열거자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-333">Gets an enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="83d4f-334">세 번째 확인 패스에서 이 열거자를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-334">These are read during the third evaluation pass.</span></span></summary>
        <value><span data-ttu-id="83d4f-335">평가 하는 동안 발견 된 모든 항목에 대 한 열거자입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-335">An enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="83d4f-336">세 번째 확인 패스에서 이 열거자를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-336">These are read during the third evaluation pass.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-337">항목 속성에서 반환 된 해당 항목을 달리 확인 뿐 아니라 같은 항목 종류의 항목에 대해 정렬 하는 동안 발견 된 다른 모든 항목에 대해 정렬 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-337">Unlike those items returned by the Items property, these are ordered with respect to all other items encountered during evaluation, not just ordered with respect to items of the same item type.</span></span>  
  
 <span data-ttu-id="83d4f-338">일부 응용 프로그램에서이 전체 상호 순서 지정이 중요 하며 해당 호스트가이 속성을 사용 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-338">In some applications, this complete mutual ordering is significant, and such hosts can use this property.</span></span>  
  
 <span data-ttu-id="83d4f-339">열거형 인 조건이 true가 되지 않는 요소는 포함 하지 않습니다도 포함 되지 않습니다 마지막 확인 이후 추가 된 모든 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-339">The enumeration does not include any elements whose conditions did not evaluate to true, nor does it include any items added since the last evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedProperties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ AllEvaluatedProperties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedProperties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-340">확인하는 동안 발견된 모든 속성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-340">Gets all properties encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="83d4f-341">모든 속성을 평가 하는 동안 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-341">All properties encountered during evaluation.</span></span> <span data-ttu-id="83d4f-342">해당 조건이 true가 되지 않는 속성은 포함하지 않으며 마지막 확인 이후 추가된 속성도 포함하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-342">This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-343">첫 번째 계산 패스 동안 이러한 속성을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-343">These properties are read during the first evaluation pass.</span></span> <span data-ttu-id="83d4f-344">Properties 속성에서 반환 된 속성과 달리은 정렬이 고 동일한 이름의 이후에 재정의 된 속성을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-344">Unlike properties returned by the Properties property, these are ordered, and includes any properties subsequently overridden with the same name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83d4f-345">기본 대상을 사용하여 이 프로젝트를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-345">Builds this project, using the default targets.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="project.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83d4f-346">기본 대상을 사용하여 이 프로젝트를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-346">Builds this project, using the default targets.</span></span></summary>
        <returns><span data-ttu-id="83d4f-347">성공하면 <see langword="true" />이고, 실패하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-347"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-348">를 설정 하거나 빌드를 위해 가상 항목을 가져올 프로젝트 인스턴스를 명시적으로 복제 하 고 빌드하십시오.</span><span class="sxs-lookup"><span data-stu-id="83d4f-348">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="83d4f-349">이 메서드는 프로젝트 개체를 수정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-349">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (logger As ILogger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.Build : Microsoft.Build.Framework.ILogger -&gt; bool" Usage="project.Build logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="83d4f-350">빌드 중에 사용할 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-350">The logger to be used during the build.</span></span></param>
        <summary><span data-ttu-id="83d4f-351">기본 대상 및 지정된 로거를 사용하여 이 프로젝트를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-351">Builds this project, using the default targets and the given logger.</span></span></summary>
        <returns><span data-ttu-id="83d4f-352">성공하면 <see langword="true" />이고, 실패하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-352"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-353">를 설정 하거나 빌드를 위해 가상 항목을 가져올 프로젝트 인스턴스를 명시적으로 복제 하 고 빌드하십시오.</span><span class="sxs-lookup"><span data-stu-id="83d4f-353">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="83d4f-354">이 메서드는 프로젝트 개체를 수정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-354">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="83d4f-355">빌드 중에 사용할 모든 로거에 대한 열거자입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-355">An enumerator over all loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="83d4f-356">기본 대상 및 지정된 로거를 사용하여 이 프로젝트를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-356">Builds this project, using the default targets and the given loggers.</span></span></summary>
        <returns><span data-ttu-id="83d4f-357">성공하면 <see langword="true" />이고, 실패하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-357"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-358">를 설정 하거나 빌드를 위해 가상 항목을 가져올 프로젝트 인스턴스를 명시적으로 복제 하 고 빌드하십시오.</span><span class="sxs-lookup"><span data-stu-id="83d4f-358">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="83d4f-359">이 메서드는 프로젝트 개체를 수정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-359">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target);" />
      <MemberSignature Language="F#" Value="member this.Build : string -&gt; bool" Usage="project.Build target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="83d4f-360">빌드할 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-360">The target to be built.</span></span></param>
        <summary><span data-ttu-id="83d4f-361">지정된 대상을 빌드하여 이 프로젝트를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-361">Builds this project, building the given target.</span></span></summary>
        <returns><span data-ttu-id="83d4f-362">성공하면 <see langword="true" />이고, 실패하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-362"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-363">를 설정 하거나 빌드를 위해 가상 항목을 가져올 프로젝트 인스턴스를 명시적으로 복제 하 고 빌드하십시오.</span><span class="sxs-lookup"><span data-stu-id="83d4f-363">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="83d4f-364">이 메서드는 프로젝트 개체를 수정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-364">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] -&gt; bool" Usage="project.Build targets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="83d4f-365">빌드할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-365">An array of targets to be built.</span></span></param>
        <summary><span data-ttu-id="83d4f-366">지정된 대상을 빌드하여 이 프로젝트를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-366">Builds this project, building the given targets.</span></span></summary>
        <returns><span data-ttu-id="83d4f-367">성공하면 <see langword="true" />이고, 실패하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-367"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-368">를 설정 하거나 빌드를 위해 가상 항목을 가져올 프로젝트 인스턴스를 명시적으로 복제 하 고 빌드하십시오.</span><span class="sxs-lookup"><span data-stu-id="83d4f-368">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="83d4f-369">이 메서드는 프로젝트 개체를 수정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-369">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="83d4f-370">빌드 중에 사용할 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-370">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="83d4f-371">빌드 중에 사용할 원격 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-371">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="83d4f-372">기본 대상과 지정된 로거 및 원격 로거를 사용하여 이 프로젝트를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-372">Builds this project, using the default targets and the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="83d4f-373">성공하면 <see langword="true" />이고, 실패하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-373"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-374">를 설정 하거나 빌드를 위해 가상 항목을 가져올 프로젝트 인스턴스를 명시적으로 복제 하 고 빌드하십시오.</span><span class="sxs-lookup"><span data-stu-id="83d4f-374">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="83d4f-375">이 메서드는 프로젝트 개체를 수정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-375">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="83d4f-376">빌드할 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-376">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="83d4f-377">빌드 중에 사용할 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-377">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="83d4f-378">지정된 대상을 빌드하고 지정된 로거를 사용하여 이 프로젝트를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-378">Builds this project, building the given target and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="83d4f-379">성공하면 <see langword="true" />이고, 실패하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-379"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-380">를 설정 하거나 빌드를 위해 가상 항목을 가져올 프로젝트 인스턴스를 명시적으로 복제 하 고 빌드하십시오.</span><span class="sxs-lookup"><span data-stu-id="83d4f-380">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="83d4f-381">이 메서드는 프로젝트 개체를 수정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-381">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="83d4f-382">빌드할 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-382">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="83d4f-383">빌드 중에 사용할 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-383">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="83d4f-384">지정된 대상을 빌드하고 지정된 로거를 사용하여 이 프로젝트를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-384">Builds this project, building the given targets and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="83d4f-385">성공하면 <see langword="true" />이고, 실패하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-385"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-386">를 설정 하거나 빌드를 위해 가상 항목을 가져올 프로젝트 인스턴스를 명시적으로 복제 하 고 빌드하십시오.</span><span class="sxs-lookup"><span data-stu-id="83d4f-386">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="83d4f-387">이 메서드는 프로젝트 개체를 수정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-387">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="83d4f-388">빌드할 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-388">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="83d4f-389">빌드 중에 사용할 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-389">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="83d4f-390">빌드 중에 사용할 원격 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-390">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="83d4f-391">지정된 대상을 빌드하고 지정된 로거 및 원격 로거를 사용하여 이 프로젝트를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-391">Builds this project, building the given target and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="83d4f-392">성공하면 <see langword="true" />이고, 실패하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-392"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-393">를 설정 하거나 빌드를 위해 가상 항목을 가져올 프로젝트 인스턴스를 명시적으로 복제 하 고 빌드하십시오.</span><span class="sxs-lookup"><span data-stu-id="83d4f-393">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="83d4f-394">이 메서드는 프로젝트 개체를 수정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-394">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="83d4f-395">빌드할 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-395">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="83d4f-396">빌드 중에 사용할 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-396">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="83d4f-397">빌드 중에 사용할 원격 로거입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-397">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="83d4f-398">지정된 대상을 빌드하고 지정된 로거 및 원격 로거를 사용하여 이 프로젝트를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-398">Builds this project, building the given targets and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="83d4f-399">성공하면 <see langword="true" />이고, 실패하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-399"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-400">를 설정 하거나 빌드를 위해 가상 항목을 가져올 프로젝트 인스턴스를 명시적으로 복제 하 고 빌드하십시오.</span><span class="sxs-lookup"><span data-stu-id="83d4f-400">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="83d4f-401">이 메서드는 프로젝트 개체를 수정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-401">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; ConditionedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; ConditionedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionedProperties As IDictionary(Of String, List(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ ConditionedProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionedProperties : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt;" Usage="Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-402">속성, 속성 그룹, 가져오기 및 시기에 있는 조건을 확인하는 데 사용되는 속성의 가능한 속성 값 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-402">Gets a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span></summary>
        <value><span data-ttu-id="83d4f-403">속성, 속성 그룹, 가져오기에 있는 조건을 확인 하는 데 사용 되는 속성에 대 한 가능한 속성 값의 컬렉션 및 시기의 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-403">A collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span> <span data-ttu-id="83d4f-404">컬렉션은 정규 형식으로 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-404">The collection is in canonical form.</span></span> <span data-ttu-id="83d4f-405">항목 이름은 확인할 속성의 이름이며 값은 가능한 속성 값 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-405">The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-406">예를 들어, 다음과 같은 프로젝트의 속성에 존재 하는 경우: Condition="'$(Configuration)&#124;$(플랫폼)' = = ' 디버그&#124;x 86'" Condition="'$(Configuration)' 'Release' = =" {0} "구성", {"Debug", "릴리스"}}를 사용 하 여 테이블을 채울 수는 {"플랫폼", {"x86"}} 시각적 개체에서이 컬렉션을 사용 Studio 프로젝트에 정의 된 구성을 확인 하려면</span><span class="sxs-lookup"><span data-stu-id="83d4f-406">For example, if the following conditions existed on properties in a project: Condition="'$(Configuration)&#124;$(Platform)' == 'Debug&#124;x86'" Condition="'$(Configuration)' == 'Release'" the table would be populated with { "Configuration", { "Debug", "Release" }} { "Platform", { "x86" }} This collection is used by Visual Studio to determine the configurations defined in the project</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProjectInstance">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83d4f-407">이 프로젝트를 기반으로 하나 이 프로젝트와 완전히 분리된 프로젝트 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-407">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-408">독립적으로 빌드하도록 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-408">Can be used to build independently.</span></span> <span data-ttu-id="83d4f-409">필요한 경우 원래 프로젝트로 표시 되도록 수정 되지 않은 경우 원래 프로젝트 인스턴스를 만들기 전에 평가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-409">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83d4f-410">이 프로젝트를 기반으로 하나 이 프로젝트와 완전히 분리된 프로젝트 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-410">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="83d4f-411">프로젝트 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-411">The project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-412">독립적으로 빌드하도록 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-412">Can be used to build independently.</span></span> <span data-ttu-id="83d4f-413">필요한 경우 원래 프로젝트로 표시 되도록 수정 되지 않은 경우 원래 프로젝트 인스턴스를 만들기 전에 평가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-413">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance (Microsoft.Build.Execution.ProjectInstanceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance(valuetype Microsoft.Build.Execution.ProjectInstanceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance (settings As ProjectInstanceSettings) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance(Microsoft::Build::Execution::ProjectInstanceSettings settings);" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : Microsoft.Build.Execution.ProjectInstanceSettings -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.Build.Execution.ProjectInstanceSettings" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="83d4f-414">생성된 프로젝트 인스턴스를 변경할 수 없는지 여부 및 여기에 성능 향상을 위한 조회 테이블이 포함되어 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-414">Determines whether created project instance is immutable and whether it contains a look up table to improve performance.</span></span></param>
        <summary><span data-ttu-id="83d4f-415">이 프로젝트를 기반으로 하나 이 프로젝트와 완전히 분리된 프로젝트 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-415">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="83d4f-416">프로젝트 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-416">The project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-417">독립적으로 빌드하도록 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-417">Can be used to build independently.</span></span> <span data-ttu-id="83d4f-418">필요한 경우 원래 프로젝트로 표시 되도록 수정 되지 않은 경우 원래 프로젝트 인스턴스를 만들기 전에 평가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-418">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryPath : string" Usage="Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-419">이 프로젝트의 루트 디렉터리를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-419">Gets the root directory for this project.</span></span></summary>
        <value><span data-ttu-id="83d4f-420">이 프로젝트에 대 한 루트 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-420">The root directory for this project.</span></span> <span data-ttu-id="83d4f-421">루트 디렉터리는 null이 아니며 메모리 내 프로젝트는 프로젝트가 로드된 시점의 현재 디렉터리를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-421">The root directory is never null; in-memory projects use the current directory at the time of project load.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMarkDirty">
      <MemberSignature Language="C#" Value="public bool DisableMarkDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableMarkDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableMarkDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableMarkDirty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableMarkDirty : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-422"><see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" />를 일시적으로 사용하지 않는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-422">Gets or sets a value that indicates whether <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> is temporarily disabled.</span></span> <span data-ttu-id="83d4f-423">이를 사용하면 예를 들어 재확인을 위해 프로젝트를 변경된 것으로 표시하지 않고도 결과적으로 전역 속성을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-423">This allows, for example, a global property to be set without the project getting marked dirty for reevaluation as a consequence.</span></span></summary>
        <value><span data-ttu-id="83d4f-424"><see langword="true" /> 나타내려면 <see langword="MarkDirty" /> 일시적으로 사용 안 함, 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-424"><see langword="true" /> to indicate <see langword="MarkDirty" /> is temporarily disabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationCounter">
      <MemberSignature Language="C#" Value="public int EvaluationCounter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EvaluationCounter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluationCounter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EvaluationCounter { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluationCounter : int" Usage="Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-425">프로젝트를 다시 확인할 때마다 증가하는 숫자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-425">Gets a number that is incremented every time that project is re-evaluated.</span></span></summary>
        <value><span data-ttu-id="83d4f-426">증가한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-426">The incremented value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-427">이 값은 프로젝트가 다시 확인 된 경우를 확인 하기 위해 이전 값과 비교 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-427">This value should be compared with previous values to see if the project has been re-evaluated.</span></span> <span data-ttu-id="83d4f-428">특정된 다시 확인에 대 한 둘 이상의 증가 될 수 있으므로 프로젝트 재평가 되었습니다 횟수를 결정 하는 사용 되지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-428">It should not be used to determine how many times the project has been re-evaluated since it may be incremented by more than one for a given re-evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="member this.ExpandString : string -&gt; string" Usage="project.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="83d4f-429">확인할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-429">The string to be evaluated.</span></span></param>
        <summary><span data-ttu-id="83d4f-430">항목 및 속성을 확장하여 지정된 문자열을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-430">Evaluates the given string by expanding items and properties.</span></span> <span data-ttu-id="83d4f-431">문자열은 프로젝트 파일의 끝에서 발견된 것으로 가정하여 확인됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-431">The string is evaluated as if it were found at the very end of the project file.</span></span></summary>
        <returns><span data-ttu-id="83d4f-432">확인된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-432">The evaluated string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-433">평가 위해 최상의 노력 충분 한 경우이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-433">This method can be used when best-effort evaluation is sufficient.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string with get, set" Usage="Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-434">프로젝트 소스 파일에 대한 전체 경로를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-434">Gets or sets the full path to the project source file.</span></span></summary>
        <value><span data-ttu-id="83d4f-435">전체 경로 프로젝트 소스 파일 또는 디스크에서 프로젝트를 로드 하지 않은 경우 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-435">The full path to the project source file, or an empty string if the project was not loaded from disk.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-436">프로젝트 컬렉션의 프로젝트에서이 속성을 설정 합니다. 프로젝트를 이름을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-436">Setting this property on a project in a project collection renames the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83d4f-437">제공된 항목의 Include 특성에 대한 확인되고 이스케이프된 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-437">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItem) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItem -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="83d4f-438">확인하고 이스케이프할 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-438">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="83d4f-439">제공된 항목의 Include 특성에 대한 확인되고 이스케이프된 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-439">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
        <returns><span data-ttu-id="83d4f-440">제공된 항목의 Include 특성에 대한 확인되고 이스케이프된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-440">The evaluated, escaped value of the Include attribute of the provided items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinition) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="83d4f-441">확인하고 이스케이프할 항목 정의입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-441">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="83d4f-442">제공된 항목 정의의 Include 특성에 대한 확인되고 이스케이프된 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-442">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="83d4f-443">Include 특성의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-443">The value of the Include attribute.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItems itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="83d4f-444">검색할 항목 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-444">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="83d4f-445">지정된 항목 형식의 프로젝트에 있는 모든 항목을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-445">Gets all the items in the project of the given item type.</span></span> <span data-ttu-id="83d4f-446">해당 항목이 없으면 빈 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-446">If there are none, returns an empty list.</span></span> <span data-ttu-id="83d4f-447">이 프로젝트의 항목을 수정하려면 AddItem 또는 RemoveItem을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-447">Use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="83d4f-448">지정된 항목 형식의 프로젝트에 있는 모든 항목이거나 지정된 항목 이름의 항목이 없으면 빈 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-448">All the items in the project of the given item type, or an empty list if there are no items with the given item name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-449">이 프로젝트의 항목을 수정하려면 AddItem 또는 RemoveItem을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-449">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude (string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude(string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByEvaluatedInclude (evaluatedInclude As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsByEvaluatedInclude(System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByEvaluatedInclude : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsByEvaluatedInclude evaluatedInclude" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="evaluatedInclude"><span data-ttu-id="83d4f-450">확인된 Include 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-450">The evaluated Include attribute.</span></span></param>
        <summary><span data-ttu-id="83d4f-451">확인된 특정 Include 특성이 있는 모든 항목을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-451">Gets all items that have the given evaluated Include attribute.</span></span></summary>
        <returns><span data-ttu-id="83d4f-452">확인된 특정 Include 특성이 있는 모든 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-452">All items that have the given evaluated Include attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-453">예를 들어이 메서드는 확인된 된 Include 특성 "component.cpp"에 있는 모든 항목을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-453">For example, this method might return all items that have the evaluated Include attribute "component.cpp".</span></span> <span data-ttu-id="83d4f-454">일반적으로 0 개 이상의 항목이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-454">Typically zero or one items are returned.</span></span> <span data-ttu-id="83d4f-455">그러나 동일한 경로와 다른 항목 형식 또는 같은 항목 형식을 사용 하더라도 여러 항목이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-455">However, there may be multiple items with the same path and different item types, or even with the same item types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsIgnoringCondition (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsIgnoringCondition(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItemsIgnoringCondition : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsIgnoringCondition itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="83d4f-456">검색할 항목 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-456">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="83d4f-457">Condition 특성이 true가 되는지 여부에 상관없이 지정된 형식의 프로젝트에 있는 모든 항목을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-457">Gets all the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span> <span data-ttu-id="83d4f-458">읽기 전용 목록입니다. 이 프로젝트의 항목을 수정하려면 AddItem 또는 RemoveItem을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-458">This is a read-only list: use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="83d4f-459">Condition 특성이 true가 되는지 여부에 상관없이 지정된 형식의 프로젝트에 있는 모든 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-459">All the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-460">읽기 전용 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-460">This is a read-only list.</span></span> <span data-ttu-id="83d4f-461">이 프로젝트의 항목을 수정하려면 AddItem 또는 RemoveItem을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-461">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalProject">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetLogicalProject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLogicalProject () As IEnumerable(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ GetLogicalProject();" />
      <MemberSignature Language="F#" Value="member this.GetLogicalProject : unit -&gt; seq&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="project.GetLogicalProject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83d4f-462">"논리 프로젝트"의 모든 요소에 대한 열거자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-462">Gets an enumerator over all the elements in the "logical project".</span></span> <span data-ttu-id="83d4f-463">논리 프로젝트는 원본 MSBuild 프로젝트 매니페스트 파일의 모든 가져오기에 대한 텍스트를 인라인 처리한 결과인 단일 MSBuild 파일에서 얻은 확인되지 않은 프로젝트로 정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-463">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.</span></span></summary>
        <returns><span data-ttu-id="83d4f-464">"논리 프로젝트"의 모든 요소에 대한 열거자입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-464">An enumerator over all the elements in the "logical project".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-465">논리 프로젝트는 확인 되지 않은 프로젝트 원본 MSBuild 프로젝트 매니페스트 파일의 모든 가져오기의 텍스트를 인라인을 비롯 한 결과인 단일 MSBuild 파일에서 가져온 대로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-465">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of including inline the text of all imports of the original MSBuild project manifest file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83d4f-466">제공된 항목에 대한 제공된 이름을 가진 메타데이터의 이스케이프된 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-466">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectMetadata metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectMetadata metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadata) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectMetadata ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectMetadata -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="83d4f-467">이스케이프할 메타데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-467">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="83d4f-468">제공된 메타데이터의 이스케이프된 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-468">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="83d4f-469">제공된 메타데이터의 이스케이프된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-469">The escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItem item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItem item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItem, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItem * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="83d4f-470">메타데이터를 이스케이프할 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-470">The item whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="83d4f-471">이스케이프할 메타데이터의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-471">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="83d4f-472">제공된 항목에 대한 제공된 이름을 가진 메타데이터의 이스케이프된 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-472">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="83d4f-473">제공된 항목에 대한 제공된 이름을 가진 메타데이터의 이스케이프된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-473">The escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinition, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="83d4f-474">메타데이터를 이스케이프할 항목 정의입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-474">The item definition whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="83d4f-475">이스케이프할 메타데이터의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-475">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="83d4f-476">제공된 항목 정의에 대한 제공된 이름을 가진 메타데이터의 이스케이프된 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-476">Gets the escaped value of the metadatum with the provided name on the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="83d4f-477">제공된 항목 정의에 대한 제공된 이름을 가진 메타데이터의 이스케이프된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-477">The escaped value of the metadatum with the provided name on the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="83d4f-478">검색할 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-478">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="83d4f-479">프로젝트에서 지정된 이름의 속성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-479">Gets any property in the project that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="83d4f-480">지정된 이름을 포함하는 프로젝트의 속성이거나 해당 이름의 속성이 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-480">Any property in the project that has the specified name, or <see langword="null" /> if no property of that name exists.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="project.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="83d4f-481">값을 검색할 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-481">The name of the property whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="83d4f-482">이 프로젝트에서 지정된 속성의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-482">Gets the value of the given property in this project.</span></span></summary>
        <returns><span data-ttu-id="83d4f-483">이 프로젝트에서 지정된 속성의 값이거나 해당 이름의 속성이 없으면 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-483">The value of the given property in this project, or an empty string if no property of that name exists.</span></span> <span data-ttu-id="83d4f-484">문자열을 반환하기 전에 이스케이프 시퀀스가 변환됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-484">Escape sequences are converted before returning the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-485">빈 문자열 값을 사용 하 여 속성 및 속성이 전혀 구분 하지 않습니다이 메서드에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-485">A property with a value of empty string and no property at all are not distinguished between by this method.</span></span> <span data-ttu-id="83d4f-486">프로젝트에는 속성이 전혀 설정 되어 있는지를 확인 하려면 GetProperty(name)를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-486">To determine if a property is set at all in the project, use GetProperty(name).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Evaluation.ProjectProperty -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="83d4f-487">이스케이프할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-487">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="83d4f-488">제공된 속성의 이스케이프된 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-488">Gets the escaped value of the provided property.</span></span></summary>
        <returns><span data-ttu-id="83d4f-489">제공된 속성의 이스케이프된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-489">The escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-490">이 프로젝트 확인에 사용되는 전역 속성의 사전을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-490">Gets a dictionary of the global properties used for the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="83d4f-491">이 프로젝트 확인에 사용 되는 전역 속성의 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-491">A dictionary of the global properties used for the evaluation of this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-492">이 읽기 전용 데드 IDictionary 변환 하는 공개적으로 노출 된 getter\<문자열, 문자열 >.</span><span class="sxs-lookup"><span data-stu-id="83d4f-492">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 <span data-ttu-id="83d4f-493">변경 된 경우 쉽게 구분을 위해 설정 하 고 전역 속성을 제거할 작업을 완료 <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> 고 <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-493">In order to easily tell when we're dirtied, setting and removing global properties is done with <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; Imports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; Imports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Imports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Imports As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ Imports { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Imports : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.Imports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-494">이 프로젝트 확인에 영향을 주는 모든 파일의 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-494">Gets a list of all the files that contributed to the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="83d4f-495">이 프로젝트 확인에 영향을 주는 모든 파일의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-495">A list of all the files that contributed to the evaluation of this project.</span></span>  
  
<span data-ttu-id="83d4f-496">각 항목의 이름은 해당 파일을 가져오도록 하는 Import 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-496">The name of each item is the Import element that caused the file to be imported.</span></span> <span data-ttu-id="83d4f-497">각 항목의 값은 가져온 프로젝트의 프로젝트 루트입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-497">The value of each item is the project root of the imported project.</span></span> <span data-ttu-id="83d4f-498">Condition 특성이 false가 되는 Import 요소는 포함되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-498">Import elements whose Condition attribute evaluated to false are not included.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-499">이 프로젝트의 프로젝트 루트 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-499">The project root of this project is not included.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportsIncludingDuplicates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportsIncludingDuplicates As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ ImportsIncludingDuplicates { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImportsIncludingDuplicates : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-500">가져오기를 여러 번 가져온 경우 중복 가져오기 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-500">Gets a list of duplicate imports if an import was imported multiple times.</span></span> <span data-ttu-id="83d4f-501">그러나 확인에는 첫 번째 가져오기만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-501">However, only the first import was used in evaluation.</span></span></summary>
        <value><span data-ttu-id="83d4f-502">중복 가져오기 목록을 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-502">A list of duplicate imports.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuildEnabled">
      <MemberSignature Language="C#" Value="public bool IsBuildEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuildEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBuildEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuildEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBuildEnabled : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-503">이 프로젝트의 작업 및 대상을 빌드할 수 있는지 여부를 선택하는 속성을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-503">Gets or sets a property that selects whether the targets and tasks of this project can be built.</span></span></summary>
        <value><span data-ttu-id="83d4f-504"><see langword="true" /> 이 프로젝트의 작업 및 대상을; 생성할 수 있으면 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-504"><see langword="true" /> if the targets and tasks of this project can be built; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-505">보안상의 이유로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-505">Can be used for security purposes.</span></span> <span data-ttu-id="83d4f-506">기본적으로 새 프로젝트를 같은 IsBuildEnabled 설정을 포함 하는 부모 프로젝트 컬렉션에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-506">By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it.</span></span> <span data-ttu-id="83d4f-507">IsBuildEnabled false 인 경우에이 프로젝트에서 빌드 메서드가 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-507">When IsBuildEnabled is false, the Build method on this project fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-508">이 프로젝트가 수정되어 다시 확인해야 하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-508">Gets a value that indicates whether this project has been modified so that it must be reevaluated.</span></span></summary>
        <value><span data-ttu-id="83d4f-509"><see langword="true" /> 다시 확인 해야 합니다;이 프로젝트가 수정 된 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-509"><see langword="true" /> if this project has been modified so that it must be reevaluated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-510">프로젝트 수정 되 고 변경 내용을 포함 하 여 기본 프로젝트 소스 코드 파일을 가져올 때 다시 평가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-510">A project is modified and must be reevaluated when the underlying project source code, including changes to imported files.</span></span> <span data-ttu-id="83d4f-511">프로젝트도 수정 됩니다 프로젝트 도구 집합을 변경 하는 경우 다시 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-511">A project is also modified must be reevaluated if the project tool set changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Evaluation.ProjectItemDefinition&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Evaluation.ProjectItemDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-512">이 프로젝트의 항목 정의에 대한 사전을 항목 형식이 키로 지정된 상태로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-512">Gets a dictionary of item definitions in this project, keyed by item type.</span></span></summary>
        <value><span data-ttu-id="83d4f-513">사전 항목 형식을 키로 사용이 프로젝트의 항목 정의입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-513">A dictionary of item definitions in this project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-514">이 프로젝트의 모든 항목에 대한 열거자를 항목 형식 그룹 내에서 순서가 지정된 상태로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-514">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="83d4f-515">이 프로젝트의 모든 항목에 대 한 열거자 항목 형식 그룹 내에 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-515">An enumerator over all items in this project, ordered within groups of item types.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemsIgnoringCondition As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ ItemsIgnoringCondition { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemsIgnoringCondition : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-516">이 프로젝트의 모든 항목에 대한 열거자를 항목 형식 그룹 내에서 순서가 지정된 상태로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-516">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="83d4f-517">조건이 false로 평가 되거나 해당 조건이 항목 그룹 내에 포함 된 항목을 포함 하 여 항목 형식 그룹 내에서이 프로젝트의 모든 항목에 대 한 열거자 정렬 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-517">An enumerator over all items in this project, ordered within groups of item types, including items whose conditions evaluate to false, or are contained within item groups whose condition evaluates to <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-518">사용할 수 있는 모든 항목을 표시 하려면 현재 구성에서 빌드에 포함 하지 않은 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-518">Can be used to display all items, even if they are not part of the build in the current configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-519">이 프로젝트의 모든 항목 형식에 대한 열거자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-519">Gets an enumerator over all item types in this project.</span></span></summary>
        <value><span data-ttu-id="83d4f-520">이 프로젝트의 모든 항목 형식에 대 한 열거자입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-520">An enumerator over all item types in this project.</span></span> <span data-ttu-id="83d4f-521">순서가 지정된 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-521">This is an ordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkDirty">
      <MemberSignature Language="C#" Value="public void MarkDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.MarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MarkDirty();" />
      <MemberSignature Language="F#" Value="member this.MarkDirty : unit -&gt; unit" Usage="project.MarkDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83d4f-522">이 프로젝트를 수정된 상태로 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-522">Marks this project as modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-523">프로젝트를 자동으로 영향을 주는 모든 편집이 수정 된 것으로 표시 하기 때문에는이 메서드를 명시적으로 호출할 필요가 거의 없습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-523">It is seldom necessary to call this method explicitly, because all edits affecting a project automatically mark it as modified.</span></span>  
  
 <span data-ttu-id="83d4f-524">그러나 경우에 따라이 메서드 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-524">Sometimes, however, this method must be called.</span></span> <span data-ttu-id="83d4f-525">예를 들어, 프로젝트가 디스크에 존재 하는 파일에 따라 달라 집니다 조건이 Import 요소가 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-525">For example, a project may have an Import element whose condition depends on a file that exists on a disk.</span></span> <span data-ttu-id="83d4f-526">평가 시 파일 존재 하지 않습니다 하 고 평가 마친 후 만든 수정 된 프로젝트를 명시적으로 표시 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-526">If that file does not exist at evaluation time, and it is created after evaluation, then the project must be explicitly marked as modified.</span></span>  
  
 <span data-ttu-id="83d4f-527"><xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> 메서드 평가 하는 데 필요한 인지 확인 하려면이 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-527">The <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> method uses this property to determine if an evaluation is necessary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectCollection">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectCollection ProjectCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectCollection ProjectCollection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectCollection As ProjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectCollection ^ ProjectCollection { Microsoft::Build::Evaluation::ProjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectCollection : Microsoft.Build.Evaluation.ProjectCollection" Usage="Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-528">이 프로젝트를 포함하는 프로젝트 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-528">Gets the project collection which contains this project.</span></span></summary>
        <value><span data-ttu-id="83d4f-529">이 프로젝트를 포함 하는 프로젝트 컬렉션 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-529">The project collection that contains this project, which is never <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-530">원래 파일 내에 있는 특정 내용이 아니라 원래 파일 자체의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-530">The location of the originating file itself, not any specific content within it.</span></span> <span data-ttu-id="83d4f-531">파일에 이름이 정해지지 않았다면, 이것은 빈 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-531">If the file has not been given a name, this is an empty location.</span></span> <span data-ttu-id="83d4f-532">위치가 없는 경우는 합법적 사례입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-532">This is a legitimate case of having no location.</span></span></summary>
        <value><span data-ttu-id="83d4f-533">파일 이름을 적용 되지 않은 경우 위치 또는 빈 위치를 파일 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-533">The originating file location, or an empty location if the file has not been given a name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-534">이 프로젝트의 모든 속성에 대한 열거자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-534">Gets an enumerator over all properties in this project.</span></span> <span data-ttu-id="83d4f-535">순서가 지정되지 않은 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-535">This is an unordered collection.</span></span></summary>
        <value><span data-ttu-id="83d4f-536">이 프로젝트의 모든 속성에 대 한 열거자입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-536">An enumerator over all properties in this project.</span></span> <span data-ttu-id="83d4f-537">속성은 표시될 때 확인되므로 이 값은 순서가 지정되지 않은 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-537">Since properties are evaluated as they appear, this is an unordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReevaluateIfNecessary">
      <MemberSignature Language="C#" Value="public void ReevaluateIfNecessary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReevaluateIfNecessary() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReevaluateIfNecessary ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReevaluateIfNecessary();" />
      <MemberSignature Language="F#" Value="member this.ReevaluateIfNecessary : unit -&gt; unit" Usage="project.ReevaluateIfNecessary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83d4f-538">변경 내용을 포함하도록 프로젝트를 다시 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-538">Reevaluates the project to incorporate any changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-539">프로젝트에는 수정 된 것으로 표시 되는 경우에 다시 평가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-539">The project is reevaluated only if it is marked as modified.</span></span> <span data-ttu-id="83d4f-540">재평가는 프로젝트 소스 코드에 대 한 모든 변경 내용을 통합 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-540">Reevaluation incorporates all changes made to the project source code.</span></span>  
  
 <span data-ttu-id="83d4f-541">InvalidProjectFileException 평가가 실패할 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-541">Throws InvalidProjectFileException if the evaluation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGlobalProperty">
      <MemberSignature Language="C#" Value="public bool RemoveGlobalProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveGlobalProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveGlobalProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveGlobalProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveGlobalProperty : string -&gt; bool" Usage="project.RemoveGlobalProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="83d4f-542">제거할 전역 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-542">The name of the global property to be removed.</span></span></param>
        <summary><span data-ttu-id="83d4f-543">전역 속성을 제거하고 프로젝트를 수정된 상태로 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-543">Removes a global property and marks the project as modified.</span></span></summary>
        <returns><span data-ttu-id="83d4f-544">글로벌 속성 값이 설정되었으면 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-544"><see langword="true" /> if the value of the global property was set.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Evaluation.ProjectItem -&gt; bool" Usage="project.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="83d4f-545">제거할 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-545">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="83d4f-546">프로젝트에서 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-546">Removes an item from the project.</span></span> <span data-ttu-id="83d4f-547">제거할 항목이 프로젝트에 있어야 하며 가져온 파일에서 생성된 것이 아니어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-547">The item to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="83d4f-548">해당 항목이 이 확인된 프로젝트에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-548"><see langword="true" /> if the item is present in this evaluated project; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="83d4f-549">일반적으로 이 메서드는 true를 반환하며, 요청된 항목이 없으면 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-549">Normally this method returns true, since if the requested item is not present, the method throws an exception.</span></span> <span data-ttu-id="83d4f-550">항목이 ItemsIgnoringCondition 컬렉션에만 있으면 메서드가 false를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-550">If the item is present only in the ItemsIgnoringCondition collection, however, the method returns false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-551">항목이 포함 된 항목 그룹을 빈 되 면 에서도 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-551">If the item group containing the item becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="83d4f-552">항목 와일드 카드 또는 세미콜론으로 구분 된 식에서 발생 하는 경우 식이 여러 항목에 먼저 확장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-552">If the item originates from a wildcard or semicolon-separated expression, the expression is first expanded into multiple items.</span></span>  
  
 <span data-ttu-id="83d4f-553">프로젝트 업데이트 되지만 더 이상 평가 다시 확인할 때까지 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-553">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="83d4f-554">예를 들어 항목 "i" 형식 제거 됩니다에서 계산 되는 "j" "@(i)"는 다시 확인할 때까지 수정 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-554">For example, if an item of type "i" is removed, "j" which is evaluated from "@(i)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="public void RemoveItems (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItems(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItems (items As IEnumerable(Of ProjectItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItems(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.RemoveItems : seq&lt;Microsoft.Build.Evaluation.ProjectItem&gt; -&gt; unit" Usage="project.RemoveItems items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="83d4f-555">제거할 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-555">The items to be removed.</span></span></param>
        <summary><span data-ttu-id="83d4f-556">지정된 항목이 가져온 프로젝트에서 생성된 것이 아닌 경우 지정된 항목을 프로젝트에서 모두 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-556">Removes all the given items from the project, unless they originate from an imported project.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-557">항목이 가져온된 프로젝트에서 발생 하는 경우 건너뜁니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-557">If an item originates from an imported project, it is simply skipped.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (property As ProjectProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : Microsoft.Build.Evaluation.ProjectProperty -&gt; bool" Usage="project.RemoveProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="83d4f-558">제거할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-558">The property to remove.</span></span></param>
        <summary><span data-ttu-id="83d4f-559">프로젝트에서 속성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-559">Removes an property from the project.</span></span> <span data-ttu-id="83d4f-560">제거할 속성이 프로젝트에 있어야 하며 가져온 파일에서 생성된 것이 아니어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-560">The property to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="83d4f-561">해당 속성이 이 확인된 프로젝트에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-561"><see langword="true" /> if the property is present in this evaluated project; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-562">속성을 포함 하는 속성 그룹을 빈 되 면 에서도 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-562">If the property group containing the property becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="83d4f-563">프로젝트 업데이트 되지만 더 이상 평가 다시 확인할 때까지 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-563">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="83d4f-564">예를 들어, "p" 제거 된 경우 "q"가 평가 되는 "$(p)"에서 다시 확인할 때까지 수정 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-564">For example, if "p" is removed, "q" which is evaluated from "$(p)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83d4f-565">프로젝트가 수정된 경우 기본 문자 인코딩을 사용하여 프로젝트를 파일 시스템에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-565">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; unit" Usage="project.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83d4f-566">프로젝트가 수정된 경우 기본 문자 인코딩을 사용하여 프로젝트를 파일 시스템에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-566">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="project.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="83d4f-567">프로젝트를 저장할 대상 텍스트 기록기입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-567">The text writer to save the project to.</span></span></param>
        <summary><span data-ttu-id="83d4f-568">프로젝트의 수정 여부에 상관없이 제공된 텍스트 기록기에 프로젝트를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-568">Saves the project to the provided text writer, whether or not the project has been modified.</span></span> <span data-ttu-id="83d4f-569">텍스트 기록기의 문자 인코딩을 사용하며 프로젝트를 수정되지 않은 상태로 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-569">Uses the character encoding of the text writer and marks the project as unmodified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="project.Save path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="83d4f-570">프로젝트 소스 코드에 대한 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-570">The path to the project source code.</span></span></param>
        <summary><span data-ttu-id="83d4f-571">프로젝트가 수정되거나 프로젝트 소스 코드에 대한 경로가 변경된 경우 기본 문자 인코딩을 사용하여 프로젝트를 파일 시스템에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-571">Saves the project to the file system, if modified or if the path to the project source code changes, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Text.Encoding -&gt; unit" Usage="project.Save encoding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="encoding"><span data-ttu-id="83d4f-572">프로젝트를 저장하는 데 사용되는 문자 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-572">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="83d4f-573">프로젝트가 수정된 경우 지정된 문자 인코딩을 사용하여 프로젝트를 파일 시스템에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-573">Saves the project to the file system, if modified, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : string * System.Text.Encoding -&gt; unit" Usage="project.Save (path, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="83d4f-574">프로젝트 소스 코드에 대한 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-574">The path to the project source code.</span></span></param>
        <param name="encoding"><span data-ttu-id="83d4f-575">프로젝트를 저장하는 데 사용되는 문자 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-575">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="83d4f-576">프로젝트가 수정되거나 프로젝트 소스 코드에 대한 경로가 변경된 경우 지정된 문자 인코딩을 사용하여 프로젝트를 파일 시스템에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-576">Saves the project to the file system, if modified or if the path to the project source code changes, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLogicalProject">
      <MemberSignature Language="C#" Value="public void SaveLogicalProject (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveLogicalProject(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveLogicalProject (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveLogicalProject(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.SaveLogicalProject : System.IO.TextWriter -&gt; unit" Usage="project.SaveLogicalProject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="83d4f-577">프로젝트 파일을 저장하는 작성기입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-577">The writer that saves the project file.</span></span></param>
        <summary><span data-ttu-id="83d4f-578">모든 가져온 파일을 단일 파일로 만들어진 것처럼 포함하는 "논리" 또는 "전처리된" 프로젝트 파일을 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-578">Saves a "logical" or "preprocessed" project file, that includes all the imported files as if they formed a single file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGlobalProperty">
      <MemberSignature Language="C#" Value="public bool SetGlobalProperty (string name, string escapedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetGlobalProperty(string name, string escapedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetGlobalProperty (name As String, escapedValue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetGlobalProperty(System::String ^ name, System::String ^ escapedValue);" />
      <MemberSignature Language="F#" Value="member this.SetGlobalProperty : string * string -&gt; bool" Usage="project.SetGlobalProperty (name, escapedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="escapedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="83d4f-579">설정할 전역 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-579">The name of the global property to set.</span></span></param>
        <param name="escapedValue"><span data-ttu-id="83d4f-580">전역 속성의 새 값입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-580">The new value of the global property.</span></span></param>
        <summary><span data-ttu-id="83d4f-581">프로젝트가 확인된 후 전역 속성을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-581">Sets a global property after the project has been evaluated.</span></span> <span data-ttu-id="83d4f-582">값이 변경되면 프로젝트가 재확인이 필요한 상태로 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-582">If the value changes, the project is marked to require reevaluation.</span></span></summary>
        <returns><span data-ttu-id="83d4f-583">값이 변경되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-583"><see langword="true" /> if the value changes; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty SetProperty (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty SetProperty(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, unevaluatedValue As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ SetProperty(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.SetProperty (name, unevaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="83d4f-584">설정할 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-584">The name of the property to set.</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="83d4f-585">속성의 확인되지 않은 새 값입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-585">The new unevaluated value of the property.</span></span></param>
        <summary><span data-ttu-id="83d4f-586">지정된 이름과 값을 사용하여 속성을 설정하거나 프로젝트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-586">Sets or adds a property with the given name and value to the project.</span></span> <span data-ttu-id="83d4f-587">같은 이름의 속성이 있는 경우 해당 속성이 가져온 파일에서 생성된 것이 아니면 해당 속성의 값을 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-587">Overwrites the value of a property with the same name if it did not originate in an imported file.</span></span></summary>
        <returns><span data-ttu-id="83d4f-588">속성입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-588">The property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-589">지정 된 이름의 속성이 없는 경우에 가져온된 파일에서 발생 한 경우가 아니면 마지막으로 기존 속성을 자체 또는 해당 속성 그룹에 조건이 지정 된 이름을 사용 하 여 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-589">If there is no property with the given name, updates the last existing property with the given name that has no condition on itself or its property group, unless it originated in an imported file.</span></span>  
  
 <span data-ttu-id="83d4f-590">이 고, 그렇지 후 마지막으로 기존 속성 그룹, 프로젝트의 시작 부분에 필요한 경우 속성 그룹을 만들 조건 없이 첫 번째 속성 그룹의 새 속성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-590">Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.</span></span>  
  
 <span data-ttu-id="83d4f-591">평가 사용 하면 최상의 노력을 기준으로 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-591">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="83d4f-592">평가 위한 새 속성을 다음 프로젝트 소스에 정의 된 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-592">Properties that are defined in the project source following the new property may be used for evaluation.</span></span> <span data-ttu-id="83d4f-593">이 속성에만 계산 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-593">Only this property is evaluated.</span></span> <span data-ttu-id="83d4f-594">에 종속 된 다른 속성을 받지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-594">Other properties that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipEvaluation">
      <MemberSignature Language="C#" Value="public bool SkipEvaluation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipEvaluation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipEvaluation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipEvaluation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipEvaluation : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-595">ReevaluateIfNecessary가 일시적으로 해제되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-595">Gets or sets a value that indicates whether ReevaluateIfNecessary is temporarily disabled.</span></span> <span data-ttu-id="83d4f-596">이는 호스트가 프로젝트에 많은 횟수의 쓰기와 읽기를 수행할 것을 예상하여 성능을 높이기 위해 일시적으로 정확성을 무시하려는 경우 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-596">This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.</span></span></summary>
        <value><span data-ttu-id="83d4f-597">ReevaluateIfNecessary가 일시적으로 해제 되어 있는지 여부를 결정 하는 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-597">A flag that determines whether ReevaluateIfNecessary is temporarily disabled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubToolsetVersion">
      <MemberSignature Language="C#" Value="public string SubToolsetVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubToolsetVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubToolsetVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SubToolsetVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubToolsetVersion : string" Usage="Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-598">있을 경우 SubToolsetVersion 특성 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-598">Gets the value of the SubToolsetVersion attribute, if any.</span></span> <span data-ttu-id="83d4f-599">이 값은 이 프로젝트의 도구 집합 속성을 결정하기 위해 ToolsVersion 특성 값과 결합되었습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-599">This value was combined with the value of the ToolsVersion attribute to determine the toolset properties for this project.</span></span></summary>
        <value><span data-ttu-id="83d4f-600">SubToolsetVersion 특성 값 또는 특성이 없으면 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-600">The SubToolsetVersion attribute value, or an empty string if the attribute is not present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Evaluation.Project.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-601">이 프로젝트의 모든 대상에 대한 사전을 대상 이름을 키로 사용하여 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-601">Gets a dictionary of all targets in this project, keyed by target name.</span></span></summary>
        <value><span data-ttu-id="83d4f-602">대상 이름을 키로 사용이 프로젝트의 모든 대상의 읽기 전용 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-602">A read-only dictionary of all targets in this project, keyed by target name.</span></span> <span data-ttu-id="83d4f-603">재정의된 대상은 이 컬렉션에 포함되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-603">Overridden targets are not included in this collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-604">이 프로젝트 확인에 사용되는 도구 버전(있을 경우)을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-604">Gets the tools version that this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="83d4f-605">있는 경우이 프로젝트를 사용 하 여 평가 되는 도구 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-605">The tools version that this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-606">생성자에 의해 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-606">Set by the constructor.</span></span> <span data-ttu-id="83d4f-607">이것이 반드시 프로젝트 태그의 도구 버전과 동일입니다. 이 지정 된 것 외부에서, 예를 들어 명령줄에서 /tv 스위치를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-607">This is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch on the command line.</span></span> <span data-ttu-id="83d4f-608">프로젝트 태그의 실제 도구 버전에서 가져올 수 있습니다 <xref:Microsoft.Build.Evaluation.Project.Xml%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-608">The actual tools version on the Project tag can be obtained from <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</span></span> <span data-ttu-id="83d4f-609">프로젝트를 만든 후에 도구 버전을 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-609">The tools version cannot be changed once the project has been created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectRootElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectRootElement ^ Xml { Microsoft::Build::Construction::ProjectRootElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Evaluation.Project.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83d4f-610">이 프로젝트와 연결된 루트 프로젝트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-610">Gets the root project associated with this project.</span></span> <span data-ttu-id="83d4f-611"><see langword="null" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-611">Can never be <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="83d4f-612">수 없습니다이 프로젝트와 연결 된 루트 프로젝트 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-612">The root project associated with this project, which can never be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d4f-613">이 속성을 설정할 방법이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-613">There is no way to set this property.</span></span> <span data-ttu-id="83d4f-614">새 프로젝트 루트에 있는 경우 새 프로젝트를 평가 합니다.</span><span class="sxs-lookup"><span data-stu-id="83d4f-614">If you have a new project root, evaluate it into a new project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>