<Type Name="X509CertificateValidator" FullName="System.IdentityModel.Selectors.X509CertificateValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b9c396b799b9ad3688421cc543f2234b8c70dd0b" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56772261" /></Metadata><TypeSignature Language="C#" Value="public abstract class X509CertificateValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract X509CertificateValidator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.X509CertificateValidator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class X509CertificateValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509CertificateValidator abstract" />
  <TypeSignature Language="F#" Value="type X509CertificateValidator = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary><span data-ttu-id="5447a-101">X.509 인증서의 유효성을 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-101">Validates an X.509 certificate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5447a-102">X.509 인증서의 유효성을 확인하는 방법을 지정하려면 <xref:System.IdentityModel.Selectors.X509CertificateValidator> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-102">Use the <xref:System.IdentityModel.Selectors.X509CertificateValidator> class to specify how an X.509 certificate is deemed valid.</span></span> <span data-ttu-id="5447a-103"><xref:System.IdentityModel.Selectors.X509CertificateValidator>에서 클래스를 파생시키고 <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%2A> 메서드를 재정의하여 이 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-103">This can be done using by deriving a class from <xref:System.IdentityModel.Selectors.X509CertificateValidator> and overriding the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 [!code-csharp[c_X509CertificateValidator#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_x509certificatevalidator/cs/source.cs#1)]
 [!code-vb[c_X509CertificateValidator#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_x509certificatevalidator/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected X509CertificateValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509CertificateValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; X509CertificateValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5447a-104"><see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5447a-105">기본적으로 이 생성자는 속성을 초기화하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-105">By default, this constructor doesn't initialize any properties.</span></span>  
  
   
  
## Examples  
 [!code-csharp[c_X509CertificateValidator#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_x509certificatevalidator/cs/source.cs#3)]
 [!code-vb[c_X509CertificateValidator#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_x509certificatevalidator/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChainTrust">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Selectors.X509CertificateValidator ChainTrust { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IdentityModel.Selectors.X509CertificateValidator ChainTrust" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ChainTrust As X509CertificateValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IdentityModel::Selectors::X509CertificateValidator ^ ChainTrust { System::IdentityModel::Selectors::X509CertificateValidator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChainTrust : System.IdentityModel.Selectors.X509CertificateValidator" Usage="System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.X509CertificateValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5447a-106">신뢰 체인을 사용하여 X.509 인증서의 유효성을 검사하는 유효성 검사기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-106">Gets a validator that validates the X.509 certificate using a trust chain.</span></span></summary>
        <value><span data-ttu-id="5447a-107">신뢰 체인을 사용하여 X.509 인증서의 유효성을 검사하는 <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-107">A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that validates the X.509 certificate using a trust chain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5447a-108">이 유효성 검사기는 X.509 인증서가 유효하고 인증서 체인을 사용하여 신뢰할 수 있는 발급자가 발급한 것인지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-108">This validator verifies that the X.509 certificate is valid and issued by a trusted issuer using a certificate chain.</span></span>  
  
 <span data-ttu-id="5447a-109">이 정적 속성의 값은 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> 클래스의 생성자 중 하나에 대한 매개 변수로 제공될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-109">The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChainTrustValidator">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Selectors.X509CertificateValidator CreateChainTrustValidator (bool useMachineContext, System.Security.Cryptography.X509Certificates.X509ChainPolicy chainPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Selectors.X509CertificateValidator CreateChainTrustValidator(bool useMachineContext, class System.Security.Cryptography.X509Certificates.X509ChainPolicy chainPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateChainTrustValidator (useMachineContext As Boolean, chainPolicy As X509ChainPolicy) As X509CertificateValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Selectors::X509CertificateValidator ^ CreateChainTrustValidator(bool useMachineContext, System::Security::Cryptography::X509Certificates::X509ChainPolicy ^ chainPolicy);" />
      <MemberSignature Language="F#" Value="static member CreateChainTrustValidator : bool * System.Security.Cryptography.X509Certificates.X509ChainPolicy -&gt; System.IdentityModel.Selectors.X509CertificateValidator" Usage="System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator (useMachineContext, chainPolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.X509CertificateValidator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useMachineContext" Type="System.Boolean" />
        <Parameter Name="chainPolicy" Type="System.Security.Cryptography.X509Certificates.X509ChainPolicy" />
      </Parameters>
      <Docs>
        <param name="useMachineContext"><span data-ttu-id="5447a-110">컴퓨터 컨텍스트를 사용하려면 <see langword="true" />이고, 현재 사용자 컨텍스트를 사용하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-110"><see langword="true" /> to use the machine context; <see langword="false" /> to use the current user context.</span></span></param>
        <param name="chainPolicy"><span data-ttu-id="5447a-111">신뢰 체인을 만들고 확인하는 데 사용되는 정책을 지정하는 <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-111">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" /> that specifies the policy used to build and verify the trust chain.</span></span></param>
        <summary><span data-ttu-id="5447a-112">신뢰 체인을 만들고 확인하는 데 사용되는 체인 정책과 컨텍스트를 지정하여 X.509 인증서를 확인하는 유효성 검사기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-112">Gets a validator that verifies the X.509 certificate by specifying the context and chain policy that is used to build and verify a trust chain.</span></span></summary>
        <returns><span data-ttu-id="5447a-113">신뢰 체인을 사용하여 X.509 인증서의 유효성을 검사하는 <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-113">A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that validates the X.509 certificate using a trust chain.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5447a-114">컨텍스트를 지정하거나 체인 정책을 설정하려면 <xref:System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator%2A> 속성 대신 <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-114">Use the <xref:System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator%2A> method instead of the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property to specify the context or to set chain policy.</span></span> <span data-ttu-id="5447a-115">체인 정책을 사용하여 체인의 유효성을 검사할 EKU(향상된 키 용도)나 해지 검사를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-115">Chain policy can be used to specify the Enhanced Key Usage (EKU) for which the chain should be validated, or specify revocation checking.</span></span>  
  
 <span data-ttu-id="5447a-116">이 정적 메서드의 반환 값은 유효성 검사기를 사용하는 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> 클래스의 생성자에 대한 매개 변수로 제공될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-116">The return value for this static method can be supplied as a parameter to the constructors for the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class that take a validator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePeerOrChainTrustValidator">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Selectors.X509CertificateValidator CreatePeerOrChainTrustValidator (bool useMachineContext, System.Security.Cryptography.X509Certificates.X509ChainPolicy chainPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Selectors.X509CertificateValidator CreatePeerOrChainTrustValidator(bool useMachineContext, class System.Security.Cryptography.X509Certificates.X509ChainPolicy chainPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePeerOrChainTrustValidator (useMachineContext As Boolean, chainPolicy As X509ChainPolicy) As X509CertificateValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Selectors::X509CertificateValidator ^ CreatePeerOrChainTrustValidator(bool useMachineContext, System::Security::Cryptography::X509Certificates::X509ChainPolicy ^ chainPolicy);" />
      <MemberSignature Language="F#" Value="static member CreatePeerOrChainTrustValidator : bool * System.Security.Cryptography.X509Certificates.X509ChainPolicy -&gt; System.IdentityModel.Selectors.X509CertificateValidator" Usage="System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator (useMachineContext, chainPolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.X509CertificateValidator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useMachineContext" Type="System.Boolean" />
        <Parameter Name="chainPolicy" Type="System.Security.Cryptography.X509Certificates.X509ChainPolicy" />
      </Parameters>
      <Docs>
        <param name="useMachineContext"><span data-ttu-id="5447a-117">컴퓨터 컨텍스트를 사용하려면 <see langword="true" />이고, 현재 사용자 컨텍스트를 사용하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-117"><see langword="true" /> to use the machine context; <see langword="false" /> to use the current user context.</span></span></param>
        <param name="chainPolicy"><span data-ttu-id="5447a-118">신뢰 체인을 만드는 데 사용되는 정책을 지정하는 <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-118">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" /> that specifies the policy used to build the trust chain.</span></span></param>
        <summary><span data-ttu-id="5447a-119">인증서가 <see langword="TrustedPeople" /> 인증서 저장소에 있는지 확인하거나 인증서 신뢰 체인을 만드는 데 사용되는 체인 정책과 컨텍스트를 지정하여 확인하는 유효성 검사기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-119">Gets a validator that verifies the certificate is in the <see langword="TrustedPeople" /> certificate store or by specifying the context and chain policy that is used to build a certificate trust chain.</span></span> <span data-ttu-id="5447a-120">두 확인 방법 중 하나를 통과하는 인증서는 신뢰됩니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-120">The certificate is trusted if it passes either verification method.</span></span></summary>
        <returns><span data-ttu-id="5447a-121">인증서가 <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> 인증서 저장소에 있는지 확인하거나 인증서 신뢰 체인을 만들어 확인하는 <see langword="TrustedPeople" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-121">A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies the certificate is in the <see langword="TrustedPeople" /> certificate store or by building a certificate trust chain.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5447a-122">컨텍스트를 지정하거나 체인 정책을 설정하려면 <xref:System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator%2A> 속성 대신 <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-122">Use the <xref:System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator%2A> method instead of the <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> property to specify the context or to set chain policy.</span></span> <span data-ttu-id="5447a-123">체인 정책을 사용하여 체인의 유효성을 검사할 EKU(향상된 키 용도)나 해지 검사를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-123">Chain policy can be used to specify the Enhanced Key Usage (EKU) for which the chain should be validated, or specify revocation checking.</span></span>  
  
 <span data-ttu-id="5447a-124">이 정적 속성의 값은 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> 클래스의 생성자 중 하나에 대한 매개 변수로 제공될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-124">The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="x509CertificateValidator.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist"><span data-ttu-id="5447a-125">사용자 지정 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-125">The custom configuration elements.</span></span></param>
        <summary><span data-ttu-id="5447a-126">파생 클래스에서 재정의되는 경우 XML에서 사용자 지정 구성을 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-126">When overridden in a derived class, loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5447a-127">기본적으로 throw 된 <xref:System.NotImplementedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-127">By default, throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="5447a-128">파생된 클래스에서 기능을 제공 하려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-128">You can override this method to provide functionality in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Selectors.X509CertificateValidator None { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IdentityModel.Selectors.X509CertificateValidator None" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.X509CertificateValidator.None" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property None As X509CertificateValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IdentityModel::Selectors::X509CertificateValidator ^ None { System::IdentityModel::Selectors::X509CertificateValidator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.None : System.IdentityModel.Selectors.X509CertificateValidator" Usage="System.IdentityModel.Selectors.X509CertificateValidator.None" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.X509CertificateValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5447a-129">X.509 인증서의 유효성을 검사하지 않는 유효성 검사기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-129">Gets a validator that performs no validation on an X.509 certificate.</span></span> <span data-ttu-id="5447a-130">따라서 X.509 인증서는 항상 유효한 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-130">As a result, an X.509 certificate is always considered to be valid.</span></span></summary>
        <value><span data-ttu-id="5447a-131">X.509 인증서의 유효성을 검사하지 않는 <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-131">A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that performs no validation on the X.509 certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5447a-132">Makecert.exe 유틸리티로 생성된 인증서와 같은 테스트 또는 개발 X.509 인증서로 작업하는 경우 이 유효성 검사기가 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-132">This validator can be useful when working with a test or development X.509 certificate, such as one generated by the Makecert.exe utility.</span></span>  
  
 <span data-ttu-id="5447a-133">이 정적 속성의 값은 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> 클래스의 생성자 중 하나에 대한 매개 변수로 제공될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-133">The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeerOrChainTrust">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Selectors.X509CertificateValidator PeerOrChainTrust { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IdentityModel.Selectors.X509CertificateValidator PeerOrChainTrust" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PeerOrChainTrust As X509CertificateValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IdentityModel::Selectors::X509CertificateValidator ^ PeerOrChainTrust { System::IdentityModel::Selectors::X509CertificateValidator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerOrChainTrust : System.IdentityModel.Selectors.X509CertificateValidator" Usage="System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.X509CertificateValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5447a-134">인증서가 <see langword="TrustedPeople" /> 인증서 저장소에 있는지 확인하거나 인증서 신뢰 체인을 만들어 확인하는 유효성 검사기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-134">Gets a validator that verifies the certificate is in the <see langword="TrustedPeople" /> certificate store or by building a certificate trust chain.</span></span> <span data-ttu-id="5447a-135">두 확인 방법 중 하나를 통과하는 인증서는 신뢰됩니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-135">The certificate is trusted if it passes either verification method.</span></span></summary>
        <value><span data-ttu-id="5447a-136">인증서가 <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> 인증서 저장소에 있는지 확인하거나 인증서 신뢰 체인을 만들어 확인하는 <see langword="TrustedPeople" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-136">A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies the certificate is in the <see langword="TrustedPeople" /> certificate store or by building a certificate trust chain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5447a-137">이 정적 속성의 값은 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> 클래스의 생성자 중 하나에 대한 매개 변수로 제공될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-137">The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeerTrust">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Selectors.X509CertificateValidator PeerTrust { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IdentityModel.Selectors.X509CertificateValidator PeerTrust" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PeerTrust As X509CertificateValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IdentityModel::Selectors::X509CertificateValidator ^ PeerTrust { System::IdentityModel::Selectors::X509CertificateValidator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerTrust : System.IdentityModel.Selectors.X509CertificateValidator" Usage="System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.X509CertificateValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5447a-138">인증서가 <see langword="TrustedPeople" /> 인증서 저장소에 있는지 확인하는 유효성 검사기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-138">Gets a validator that verifies the certificate is in the <see langword="TrustedPeople" /> certificate store</span></span></summary>
        <value><span data-ttu-id="5447a-139">인증서가 <see langword="TrustedPeople" /> 인증서 저장소에 있는지 확인하는 <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-139">A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies the certificate is in the <see langword="TrustedPeople" /> certificate store.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5447a-140">이 정적 속성의 값은 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> 클래스의 생성자 중 하나에 대한 매개 변수로 제공될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-140">The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public abstract void Validate (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509CertificateValidator.Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Validate (certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Validate(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; unit" Usage="x509CertificateValidator.Validate certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="5447a-141">유효성을 검사할 X.509 인증서를 나타내는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-141">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that represents the X.509 certificate to validate.</span></span></param>
        <summary><span data-ttu-id="5447a-142">파생 클래스에서 재정의되는 경우 X.509 인증서의 유효성을 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-142">When overridden in a derived class, validates the X.509 certificate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5447a-143">X.509 인증서의 유효성을 검사하는 방법을 지정하려면 <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%2A> 메서드를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-143">Override the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%2A> method to specify how the X.509 certificate is validated.</span></span>  
  
 <span data-ttu-id="5447a-144">`certificate` 매개 변수로 전달된 X.509 인증서가 유효성 검사를 통과하지 않으면 <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="5447a-144">When the X.509 certificate that is passed into the `certificate` parameter does not pass validation, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[c_X509CertificateValidator#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_x509certificatevalidator/cs/source.cs#2)]
 [!code-vb[c_X509CertificateValidator#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_x509certificatevalidator/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>