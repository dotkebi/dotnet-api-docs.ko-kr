<Type Name="PropertyPath" FullName="System.Windows.PropertyPath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0ea78cb7b03c94b3d66ae42736ef1796f433d34a" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57926789" /></Metadata><TypeSignature Language="C#" Value="public sealed class PropertyPath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyPath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PropertyPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyPath" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyPath sealed" />
  <TypeSignature Language="F#" Value="type PropertyPath = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PropertyPathConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2dc71-101">다른 속성 아래 또는 소유 형식 아래의 경로로 속성을 설명하기 위한 데이터 구조체를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-101">Implements a data structure for describing a property as a path below another property, or below an owning type.</span></span> <span data-ttu-id="2dc71-102">속성 경로는 개체에 대한 데이터 바인딩은 물론 애니메이션용 Storyboard와 Timeline에도 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-102">Property paths are used in data binding to objects, and in storyboards and timelines for animations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc71-103">이 클래스는 문자열을 포함 <xref:System.Windows.PropertyPath.Path%2A>, 및 종속성 속성의 목록을 합니다 <xref:System.Windows.PropertyPath.PathParameters%2A> 문자열로 <xref:System.Windows.PropertyPath.Path%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-103">This class contains a string <xref:System.Windows.PropertyPath.Path%2A>, and list of dependency properties that are the <xref:System.Windows.PropertyPath.PathParameters%2A> into the string <xref:System.Windows.PropertyPath.Path%2A>.</span></span>  
  
 <span data-ttu-id="2dc71-104"><xref:System.Windows.PropertyPath> 동작의 두 가지 모드를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-104"><xref:System.Windows.PropertyPath> supports two modes of behavior:</span></span>  
  
 <span data-ttu-id="2dc71-105">**소스 모드** 일부 다른 작업에 대 한 원본으로 사용 되는 속성에 대 한 경로 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-105">**Source mode** describes a path to a property that is used as a source for some other operation.</span></span> <span data-ttu-id="2dc71-106">이 모드에서 사용 되는 <xref:System.Windows.Data.Binding> 데이터 바인딩을 지 원하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-106">This mode is used by the <xref:System.Windows.Data.Binding> class to support data binding.</span></span>  
  
 <span data-ttu-id="2dc71-107">**대상 모드** 는 대상 속성으로 설정 하는 속성에 대 한 경로 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-107">**Target mode** describes a path to a property that will be set as a target property.</span></span> <span data-ttu-id="2dc71-108">이 모드는 스토리 보드 및 타임 라인 setter 지원 하기 위해 애니메이션에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-108">This mode is used by animation in support of storyboard and timeline setters.</span></span>  
  
 <span data-ttu-id="2dc71-109">예를 들어 `Background.Opacity` 2 단계 인증 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-109">For instance, `Background.Opacity` is a two-step path.</span></span> <span data-ttu-id="2dc71-110">이 경로 의미: 먼저를 찾습니다는 `Background` 개체의 속성 get 값 개체는를 `Background` 속성으로 설정 되 고 다음 값을 가져옵니다는 `Opacity` 해당 개체의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-110">This path implies: first, find the `Background` property of an object, get the value object that the `Background` property is set to, and then get the value of the `Opacity` property on that object.</span></span>  
  
<a name="xamlAttributeUsage_PropertyPath"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="2dc71-111">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="2dc71-111">XAML Attribute Usage</span></span>  
  
```  
<object property="propertyPath" .../>  
```  
  
<a name="xamlValues_PropertyPath"></a>   
## <a name="xaml-values"></a><span data-ttu-id="2dc71-112">XAML 값</span><span class="sxs-lookup"><span data-stu-id="2dc71-112">XAML Values</span></span>  
 <span data-ttu-id="2dc71-113">*propertyPath*</span><span class="sxs-lookup"><span data-stu-id="2dc71-113">*propertyPath*</span></span>  
 <span data-ttu-id="2dc71-114">단순 또는 복합 속성 경로로 평가 되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-114">A string that is evaluated to be either a simple or complex property path.</span></span> <span data-ttu-id="2dc71-115">설정에 대 한 구문 한 <xref:System.Windows.PropertyPath> 에 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 는 유용 하지만 복잡 하 고 별도 항목에 설명 된 [PropertyPath XAML 구문](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-115">The syntax for setting a <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is versatile but complex, and is described in the separate topic [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/056aee79-7cdd-434f-8174-dfc856cad343"><span data-ttu-id="2dc71-116">x:Static 태그 확장명</span><span class="sxs-lookup"><span data-stu-id="2dc71-116">x:Static Markup Extension</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2dc71-117"><see cref="T:System.Windows.PropertyPath" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-117">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : obj -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath parameter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="2dc71-118">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 속성 또는 단일 종속성 속성에 대한 경로를 설명하는 속성 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-118">A property path that either describes a path to a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property, or a single dependency property.</span></span></param>
        <summary><span data-ttu-id="2dc71-119"><see cref="T:System.Windows.PropertyPath" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-119">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc71-120">이 생성자에 바인딩 또는 스토리 보드 대상에 대 한 대상 모드 단일 단계 속성 경로 대 한 소스 모드 속성 경로에 사용 되는 여부에 따라 두 개의 완전히 다른 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-120">This constructor has two completely different usages depending on whether it is being used for a source-mode property path for a binding, or for a target-mode single-step property path for a storyboard target.</span></span>  
  
 <span data-ttu-id="2dc71-121">이 사용 하는 경우 <xref:System.Windows.PropertyPath> 바인딩 소스 모드로 `parameter` 은 속성 이름을 나타내는 문자열 또는 속성에 "단계별" 경로 설명 하는 문자열 수를 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 원본으로 사용 되는 개체의 개체 모델 에 대 한 바인딩입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-121">If using this <xref:System.Windows.PropertyPath> in source mode for a binding, `parameter` is a string representing a property name, or can be a string that describes a "step-through" path to the property in the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object model of the object that is being used as the source for a binding.</span></span> <span data-ttu-id="2dc71-122">바인딩 속성 경로 대해 "단계"를 식별 하는 문자는 점 (.).</span><span class="sxs-lookup"><span data-stu-id="2dc71-122">For a binding property path, the character that identifies a "step" is a dot (.).</span></span> <span data-ttu-id="2dc71-123">인덱서 참조 (여러 인덱서 및 형식 구분 포함)도 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-123">Indexer references (including multiple indexers, and type differentiation) are also supported.</span></span> <span data-ttu-id="2dc71-124">구체적으로 사용 하는 문자열의 구문에 대 한 자세한 내용은 합니다 <xref:System.Windows.Data.Binding> 개체를 참조 하십시오 <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-124">For more details on the syntax of the string as specifically used by the <xref:System.Windows.Data.Binding> object, see <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2dc71-125">바인딩 소스는 종속성 속성이 아니어도 사용 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-125">A property used as a binding source need not be a dependency property.</span></span> <span data-ttu-id="2dc71-126">바인딩은 양방향으로 업데이트 하는 경우 참조 된 속성이 읽기 / 쓰기 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-126">If the binding updates two-way, the property referenced must be read-write.</span></span> <span data-ttu-id="2dc71-127">종속성 속성 바인딩 대상에 있는 참고도 합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-127">Also note that the binding target does have to be a dependency property.</span></span> <span data-ttu-id="2dc71-128">자세한 내용은 참조 하세요 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-128">For details, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="2dc71-129">이 사용 하는 경우 <xref:System.Windows.PropertyPath> 스토리 보드 대상의 경우 단일 단계 경로 대 한 대상 모드로 `parameter` 형식으로 일반적으로 제공 됩니다 <xref:System.Windows.DependencyProperty>합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-129">If using this <xref:System.Windows.PropertyPath> in target mode for a single-step path for a storyboard target, `parameter` is generally provided as type <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="2dc71-130">문자열을 지정할 수도 있습니다는 <xref:System.Windows.DependencyProperty.Name%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-130">You can also specify a string that is the <xref:System.Windows.DependencyProperty.Name%2A>.</span></span> <span data-ttu-id="2dc71-131">이러한 위치 string으로 내부적으로 저장 되기 때문에 동일한 결과를 평가 합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-131">Either of these evaluate to the same result, because it is stored internally as a string.</span></span> <span data-ttu-id="2dc71-132">제공 된 <xref:System.Windows.DependencyProperty> 를 통해 문자열로 변환할 <xref:System.Windows.Markup.DependencyPropertyConverter>합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-132">A provided <xref:System.Windows.DependencyProperty> is converted to a string through <xref:System.Windows.Markup.DependencyPropertyConverter>.</span></span> <span data-ttu-id="2dc71-133">합니다 <xref:System.Windows.Markup.DependencyPropertyConverter> 지정할 수 있도록 정규화 된 이름 형식 종속성 속성에 대 한 지원를 *typeName*. *propertyName* 종속성 속성 이름 문자열을 정규화 합니다 <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> 코드의 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-133">The <xref:System.Windows.Markup.DependencyPropertyConverter> supports a qualified naming format for dependency properties, so you can specify a *typeName*.*propertyName* qualified dependency property name string to the <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> constructor in code.</span></span> <span data-ttu-id="2dc71-134">종속성 속성 식별자를 정규화 된 경로 복잡 한 경로 다른 개념입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-134">The qualified path to the dependency property identifier is a different concept than a complex path.</span></span> <span data-ttu-id="2dc71-135">복합 경로 <xref:System.Windows.PropertyPath> 대신 사용 하 여 만들어야 합니다 <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-135">A complex-path <xref:System.Windows.PropertyPath> should instead be created with the <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.Binding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (string path, params object[] pathParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, object[] pathParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ParamArray pathParameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::String ^ path, ... cli::array &lt;System::Object ^&gt; ^ pathParameters);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : string * obj[] -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath (path, pathParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathParameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="2dc71-136"><see cref="P:System.Windows.PropertyPath.Path" />를 토큰화된 형식으로 지정하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-136">A string that specifies the <see cref="P:System.Windows.PropertyPath.Path" />, in a tokenized format.</span></span></param>
        <param name="pathParameters"><span data-ttu-id="2dc71-137"><see cref="P:System.Windows.PropertyPath.PathParameters" />를 설정하는 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-137">An array of objects that sets the <see cref="P:System.Windows.PropertyPath.PathParameters" />.</span></span></param>
        <summary><span data-ttu-id="2dc71-138">제공된 경로 지정 토큰 문자열 및 매개 변수를 사용하여 <see cref="T:System.Windows.PropertyPath" /> 클래스의 새 인스턴스를 초기화합니다. </span><span class="sxs-lookup"><span data-stu-id="2dc71-138">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class, with the provided pathing token string and parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc71-139">이 서명은 대상 모드에만 사용 되며 일반적으로 <xref:System.Windows.PropertyPath> 복잡 한 경로 사용 하 여 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-139">This signature is generally only used for target-mode <xref:System.Windows.PropertyPath> usages with complex paths.</span></span>  
  
 <span data-ttu-id="2dc71-140">이 생성자 `params` 에 대 한는 `pathParameters` 생성자 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-140">This constructor supports `params` for the `pathParameters` constructor argument.</span></span> <span data-ttu-id="2dc71-141">따라서 내용을 지정할 수 있습니다 `pathParameters` 일련의 쉼표로 구분 된 생성자 인수를 채우는 배열 차원으로 채우는 다음 필요로 하는 것이 아니라 배열의 `pathParameters` 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-141">Therefore you can specify the contents of `pathParameters` as a series of comma-separated constructor arguments that populate the array, rather than needing to dimension an array and then populate it with the `pathParameters` items.</span></span> <span data-ttu-id="2dc71-142">지정할 각 항목 다음 유형 중 하나 여야 합니다. <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-142">Each item you specify must be one of the following types: <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 <span data-ttu-id="2dc71-143">매개 변수를 요구 사항에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.PropertyPath.Path%2A> 고 <xref:System.Windows.PropertyPath.PathParameters%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-143">For more information on the requirements of the parameters, see <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Windows.PropertyPath.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dc71-144">경로를 설명하는 문자열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-144">Gets or sets the string that describes the path.</span></span></summary>
        <value><span data-ttu-id="2dc71-145">경로를 설명하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-145">The string that describes the path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc71-146">이 속성에 포함 된 문자열의 여부에 따라 세 개의 완전히 다른 의미를 <xref:System.Windows.PropertyPath> 스토리 보드 대상의 경우 대상 모드 단일 단계 속성 경로 대 한 바인딩 또는 복잡 한 소스 모드 속성 경로에 사용 되 고 스토리 보드 대상에 대 한 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-146">The string contained in this property has three completely different meanings depending on whether a <xref:System.Windows.PropertyPath> is being used for a source-mode property path for a binding, for a target-mode single-step property path for a storyboard target, or for a complex path for a storyboard target.</span></span>  
  
 <span data-ttu-id="2dc71-147">이 사용 하는 경우 <xref:System.Windows.PropertyPath> 바인딩 소스 모드로 <xref:System.Windows.PropertyPath.Path%2A> 은 속성 이름을 나타내는 문자열 또는 속성에 "단계별" 경로 설명 하는 문자열 수를 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 원본으로 사용 되는 개체의 개체 모델 에 대 한 바인딩입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-147">If using this <xref:System.Windows.PropertyPath> in source mode for a binding, <xref:System.Windows.PropertyPath.Path%2A> is a string representing a property name, or can be a string that describes a "step-through" path to the property in the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object model of the object that is being used as the source for a binding.</span></span> <span data-ttu-id="2dc71-148">바인딩 속성 경로 대해 "단계"를 식별 하는 문자는 점 (.).</span><span class="sxs-lookup"><span data-stu-id="2dc71-148">For a binding property path, the character that identifies a "step" is a dot (.).</span></span> <span data-ttu-id="2dc71-149">인덱서 참조 (여러 인덱서 및 형식 구분 포함)도 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-149">Indexer references (including multiple indexers, and type differentiation) are also supported.</span></span> <span data-ttu-id="2dc71-150">구체적으로 사용 하는 문자열의 구문에 대 한 자세한 내용은 합니다 <xref:System.Windows.Data.Binding> 개체를 참조 하십시오 <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-150">For more details on the syntax of the string as specifically used by the <xref:System.Windows.Data.Binding> object, see <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2dc71-151">바인딩 소스는 종속성 속성이 아니어도 사용 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-151">A property used as a binding source need not be a dependency property.</span></span> <span data-ttu-id="2dc71-152">바인딩은 양방향으로 업데이트 하는 경우 속성 소스 읽기 / 쓰기 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-152">If the binding updates two-way, the property source must be read-write.</span></span> <span data-ttu-id="2dc71-153">종속성 속성 바인딩 대상에 있는 참고도 합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-153">Also note that the binding target does have to be a dependency property.</span></span> <span data-ttu-id="2dc71-154">자세한 내용은 참조 하세요 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-154">For details, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="2dc71-155">이 사용 하는 경우 <xref:System.Windows.PropertyPath> 스토리 보드 대상의 경우 단일 단계 경로 대 한 대상 모드로 <xref:System.Windows.PropertyPath> 는 문자열을 *typeName*. *propertyName* 종속성 속성 이름 문자열을 정규화 합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-155">If using this <xref:System.Windows.PropertyPath> in target mode for a single-step path for a storyboard target, <xref:System.Windows.PropertyPath> is a string that is a *typeName*.*propertyName* qualified dependency property name string.</span></span>  
  
 <span data-ttu-id="2dc71-156">이 사용 하는 경우 <xref:System.Windows.PropertyPath> 스토리 보드 대상의 경우 복잡 한 경로 대 한 <xref:System.Windows.PropertyPath.Path%2A> 은에 지정 된 다양 한 개체의 관계를 설명 하는 토큰화 된 문자열 형식은 <xref:System.Windows.PropertyPath.PathParameters%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-156">If using this <xref:System.Windows.PropertyPath> for a complex path for a storyboard target, <xref:System.Windows.PropertyPath.Path%2A> is a tokenized string format that describes the relationships of the various objects given in the <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span>  
  
-   <span data-ttu-id="2dc71-157">배열의 각 항목에 괄호로 묶인 항목에 대 한 배열 인덱스에서이 형식으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-157">Each item in the array is specified in this format by the array index for the item enclosed in parentheses.</span></span> <span data-ttu-id="2dc71-158">예를 들어, 배열의 첫 번째 항목을 지정 하는 문자열 토큰은 `(0)`합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-158">For example, to specify the first item in the array, the string token is `(0)`.</span></span>  
  
-   <span data-ttu-id="2dc71-159">항목 (경로에 "단계") 간의 관계는 점 (.)으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-159">Relationships between items ("steps" in the path) are specified by a dot (.).</span></span> <span data-ttu-id="2dc71-160">앞으로 점 속성이 첫 번째 단계 경로에서 이후의 속성은의 두 번째 단계 (단계 세 개 이상 지정할 수 있습니다).</span><span class="sxs-lookup"><span data-stu-id="2dc71-160">The property forward of the dot is the first step in the path, the property after is the second step, and so on (you can specify steps beyond two).</span></span> <span data-ttu-id="2dc71-161">체인의 마지막 단계는 항상 애니메이션 효과 줄 속성을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-161">The last step in the chain always represents the property being animated.</span></span>  
  
-   <span data-ttu-id="2dc71-162">대괄호 내의 인덱스를 사용 하 여는 인덱서 구문을 사용 하 여 컬렉션 속성 내에서 항목을 액세스 하는 ([및]).</span><span class="sxs-lookup"><span data-stu-id="2dc71-162">Items within collection properties are accessed with an indexer syntax, with the index within square brackets ([ and ]).</span></span> <span data-ttu-id="2dc71-163">인덱서는 속성을 나타내는 토큰에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-163">The indexer is additive to the token representing the property.</span></span> <span data-ttu-id="2dc71-164">예를 들어, 다음은 해당 속성의 컬렉션 내에서 두 번째 항목을 지정 하는 첫 번째 단계에서 토큰 조합 사용 하 여 2 단계 경로: `(0)[1].(1)` 합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-164">For example, the following is a two-step path, with the token combination in the first step specifying the second item from within the collection of that property: `(0)[1].(1)` .</span></span> <span data-ttu-id="2dc71-165">인덱서; 체인에서 마지막으로 속성을 사용할 수 없습니다. 실제 컬렉션에 위치에 애니메이션을 적용할 수 없습니다, 그리고 해당 개체의 속성에 애니메이션을 적용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-165">You cannot use an indexer on the last property in the chain; you cannot animate the actual collection position, you must animate a property on that object.</span></span>  
  
 <span data-ttu-id="2dc71-166">에 대 한 경로 문자열을 <xref:System.Windows.PropertyPath> 생성자를 통해 일반적으로 설정 됩니다:를 <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> 바인딩 또는 단일 단계 스토리 보드 대상에 대 한 서명을 <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> 다단계 스토리 보드 대상에 대 한 서명.</span><span class="sxs-lookup"><span data-stu-id="2dc71-166">The path string for a <xref:System.Windows.PropertyPath> is typically established through the constructors: the <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> signature for bindings or single-step storyboard targets, the <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> signature for multi-step storyboard targets.</span></span>  
  
 <span data-ttu-id="2dc71-167">**XAML:** 사용 하는 경우는 <xref:System.Windows.PropertyPath> 에서 속성 참조를 설명 하 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]처럼 특성 값을 지정 하는 문자열 형식 변환기를 통해 먼저 처리 됩니다 (<xref:System.Windows.PropertyPathConverter>).</span><span class="sxs-lookup"><span data-stu-id="2dc71-167">**XAML:** When you use a <xref:System.Windows.PropertyPath> to describe a property reference in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], as an attribute value, the string that you specify is first handled by a type converter (<xref:System.Windows.PropertyPathConverter>).</span></span> <span data-ttu-id="2dc71-168">이 형식 변환기에서 다음 문자열을 처리 하 고 기반 구문 중 하나를 호출 하는 <xref:System.Windows.PropertyPath> 생성자 시그니처입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-168">This type converter then processes the string and based on its syntax will call one of the <xref:System.Windows.PropertyPath> constructor signatures.</span></span> <span data-ttu-id="2dc71-169">특성 값을 처리 하는 형식 변환기를 통해이 간접 참조는 일반적으로 사용 하는 방법을 <xref:System.Windows.PropertyPath> 에 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]를 선언 하는 대신를 <xref:System.Windows.PropertyPath> 요소와 같은 특성에 특정 값을 다음 적용 개체 <xref:System.Windows.PropertyPath.Path%2A> 및 <xref:System.Windows.PropertyPath.PathParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc71-169">This indirection through the type converter handling an attribute value is generally how you use <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], rather than declaring a <xref:System.Windows.PropertyPath> object element and then applying specific values to attributes such as <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span> <span data-ttu-id="2dc71-170">자세한 내용은 [PropertyPath XAML 구문](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-170">For more information, see [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
<a name="xamlTextUsage_Path"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="2dc71-171">XAML 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="2dc71-171">XAML Text Usage</span></span>  
 <span data-ttu-id="2dc71-172">멤버는 <xref:System.Windows.PropertyPath> 형식을 직접에서 일반적으로 설정 되지 않은 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 구문입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-172">Members of the <xref:System.Windows.PropertyPath> type are not typically set in a direct [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span> <span data-ttu-id="2dc71-173">설명 부분을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2dc71-173">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathParameters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;object&gt; PathParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;object&gt; PathParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.PathParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathParameters As Collection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ PathParameters { System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathParameters : System.Collections.ObjectModel.Collection&lt;obj&gt;" Usage="System.Windows.PropertyPath.PathParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dc71-174">경로가 인덱싱된 매개 변수를 참조할 때 사용할 매개 변수 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-174">Gets the list of parameters to use when the path refers to indexed parameters.</span></span></summary>
        <value><span data-ttu-id="2dc71-175">매개 변수 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-175">The parameter list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc71-176">에 대 한 속성을 <xref:System.Windows.PropertyPath> 생성자를 통해 일반적으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-176">The properties for a <xref:System.Windows.PropertyPath> are typically established through the constructors.</span></span> <span data-ttu-id="2dc71-177">설정에 대 한 <xref:System.Windows.PropertyPath.PathParameters%2A>의 <xref:System.Windows.PropertyPath.%23ctor%2A> 생성자 사용 하는 것이 편리한 때문에 `pathParameters` 로 지정 된 생성자 인수 `params`, 즉 만들거나 생성에 대 한 배열을 차원 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-177">For setting <xref:System.Windows.PropertyPath.PathParameters%2A>, the <xref:System.Windows.PropertyPath.%23ctor%2A> constructor is particularly convenient because the `pathParameters` constructor argument is designated as `params`, meaning that you do not need to create or dimension an array for construction.</span></span> <span data-ttu-id="2dc71-178">배열의 각 멤버도 추가 매개 변수로 지정 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-178">You simply specify each member of the array as an additional parameter.</span></span>  
  
 <span data-ttu-id="2dc71-179">Final 속성 대상이 되는 경우는 <xref:System.Windows.Freezable> 입력 값은 복제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-179">If the final property that is the target is a <xref:System.Windows.Freezable> type, that value will be cloned.</span></span> <span data-ttu-id="2dc71-180">자세한 내용은 참조 하세요 [스토리 보드 개요](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-180">For details, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="2dc71-181">실제 평가 속성 체인의 스토리 보드 애니메이션이 메커니즘에 의해 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-181">The actual evaluation of the property chain is performed by the storyboard animation mechanisms.</span></span> <span data-ttu-id="2dc71-182">에 <xref:System.Windows.PropertyPath> 수준에서 유효성을 검사 하지 경로의 단계를 전혀 연결할 수 있는지 확인 하기 위해 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-182">At the <xref:System.Windows.PropertyPath> level, no validation is performed to make sure that the steps of the path connect at all.</span></span> <span data-ttu-id="2dc71-183">예를 들어 있는 속성 경로 생성할 수 있습니다 <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> 첫 번째 단계로, 및 <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> 의 두 번째 단계입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-183">For instance, you can construct a property path that has <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> as the first step, and <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> as the second step.</span></span> <span data-ttu-id="2dc71-184">이러한 속성 경로 오류가 실제로 적용 대상으로 하는 경우 브러시 형식 해당 채웁니다 <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> 되지 않은 <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-184">But such a property path would fail if actually applied as a target, because the Brush type that fills <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> does not have a <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2dc71-185">잘못 된 속성 경로 자동으로 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-185">Invalid property paths fail silently.</span></span> <span data-ttu-id="2dc71-186">자세한 내용은 [스토리보드 개요](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2dc71-186">For more information, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="2dc71-187">**XAML:** 사용 하는 경우는 <xref:System.Windows.PropertyPath> 에서 속성 참조를 설명 하 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]처럼 특성 값을 지정 하는 문자열 형식 변환기를 통해 먼저 처리 됩니다 (<xref:System.Windows.PropertyPathConverter>).</span><span class="sxs-lookup"><span data-stu-id="2dc71-187">**XAML:** When you use a <xref:System.Windows.PropertyPath> to describe a property reference in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], as an attribute value, the string that you specify is first handled by a type converter (<xref:System.Windows.PropertyPathConverter>).</span></span> <span data-ttu-id="2dc71-188">이 형식 변환기에서 다음 문자열을 처리 하 고 기반 구문 중 하나를 호출 하는 <xref:System.Windows.PropertyPath> 생성자 시그니처입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-188">This type converter then processes the string and based on its syntax will call one of the <xref:System.Windows.PropertyPath> constructor signatures.</span></span> <span data-ttu-id="2dc71-189">특성 값을 처리 하는 형식 변환기를 통해이 간접 참조는 일반적으로 사용 하는 방법을 <xref:System.Windows.PropertyPath> 에 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]를 선언 하는 대신를 <xref:System.Windows.PropertyPath> 요소와 같은 특성에 특정 값을 다음 적용 개체 <xref:System.Windows.PropertyPath.Path%2A> 및 <xref:System.Windows.PropertyPath.PathParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc71-189">This indirection through the type converter handling an attribute value is generally how you use <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], rather than declaring a <xref:System.Windows.PropertyPath> object element and then applying specific values to attributes such as <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span> <span data-ttu-id="2dc71-190">자세한 내용은 [PropertyPath XAML 구문](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-190">For more information, see [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
<a name="xamlTextUsage_PathParameters"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="2dc71-191">XAML 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="2dc71-191">XAML Text Usage</span></span>  
 <span data-ttu-id="2dc71-192">멤버는 <xref:System.Windows.PropertyPath> 형식을 직접에서 일반적으로 설정 되지 않은 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 구문입니다.</span><span class="sxs-lookup"><span data-stu-id="2dc71-192">Members of the <xref:System.Windows.PropertyPath> type are not typically set in a direct [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span> <span data-ttu-id="2dc71-193">설명 부분을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2dc71-193">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>