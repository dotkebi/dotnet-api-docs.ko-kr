<Type Name="TextDecorationCollection" FullName="System.Windows.TextDecorationCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6cf2822188adfc9d707d4301c9d56cbd8a55dd35" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57944092" /></Metadata><TypeSignature Language="C#" Value="public sealed class TextDecorationCollection : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection&lt;System.Windows.TextDecoration&gt;, System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt;, System.Collections.Generic.IList&lt;System.Windows.TextDecoration&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextDecorationCollection extends System.Windows.Media.Animation.Animatable implements class System.Collections.Generic.ICollection`1&lt;class System.Windows.TextDecoration&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.TextDecoration&gt;, class System.Collections.Generic.IList`1&lt;class System.Windows.TextDecoration&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TextDecorationCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextDecorationCollection&#xA;Inherits Animatable&#xA;Implements ICollection(Of TextDecoration), IEnumerable(Of TextDecoration), IList, IList(Of TextDecoration)" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextDecorationCollection sealed : System::Windows::Media::Animation::Animatable, System::Collections::Generic::ICollection&lt;System::Windows::TextDecoration ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Windows::TextDecoration ^&gt;, System::Collections::Generic::IList&lt;System::Windows::TextDecoration ^&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type TextDecorationCollection = class&#xA;    inherit Animatable&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IList&lt;TextDecoration&gt;&#xA;    interface ICollection&lt;TextDecoration&gt;&#xA;    interface seq&lt;TextDecoration&gt;" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Windows.TextDecoration&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;System.Windows.TextDecoration&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.TextDecorationCollectionConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e4872-101"><see cref="T:System.Windows.TextDecoration" /> 인스턴스의 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-101">Represents a collection of <see cref="T:System.Windows.TextDecoration" /> instances.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e4872-102"><see cref="T:System.Windows.TextDecorationCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-102">Initializes a new instance of the <see cref="T:System.Windows.TextDecorationCollection" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDecorationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextDecorationCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4872-103">비어 있는 새 <see cref="T:System.Windows.TextDecorationCollection" /> 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-103">Initializes a new <see cref="T:System.Windows.TextDecorationCollection" /> instance that is empty.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDecorationCollection (System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.TextDecoration&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of TextDecoration))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextDecorationCollection(System::Collections::Generic::IEnumerable&lt;System::Windows::TextDecoration ^&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Windows.TextDecorationCollection : seq&lt;System.Windows.TextDecoration&gt; -&gt; System.Windows.TextDecorationCollection" Usage="new System.Windows.TextDecorationCollection collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="e4872-104"><see cref="T:System.Collections.Generic.IEnumerable`1" /> 형식의 열거자입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-104">An enumerator of type <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span></span></param>
        <summary><span data-ttu-id="e4872-105">열거자를 지정하여 <see cref="T:System.Windows.TextDecorationCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-105">Initializes a new instance of the <see cref="T:System.Windows.TextDecorationCollection" /> class by specifying an enumerator.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDecorationCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextDecorationCollection(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Windows.TextDecorationCollection : int -&gt; System.Windows.TextDecorationCollection" Usage="new System.Windows.TextDecorationCollection capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="e4872-106">새 컬렉션에 처음 저장할 수 있는 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-106">The number of elements that the new collection is initially capable of storing.</span></span></param>
        <summary><span data-ttu-id="e4872-107">비어 있는 상태에서 지정한 초기 용량을 가지는 새 <see cref="T:System.Windows.TextDecorationCollection" /> 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-107">Initializes a new <see cref="T:System.Windows.TextDecorationCollection" /> instance that is empty and has the specified initial capacity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e4872-108">지정된 <see cref="T:System.Windows.TextDecoration" /> 개체를 컬렉션에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-108">Inserts the specified <see cref="T:System.Windows.TextDecoration" /> object into the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt; textDecorations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.TextDecoration&gt; textDecorations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Add(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (textDecorations As IEnumerable(Of TextDecoration))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Collections::Generic::IEnumerable&lt;System::Windows::TextDecoration ^&gt; ^ textDecorations);" />
      <MemberSignature Language="F#" Value="member this.Add : seq&lt;System.Windows.TextDecoration&gt; -&gt; unit" Usage="textDecorationCollection.Add textDecorations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textDecorations" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt;" />
      </Parameters>
      <Docs>
        <param name="textDecorations"><span data-ttu-id="e4872-109"><see cref="T:System.Collections.Generic.IEnumerable`1" /> 형식의 제네릭 <see cref="T:System.Windows.TextDecoration" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-109">A generic <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.Windows.TextDecoration" />.</span></span></param>
        <summary><span data-ttu-id="e4872-110">제네릭 <see cref="T:System.Collections.Generic.IEnumerable`1" />을 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-110">Adds a generic <see cref="T:System.Collections.Generic.IEnumerable`1" /> to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.TextDecoration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Windows.TextDecoration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Add(System.Windows.TextDecoration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (value As TextDecoration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Windows::TextDecoration ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.TextDecoration -&gt; unit&#xA;override this.Add : System.Windows.TextDecoration -&gt; unit" Usage="textDecorationCollection.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.TextDecoration" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e4872-111">삽입할 <see cref="T:System.Windows.TextDecoration" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-111">The <see cref="T:System.Windows.TextDecoration" /> object to insert.</span></span></param>
        <summary><span data-ttu-id="e4872-112">지정된 <see cref="T:System.Windows.TextDecoration" /> 개체를 컬렉션에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-112">Inserts the specified <see cref="T:System.Windows.TextDecoration" /> object into the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="textDecorationCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4872-113"><see cref="T:System.Windows.TextDecoration" />에서 <see cref="T:System.Windows.TextDecorationCollection" /> 개체를 모두 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-113">Removes all <see cref="T:System.Windows.TextDecoration" /> objects from the <see cref="T:System.Windows.TextDecorationCollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationCollection Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.TextDecorationCollection Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::TextDecorationCollection ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.TextDecorationCollection" Usage="textDecorationCollection.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4872-114">이 개체 값의 전체 복사본을 만들어 이 <see cref="T:System.Windows.TextDecorationCollection" />의 수정 가능한 복제본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-114">Creates a modifiable clone of this <see cref="T:System.Windows.TextDecorationCollection" />, making deep copies of this object's values.</span></span> <span data-ttu-id="e4872-115">종속성 속성을 복사하는 경우 이 메서드는 더 이상 확인되지 않을 수도 있는 리소스 참조와 데이터 바인딩을 복사하지만 애니메이션이나 애니메이션의 현재 값은 복사하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-115">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="e4872-116">현재 개체의 수정 가능한 복제본입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-116">A modifiable clone of the current object.</span></span> <span data-ttu-id="e4872-117">소스의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성이 <see langword="true." />인 경우에도 복제된 개체의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-117">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-118">수정 가능한 복사본을 만드는이 메서드는 사용 중지 <xref:System.Windows.Freezable> 개체 (또는 <xref:System.Windows.Freezable> 개체).</span><span class="sxs-lookup"><span data-stu-id="e4872-118">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="e4872-119">편의 위해이 메서드는 강력한 형식의 구현이 상속 된 버전을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-119">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="e4872-120">자세한 내용은 <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e4872-120">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="textDecorationCollection.CloneCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationCollection CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.TextDecorationCollection CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::TextDecorationCollection ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.TextDecorationCollection" Usage="textDecorationCollection.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4872-121"><see cref="T:System.Windows.TextDecorationCollection" /> 개체의 현재 값에 대한 전체 복사본을 만들어 이 개체의 수정 가능한 복제본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-121">Creates a modifiable clone of this <see cref="T:System.Windows.TextDecorationCollection" /> object, making deep copies of this object's current values.</span></span> <span data-ttu-id="e4872-122">리소스 참조, 데이터 바인딩 및 애니메이션은 복사되지 않지만 이러한 요소의 현재 값은 복사됩니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-122">Resource references, data bindings, and animations are not copied, but their current values are.</span></span></summary>
        <returns><span data-ttu-id="e4872-123">현재 개체의 수정 가능한 복제본입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-123">A modifiable clone of the current object.</span></span> <span data-ttu-id="e4872-124">소스의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성이 <see langword="true" />인 경우에도 복제된 개체의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-124">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-125">수정 가능한 복사본을 만드는이 메서드는 사용 중지 <xref:System.Windows.Freezable> 개체 (또는 <xref:System.Windows.Freezable> 개체).</span><span class="sxs-lookup"><span data-stu-id="e4872-125">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="e4872-126">편의 위해이 메서드는 강력한 형식의 구현이 상속 된 버전을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-126">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="e4872-127">자세한 내용은 <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="e4872-127">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="textDecorationCollection.CloneCurrentValueCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.TextDecoration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Windows.TextDecoration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Contains(System.Windows.TextDecoration)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As TextDecoration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Windows::TextDecoration ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Windows.TextDecoration -&gt; bool&#xA;override this.Contains : System.Windows.TextDecoration -&gt; bool" Usage="textDecorationCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.TextDecoration" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e4872-128">찾을 <see cref="T:System.Windows.TextDecoration" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-128">The <see cref="T:System.Windows.TextDecoration" /> object to locate.</span></span></param>
        <summary><span data-ttu-id="e4872-129"><see cref="T:System.Windows.TextDecorationCollection" />에 지정된 <see cref="T:System.Windows.TextDecoration" />이 들어 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-129">Determines if the <see cref="T:System.Windows.TextDecorationCollection" /> contains the specified <see cref="T:System.Windows.TextDecoration" />.</span></span></summary>
        <returns><span data-ttu-id="e4872-130"><paramref name="value" />이 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-130"><see langword="true" /> if <paramref name="value" /> is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.TextDecoration[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Windows.TextDecoration[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.CopyTo(System.Windows.TextDecoration[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As TextDecoration(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Windows::TextDecoration ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Windows.TextDecoration[] * int -&gt; unit&#xA;override this.CopyTo : System.Windows.TextDecoration[] * int -&gt; unit" Usage="textDecorationCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.TextDecoration[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="e4872-131">대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-131">The destination array.</span></span></param>
        <param name="index"><span data-ttu-id="e4872-132">복사가 시작되는 인덱스 위치(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-132">The zero-based index position where copying begins.</span></span></param>
        <summary><span data-ttu-id="e4872-133">지정된 인덱스 위치부터 시작하여 컬렉션의 <see cref="T:System.Windows.TextDecoration" /> 개체를 <see cref="T:System.Windows.TextDecorationCollection" /> 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-133">Copies the <see cref="T:System.Windows.TextDecoration" /> objects in the collection into an array of <see cref="T:System.Windows.TextDecorationCollection" />, starting at the specified index position.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.TextDecorationCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4872-134"><see cref="T:System.Windows.TextDecoration" />의 <see cref="T:System.Windows.TextDecorationCollection" /> 개체 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-134">Gets the number of <see cref="T:System.Windows.TextDecoration" /> objects in the <see cref="T:System.Windows.TextDecorationCollection" />.</span></span></summary>
        <value><span data-ttu-id="e4872-135">컬렉션의 개체 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-135">The number of objects in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="textDecorationCollection.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="textDecorationCollection.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="textDecorationCollection.GetAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="textDecorationCollection.GetCurrentValueAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.TextDecorationCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As TextDecorationCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::TextDecorationCollection::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Windows.TextDecorationCollection.Enumerator" Usage="textDecorationCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4872-136">컬렉션을 반복할 수 있는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-136">Returns an enumerator that can iterate through the collection.</span></span></summary>
        <returns><span data-ttu-id="e4872-137">컬렉션을 반복할 수 있는 열거자입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-137">An enumerator that can iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.TextDecoration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Windows.TextDecoration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.IndexOf(System.Windows.TextDecoration)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As TextDecoration) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Windows::TextDecoration ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : System.Windows.TextDecoration -&gt; int&#xA;override this.IndexOf : System.Windows.TextDecoration -&gt; int" Usage="textDecorationCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.TextDecoration" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e4872-138">찾을 <see cref="T:System.Windows.TextDecoration" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-138">The <see cref="T:System.Windows.TextDecoration" /> object to locate.</span></span></param>
        <summary><span data-ttu-id="e4872-139">컬렉션에 있는 지정된 <see cref="T:System.Windows.TextDecoration" /> 개체의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-139">Returns the index of the specified <see cref="T:System.Windows.TextDecoration" /> object within the collection.</span></span></summary>
        <returns><span data-ttu-id="e4872-140"><paramref name="value" />이 있으면 해당 항목의 0부터 시작하는 인덱스이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-140">The zero-based index of <paramref name="value" />, if found; otherwise -1;</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.TextDecoration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Windows.TextDecoration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Insert(System.Int32,System.Windows.TextDecoration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As TextDecoration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Windows::TextDecoration ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * System.Windows.TextDecoration -&gt; unit&#xA;override this.Insert : int * System.Windows.TextDecoration -&gt; unit" Usage="textDecorationCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Windows.TextDecoration" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e4872-141">개체를 삽입할 인덱스 위치(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-141">The zero-based index position to insert the object.</span></span></param>
        <param name="value"><span data-ttu-id="e4872-142">삽입할 <see cref="T:System.Windows.TextDecoration" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-142">The <see cref="T:System.Windows.TextDecoration" /> object to insert.</span></span></param>
        <summary><span data-ttu-id="e4872-143">컬렉션의 지정된 인덱스 위치에 지정된 <see cref="T:System.Windows.TextDecoration" /> 개체를 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-143">Inserts the specified <see cref="T:System.Windows.TextDecoration" /> object at the specified index position in the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecoration this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TextDecoration Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As TextDecoration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecoration ^ default[int] { System::Windows::TextDecoration ^ get(int index); void set(int index, System::Windows::TextDecoration ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.TextDecoration with get, set" Usage="System.Windows.TextDecorationCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecoration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e4872-144">가져오거나 설정할 개체의 인덱스 위치(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-144">The zero-based index position of the object to get or set.</span></span></param>
        <summary><span data-ttu-id="e4872-145">지정된 인덱스 위치의 <see cref="T:System.Windows.TextDecoration" /> 개체를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-145">Gets or sets the <see cref="T:System.Windows.TextDecoration" /> object at the specified index position.</span></span></summary>
        <value><span data-ttu-id="e4872-146"><paramref name="index" /> 위치의 <see cref="T:System.Windows.TextDecoration" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-146">The <see cref="T:System.Windows.TextDecoration" /> object at the <paramref name="index" /> position.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Windows.TextDecoration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Windows.TextDecoration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Remove(System.Windows.TextDecoration)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (value As TextDecoration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Windows::TextDecoration ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.TextDecoration -&gt; bool&#xA;override this.Remove : System.Windows.TextDecoration -&gt; bool" Usage="textDecorationCollection.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.TextDecoration" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e4872-147">제거할 <see cref="T:System.Windows.TextDecoration" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-147">The <see cref="T:System.Windows.TextDecoration" /> object to remove.</span></span></param>
        <summary><span data-ttu-id="e4872-148">컬렉션에서 지정된 <see cref="T:System.Windows.TextDecoration" /> 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-148">Removes the specified <see cref="T:System.Windows.TextDecoration" /> object from the collection.</span></span></summary>
        <returns><span data-ttu-id="e4872-149"><paramref name="value" />이 삭제되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-149"><see langword="true" /> if <paramref name="value" /> was successfully deleted; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="textDecorationCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e4872-150">개체를 삭제하기 시작할 인덱스 위치(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-150">The zero-based index position from where to delete the object.</span></span></param>
        <summary><span data-ttu-id="e4872-151">컬렉션에서 지정된 인덱스의 지정된 <see cref="T:System.Windows.TextDecoration" /> 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-151">Removes the specified <see cref="T:System.Windows.TextDecoration" /> object from the collection at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Windows.TextDecoration&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Windows.TextDecoration&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Windows.TextDecoration&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.System#Collections#Generic#ICollection&lt;System#Windows#TextDecoration&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of TextDecoration).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Windows::TextDecoration&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Windows.TextDecoration&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4872-152">컬렉션이 읽기 전용인지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-152">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="e4872-153"><see langword="true" />이 읽기 전용이면 <see cref="T:System.Windows.TextDecorationCollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-153"><see langword="true" /> if the <see cref="T:System.Windows.TextDecorationCollection" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-154">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e4872-154">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e4872-155"><xref:System.Windows.TextDecorationCollection> 인스턴스가 <xref:System.Collections.Generic.ICollection%601> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-155">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Windows.TextDecoration&gt; IEnumerable&lt;TextDecoration&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.TextDecoration&gt; System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.System#Collections#Generic#IEnumerable&lt;System#Windows#TextDecoration&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of TextDecoration) Implements IEnumerable(Of TextDecoration).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Windows::TextDecoration ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Windows::TextDecoration ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.TextDecoration&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4872-156">컬렉션을 반복하는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-156">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="e4872-157">컬렉션을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-157">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-158">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e4872-158">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e4872-159"><xref:System.Windows.TextDecorationCollection> 인스턴스가 <xref:System.Collections.Generic.IEnumerable%601> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-159">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TextDecorationCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="e4872-160"><see cref="T:System.Windows.TextDecorationCollection" />에서 복사된 항목을 수신하는 0부터 시작하는 <see cref="T:System.Array" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-160">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.TextDecorationCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="e4872-161">복사한 내용을 받도록 지정된 <see cref="T:System.Array" />의 첫째 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-161">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</span></span></param>
        <summary><span data-ttu-id="e4872-162">이 멤버에 대한 설명은 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e4872-162">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-163">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e4872-163">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e4872-164"><xref:System.Windows.TextDecorationCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-164">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TextDecorationCollection.CopyTo(System.Windows.TextDecoration[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4872-165">해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-165">Gets a value that indicates whether access to the collection is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="e4872-166"><see langword="true" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see cref="T:System.Windows.TextDecorationCollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-166"><see langword="true" /> if access to the <see cref="T:System.Windows.TextDecorationCollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-167">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e4872-167">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e4872-168"><xref:System.Windows.TextDecorationCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-168">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4872-169">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-169">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="e4872-170"><see cref="T:System.Windows.TextDecorationCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-170">An object that can be used to synchronize access to the <see cref="T:System.Windows.TextDecorationCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-171">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e4872-171">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e4872-172"><xref:System.Windows.TextDecorationCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-172">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4872-173">컬렉션을 반복하는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-173">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="e4872-174">컬렉션을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-174">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-175">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e4872-175">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e4872-176"><xref:System.Windows.TextDecorationCollection> 인스턴스가 <xref:System.Collections.IEnumerable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-176">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TextDecorationCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e4872-177"><see cref="T:System.Object" />에 추가할 <see cref="T:System.Windows.TextDecorationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-177">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.TextDecorationCollection" />.</span></span></param>
        <summary><span data-ttu-id="e4872-178">컬렉션에 항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-178">Adds an item to the collection.</span></span></summary>
        <returns><span data-ttu-id="e4872-179">새 요소가 삽입된 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-179">The position into which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-180">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e4872-180">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e4872-181"><xref:System.Windows.TextDecorationCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-181">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TextDecorationCollection.Add(System.Windows.TextDecoration)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e4872-182"><see cref="T:System.Object" />에서 찾을 <see cref="T:System.Windows.Media.TextEffectCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-182">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.TextEffectCollection" />.</span></span></param>
        <summary><span data-ttu-id="e4872-183">컬렉션에 특정 값이 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-183">Determines whether the collection contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="e4872-184"><see cref="T:System.Object" />가 <see cref="T:System.Windows.TextDecorationCollection" />에 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-184"><see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.TextDecorationCollection" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-185">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e4872-185">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e4872-186"><xref:System.Windows.TextDecorationCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-186">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TextDecorationCollection.Contains(System.Windows.TextDecoration)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e4872-187"><see cref="T:System.Object" />에서 찾을 <see cref="T:System.Windows.TextDecorationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-187">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.TextDecorationCollection" />.</span></span></param>
        <summary><span data-ttu-id="e4872-188">컬렉션에 있는 특정 항목의 인덱스를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-188">Determines the index of a specific item in the collection.</span></span></summary>
        <returns><span data-ttu-id="e4872-189">목록에 있으면 <paramref name="value" />의 인덱스이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-189">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-190">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e4872-190">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e4872-191"><xref:System.Windows.TextDecorationCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-191">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TextDecorationCollection.IndexOf(System.Windows.TextDecoration)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e4872-192"><see cref="T:System.Object" />를 삽입할 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-192">The zero-based index at which to insert the <see cref="T:System.Object" />.</span></span></param>
        <param name="value"><span data-ttu-id="e4872-193"><see cref="T:System.Windows.TextDecorationCollection" />에 삽입할 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-193">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.TextDecorationCollection" />.</span></span></param>
        <summary><span data-ttu-id="e4872-194">항목을 컬렉션 내의 지정된 인덱스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-194">Inserts an item to the collection at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-195">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e4872-195">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e4872-196"><xref:System.Windows.TextDecorationCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-196">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TextDecorationCollection.Insert(System.Int32,System.Windows.TextDecoration)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4872-197">컬렉션의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-197">Gets a value that indicates whether the collection has a fixed size.</span></span></summary>
        <value><span data-ttu-id="e4872-198"><see langword="true" />의 크기가 고정되어 있으면 <see cref="T:System.Windows.TextDecorationCollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-198"><see langword="true" /> if the <see cref="T:System.Windows.TextDecorationCollection" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-199">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e4872-199">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e4872-200"><xref:System.Windows.TextDecorationCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-200">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4872-201">컬렉션이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-201">Gets a value that indicates whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="e4872-202"><see langword="true" />이 읽기 전용이면 <see cref="T:System.Windows.TextDecorationCollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-202"><see langword="true" /> if the <see cref="T:System.Windows.TextDecorationCollection" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-203">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e4872-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e4872-204"><xref:System.Windows.TextDecorationCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-204">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e4872-205">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-205">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="e4872-206">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-206">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="e4872-207">지정한 인덱스의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-207">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-208">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e4872-208">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e4872-209"><xref:System.Windows.TextDecorationCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-209">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.TextDecorationCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e4872-210"><see cref="T:System.Object" />에서 제거할 <see cref="T:System.Windows.TextDecorationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-210">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.TextDecorationCollection" />.</span></span></param>
        <summary><span data-ttu-id="e4872-211">컬렉션에서 첫 번째로 나타나는 특정 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-211">Removes the first occurrence of a specific object from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-212">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e4872-212">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e4872-213"><xref:System.Windows.TextDecorationCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-213">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TextDecorationCollection.Remove(System.Windows.TextDecoration)" />
      </Docs>
    </Member>
    <Member MemberName="TryRemove">
      <MemberSignature Language="C#" Value="public bool TryRemove (System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt; textDecorations, out System.Windows.TextDecorationCollection result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryRemove(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.TextDecoration&gt; textDecorations, [out] class System.Windows.TextDecorationCollection&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.TryRemove(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration},System.Windows.TextDecorationCollection@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryRemove (textDecorations As IEnumerable(Of TextDecoration), ByRef result As TextDecorationCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryRemove(System::Collections::Generic::IEnumerable&lt;System::Windows::TextDecoration ^&gt; ^ textDecorations, [Runtime::InteropServices::Out] System::Windows::TextDecorationCollection ^ % result);" />
      <MemberSignature Language="F#" Value="member this.TryRemove : seq&lt;System.Windows.TextDecoration&gt; *  -&gt; bool" Usage="textDecorationCollection.TryRemove (textDecorations, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textDecorations" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt;" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="result" Type="System.Windows.TextDecorationCollection" RefType="out" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="textDecorations"><span data-ttu-id="e4872-214">제거할 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-214">The collection to be removed</span></span></param>
        <param name="result"><span data-ttu-id="e4872-215">결과가 포함된 Out 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-215">Out parameter containing the result.</span></span> <span data-ttu-id="e4872-216">현재 컬렉션에서 요소가 제거되지 않은 경우 <see langword="result" />는 원래 컬렉션과 동일한 새 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-216">If no element was removed from the current collection, then <see langword="result" /> is a new collection          identical to the original one.</span></span></param>
        <summary><span data-ttu-id="e4872-217">현재 컬렉션에서 <see cref="T:System.Windows.TextDecorations" />의 컬렉션을 제거하고 결과 (새) 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-217">Removes a collection of <see cref="T:System.Windows.TextDecorations" /> from the current collection and returns the resultant (new) collection.</span></span></summary>
        <returns><span data-ttu-id="e4872-218">현재 컬렉션에서 하나 이상의 항목이 제거된 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-218"><see langword="true" /> if at least one item was removed from the current collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4872-219">현재 컬렉션 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-219">The current collection remains unchanged.</span></span> <span data-ttu-id="e4872-220">현재 컬렉션의 하위 집합을 제거할 컬렉션 없는 경우 요소가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-220">If the collection to be removed is not a subset of the current collection, then no element is removed.</span></span> <span data-ttu-id="e4872-221">소스 컬렉션에 항목을 여러 개 있으면 항목의 모든 인스턴스가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e4872-221">If          the source collection has multiple instances of an item, then all instances of the item are removed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>