<Type Name="TemplateBindingExtensionConverter" FullName="System.Windows.TemplateBindingExtensionConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7fe4c7b8af949bbe51d0185606d03f7794ae813" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56349127" /></Metadata><TypeSignature Language="C#" Value="public class TemplateBindingExtensionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemplateBindingExtensionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TemplateBindingExtensionConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TemplateBindingExtensionConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateBindingExtensionConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type TemplateBindingExtensionConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0dc5c-101">serialization 중에 인스턴스에서 <see cref="T:System.Windows.TemplateBindingExtension" />을 생성하는 데 사용되는 형식 변환기입니다.</span><span class="sxs-lookup"><span data-stu-id="0dc5c-101">A type converter that is used to construct a <see cref="T:System.Windows.TemplateBindingExtension" /> from an instance during serialization.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateBindingExtensionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateBindingExtensionConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateBindingExtensionConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0dc5c-102"><see cref="T:System.Windows.TemplateBindingExtensionConverter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0dc5c-102">Initializes a new instance of the <see cref="T:System.Windows.TemplateBindingExtensionConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateBindingExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="templateBindingExtensionConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="0dc5c-103">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="0dc5c-103">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="0dc5c-104">원하는 변환 출력 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0dc5c-104">The desired type of the conversion's output.</span></span></param>
        <summary><span data-ttu-id="0dc5c-105">지정된 컨텍스트를 사용하여 이 변환기에서 개체를 지정된 형식으로 변환할 수 있는지 여부를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0dc5c-105">Returns whether this converter can convert the object to the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="0dc5c-106">이 변환기가 요청된 변환을 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0dc5c-106"><see langword="true" /> if this converter can perform the requested conversion; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0dc5c-107"><see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />의 <paramref name="destinationType" />만이 <see langword="true" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0dc5c-107">Only a <paramref name="destinationType" /> of <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" /> will return <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateBindingExtensionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="templateBindingExtensionConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="0dc5c-108">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="0dc5c-108">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="0dc5c-109"><see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0dc5c-109">A <see cref="T:System.Globalization.CultureInfo" /> object.</span></span> <span data-ttu-id="0dc5c-110">null 참조가 전달되면 현재 문화권이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0dc5c-110">If a null reference is passed, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="0dc5c-111">변환할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0dc5c-111">The value to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="0dc5c-112">원하는 변환 대상 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0dc5c-112">The desired type to convert to.</span></span></param>
        <summary><span data-ttu-id="0dc5c-113">지정된 값 개체를 지정된 형식으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="0dc5c-113">Converts the given value object to the specified type.</span></span></summary>
        <returns><span data-ttu-id="0dc5c-114">변환된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0dc5c-114">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dc5c-115">만 `destinationType` 의 <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> 이 구현에서 생성 되는 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0dc5c-115">Only a `destinationType` of <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> will return a value originating from this implementation.</span></span> <span data-ttu-id="0dc5c-116">에 대 한 제공 된 다른 모든 형식은 `destinationType` base를 사용할 수 있는 변환 된 값이 없는 하면 나머지 매개 변수의 기본 유효성 검사만 하며이 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0dc5c-116">Any other type provided for `destinationType` will cause this method to call base, which will result in no usable converted value and only serves for basic validation of the remaining parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TemplateBindingExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </Docs>
    </Member>
  </Members>
</Type>