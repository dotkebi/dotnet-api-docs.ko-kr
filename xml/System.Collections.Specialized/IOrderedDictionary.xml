<Type Name="IOrderedDictionary" FullName="System.Collections.Specialized.IOrderedDictionary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2aae79c9d6df03f8a13543c37e976c6393fb8199" /><Meta Name="ms.sourcegitcommit" Value="3f21796619d6e69ad383c958cc013ce44c0678de" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/11/2019" /><Meta Name="ms.locfileid" Value="56054504" /></Metadata><TypeSignature Language="C#" Value="public interface IOrderedDictionary : System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOrderedDictionary implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.IOrderedDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOrderedDictionary&#xA;Implements IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOrderedDictionary : System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type IOrderedDictionary = interface&#xA;    interface IDictionary&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="51b43-101">키/값 쌍의 인덱싱된 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-101">Represents an indexed collection of key/value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b43-102"><xref:System.Collections.Specialized.IOrderedDictionary> 키 또는 인덱스를 사용 하 여 요소를 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-102"><xref:System.Collections.Specialized.IOrderedDictionary> elements can be accessed either with the key or with the index.</span></span>  
  
 <span data-ttu-id="51b43-103">각 요소는에 저장 된 키/값 쌍을 <xref:System.Collections.DictionaryEntry> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-103">Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> structure.</span></span>  
  
 <span data-ttu-id="51b43-104">각 쌍에 없는 고유 키가 있어야 `null`를 값으로 가능 하지만 `null` 고유할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-104">Each pair must have a unique key that is not `null`, but the value can be `null` and does not have to be unique.</span></span> <span data-ttu-id="51b43-105"><xref:System.Collections.Specialized.IOrderedDictionary> 인터페이스를 사용 하면 포함 된 키와 값을 열거할 수 있지만 특정 정렬 순서를 의미 하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-105">The <xref:System.Collections.Specialized.IOrderedDictionary> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</span></span>  
  
 <span data-ttu-id="51b43-106">합니다 `foreach` C# 언어의 (`For Each` Visual basic에서) 컬렉션 요소의 형식의 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-106">The `foreach` statement of the C# language (`For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="51b43-107">때문에의 각 요소는 <xref:System.Collections.IDictionary> 는 키/값 쌍은 요소 형식이 키의 형식 또는 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-107">Because each element of the <xref:System.Collections.IDictionary> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="51b43-108">요소 형식은 대신 <xref:System.Collections.DictionaryEntry>다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-108">Instead, the element type is <xref:System.Collections.DictionaryEntry>, as the following example shows.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/remarks.cpp#03)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/remarks.cs#03)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/remarks.vb#03)]  
  
 <span data-ttu-id="51b43-109">`foreach` 문을 열거자를 컬렉션에 쓰는 것부터 읽기만 허용 하는 래퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-109">The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51b43-110">다음 코드 예제에서는 간단한 구현을 보여 줍니다 <xref:System.Collections.Specialized.IOrderedDictionary> 기반 된 <xref:System.Collections.ArrayList> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-110">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="51b43-111">구현 된 <xref:System.Collections.Specialized.IOrderedDictionary> 이름을 키와 성을 추가 요구 사항은 각 첫 번째 이름이 고유한 지를 사용 하 여 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-111">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#00)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#00)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#00)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="51b43-112">구현 하는 클래스에는 키를 비교할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-112">The implementing class must have a means to compare keys.</span></span></para></block>
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="iOrderedDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51b43-113"><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 컬렉션을 반복하는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-113">Returns an enumerator that iterates through the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection.</span></span></summary>
        <returns><span data-ttu-id="51b43-114">전체 <see cref="T:System.Collections.IDictionaryEnumerator" /> 컬렉션의 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-114">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the entire <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b43-115">[Visual Basic의 경우 C#]</span><span class="sxs-lookup"><span data-stu-id="51b43-115">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="51b43-116">@FSHO1@C# 언어의 `foreach` 문(Visual Basic의 경우 `for each`)은 열거자의 복잡성을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-116">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="51b43-117">따라서 사용 하 여 `foreach` 열거자를 직접 조작 하는 대신 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-117">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="51b43-118">열거자를 사용하여 컬렉션의 데이터를 읽을 수는 있지만 내부 컬렉션을 수정할 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-118">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="51b43-119">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-119">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="51b43-120"><xref:System.Collections.IEnumerator.Reset%2A>을 실행하면 열거자가 이 위치로 복원됩니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-120"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="51b43-121">이 위치에 <xref:System.Collections.IEnumerator.Current%2A> 속성 정의 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-121">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="51b43-122">따라서 <xref:System.Collections.IEnumerator.MoveNext%2A>의 값을 읽기 전에 <xref:System.Collections.IEnumerator.Current%2A>를 호출하여 열거자를 해당 컬렉션의 첫 번째 요소로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-122">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="51b43-123"><xref:System.Collections.IEnumerator.Current%2A>에서는 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A>이 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-123"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="51b43-124"><xref:System.Collections.IEnumerator.MoveNext%2A>는 <xref:System.Collections.IEnumerator.Current%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-124"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="51b43-125">경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 열거자를 컬렉션의 끝 컬렉션의 마지막 요소 뒤에 배치 되는 전달 하 고 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-125">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="51b43-126">열거자가 있는 경우이 위치에 대 한 후속 호출은 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환할 수도 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-126">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="51b43-127">마지막으로 호출 하는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`, <xref:System.Collections.IEnumerator.Current%2A> 정의 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-127">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="51b43-128"><xref:System.Collections.IEnumerator.Current%2A>를 컬렉션의 첫째 요소에 다시 설정하려면 <xref:System.Collections.IEnumerator.Reset%2A>을 호출한 뒤 <xref:System.Collections.IEnumerator.MoveNext%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-128">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="51b43-129">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-129">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="51b43-130">컬렉션에 대해 변경 내용을 수행하면(예: 요소 추가, 수정 또는 삭제) 열거자는 복구 불가능하게 무효화되고 해당 동작은 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-130">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="51b43-131">열거자는 컬렉션에 배타적으로 액세스하지 못하므로 컬렉션을 열거하는 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-131">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="51b43-132">열거 동안 스레드 보안을 보장하려면 전체 열거 동안 컬렉션을 잠그면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-132">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="51b43-133">여러 스레드에서 컬렉션에 액세스하여 읽고 쓸 수 있도록 허용하려면 사용자 지정 동기화를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-133">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51b43-134">다음 코드 예제에서는 간단한 구현을 보여 줍니다 <xref:System.Collections.Specialized.IOrderedDictionary> 기반 된 <xref:System.Collections.ArrayList> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-134">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="51b43-135">구현 된 <xref:System.Collections.Specialized.IOrderedDictionary> 이름을 키와 성을 추가 요구 사항은 각 첫 번째 이름이 고유한 지를 사용 하 여 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-135">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="51b43-136">이 코드는 부분에 대해 제공 된 더 큰 코드 예제는 <xref:System.Collections.Specialized.IOrderedDictionary> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-136">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj * obj -&gt; unit" Usage="iOrderedDictionary.Insert (index, key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="51b43-137">키/값 쌍이 삽입될 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-137">The zero-based index at which the key/value pair should be inserted.</span></span></param>
        <param name="key"><span data-ttu-id="51b43-138">추가할 요소의 키로 사용할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-138">The object to use as the key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="51b43-139">추가할 요소의 값으로 사용할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-139">The object to use as the value of the element to add.</span></span>  <span data-ttu-id="51b43-140">값은 <see langword="null" />이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-140">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="51b43-141">컬렉션의 지정된 인덱스에 키/값 쌍을 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-141">Inserts a key/value pair into the collection at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b43-142"><xref:System.Collections.Specialized.IOrderedDictionary> 허용 `null` 유효한 값으로 중복 요소를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-142"><xref:System.Collections.Specialized.IOrderedDictionary> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="51b43-143">경우는 `index` 매개 변수 값과 같음 <xref:System.Collections.ICollection.Count%2A>의 `value` 매개 변수 끝에 추가 됩니다는 <xref:System.Collections.Specialized.IOrderedDictionary> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-143">If the `index` parameter is equal to <xref:System.Collections.ICollection.Count%2A>, the `value` parameter is added to the end of the <xref:System.Collections.Specialized.IOrderedDictionary> collection.</span></span>  
  
 <span data-ttu-id="51b43-144">목록처럼 연속된 요소로 구성된 컬렉션에서는 삽입 지점 다음에 있는 요소를 아래로 이동하여 새 요소로 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-144">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="51b43-145">컬렉션에 인덱스가 지정된 경우 이동되는 요소의 인덱스도 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-145">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="51b43-146">이 동작 요소는 개념적으로 그룹화 되 함께 해시 테이블과 같은 컬렉션에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-146">This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51b43-147">다음 코드 예제에서는 간단한 구현을 보여 줍니다 <xref:System.Collections.Specialized.IOrderedDictionary> 기반 된 <xref:System.Collections.ArrayList> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-147">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="51b43-148">구현 된 <xref:System.Collections.Specialized.IOrderedDictionary> 이름을 키와 성을 추가 요구 사항은 각 첫 번째 이름이 고유한 지를 사용 하 여 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-148">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="51b43-149">이 코드는 부분에 대해 제공 된 더 큰 코드 예제는 <xref:System.Collections.Specialized.IOrderedDictionary> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-149">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="51b43-150"><paramref name="index" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-150"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="51b43-151">또는</span><span class="sxs-lookup"><span data-stu-id="51b43-151">-or-</span></span> 
 <span data-ttu-id="51b43-152"><paramref name="index" />가 <see cref="P:System.Collections.ICollection.Count" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="51b43-152"><paramref name="index" /> is greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51b43-153"><paramref name="key" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-153"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51b43-154">키가 같은 요소가 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 컬렉션에 이미 있는 경우</span><span class="sxs-lookup"><span data-stu-id="51b43-154">An element with the same key already exists in the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="51b43-155"><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 컬렉션이 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="51b43-155">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection is read-only.</span></span>  
  
<span data-ttu-id="51b43-156">또는</span><span class="sxs-lookup"><span data-stu-id="51b43-156">-or-</span></span> 
<span data-ttu-id="51b43-157"><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 컬렉션의 크기가 고정되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="51b43-157">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Collections.Specialized.IOrderedDictionary.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="51b43-158">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-158">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="51b43-159">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-159">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="51b43-160">지정한 인덱스의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-160">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b43-161"><xref:System.Collections.Specialized.IOrderedDictionary> 허용 `null` 유효한 값으로 중복 요소를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-161"><xref:System.Collections.Specialized.IOrderedDictionary> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="51b43-162">C# 언어 키워드를 사용 하 여 구현 하는 대신 인덱서를 정의 하는 <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-162">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> property.</span></span> <span data-ttu-id="51b43-163">Visual Basic에서는 동일한 인덱싱 기능을 제공하는 <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A>을 기본 속성으로 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-163">Visual Basic implements <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="51b43-164">이 속성을 사용 하면 다음 구문을 사용 하 여 컬렉션의 특정 요소에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-164">This property allows you to access a specific element in the collection by using the following syntax:</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/remarks.cpp#04)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/remarks.cs#04)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/remarks.vb#04)]  
  
   
  
## Examples  
 <span data-ttu-id="51b43-165">다음 코드 예제에서는 간단한 구현을 보여 줍니다 <xref:System.Collections.Specialized.IOrderedDictionary> 기반 된 <xref:System.Collections.ArrayList> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-165">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="51b43-166">구현 된 <xref:System.Collections.Specialized.IOrderedDictionary> 이름을 키와 성을 추가 요구 사항은 각 첫 번째 이름이 고유한 지를 사용 하 여 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-166">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="51b43-167">이 코드는 부분에 대해 제공 된 더 큰 코드 예제는 <xref:System.Collections.Specialized.IOrderedDictionary> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-167">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="51b43-168"><paramref name="index" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-168"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="51b43-169">또는</span><span class="sxs-lookup"><span data-stu-id="51b43-169">-or-</span></span> 
 <span data-ttu-id="51b43-170"><paramref name="index" />가 <see cref="P:System.Collections.ICollection.Count" />보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="51b43-170"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iOrderedDictionary.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="51b43-171">제거할 요소의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-171">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="51b43-172">지정된 인덱스에 있는 요소를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-172">Removes the element at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b43-173">목록처럼 연속된 요소로 구성된 컬렉션에서는 제거된 요소 다음에 있는 요소를 위로 이동하여 빈 자리를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-173">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="51b43-174">컬렉션에 인덱스가 지정된 경우 이동되는 요소의 인덱스도 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-174">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="51b43-175">이 동작 요소는 개념적으로 그룹화 되 함께 해시 테이블과 같은 컬렉션에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-175">This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51b43-176">다음 코드 예제에서는 간단한 구현을 보여 줍니다 <xref:System.Collections.Specialized.IOrderedDictionary> 기반 된 <xref:System.Collections.ArrayList> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-176">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="51b43-177">구현 된 <xref:System.Collections.Specialized.IOrderedDictionary> 이름을 키와 성을 추가 요구 사항은 각 첫 번째 이름이 고유한 지를 사용 하 여 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-177">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="51b43-178">이 코드는 부분에 대해 제공 된 더 큰 코드 예제는 <xref:System.Collections.Specialized.IOrderedDictionary> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-178">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="51b43-179"><paramref name="index" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="51b43-179"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="51b43-180">또는</span><span class="sxs-lookup"><span data-stu-id="51b43-180">-or-</span></span> 
 <span data-ttu-id="51b43-181"><paramref name="index" />가 <see cref="P:System.Collections.ICollection.Count" />보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="51b43-181"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="51b43-182"><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 컬렉션이 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="51b43-182">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection is read-only.</span></span>  
  
<span data-ttu-id="51b43-183">또는</span><span class="sxs-lookup"><span data-stu-id="51b43-183">-or-</span></span> 
<span data-ttu-id="51b43-184"><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 컬렉션의 크기가 고정되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="51b43-184">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection has a fixed size.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>