<Type Name="ICollection&lt;T&gt;" FullName="System.Collections.Generic.ICollection&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="09deb9a5c3b731782e185efff76e95897f28661c" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58739326" /></Metadata><TypeSignature Language="C#" Value="public interface ICollection&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICollection`1&lt;T&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.ICollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICollection(Of T)&#xA;Implements IEnumerable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class ICollection : System::Collections::Generic::IEnumerable&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ICollection&lt;'T&gt; = interface&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="a0694-101">컬렉션에 있는 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-101">The type of the elements in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="a0694-102">제네릭 컬렉션을 조작할 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-102">Defines methods to manipulate generic collections.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0694-103">합니다 <xref:System.Collections.Generic.ICollection%601> 인터페이스는 클래스에 대 한 기본 인터페이스는 <xref:System.Collections.Generic?displayProperty=nameWithType> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-103">The <xref:System.Collections.Generic.ICollection%601> interface is the base interface for classes in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace.</span></span>  
  
 <span data-ttu-id="a0694-104">합니다 <xref:System.Collections.Generic.ICollection%601> 인터페이스를 확장 <xref:System.Collections.Generic.IEnumerable%601>; <xref:System.Collections.Generic.IDictionary%602> 하 고 <xref:System.Collections.Generic.IList%601> 확장 하는 더욱 특수화 된 인터페이스는 <xref:System.Collections.Generic.ICollection%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-104">The <xref:System.Collections.Generic.ICollection%601> interface extends <xref:System.Collections.Generic.IEnumerable%601>; <xref:System.Collections.Generic.IDictionary%602> and <xref:System.Collections.Generic.IList%601> are more specialized interfaces that extend <xref:System.Collections.Generic.ICollection%601>.</span></span> <span data-ttu-id="a0694-105">A <xref:System.Collections.Generic.IDictionary%602> 키/값 쌍의 컬렉션인 같은 구현은 <xref:System.Collections.Generic.Dictionary%602> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-105">A <xref:System.Collections.Generic.IDictionary%602> implementation is a collection of key/value pairs, like the <xref:System.Collections.Generic.Dictionary%602> class.</span></span> <span data-ttu-id="a0694-106">A <xref:System.Collections.Generic.IList%601> 구현 값의 컬렉션 이며 인덱스로 같은 해당 멤버를 액세스할 수는 <xref:System.Collections.Generic.List%601> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-106">A <xref:System.Collections.Generic.IList%601> implementation is a collection of values, and its members can be accessed by index, like the <xref:System.Collections.Generic.List%601> class.</span></span>  
  
 <span data-ttu-id="a0694-107">모두를 <xref:System.Collections.Generic.IDictionary%602> 인터페이스 또는 <xref:System.Collections.Generic.IList%601> 인터페이스에 필요한 컬렉션의 요구 사항을 충족에서 새 컬렉션 클래스를 파생 합니다 <xref:System.Collections.Generic.ICollection%601> 보다 유연 하 게 대신 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-107">If neither the <xref:System.Collections.Generic.IDictionary%602> interface nor the <xref:System.Collections.Generic.IList%601> interface meet the requirements of the required collection, derive the new collection class from the <xref:System.Collections.Generic.ICollection%601> interface instead for more flexibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0694-108">다음 예에서는 구현 하는 <xref:System.Collections.Generic.ICollection%601> 인터페이스를 사용자 지정 컬렉션을 만들 `Box` 명명 된 개체 `BoxCollection`합니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-108">The following example implements the <xref:System.Collections.Generic.ICollection%601> interface to create a collection of custom `Box` objects named `BoxCollection`.</span></span> <span data-ttu-id="a0694-109">각 `Box` 높이, 길이 및 같음을 정의 하는 데 사용 되는 너비 속성을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-109">Each `Box` has height, length, and width properties, which are used to define equality.</span></span> <span data-ttu-id="a0694-110">같음 같거나 동일한 볼륨 되는 모든 차원으로 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-110">Equality can be defined as all dimensions being the same or the volume being the same.</span></span> <span data-ttu-id="a0694-111">합니다 `Box` 구현 클래스는 <xref:System.IEquatable%601> 기본 같음 크기가 같은 것으로 정의 하는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-111">The `Box` class implements the <xref:System.IEquatable%601> interface to define the default equality as the dimensions being the same.</span></span>  
  
 <span data-ttu-id="a0694-112">`BoxCollection` 클래스가 구현 하는 <xref:System.Collections.Generic.ICollection%601.Contains%2A> 기본 같은지 확인 하는 데 사용할 방법을 여부를 `Box` 컬렉션에.</span><span class="sxs-lookup"><span data-stu-id="a0694-112">The `BoxCollection` class implements the <xref:System.Collections.Generic.ICollection%601.Contains%2A> method to use the default equality to determine whether a `Box` is in the collection.</span></span> <span data-ttu-id="a0694-113">이 메서드를 사용 하 여는 <xref:System.Collections.Generic.ICollection%601.Add%2A> 메서드 하므로 각 `Box` 추가할 컬렉션이 차원의 고유 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-113">This method is used by the <xref:System.Collections.Generic.ICollection%601.Add%2A> method so that each `Box` added to the collection has a unique set of dimensions.</span></span> <span data-ttu-id="a0694-114">`BoxCollection` 클래스에 오버 로드도 제공 합니다 <xref:System.Collections.Generic.ICollection%601.Contains%2A> 메서드를 지정 하는 <xref:System.Collections.Generic.EqualityComparer%601> 개체와 같은 `BoxSameDimensions` 및 `BoxSameVol` 예제에서 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-114">The `BoxCollection` class also provides an overload of the  <xref:System.Collections.Generic.ICollection%601.Contains%2A> method that takes a specified <xref:System.Collections.Generic.EqualityComparer%601> object, such as `BoxSameDimensions` and `BoxSameVol` classes in the example.</span></span>  
  
 <span data-ttu-id="a0694-115">이 예제에서는 구현를 <xref:System.Collections.Generic.IEnumerator%601> 에 대 한 인터페이스를 `BoxCollection` 클래스 컬렉션을 열거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-115">This example also implements an <xref:System.Collections.Generic.IEnumerator%601> interface for the `BoxCollection` class so that the collection can be enumerated.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxexamples/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.BoxExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxexamples/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.IDictionary`2" />
    <altmember cref="T:System.Collections.Generic.IList`1" />
    <altmember cref="N:System.Collections" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ICollection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit" Usage="iCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a0694-116"><see cref="T:System.Collections.Generic.ICollection`1" />에 추가할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-116">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="a0694-117"><see cref="T:System.Collections.Generic.ICollection`1" />에 항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-117">Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a0694-118"><see cref="T:System.Collections.Generic.ICollection`1" />이 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="a0694-118">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ICollection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0694-119"><see cref="T:System.Collections.Generic.ICollection`1" />에서 항목을 모두 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-119">Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0694-120"><xref:System.Collections.Generic.ICollection%601.Count%2A>는 0으로 설정되어야 하고 컬렉션 요소의 다른 개체에 대한 참조가 해제되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-120"><xref:System.Collections.Generic.ICollection%601.Count%2A> must be set to 0, and references to other objects from elements of the collection must be released.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a0694-121"><see cref="T:System.Collections.Generic.ICollection`1" />이 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="a0694-121">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ICollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool" Usage="iCollection.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a0694-122"><see cref="T:System.Collections.Generic.ICollection`1" />에서 찾을 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-122">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="a0694-123"><see cref="T:System.Collections.Generic.ICollection`1" />에 특정 값이 들어 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-123">Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="a0694-124"><see langword="true" />가 <paramref name="item" />에 있으면 <see cref="T:System.Collections.Generic.ICollection`1" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-124"><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0694-125">개체의 같음 여부를 결정 하는 방법의 구현을 달라질 수 있습니다. 예를 들어 <xref:System.Collections.Generic.List%601> 사용 하 여 <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>반면 <xref:System.Collections.Generic.Dictionary%602> 사용자 지정할 수 있습니다는 <xref:System.Collections.Generic.IComparer%601> 키를 비교 하는 데 사용할 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-125">Implementations can vary in how they determine equality of objects; for example, <xref:System.Collections.Generic.List%601> uses <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, whereas <xref:System.Collections.Generic.Dictionary%602> allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit" Usage="iCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="a0694-126"><see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.Generic.ICollection`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-126">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span> <span data-ttu-id="a0694-127"><see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-127">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="a0694-128"><paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-128">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="a0694-129">특정 <see cref="T:System.Collections.Generic.ICollection`1" /> 인덱스부터 시작하여 <see cref="T:System.Array" />의 요소를 <see cref="T:System.Array" />에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-129">Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a0694-130"><paramref name="array" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-130"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a0694-131"><paramref name="arrayIndex" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="a0694-131"><paramref name="arrayIndex" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a0694-132">소스 <see cref="T:System.Collections.Generic.ICollection`1" />의 요소 수가 대상 <paramref name="array" />의 <paramref name="arrayIndex" />부터 끝까지 사용 가능한 공간보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-132">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.ICollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.ICollection&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0694-133"><see cref="T:System.Collections.Generic.ICollection`1" />에 포함된 요소 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-133">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <value><span data-ttu-id="a0694-134"><see cref="T:System.Collections.Generic.ICollection`1" />에 포함된 요소의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-134">The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.Generic.ICollection&lt;'T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0694-135"><see cref="T:System.Collections.Generic.ICollection`1" />가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-135">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="a0694-136"><see langword="true" />이 읽기 전용이면 <see cref="T:System.Collections.Generic.ICollection`1" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-136"><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0694-137">읽기 전용 컬렉션 컬렉션을 만든 후에 추가 하거나 제거할 요소의 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-137">A collection that is read-only does not allow the addition or removal of elements after the collection is created.</span></span> <span data-ttu-id="a0694-138">이 컨텍스트에서 읽기 전용는 참고 여부를 컬렉션의 개별 요소를 수정할 수 이후 나타내지 않습니다는 <xref:System.Collections.Generic.ICollection%601> 인터페이스만 추가 및 제거 작업을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-138">Note that read-only in this context does not indicate whether individual elements of the collection can be modified, since the <xref:System.Collections.Generic.ICollection%601> interface only supports addition and removal operations.</span></span> <span data-ttu-id="a0694-139">예를 들어를 <xref:System.Collections.Generic.ICollection%601.IsReadOnly%2A> 캐스팅 또는 변환할 배열의 속성을 <xref:System.Collections.Generic.ICollection%601> 개체를 반환 합니다 `true`경우에 개별 배열 요소를 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-139">For example, the <xref:System.Collections.Generic.ICollection%601.IsReadOnly%2A> property of an array that is cast or converted to an <xref:System.Collections.Generic.ICollection%601> object returns `true`, even though individual array elements can be modified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ICollection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool" Usage="iCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a0694-140"><see cref="T:System.Collections.Generic.ICollection`1" />에서 제거할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-140">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="a0694-141"><see cref="T:System.Collections.Generic.ICollection`1" />에서 맨 처음 발견되는 특정 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-141">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="a0694-142"><see langword="true" />이 <paramref name="item" />에서 제거되면 <see cref="T:System.Collections.Generic.ICollection`1" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-142"><see langword="true" /> if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a0694-143">이 메서드는 <see langword="false" />이 원래 <paramref name="item" />에 없는 경우에도 <see cref="T:System.Collections.Generic.ICollection`1" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-143">This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0694-144">개체의 동일성을 결정하는 방법에 따라 다양한 구현이 가능합니다. 예를 들어 <xref:System.Collections.Generic.List%601>은 <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>를 사용하는 반면 <xref:System.Collections.Generic.Dictionary%602>의 경우에는 사용자가 키를 비교하는 데 사용할 <xref:System.Collections.Generic.IComparer%601> 구현을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-144">Implementations can vary in how they determine equality of objects; for example, <xref:System.Collections.Generic.List%601> uses <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, whereas, <xref:System.Collections.Generic.Dictionary%602> allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
 <span data-ttu-id="a0694-145">목록처럼 연속된 요소로 구성된 컬렉션에서는 제거된 요소 다음에 있는 요소를 위로 이동하여 빈 자리를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-145">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="a0694-146">컬렉션에 인덱스가 지정된 경우 이동되는 요소의 인덱스도 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-146">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="a0694-147">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화되어 있는 컬렉션에는 이러한 동작이 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a0694-147">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a0694-148"><see cref="T:System.Collections.Generic.ICollection`1" />이 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="a0694-148">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
  </Members>
</Type>