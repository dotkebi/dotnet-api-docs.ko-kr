<Type Name="IComparer&lt;T&gt;" FullName="System.Collections.Generic.IComparer&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e0ced18ddb2a0f8fe1975c169e200798d67f3df6" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58737267" /></Metadata><TypeSignature Language="C#" Value="public interface IComparer&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparer`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparer(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IComparer" />
  <TypeSignature Language="F#" Value="type IComparer&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="e7547-101">비교할 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-101">The type of objects to compare.</span></span></typeparam>
    <summary><span data-ttu-id="e7547-102">형식에서 두 개체를 비교하기 위해 구현하는 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-102">Defines a method that a type implements to compare two objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7547-103">이 인터페이스를 사용 하 여 사용 합니다 <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> 고 <xref:System.Collections.Generic.List%601.BinarySearch%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e7547-103">This interface is used with the <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> and <xref:System.Collections.Generic.List%601.BinarySearch%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="e7547-104">컬렉션의 정렬 순서를 사용자 지정 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-104">It provides a way to customize the sort order of a collection.</span></span> <span data-ttu-id="e7547-105">이 인터페이스를 구현 하는 클래스를 포함 합니다 <xref:System.Collections.Generic.SortedDictionary%602> 고 <xref:System.Collections.Generic.SortedList%602> 제네릭 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-105">Classes that implement this interface include the <xref:System.Collections.Generic.SortedDictionary%602> and <xref:System.Collections.Generic.SortedList%602> generic classes.</span></span>  
  
 <span data-ttu-id="e7547-106">이 인터페이스의 기본 구현은 <xref:System.Collections.Generic.Comparer%601> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-106">The default implementation of this interface is the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="e7547-107">합니다 <xref:System.StringComparer> 형식에 대 한이 인터페이스를 구현 하는 클래스 <xref:System.String>합니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-107">The <xref:System.StringComparer> class implements this interface for type <xref:System.String>.</span></span>  
  
 <span data-ttu-id="e7547-108">이 인터페이스는 순서 비교를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-108">This interface supports ordering comparisons.</span></span> <span data-ttu-id="e7547-109">즉,는 <xref:System.Collections.Generic.Comparer%601.Compare%2A> 0을 반환 하는 메서드, 즉, 두 개체가 동일한 정렬 되는지 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-109">That is, when the <xref:System.Collections.Generic.Comparer%601.Compare%2A> method returns 0, it means that two objects sort the same.</span></span> <span data-ttu-id="e7547-110">같음 비교에서 구현 되는 <xref:System.Collections.Generic.IEqualityComparer%601> 제네릭 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-110">Implementation of exact equality comparisons is provided by the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface.</span></span>  
  
 <span data-ttu-id="e7547-111">파생 되는 것이 좋습니다는 <xref:System.Collections.Generic.Comparer%601> 구현 하는 대신 클래스는 <xref:System.Collections.Generic.IComparer%601> 인터페이스를 <xref:System.Collections.Generic.Comparer%601> 클래스의 명시적 인터페이스 구현을 제공 합니다 <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> 메서드 및 <xref:System.Collections.Generic.Comparer%601.Default%2A> 속성은 개체에 대 한 기본 비교자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-111">We recommend that you derive from the <xref:System.Collections.Generic.Comparer%601> class instead of implementing the <xref:System.Collections.Generic.IComparer%601> interface, because the <xref:System.Collections.Generic.Comparer%601> class provides an explicit interface implementation of the <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> method and the <xref:System.Collections.Generic.Comparer%601.Default%2A> property that gets the default comparer for the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7547-112">다음 예에서는 구현 하는 <xref:System.Collections.Generic.IComparer%601> 형식의 개체를 비교 하는 인터페이스 `Box` 해당 차원에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-112">The following example implements the <xref:System.Collections.Generic.IComparer%601> interface to compare objects of type `Box` according to their dimensions.</span></span> <span data-ttu-id="e7547-113">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Collections.Generic.Comparer%601> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-113">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#7)]
 [!code-vb[System.Collections.Generic.BoxCompare#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.Comparer`1" />
    <altmember cref="N:System.Collections" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
    <altmember cref="T:System.Globalization.CompareInfo" />
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As T, y As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member Compare : 'T * 'T -&gt; int" Usage="iComparer.Compare (x, y)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Compare(T x, T y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="e7547-114">비교할 첫 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-114">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="e7547-115">비교할 두 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-115">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="e7547-116">두 개체를 비교하여 한 개체가 다른 개체보다 작거나, 같거나 또는 크다는 것을 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-116">Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</span></span></summary>
        <returns><span data-ttu-id="e7547-117">다음 표와 같이 <paramref name="x" /> 및 <paramref name="y" />의 상대 값을 나타내는 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-117">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="e7547-118">값</span><span class="sxs-lookup"><span data-stu-id="e7547-118">Value</span></span> 
 </term><description> <span data-ttu-id="e7547-119">의미</span><span class="sxs-lookup"><span data-stu-id="e7547-119">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="e7547-120">0보다 작음</span><span class="sxs-lookup"><span data-stu-id="e7547-120">Less than zero</span></span> 
 </term><description><span data-ttu-id="e7547-121"><paramref name="x" />가 <paramref name="y" />보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="e7547-121"><paramref name="x" /> is less than <paramref name="y" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e7547-122">0</span><span class="sxs-lookup"><span data-stu-id="e7547-122">Zero</span></span> 
 </term><description><span data-ttu-id="e7547-123"><paramref name="x" />가 <paramref name="y" />와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-123"><paramref name="x" /> equals <paramref name="y" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e7547-124">0보다 큼</span><span class="sxs-lookup"><span data-stu-id="e7547-124">Greater than zero</span></span> 
 </term><description><span data-ttu-id="e7547-125"><paramref name="x" />가 <paramref name="y" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="e7547-125"><paramref name="x" /> is greater than <paramref name="y" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7547-126">사용자 지정을 제공 하려면이 메서드를 구현 합니다. 정렬 순서 비교 형식에 대 한 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-126">Implement this method to provide a customized sort order comparison for type `T`.</span></span>  
  
 <span data-ttu-id="e7547-127">비교 `null` 모든 참조를 사용 하 여 허용 되는 형식과 예외가 생성 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-127">Comparing `null` with any reference type is allowed and does not generate an exception.</span></span> <span data-ttu-id="e7547-128">Null 참조는 null이 아닌 보다 작은 참조로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-128">A null reference is considered to be less than any reference that is not null.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7547-129">다음 예에서는 구현 하는 <xref:System.Collections.Generic.IComparer%601> 형식의 개체를 비교 하는 인터페이스 `Box` 해당 차원에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-129">The following example implements the <xref:System.Collections.Generic.IComparer%601> interface to compare objects of type `Box` according to their dimensions.</span></span> <span data-ttu-id="e7547-130">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Collections.Generic.Comparer%601> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e7547-130">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#7)]
 [!code-vb[System.Collections.Generic.BoxCompare#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>