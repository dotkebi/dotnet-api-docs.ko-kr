<Type Name="EqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.EqualityComparer&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="979c4dd593b4111a02ae18eb62e8095e425f393a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58708186" /></Metadata><TypeSignature Language="C#" Value="public abstract class EqualityComparer&lt;T&gt; : System.Collections.Generic.IEqualityComparer&lt;T&gt;, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EqualityComparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt;, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.EqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EqualityComparer(Of T)&#xA;Implements IEqualityComparer, IEqualityComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class EqualityComparer abstract : System::Collections::Generic::IEqualityComparer&lt;T&gt;, System::Collections::IEqualityComparer" />
  <TypeSignature Language="F#" Value="type EqualityComparer&lt;'T&gt; = class&#xA;    interface IEqualityComparer&#xA;    interface IEqualityComparer&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="017f7-101">비교할 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-101">The type of objects to compare.</span></span></typeparam>
    <summary><span data-ttu-id="017f7-102"><see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 제네릭 인터페이스의 구현에 대한 기본 클래스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="017f7-103">사용자 지정 구현을 제공 하도록이 클래스에서 파생 된 <xref:System.Collections.Generic.IEqualityComparer%601> 컬렉션 사용에 대 한 제네릭 인터페이스와 같은 클래스를 <xref:System.Collections.Generic.Dictionary%602> 제네릭 클래스 또는와 같은 메서드를 사용 하 여 <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface for use with collection classes such as the <xref:System.Collections.Generic.Dictionary%602> generic class, or with methods such as <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="017f7-104"><xref:System.Collections.Generic.EqualityComparer%601.Default%2A> 속성 검사 여부를 입력 합니다. `T` 구현를 <xref:System.IEquatable%601?displayProperty=nameWithType> 제네릭 인터페이스 및 그렇다면 반환를 <xref:System.Collections.Generic.EqualityComparer%601> 구현의 호출 하는 <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="017f7-104">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> generic interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that invokes the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="017f7-105">를 반환 합니다는 <xref:System.Collections.Generic.EqualityComparer%601>에서 제공한 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-105">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601>, as provided by `T`.</span></span>  
  
 <span data-ttu-id="017f7-106">파생 되는 것이 좋습니다는 <xref:System.Collections.Generic.EqualityComparer%601> 구현 하는 대신 클래스는 <xref:System.Collections.Generic.IEqualityComparer%601> 인터페이스를 <xref:System.Collections.Generic.EqualityComparer%601> 사용 하 여 같음을 테스트 클래스는 <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> 메서드 대신는 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="017f7-106">We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method instead of the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="017f7-107">이 일치를 `Contains`, `IndexOf`, `LastIndexOf`, 및 `Remove` 메서드를 <xref:System.Collections.Generic.Dictionary%602> 클래스 및 기타 제네릭 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-107">This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="017f7-108">다음 예제에서는 형식 개체의 사전 컬렉션 `Box` 같음 비교자를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-108">The following example creates a dictionary collection of objects of type `Box` with an equality comparer.</span></span> <span data-ttu-id="017f7-109">두 상자는 차원을 동일한 경우 같은 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-109">Two boxes are considered equal if their dimensions are the same.</span></span> <span data-ttu-id="017f7-110">컬렉션에 있는 상자를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-110">It then adds the boxes to the collection.</span></span>  
  
 <span data-ttu-id="017f7-111">다른 방식으로 같은지 여부를 정의 하는 같음 비교자를 사용 하 여 사전 다시 만들어집니다. 해당 볼륨이 동일한 두 상자 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-111">The dictionary is recreated with an equality comparer that defines equality in a different way: Two boxes are considered equal if their volumes are the same.</span></span>  
  
 [!code-csharp[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EqualityComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EqualityComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="017f7-112"><see cref="T:System.Collections.Generic.EqualityComparer`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-112">Initializes a new instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.EqualityComparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.EqualityComparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.EqualityComparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As EqualityComparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::EqualityComparer&lt;T&gt; ^ Default { System::Collections::Generic::EqualityComparer&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Collections.Generic.EqualityComparer&lt;'T&gt;" Usage="System.Collections.Generic.EqualityComparer&lt;'T&gt;.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.EqualityComparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="017f7-113">제네릭 인수에서 지정한 형식의 기본 같음 비교자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-113">Returns a default equality comparer for the type specified by the generic argument.</span></span></summary>
        <value><span data-ttu-id="017f7-114"><typeparamref name="T" /> 형식에 대한 <see cref="T:System.Collections.Generic.EqualityComparer`1" /> 클래스의 기본 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-114">The default instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class for type <typeparamref name="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="017f7-115"><xref:System.Collections.Generic.EqualityComparer%601.Default%2A> 속성 검사 여부를 입력 합니다. `T` 구현 합니다 <xref:System.IEquatable%601?displayProperty=nameWithType> 인터페이스 및 그렇다면 반환는 <xref:System.Collections.Generic.EqualityComparer%601> 해당 구현을 사용 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-115">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses that implementation.</span></span> <span data-ttu-id="017f7-116">를 반환 합니다는 <xref:System.Collections.Generic.EqualityComparer%601> 의 재정의 사용 하는 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 하 고 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> 제공한 `T`합니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-116">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses the overrides of <xref:System.Object.Equals%2A?displayProperty=nameWithType> and <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> provided by `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="017f7-117">다음 예제에서는 컬렉션의 요소를 포함 하는 `Box` 입력 한 다음 다른 상자를 호출 하 여 일치 하는 상자의 검색를 `FindFirst` 메서드를 두 번입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-117">The following example creates a collection that contains elements of the `Box` type and then searches it for a box matching another box by calling the `FindFirst` method, twice.</span></span>
  
 <span data-ttu-id="017f7-118">첫 번째 검색 즉, 모든 같음 비교자를 지정 하지 않습니다 `FindFirst` 사용 하 여 <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> 상자 같은지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="017f7-118">The first search does not specify any equality comparer, which means `FindFirst` uses <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> to determine equality of boxes.</span></span> <span data-ttu-id="017f7-119">구현에서 사용 하는 <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> 의 메서드를 `Box` 클래스.</span><span class="sxs-lookup"><span data-stu-id="017f7-119">That in turn uses the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method in the `Box` class.</span></span> <span data-ttu-id="017f7-120">두 상자는 차원을 동일한 경우 같은 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-120">Two boxes are considered equal if their dimensions are the same.</span></span>
  
 <span data-ttu-id="017f7-121">두 번째 검색은 지정 된 같음 비교자 (`BoxEqVolume`) 볼륨으로 같은지 여부를 정의 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-121">The second search specifies an equality comparer (`BoxEqVolume`) that defines equality by volume.</span></span> <span data-ttu-id="017f7-122">해당 볼륨이 동일한 두 상자 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-122">Two boxes are considered equal if their volumes are the same.</span></span>
  
 [!code-csharp[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/cs/program.cs)]
 [!code-vb[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/vb/program.vb)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
        <altmember cref="T:System.IEquatable`1" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public abstract bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Equals(T x, T y);" />
      <MemberSignature Language="F#" Value="override this.Equals : 'T * 'T -&gt; bool" Usage="equalityComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="017f7-123">비교할 첫 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-123">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="017f7-124">비교할 두 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-124">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="017f7-125">파생 클래스에서 재정의된 경우 <typeparamref name="T" /> 형식의 두 개체가 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-125">When overridden in a derived class, determines whether two objects of type <typeparamref name="T" /> are equal.</span></span></summary>
        <returns><span data-ttu-id="017f7-126">지정한 개체가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-126"><see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="017f7-127"><xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> 메서드는 재귀, 대칭, 및 전이적입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-127">The <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> method is reflexive, symmetric, and transitive.</span></span> <span data-ttu-id="017f7-128">즉, 반환 `true` 자체를 사용 하 여 개체를 비교 하는 데 사용 하는 경우 `true` 두 개체에 대 한 `x` 하 고 `y` 있으면 `true` 에 대 한 `y` 하 고 `x`; 및 `true` 두 개체에 대 한 `x` 및 `z` 경우 `true` 에대한`x` 하 고 `y` 그리고 `true` 에 대 한 `y` 고 `z`입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-128">That is, it returns `true` if used to compare an object with itself; `true` for two objects `x` and `y` if it is `true` for `y` and `x`; and `true` for two objects `x` and `z` if it is `true` for `x` and `y` and also `true` for `y` and `z`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="017f7-129">구현이 있는지를 확인 하는 데 필요한 합니다 <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> 메서드가 반환 되는 <see langword="true" /> 두 개체에 대 한 <paramref name="x" /> 및 <paramref name="y" />, 반환한 값을 <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> 메서드를 <paramref name="x" /> 에 대 한 반환 값과 같아야 <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="017f7-129">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="y" />, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <paramref name="x" /> must equal the value returned for <paramref name="y" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetHashCode(T obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : 'T -&gt; int" Usage="equalityComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="017f7-130">해시 코드를 가져오는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-130">The object for which to get a hash code.</span></span></param>
        <summary><span data-ttu-id="017f7-131">파생 클래스에서 재정의된 경우 해시 테이블 같은 해시 알고리즘과 데이터 구조의 지정한 개체에 대한 해시 함수의 역할을 합니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-131">When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="017f7-132">지정한 개체의 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-132">A hash code for the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="017f7-133"><paramref name="obj" /> 형식이 참조 형식이고 <paramref name="obj" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="017f7-133">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="017f7-134">구현이 있는지를 확인 하는 데 필요한 합니다 <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> 메서드가 반환 되는 <see langword="true" /> 두 개체에 대 한 <paramref name="x" /> 및 <paramref name="y" />, 반환한 값을 <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> 메서드를 <paramref name="x" /> 에 대 한 반환 값과 같아야 <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="017f7-134">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="y" />, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <paramref name="x" /> must equal the value returned for <paramref name="y" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="017f7-135">비교할 첫 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-135">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="017f7-136">비교할 두 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-136">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="017f7-137">지정한 개체가 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-137">Determines whether the specified objects are equal.</span></span></summary>
        <returns><span data-ttu-id="017f7-138">지정한 개체가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-138"><see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="017f7-139">이 메서드는에 대 한 래퍼를 <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> 메서드 이므로 `obj` 제네릭 인수에서 지정 된 형식으로 캐스팅 되어야 합니다 `T` 현재 인스턴스의 합니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-139">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="017f7-140">로 캐스팅할 수 없는 경우 `T`, <xref:System.ArgumentException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-140">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="017f7-141">비교 `null` 허용 되 고 예외를 생성 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-141">Comparing `null` is allowed and does not generate an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="017f7-142"><paramref name="x" /> 또는 <paramref name="y" />가 <typeparamref name="T" /> 형식으로 캐스팅할 수 없는 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="017f7-142"><paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="017f7-143">해시 코드가 반환될 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-143">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span></span></param>
        <summary><span data-ttu-id="017f7-144">지정한 개체의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-144">Returns a hash code for the specified object.</span></span></summary>
        <returns><span data-ttu-id="017f7-145">지정한 개체의 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-145">A hash code for the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="017f7-146">이 메서드는에 대 한 래퍼를 <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> 메서드 이므로 `obj` 제네릭 형식 인수에 의해 지정 된 형식으로 캐스팅 될 수 있는 형식 이어야 합니다 `T` 현재 인스턴스의 합니다.</span><span class="sxs-lookup"><span data-stu-id="017f7-146">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> method, so `obj` must be a type that can be cast to the type specified by the generic type argument `T` of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="017f7-147"><paramref name="obj" /> 형식이 참조 형식이고 <paramref name="obj" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="017f7-147">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="017f7-148">또는</span><span class="sxs-lookup"><span data-stu-id="017f7-148">-or-</span></span> 
 <span data-ttu-id="017f7-149"><paramref name="obj" />가 <typeparamref name="T" /> 형식으로 캐스팅될 수 없는 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="017f7-149"><paramref name="obj" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>