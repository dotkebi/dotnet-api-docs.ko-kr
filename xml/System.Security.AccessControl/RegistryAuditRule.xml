<Type Name="RegistryAuditRule" FullName="System.Security.AccessControl.RegistryAuditRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="416b473081ad1ca1cf72c9215a6160f6c95affca" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56765955" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegistryAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type RegistryAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d677d-101">사용자 또는 그룹에 대해 감사할 액세스 권한 집합을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-101">Represents a set of access rights to be audited for a user or group.</span></span> <span data-ttu-id="d677d-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d677d-103"><xref:System.Security.AccessControl.RegistryAuditRule> 클래스는 레지스트리 키에 대해 Windows 액세스 제어 보안을 관리 하기 위한.NET Framework에서 제공 하는 클래스 집합 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-103">The <xref:System.Security.AccessControl.RegistryAuditRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on registry keys.</span></span> <span data-ttu-id="d677d-104">이러한 클래스와 기본 Windows 액세스 제어 구조 간의 관계가 개요를 참조 하세요. <xref:System.Security.AccessControl.RegistrySecurity>합니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-104">For an overview of these classes and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.RegistrySecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d677d-105">Windows 액세스 제어 보안 레지스트리 키에만 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-105">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="d677d-106">키에 저장 하는 개별 키/값 쌍에 적용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-106">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="d677d-107">레지스트리 키에 현재 적용 된 감사 규칙의 목록의 사용 합니다 <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> 메서드를를 <xref:System.Security.AccessControl.RegistrySecurity> 개체를 사용 하 여 해당 <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> 컬렉션을 가져오는 방법 <xref:System.Security.AccessControl.RegistryAuditRule> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-107">To get a list of the audit rules currently applied to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.RegistryAuditRule> objects.</span></span>  
  
 <span data-ttu-id="d677d-108"><xref:System.Security.AccessControl.RegistryAuditRule> 개체는 기본 임의 액세스 제어 목록 (DACL)에 대 한 액세스 제어 항목을 사용 하 여 한 일 매핑되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-108"><xref:System.Security.AccessControl.RegistryAuditRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="d677d-109">집합에 도달할 때의 모든 감사 레지스트리 키에 대 한 규칙, 집합은 현재 모든 액세스 제어 항목을 나타내는 데 필요한 규칙의 최소 수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-109">When you get the set of all audit rules for a registry key, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d677d-110">기본 액세스 제어 항목에 적용 하 고 규칙을 제거 하는 대로 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="d677d-111">규칙의 정보는 액세스 제어 항목의 최소 수를 유지 하기 위해 가능한 경우 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="d677d-112">따라서 규칙의 현재 목록을 읽을 때 추가한 모든 규칙의 목록을 똑같이 하지 보일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="d677d-113">사용 하 여 <xref:System.Security.AccessControl.RegistryAuditRule> 사용자 또는 그룹에 대해 감사할 액세스 권한을 지정 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-113">Use <xref:System.Security.AccessControl.RegistryAuditRule> objects to specify access rights to be audited for a user or group.</span></span> <span data-ttu-id="d677d-114">레지스트리 키에 규칙을 적용 하려면 사용 합니다 <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> 메서드를를 <xref:System.Security.AccessControl.RegistrySecurity> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-114">To apply a rule to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="d677d-115">수정 된 <xref:System.Security.AccessControl.RegistrySecurity> 규칙 추가를 사용 하 여 해당 메서드를 사용 하 여 개체를 <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> 보안 개체를 다시 연결 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-115">Modify the <xref:System.Security.AccessControl.RegistrySecurity> object by using its methods to add the rule, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d677d-116">변경한을 <xref:System.Security.AccessControl.RegistrySecurity> 호출할 때까지 개체에서는 레지스트리 키의 액세스 수준을 주지 않습니다는 <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> 레지스트리 키 변경 된 보안 개체를 할당 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-116">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="d677d-117"><xref:System.Security.AccessControl.RegistryAuditRule> 개체는 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-117"><xref:System.Security.AccessControl.RegistryAuditRule> objects are immutable.</span></span> <span data-ttu-id="d677d-118">메서드를 사용 하 여 레지스트리 키에 대 한 보안 수정 되는 <xref:System.Security.AccessControl.RegistrySecurity> 클래스 추가 하거나 제거 하려면 규칙, 이렇게 하면 기본 액세스 제어 항목 수정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-118">Security for a registry key is modified by using the methods of the <xref:System.Security.AccessControl.RegistrySecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d677d-119"><see cref="T:System.Security.AccessControl.RegistryAuditRule" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-119">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="d677d-120">규칙을 적용할 사용자나 그룹입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-120">The user or group the rule applies to.</span></span> <span data-ttu-id="d677d-121">이 값은 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식이거나 <see cref="T:System.Security.Principal.NTAccount" />와 같이 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식으로 변환할 수 있는 형식이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-121">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="registryRights"><span data-ttu-id="d677d-122">감사할 액세스 종류를 지정하는 <see cref="T:System.Security.AccessControl.RegistryRights" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-122">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the kinds of access to audit.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="d677d-123">현재 키의 하위 키에 감사 규칙을 적용할지 여부를 지정하는 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-123">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying whether the audit rule applies to subkeys of the current key.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="d677d-124">현재 키의 하위 키에 상속된 감사 규칙을 전파하는 방법에 영향을 주는 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-124">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that affect the way an inherited audit rule is propagated to subkeys of the current key.</span></span></param>
        <param name="flags"><span data-ttu-id="d677d-125">성공 또는 실패를 감사할지 아니면 둘 다 감사할지를 지정하는 <see cref="T:System.Security.AccessControl.AuditFlags" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-125">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</span></span></param>
        <summary><span data-ttu-id="d677d-126"><see cref="T:System.Security.AccessControl.RegistryAuditRule" /> 클래스의 새 인스턴스를 초기화하여 감사할 사용자 또는 그룹, 감사 권한, 상속 고려 여부 및 성공, 실패 또는 두 가지 모두에 대한 감사 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class, specifying the user or group to audit, the rights to audit, whether to take inheritance into account, and whether to audit success, failure, or both.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d677d-127">레지스트리 키에 대 한 의미 있는 유일한 상속 플래그 이므로 모든 레지스트리 키가 컨테이너를 <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-127">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="d677d-128">이 플래그를 지정 하지 않으면 전파 플래그는 무시 되 고 즉시 키만 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-128">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="d677d-129">플래그가 있는 경우 규칙은 다음 표에 나와 있는 것 처럼 전파 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-129">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="d677d-130">테이블 S 자식 하위 키 CS와 GS 손자 하위 키를 사용 하 여 하위 키가 있는 것을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-130">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="d677d-131">즉, 최하위 하위 키에 대 한 경로가 S\CS\GS 합니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-131">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="d677d-132">전파 플래그</span><span class="sxs-lookup"><span data-stu-id="d677d-132">Propagation flags</span></span>|<span data-ttu-id="d677d-133">S</span><span class="sxs-lookup"><span data-stu-id="d677d-133">S</span></span>|<span data-ttu-id="d677d-134">CS</span><span class="sxs-lookup"><span data-stu-id="d677d-134">CS</span></span>|<span data-ttu-id="d677d-135">GS</span><span class="sxs-lookup"><span data-stu-id="d677d-135">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="d677d-136">X</span><span class="sxs-lookup"><span data-stu-id="d677d-136">X</span></span>|<span data-ttu-id="d677d-137">X</span><span class="sxs-lookup"><span data-stu-id="d677d-137">X</span></span>|<span data-ttu-id="d677d-138">X</span><span class="sxs-lookup"><span data-stu-id="d677d-138">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="d677d-139">X</span><span class="sxs-lookup"><span data-stu-id="d677d-139">X</span></span>|<span data-ttu-id="d677d-140">X</span><span class="sxs-lookup"><span data-stu-id="d677d-140">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="d677d-141">X</span><span class="sxs-lookup"><span data-stu-id="d677d-141">X</span></span>|<span data-ttu-id="d677d-142">X</span><span class="sxs-lookup"><span data-stu-id="d677d-142">X</span></span>|  
|<span data-ttu-id="d677d-143"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="d677d-143"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="d677d-144">X</span><span class="sxs-lookup"><span data-stu-id="d677d-144">X</span></span>||  
  
 <span data-ttu-id="d677d-145">손자 하위 키에 대 한 패턴에 포함 된 모든 하위 키를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-145">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="d677d-146">예를 들어 경우는 <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> 에 대 한 플래그가 지정 된 `inheritanceFlags` 하며 <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> 전파 플래그를 지정 `propagationFlags`,이 규칙을 직접 하위 키에 적용 되지 않습니다 하지만 모든 하위 키 및 모든 직계 자식 하위 키에 적용 하는 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-146">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d677d-147">지정할 수는 있지만 합니다 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> 플래그 `inheritanceFlags`, 이렇게 지점이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-147">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="d677d-148">액세스 제어를 위해 하위 키에서 이름/값 쌍을 없는 별도 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-148">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="d677d-149">이름/값 쌍에 액세스 권한은 하위 키의 사용 권한에 따라 제어 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-149">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="d677d-150">또한 모든 하위 컨테이너 이므로 (즉, 이러한 포함할 수 있습니다 다른 하위 키), 영향을 받지 않습니다는 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-150">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="d677d-151">마지막으로, 지정 된 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> 플래그 규칙 유지 관리를 호환 규칙의 일반 조합은 방해가 되기 때문에 불필요 하 게 복잡해 집니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-151">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d677d-152"><paramref name="eventRights" />가 잘못된 값을 지정하는 경우</span><span class="sxs-lookup"><span data-stu-id="d677d-152"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="d677d-153">또는</span><span class="sxs-lookup"><span data-stu-id="d677d-153">-or-</span></span> 
 <span data-ttu-id="d677d-154"><paramref name="flags" />가 잘못된 값을 지정하는 경우</span><span class="sxs-lookup"><span data-stu-id="d677d-154"><paramref name="flags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="d677d-155">또는</span><span class="sxs-lookup"><span data-stu-id="d677d-155">-or-</span></span> 
 <span data-ttu-id="d677d-156"><paramref name="inheritanceFlags" />가 잘못된 값을 지정하는 경우</span><span class="sxs-lookup"><span data-stu-id="d677d-156"><paramref name="inheritanceFlags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="d677d-157">또는</span><span class="sxs-lookup"><span data-stu-id="d677d-157">-or-</span></span> 
 <span data-ttu-id="d677d-158"><paramref name="propagationFlags" />가 잘못된 값을 지정하는 경우</span><span class="sxs-lookup"><span data-stu-id="d677d-158"><paramref name="propagationFlags" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d677d-159"><paramref name="identity" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-159"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d677d-160">또는</span><span class="sxs-lookup"><span data-stu-id="d677d-160">-or-</span></span> 
 <span data-ttu-id="d677d-161"><paramref name="registryRights" />가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-161"><paramref name="registryRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d677d-162"><paramref name="identity" />의 형식이 <see cref="T:System.Security.Principal.SecurityIdentifier" />도 아니고 <see cref="T:System.Security.Principal.NTAccount" />와 같이 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식으로 변환할 수 있는 형식도 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="d677d-162"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="d677d-163">규칙을 적용할 사용자나 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-163">The name of the user or group the rule applies to.</span></span></param>
        <param name="registryRights"><span data-ttu-id="d677d-164">감사할 액세스 종류를 지정하는 <see cref="T:System.Security.AccessControl.RegistryRights" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-164">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the kinds of access to audit.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="d677d-165">현재 키의 하위 키에 감사 규칙을 적용할지 여부를 지정하는 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 플래그의 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-165">A combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags that specifies whether the audit rule applies to subkeys of the current key.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="d677d-166">현재 키의 하위 키에 상속된 감사 규칙을 전파하는 방법에 영향을 주는 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 플래그의 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-166">A combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags that affect the way an inherited audit rule is propagated to subkeys of the current key.</span></span></param>
        <param name="flags"><span data-ttu-id="d677d-167">성공 또는 실패를 감사할지 아니면 둘 다 감사할지를 지정하는 <see cref="T:System.Security.AccessControl.AuditFlags" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-167">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</span></span></param>
        <summary><span data-ttu-id="d677d-168"><see cref="T:System.Security.AccessControl.RegistryAuditRule" /> 클래스의 새 인스턴스를 초기화하여 감사할 사용자 또는 그룹의 이름, 감사 권한, 상속 고려 여부 및 성공, 실패 또는 두 가지 모두에 대한 감사 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-168">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class, specifying the name of the user or group to audit, the rights to audit, whether to take inheritance into account, and whether to audit success, failure, or both.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d677d-169">레지스트리 키에 대 한 의미 있는 유일한 상속 플래그 이므로 모든 레지스트리 키가 컨테이너를 <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-169">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="d677d-170">이 플래그를 지정 하지 않으면 전파 플래그는 무시 되 고 즉시 키만 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-170">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="d677d-171">플래그가 있는 경우 규칙은 다음 표에 나와 있는 것 처럼 전파 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-171">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="d677d-172">테이블 S 자식 하위 키 CS와 GS 손자 하위 키를 사용 하 여 하위 키가 있는 것을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-172">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="d677d-173">즉, 최하위 하위 키에 대 한 경로가 S\CS\GS 합니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-173">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="d677d-174">전파 플래그</span><span class="sxs-lookup"><span data-stu-id="d677d-174">Propagation flags</span></span>|<span data-ttu-id="d677d-175">S</span><span class="sxs-lookup"><span data-stu-id="d677d-175">S</span></span>|<span data-ttu-id="d677d-176">CS</span><span class="sxs-lookup"><span data-stu-id="d677d-176">CS</span></span>|<span data-ttu-id="d677d-177">GS</span><span class="sxs-lookup"><span data-stu-id="d677d-177">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="d677d-178">X</span><span class="sxs-lookup"><span data-stu-id="d677d-178">X</span></span>|<span data-ttu-id="d677d-179">X</span><span class="sxs-lookup"><span data-stu-id="d677d-179">X</span></span>|<span data-ttu-id="d677d-180">X</span><span class="sxs-lookup"><span data-stu-id="d677d-180">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="d677d-181">X</span><span class="sxs-lookup"><span data-stu-id="d677d-181">X</span></span>|<span data-ttu-id="d677d-182">X</span><span class="sxs-lookup"><span data-stu-id="d677d-182">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="d677d-183">X</span><span class="sxs-lookup"><span data-stu-id="d677d-183">X</span></span>|<span data-ttu-id="d677d-184">X</span><span class="sxs-lookup"><span data-stu-id="d677d-184">X</span></span>|  
|<span data-ttu-id="d677d-185"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="d677d-185"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="d677d-186">X</span><span class="sxs-lookup"><span data-stu-id="d677d-186">X</span></span>||  
  
 <span data-ttu-id="d677d-187">손자 하위 키에 대 한 패턴에 포함 된 모든 하위 키를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-187">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="d677d-188">예를 들어 경우는 <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> 에 대 한 플래그가 지정 된 `inheritanceFlags` 하며 <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> 전파 플래그를 지정 `propagationFlags`,이 규칙을 직접 하위 키에 적용 되지 않습니다 하지만 모든 하위 키 및 모든 직계 자식 하위 키에 적용 하는 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-188">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d677d-189">지정할 수는 있지만 합니다 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> 플래그 `inheritanceFlags`, 이렇게 지점이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-189">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="d677d-190">액세스 제어를 위해 하위 키에서 이름/값 쌍을 없는 별도 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-190">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="d677d-191">이름/값 쌍에 액세스 권한은 하위 키의 사용 권한에 따라 제어 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-191">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="d677d-192">또한 모든 하위 컨테이너 이므로 (즉, 이러한 포함할 수 있습니다 다른 하위 키), 영향을 받지 않습니다는 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-192">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="d677d-193">마지막으로, 지정 된 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> 플래그 규칙 유지 관리를 호환 규칙의 일반 조합은 방해가 되기 때문에 불필요 하 게 복잡해 집니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-193">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 <span data-ttu-id="d677d-194">이 생성자는 만드는 것과 같습니다는 <xref:System.Security.Principal.NTAccount> 개체를 전달 하 여 `identity` 에 <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> 생성자 및 새로 만든 전달 <xref:System.Security.Principal.NTAccount> 개체를 <xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-194">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d677d-195"><paramref name="eventRights" />가 잘못된 값을 지정하는 경우</span><span class="sxs-lookup"><span data-stu-id="d677d-195"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="d677d-196">또는</span><span class="sxs-lookup"><span data-stu-id="d677d-196">-or-</span></span> 
 <span data-ttu-id="d677d-197"><paramref name="flags" />가 잘못된 값을 지정하는 경우</span><span class="sxs-lookup"><span data-stu-id="d677d-197"><paramref name="flags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="d677d-198">또는</span><span class="sxs-lookup"><span data-stu-id="d677d-198">-or-</span></span> 
 <span data-ttu-id="d677d-199"><paramref name="inheritanceFlags" />가 잘못된 값을 지정하는 경우</span><span class="sxs-lookup"><span data-stu-id="d677d-199"><paramref name="inheritanceFlags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="d677d-200">또는</span><span class="sxs-lookup"><span data-stu-id="d677d-200">-or-</span></span> 
 <span data-ttu-id="d677d-201"><paramref name="propagationFlags" />가 잘못된 값을 지정하는 경우</span><span class="sxs-lookup"><span data-stu-id="d677d-201"><paramref name="propagationFlags" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d677d-202"><paramref name="registryRights" />가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-202"><paramref name="registryRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d677d-203"><paramref name="identity" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-203"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d677d-204">또는</span><span class="sxs-lookup"><span data-stu-id="d677d-204">-or-</span></span> 
 <span data-ttu-id="d677d-205"><paramref name="identity" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="d677d-205"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="d677d-206">또는</span><span class="sxs-lookup"><span data-stu-id="d677d-206">-or-</span></span> 
 <span data-ttu-id="d677d-207"><paramref name="identity" />이 512자보다 깁니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-207"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryRights : System.Security.AccessControl.RegistryRights" Usage="System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d677d-208">감사 규칙의 영향을 받는 액세스 권한을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-208">Gets the access rights affected by the audit rule.</span></span></summary>
        <value><span data-ttu-id="d677d-209">감사 규칙의 영향을 받는 권한을 나타내는 <see cref="T:System.Security.AccessControl.RegistryRights" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-209">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values that indicates the rights affected by the audit rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d677d-210"><xref:System.Security.AccessControl.RegistryAuditRule> 개체는 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-210"><xref:System.Security.AccessControl.RegistryAuditRule> objects are immutable.</span></span> <span data-ttu-id="d677d-211">다른 사용자, 다른 권한 또는 서로 다른 조합을 나타내는 새 감사 규칙을 만들 수 있습니다 <xref:System.Security.AccessControl.AuditFlags> 플래그 있지만 기존 감사 규칙을 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d677d-211">You can create a new audit rule representing a different user, different rights, or a different combination of <xref:System.Security.AccessControl.AuditFlags> flags, but you cannot modify an existing audit rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>