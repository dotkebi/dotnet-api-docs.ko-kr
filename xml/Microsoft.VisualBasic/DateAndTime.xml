<Type Name="DateAndTime" FullName="Microsoft.VisualBasic.DateAndTime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="deadd67a892db7c9d1d1d3605adc1e0e3852ba22" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56354795" /></Metadata><TypeSignature Language="C#" Value="public sealed class DateAndTime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DateAndTime extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.DateAndTime" />
  <TypeSignature Language="VB.NET" Value="Public Module DateAndTime" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateAndTime sealed" />
  <TypeSignature Language="F#" Value="type DateAndTime = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c2644-101"><see langword="DateAndTime" /> 모듈에는 날짜 및 시간 작업에 사용되는 프로시저와 속성이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-101">The <see langword="DateAndTime" /> module contains the procedures and properties used in date and time operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-102">이 모듈에는 Visual Basic 언어 키워드 및 현재 날짜 또는 시간, 날짜를 계산, 날짜 또는 시간을 반환, 날짜 또는 시간을 설정 또는 프로세스의 기간을 시간 하는 런타임 라이브러리 멤버를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-102">This module supports the Visual Basic language keywords and run-time library members that get the current date or time, perform date calculations, return a date or time, set the date or time, or time the duration of a process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2644-103">이 예제에서는 `Today` 속성을 현재 시스템 날짜를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-103">This example uses the `Today` property to return the current system date.</span></span>  
  
```vb  
Dim thisDate As Date  
thisDate = Today   
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/dates-and-times-summary.md"><span data-ttu-id="c2644-104">날짜 및 시간 요약</span><span class="sxs-lookup"><span data-stu-id="c2644-104">Dates and Times Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="c2644-105">키워드(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c2644-105">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="c2644-106">Visual Basic 런타임 라이브러리 멤버</span><span class="sxs-lookup"><span data-stu-id="c2644-106">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="DateAdd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c2644-107">지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 <see langword="Date" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-107">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (Microsoft.VisualBasic.DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(valuetype Microsoft.VisualBasic.DateInterval Interval, float64 Number, valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As DateInterval, Number As Double, DateValue As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(Microsoft::VisualBasic::DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member DateAdd : Microsoft.VisualBasic.DateInterval * double * DateTime -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateAdd (Interval, Number, DateValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="Number" Type="System.Double" />
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="c2644-108">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-108">Required.</span></span> <span data-ttu-id="c2644-109">추가할 시간 간격을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-109">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the time interval you want to add.</span></span></param>
        <param name="Number"><span data-ttu-id="c2644-110">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-110">Required.</span></span> <span data-ttu-id="c2644-111">더할 간격의 수를 나타내는 부동 소수점 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-111">Floating-point expression representing the number of intervals you want to add.</span></span> <span data-ttu-id="c2644-112">미래의 날짜/시간 값을 구하는 경우에는 양수이고 과거의 날짜/시간 값을 구하는 경우에는 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-112">It can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</span></span> <span data-ttu-id="c2644-113"><paramref name="Interval" />이 시간, 분 또는 초로 지정되는 경우에는 소수 부분이 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-113">It can contain a fractional part when <paramref name="Interval" /> specifies hours, minutes, or seconds.</span></span> <span data-ttu-id="c2644-114">다른 <paramref name="Interval" /> 값의 경우에 <paramref name="Number" />의 소수 부분은 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-114">For other values of <paramref name="Interval" />, any fractional part of <paramref name="Number" /> is ignored.</span></span></param>
        <param name="DateValue"><span data-ttu-id="c2644-115">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-115">Required.</span></span> <span data-ttu-id="c2644-116">간격을 더할 날짜와 시간을 나타내는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-116">An expression representing the date and time to which the interval is to be added.</span></span> <span data-ttu-id="c2644-117"><paramref name="DateValue" /> 자체는 호출 프로그램에서 변경되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-117"><paramref name="DateValue" /> itself is not changed in the calling program.</span></span></param>
        <summary><span data-ttu-id="c2644-118">지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-118">Returns a value containing a date and time value to which a specified time interval has been added.</span></span></summary>
        <returns><span data-ttu-id="c2644-119">지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-119">A value containing a date and time value to which a specified time interval has been added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-120">사용할 수는 `DateAdd` 함수를 추가 하거나 날짜에서 지정 된 시간 간격을 뺍니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-120">You can use the `DateAdd` function to add or subtract a specified time interval from a date.</span></span> <span data-ttu-id="c2644-121">예를 들어, 이제 오늘 또는 앞 45 분에서 30 일 날짜를 계산할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-121">For example, you can calculate a date 30 days from today or a time 45 minutes before now.</span></span>  
  
 <span data-ttu-id="c2644-122">날짜를 추가 하려면 `DateValue`를 사용할 수 있습니다 `DateInterval.Day`를 `DateInterval.DayOfYear`, 또는 `DateInterval.Weekday`합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-122">To add days to `DateValue`, you can use `DateInterval.Day`, `DateInterval.DayOfYear`, or `DateInterval.Weekday`.</span></span> <span data-ttu-id="c2644-123">이 때문에 동등한 것으로 처리 됩니다 `DayOfYear` 및 `Weekday` 의미 있는 간격 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-123">These are treated as equivalent because `DayOfYear` and `Weekday` are not meaningful time intervals.</span></span>  
  
 <span data-ttu-id="c2644-124">`DateAdd` 함수는 잘못 된 날짜를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-124">The `DateAdd` function never returns an invalid date.</span></span> <span data-ttu-id="c2644-125">필요한 경우 결과 날짜의 일 부분 결과 결과 연도 월의 마지막 날 하향 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-125">If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</span></span> <span data-ttu-id="c2644-126">다음 예제에서는 1 월 31 일에 1 개월을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-126">The following example adds one month to January 31:</span></span>  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 <span data-ttu-id="c2644-127">이 예에서 `DateAdd` 반환 `#2/28/1995#`아니라 `#2/31/1995#`합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-127">In this example, `DateAdd` returns `#2/28/1995#`, not `#2/31/1995#`.</span></span> <span data-ttu-id="c2644-128">하는 경우 `DateValue` 됩니다 `#1/31/1996#`를 반환 `#2/29/1996#` 1996 윤년 인지 하기 때문에.</span><span class="sxs-lookup"><span data-stu-id="c2644-128">If `DateValue` is `#1/31/1996#`, it returns `#2/29/1996#` because 1996 is a leap year.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c2644-129">`DateAdd` 현재 달력 설정을 사용 합니다 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성을 <xref:System.Globalization.CultureInfo> 클래스는 <xref:System.Globalization> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-129">`DateAdd` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="c2644-130">기본값 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 여 값을 결정 **Control Panel** 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-130">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="c2644-131">하므로 모든 `Date` 값을 지원 한 <xref:System.DateTime> 구조를 해당 메서드에 제공 시간 간격을 추가할 때 추가 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-131">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in adding time intervals.</span></span> <span data-ttu-id="c2644-132">예를 들어 일에 가장 가까운 밀리초로 반올림의 소수를 추가할 수 있습니다는 `Date` 같이 변수:</span><span class="sxs-lookup"><span data-stu-id="c2644-132">For example, you can add a fractional number of days, rounded to the nearest millisecond, to a `Date` variable as follows:</span></span>  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 <span data-ttu-id="c2644-133">`Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-133">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="c2644-134">열거형 값</span><span class="sxs-lookup"><span data-stu-id="c2644-134">Enumeration value</span></span>|<span data-ttu-id="c2644-135">문자열</span><span class="sxs-lookup"><span data-stu-id="c2644-135">String</span></span>|<span data-ttu-id="c2644-136">시간 간격의 단위를 추가 하려면</span><span class="sxs-lookup"><span data-stu-id="c2644-136">Unit of time interval to add</span></span>|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="c2644-137">d</span><span class="sxs-lookup"><span data-stu-id="c2644-137">d</span></span>|<span data-ttu-id="c2644-138">Day 정수 계열 값 잘림</span><span class="sxs-lookup"><span data-stu-id="c2644-138">Day; truncated to integral value</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="c2644-139">y</span><span class="sxs-lookup"><span data-stu-id="c2644-139">y</span></span>|<span data-ttu-id="c2644-140">Day 정수 계열 값 잘림</span><span class="sxs-lookup"><span data-stu-id="c2644-140">Day; truncated to integral value</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="c2644-141">시간</span><span class="sxs-lookup"><span data-stu-id="c2644-141">h</span></span>|<span data-ttu-id="c2644-142">시간입니다. 밀리초 단위로 반올림 반올림</span><span class="sxs-lookup"><span data-stu-id="c2644-142">Hour; rounded to nearest millisecond</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="c2644-143">n</span><span class="sxs-lookup"><span data-stu-id="c2644-143">n</span></span>|<span data-ttu-id="c2644-144">분입니다. 밀리초 단위로 반올림 반올림</span><span class="sxs-lookup"><span data-stu-id="c2644-144">Minute; rounded to nearest millisecond</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="c2644-145">분</span><span class="sxs-lookup"><span data-stu-id="c2644-145">m</span></span>|<span data-ttu-id="c2644-146">개월 정수 계열 값 잘림</span><span class="sxs-lookup"><span data-stu-id="c2644-146">Month; truncated to integral value</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="c2644-147">q</span><span class="sxs-lookup"><span data-stu-id="c2644-147">q</span></span>|<span data-ttu-id="c2644-148">분기; 정수 계열 값 잘림</span><span class="sxs-lookup"><span data-stu-id="c2644-148">Quarter; truncated to integral value</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="c2644-149">초</span><span class="sxs-lookup"><span data-stu-id="c2644-149">s</span></span>|<span data-ttu-id="c2644-150">두 번째; 밀리초 단위로 반올림 반올림</span><span class="sxs-lookup"><span data-stu-id="c2644-150">Second; rounded to nearest millisecond</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="c2644-151">주</span><span class="sxs-lookup"><span data-stu-id="c2644-151">w</span></span>|<span data-ttu-id="c2644-152">Day 정수 계열 값 잘림</span><span class="sxs-lookup"><span data-stu-id="c2644-152">Day; truncated to integral value</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="c2644-153">ww</span><span class="sxs-lookup"><span data-stu-id="c2644-153">ww</span></span>|<span data-ttu-id="c2644-154">주; 정수 계열 값 잘림</span><span class="sxs-lookup"><span data-stu-id="c2644-154">Week; truncated to integral value</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="c2644-155">yyyy</span><span class="sxs-lookup"><span data-stu-id="c2644-155">yyyy</span></span>|<span data-ttu-id="c2644-156">연도입니다. 정수 계열 값 잘림</span><span class="sxs-lookup"><span data-stu-id="c2644-156">Year; truncated to integral value</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c2644-157">이 예에서는 날짜를 사용 하 여는 `DateAdd` 함수, 지정된 된 수의 개월 나중에 해당 날짜를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-157">This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.</span></span>  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c2644-158"><paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-158"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c2644-159"><paramref name="Interval" />가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c2644-159"><paramref name="Interval" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c2644-160">계산된 날짜가 0001년 1월 1일 00:00:00시 이전 또는 9999년 12월 31일 23:59:59시 이후입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-160">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c2644-161">데이터 형식 요약(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c2644-161">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (string Interval, double Number, object DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(string Interval, float64 Number, object DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As String, Number As Double, DateValue As Object) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(System::String ^ Interval, double Number, System::Object ^ DateValue);" />
      <MemberSignature Language="F#" Value="static member DateAdd : string * double * obj -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateAdd (Interval, Number, DateValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="Number" Type="System.Double" />
        <Parameter Name="DateValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="c2644-162">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-162">Required.</span></span> <span data-ttu-id="c2644-163">추가할 시간 간격을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-163">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the time interval you want to add.</span></span></param>
        <param name="Number"><span data-ttu-id="c2644-164">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-164">Required.</span></span> <span data-ttu-id="c2644-165">더할 간격의 수를 나타내는 부동 소수점 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-165">Floating-point expression representing the number of intervals you want to add.</span></span> <span data-ttu-id="c2644-166"><paramref name="Number" />는 미래의 날짜/시간 값을 구하는 경우에는 양수이고 과거의 날짜/시간 값을 구하는 경우에는 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-166"><paramref name="Number" /> can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</span></span> <span data-ttu-id="c2644-167"><paramref name="Interval" />이 시간, 분 또는 초로 지정되는 경우에는 소수 부분이 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-167">It can contain a fractional part when <paramref name="Interval" /> specifies hours, minutes, or seconds.</span></span> <span data-ttu-id="c2644-168">다른 <paramref name="Interval" /> 값의 경우에 <paramref name="Number" />의 소수 부분은 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-168">For other values of <paramref name="Interval" />, any fractional part of <paramref name="Number" /> is ignored.</span></span></param>
        <param name="DateValue"><span data-ttu-id="c2644-169">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-169">Required.</span></span> <span data-ttu-id="c2644-170">간격을 더할 날짜와 시간을 나타내는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-170">An expression representing the date and time to which the interval is to be added.</span></span> <span data-ttu-id="c2644-171"><paramref name="DateValue" /> 자체는 호출 프로그램에서 변경되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-171"><paramref name="DateValue" /> itself is not changed in the calling program.</span></span></param>
        <summary><span data-ttu-id="c2644-172">지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-172">Returns a value containing a date and time value to which a specified time interval has been added.</span></span></summary>
        <returns><span data-ttu-id="c2644-173">지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-173">A value containing a date and time value to which a specified time interval has been added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-174">사용할 수는 `DateAdd` 함수를 추가 하거나 날짜에서 지정 된 시간 간격을 뺍니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-174">You can use the `DateAdd` function to add or subtract a specified time interval from a date.</span></span> <span data-ttu-id="c2644-175">예를 들어, 이제 오늘 또는 앞 45 분에서 30 일 날짜를 계산할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-175">For example, you can calculate a date 30 days from today or a time 45 minutes before now.</span></span>  
  
 <span data-ttu-id="c2644-176">날짜를 추가 하려면 `DateValue`를 사용할 수 있습니다 `DateInterval.Day`를 `DateInterval.DayOfYear`, 또는 `DateInterval.Weekday`합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-176">To add days to `DateValue`, you can use `DateInterval.Day`, `DateInterval.DayOfYear`, or `DateInterval.Weekday`.</span></span> <span data-ttu-id="c2644-177">이 때문에 동등한 것으로 처리 됩니다 `DayOfYear` 및 `Weekday` 의미 있는 간격 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-177">These are treated as equivalent because `DayOfYear` and `Weekday` are not meaningful time intervals.</span></span>  
  
 <span data-ttu-id="c2644-178">`DateAdd` 함수는 잘못 된 날짜를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-178">The `DateAdd` function never returns an invalid date.</span></span> <span data-ttu-id="c2644-179">필요한 경우 결과 날짜의 일 부분 결과 결과 연도 월의 마지막 날 하향 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-179">If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</span></span> <span data-ttu-id="c2644-180">다음 예제에서는 1 월 31 일에 1 개월을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-180">The following example adds one month to January 31:</span></span>  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 <span data-ttu-id="c2644-181">이 예에서 `DateAdd` 반환 `#2/28/1995#`아니라 `#2/31/1995#`합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-181">In this example, `DateAdd` returns `#2/28/1995#`, not `#2/31/1995#`.</span></span> <span data-ttu-id="c2644-182">하는 경우 `DateValue` 됩니다 `#1/31/1996#`를 반환 `#2/29/1996#` 1996 윤년 인지 하기 때문에.</span><span class="sxs-lookup"><span data-stu-id="c2644-182">If `DateValue` is `#1/31/1996#`, it returns `#2/29/1996#` because 1996 is a leap year.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c2644-183">`DateAdd` 현재 달력 설정을 사용 합니다 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성을 <xref:System.Globalization.CultureInfo> 클래스는 <xref:System.Globalization> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-183">`DateAdd` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="c2644-184">기본값 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 여 값을 결정 **Control Panel** 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-184">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="c2644-185">하므로 모든 `Date` 값을 지원 한 <xref:System.DateTime> 구조를 해당 메서드에 제공 시간 간격을 추가할 때 추가 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-185">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in adding time intervals.</span></span> <span data-ttu-id="c2644-186">예를 들어 일에 가장 가까운 밀리초로 반올림의 소수를 추가할 수 있습니다는 `Date` 같이 변수:</span><span class="sxs-lookup"><span data-stu-id="c2644-186">For example, you can add a fractional number of days, rounded to the nearest millisecond, to a `Date` variable as follows:</span></span>  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 <span data-ttu-id="c2644-187">`Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-187">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="c2644-188">열거형 값</span><span class="sxs-lookup"><span data-stu-id="c2644-188">Enumeration value</span></span>|<span data-ttu-id="c2644-189">문자열</span><span class="sxs-lookup"><span data-stu-id="c2644-189">String</span></span>|<span data-ttu-id="c2644-190">시간 간격의 단위를 추가 하려면</span><span class="sxs-lookup"><span data-stu-id="c2644-190">Unit of time interval to add</span></span>|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="c2644-191">d</span><span class="sxs-lookup"><span data-stu-id="c2644-191">d</span></span>|<span data-ttu-id="c2644-192">Day 정수 계열 값 잘림</span><span class="sxs-lookup"><span data-stu-id="c2644-192">Day; truncated to integral value</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="c2644-193">y</span><span class="sxs-lookup"><span data-stu-id="c2644-193">y</span></span>|<span data-ttu-id="c2644-194">Day 정수 계열 값 잘림</span><span class="sxs-lookup"><span data-stu-id="c2644-194">Day; truncated to integral value</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="c2644-195">시간</span><span class="sxs-lookup"><span data-stu-id="c2644-195">h</span></span>|<span data-ttu-id="c2644-196">시간입니다. 밀리초 단위로 반올림 반올림</span><span class="sxs-lookup"><span data-stu-id="c2644-196">Hour; rounded to nearest millisecond</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="c2644-197">n</span><span class="sxs-lookup"><span data-stu-id="c2644-197">n</span></span>|<span data-ttu-id="c2644-198">분입니다. 밀리초 단위로 반올림 반올림</span><span class="sxs-lookup"><span data-stu-id="c2644-198">Minute; rounded to nearest millisecond</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="c2644-199">분</span><span class="sxs-lookup"><span data-stu-id="c2644-199">m</span></span>|<span data-ttu-id="c2644-200">개월 정수 계열 값 잘림</span><span class="sxs-lookup"><span data-stu-id="c2644-200">Month; truncated to integral value</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="c2644-201">q</span><span class="sxs-lookup"><span data-stu-id="c2644-201">q</span></span>|<span data-ttu-id="c2644-202">분기; 정수 계열 값 잘림</span><span class="sxs-lookup"><span data-stu-id="c2644-202">Quarter; truncated to integral value</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="c2644-203">초</span><span class="sxs-lookup"><span data-stu-id="c2644-203">s</span></span>|<span data-ttu-id="c2644-204">두 번째; 밀리초 단위로 반올림 반올림</span><span class="sxs-lookup"><span data-stu-id="c2644-204">Second; rounded to nearest millisecond</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="c2644-205">주</span><span class="sxs-lookup"><span data-stu-id="c2644-205">w</span></span>|<span data-ttu-id="c2644-206">Day 정수 계열 값 잘림</span><span class="sxs-lookup"><span data-stu-id="c2644-206">Day; truncated to integral value</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="c2644-207">ww</span><span class="sxs-lookup"><span data-stu-id="c2644-207">ww</span></span>|<span data-ttu-id="c2644-208">주; 정수 계열 값 잘림</span><span class="sxs-lookup"><span data-stu-id="c2644-208">Week; truncated to integral value</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="c2644-209">yyyy</span><span class="sxs-lookup"><span data-stu-id="c2644-209">yyyy</span></span>|<span data-ttu-id="c2644-210">연도입니다. 정수 계열 값 잘림</span><span class="sxs-lookup"><span data-stu-id="c2644-210">Year; truncated to integral value</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c2644-211">이 예에서는 날짜를 사용 하 여는 `DateAdd` 함수, 지정된 된 수의 개월 나중에 해당 날짜를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-211">This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.</span></span>  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c2644-212"><paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-212"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c2644-213"><paramref name="Interval" />가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c2644-213"><paramref name="Interval" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c2644-214">계산된 날짜가 0001년 1월 1일 00:00:00시 이전 또는 9999년 12월 31일 23:59:59시 이후입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-214">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c2644-215">데이터 형식 요약(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c2644-215">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiff">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c2644-216">두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-216">Returns a value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (Microsoft.VisualBasic.DateInterval Interval, DateTime Date1, DateTime Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime Date1, valuetype System.DateTime Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As DateInterval, Date1 As DateTime, Date2 As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberSignature Language="F#" Value="static member DateDiff : Microsoft.VisualBasic.DateInterval * DateTime * DateTime * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int64" Usage="Microsoft.VisualBasic.DateAndTime.DateDiff (Interval, Date1, Date2, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="Date1" Type="System.DateTime" />
        <Parameter Name="Date2" Type="System.DateTime" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="c2644-217">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-217">Required.</span></span> <span data-ttu-id="c2644-218"><paramref name="Date1" />과 <paramref name="Date2" /> 사이의 시간차 단위로 사용할 시간 간격을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-218">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the time interval you want to use as the unit of difference between <paramref name="Date1" /> and <paramref name="Date2" />.</span></span></param>
        <param name="Date1"><span data-ttu-id="c2644-219">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-219">Required.</span></span> <span data-ttu-id="c2644-220">계산에 사용할 첫째 날짜/시간 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-220">The first date/time value you want to use in the calculation.</span></span></param>
        <param name="Date2"><span data-ttu-id="c2644-221">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-221">Required.</span></span> <span data-ttu-id="c2644-222">계산에 사용할 둘째 날짜/시간 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-222">The second date/time value you want to use in the calculation.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="c2644-223">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-223">Optional.</span></span> <span data-ttu-id="c2644-224">주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-224">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="c2644-225">지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-225">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="WeekOfYear"><span data-ttu-id="c2644-226">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-226">Optional.</span></span> <span data-ttu-id="c2644-227">연도의 첫째 주를 지정하는 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형에서 선택한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-227">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="c2644-228">지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-228">If not specified, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="c2644-229">두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 long 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-229">Returns a long value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></summary>
        <returns><span data-ttu-id="c2644-230">두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 long 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-230">A long value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-231">사용할 수는 `DateDiff` 두 날짜/시간 값 사이 있는 개수 지정 된 시간 간격을 결정 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-231">You can use the `DateDiff` function to determine how many specified time intervals exist between two date/time values.</span></span> <span data-ttu-id="c2644-232">예를 들어 사용할 수 있습니다 `DateDiff` 현재 연도의 끝 사이의 주 수 또는 두 날짜 사이의 일 수를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-232">For example, you might use `DateDiff` to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</span></span>  
  
## <a name="behavior"></a><span data-ttu-id="c2644-233">동작</span><span class="sxs-lookup"><span data-stu-id="c2644-233">Behavior</span></span>  
  
-   <span data-ttu-id="c2644-234">**매개 변수 처리입니다.**</span><span class="sxs-lookup"><span data-stu-id="c2644-234">**Treatment of Parameters.**</span></span> <span data-ttu-id="c2644-235">`DateDiff` 값을 빼고 `Date1` 값에서 `Date2` 차이 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-235">`DateDiff` subtracts the value of `Date1` from the value of `Date2` to produce the difference.</span></span> <span data-ttu-id="c2644-236">호출 프로그램에서 모두 값이 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-236">Neither value is changed in the calling program.</span></span>  
  
-   <span data-ttu-id="c2644-237">**값을 반환 합니다.**</span><span class="sxs-lookup"><span data-stu-id="c2644-237">**Return Values.**</span></span> <span data-ttu-id="c2644-238">때문에 `Date1` 하 고 `Date2` 가지는 `Date` 데이터 형식 이므로 저장 날짜 및 시간 값 100 나노초 눈금으로 시스템 타이머에서.</span><span class="sxs-lookup"><span data-stu-id="c2644-238">Because `Date1` and `Date2` are of the `Date` data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</span></span> <span data-ttu-id="c2644-239">그러나 `DateDiff` 으로 시간 간격의 수를 항상 반환을 `Long` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-239">However, `DateDiff` always returns the number of time intervals as a `Long` value.</span></span>  
  
     <span data-ttu-id="c2644-240">하는 경우 `Date1` 는 이후 날짜 및 시간 보다 나타냅니다 `Date2`, `DateDiff` 음수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-240">If `Date1` represents a later date and time than `Date2`, `DateDiff` returns a negative number.</span></span>  
  
-   <span data-ttu-id="c2644-241">**일 간격입니다.**</span><span class="sxs-lookup"><span data-stu-id="c2644-241">**Day Intervals.**</span></span> <span data-ttu-id="c2644-242">경우 `Interval` 로 설정 되어 `DateInterval.DayOfYear`에서 처리 됩니다 동일 `DateInterval.Day`이므로 `DayOfYear` 시간 간격에 대 한 의미 있는 단위가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-242">If `Interval` is set to `DateInterval.DayOfYear`, it is treated the same as `DateInterval.Day`, because `DayOfYear` is not a meaningful unit for a time interval.</span></span>  
  
-   <span data-ttu-id="c2644-243">**주 간격입니다.**</span><span class="sxs-lookup"><span data-stu-id="c2644-243">**Week Intervals.**</span></span> <span data-ttu-id="c2644-244">하는 경우 `Interval` 로 설정 된 `DateInterval.WeekOfYear`, 반환 값은 첫 번째 요일 포함 하는 주 사이의 주 수를 나타내는 `Date1` 및 첫 번째 요일을 포함 하는 주 `Date2`합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-244">If `Interval` is set to `DateInterval.WeekOfYear`, the return value represents the number of weeks between the first day of the week containing `Date1` and the first day of the week containing `Date2`.</span></span> <span data-ttu-id="c2644-245">다음 예제에서는 다양 한 결과로 생성 되는 방식을 `DateInterval.Weekday`입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-245">The following example shows how this produces different results from `DateInterval.Weekday`.</span></span>  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     <span data-ttu-id="c2644-246">위의 예에서 `DateDiff` 에 0을 반환 합니다 `wD` 두 날짜 간의 차이 7 일 이내 이지만 1을 반환 하므로 `wY` 해당 달력의 첫 번째 날에는 7 일간 차이가 있기 때문에 주 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-246">In the preceding example, `DateDiff` returns 0 to `wD` because the difference between the two dates is less than seven days, but it returns 1 to `wY` because there is a seven-day difference between the first days of the respective calendar weeks.</span></span>  
  
-   <span data-ttu-id="c2644-247">**더 큰 간격입니다.**</span><span class="sxs-lookup"><span data-stu-id="c2644-247">**Larger Intervals.**</span></span> <span data-ttu-id="c2644-248">하는 경우 `Interval` 로 설정 됩니다 `DateInterval.Year`, 반환 값의 연도 부분에서 순수 하 게 계산 됩니다 `Date1` 고 `Date2`합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-248">If `Interval` is set to `DateInterval.Year`, the return value is calculated purely from the year parts of `Date1` and `Date2`.</span></span> <span data-ttu-id="c2644-249">마찬가지로, 반환 값 `DateInterval.Month` 인수의 한 연도 및 월 부분에서 순수한 계산 `DateInterval.Quarter` 두 날짜를 포함 하는 분기에서.</span><span class="sxs-lookup"><span data-stu-id="c2644-249">Similarly, the return value for `DateInterval.Month` is calculated purely from the year and month parts of the arguments, and for `DateInterval.Quarter` from the quarters containing the two dates.</span></span>  
  
     <span data-ttu-id="c2644-250">예를 들어, 다음 연도의 1 월 1 일에 12 월 31 일을 비교할 때 `DateDiff` 에 대 한 1을 반환 `DateInterval.Year`를 `DateInterval.Quarter`, 또는 `DateInterval.Month`하루만에 경과 하는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-250">For example, when comparing December 31 to January 1 of the following year, `DateDiff` returns 1 for `DateInterval.Year`, `DateInterval.Quarter`, or `DateInterval.Month`, even though at most only one day has elapsed.</span></span>  
  
     <span data-ttu-id="c2644-251">여러 연대는 일본어와 같은 문화권을 `DateDiff` 메서드 두 개 이상 연대에 걸쳐 있는 경우 연도 차이 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-251">For cultures such as Japanese that have multiple eras, the `DateDiff` method does not return a difference in years if the difference spans two or more eras.</span></span> <span data-ttu-id="c2644-252">대신 반환한 값의 차이 계산할 수 있습니다 합니다 <xref:System.DateTime.Year%2A> 속성을 다음 예와에서 같이: `date2.Year - date1.Year`합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-252">Instead, you can calculate the difference in values returned by the <xref:System.DateTime.Year%2A> property, as shown in the following example: `date2.Year - date1.Year`.</span></span>  
  
-   <span data-ttu-id="c2644-253">**기타 간격입니다.**</span><span class="sxs-lookup"><span data-stu-id="c2644-253">**Other Intervals.**</span></span> <span data-ttu-id="c2644-254">이후 모든 `Date` 값을 지원는 <xref:System.DateTime> 구조를 해당 메서드 제공 시간 간격을 찾는 추가 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-254">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in finding time intervals.</span></span> <span data-ttu-id="c2644-255">예를 들어 사용할 수 있습니다는 `Subtract` 메서드 오버 로드 된 중: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> 뺍니다를 <xref:System.TimeSpan> 에서 `Date` 두 `Date` 값, 및 <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> 뺍니다를 `Date` 값 반환할는 <xref:System.TimeSpan>합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-255">For example, you can use the `Subtract` method in either of its overloaded forms: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a <xref:System.TimeSpan> from a `Date` variable to return another `Date` value, and <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a `Date` value to return a <xref:System.TimeSpan>.</span></span> <span data-ttu-id="c2644-256">다음 예제와 같이 걸리는 시간을 밀리초 단위로 확인 하는 프로세스의 시간 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-256">You can time a process to find out how many milliseconds it takes, as the following example shows.</span></span>  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 <span data-ttu-id="c2644-257">`Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-257">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="c2644-258">열거형 값</span><span class="sxs-lookup"><span data-stu-id="c2644-258">Enumeration value</span></span>|<span data-ttu-id="c2644-259">문자열 값</span><span class="sxs-lookup"><span data-stu-id="c2644-259">String value</span></span>|<span data-ttu-id="c2644-260">단위의 시간 차이</span><span class="sxs-lookup"><span data-stu-id="c2644-260">Unit of time difference</span></span>|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|<span data-ttu-id="c2644-261">"d"</span><span class="sxs-lookup"><span data-stu-id="c2644-261">"d"</span></span>|<span data-ttu-id="c2644-262">Day</span><span class="sxs-lookup"><span data-stu-id="c2644-262">Day</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="c2644-263">"y"</span><span class="sxs-lookup"><span data-stu-id="c2644-263">"y"</span></span>|<span data-ttu-id="c2644-264">Day</span><span class="sxs-lookup"><span data-stu-id="c2644-264">Day</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="c2644-265">"h"</span><span class="sxs-lookup"><span data-stu-id="c2644-265">"h"</span></span>|<span data-ttu-id="c2644-266">Hour</span><span class="sxs-lookup"><span data-stu-id="c2644-266">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="c2644-267">"n"</span><span class="sxs-lookup"><span data-stu-id="c2644-267">"n"</span></span>|<span data-ttu-id="c2644-268">Minute</span><span class="sxs-lookup"><span data-stu-id="c2644-268">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="c2644-269">"m"</span><span class="sxs-lookup"><span data-stu-id="c2644-269">"m"</span></span>|<span data-ttu-id="c2644-270">월</span><span class="sxs-lookup"><span data-stu-id="c2644-270">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="c2644-271">"q"</span><span class="sxs-lookup"><span data-stu-id="c2644-271">"q"</span></span>|<span data-ttu-id="c2644-272">분기</span><span class="sxs-lookup"><span data-stu-id="c2644-272">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="c2644-273">"s"</span><span class="sxs-lookup"><span data-stu-id="c2644-273">"s"</span></span>|<span data-ttu-id="c2644-274">Second</span><span class="sxs-lookup"><span data-stu-id="c2644-274">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="c2644-275">"w"</span><span class="sxs-lookup"><span data-stu-id="c2644-275">"w"</span></span>|<span data-ttu-id="c2644-276">주</span><span class="sxs-lookup"><span data-stu-id="c2644-276">Week</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="c2644-277">"ww"</span><span class="sxs-lookup"><span data-stu-id="c2644-277">"ww"</span></span>|<span data-ttu-id="c2644-278">주</span><span class="sxs-lookup"><span data-stu-id="c2644-278">Calendar week</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="c2644-279">"yyyy"</span><span class="sxs-lookup"><span data-stu-id="c2644-279">"yyyy"</span></span>|<span data-ttu-id="c2644-280">Year</span><span class="sxs-lookup"><span data-stu-id="c2644-280">Year</span></span>|  
  
 <span data-ttu-id="c2644-281">`DayOfWeek` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-281">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="c2644-282">열거형 값</span><span class="sxs-lookup"><span data-stu-id="c2644-282">Enumeration value</span></span>|<span data-ttu-id="c2644-283">값</span><span class="sxs-lookup"><span data-stu-id="c2644-283">Value</span></span>|<span data-ttu-id="c2644-284">설명</span><span class="sxs-lookup"><span data-stu-id="c2644-284">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="c2644-285">0</span><span class="sxs-lookup"><span data-stu-id="c2644-285">0</span></span>|<span data-ttu-id="c2644-286">시스템 설정에 지정 된 주의 첫째 요일</span><span class="sxs-lookup"><span data-stu-id="c2644-286">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="c2644-287">1</span><span class="sxs-lookup"><span data-stu-id="c2644-287">1</span></span>|<span data-ttu-id="c2644-288">일요일입니다 (기본값)</span><span class="sxs-lookup"><span data-stu-id="c2644-288">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="c2644-289">2</span><span class="sxs-lookup"><span data-stu-id="c2644-289">2</span></span>|<span data-ttu-id="c2644-290">월요일 (ISO 8601 표준, 3.17)</span><span class="sxs-lookup"><span data-stu-id="c2644-290">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="c2644-291">3</span><span class="sxs-lookup"><span data-stu-id="c2644-291">3</span></span>|<span data-ttu-id="c2644-292">화요일</span><span class="sxs-lookup"><span data-stu-id="c2644-292">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="c2644-293">4</span><span class="sxs-lookup"><span data-stu-id="c2644-293">4</span></span>|<span data-ttu-id="c2644-294">수요일</span><span class="sxs-lookup"><span data-stu-id="c2644-294">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="c2644-295">5</span><span class="sxs-lookup"><span data-stu-id="c2644-295">5</span></span>|<span data-ttu-id="c2644-296">목요일</span><span class="sxs-lookup"><span data-stu-id="c2644-296">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="c2644-297">6</span><span class="sxs-lookup"><span data-stu-id="c2644-297">6</span></span>|<span data-ttu-id="c2644-298">금요일</span><span class="sxs-lookup"><span data-stu-id="c2644-298">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="c2644-299">7</span><span class="sxs-lookup"><span data-stu-id="c2644-299">7</span></span>|<span data-ttu-id="c2644-300">토요일</span><span class="sxs-lookup"><span data-stu-id="c2644-300">Saturday</span></span>|  
  
 <span data-ttu-id="c2644-301">`WeekOfYear` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-301">The `WeekOfYear` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="c2644-302">열거형 값</span><span class="sxs-lookup"><span data-stu-id="c2644-302">Enumeration value</span></span>|<span data-ttu-id="c2644-303">값</span><span class="sxs-lookup"><span data-stu-id="c2644-303">Value</span></span>|<span data-ttu-id="c2644-304">설명</span><span class="sxs-lookup"><span data-stu-id="c2644-304">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="c2644-305">0</span><span class="sxs-lookup"><span data-stu-id="c2644-305">0</span></span>|<span data-ttu-id="c2644-306">시스템 설정에 지정 된 연도의 첫째 주</span><span class="sxs-lookup"><span data-stu-id="c2644-306">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="c2644-307">1</span><span class="sxs-lookup"><span data-stu-id="c2644-307">1</span></span>|<span data-ttu-id="c2644-308">주를 1 월 1 일 (기본값)</span><span class="sxs-lookup"><span data-stu-id="c2644-308">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="c2644-309">2</span><span class="sxs-lookup"><span data-stu-id="c2644-309">2</span></span>|<span data-ttu-id="c2644-310">4 일 이상 (ISO 8601 표준, 3.17 준수 함) 새 연도에 있는 주</span><span class="sxs-lookup"><span data-stu-id="c2644-310">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="c2644-311">3</span><span class="sxs-lookup"><span data-stu-id="c2644-311">3</span></span>|<span data-ttu-id="c2644-312">새 해에서 첫 번째 전체 주</span><span class="sxs-lookup"><span data-stu-id="c2644-312">First full week in the new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c2644-313">이 예제에서는 `DateDiff` 오늘과 지정 된 날짜 사이의 일 수를 표시 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-313">This example uses the `DateDiff` function to display the number of days between a given date and today.</span></span>  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c2644-314"><paramref name="Date1" />, <paramref name="Date2" /> 또는 <paramref name="DayofWeek" />가 범위를 벗어났습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-314"><paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c2644-315"><paramref name="Date1" /> 또는 <paramref name="Date2" />가 잘못된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-315"><paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c2644-316">데이터 형식 요약(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c2644-316">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (string Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(string Interval, object Date1, object Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As String, Date1 As Object, Date2 As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberSignature Language="F#" Value="static member DateDiff : string * obj * obj * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int64" Usage="Microsoft.VisualBasic.DateAndTime.DateDiff (Interval, Date1, Date2, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="Date1" Type="System.Object" />
        <Parameter Name="Date2" Type="System.Object" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="c2644-317">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-317">Required.</span></span> <span data-ttu-id="c2644-318"><paramref name="Date1" />과 <paramref name="Date2" /> 사이의 시간차 단위로 사용할 시간 간격을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-318">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the time interval you want to use as the unit of difference between <paramref name="Date1" /> and <paramref name="Date2" />.</span></span></param>
        <param name="Date1"><span data-ttu-id="c2644-319">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-319">Required.</span></span> <span data-ttu-id="c2644-320">계산에 사용할 첫째 날짜/시간 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-320">The first date/time value you want to use in the calculation.</span></span></param>
        <param name="Date2"><span data-ttu-id="c2644-321">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-321">Required.</span></span> <span data-ttu-id="c2644-322">계산에 사용할 둘째 날짜/시간 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-322">The second date/time value you want to use in the calculation.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="c2644-323">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-323">Optional.</span></span> <span data-ttu-id="c2644-324">주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-324">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="c2644-325">지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-325">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="WeekOfYear"><span data-ttu-id="c2644-326">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-326">Optional.</span></span> <span data-ttu-id="c2644-327">연도의 첫째 주를 지정하는 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형에서 선택한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-327">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="c2644-328">지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-328">If not specified, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="c2644-329">두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 long 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-329">Returns a long value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></summary>
        <returns><span data-ttu-id="c2644-330">두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 long 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-330">A long value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-331">사용할 수는 `DateDiff` 두 날짜/시간 값 사이 있는 개수 지정 된 시간 간격을 결정 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-331">You can use the `DateDiff` function to determine how many specified time intervals exist between two date/time values.</span></span> <span data-ttu-id="c2644-332">예를 들어 사용할 수 있습니다 `DateDiff` 현재 연도의 끝 사이의 주 수 또는 두 날짜 사이의 일 수를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-332">For example, you might use `DateDiff` to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</span></span>  
  
## <a name="behavior"></a><span data-ttu-id="c2644-333">동작</span><span class="sxs-lookup"><span data-stu-id="c2644-333">Behavior</span></span>  
  
-   <span data-ttu-id="c2644-334">**매개 변수 처리입니다.**</span><span class="sxs-lookup"><span data-stu-id="c2644-334">**Treatment of Parameters.**</span></span> <span data-ttu-id="c2644-335">`DateDiff` 값을 빼고 `Date1` 값에서 `Date2` 차이 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-335">`DateDiff` subtracts the value of `Date1` from the value of `Date2` to produce the difference.</span></span> <span data-ttu-id="c2644-336">호출 프로그램에서 모두 값이 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-336">Neither value is changed in the calling program.</span></span>  
  
-   <span data-ttu-id="c2644-337">**값을 반환 합니다.**</span><span class="sxs-lookup"><span data-stu-id="c2644-337">**Return Values.**</span></span> <span data-ttu-id="c2644-338">때문에 `Date1` 하 고 `Date2` 가지는 `Date` 데이터 형식 이므로 저장 날짜 및 시간 값 100 나노초 눈금으로 시스템 타이머에서.</span><span class="sxs-lookup"><span data-stu-id="c2644-338">Because `Date1` and `Date2` are of the `Date` data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</span></span> <span data-ttu-id="c2644-339">그러나 `DateDiff` 으로 시간 간격의 수를 항상 반환을 `Long` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-339">However, `DateDiff` always returns the number of time intervals as a `Long` value.</span></span>  
  
     <span data-ttu-id="c2644-340">하는 경우 `Date1` 는 이후 날짜 및 시간 보다 나타냅니다 `Date2`, `DateDiff` 음수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-340">If `Date1` represents a later date and time than `Date2`, `DateDiff` returns a negative number.</span></span>  
  
-   <span data-ttu-id="c2644-341">**일 간격입니다.**</span><span class="sxs-lookup"><span data-stu-id="c2644-341">**Day Intervals.**</span></span> <span data-ttu-id="c2644-342">경우 `Interval` 로 설정 되어 `DateInterval.DayOfYear`에서 처리 됩니다 동일 `DateInterval.Day`이므로 `DayOfYear` 시간 간격에 대 한 의미 있는 단위가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-342">If `Interval` is set to `DateInterval.DayOfYear`, it is treated the same as `DateInterval.Day`, because `DayOfYear` is not a meaningful unit for a time interval.</span></span>  
  
-   <span data-ttu-id="c2644-343">**주 간격입니다.**</span><span class="sxs-lookup"><span data-stu-id="c2644-343">**Week Intervals.**</span></span> <span data-ttu-id="c2644-344">하는 경우 `Interval` 로 설정 된 `DateInterval.WeekOfYear`, 반환 값은 첫 번째 요일 포함 하는 주 사이의 주 수를 나타내는 `Date1` 및 첫 번째 요일을 포함 하는 주 `Date2`합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-344">If `Interval` is set to `DateInterval.WeekOfYear`, the return value represents the number of weeks between the first day of the week containing `Date1` and the first day of the week containing `Date2`.</span></span> <span data-ttu-id="c2644-345">다음 예제에서는 다양 한 결과로 생성 되는 방식을 `DateInterval.Weekday`입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-345">The following example shows how this produces different results from `DateInterval.Weekday`.</span></span>  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     <span data-ttu-id="c2644-346">위의 예에서 `DateDiff` 에 0을 반환 합니다 `wD` 두 날짜 간의 차이 7 일 이내 이지만 1을 반환 하므로 `wY` 해당 달력의 첫 번째 날에는 7 일간 차이가 있기 때문에 주 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-346">In the preceding example, `DateDiff` returns 0 to `wD` because the difference between the two dates is less than seven days, but it returns 1 to `wY` because there is a seven-day difference between the first days of the respective calendar weeks.</span></span>  
  
-   <span data-ttu-id="c2644-347">**더 큰 간격입니다.**</span><span class="sxs-lookup"><span data-stu-id="c2644-347">**Larger Intervals.**</span></span> <span data-ttu-id="c2644-348">하는 경우 `Interval` 로 설정 됩니다 `DateInterval.Year`, 반환 값의 연도 부분에서 순수 하 게 계산 됩니다 `Date1` 고 `Date2`합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-348">If `Interval` is set to `DateInterval.Year`, the return value is calculated purely from the year parts of `Date1` and `Date2`.</span></span> <span data-ttu-id="c2644-349">마찬가지로, 반환 값 `DateInterval.Month` 인수의 한 연도 및 월 부분에서 순수한 계산 `DateInterval.Quarter` 두 날짜를 포함 하는 분기에서.</span><span class="sxs-lookup"><span data-stu-id="c2644-349">Similarly, the return value for `DateInterval.Month` is calculated purely from the year and month parts of the arguments, and for `DateInterval.Quarter` from the quarters containing the two dates.</span></span>  
  
     <span data-ttu-id="c2644-350">예를 들어, 다음 연도의 1 월 1 일에 12 월 31 일을 비교할 때 `DateDiff` 에 대 한 1을 반환 `DateInterval.Year`를 `DateInterval.Quarter`, 또는 `DateInterval.Month`하루만에 경과 하는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-350">For example, when comparing December 31 to January 1 of the following year, `DateDiff` returns 1 for `DateInterval.Year`, `DateInterval.Quarter`, or `DateInterval.Month`, even though at most only one day has elapsed.</span></span>  
  
     <span data-ttu-id="c2644-351">여러 연대는 일본어와 같은 문화권을 `DateDiff` 메서드 두 개 이상 연대에 걸쳐 있는 경우 연도 차이 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-351">For cultures such as Japanese that have multiple eras, the `DateDiff` method does not return a difference in years if the difference spans two or more eras.</span></span> <span data-ttu-id="c2644-352">대신 반환한 값의 차이 계산할 수 있습니다 합니다 <xref:System.DateTime.Year%2A> 속성을 다음 예와에서 같이: `date2.Year - date1.Year`합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-352">Instead, you can calculate the difference in values returned by the <xref:System.DateTime.Year%2A> property, as shown in the following example: `date2.Year - date1.Year`.</span></span>  
  
-   <span data-ttu-id="c2644-353">**기타 간격입니다.**</span><span class="sxs-lookup"><span data-stu-id="c2644-353">**Other Intervals.**</span></span> <span data-ttu-id="c2644-354">이후 모든 `Date` 값을 지원는 <xref:System.DateTime> 구조를 해당 메서드 제공 시간 간격을 찾는 추가 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-354">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in finding time intervals.</span></span> <span data-ttu-id="c2644-355">예를 들어 사용할 수 있습니다는 `Subtract` 메서드 오버 로드 된 중: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> 뺍니다를 <xref:System.TimeSpan> 에서 `Date` 두 `Date` 값, 및 <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> 뺍니다를 `Date` 값 반환할는 <xref:System.TimeSpan>합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-355">For example, you can use the `Subtract` method in either of its overloaded forms: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a <xref:System.TimeSpan> from a `Date` variable to return another `Date` value, and <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a `Date` value to return a <xref:System.TimeSpan>.</span></span> <span data-ttu-id="c2644-356">다음 예제와 같이 걸리는 시간을 밀리초 단위로 확인 하는 프로세스의 시간 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-356">You can time a process to find out how many milliseconds it takes, as the following example shows.</span></span>  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 <span data-ttu-id="c2644-357">`Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-357">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="c2644-358">열거형 값</span><span class="sxs-lookup"><span data-stu-id="c2644-358">Enumeration value</span></span>|<span data-ttu-id="c2644-359">문자열 값</span><span class="sxs-lookup"><span data-stu-id="c2644-359">String value</span></span>|<span data-ttu-id="c2644-360">단위의 시간 차이</span><span class="sxs-lookup"><span data-stu-id="c2644-360">Unit of time difference</span></span>|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|<span data-ttu-id="c2644-361">"d"</span><span class="sxs-lookup"><span data-stu-id="c2644-361">"d"</span></span>|<span data-ttu-id="c2644-362">Day</span><span class="sxs-lookup"><span data-stu-id="c2644-362">Day</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="c2644-363">"y"</span><span class="sxs-lookup"><span data-stu-id="c2644-363">"y"</span></span>|<span data-ttu-id="c2644-364">Day</span><span class="sxs-lookup"><span data-stu-id="c2644-364">Day</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="c2644-365">"h"</span><span class="sxs-lookup"><span data-stu-id="c2644-365">"h"</span></span>|<span data-ttu-id="c2644-366">Hour</span><span class="sxs-lookup"><span data-stu-id="c2644-366">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="c2644-367">"n"</span><span class="sxs-lookup"><span data-stu-id="c2644-367">"n"</span></span>|<span data-ttu-id="c2644-368">Minute</span><span class="sxs-lookup"><span data-stu-id="c2644-368">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="c2644-369">"m"</span><span class="sxs-lookup"><span data-stu-id="c2644-369">"m"</span></span>|<span data-ttu-id="c2644-370">월</span><span class="sxs-lookup"><span data-stu-id="c2644-370">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="c2644-371">"q"</span><span class="sxs-lookup"><span data-stu-id="c2644-371">"q"</span></span>|<span data-ttu-id="c2644-372">분기</span><span class="sxs-lookup"><span data-stu-id="c2644-372">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="c2644-373">"s"</span><span class="sxs-lookup"><span data-stu-id="c2644-373">"s"</span></span>|<span data-ttu-id="c2644-374">Second</span><span class="sxs-lookup"><span data-stu-id="c2644-374">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="c2644-375">"w"</span><span class="sxs-lookup"><span data-stu-id="c2644-375">"w"</span></span>|<span data-ttu-id="c2644-376">주</span><span class="sxs-lookup"><span data-stu-id="c2644-376">Week</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="c2644-377">"ww"</span><span class="sxs-lookup"><span data-stu-id="c2644-377">"ww"</span></span>|<span data-ttu-id="c2644-378">주</span><span class="sxs-lookup"><span data-stu-id="c2644-378">Calendar week</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="c2644-379">"yyyy"</span><span class="sxs-lookup"><span data-stu-id="c2644-379">"yyyy"</span></span>|<span data-ttu-id="c2644-380">Year</span><span class="sxs-lookup"><span data-stu-id="c2644-380">Year</span></span>|  
  
 <span data-ttu-id="c2644-381">`DayOfWeek` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-381">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="c2644-382">열거형 값</span><span class="sxs-lookup"><span data-stu-id="c2644-382">Enumeration value</span></span>|<span data-ttu-id="c2644-383">값</span><span class="sxs-lookup"><span data-stu-id="c2644-383">Value</span></span>|<span data-ttu-id="c2644-384">설명</span><span class="sxs-lookup"><span data-stu-id="c2644-384">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="c2644-385">0</span><span class="sxs-lookup"><span data-stu-id="c2644-385">0</span></span>|<span data-ttu-id="c2644-386">시스템 설정에 지정 된 주의 첫째 요일</span><span class="sxs-lookup"><span data-stu-id="c2644-386">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="c2644-387">1</span><span class="sxs-lookup"><span data-stu-id="c2644-387">1</span></span>|<span data-ttu-id="c2644-388">일요일입니다 (기본값)</span><span class="sxs-lookup"><span data-stu-id="c2644-388">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="c2644-389">2</span><span class="sxs-lookup"><span data-stu-id="c2644-389">2</span></span>|<span data-ttu-id="c2644-390">월요일 (ISO 8601 표준, 3.17)</span><span class="sxs-lookup"><span data-stu-id="c2644-390">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="c2644-391">3</span><span class="sxs-lookup"><span data-stu-id="c2644-391">3</span></span>|<span data-ttu-id="c2644-392">화요일</span><span class="sxs-lookup"><span data-stu-id="c2644-392">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="c2644-393">4</span><span class="sxs-lookup"><span data-stu-id="c2644-393">4</span></span>|<span data-ttu-id="c2644-394">수요일</span><span class="sxs-lookup"><span data-stu-id="c2644-394">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="c2644-395">5</span><span class="sxs-lookup"><span data-stu-id="c2644-395">5</span></span>|<span data-ttu-id="c2644-396">목요일</span><span class="sxs-lookup"><span data-stu-id="c2644-396">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="c2644-397">6</span><span class="sxs-lookup"><span data-stu-id="c2644-397">6</span></span>|<span data-ttu-id="c2644-398">금요일</span><span class="sxs-lookup"><span data-stu-id="c2644-398">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="c2644-399">7</span><span class="sxs-lookup"><span data-stu-id="c2644-399">7</span></span>|<span data-ttu-id="c2644-400">토요일</span><span class="sxs-lookup"><span data-stu-id="c2644-400">Saturday</span></span>|  
  
 <span data-ttu-id="c2644-401">`WeekOfYear` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-401">The `WeekOfYear` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="c2644-402">열거형 값</span><span class="sxs-lookup"><span data-stu-id="c2644-402">Enumeration value</span></span>|<span data-ttu-id="c2644-403">값</span><span class="sxs-lookup"><span data-stu-id="c2644-403">Value</span></span>|<span data-ttu-id="c2644-404">설명</span><span class="sxs-lookup"><span data-stu-id="c2644-404">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="c2644-405">0</span><span class="sxs-lookup"><span data-stu-id="c2644-405">0</span></span>|<span data-ttu-id="c2644-406">시스템 설정에 지정 된 연도의 첫째 주</span><span class="sxs-lookup"><span data-stu-id="c2644-406">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="c2644-407">1</span><span class="sxs-lookup"><span data-stu-id="c2644-407">1</span></span>|<span data-ttu-id="c2644-408">주를 1 월 1 일 (기본값)</span><span class="sxs-lookup"><span data-stu-id="c2644-408">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="c2644-409">2</span><span class="sxs-lookup"><span data-stu-id="c2644-409">2</span></span>|<span data-ttu-id="c2644-410">4 일 이상 (ISO 8601 표준, 3.17 준수 함) 새 연도에 있는 주</span><span class="sxs-lookup"><span data-stu-id="c2644-410">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="c2644-411">3</span><span class="sxs-lookup"><span data-stu-id="c2644-411">3</span></span>|<span data-ttu-id="c2644-412">새 해에서 첫 번째 전체 주</span><span class="sxs-lookup"><span data-stu-id="c2644-412">First full week in the new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c2644-413">이 예제에서는 `DateDiff` 오늘과 지정 된 날짜 사이의 일 수를 표시 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-413">This example uses the `DateDiff` function to display the number of days between a given date and today.</span></span>  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c2644-414"><paramref name="Date1" />, <paramref name="Date2" /> 또는 <paramref name="DayofWeek" />가 범위를 벗어났습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-414"><paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c2644-415"><paramref name="Date1" /> 또는 <paramref name="Date2" />가 잘못된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-415"><paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c2644-416">데이터 형식 요약(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c2644-416">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DatePart">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c2644-417">지정된 <see langword="Date" /> 값의 지정된 구성 요소를 포함하는 정수 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-417">Returns an integer value containing the specified component of a given <see langword="Date" /> value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (Microsoft.VisualBasic.DateInterval Interval, DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue, valuetype Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As DateInterval, DateValue As DateTime, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional FirstWeekOfYearValue As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberSignature Language="F#" Value="static member DatePart : Microsoft.VisualBasic.DateInterval * DateTime * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.DatePart (Interval, DateValue, FirstDayOfWeekValue, FirstWeekOfYearValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="DateValue" Type="System.DateTime" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="FirstWeekOfYearValue" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="c2644-418">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-418">Required.</span></span> <span data-ttu-id="c2644-419">반환할 날짜/시간 값의 부분을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-419">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the part of the date/time value you want to return.</span></span></param>
        <param name="DateValue"><span data-ttu-id="c2644-420">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-420">Required.</span></span> <span data-ttu-id="c2644-421">계산할 <see langword="Date" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-421">The <see langword="Date" /> value that you want to evaluate.</span></span></param>
        <param name="FirstDayOfWeekValue"><span data-ttu-id="c2644-422">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-422">Optional.</span></span> <span data-ttu-id="c2644-423">주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-423">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="c2644-424">지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-424">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="FirstWeekOfYearValue"><span data-ttu-id="c2644-425">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-425">Optional.</span></span> <span data-ttu-id="c2644-426">연도의 첫째 주를 지정하는 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형에서 선택한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-426">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="c2644-427">지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-427">If not specified, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="c2644-428">지정된 <see langword="Date" /> 값의 지정된 구성 요소를 포함하는 정수 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-428">Returns an integer value containing the specified component of a given <see langword="Date" /> value.</span></span></summary>
        <returns><span data-ttu-id="c2644-429">지정된 <see langword="Date" /> 값의 지정된 구성 요소가 포함된 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-429">An integer value containing the specified component of a given <see langword="Date" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-430">사용할 수는 `DatePart` 함수는 날짜/시간 값을 평가 하 고 특정 구성 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-430">You can use the `DatePart` function to evaluate a date/time value and return a specific component.</span></span> <span data-ttu-id="c2644-431">예를 들어 사용할 수 있습니다 `DatePart` 주 또는 현재 시간을 계산 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-431">For example, you might use `DatePart` to calculate the day of the week or the current hour.</span></span>  
  
 <span data-ttu-id="c2644-432">선택 하면 `DateInterval.Weekday` 에 대 한 합니다 `Interval` 인수, 반환된 값은의 값과 일치 합니다 `FirstDayOfWeek` 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-432">If you choose `DateInterval.Weekday` for the `Interval` argument, the returned value is consistent with the values of the `FirstDayOfWeek` enumeration.</span></span> <span data-ttu-id="c2644-433">선택 하면 `DateInterval.WeekOfYear`, `DatePart` 사용 합니다 <xref:System.Globalization.Calendar> 및 <xref:System.Globalization.CultureInfo> 클래스는 <xref:System.Globalization> 현재 설정을 확인 하려면 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-433">If you choose `DateInterval.WeekOfYear`, `DatePart` uses the <xref:System.Globalization.Calendar> and <xref:System.Globalization.CultureInfo> classes of the <xref:System.Globalization> namespace to determine your current settings.</span></span>  
  
 <span data-ttu-id="c2644-434">`FirstDayOfWeekValue` 인수를 사용 하는 계산에 영향을 줍니다 합니다 `DateInterval.Weekday` 하 고 `DateInterval.WeekOfYear` `Interval` 설정.</span><span class="sxs-lookup"><span data-stu-id="c2644-434">The `FirstDayOfWeekValue` argument affects calculations that use the `DateInterval.Weekday` and `DateInterval.WeekOfYear` `Interval` settings.</span></span> <span data-ttu-id="c2644-435">합니다 `FirstWeekOfYearValue` 인수를 지정 하는 계산에 영향을 줍니다 `DateInterval.WeekOfYear` 에 대 한 `Interval`합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-435">The `FirstWeekOfYearValue` argument affects calculations that specify `DateInterval.WeekOfYear` for `Interval`.</span></span>  
  
 <span data-ttu-id="c2644-436">이후 모든 `Date` 값을 지원를 <xref:System.DateTime> 구조를 해당 메서드에 제공 날짜/시간 부분을 검색할 수 있는 추가 옵션이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-436">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in retrieving date/time parts.</span></span> <span data-ttu-id="c2644-437">전체 날짜 값을 가져올 수는 예를 들어를 `Date` 시간 값으로 변수를 다음과 같이 자정으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-437">For example, you can obtain the entire date value of a `Date` variable, with the time value set to midnight, as follows:</span></span>  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 <span data-ttu-id="c2644-438">`Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-438">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="c2644-439">열거형 값</span><span class="sxs-lookup"><span data-stu-id="c2644-439">Enumeration value</span></span>|<span data-ttu-id="c2644-440">문자열</span><span class="sxs-lookup"><span data-stu-id="c2644-440">String</span></span>|<span data-ttu-id="c2644-441">반환할 날짜/시간 값의 부분</span><span class="sxs-lookup"><span data-stu-id="c2644-441">Part of date/time value to return</span></span>|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="c2644-442">d</span><span class="sxs-lookup"><span data-stu-id="c2644-442">d</span></span>|<span data-ttu-id="c2644-443">월간 일자(1~31)</span><span class="sxs-lookup"><span data-stu-id="c2644-443">Day of month (1 through 31)</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="c2644-444">y</span><span class="sxs-lookup"><span data-stu-id="c2644-444">y</span></span>|<span data-ttu-id="c2644-445">연간 일자(1~366)</span><span class="sxs-lookup"><span data-stu-id="c2644-445">Day of year (1 through 366)</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="c2644-446">시간</span><span class="sxs-lookup"><span data-stu-id="c2644-446">h</span></span>|<span data-ttu-id="c2644-447">Hour</span><span class="sxs-lookup"><span data-stu-id="c2644-447">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="c2644-448">n</span><span class="sxs-lookup"><span data-stu-id="c2644-448">n</span></span>|<span data-ttu-id="c2644-449">Minute</span><span class="sxs-lookup"><span data-stu-id="c2644-449">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="c2644-450">분</span><span class="sxs-lookup"><span data-stu-id="c2644-450">m</span></span>|<span data-ttu-id="c2644-451">월</span><span class="sxs-lookup"><span data-stu-id="c2644-451">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="c2644-452">q</span><span class="sxs-lookup"><span data-stu-id="c2644-452">q</span></span>|<span data-ttu-id="c2644-453">분기</span><span class="sxs-lookup"><span data-stu-id="c2644-453">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="c2644-454">초</span><span class="sxs-lookup"><span data-stu-id="c2644-454">s</span></span>|<span data-ttu-id="c2644-455">Second</span><span class="sxs-lookup"><span data-stu-id="c2644-455">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="c2644-456">주</span><span class="sxs-lookup"><span data-stu-id="c2644-456">w</span></span>|<span data-ttu-id="c2644-457">요일(1~7)</span><span class="sxs-lookup"><span data-stu-id="c2644-457">Day of week (1 through 7)</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="c2644-458">ww</span><span class="sxs-lookup"><span data-stu-id="c2644-458">ww</span></span>|<span data-ttu-id="c2644-459">연간 주(1~53)</span><span class="sxs-lookup"><span data-stu-id="c2644-459">Week of year (1 through 53)</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="c2644-460">yyyy</span><span class="sxs-lookup"><span data-stu-id="c2644-460">yyyy</span></span>|<span data-ttu-id="c2644-461">Year</span><span class="sxs-lookup"><span data-stu-id="c2644-461">Year</span></span>|  
  
 <span data-ttu-id="c2644-462">`FirstDayOfWeekValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-462">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="c2644-463">열거형 값</span><span class="sxs-lookup"><span data-stu-id="c2644-463">Enumeration value</span></span>|<span data-ttu-id="c2644-464">값</span><span class="sxs-lookup"><span data-stu-id="c2644-464">Value</span></span>|<span data-ttu-id="c2644-465">설명</span><span class="sxs-lookup"><span data-stu-id="c2644-465">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="c2644-466">0</span><span class="sxs-lookup"><span data-stu-id="c2644-466">0</span></span>|<span data-ttu-id="c2644-467">시스템 설정에 지정 된 주의 첫째 요일</span><span class="sxs-lookup"><span data-stu-id="c2644-467">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="c2644-468">1</span><span class="sxs-lookup"><span data-stu-id="c2644-468">1</span></span>|<span data-ttu-id="c2644-469">일요일입니다 (기본값)</span><span class="sxs-lookup"><span data-stu-id="c2644-469">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="c2644-470">2</span><span class="sxs-lookup"><span data-stu-id="c2644-470">2</span></span>|<span data-ttu-id="c2644-471">월요일 (ISO 8601 표준, 3.17)</span><span class="sxs-lookup"><span data-stu-id="c2644-471">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="c2644-472">3</span><span class="sxs-lookup"><span data-stu-id="c2644-472">3</span></span>|<span data-ttu-id="c2644-473">화요일</span><span class="sxs-lookup"><span data-stu-id="c2644-473">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="c2644-474">4</span><span class="sxs-lookup"><span data-stu-id="c2644-474">4</span></span>|<span data-ttu-id="c2644-475">수요일</span><span class="sxs-lookup"><span data-stu-id="c2644-475">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="c2644-476">5</span><span class="sxs-lookup"><span data-stu-id="c2644-476">5</span></span>|<span data-ttu-id="c2644-477">목요일</span><span class="sxs-lookup"><span data-stu-id="c2644-477">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="c2644-478">6</span><span class="sxs-lookup"><span data-stu-id="c2644-478">6</span></span>|<span data-ttu-id="c2644-479">금요일</span><span class="sxs-lookup"><span data-stu-id="c2644-479">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="c2644-480">7</span><span class="sxs-lookup"><span data-stu-id="c2644-480">7</span></span>|<span data-ttu-id="c2644-481">토요일</span><span class="sxs-lookup"><span data-stu-id="c2644-481">Saturday</span></span>|  
  
 <span data-ttu-id="c2644-482">`FirstWeekOfYearValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-482">The `FirstWeekOfYearValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="c2644-483">열거형 값</span><span class="sxs-lookup"><span data-stu-id="c2644-483">Enumeration value</span></span>|<span data-ttu-id="c2644-484">값</span><span class="sxs-lookup"><span data-stu-id="c2644-484">Value</span></span>|<span data-ttu-id="c2644-485">설명</span><span class="sxs-lookup"><span data-stu-id="c2644-485">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="c2644-486">0</span><span class="sxs-lookup"><span data-stu-id="c2644-486">0</span></span>|<span data-ttu-id="c2644-487">시스템 설정에 지정 된 연도의 첫째 주</span><span class="sxs-lookup"><span data-stu-id="c2644-487">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="c2644-488">1</span><span class="sxs-lookup"><span data-stu-id="c2644-488">1</span></span>|<span data-ttu-id="c2644-489">주를 1 월 1 일 (기본값)</span><span class="sxs-lookup"><span data-stu-id="c2644-489">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="c2644-490">2</span><span class="sxs-lookup"><span data-stu-id="c2644-490">2</span></span>|<span data-ttu-id="c2644-491">4 일 이상 (ISO 8601 표준, 3.17 준수 함) 새 연도에 있는 주</span><span class="sxs-lookup"><span data-stu-id="c2644-491">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="c2644-492">3</span><span class="sxs-lookup"><span data-stu-id="c2644-492">3</span></span>|<span data-ttu-id="c2644-493">새 해 첫 번째 전체 주</span><span class="sxs-lookup"><span data-stu-id="c2644-493">First full week in new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c2644-494">이 예에서는 날짜를 사용 하 여는 `DatePart` 함수에서 발생 하는 연도의 분기를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-494">This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.</span></span>  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c2644-495"><paramref name="Interval" />가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c2644-495"><paramref name="Interval" /> is not valid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c2644-496"><paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-496"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c2644-497">데이터 형식 요약(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c2644-497">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (string Interval, object DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(string Interval, object DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As String, DateValue As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberSignature Language="F#" Value="static member DatePart : string * obj * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.DatePart (Interval, DateValue, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="DateValue" Type="System.Object" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="c2644-498">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-498">Required.</span></span> <span data-ttu-id="c2644-499">반환할 날짜/시간 값의 부분을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-499">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the part of the date/time value you want to return.</span></span></param>
        <param name="DateValue"><span data-ttu-id="c2644-500">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-500">Required.</span></span> <span data-ttu-id="c2644-501">계산할 <see langword="Date" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-501">A <see langword="Date" /> value that you want to evaluate.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="c2644-502">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-502">Optional.</span></span> <span data-ttu-id="c2644-503">주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-503">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="c2644-504">지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-504">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="WeekOfYear"><span data-ttu-id="c2644-505">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-505">Optional.</span></span> <span data-ttu-id="c2644-506">연도의 첫째 주를 지정하는 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형에서 선택한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-506">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="c2644-507">지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-507">If not specified, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="c2644-508">지정된 <see langword="Date" /> 값의 지정된 구성 요소가 포함된 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-508">Returns an value containing the specified component of a given <see langword="Date" /> value.</span></span></summary>
        <returns><span data-ttu-id="c2644-509">지정된 <see langword="Date" /> 값의 지정된 구성 요소가 포함된 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-509">An integer value containing the specified component of a given <see langword="Date" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-510">사용할 수는 `DatePart` 함수는 날짜/시간 값을 평가 하 고 특정 구성 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-510">You can use the `DatePart` function to evaluate a date/time value and return a specific component.</span></span> <span data-ttu-id="c2644-511">예를 들어 사용할 수 있습니다 `DatePart` 주 또는 현재 시간을 계산 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-511">For example, you might use `DatePart` to calculate the day of the week or the current hour.</span></span>  
  
 <span data-ttu-id="c2644-512">선택 하면 `DateInterval.Weekday` 에 대 한 합니다 `Interval` 인수, 반환된 값은의 값과 일치 합니다 `FirstDayOfWeek` 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-512">If you choose `DateInterval.Weekday` for the `Interval` argument, the returned value is consistent with the values of the `FirstDayOfWeek` enumeration.</span></span> <span data-ttu-id="c2644-513">선택 하면 `DateInterval.WeekOfYear`, `DatePart` 사용 합니다 <xref:System.Globalization.Calendar> 및 <xref:System.Globalization.CultureInfo> 클래스는 <xref:System.Globalization> 현재 설정을 확인 하려면 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-513">If you choose `DateInterval.WeekOfYear`, `DatePart` uses the <xref:System.Globalization.Calendar> and <xref:System.Globalization.CultureInfo> classes of the <xref:System.Globalization> namespace to determine your current settings.</span></span>  
  
 <span data-ttu-id="c2644-514">`FirstDayOfWeekValue` 인수를 사용 하는 계산에 영향을 줍니다 합니다 `DateInterval.Weekday` 하 고 `DateInterval.WeekOfYear` `Interval` 설정.</span><span class="sxs-lookup"><span data-stu-id="c2644-514">The `FirstDayOfWeekValue` argument affects calculations that use the `DateInterval.Weekday` and `DateInterval.WeekOfYear` `Interval` settings.</span></span> <span data-ttu-id="c2644-515">합니다 `FirstWeekOfYearValue` 인수를 지정 하는 계산에 영향을 줍니다 `DateInterval.WeekOfYear` 에 대 한 `Interval`합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-515">The `FirstWeekOfYearValue` argument affects calculations that specify `DateInterval.WeekOfYear` for `Interval`.</span></span>  
  
 <span data-ttu-id="c2644-516">이후 모든 `Date` 값을 지원를 <xref:System.DateTime> 구조를 해당 메서드에 제공 날짜/시간 부분을 검색할 수 있는 추가 옵션이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-516">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in retrieving date/time parts.</span></span> <span data-ttu-id="c2644-517">전체 날짜 값을 가져올 수는 예를 들어를 `Date` 시간 값으로 변수를 다음과 같이 자정으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-517">For example, you can obtain the entire date value of a `Date` variable, with the time value set to midnight, as follows:</span></span>  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 <span data-ttu-id="c2644-518">`Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-518">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="c2644-519">열거형 값</span><span class="sxs-lookup"><span data-stu-id="c2644-519">Enumeration value</span></span>|<span data-ttu-id="c2644-520">문자열</span><span class="sxs-lookup"><span data-stu-id="c2644-520">String</span></span>|<span data-ttu-id="c2644-521">반환할 날짜/시간 값의 부분</span><span class="sxs-lookup"><span data-stu-id="c2644-521">Part of date/time value to return</span></span>|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="c2644-522">d</span><span class="sxs-lookup"><span data-stu-id="c2644-522">d</span></span>|<span data-ttu-id="c2644-523">월간 일자(1~31)</span><span class="sxs-lookup"><span data-stu-id="c2644-523">Day of month (1 through 31)</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="c2644-524">y</span><span class="sxs-lookup"><span data-stu-id="c2644-524">y</span></span>|<span data-ttu-id="c2644-525">연간 일자(1~366)</span><span class="sxs-lookup"><span data-stu-id="c2644-525">Day of year (1 through 366)</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="c2644-526">시간</span><span class="sxs-lookup"><span data-stu-id="c2644-526">h</span></span>|<span data-ttu-id="c2644-527">Hour</span><span class="sxs-lookup"><span data-stu-id="c2644-527">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="c2644-528">n</span><span class="sxs-lookup"><span data-stu-id="c2644-528">n</span></span>|<span data-ttu-id="c2644-529">Minute</span><span class="sxs-lookup"><span data-stu-id="c2644-529">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="c2644-530">분</span><span class="sxs-lookup"><span data-stu-id="c2644-530">m</span></span>|<span data-ttu-id="c2644-531">월</span><span class="sxs-lookup"><span data-stu-id="c2644-531">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="c2644-532">q</span><span class="sxs-lookup"><span data-stu-id="c2644-532">q</span></span>|<span data-ttu-id="c2644-533">분기</span><span class="sxs-lookup"><span data-stu-id="c2644-533">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="c2644-534">초</span><span class="sxs-lookup"><span data-stu-id="c2644-534">s</span></span>|<span data-ttu-id="c2644-535">Second</span><span class="sxs-lookup"><span data-stu-id="c2644-535">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="c2644-536">주</span><span class="sxs-lookup"><span data-stu-id="c2644-536">w</span></span>|<span data-ttu-id="c2644-537">요일(1~7)</span><span class="sxs-lookup"><span data-stu-id="c2644-537">Day of week (1 through 7)</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="c2644-538">ww</span><span class="sxs-lookup"><span data-stu-id="c2644-538">ww</span></span>|<span data-ttu-id="c2644-539">연간 주(1~53)</span><span class="sxs-lookup"><span data-stu-id="c2644-539">Week of year (1 through 53)</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="c2644-540">yyyy</span><span class="sxs-lookup"><span data-stu-id="c2644-540">yyyy</span></span>|<span data-ttu-id="c2644-541">Year</span><span class="sxs-lookup"><span data-stu-id="c2644-541">Year</span></span>|  
  
 <span data-ttu-id="c2644-542">`FirstDayOfWeekValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-542">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="c2644-543">열거형 값</span><span class="sxs-lookup"><span data-stu-id="c2644-543">Enumeration value</span></span>|<span data-ttu-id="c2644-544">값</span><span class="sxs-lookup"><span data-stu-id="c2644-544">Value</span></span>|<span data-ttu-id="c2644-545">설명</span><span class="sxs-lookup"><span data-stu-id="c2644-545">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="c2644-546">0</span><span class="sxs-lookup"><span data-stu-id="c2644-546">0</span></span>|<span data-ttu-id="c2644-547">시스템 설정에 지정 된 주의 첫째 요일</span><span class="sxs-lookup"><span data-stu-id="c2644-547">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="c2644-548">1</span><span class="sxs-lookup"><span data-stu-id="c2644-548">1</span></span>|<span data-ttu-id="c2644-549">일요일입니다 (기본값)</span><span class="sxs-lookup"><span data-stu-id="c2644-549">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="c2644-550">2</span><span class="sxs-lookup"><span data-stu-id="c2644-550">2</span></span>|<span data-ttu-id="c2644-551">월요일 (ISO 8601 표준, 3.17)</span><span class="sxs-lookup"><span data-stu-id="c2644-551">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="c2644-552">3</span><span class="sxs-lookup"><span data-stu-id="c2644-552">3</span></span>|<span data-ttu-id="c2644-553">화요일</span><span class="sxs-lookup"><span data-stu-id="c2644-553">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="c2644-554">4</span><span class="sxs-lookup"><span data-stu-id="c2644-554">4</span></span>|<span data-ttu-id="c2644-555">수요일</span><span class="sxs-lookup"><span data-stu-id="c2644-555">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="c2644-556">5</span><span class="sxs-lookup"><span data-stu-id="c2644-556">5</span></span>|<span data-ttu-id="c2644-557">목요일</span><span class="sxs-lookup"><span data-stu-id="c2644-557">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="c2644-558">6</span><span class="sxs-lookup"><span data-stu-id="c2644-558">6</span></span>|<span data-ttu-id="c2644-559">금요일</span><span class="sxs-lookup"><span data-stu-id="c2644-559">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="c2644-560">7</span><span class="sxs-lookup"><span data-stu-id="c2644-560">7</span></span>|<span data-ttu-id="c2644-561">토요일</span><span class="sxs-lookup"><span data-stu-id="c2644-561">Saturday</span></span>|  
  
 <span data-ttu-id="c2644-562">`FirstWeekOfYearValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-562">The `FirstWeekOfYearValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="c2644-563">열거형 값</span><span class="sxs-lookup"><span data-stu-id="c2644-563">Enumeration value</span></span>|<span data-ttu-id="c2644-564">값</span><span class="sxs-lookup"><span data-stu-id="c2644-564">Value</span></span>|<span data-ttu-id="c2644-565">설명</span><span class="sxs-lookup"><span data-stu-id="c2644-565">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="c2644-566">0</span><span class="sxs-lookup"><span data-stu-id="c2644-566">0</span></span>|<span data-ttu-id="c2644-567">시스템 설정에 지정 된 연도의 첫째 주</span><span class="sxs-lookup"><span data-stu-id="c2644-567">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="c2644-568">1</span><span class="sxs-lookup"><span data-stu-id="c2644-568">1</span></span>|<span data-ttu-id="c2644-569">주를 1 월 1 일 (기본값)</span><span class="sxs-lookup"><span data-stu-id="c2644-569">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="c2644-570">2</span><span class="sxs-lookup"><span data-stu-id="c2644-570">2</span></span>|<span data-ttu-id="c2644-571">4 일 이상 (ISO 8601 표준, 3.17 준수 함) 새 연도에 있는 주</span><span class="sxs-lookup"><span data-stu-id="c2644-571">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="c2644-572">3</span><span class="sxs-lookup"><span data-stu-id="c2644-572">3</span></span>|<span data-ttu-id="c2644-573">새 해 첫 번째 전체 주</span><span class="sxs-lookup"><span data-stu-id="c2644-573">First full week in new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c2644-574">이 예에서는 날짜를 사용 하 여는 `DatePart` 함수에서 발생 하는 연도의 분기를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-574">This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.</span></span>  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c2644-575"><paramref name="Interval" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-575"><paramref name="Interval" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c2644-576"><paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-576"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c2644-577">데이터 형식 요약(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c2644-577">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateSerial">
      <MemberSignature Language="C#" Value="public static DateTime DateSerial (int Year, int Month, int Day);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateSerial(int32 Year, int32 Month, int32 Day) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateSerial (Year As Integer, Month As Integer, Day As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateSerial(int Year, int Month, int Day);" />
      <MemberSignature Language="F#" Value="static member DateSerial : int * int * int -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateSerial (Year, Month, Day)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Year" Type="System.Int32" />
        <Parameter Name="Month" Type="System.Int32" />
        <Parameter Name="Day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Year"><span data-ttu-id="c2644-578">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-578">Required.</span></span> <span data-ttu-id="c2644-579">1에서 9999까지의 정수 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-579">Integer expression from 1 through 9999.</span></span> <span data-ttu-id="c2644-580">이 범위 아래의 값도 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-580">However, values below this range are also accepted.</span></span> <span data-ttu-id="c2644-581"><paramref name="Year" />가 0부터 99인 경우에는 아래의 "설명" 단원에 나온 것처럼 1930과 2029 사이의 값으로 해석되며,</span><span class="sxs-lookup"><span data-stu-id="c2644-581">If <paramref name="Year" /> is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the "Remarks" section below.</span></span> <span data-ttu-id="c2644-582"><paramref name="Year" />가 1보다 작은 경우에는 현재 연도에서 해당 값을 뺍니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-582">If <paramref name="Year" /> is less than 1, it is subtracted from the current year.</span></span></param>
        <param name="Month"><span data-ttu-id="c2644-583">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-583">Required.</span></span> <span data-ttu-id="c2644-584">1에서 12까지의 정수 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-584">Integer expression from 1 through 12.</span></span> <span data-ttu-id="c2644-585">그러나 이 범위를 벗어나는 값도 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-585">However, values outside this range are also accepted.</span></span> <span data-ttu-id="c2644-586"><paramref name="Month" />의 값은 1만큼 오프셋되어 계산된 연도의 1월에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-586">The value of <paramref name="Month" /> is offset by 1 and applied to January of the calculated year.</span></span> <span data-ttu-id="c2644-587">즉, (<paramref name="Month" /> - 1)이 1월에 더해집니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-587">In other words, (<paramref name="Month" /> - 1) is added to January.</span></span> <span data-ttu-id="c2644-588">필요한 경우에는 연도가 다시 계산됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-588">The year is recalculated if necessary.</span></span> <span data-ttu-id="c2644-589">다음은 Day 값이 계산된 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-589">The following results illustrate this effect:</span></span> 
<span data-ttu-id="c2644-590"><paramref name="Month" />가 1이면 계산된 연도의 1월입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-590">If <paramref name="Month" /> is 1, the result is January of the calculated year.</span></span>  
  
<span data-ttu-id="c2644-591"><paramref name="Month" />가 0이면 이전 연도의 12월입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-591">If <paramref name="Month" /> is 0, the result is December of the previous year.</span></span>  
  
<span data-ttu-id="c2644-592"><paramref name="Month" />가 -1이면 이전 연도의 11월입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-592">If <paramref name="Month" /> is -1, the result is November of the previous year.</span></span>  
  
<span data-ttu-id="c2644-593"><paramref name="Month" />가 13이면 다음 연도의 1월입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-593">If <paramref name="Month" /> is 13, the result is January of the following year.</span></span></param>
        <param name="Day"><span data-ttu-id="c2644-594">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-594">Required.</span></span> <span data-ttu-id="c2644-595">1에서 31까지의 정수 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-595">Integer expression from 1 through 31.</span></span> <span data-ttu-id="c2644-596">그러나 이 범위를 벗어나는 값도 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-596">However, values outside this range are also accepted.</span></span> <span data-ttu-id="c2644-597"><paramref name="Day" />의 값은 1만큼 오프셋되어 계산된 월의 1일에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-597">The value of <paramref name="Day" /> is offset by 1 and applied to the first day of the calculated month.</span></span> <span data-ttu-id="c2644-598">즉, (<paramref name="Day" />- 1)이 해당 월의 1일에 더해집니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-598">In other words, (<paramref name="Day" /> - 1) is added to the first of the month.</span></span> <span data-ttu-id="c2644-599">필요한 경우에는 월과 연도가 다시 계산됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-599">The month and year are recalculated if necessary.</span></span> <span data-ttu-id="c2644-600">다음은 Day 값이 계산된 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-600">The following results illustrate this effect:</span></span> 
<span data-ttu-id="c2644-601"><paramref name="Day" />가 1이면 계산된 월의 1일입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-601">If <paramref name="Day" /> is 1, the result is the first day of the calculated month.</span></span>  
  
<span data-ttu-id="c2644-602"><paramref name="Day" />가 0이면 이전 월의 마지막 날짜입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-602">If <paramref name="Day" /> is 0, the result is the last day of the previous month.</span></span>  
  
<span data-ttu-id="c2644-603"><paramref name="Day" />가 -1이면 이전 월의 끝에서 두 번째 날짜입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-603">If <paramref name="Day" /> is -1, the result is the penultimate day of the previous month.</span></span>  
  
<span data-ttu-id="c2644-604"><paramref name="Day" />가 현재 월의 마지막 날짜 값을 넘으면 다음 월의 해당되는 날짜입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-604">If <paramref name="Day" /> is past the end of the current month, the result is the appropriate day of the following month.</span></span> <span data-ttu-id="c2644-605">예를 들어, <paramref name="Month" />가 4이고 <paramref name="Day" />가 31이면 5월 1일입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-605">For example, if <paramref name="Month" /> is 4 and <paramref name="Day" /> is 31, the result is May 1.</span></span></param>
        <summary><span data-ttu-id="c2644-606">시간 정보가 자정(00:00:00)으로 설정된 상태에서 지정된 년, 월, 일을 나타내는 <see langword="Date" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-606">Returns a <see langword="Date" /> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</span></span></summary>
        <returns><span data-ttu-id="c2644-607">시간 정보가 자정(00:00:00)으로 설정된 상태에서 지정된 년, 월, 일을 나타내는 <see langword="Date" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-607">A <see langword="Date" /> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-608">Windows 98 또는 Windows 2000에 대 한 두 자리 연도 `Year` 인수는 사용자가 정의한 컴퓨터 설정에 따라 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-608">Under Windows 98 or Windows 2000, two-digit years for the `Year` argument are interpreted based on user-defined computer settings.</span></span> <span data-ttu-id="c2644-609">기본 설정은 값을 0부터 29 년 2000-2029로 해석 되 고 30부터 99 까지의 값은 1800 년으로 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-609">The default settings are that values from 0 through 29 are interpreted as the years 2000-2029, and values from 30 through 99 are interpreted as the years 1930-1999.</span></span> <span data-ttu-id="c2644-610">다른 모든 `Year` 인수, 사용 하 여 4 자리 연도, 예를 들어 1924 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-610">For all other `Year` arguments, use a four-digit year; for example, 1924.</span></span>  
  
 <span data-ttu-id="c2644-611">이전 버전 Windows의 이전에 설명 된 기본값을 기반으로 하는 두 자리 연도 해석 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-611">Earlier versions of Windows interpret two-digit years based on the defaults described previously.</span></span> <span data-ttu-id="c2644-612">함수 적절 한 값을 반환 하도록 하려면, 4 자리를 사용 하 여 `Year`입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-612">To be sure the function returns the proper value, use a four-digit `Year`.</span></span>  
  
 <span data-ttu-id="c2644-613">다음 예제에서는 음수, 0 및 양수의 인수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-613">The following example demonstrates negative, zero, and positive argument values.</span></span> <span data-ttu-id="c2644-614">여기에 `DateSerial` 함수에서 반환을 `Date` 현재 연도의; 10 년 전 년에서 3 월 1 일 이전 날짜를 나타내는 전 10 년 2 월의 마지막 날 즉, 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-614">Here, the `DateSerial` function returns a `Date` representing the day before the first day of March in the year 10 years before the current year; in other words, the last day of February ten years ago.</span></span>  
  
```vb  
Dim EndFeb As Date = DateSerial(-10, 3, 0)  
```  
  
 <span data-ttu-id="c2644-615">이면 `Month` 또는 `Day` 정상 범위를 초과 하면, 적절 하 게 다음 더 큰 단위에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-615">If either `Month` or `Day` exceeds its normal range, it is applied to the next larger unit as appropriate.</span></span> <span data-ttu-id="c2644-616">예를 들어, 32 일을 지정 하면 해당 할지를 값에 따라 4 일에서 1 개월와 `Month`합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-616">For example, if you specify 32 days, it is evaluated as one month and from one to four days, depending on the value of `Month`.</span></span> <span data-ttu-id="c2644-617">하는 경우 `Year` 9999 년 보다 큰 인수가-2,147,483,648 ~ 2,147,483,647 범위를 벗어난 경우 또는 <xref:System.ArgumentException> 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-617">If `Year` is greater than 9999, or if any argument is outside the range -2,147,483,648 through 2,147,483,647, an <xref:System.ArgumentException> error occurs.</span></span> <span data-ttu-id="c2644-618">세 가지 인수에서 지정한 날짜 보다 이전인 경우 12 월 31 일 23시 59분: 59 보다 이후 이거나 1 년 1 월 1 일 00시: 00 9999 년을 <xref:System.ArgumentOutOfRangeException> 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-618">If the date specified by the three arguments is earlier than 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999, an <xref:System.ArgumentOutOfRangeException> error occurs.</span></span>  
  
 <span data-ttu-id="c2644-619">`Date` 시간 구성 요소를 포함 하는 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-619">The `Date` data type includes time components.</span></span> <span data-ttu-id="c2644-620">`DateSerial` 모두 0으로 설정 하므로 반환된 된 값은 계산 된 날짜의 시작을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-620">`DateSerial` sets all of these to 0, so the returned value represents the beginning of the calculated day.</span></span>  
  
 <span data-ttu-id="c2644-621">이후 모든 `Date` 값을 지원를 <xref:System.DateTime> 구조를 해당 메서드에 제공 조합에서 추가 옵션을 `Date` 값.</span><span class="sxs-lookup"><span data-stu-id="c2644-621">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in assembling a `Date` value.</span></span> <span data-ttu-id="c2644-622">예를 들어 오버 로드 된 중 사용할 수 있습니다 <xref:System.DateTime.%23ctor%2A> 채우는 데 생성자는 `Date` 원하는 조합 구성 요소를 사용 하 여 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-622">For example, you can use one of the overloaded <xref:System.DateTime.%23ctor%2A> constructors to populate a `Date` variable using the desired combination of components.</span></span> <span data-ttu-id="c2644-623">다음 예제에서는 `NewDateTime` 6, 1978 년 5 월 전에 아침에서 8 시 30 초의 0.1에:</span><span class="sxs-lookup"><span data-stu-id="c2644-623">The following example sets `NewDateTime` to May 6, 1978 at one tenth of a second before 8:30 in the morning:</span></span>  
  
```vb  
Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 <span data-ttu-id="c2644-624">이 예제에서는 `DateSerial` 함수는 지정 된 연도, 월 및 일에 대 한 날짜를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-624">This example uses the `DateSerial` function to return the date for the specified year, month, and day.</span></span>  
  
 [!code-vb[VbVbalrFunctions#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c2644-625">데이터 형식 요약(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c2644-625">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateString">
      <MemberSignature Language="C#" Value="public static string DateString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DateString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberSignature Language="VB.NET" Value="Public Property DateString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DateString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateString : string with get, set" Usage="Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2644-626">시스템의 현재 날짜를 나타내는 문자열 값을 반환하거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-626">Returns or sets a string value representing the current date according to your system.</span></span></summary>
        <value><span data-ttu-id="c2644-627">시스템의 현재 날짜를 나타내는 문자열 값을 반환하거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-627">Returns or sets a string value representing the current date according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-628">`DateString` 약식된 월 이름을 사용 하는 MM-dd-yyyy 형식으로 시스템 날짜를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-628">`DateString` returns the system date in the MM-dd-yyyy format, which uses the abbreviated month name.</span></span> <span data-ttu-id="c2644-629">날짜에 대해 허용 된 형식은 yyyy, M-d-M-d-y, M/d/yyyy 및 M/d/y입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-629">The accepted formats for the date are M-d-yyyy, M-d-y, M/d/yyyy, and M/d/y.</span></span> <span data-ttu-id="c2644-630">더블 바이트 문자 집합 (DBCS)를 사용 하는 작업을 제외한 모든 시스템 로캘에 대해서 마찬가지입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-630">This is true for all system locales except those that use a double-byte character set (DBCS).</span></span> <span data-ttu-id="c2644-631">시스템 로캘은 더블 바이트 문자 집합을 사용 하는 경우 `DateString` yyyy-월-일 형식의 시스템 날짜를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-631">If the system locale uses a double-byte character set, `DateString` returns the system date in the yyyy-MM-dd format.</span></span> <span data-ttu-id="c2644-632">시스템 로캘을 사용 하 여 설정 합니다 **시계, 언어 및 국가별** 항목 **제어판**.</span><span class="sxs-lookup"><span data-stu-id="c2644-632">The system locale is set by using the **Clock, Language, and Region** item in **Control Panel**.</span></span>  
  
 <span data-ttu-id="c2644-633">**참고** 는 `DateString` 속성에 대 한 yyyy-월-일 형태로 시스템 날짜를 반환 합니다 `zh` (중국어 간체), `ko` (한국어) 및 `ja` (일본어) 시스템 로캘 내에서 Visual Basic을 실행 하는 경우 Silverlight 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-633">**Note** The `DateString` property returns the system date only in the yyyy-MM-dd format for the `zh` (Chinese simplified), `ko` (Korean), and `ja` (Japanese) system locales if you are running Visual Basic within Silverlight.</span></span>  
  
 <span data-ttu-id="c2644-634">가져오거나 현재 시스템 시간을 설정 하는 `String`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-634">To get or set the current system time as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> property.</span></span>  
  
 <span data-ttu-id="c2644-635">현재 시스템 날짜 또는 시간을 가져오려면 사용자의 로캘 형식이 나 사용자 지정 형식을 제공 합니다 <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> 속성을는 <xref:Microsoft.VisualBasic.Strings.Format%2A> 함수에는 미리 정의 되거나 사용자 정의 날짜/시간 형식 중 하나를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-635">To get the current system date or time in the format of your locale, or in a custom format, supply the <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> property to the <xref:Microsoft.VisualBasic.Strings.Format%2A> function, specifying either a predefined or user-defined date/time format.</span></span> <span data-ttu-id="c2644-636">다음은 이에 대한 예입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-636">The following example demonstrates this.</span></span>  
  
```vb  
MsgBox("The formatted date is " & Format(Now, "dddd, d MMM yyyy"))  
```  
  
 <span data-ttu-id="c2644-637">로 현재 시스템 날짜를 `Date`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-637">To access the current system date as a `Date`, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c2644-638">시스템 날짜 또는 시간을 설정 하려면 부분 신뢰 상황에서 해당 실행에 영향을 줄 수 있는 비관리 코드 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-638">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="c2644-639">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 하 고 [코드 액세스 권한](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-639">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2644-640">다음 예제에서는 `DateString` 속성을 현재 시스템 날짜를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-640">The following example uses the `DateString` property to display the current system date.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c2644-641"><see cref="T:Microsoft.VisualBasic.DateAndTime.DateString" /> 값을 설정하는 데 사용된 형식이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-641">Invalid format used to set the value of <see cref="T:Microsoft.VisualBasic.DateAndTime.DateString" />.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="DateValue">
      <MemberSignature Language="C#" Value="public static DateTime DateValue (string StringDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateValue(string StringDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateValue (StringDate As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateValue(System::String ^ StringDate);" />
      <MemberSignature Language="F#" Value="static member DateValue : string -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateValue StringDate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="StringDate"><span data-ttu-id="c2644-642">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-642">Required.</span></span> <span data-ttu-id="c2644-643">1년 1월 1일 00:00:00부터 9999년 12월 31일 23:59:59까지의 날짜/시간 값을 나타내는 문자열 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-643">string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</span></span></param>
        <summary><span data-ttu-id="c2644-644">시간 정보가 자정(00:00:00)으로 설정된 상태에서 문자열로 표시된 날짜 정보가 들어 있는 <see langword="Date" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-644">Returns a <see langword="Date" /> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</span></span></summary>
        <returns><span data-ttu-id="c2644-645">시간 정보가 자정(00:00:00)으로 설정된 상태에서 문자열로 표시된 날짜 정보가 들어 있는 <see langword="Date" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-645">A <see langword="Date" /> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-646">하는 경우 `StringDate` 유효한 날짜 구분 기호로 구분 된 1부터 12 까지의 숫자만 포함 `DateValue` 월, 일 및 연도 시스템에 대 한 지정 된 간단한 날짜 형식에 따라 순서를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-646">If `StringDate` includes only numbers from 1 through 12 separated by valid date separators, `DateValue` recognizes the order for month, day, and year according to the Short Date format specified for your system.</span></span> <span data-ttu-id="c2644-647">`DateValue` 현재 달력 설정을 사용 합니다 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성을 <xref:System.Globalization.CultureInfo> 클래스는 <xref:System.Globalization> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-647">`DateValue` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="c2644-648">기본값 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 여 값을 결정 **Control Panel** 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-648">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span> <span data-ttu-id="c2644-649">간단한 날짜 서식을 설정 하 여 재정의할 수 있습니다는 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> 의 속성을 <xref:System.Globalization.DateTimeFormatInfo> 클래스는 <xref:System.Globalization> 네임 스페이스.</span><span class="sxs-lookup"><span data-stu-id="c2644-649">You can override the Short Date format by setting the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property of the <xref:System.Globalization.DateTimeFormatInfo> class in the <xref:System.Globalization> namespace.</span></span>  
  
 <span data-ttu-id="c2644-650">`DateValue` 길고 약어를 숫자 형식에서 월 이름을 인식합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-650">`DateValue` recognizes month names in long, abbreviated, and numeric form.</span></span> <span data-ttu-id="c2644-651">1991/30/12 및 12/30/91 인식 외에도 예를 들어 `DateValue` 1991 년 12 월 30 일 및 1991 년 12 월 30 일도 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-651">For example, in addition to recognizing 12/30/1991 and 12/30/91, `DateValue` also recognizes December 30, 1991 and Dec 30, 1991.</span></span>  
  
 <span data-ttu-id="c2644-652">하는 경우의 연도 부분 `StringDate` 생략 되 면 `DateValue` 컴퓨터의 시스템 날짜는 현재 연도가 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-652">If the year part of `StringDate` is omitted, `DateValue` uses the current year from your computer's system date.</span></span>  
  
 <span data-ttu-id="c2644-653">경우는 `StringDate` 시간 정보를 포함 하는 인수 `DateValue` 반환된 된 값에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-653">If the `StringDate` argument includes time information, `DateValue` does not include it in the returned value.</span></span> <span data-ttu-id="c2644-654">그러나 경우 `StringDate` "89: 98"와 같은 잘못 된 시간 정보가 <xref:System.InvalidCastException> 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-654">However, if `StringDate` includes invalid time information, such as "89:98", an <xref:System.InvalidCastException> error occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2644-655">이 예제에서는 `DateValue` 날짜를 문자열로 변환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-655">This example uses the `DateValue` function to convert a string to a date.</span></span> <span data-ttu-id="c2644-656">날짜를 직접 할당할 날짜 리터럴을 사용할 수도 있습니다는 `Object` 하거나 `Date` 변수를 예를 들어, `oldDate = #2/12/69#`합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-656">You can also use date literals to directly assign a date to an `Object` or `Date` variable, for example, `oldDate = #2/12/69#`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c2644-657"><paramref name="StringDate" />에 잘못된 날짜 정보가 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-657"><paramref name="StringDate" /> includes invalid time information.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c2644-658">데이터 형식 요약(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c2644-658">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static int Day (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Day(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Day (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Day(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Day : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Day DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="c2644-659">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-659">Required.</span></span> <span data-ttu-id="c2644-660">일을 추출할 <see langword="Date" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-660">A <see langword="Date" /> value from which you want to extract the day.</span></span></param>
        <summary><span data-ttu-id="c2644-661">날짜를 나타내는 1에서 31까지의 정수 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-661">Returns an integer value from 1 through 31 representing the day of the month.</span></span></summary>
        <returns><span data-ttu-id="c2644-662">날짜를 나타내는 1에서 31까지의 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-662">An integer value from 1 through 31 representing the day of the month.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-663">사용 하는 경우는 `Day` 함수를 사용 하 여 정규화 해야 할 수도 있습니다는 `Microsoft.VisualBasic` 네임 스페이스 때문에 <xref:System.Windows.Forms> 네임 스페이스 정의 <xref:System.Windows.Forms.Day> 열거형으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-663">If you use the `Day` function, you might have to qualify it with the `Microsoft.VisualBasic` namespace, because the <xref:System.Windows.Forms> namespace defines <xref:System.Windows.Forms.Day> as an enumeration.</span></span> <span data-ttu-id="c2644-664">다음 예제에서는 어떻게 한정 `Day` 이 모호성 확인:</span><span class="sxs-lookup"><span data-stu-id="c2644-664">The following example shows how qualifying `Day` resolves this ambiguity:</span></span>  
  
```vb  
Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)  
```  
  
 <span data-ttu-id="c2644-665">호출 하 여 해당 월의 일을 얻을 수도 있습니다 `DatePart` 를 지정 하 고 `DateInterval.Day` 에 대 한 합니다 *간격* 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-665">You can also obtain the day of the month by calling `DatePart` and specifying `DateInterval.Day` for the *Interval* argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2644-666">다음 예제에서는 `Day` 함수를 지정된 된 날짜에서 월의 일을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-666">The following example uses the `Day` function to obtain the day of the month from a specified date.</span></span> <span data-ttu-id="c2644-667">개발 환경에서 날짜 리터럴 표준 짧은 형식 (예: "02/12/1969") 코드의 로캘 설정을 사용 하 여 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-667">In the development environment, the date literal is displayed in standard short format (such as "02/12/1969") using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#30)]  
  
 <span data-ttu-id="c2644-668">`Day` 구별 되도록 한정 됩니다는 <xref:System.Windows.Forms.Day?displayProperty=nameWithType> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-668">`Day` is qualified to distinguish it from the <xref:System.Windows.Forms.Day?displayProperty=nameWithType> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static int Hour (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Hour(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hour (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Hour(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Hour : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Hour TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue"><span data-ttu-id="c2644-669">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-669">Required.</span></span> <span data-ttu-id="c2644-670">시간을 추출할 <see langword="Date" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-670">A <see langword="Date" /> value from which you want to extract the hour.</span></span></param>
        <summary><span data-ttu-id="c2644-671">시간을 나타내는 0에서 23까지의 정수 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-671">Returns an integer value from 0 through 23 representing the hour of the day.</span></span></summary>
        <returns><span data-ttu-id="c2644-672">시간을 나타내는 0에서 23까지의 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-672">An integer value from 0 through 23 representing the hour of the day.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-673">호출 하 여 하루 중 시간을 가져올 수도 있습니다 `DatePart` 를 지정 하 고 `DateInterval.Hour` 에 대 한는 `Interval` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-673">You can also obtain the hour of the day by calling `DatePart` and specifying `DateInterval.Hour` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2644-674">이 예제에서는 `Hour` 함수를 지정된 된 시간에서 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-674">This example uses the `Hour` function to obtain the hour from a specified time.</span></span> <span data-ttu-id="c2644-675">개발 환경에서 시간 리터럴이 코드의 로캘 설정을 사용 하 여 간단한 시간 형식으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-675">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static int Minute (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Minute(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Minute (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Minute(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Minute : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Minute TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue"><span data-ttu-id="c2644-676">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-676">Required.</span></span> <span data-ttu-id="c2644-677">분을 추출할 <see langword="Date" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-677">A <see langword="Date" /> value from which you want to extract the minute.</span></span></param>
        <summary><span data-ttu-id="c2644-678">분을 나타내는 0에서 59까지의 정수 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-678">Returns an integer value from 0 through 59 representing the minute of the hour.</span></span></summary>
        <returns><span data-ttu-id="c2644-679">분을 나타내는 0에서 59까지의 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-679">An integer value from 0 through 59 representing the minute of the hour.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-680">분을 호출 하 여 가져올 수도 있습니다 `DatePart` 를 지정 하 고 `DateInterval.Minute` 에 대 한는 `Interval` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-680">You can also obtain the minute of the hour by calling `DatePart` and specifying `DateInterval.Minute` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2644-681">이 예제에서는 `Minute` 함수를 지정된 된 시간에서 분을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-681">This example uses the `Minute` function to obtain the minute of the hour from a specified time.</span></span> <span data-ttu-id="c2644-682">개발 환경에서 시간 리터럴이 코드의 로캘 설정을 사용 하 여 간단한 시간 형식으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-682">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static int Month (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Month(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Month (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Month(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Month : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Month DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="c2644-683">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-683">Required.</span></span> <span data-ttu-id="c2644-684">월을 추출할 <see langword="Date" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-684">A <see langword="Date" /> value from which you want to extract the month.</span></span></param>
        <summary><span data-ttu-id="c2644-685">월을 나타내는 1에서 12까지의 정수 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-685">Returns an integer value from 1 through 12 representing the month of the year.</span></span></summary>
        <returns><span data-ttu-id="c2644-686">월을 나타내는 1에서 12까지의 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-686">An integer value from 1 through 12 representing the month of the year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-687">월을 호출 하 여 가져올 수도 있습니다 `DatePart` 를 지정 하 고 `DateInterval.Month` 에 대 한는 `Interval` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-687">You can also obtain the month of the year by calling `DatePart` and specifying `DateInterval.Month` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2644-688">이 예제에서는 `Month` 함수는 지정 된 날짜에서 월을 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-688">This example uses the `Month` function to obtain the month from a specified date.</span></span> <span data-ttu-id="c2644-689">개발 환경에서 리터럴 즉 표시 되는 날짜 형식으로 코드의 로캘 설정을 사용 하 여 날짜입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-689">In the development environment, the date literal is displayed in short date format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="MonthName">
      <MemberSignature Language="C#" Value="public static string MonthName (int Month, bool Abbreviate = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static string MonthName(int32 Month, bool Abbreviate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MonthName (Month As Integer, Optional Abbreviate As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member MonthName : int * bool -&gt; string" Usage="Microsoft.VisualBasic.DateAndTime.MonthName (Month, Abbreviate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Month" Type="System.Int32" />
        <Parameter Name="Abbreviate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Month"><span data-ttu-id="c2644-690">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-690">Required.</span></span> <span data-ttu-id="c2644-691">1부터 13 사이의 숫자로 지정된 월 이름입니다. 여기서 1은 1월을 나타내고 12는 12월을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-691">The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December.</span></span> <span data-ttu-id="c2644-692">13개월용 달력의 경우에는 값 13을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-692">You can use the value 13 with a 13-month calendar.</span></span> <span data-ttu-id="c2644-693">시스템에서 12개월용 달력을 사용하는 경우 <paramref name="Month" />가 13이면 <c>MonthName</c>은 빈 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-693">If your system is using a 12-month calendar and <paramref name="Month" /> is 13, <c>MonthName</c> returns an empty string.</span></span></param>
        <param name="Abbreviate"><span data-ttu-id="c2644-694">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-694">Optional.</span></span> <span data-ttu-id="c2644-695">월 이름을 축약하면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-695"><see langword="True" /> to abbreviate the month name; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="c2644-696">기본값은 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-696">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="c2644-697">지정된 월의 이름을 포함하는 문자열 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-697">Returns a string value containing the name of the specified month.</span></span></summary>
        <returns><span data-ttu-id="c2644-698">지정된 월의 이름을 포함하는 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-698">A string value containing the name of the specified month.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-699">반환한 문자열 `MonthName` 에 따라 달라 집니다은 입력된 인수에서 뿐만 아니라 뿐만 합니다 **국가별 옵션** 는 Windows에 지정 된 설정을 **제어판**.</span><span class="sxs-lookup"><span data-stu-id="c2644-699">The string returned by `MonthName` depends not only on the input arguments, but also on the **Regional Options** settings specified in the Windows **Control Panel**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c2644-700">`MonthName` 현재 달력 설정을 사용 합니다 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성을 <xref:System.Globalization.CultureInfo> 클래스는 <xref:System.Globalization> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-700">`MonthName` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="c2644-701">기본값 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 여 값을 결정 **Control Panel** 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-701">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2644-702">이 예제에서는 `MonthName` 여 지정 된 정수 월의 이름을 결정 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-702">This example uses the `MonthName` function to determine the name of the month, by the integer given.</span></span> <span data-ttu-id="c2644-703">부울 값을 결정 합니다 있는지 여부를 전체 이름 (`False`) 또는 약식된 이름 (`True`) 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-703">The Boolean value will determine whether the full name (`False`) or the abbreviated name (`True`) will be displayed.</span></span>  
  
 [!code-vb[VbVbalrFunctions#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c2644-704"><paramref name="Month" />가 1보다 작거나 13보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-704"><paramref name="Month" /> is less than 1 or greater than 13.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTime Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Now" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Now As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Now { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Now : DateTime" Usage="Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2644-705">시스템 설정에 따라 현재 날짜와 시간이 들어 있는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-705">Returns a value containing the current date and time according to your system.</span></span></summary>
        <value><span data-ttu-id="c2644-706">현재 날짜 및 시간에 시스템에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-706">The current date and time according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-707">시스템 날짜를 설정 하려면 사용 된 <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-707">To set the system date, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span> <span data-ttu-id="c2644-708">시스템 시간을 설정 하려면 사용 된 <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-708">To set the system time, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2644-709">다음 예제에서는 `Now` 속성을 현재 시스템 날짜 및 시간을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-709">The following example uses the `Now` property to return the current system date and time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static int Second (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Second(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Second (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Second(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Second : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Second TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue"><span data-ttu-id="c2644-710">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-710">Required.</span></span> <span data-ttu-id="c2644-711">초를 추출할 <see langword="Date" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-711">A <see langword="Date" /> value from which you want to extract the second.</span></span></param>
        <summary><span data-ttu-id="c2644-712">초를 나타내는 0에서 59까지의 정수 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-712">Returns an integer value from 0 through 59 representing the second of the minute.</span></span></summary>
        <returns><span data-ttu-id="c2644-713">초를 나타내는 0에서 59까지의 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-713">An integer value from 0 through 59 representing the second of the minute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-714">분의 두 번째 호출 하 여 가져올 수도 있습니다 `DatePart` 를 지정 하 고 `DateInterval.Second` 에 대 한는 `Interval` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-714">You can also obtain the second of the minute by calling `DatePart` and specifying `DateInterval.Second` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2644-715">다음 예제에서는 `Second` 함수 지정된 된 시간에서 분의 초를 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-715">The following example uses the `Second` function to obtain the second of the minute from a specified time.</span></span> <span data-ttu-id="c2644-716">개발 환경에서 시간 리터럴이 코드의 로캘 설정을 사용 하 여 간단한 시간 형식으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-716">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public static DateTime TimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeOfDay As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime TimeOfDay { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfDay : DateTime with get, set" Usage="Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2644-717">시스템 설정에 따라 현재 시간이 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-717">Returns or sets a <see langword="Date" /> value containing the current time of day according to your system.</span></span></summary>
        <value><span data-ttu-id="c2644-718">시스템 설정에 따라 현재 시간이 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-718">Returns or sets a <see langword="Date" /> value containing the current time of day according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-719">`Date` 기원후 날짜 구성 요소를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-719">The `Date` data type includes date components.</span></span> <span data-ttu-id="c2644-720">시스템 시간을 반환 하는 경우 `TimeOfDay` 이러한 모두 1로 설정 하는 하므로 반환 된 값을 1 년의 첫 번째 날을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-720">When returning the system time, `TimeOfDay` sets these all to 1, so the returned value represents the first day of the year 1.</span></span> <span data-ttu-id="c2644-721">시스템 시간을 설정할 때 `TimeOfDay` 날짜 구성 요소를 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-721">When setting the system time, `TimeOfDay` ignores the date components.</span></span>  
  
 <span data-ttu-id="c2644-722">현재 시스템 시간으로 액세스 하는 `String`를 사용 하 여를 <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="c2644-722">To access the current system time as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> property.</span></span>  
  
 <span data-ttu-id="c2644-723">가져오거나 설정할 현재 시스템 날짜를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-723">To get or set the current system date, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c2644-724">시스템 날짜 또는 시간을 설정 하려면 부분 신뢰 상황에서 해당 실행에 영향을 줄 수 있는 비관리 코드 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-724">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="c2644-725">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 하 고 [코드 액세스 권한](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-725">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2644-726">이 예제에서는 `TimeOfDay` 속성을 현재 시스템 시간을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-726">This example uses the `TimeOfDay` property to return the current system time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Timer" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Timer">
      <MemberSignature Language="C#" Value="public static double Timer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 Timer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timer As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property double Timer { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Timer : double" Usage="Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2644-727">자정 이후 경과된 초 수를 나타내는 <see cref="T:System.Double" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-727">Returns a <see cref="T:System.Double" /> value representing the number of seconds elapsed since midnight.</span></span></summary>
        <value><span data-ttu-id="c2644-728">자정 이후 경과 된 시간 (초) 수를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-728">A value representing the number of seconds elapsed since midnight.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-729">`Timer` 최신 자정 이후의 초 및 밀리초를 반환 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-729">The `Timer` property returns both the seconds and the milliseconds since the most recent midnight.</span></span> <span data-ttu-id="c2644-730">초를 반환 값의 정수 부분에 있으며 밀리초의 소수 부분에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-730">The seconds are in the integral part of the return value, and the milliseconds are in the fractional part.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2644-731">이 예제에서는 `Timer` 속성을 애플리케이션을 일시 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-731">This example uses the `Timer` property to pause the application.</span></span> <span data-ttu-id="c2644-732">일시 중지 하는 동안 다른 처리를 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-732">It can perform other processing during the pause.</span></span>  
  
 [!code-vb[VbVbalrTimerProperty#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTimerProperty/VB/Form1.vb#1)]  
  
 <span data-ttu-id="c2644-733">정규화 해야 하는 `Timer` 속성을를 <xref:Microsoft.VisualBasic?displayProperty=nameWithType> 네임 스페이스 때문에 `Timer` 에 정의 된 클래스 이기도 합니다 <xref:System.Threading?displayProperty=nameWithType>, <xref:System.Timers?displayProperty=nameWithType>, 및 <xref:System.Windows.Forms?displayProperty=nameWithType> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-733">Note that you must qualify the `Timer` property with the <xref:Microsoft.VisualBasic?displayProperty=nameWithType> namespace, because `Timer` is also a defined class in the <xref:System.Threading?displayProperty=nameWithType>, <xref:System.Timers?displayProperty=nameWithType>, and <xref:System.Windows.Forms?displayProperty=nameWithType> namespaces.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.VBMath.Randomize" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Windows.Forms" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeSerial">
      <MemberSignature Language="C#" Value="public static DateTime TimeSerial (int Hour, int Minute, int Second);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeSerial(int32 Hour, int32 Minute, int32 Second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeSerial (Hour As Integer, Minute As Integer, Second As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeSerial(int Hour, int Minute, int Second);" />
      <MemberSignature Language="F#" Value="static member TimeSerial : int * int * int -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.TimeSerial (Hour, Minute, Second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Hour" Type="System.Int32" />
        <Parameter Name="Minute" Type="System.Int32" />
        <Parameter Name="Second" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Hour"><span data-ttu-id="c2644-734">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-734">Required.</span></span> <span data-ttu-id="c2644-735">0에서 23까지의 정수 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-735">Integer expression from 0 through 23.</span></span> <span data-ttu-id="c2644-736">그러나 이 범위를 벗어나는 값도 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-736">However, values outside this range are also accepted.</span></span></param>
        <param name="Minute"><span data-ttu-id="c2644-737">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-737">Required.</span></span> <span data-ttu-id="c2644-738">0에서 59까지의 정수 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-738">Integer expression from 0 through 59.</span></span> <span data-ttu-id="c2644-739">그러나 이 범위를 벗어나는 값도 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-739">However, values outside this range are also accepted.</span></span> <span data-ttu-id="c2644-740"><paramref name="Minute" />의 값은 계산된 시간에 더해지므로 음수 값은 계산된 시간에서 이 값만큼 뺀 분을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-740">The value of <paramref name="Minute" /> is added to the calculated hour, so a negative value specifies minutes before that hour.</span></span></param>
        <param name="Second"><span data-ttu-id="c2644-741">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-741">Required.</span></span> <span data-ttu-id="c2644-742">0에서 59까지의 정수 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-742">Integer expression from 0 through 59.</span></span> <span data-ttu-id="c2644-743">그러나 이 범위를 벗어나는 값도 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-743">However, values outside this range are also accepted.</span></span> <span data-ttu-id="c2644-744"><paramref name="Second" />의 값은 계산된 분에 더해지므로 음수 값은 계산된 분에서 이 값만큼 뺀 초를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-744">The value of <paramref name="Second" /> is added to the calculated minute, so a negative value specifies seconds before that minute.</span></span></param>
        <summary><span data-ttu-id="c2644-745">날짜 정보가 1년 1월 1일로 설정된 상태에서 지정된 시, 분, 초를 나타내는 <see langword="Date" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-745">Returns a <see langword="Date" /> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</span></span></summary>
        <returns><span data-ttu-id="c2644-746">날짜 정보가 1년 1월 1일로 설정된 상태에서 지정된 시, 분, 초를 나타내는 <see langword="Date" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-746">A <see langword="Date" /> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-747">다음 예제에서는 음수, 0 및 양수의 인수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-747">The following example demonstrates negative, zero, and positive argument values.</span></span> <span data-ttu-id="c2644-748">`TimeSerial` 함수 정오에 또는 45: 오전 8:00 3 시간 전에 15 분을 나타내는 시간을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-748">The `TimeSerial` function returns a time representing 15 minutes before three hours before noon, or 8:45:00 AM.</span></span>  
  
```vb  
Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)  
```  
  
 <span data-ttu-id="c2644-749">이면 `Minute` 또는 `Second` 정상 범위를 초과 하면, 적절 하 게 다음 더 큰 단위에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-749">If either `Minute` or `Second` exceeds its normal range, it is applied to the next larger unit as appropriate.</span></span> <span data-ttu-id="c2644-750">예를 들어 75 분을 지정 하는 경우 1 시간 15 분으로 계산 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-750">For example, if you specify 75 minutes, it is evaluated as one hour and 15 minutes.</span></span>  
  
 <span data-ttu-id="c2644-751">`TimeSerial` 하루에서 시간 (초) 수의 총 초 86,400, 모듈로 줄입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-751">`TimeSerial` reduces the total seconds modulo 86,400, which is the number of seconds in a day.</span></span> <span data-ttu-id="c2644-752">따라서 반환 값은 항상 00시: 00에서 23시 59분: 59 사이의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-752">Therefore, the returned time is always between 00:00:00 and 23:59:59.</span></span>  
  
 <span data-ttu-id="c2644-753">`Date` 기원후 날짜 구성 요소를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-753">The `Date` data type includes date components.</span></span> <span data-ttu-id="c2644-754">`TimeSerial` 모두 1로 설정 하므로 반환 된 값을 1 년의 첫 번째 날을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-754">`TimeSerial` sets all of these to 1, so the returned value represents the first day of the year 1.</span></span> <span data-ttu-id="c2644-755">그러나 인수의 값은 24 시간을 초과 하는 계산된 시간으로 인해 일 필요에 따라 증가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-755">However, if the values of the arguments cause the calculated time to exceed 24 hours, the day is incremented as necessary.</span></span> <span data-ttu-id="c2644-756">다음 예에서 값 `Hour` 및 `Minute` 24 시간 넘게의 결합 된 시간에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-756">In the following example, the values of `Hour` and `Minute` result in a combined time of more than 24 hours.</span></span>  
  
```vb  
MsgBox(TimeSerial(23, 75, 0))   
' The preceding statement displays "1/2/0001 12:15:00 AM".  
```  
  
 <span data-ttu-id="c2644-757">인수의 값 결과가 음수는 계산된 시간, 날짜 정보가 1/1/0001를로 하 고 시간 정보가 00시: 00에서 23시 59분: 59 사이 여야 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-757">If the values of the arguments result in a negative calculated time, the date information is set to 1/1/0001 and the time information is adjusted to be between 00:00:00 and 23:59:59.</span></span> <span data-ttu-id="c2644-758">그러나 계산 된 시간 보다 작은 음의 24 있으면는 <xref:System.ArgumentOutOfRangeException> 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-758">However, if the calculated time is less than negative 24 hours, an <xref:System.ArgumentOutOfRangeException> error occurs.</span></span>  
  
 <span data-ttu-id="c2644-759">이후 모든 `Date` 값을 지원를 <xref:System.DateTime?displayProperty=nameWithType> 구조를 해당 메서드에 제공 조합에서 추가 옵션을 `Date` 값.</span><span class="sxs-lookup"><span data-stu-id="c2644-759">Since every `Date` value is supported by a <xref:System.DateTime?displayProperty=nameWithType> structure, its methods give you additional options in assembling a `Date` value.</span></span> <span data-ttu-id="c2644-760">예를 들어 오버 로드 된 중 사용할 수 있습니다 <xref:System.DateTime.%23ctor%2A> 채우는 데 생성자는 `Date` 원하는 조합 구성 요소를 사용 하 여 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-760">For example, you can employ one of the overloaded <xref:System.DateTime.%23ctor%2A> constructors to populate a `Date` variable using the desired combination of components.</span></span> <span data-ttu-id="c2644-761">다음 예제에서는 `newDateTime` 6, 1978 년 5 월 전에 아침에서 8 시 30 초의 0.1에:</span><span class="sxs-lookup"><span data-stu-id="c2644-761">The following example sets `newDateTime` to May 6, 1978 at one tenth of a second before 8:30 in the morning:</span></span>  
  
```vb  
Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 <span data-ttu-id="c2644-762">다음 예제에서는 `TimeSerial` 함수에 대해 지정 된 시간, 분 및 초는 시간을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-762">The following example uses the `TimeSerial` function to return a time for the specified hour, minute, and second.</span></span>  
  
 [!code-vb[VbVbalrFunctions#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c2644-763">인수의 범위가 -2,147,483,648 ~ 2,147,483,647을 벗어났습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-763">An argument is outside the range -2,147,483,648 through 2,147,483,647</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c2644-764">계산된 시간이 -24 시보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-764">Calculated time is less than negative 24 hours.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TimeString">
      <MemberSignature Language="C#" Value="public static string TimeString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string TimeString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ TimeString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeString : string with get, set" Usage="Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2644-765">시스템의 현재 시간을 나타내는 문자열 값을 반환하거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-765">Returns or sets a string value representing the current time of day according to your system.</span></span></summary>
        <value><span data-ttu-id="c2644-766">시스템의 현재 시간을 나타내는 문자열 값을 반환하거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-766">Returns or sets a string value representing the current time of day according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-767">`TimeString` 항상 반환 "hh: mm:" 시스템 시간은 24 시간 형식 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-767">`TimeString` always returns the system time as "HH:mm:ss", which is a 24-hour format.</span></span> <span data-ttu-id="c2644-768">형식은 고정 문화권을 변경 해도 변경 되지 않습니다는이 **국가별 옵션** 에 **제어판**합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-768">This format is culture-invariant, which means it does not change even if you change the **Regional Options** in **Control Panel**.</span></span>  
  
 <span data-ttu-id="c2644-769">가져오거나 현재 시스템 날짜를 설정 하는 `String`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-769">To get or set the current system date as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> property.</span></span>  
  
 <span data-ttu-id="c2644-770">현재 시스템 날짜 또는 시간을 가져오려면 사용자의 로캘 형식이 나 사용자 지정 형식을 제공 합니다 <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> 속성을는 <xref:Microsoft.VisualBasic.Strings.Format%2A> 함수에는 미리 정의 되거나 사용자 정의 날짜/시간 형식 중 하나를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-770">To get the current system date or time in the format of your locale, or in a custom format, supply the <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> property to the <xref:Microsoft.VisualBasic.Strings.Format%2A> function, specifying either a predefined or user-defined date/time format.</span></span> <span data-ttu-id="c2644-771">다음은 이에 대한 예입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-771">The following example demonstrates this.</span></span>  
  
```vb  
MsgBox("The formatted time is " & Format(Now, "hh.mm.ss.fff tt"))  
```  
  
 <span data-ttu-id="c2644-772">현재 시스템 시간으로 액세스 하는 `Date`를 사용 하 여를 <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="c2644-772">To access the current system time as a `Date`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c2644-773">시스템 날짜 또는 시간을 설정 하려면 부분 신뢰 상황에서는 해당 실행에 영향을 줄 수 있는 비관리 코드 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-773">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial trust situations.</span></span> <span data-ttu-id="c2644-774">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 하 고 [코드 액세스 권한](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-774">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2644-775">이 예제에서는 `TimeString` 속성을 현재 시스템 시간을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-775">This example uses the `TimeString` property to display the current system time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c2644-776"><see langword="TimeString" /> 값을 설정하는 데 사용된 형식이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-776">Invalid format used to set the value of <see langword="TimeString" />.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="TimeValue">
      <MemberSignature Language="C#" Value="public static DateTime TimeValue (string StringTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeValue(string StringTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeValue (StringTime As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeValue(System::String ^ StringTime);" />
      <MemberSignature Language="F#" Value="static member TimeValue : string -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.TimeValue StringTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringTime" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="StringTime"><span data-ttu-id="c2644-777">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-777">Required.</span></span> <span data-ttu-id="c2644-778">1년 1월 1일 00:00:00부터 9999년 12월 31일 23:59:59까지의 날짜/시간 값을 나타내는 문자열 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-778">A string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</span></span></param>
        <summary><span data-ttu-id="c2644-779">날짜 정보가 1년 1월 1일로 설정된 상태에서 문자열로 표시된 시간 정보가 들어 있는 <see langword="Date" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-779">Returns a <see langword="Date" /> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</span></span></summary>
        <returns><span data-ttu-id="c2644-780">날짜 정보가 1년 1월 1일로 설정된 상태에서 문자열로 표시된 시간 정보를 포함하는 <see langword="Date" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-780">A <see langword="Date" /> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-781">유효한 시간을 입력할 수는 12 시간제 또는 24 시간 시계를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-781">You can enter valid times using a 12-hour or 24-hour clock.</span></span> <span data-ttu-id="c2644-782">예를 들어 `"2:24 P.M."` 하 고 `"14:24"` 은 모두 유효 `StringTime` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-782">For example, `"2:24 P.M."` and `"14:24"` are both valid `StringTime` arguments.</span></span>  
  
 <span data-ttu-id="c2644-783">경우는 `StringTime` 날짜 정보를 포함 하는 인수 `TimeValue` 반환된 된 값에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-783">If the `StringTime` argument includes date information, `TimeValue` does not include it in the returned value.</span></span> <span data-ttu-id="c2644-784">그러나 경우 `StringTime` 는 잘못 된 날짜 정보, 예를 들어 "년 1 월 32"는 <xref:System.InvalidCastException> 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-784">However, if `StringTime` includes invalid date information, for example "January 32," an <xref:System.InvalidCastException> error occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2644-785">다음 예제에서는 `TimeValue` 시간 문자열로 변환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-785">The following example uses the `TimeValue` function to convert a string to a time.</span></span> <span data-ttu-id="c2644-786">한 번에 직접 할당할 날짜 리터럴을 사용할 수도 있습니다는 `Date` 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-786">You can also use date literals to directly assign a time to a `Date` variable.</span></span>  
  
 [!code-vb[VbVbalrFunctions#51](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c2644-787"><paramref name="StringTime" />에 잘못된 날짜 정보가 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-787"><paramref name="StringTime" /> includes invalid date information.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Today">
      <MemberSignature Language="C#" Value="public static DateTime Today { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Today" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberSignature Language="VB.NET" Value="Public Property Today As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Today { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.Today : DateTime with get, set" Usage="Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2644-788">사용 중인 시스템에 따라 현재 날짜가 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-788">Returns or sets a <see langword="Date" /> value containing the current date according to your system.</span></span></summary>
        <value><span data-ttu-id="c2644-789">사용 중인 시스템에 따라 현재 날짜가 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-789">Returns or sets a <see langword="Date" /> value containing the current date according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-790">`Date` 시간 구성 요소를 포함 하는 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-790">The `Date` data type includes time components.</span></span> <span data-ttu-id="c2644-791">시스템 날짜를 반환 하는 경우 `Today` 모두 0으로 설정 하므로 반환된 된 값 자정 (00: 00:00).</span><span class="sxs-lookup"><span data-stu-id="c2644-791">When returning the system date, `Today` sets all of these to 0, so the returned value represents midnight (00:00:00).</span></span> <span data-ttu-id="c2644-792">시스템 날짜를 설정할 때 `Today` 시간 구성 요소를 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-792">When setting the system date, `Today` ignores the time components.</span></span>  
  
 <span data-ttu-id="c2644-793">로 현재 시스템 날짜를 `String`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-793">To access the current system date as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> property.</span></span>  
  
 <span data-ttu-id="c2644-794">가져오거나 설정할 현재 시스템 시간을 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-794">To get or set the current system time, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c2644-795">시스템 날짜 또는 시간을 설정 하려면 부분 신뢰 상황에서 해당 실행에 영향을 줄 수 있는 비관리 코드 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-795">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="c2644-796">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 하 고 [코드 액세스 권한](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-796">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2644-797">이 예제에서는 `Today` 속성을 현재 시스템 날짜를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-797">This example uses the `Today` property to return the current system date.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Weekday">
      <MemberSignature Language="C#" Value="public static int Weekday (DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Weekday(valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weekday (DateValue As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday) As Integer" />
      <MemberSignature Language="F#" Value="static member Weekday : DateTime * Microsoft.VisualBasic.FirstDayOfWeek -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Weekday (DateValue, DayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="c2644-798">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-798">Required.</span></span> <span data-ttu-id="c2644-799">요일을 확인할 <see langword="Date" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-799">A <see langword="Date" /> value for which you want to determine the day of the week.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="c2644-800">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-800">Optional.</span></span> <span data-ttu-id="c2644-801">주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-801">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="c2644-802">지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-802">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <summary><span data-ttu-id="c2644-803">요일을 나타내는 숫자를 포함하는 정수 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-803">Returns an integer value containing a number representing the day of the week.</span></span></summary>
        <returns><span data-ttu-id="c2644-804">요일을 나타내는 숫자를 포함하는 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-804">An integer value containing a number representing the day of the week.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-805">값을 반환 합니다 `Weekday` 의 값에 해당 하는 함수는 `FirstDayOfWeek` 열거형, 즉, 1은 일요일, 7 토요일을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-805">The value returned by the `Weekday` function corresponds to the values of the `FirstDayOfWeek` enumeration; that is, 1 indicates Sunday and 7 indicates Saturday.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c2644-806">`Weekday` 현재 달력 설정을 사용 합니다 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성을 <xref:System.Globalization.CultureInfo> 클래스는 <xref:System.Globalization> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-806">`Weekday` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="c2644-807">기본값 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 여 값을 결정 **Control Panel** 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-807">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="c2644-808">`DayOfWeek` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-808">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="c2644-809">열거형 값</span><span class="sxs-lookup"><span data-stu-id="c2644-809">Enumeration value</span></span>|<span data-ttu-id="c2644-810">값</span><span class="sxs-lookup"><span data-stu-id="c2644-810">Value</span></span>|<span data-ttu-id="c2644-811">설명</span><span class="sxs-lookup"><span data-stu-id="c2644-811">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="c2644-812">0</span><span class="sxs-lookup"><span data-stu-id="c2644-812">0</span></span>|<span data-ttu-id="c2644-813">시스템 설정에 지정 된 주의 첫째 요일</span><span class="sxs-lookup"><span data-stu-id="c2644-813">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="c2644-814">1</span><span class="sxs-lookup"><span data-stu-id="c2644-814">1</span></span>|<span data-ttu-id="c2644-815">일요일입니다 (기본값)</span><span class="sxs-lookup"><span data-stu-id="c2644-815">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="c2644-816">2</span><span class="sxs-lookup"><span data-stu-id="c2644-816">2</span></span>|<span data-ttu-id="c2644-817">월요일 (ISO 8601 표준, 3.17)</span><span class="sxs-lookup"><span data-stu-id="c2644-817">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="c2644-818">3</span><span class="sxs-lookup"><span data-stu-id="c2644-818">3</span></span>|<span data-ttu-id="c2644-819">화요일</span><span class="sxs-lookup"><span data-stu-id="c2644-819">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="c2644-820">4</span><span class="sxs-lookup"><span data-stu-id="c2644-820">4</span></span>|<span data-ttu-id="c2644-821">수요일</span><span class="sxs-lookup"><span data-stu-id="c2644-821">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="c2644-822">5</span><span class="sxs-lookup"><span data-stu-id="c2644-822">5</span></span>|<span data-ttu-id="c2644-823">목요일</span><span class="sxs-lookup"><span data-stu-id="c2644-823">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="c2644-824">6</span><span class="sxs-lookup"><span data-stu-id="c2644-824">6</span></span>|<span data-ttu-id="c2644-825">금요일</span><span class="sxs-lookup"><span data-stu-id="c2644-825">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="c2644-826">7</span><span class="sxs-lookup"><span data-stu-id="c2644-826">7</span></span>|<span data-ttu-id="c2644-827">토요일</span><span class="sxs-lookup"><span data-stu-id="c2644-827">Saturday</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c2644-828">다음 예제에서는 `Weekday` 함수는 요일이 지정된 된 날짜에서 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-828">The following example uses the `Weekday` function to obtain the day of the week from a specified date.</span></span>  
  
 [!code-vb[VbVbalrFunctions#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#57)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c2644-829"><paramref name="DayOfWeek" />가 0보다 작거나 7보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-829"><paramref name="DayOfWeek" /> is less than 0 or more than 7.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="WeekdayName">
      <MemberSignature Language="C#" Value="public static string WeekdayName (int Weekday, bool Abbreviate = false, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.System);" />
      <MemberSignature Language="ILAsm" Value=".method public static string WeekdayName(int32 Weekday, bool Abbreviate, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function WeekdayName (Weekday As Integer, Optional Abbreviate As Boolean = false, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.System) As String" />
      <MemberSignature Language="F#" Value="static member WeekdayName : int * bool * Microsoft.VisualBasic.FirstDayOfWeek -&gt; string" Usage="Microsoft.VisualBasic.DateAndTime.WeekdayName (Weekday, Abbreviate, FirstDayOfWeekValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Weekday" Type="System.Int32" />
        <Parameter Name="Abbreviate" Type="System.Boolean" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
      </Parameters>
      <Docs>
        <param name="Weekday"><span data-ttu-id="c2644-830">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-830">Required.</span></span> <span data-ttu-id="c2644-831">정수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-831">Integer.</span></span> <span data-ttu-id="c2644-832">형식이며 요일에 대해 지정된 1부터 7까지의 숫자 값입니다. 1은 주의 첫째 요일을 나타내고 7은 주의 마지막 요일을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-832">The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week.</span></span> <span data-ttu-id="c2644-833">첫째 요일과 마지막 요일은 <paramref name="FirstDayOfWeekValue" />의 설정에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-833">The identities of the first and last days depend on the setting of <paramref name="FirstDayOfWeekValue" />.</span></span></param>
        <param name="Abbreviate"><span data-ttu-id="c2644-834">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-834">Optional.</span></span> <span data-ttu-id="c2644-835">해당 요일 이름이 약식 이름인지 여부를 나타내는 <see langword="Boolean" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-835"><see langword="Boolean" /> value that indicates if the weekday name is to be abbreviated.</span></span> <span data-ttu-id="c2644-836">이 인수가 생략된 경우 기본값은 <see langword="False" />이며 해당 요일 이름이 약식 이름이 아님을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-836">If omitted, the default is <see langword="False" />, which means the weekday name is not abbreviated.</span></span></param>
        <param name="FirstDayOfWeekValue"><span data-ttu-id="c2644-837">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-837">Optional.</span></span> <span data-ttu-id="c2644-838">주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-838">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="c2644-839">지정되지 않은 경우 <see langword="FirstDayOfWeek.System" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-839">If not specified, <see langword="FirstDayOfWeek.System" /> is used.</span></span></param>
        <summary><span data-ttu-id="c2644-840">지정한 평일의 이름을 포함하는 문자열 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-840">Returns a string value containing the name of the specified weekday.</span></span></summary>
        <returns><span data-ttu-id="c2644-841">지정한 평일의 이름을 포함하는 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-841">A string value containing the name of the specified weekday.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-842">반환한 문자열 `WeekdayName` 에 따라 달라 집니다은 입력된 인수에서 뿐만 아니라 뿐만 합니다 **국가별 옵션** 는 Windows에 지정 된 설정을 **제어판**.</span><span class="sxs-lookup"><span data-stu-id="c2644-842">The string returned by `WeekdayName` depends not only on the input arguments, but also on the **Regional Options** settings specified in the Windows **Control Panel**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c2644-843">`WeekdayName` 현재 달력 설정을 사용 합니다 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성을 <xref:System.Globalization.CultureInfo> 클래스는 <xref:System.Globalization> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-843">`WeekdayName` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="c2644-844">기본값 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 여 값을 결정 **Control Panel** 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-844">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="c2644-845">`FirstDayOfWeekValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-845">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="c2644-846">열거형 값</span><span class="sxs-lookup"><span data-stu-id="c2644-846">Enumeration value</span></span>|<span data-ttu-id="c2644-847">값</span><span class="sxs-lookup"><span data-stu-id="c2644-847">Value</span></span>|<span data-ttu-id="c2644-848">설명</span><span class="sxs-lookup"><span data-stu-id="c2644-848">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="c2644-849">0</span><span class="sxs-lookup"><span data-stu-id="c2644-849">0</span></span>|<span data-ttu-id="c2644-850">시스템에 지정 된 주의 첫째 요일 설정 (기본값)</span><span class="sxs-lookup"><span data-stu-id="c2644-850">First day of week specified in system settings (default)</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="c2644-851">1</span><span class="sxs-lookup"><span data-stu-id="c2644-851">1</span></span>|<span data-ttu-id="c2644-852">일요일</span><span class="sxs-lookup"><span data-stu-id="c2644-852">Sunday</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="c2644-853">2</span><span class="sxs-lookup"><span data-stu-id="c2644-853">2</span></span>|<span data-ttu-id="c2644-854">월요일 (ISO 8601 표준, 3.17)</span><span class="sxs-lookup"><span data-stu-id="c2644-854">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="c2644-855">3</span><span class="sxs-lookup"><span data-stu-id="c2644-855">3</span></span>|<span data-ttu-id="c2644-856">화요일</span><span class="sxs-lookup"><span data-stu-id="c2644-856">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="c2644-857">4</span><span class="sxs-lookup"><span data-stu-id="c2644-857">4</span></span>|<span data-ttu-id="c2644-858">수요일</span><span class="sxs-lookup"><span data-stu-id="c2644-858">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="c2644-859">5</span><span class="sxs-lookup"><span data-stu-id="c2644-859">5</span></span>|<span data-ttu-id="c2644-860">목요일</span><span class="sxs-lookup"><span data-stu-id="c2644-860">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="c2644-861">6</span><span class="sxs-lookup"><span data-stu-id="c2644-861">6</span></span>|<span data-ttu-id="c2644-862">금요일</span><span class="sxs-lookup"><span data-stu-id="c2644-862">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="c2644-863">7</span><span class="sxs-lookup"><span data-stu-id="c2644-863">7</span></span>|<span data-ttu-id="c2644-864">토요일</span><span class="sxs-lookup"><span data-stu-id="c2644-864">Saturday</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c2644-865">다음 예제에서는 합니다 `Weekday` 함수를 지정된 된 날짜에서 요일을 기준 차례로 `WeekDayName` 해당 번호의 된 요일 이름을 가져오려면 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-865">The following example uses the `Weekday` function to obtain the day of the week from a specified date, and then the `WeekDayName` function to obtain the name of the weekday from its number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#58)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c2644-866"><paramref name="Weekday" />가 1-7 범위를 벗어났거나 <paramref name="FirstDayOfWeekValue" />가 0-7 범위를 벗어났습니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-866"><paramref name="Weekday" /> is less than 1 or greater than 7, or <paramref name="FirstDayOfWeekValue" /> is less than 0 or greater than 7.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static int Year (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Year(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Year (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Year(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Year : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Year DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="c2644-867">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c2644-867">Required.</span></span> <span data-ttu-id="c2644-868">연도를 추출할 원래 <see langword="Date" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-868">A <see langword="Date" /> value from which you want to extract the year.</span></span></param>
        <summary><span data-ttu-id="c2644-869">연도를 나타내는 1에서 9999까지의 정수 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-869">Returns an integer value from 1 through 9999 representing the year.</span></span></summary>
        <returns><span data-ttu-id="c2644-870">연도를 나타내는 1에서 9999까지의 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-870">An integer value from 1 through 9999 representing the year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2644-871">호출 하 여 연도 가져올 수도 있습니다 `DatePart` 를 지정 하 고 `DateInterval.Year` 에 대 한는 `Interval` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-871">You can also obtain the year by calling `DatePart` and specifying `DateInterval.Year` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2644-872">다음 예제에서는 `Year` 함수는 지정 된 날짜에서 연도 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-872">The following example uses the `Year` function to obtain the year from a specified date.</span></span> <span data-ttu-id="c2644-873">개발 환경에서 리터럴 즉 표시 되는 날짜 형식으로 코드의 로캘 설정을 사용 하 여 날짜입니다.</span><span class="sxs-lookup"><span data-stu-id="c2644-873">In the development environment, the date literal is displayed in short date format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
  </Members>
</Type>