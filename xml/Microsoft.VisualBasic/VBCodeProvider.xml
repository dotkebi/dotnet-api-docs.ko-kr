<Type Name="VBCodeProvider" FullName="Microsoft.VisualBasic.VBCodeProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1cda1ba61104e0622e1f35ee44a47afd24665579" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56759190" /></Metadata><TypeSignature Language="C#" Value="public class VBCodeProvider : System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VBCodeProvider extends System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBCodeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class VBCodeProvider&#xA;Inherits CodeDomProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBCodeProvider : System::CodeDom::Compiler::CodeDomProvider" />
  <TypeSignature Language="F#" Value="type VBCodeProvider = class&#xA;    inherit CodeDomProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.Compiler.CodeDomProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0931e-101">Visual Basic 코드 생성기 및 코드 컴파일러의 인스턴스에 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-101">Provides access to instances of the Visual Basic code generator and code compiler.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0931e-102">이 클래스는 Visual Basic의 인스턴스를 검색 하는 데 사용할 수 있는 메서드를 제공 <xref:System.CodeDom.Compiler.ICodeGenerator> 고 <xref:System.CodeDom.Compiler.ICodeCompiler> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-102">This class provides methods that can be used to retrieve instances of the Visual Basic <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> implementations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0931e-103">이 클래스는 모든 멤버에 적용 되는 클래스 수준에서 상속 요청과 링크 요청을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-103">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="0931e-104"><xref:System.Security.SecurityException> 직접 실행 호출자 또는 파생된 클래스에 완전 신뢰 권한이 없는 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-104">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0931e-105">다음 예제에서는 소스 파일을 컴파일하는 C# 또는 Visual Basic 코드 공급자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-105">The following example uses either the C# or Visual Basic code provider to compile a source file.</span></span> <span data-ttu-id="0931e-106">이 예제에서는 입력된 파일 확장명을 검사 하 고 해당 사용 <xref:Microsoft.CSharp.CSharpCodeProvider> 또는 <xref:Microsoft.VisualBasic.VBCodeProvider> 컴파일에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-106">The example checks the input file extension and uses the corresponding <xref:Microsoft.CSharp.CSharpCodeProvider> or <xref:Microsoft.VisualBasic.VBCodeProvider> for compilation.</span></span>  <span data-ttu-id="0931e-107">입력된 파일을 실행 파일로 컴파일되고 컴파일 오류는 콘솔에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-107">The input file is compiled into an executable file, and any compilation errors are displayed to the console.</span></span>  
  
 [!code-csharp[CodeDom_CodeProviders#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CodeProviders/CS/source.cs#2)]
 [!code-vb[CodeDom_CodeProviders#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CodeProviders/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="0931e-108">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-108">for full trust for the immediate caller.</span></span> <span data-ttu-id="0931e-109">이 클래스는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-109">This class cannot be used by partially trusted code.</span></span></permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="0931e-110">상속자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-110">for full trust for inheritors.</span></span> <span data-ttu-id="0931e-111">부분적으로 신뢰할 수 있는 코드에서이 클래스를 상속할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-111">This class cannot be inherited by partially trusted code.</span></span></permission>
    <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
    <altmember cref="T:System.CodeDom.Compiler.ICodeCompiler" />
    <altmember cref="N:System.CodeDom" />
    <altmember cref="N:System.CodeDom.Compiler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0931e-112"><see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-112">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VBCodeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VBCodeProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0931e-113"><see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-113">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="0931e-114">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-114">for full trust for the immediate caller.</span></span> <span data-ttu-id="0931e-115">이 클래스는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-115">This class cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="0931e-116">상속자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-116">for full trust for inheritors.</span></span> <span data-ttu-id="0931e-117">부분적으로 신뢰할 수 있는 코드에서이 클래스를 상속할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-117">This class cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VBCodeProvider (System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerOptions As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VBCodeProvider(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.VBCodeProvider : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.VisualBasic.VBCodeProvider" Usage="new Microsoft.VisualBasic.VBCodeProvider providerOptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="providerOptions"><span data-ttu-id="0931e-118">구성 파일의 공급자 옵션을 포함하는 <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-118">A <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains the provider options from the configuration file.</span></span></param>
        <summary><span data-ttu-id="0931e-119">지정된 공급자 옵션을 사용하여 <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-119">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> class by using the specified provider options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0931e-120">에 대 한 값 `providerOptions` 에서 구성 파일의 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-120">The value for `providerOptions` is obtained from the  element in the configuration file.</span></span> <span data-ttu-id="0931e-121">버전을 식별할 수 있습니다 합니다 <xref:Microsoft.VisualBasic.VBCodeProvider> 지정 하 여 사용 하려는 `<providerOption>` 요소를 "CompilerVersion" 옵션으로 제공 하 고 옵션 값으로 버전 번호 (예: "v3.5")를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-121">You can identify the version of the <xref:Microsoft.VisualBasic.VBCodeProvider> you want to use by specifying the `<providerOption>` element, supplying "CompilerVersion" as the option name, and supplying the version number (for example, "v3.5") as the option value.</span></span> <span data-ttu-id="0931e-122">소문자 "v"를 사용 하 여 버전 번호를 빨라야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-122">You must precede the version number with a lower case "v".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0931e-123">다음 구성 파일 예제에서는 코드 공급자를 사용 해야 하는 Visual Basic 버전 3.5를 지정 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-123">The following configuration file example demonstrates how to specify that version 3.5 of the Visual Basic code provider should be used.</span></span>  
  
```xml  
<configuration>  
  <system.codedom>  
    <compilers>  
      <!-- zero or more compiler elements -->  
      <compiler  
          language="vb;VisualBasic"  
          extension=".vb"  
          type="Microsoft.VisualBasic.VBCodeProvider, System,   
          Version=2.0.3600.0, Culture=neutral,   
          PublicKeyToken=b77a5c561934e089"  
          compilerOptions="/optimize"  
          warningLevel="1" >  
          <providerOption  
            name="CompilerVersion"  
            value="v3.5" />  
        </compiler>  
    </compilers>  
  </system.codedom>  
</configuration>  
```  
  
 <span data-ttu-id="0931e-124">다음 예제에서는 컴파일러 버전의 새 인스턴스를 만들 때 지정 하는 방법의 <xref:Microsoft.VisualBasic.VBCodeProvider> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-124">The following example shows how to specify the compiler version when creating a new instance of the <xref:Microsoft.VisualBasic.VBCodeProvider> class.</span></span>  
  
 [!code-vb[VBProvider.ProviderOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/vbprovider.provideroptions/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0931e-125"><paramref name="providerOptions" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-125"><paramref name="providerOptions" /> is <see langword="null" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="0931e-126">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-126">for full trust for the immediate caller.</span></span> <span data-ttu-id="0931e-127">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-127">This member cannot be used by partially trusted code.</span></span></permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/index.md"><span data-ttu-id="0931e-128">.NET Framework의 구성 파일 스키마</span><span class="sxs-lookup"><span data-stu-id="0931e-128">Configuration file schema for the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/compilers-element.md"><span data-ttu-id="0931e-129">&lt;컴파일러&gt; 요소</span><span class="sxs-lookup"><span data-stu-id="0931e-129">&lt;compilers&gt; Element</span></span></related>
        <related type="Article" href="~/docs/framework/reflection-and-codedom/specifying-fully-qualified-type-names.md"><span data-ttu-id="0931e-130">정규화된 형식 이름 지정</span><span class="sxs-lookup"><span data-stu-id="0931e-130">Specifying Fully Qualified Type Names</span></span></related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/provideroption-element.md"><span data-ttu-id="0931e-131">&lt;provideroption&gt; 요소</span><span class="sxs-lookup"><span data-stu-id="0931e-131">&lt;provideroption&gt; Element</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateCompiler">
      <MemberSignature Language="C#" Value="public override System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.CreateCompiler" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCompiler () As ICodeCompiler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::Compiler::ICodeCompiler ^ CreateCompiler();" />
      <MemberSignature Language="F#" Value="override this.CreateCompiler : unit -&gt; System.CodeDom.Compiler.ICodeCompiler" Usage="vBCodeProvider.CreateCompiler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use CodeDomProvider class")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete("Callers should not use the ICodeCompiler interface and should instead use the methods directly on the CodeDomProvider class.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeCompiler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0931e-132">Visual Basic 코드 컴파일러의 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-132">Gets an instance of the Visual Basic code compiler.</span></span></summary>
        <returns><span data-ttu-id="0931e-133">구현된 Visual Basic <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-133">An instance of the Visual Basic <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.Compiler.ICodeCompiler" />
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public override System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.CreateGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateGenerator () As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator();" />
      <MemberSignature Language="F#" Value="override this.CreateGenerator : unit -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="vBCodeProvider.CreateGenerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use CodeDomProvider class")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete("Callers should not use the ICodeGenerator interface and should instead use the methods directly on the CodeDomProvider class.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0931e-134">Visual Basic 코드 생성기 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-134">Gets an instance of the Visual Basic code generator.</span></span></summary>
        <returns><span data-ttu-id="0931e-135">구현된 Visual Basic <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-135">An instance of the Visual Basic <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
      </Docs>
    </Member>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public override string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.VBCodeProvider.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FileExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FileExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExtension : string" Usage="Microsoft.VisualBasic.VBCodeProvider.FileExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0931e-136">소스 코드 파일을 만들 때 사용할 확장명을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-136">Gets the file name extension to use when creating source code files.</span></span></summary>
        <value><span data-ttu-id="0931e-137">생성된 소스 코드 파일에 사용할 확장명입니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-137">The file name extension to use for generated source code files.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0931e-138">이 파일 확장명은 일반적으로 언어의 소스 코드 파일에서 사용 하는 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-138">This file name extension is usually the extension used by the language's source code files.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromMember">
      <MemberSignature Language="C#" Value="public override void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateCodeFromMember (member As CodeTypeMember, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateCodeFromMember(System::CodeDom::CodeTypeMember ^ member, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="override this.GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="vBCodeProvider.GenerateCodeFromMember (member, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="0931e-139">코드를 생성할 <see cref="T:System.CodeDom.CodeTypeMember" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-139">A <see cref="T:System.CodeDom.CodeTypeMember" /> to generate code for.</span></span></param>
        <param name="writer"><span data-ttu-id="0931e-140">쓸 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-140">The <see cref="T:System.IO.TextWriter" /> to write to.</span></span></param>
        <param name="options"><span data-ttu-id="0931e-141">코드를 생성할 때 사용할 <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-141">The <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> to use when generating the code.</span></span></param>
        <summary><span data-ttu-id="0931e-142">지정된 텍스트 작성기와 코드 생성기 옵션을 사용하여 지정된 클래스 멤버에 대한 코드를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-142">Generates code for the specified class member using the specified text writer and code generator options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0931e-143">멤버는 해당 컨텍스트에 따라 다르게 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-143">Members are generated differently depending on their context.</span></span> <span data-ttu-id="0931e-144">예를 들어 인터페이스의 메서드 또는 필드 열거형에 다르게 생성 됩니다 메서드 또는 클래스에는 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-144">For example, a method in an interface or a field in an enumeration is generated differently than a method or field on a class.</span></span>  <span data-ttu-id="0931e-145">이 구현은 클래스 컨텍스트에서 멤버에 대 한 코드를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-145">This implementation generates code for a member in the class context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0931e-146">다음 코드 예제에서는 <xref:Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember%2A> CodeDOM 그래프에 사용할 코드 조각을 만드는 방법.</span><span class="sxs-lookup"><span data-stu-id="0931e-146">The following code example shows the use of the <xref:Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember%2A> method to create a code fragment to be used in a CodeDOM graph.</span></span> <span data-ttu-id="0931e-147">이 코드 예제는에 대해 제공 된 큰 예제의 일부 합니다 <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> 메서드는 <xref:System.CodeDom.Compiler.CodeDomProvider> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-147">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> method of the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#3)]
 [!code-vb[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="vBCodeProvider.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0931e-148">형식 변환기를 검색할 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-148">The type of object to retrieve a type converter for.</span></span></param>
        <summary><span data-ttu-id="0931e-149">지정된 개체 형식에 대한 <see cref="T:System.ComponentModel.TypeConverter" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-149">Gets a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type of object.</span></span></summary>
        <returns><span data-ttu-id="0931e-150">지정된 형식에 대한 <see cref="T:System.ComponentModel.TypeConverter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-150">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0931e-151">파생된 클래스는 특정 데이터 형식에 대 한 특정 유형의 형식 변환기를 제공 하려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-151">A derived class can override this method to provide specific types of type converters for specific data types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageOptions">
      <MemberSignature Language="C#" Value="public override System.CodeDom.Compiler.LanguageOptions LanguageOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.Compiler.LanguageOptions LanguageOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.VBCodeProvider.LanguageOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LanguageOptions As LanguageOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::CodeDom::Compiler::LanguageOptions LanguageOptions { System::CodeDom::Compiler::LanguageOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.LanguageOptions : System.CodeDom.Compiler.LanguageOptions" Usage="Microsoft.VisualBasic.VBCodeProvider.LanguageOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.LanguageOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0931e-152">언어 기능 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-152">Gets a language features identifier.</span></span></summary>
        <value><span data-ttu-id="0931e-153">언어의 특수 기능을 나타내는 <see cref="T:System.CodeDom.Compiler.LanguageOptions" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0931e-153">A <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> that indicates special features of the language.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.Compiler.LanguageOptions" />
      </Docs>
    </Member>
  </Members>
</Type>