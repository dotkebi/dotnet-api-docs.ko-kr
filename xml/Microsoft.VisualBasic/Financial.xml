<Type Name="Financial" FullName="Microsoft.VisualBasic.Financial">
  <Metadata><Meta Name="ms.openlocfilehash" Value="68cb7062c69fe85409574dd4a06d5869858b371b" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58548395" /></Metadata><TypeSignature Language="C#" Value="public sealed class Financial" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Financial extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Financial" />
  <TypeSignature Language="VB.NET" Value="Public Module Financial" />
  <TypeSignature Language="C++ CLI" Value="public ref class Financial sealed" />
  <TypeSignature Language="F#" Value="type Financial = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c53de-101"><see langword="Financial" /> 모듈에는 재무 관련 작업을 수행하는 데 사용되는 프로시저가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-101">The <see langword="Financial" /> module contains procedures used to perform financial operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c53de-102">이 모듈은 감가상각, 현재와 미래 값, 금리, 요금 및 지불 재무 계산을 수행 하는 Visual Basic 런타임 라이브러리 멤버를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-102">This module supports the Visual Basic run-time library members that perform financial calculations such as depreciation, present and future values, interest rates, rates of return, and payments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c53de-103">이 예제에서는 합니다 `Rate` 함수가 계산을 대출 금리 지불의 총 수를 지정 된 (`TotPmts`), 대출 상환금 양을 (`Payment`), 현재 가치 또는 대출에 대 한 보안 주체 (`PVal`), 미래 대출 값 (`FVal`)를 시작 또는 끝 지불 기간 결제 기한이 여부를 나타내는 숫자입니다 (`PayType`), 및 예상된 이자율 근사값 (`Guess`).</span><span class="sxs-lookup"><span data-stu-id="c53de-103">This example uses the `Rate` function to calculate the interest rate of a loan, given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).</span></span>  
  
 [!code-vb[VbVbalrMath#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="c53de-104">회계 요약</span><span class="sxs-lookup"><span data-stu-id="c53de-104">Financial Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="c53de-105">키워드(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c53de-105">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="c53de-106">Visual Basic 런타임 라이브러리 멤버</span><span class="sxs-lookup"><span data-stu-id="c53de-106">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="DDB">
      <MemberSignature Language="C#" Value="public static double DDB (double Cost, double Salvage, double Life, double Period, double Factor = 2);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 DDB(float64 Cost, float64 Salvage, float64 Life, float64 Period, float64 Factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDB (Cost As Double, Salvage As Double, Life As Double, Period As Double, Optional Factor As Double = 2) As Double" />
      <MemberSignature Language="F#" Value="static member DDB : double * double * double * double * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.DDB (Cost, Salvage, Life, Period, Factor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
        <Parameter Name="Period" Type="System.Double" />
        <Parameter Name="Factor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="c53de-107">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-107">Required.</span></span> <span data-ttu-id="c53de-108">초기 자산 비용입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-108">The initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="c53de-109">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-109">Required.</span></span> <span data-ttu-id="c53de-110">내용 연수 종료 시점의 자산 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-110">The value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="c53de-111">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-111">Required.</span></span> <span data-ttu-id="c53de-112">자산의 내용 연수 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-112">The length of useful life of the asset.</span></span></param>
        <param name="Period"><span data-ttu-id="c53de-113">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-113">Required.</span></span> <span data-ttu-id="c53de-114">자산 감가상각이 계산되는 기간입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-114">The period for which asset depreciation is calculated.</span></span></param>
        <param name="Factor"><span data-ttu-id="c53de-115">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-115">Optional.</span></span> <span data-ttu-id="c53de-116">잔액 감소 비율입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-116">The rate at which the balance declines.</span></span> <span data-ttu-id="c53de-117">생략하면 2(이중 체감 잔액법)로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-117">If omitted, 2 (double-declining method) is assumed.</span></span></param>
        <summary><span data-ttu-id="c53de-118">이중 체감 잔액법 또는 다른 방법을 사용하여 특정 기간의 자산에 대한 감가상각을 지정하는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-118">Returns a value specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</span></span></summary>
        <returns><span data-ttu-id="c53de-119">이중 체감 잔액법 또는 다른 방법을 사용하여 특정 기간의 자산에 대한 감가상각입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-119">The depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c53de-120">이중 체감 잔액 법 빠른 속도로 감가상각을 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-120">The double-declining balance method computes depreciation at an accelerated rate.</span></span> <span data-ttu-id="c53de-121">감가상각 첫 번째 기간에서 가장 높은 하 고 연속 기간에서 감소 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-121">Depreciation is highest in the first period and decreases in successive periods.</span></span>  
  
 <span data-ttu-id="c53de-122">합니다 `Life` 고 `Period` 인수는 같은 단위로 표현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-122">The `Life` and `Period` arguments must be expressed in the same units.</span></span> <span data-ttu-id="c53de-123">예를 들어 경우 `Life` 월에 `Period` 개월 내에도 지정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-123">For example, if `Life` is given in months, `Period` must also be given in months.</span></span> <span data-ttu-id="c53de-124">모든 인수는 양수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-124">All arguments must be positive numbers.</span></span>  
  
 <span data-ttu-id="c53de-125">`DDB` 함수 지정 된 기간에 대 한 감가상각을 계산 하는 다음 수식을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-125">The `DDB` function uses the following formula to calculate depreciation for a given period:</span></span>  
  
 <span data-ttu-id="c53de-126">감가상각 / 기간 = ((Cost-Salvage) \* 비율) / 수명</span><span class="sxs-lookup"><span data-stu-id="c53de-126">Depreciation / Period = ((Cost - Salvage) \* Factor) / Life</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c53de-127">이 예제에서는 합니다 `DDB` 초기 비용을 지정 하는 지정 된 기간 동안 자산의 감가상각을 반환 하는 함수 (`InitCost`), 자산의 수명 끝에 회수 되는 값 (`SalvageVal`), 총 기간 연 단위 (`LifeTime`), 감가상각이 계산 되는 년 기간 (`Depr`).</span><span class="sxs-lookup"><span data-stu-id="c53de-127">This example uses the `DDB` function to return the depreciation of an asset for a specified period given the initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), the total life of the asset in years (`LifeTime`), and the period in years for which the depreciation is calculated (`Depr`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c53de-128"><paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0 또는 <paramref name="Period" /> &gt; <paramref name="Life." /></span><span class="sxs-lookup"><span data-stu-id="c53de-128"><paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0, or <paramref name="Period" /> &gt; <paramref name="Life." /></span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="c53de-129">회계 요약</span><span class="sxs-lookup"><span data-stu-id="c53de-129">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FV">
      <MemberSignature Language="C#" Value="public static double FV (double Rate, double NPer, double Pmt, double PV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FV(float64 Rate, float64 NPer, float64 Pmt, float64 PV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function FV (Rate As Double, NPer As Double, Pmt As Double, Optional PV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member FV : double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.FV (Rate, NPer, Pmt, PV, Due)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="c53de-130">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-130">Required.</span></span> <span data-ttu-id="c53de-131">기간당 이자율입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-131">The interest rate per period.</span></span> <span data-ttu-id="c53de-132">예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-132">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="c53de-133">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-133">Required.</span></span> <span data-ttu-id="c53de-134">연금의 총 지불 기간 수입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-134">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="c53de-135">예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 x 12, 즉 48입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-135">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="c53de-136">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-136">Required.</span></span> <span data-ttu-id="c53de-137">기간당 지불액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-137">The payment to be made each period.</span></span> <span data-ttu-id="c53de-138">지불액에는 일반적으로 연금을 받는 기간 동안 변경되지 않는 원금과 이자가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-138">Payments usually contain principal and interest that doesn't change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="c53de-139">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-139">Optional.</span></span> <span data-ttu-id="c53de-140">일련의 미래 지불액에 대한 현재 값 또는 총액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-140">The present value (or lump sum) of a series of future payments.</span></span> <span data-ttu-id="c53de-141">예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-141">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span> <span data-ttu-id="c53de-142">생략된 경우 0이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-142">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="c53de-143">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-143">Optional.</span></span> <span data-ttu-id="c53de-144"><see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-144">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="c53de-145">이 인수는 납입 기한 말에 납입이 되어야 하면 <see langword="DueDate.EndOfPeriod" />이고, 납입 기한 초에 납입이 되어야 하면 <see langword="DueDate.BegOfPeriod" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-145">This argument must be either <see langword="DueDate.EndOfPeriod" /> if payments are due at the end of the payment period, or <see langword="DueDate.BegOfPeriod" /> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="c53de-146">생략된 경우 <see langword="DueDate.EndOfPeriod" />를 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-146">If omitted, <see langword="DueDate.EndOfPeriod" /> is assumed.</span></span></param>
        <summary><span data-ttu-id="c53de-147">일정 기간의 고정 지불액과 고정 이자율을 기준으로 한 예상 연금액을 지정하는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-147">Returns a value specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="c53de-148">일정 기간의 고정 지불액과 고정 이자율을 기준으로 한 예상 연금액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-148">The future value of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c53de-149">연금은 일련의 시간이 지남에 따라 정기적으로 고정된 금액을 지불 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-149">An annuity is a series of fixed cash payments made over time.</span></span> <span data-ttu-id="c53de-150">연금 (예: 홈 담보 대출) 대출 또는 투자 (예: 월간 절감 계획) 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-150">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="c53de-151">합니다 `Rate` 및 `NPer` 인수는 같은 단위로 지불 기간을 사용 하 여 계산 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-151">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="c53de-152">예를 들어 경우 `Rate` 월을 사용 하 여 계산 됩니다 `NPer` 개월을 사용 하 여 계산할 수도 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-152">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="c53de-153">모든 인수에 대 한 현금 지급 (예: 절약 예치금)은 표현 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-153">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c53de-154">이 예제에서는 합니다 `FV` 함수를 지정 하 여 투자의 미래 값을 반환 하는 속도 기간당 (`APR / 12`), 총 지불 (`TotPmts`), 결제 (`Payment`)의 현재 값을를 투자 (`PVal`), 및 결제 시작과 끝 지불 기간 중에 수행 되는지 여부를 나타내는 숫자 (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="c53de-154">This example uses the `FV` function to return the future value of an investment given the percentage rate that accrues per period (`APR / 12`), the total number of payments (`TotPmts`), the payment (`Payment`), the current value of the investment (`PVal`), and a number that indicates whether the payment is made at the beginning or end of the payment period (`PayType`).</span></span> <span data-ttu-id="c53de-155">되므로 `Payment` 현금 지급을 나타내는 것이 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-155">Note that because `Payment` represents cash paid out, it is a negative number.</span></span>  
  
 [!code-vb[VbVbalrMath#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="c53de-156">회계 요약</span><span class="sxs-lookup"><span data-stu-id="c53de-156">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IPmt">
      <MemberSignature Language="C#" Value="public static double IPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 IPmt(float64 Rate, float64 Per, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function IPmt (Rate As Double, Per As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member IPmt : double * double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.IPmt (Rate, Per, NPer, PV, FV, Due)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Per" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="c53de-157">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-157">Required.</span></span> <span data-ttu-id="c53de-158">기간당 이자율입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-158">The interest rate per period.</span></span> <span data-ttu-id="c53de-159">예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-159">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Per"><span data-ttu-id="c53de-160">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-160">Required.</span></span> <span data-ttu-id="c53de-161">1에서 <paramref name="NPer" />에 이르는 지불 기간입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-161">The payment period in the range 1 through <paramref name="NPer" />.</span></span></param>
        <param name="NPer"><span data-ttu-id="c53de-162">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-162">Required.</span></span> <span data-ttu-id="c53de-163">연금의 총 지불 기간 수입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-163">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="c53de-164">예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 x 12, 즉 48입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-164">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="c53de-165">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-165">Required.</span></span> <span data-ttu-id="c53de-166">현재 값, 금일 값, 일련의 미래 지불액 또는 수령액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-166">The present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="c53de-167">예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-167">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="c53de-168">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-168">Optional.</span></span> <span data-ttu-id="c53de-169">최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-169">The future value or cash balance you want after you've made the final payment.</span></span> <span data-ttu-id="c53de-170">예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-170">For example, the future value of a loan is $0 because that's its value after the final payment.</span></span> <span data-ttu-id="c53de-171">그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-171">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="c53de-172">생략된 경우 0이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-172">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="c53de-173">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-173">Optional.</span></span> <span data-ttu-id="c53de-174"><see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-174">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="c53de-175">이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-175">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="c53de-176">생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-176">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="c53de-177">일정 기간의 고정 지불액과 고정 이자율을 기준으로 일정 기간의 연금에 대한 이자 지불액을 지정하는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-177">Returns a value specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="c53de-178">일정 기간의 고정 지불액과 고정 이자율을 기준으로 일정 기간의 연금에 대한 이자 지불액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-178">The interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c53de-179">연금은 일련의 시간이 지남에 따라 정기적으로 고정된 금액을 지불 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-179">An annuity is a series of fixed cash payments made over time.</span></span> <span data-ttu-id="c53de-180">연금 (예: 홈 담보 대출) 대출 또는 투자 (예: 월간 절감 계획) 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-180">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="c53de-181">합니다 `Rate` 및 `NPer` 인수는 같은 단위로 지불 기간을 사용 하 여 계산 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-181">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="c53de-182">예를 들어 경우 `Rate` 월을 사용 하 여 계산 됩니다 `NPer` 개월을 사용 하 여 계산할 수도 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-182">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="c53de-183">모든 인수에 대 한 현금 지급 (예: 절약 예치금)은 표현 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-183">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c53de-184">이 예제에서는 `IPmt` 지불의 모든 지불은 경우 이자를 계산 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-184">This example uses the `IPmt` function to calculate how much of a payment is interest when all the payments are of equal value.</span></span> <span data-ttu-id="c53de-185">기간당 이자율은 (`APR / 12`), 관심 부분에 필요한는 지불 기간 (`Period`), 총 지불 (`TotPmts`), 현재 가치 또는 대출에 대 한 보안 주체 (`PVal`), 대출의 미래 값 (`FVal`), 및 결제 시작 또는 끝 지불 기간 때문 인지 여부를 나타내는 숫자 (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="c53de-185">Given are the interest percentage rate per period (`APR / 12`), the payment period for which the interest portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c53de-186"><paramref name="Per" /> &lt;= 0 또는 <paramref name="Per" /> &gt; <paramref name="NPer" /></span><span class="sxs-lookup"><span data-stu-id="c53de-186"><paramref name="Per" /> &lt;= 0 or <paramref name="Per" /> &gt; <paramref name="NPer" /></span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="c53de-187">회계 요약</span><span class="sxs-lookup"><span data-stu-id="c53de-187">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IRR">
      <MemberSignature Language="C#" Value="public static double IRR (ref double[] ValueArray, double Guess = 0.1);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 IRR(float64[]&amp; ValueArray, float64 Guess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function IRR (ByRef ValueArray As Double(), Optional Guess As Double = 0.1) As Double" />
      <MemberSignature Language="F#" Value="static member IRR :  * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.IRR (ValueArray, Guess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ValueArray" Type="System.Double[]" RefType="ref" />
        <Parameter Name="Guess" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="ValueArray"><span data-ttu-id="c53de-188">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-188">Required.</span></span> <span data-ttu-id="c53de-189">현금 흐름 값을 지정하는 <see langword="Double" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-189">Array of <see langword="Double" /> specifying cash flow values.</span></span> <span data-ttu-id="c53de-190">배열에는 하나 이상의 음수 값(지불)과 하나 이상의 양수 값(확인)이 포함되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-190">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <param name="Guess"><span data-ttu-id="c53de-191">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-191">Optional.</span></span> <span data-ttu-id="c53de-192"><see langword="IRR" />에서 반환할 추정 값을 지정하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-192">Object specifying value you estimate will be returned by <see langword="IRR" />.</span></span> <span data-ttu-id="c53de-193">생략할 경우 <paramref name="Guess" />는 0.1(10%)이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-193">If omitted, <paramref name="Guess" /> is 0.1 (10 percent).</span></span></param>
        <summary><span data-ttu-id="c53de-194">일련의 주기적인 현금 흐름(지불액과 수령액)에 대한 내부 수익률을 지정하는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-194">Returns a value specifying the internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></summary>
        <returns><span data-ttu-id="c53de-195">일련의 주기적인 현금 흐름(지불액과 수령액)에 대한 내부 수익률입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-195">The internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c53de-196">내부 수익률 지급액 및 수령액 정기적으로 발생 하는 구성 된 투자에 대 한 받는 이자율이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-196">The internal rate of return is the interest rate received for an investment consisting of payments and receipts that occur at regular intervals.</span></span>  
  
 <span data-ttu-id="c53de-197">`IRR` 함수는 배열에 있는 값의 순서를 사용 하 여 지급액 및 수령액의 순서를 해석 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-197">The `IRR` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="c53de-198">올바른 순서로 결제 및 수신 값을 입력 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-198">Be sure to enter your payment and receipt values in the correct sequence.</span></span> <span data-ttu-id="c53de-199">연금에 대 한 각 기간에 대 한 현금 흐름 수정 해야 할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-199">The cash flow for each period does not need to be fixed, as it is for an annuity.</span></span>  
  
 <span data-ttu-id="c53de-200">`IRR` 반복적으로 계산 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-200">`IRR` is calculated by iteration.</span></span> <span data-ttu-id="c53de-201">값을 사용 하 여 시작 `Guess`, `IRR` 계산 결과 0.00001%까지 순환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-201">Starting with the value of `Guess`, `IRR` cycles through the calculation until the result is accurate to within 0.00001 percent.</span></span> <span data-ttu-id="c53de-202">경우 `IRR` 20 후 결과 가져오려고 시도, 실패를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-202">If `IRR` cannot find a result after 20 tries, it fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c53de-203">이 예제는 `IRR` 함수는 일련의 배열에 포함 된 5 개의 현금 흐름에 대 한 내부 수익률을 반환 합니다. `Values()`합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-203">In this example, the `IRR` function returns the internal rate of return for a series of five cash flows contained in the array `Values()`.</span></span> <span data-ttu-id="c53de-204">첫 번째 배열 요소는 비즈니스 착수 비용을 나타내는 부정 현금 흐름입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-204">The first array element is a negative cash flow representing business start-up costs.</span></span> <span data-ttu-id="c53de-205">나머지 4 개의 현금 흐름은 다음 4 년에 대 한 양의 현금 흐름을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-205">The remaining four cash flows represent positive cash flows for the subsequent four years.</span></span> <span data-ttu-id="c53de-206">`Guess` 예상된 내부 수익률을 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-206">`Guess` is the estimated internal rate of return.</span></span>  
  
 [!code-vb[VbVbalrMath#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c53de-207">배열 인수 값이 잘못되었거나 <paramref name="Guess" /> &lt;= -1입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-207">Array argument values are invalid or <paramref name="Guess" /> &lt;= -1.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="c53de-208">회계 요약</span><span class="sxs-lookup"><span data-stu-id="c53de-208">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MIRR">
      <MemberSignature Language="C#" Value="public static double MIRR (ref double[] ValueArray, double FinanceRate, double ReinvestRate);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 MIRR(float64[]&amp; ValueArray, float64 FinanceRate, float64 ReinvestRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function MIRR (ByRef ValueArray As Double(), FinanceRate As Double, ReinvestRate As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double MIRR(cli::array &lt;double&gt; ^ % ValueArray, double FinanceRate, double ReinvestRate);" />
      <MemberSignature Language="F#" Value="static member MIRR :  * double * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.MIRR (ValueArray, FinanceRate, ReinvestRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ValueArray" Type="System.Double[]" RefType="ref" />
        <Parameter Name="FinanceRate" Type="System.Double" />
        <Parameter Name="ReinvestRate" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="ValueArray"><span data-ttu-id="c53de-209">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-209">Required.</span></span> <span data-ttu-id="c53de-210">현금 흐름 값을 지정하는 <see langword="Double" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-210">Array of <see langword="Double" /> specifying cash-flow values.</span></span> <span data-ttu-id="c53de-211">배열에는 하나 이상의 음수 값(지불)과 하나 이상의 양수 값(확인)이 포함되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-211">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <param name="FinanceRate"><span data-ttu-id="c53de-212">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-212">Required.</span></span> <span data-ttu-id="c53de-213">출자 비용으로 지불될 이자율입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-213">The interest rate paid as the cost of financing.</span></span></param>
        <param name="ReinvestRate"><span data-ttu-id="c53de-214">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-214">Required.</span></span> <span data-ttu-id="c53de-215">현금 재투자로 인한 수익에서 받는 이자율입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-215">The interest rate received on gains from cash reinvestment.</span></span></param>
        <summary><span data-ttu-id="c53de-216">일련의 주기적인 현금 흐름(지불액과 수령액)에 대해 수정된 내부 수익률을 지정하는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-216">Returns a value specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></summary>
        <returns><span data-ttu-id="c53de-217">일련의 주기적인 현금 흐름(지불액과 수령액)에 대해 수정된 내부 수익률입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-217">The modified internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c53de-218">수정 된 내부 수익률 내부 수익률 경우 지급액 및 수령액 서로 다른 속도로 충당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-218">The modified internal rate of return is the internal rate of return when payments and receipts are financed at different rates.</span></span> <span data-ttu-id="c53de-219">합니다 `MIRR` 함수는 계정에 대 한 투자 비용과 (`FinanceRate`) 및 현금 재투자 금리 (`ReinvestRate`).</span><span class="sxs-lookup"><span data-stu-id="c53de-219">The `MIRR` function takes into account both the cost of the investment (`FinanceRate`) and the interest rate received on reinvestment of cash (`ReinvestRate`).</span></span>  
  
 <span data-ttu-id="c53de-220">합니다 `FinanceRate` 고 `ReinvestRate` 인수는 10 진수 값으로 표현 하는 백분율입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-220">The `FinanceRate` and `ReinvestRate` arguments are percentages expressed as decimal values.</span></span> <span data-ttu-id="c53de-221">예를 들어, 12 %0.12로 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-221">For example, 12 percent is expressed as 0.12.</span></span>  
  
 <span data-ttu-id="c53de-222">`MIRR` 함수는 배열에 있는 값의 순서를 사용 하 여 지급액 및 수령액의 순서를 해석 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-222">The `MIRR` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="c53de-223">올바른 순서로 결제 및 수신 값을 입력 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-223">Be sure to enter your payment and receipt values in the correct sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c53de-224">이 예제에서는 합니다 `MIRR` 일련의 현금 흐름을 배열에 포함 된 수정 된 내부 수익률을 반환 하는 함수 `Values()`합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-224">This example uses the `MIRR` function to return the modified internal rate of return for a series of cash flows contained in the array `Values()`.</span></span> <span data-ttu-id="c53de-225">`LoanAPR` 이자율을 나타내는 및 `InvAPR` 재투자 금리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-225">`LoanAPR` represents the financing interest, and `InvAPR` represents the interest rate received on reinvestment.</span></span>  
  
 [!code-vb[VbVbalrMath#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c53de-226"><paramref name="ValueArray" /> 차수가 1이 아니거나, <paramref name="FinanceRate" />가 -1이거나, <paramref name="ReinvestRate" />가 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-226">Rank of <paramref name="ValueArray" /> does not equal 1, <paramref name="FinanceRate" /> = -1, or <paramref name="ReinvestRate" /> = -1</span></span></exception>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="c53de-227">0으로 나누었습니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-227">Division by zero has occurred.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.DivideByZeroException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="c53de-228">회계 요약</span><span class="sxs-lookup"><span data-stu-id="c53de-228">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NPer">
      <MemberSignature Language="C#" Value="public static double NPer (double Rate, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 NPer(float64 Rate, float64 Pmt, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function NPer (Rate As Double, Pmt As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member NPer : double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.NPer (Rate, Pmt, PV, FV, Due)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="c53de-229">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-229">Required.</span></span> <span data-ttu-id="c53de-230">기간당 이자율입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-230">The interest rate per period.</span></span> <span data-ttu-id="c53de-231">예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-231">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Pmt"><span data-ttu-id="c53de-232">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-232">Required.</span></span> <span data-ttu-id="c53de-233">기간당 지불액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-233">The payment to be made each period.</span></span> <span data-ttu-id="c53de-234">지불액에는 일반적으로 연금을 받는 기간 동안 변경되지 않는 원금과 이자가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-234">Payments usually contain principal and interest that does not change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="c53de-235">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-235">Required.</span></span> <span data-ttu-id="c53de-236">현재 값, 금일 값, 일련의 미래 지불액 또는 수령액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-236">The present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="c53de-237">예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-237">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="c53de-238">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-238">Optional.</span></span> <span data-ttu-id="c53de-239">최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-239">The future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="c53de-240">예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-240">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="c53de-241">그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-241">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="c53de-242">생략된 경우 0이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-242">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="c53de-243">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-243">Optional.</span></span> <span data-ttu-id="c53de-244"><see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-244">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="c53de-245">이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-245">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="c53de-246">생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-246">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="c53de-247">일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금의 기간 수를 지정하는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-247">Returns a value specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="c53de-248">일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금의 기간 수입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-248">The number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c53de-249">연금은 일련의 시간 동안 정기적으로 고정된 금액을 지불 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-249">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="c53de-250">연금 (예: 홈 담보 대출) 대출 또는 투자 (예: 월간 절감 계획) 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-250">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="c53de-251">모든 인수에 대 한 현금 지급 (예: 절약 예치금)은 표현 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-251">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c53de-252">이 예제에서는 합니다 `NPer` 기간 동안 납부 해야 할 대출 값인 갚을 수를 반환 하는 함수에 포함 된 `PVal`합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-252">This example uses the `NPer` function to return the number of periods during which payments must be made to pay off a loan whose value is contained in `PVal`.</span></span> <span data-ttu-id="c53de-253">기간당 이자율은 제공 (`APR / 12`), 결제 (`Payment`), 대출의 미래 값 (`FVal`), 및 결제 시작 또는 끝 지불 기간 때문 인지 여부를 나타내는 숫자 (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="c53de-253">Also provided are the interest percentage rate per period (`APR / 12`), the payment (`Payment`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c53de-254"><paramref name="Rate" />와 <paramref name="Pmt" />가 모두 0입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-254"><paramref name="Rate" /> = 0 and <paramref name="Pmt" /> = 0</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="c53de-255">회계 요약</span><span class="sxs-lookup"><span data-stu-id="c53de-255">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NPV">
      <MemberSignature Language="C#" Value="public static double NPV (double Rate, ref double[] ValueArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 NPV(float64 Rate, float64[]&amp; ValueArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NPV (Rate As Double, ByRef ValueArray As Double()) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double NPV(double Rate, cli::array &lt;double&gt; ^ % ValueArray);" />
      <MemberSignature Language="F#" Value="static member NPV : double *  -&gt; double" Usage="Microsoft.VisualBasic.Financial.NPV (Rate, ValueArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="ValueArray" Type="System.Double[]" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="c53de-256">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-256">Required.</span></span> <span data-ttu-id="c53de-257">전 기간에 걸친 할인율이며 10진수로 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-257">The discount rate over the length of the period, expressed as a decimal.</span></span></param>
        <param name="ValueArray"><span data-ttu-id="c53de-258">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-258">Required.</span></span> <span data-ttu-id="c53de-259">현금 흐름 값을 지정하는 <see langword="Double" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-259">Array of <see langword="Double" /> specifying cash flow values.</span></span> <span data-ttu-id="c53de-260">배열에는 하나 이상의 음수 값(지불)과 하나 이상의 양수 값(확인)이 포함되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-260">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <summary><span data-ttu-id="c53de-261">일정 기간 현금 흐름(지불액과 수령액)과 할인율을 기준으로 현재의 순 투자 가치를 지정하는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-261">Returns a value specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</span></span></summary>
        <returns><span data-ttu-id="c53de-262">일정 기간 현금 흐름(지불액과 수령액)과 할인율을 기준으로 현재의 순 투자 가치입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-262">The net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c53de-263">자금의 순 현재 가치는 향후 일련 지급액 및 수령액의 현재 값이입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-263">The net present value of an investment is the current value of a future series of payments and receipts.</span></span>  
  
 <span data-ttu-id="c53de-264">`NPV` 함수는 배열에 있는 값의 순서를 사용 하 여 지급액 및 수령액의 순서를 해석 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-264">The `NPV` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="c53de-265">올바른 순서로 결제 및 수신 값을 입력 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-265">Be sure to enter your payment and receipt values in the correct sequence.</span></span>  
  
 <span data-ttu-id="c53de-266">`NPV` 투자 한 기간 날짜 전에 첫 번째 현금 흐름 값을 시작 하 고 배열에서 마지막 현금 흐름 값을 사용 하 여 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-266">The `NPV` investment begins one period before the date of the first cash flow value and ends with the last cash flow value in the array.</span></span>  
  
 <span data-ttu-id="c53de-267">순 현재 가치 계산 이후 현금 흐름을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-267">The net present value calculation is based on future cash flows.</span></span> <span data-ttu-id="c53de-268">첫 번째 현금 흐름의 첫 번째 기간부터 발생 하는 경우 첫 번째 값을 반환 하는 값을 추가 해야 합니다 `NPV` 현금 흐름 값에 포함 되어야 합니다 `ValueArray`합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-268">If your first cash flow occurs at the beginning of the first period, the first value must be added to the value returned by `NPV` and must not be included in the cash flow values of `ValueArray`.</span></span>  
  
 <span data-ttu-id="c53de-269">`NPV` 함수는 비슷합니다는 `PV` 함수 (현재 값) 한다는 점을 제외 하는 `PV` 함수 현금 흐름 마침표의 시작 이나 끝에 시작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-269">The `NPV` function is similar to the `PV` function (present value) except that the `PV` function allows cash flows to begin either at the end or the beginning of a period.</span></span> <span data-ttu-id="c53de-270">변수는 달리 `NPV` 현금 흐름 값 `PV` 투자 전체 현금 흐름을 수정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-270">Unlike the variable `NPV` cash flow values, `PV` cash flows must be fixed throughout the investment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c53de-271">이 예제에서는 합니다 `NPV` 일련의 현금 흐름을 배열에 포함 된 순 현재 가치를 반환 하는 함수 `values()`합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-271">This example uses the `NPV` function to return the net present value for a series of cash flows contained in the array `values()`.</span></span> <span data-ttu-id="c53de-272">반환 값에 저장 된 `FixedRetRate`, 고정 된 내부 수익률을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-272">The return value, stored in `FixedRetRate`, represents the fixed internal rate of return.</span></span>  
  
 [!code-vb[VbVbalrMath#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c53de-273"><paramref name="ValueArray" />는 <see langword="Nothing" />이며, <paramref name="ValueArray" />의 순위는 &lt;&gt; 1 또는 <paramref name="Rate" /> = -1입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-273"><paramref name="ValueArray" /> is <see langword="Nothing" />, rank of <paramref name="ValueArray" /> &lt;&gt; 1, or <paramref name="Rate" /> = -1</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="c53de-274">회계 요약</span><span class="sxs-lookup"><span data-stu-id="c53de-274">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Pmt">
      <MemberSignature Language="C#" Value="public static double Pmt (double Rate, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Pmt(float64 Rate, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pmt (Rate As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member Pmt : double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.Pmt (Rate, NPer, PV, FV, Due)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="c53de-275">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-275">Required.</span></span> <span data-ttu-id="c53de-276">기간당 이자율입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-276">The interest rate per period.</span></span> <span data-ttu-id="c53de-277">예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-277">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="c53de-278">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-278">Required.</span></span> <span data-ttu-id="c53de-279">연금의 총 지불 기간 수입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-279">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="c53de-280">예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 × 12, 즉 48입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-280">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 × 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="c53de-281">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-281">Required.</span></span> <span data-ttu-id="c53de-282">일련의 미래 지불액에 대한 현재 값 또는 총액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-282">The present value (or lump sum) that a series of payments to be paid in the future is worth now.</span></span> <span data-ttu-id="c53de-283">예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-283">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="c53de-284">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-284">Optional.</span></span> <span data-ttu-id="c53de-285">최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-285">The future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="c53de-286">예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-286">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="c53de-287">그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-287">However, if you want to save $50,000 during 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="c53de-288">생략된 경우 0이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-288">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="c53de-289">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-289">Optional.</span></span> <span data-ttu-id="c53de-290"><see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-290">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="c53de-291">이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-291">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="c53de-292">생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-292">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="c53de-293">일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금에 대한 지불액을 지정하는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-293">Returns a value specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="c53de-294">일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금에 대한 지불액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-294">The payment for an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c53de-295">연금은 일련의 기간 동안 정기적으로 고정된 금액을 지불 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-295">An annuity is a series of fixed cash payments made during a period of time.</span></span> <span data-ttu-id="c53de-296">연금 (예: 홈 담보 대출) 대출 또는 투자 (예: 월간 절감 계획) 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-296">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="c53de-297">합니다 `Rate` 및 `NPer` 인수는 같은 단위로 지불 기간을 사용 하 여 계산 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-297">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="c53de-298">예를 들어 경우 `Rate` 월을 사용 하 여 계산 됩니다 `NPer` 개월을 사용 하 여 계산할 수도 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-298">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="c53de-299">모든 인수에 대 한 현금 지급 된 (예: 절약 예치금)은 표현 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-299">For all arguments, cash paid (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c53de-300">이 예제에서는 `Pmt` 고정된 기간 동안 대출의 월 상환액을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-300">This example uses the `Pmt` function to return the monthly payment for a loan during a fixed period.</span></span> <span data-ttu-id="c53de-301">기간당 이자율은 (`APR / 12`), 총 지불 (`TotPmts`), 현재 가치 또는 대출에 대 한 보안 주체 (`PVal`), 대출의 미래 가치를 (`FVal`), 및를 나타내는 숫자입니다 여부를 결제 기한이 임박 하다 시작과 지불 기간 끝 `(PayType).`</span><span class="sxs-lookup"><span data-stu-id="c53de-301">Given are the interest percentage rate per period (`APR / 12`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period `(PayType).`</span></span>  
  
 [!code-vb[VbVbalrMath#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c53de-302"><paramref name="NPer" /> = 0.</span><span class="sxs-lookup"><span data-stu-id="c53de-302"><paramref name="NPer" /> = 0.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="c53de-303">회계 요약</span><span class="sxs-lookup"><span data-stu-id="c53de-303">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PPmt">
      <MemberSignature Language="C#" Value="public static double PPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PPmt(float64 Rate, float64 Per, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function PPmt (Rate As Double, Per As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member PPmt : double * double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.PPmt (Rate, Per, NPer, PV, FV, Due)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Per" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="c53de-304">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-304">Required.</span></span> <span data-ttu-id="c53de-305">기간당 이자율입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-305">The interest rate per period.</span></span> <span data-ttu-id="c53de-306">예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-306">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Per"><span data-ttu-id="c53de-307">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-307">Required.</span></span> <span data-ttu-id="c53de-308">1에서 <paramref name="NPer" />에 이르는 지불 기간입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-308">The payment period in the range 1 through <paramref name="NPer" />.</span></span></param>
        <param name="NPer"><span data-ttu-id="c53de-309">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-309">Required.</span></span> <span data-ttu-id="c53de-310">연금의 총 지불 기간 수입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-310">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="c53de-311">예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 x 12, 즉 48입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-311">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="c53de-312">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-312">Required.</span></span> <span data-ttu-id="c53de-313">일련의 미래 지불액 또는 수령액의 현재 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-313">The current value of a series of future payments or receipts.</span></span> <span data-ttu-id="c53de-314">예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-314">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="c53de-315">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-315">Optional.</span></span> <span data-ttu-id="c53de-316">최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-316">The future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="c53de-317">예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-317">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="c53de-318">그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-318">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="c53de-319">생략된 경우 0이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-319">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="c53de-320">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-320">Optional.</span></span> <span data-ttu-id="c53de-321"><see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-321">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="c53de-322">이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-322">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="c53de-323">생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-323">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="c53de-324">일정 기간의 고정 지불액과 고정 이자율을 기준으로 일정 기간의 연금에 대한 원금 지불액을 지정하는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-324">Returns a value specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="c53de-325">일정 기간의 고정 지불액과 고정 이자율을 기준으로 일정 기간의 연금에 대한 원금 지불액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-325">The principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c53de-326">연금은 일련의 시간 동안 정기적으로 고정된 금액을 지불 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-326">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="c53de-327">연금 (예: 홈 담보 대출) 대출 또는 투자 (예: 월간 절감 계획) 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-327">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="c53de-328">합니다 `Rate` 및 `NPer` 인수는 같은 단위로 지불 기간을 사용 하 여 계산 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-328">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="c53de-329">예를 들어 경우 `Rate` 월을 사용 하 여 계산 됩니다 `NPer` 개월을 사용 하 여 계산할 수도 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-329">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="c53de-330">모든 인수에 대 한 현금 지급 된 (예: 절약 예치금)은 표현 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-330">For all arguments, cash paid (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c53de-331">이 예제에서는 `PPmt` 특정 기간 동안 지불 양을 주 서버인 모든 지불은 같은 값의 경우 계산 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-331">This example uses the `PPmt` function to calculate how much of a payment for a specific period is principal when all the payments are of equal value.</span></span> <span data-ttu-id="c53de-332">기간당 이자율은 (`APR / 12`), 주 부분을 필요한는 지불 기간 (`Period`), 총 지불 (`TotPmts`)에 있는 값 또는 대출에 대 한 보안 주체 (`PVal`), 대출의 미래 값 (`FVal`), 및 결제 시작 또는 끝 지불 기간 때문 인지 여부를 나타내는 숫자 (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="c53de-332">Given are the interest percentage rate per period (`APR / 12`), the payment period for which the principal portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c53de-333"><paramref name="Per" /> &lt;=0 또는 <paramref name="Per" /> &gt; <paramref name="NPer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-333"><paramref name="Per" /> &lt;=0 or <paramref name="Per" /> &gt; <paramref name="NPer" />.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="c53de-334">회계 요약</span><span class="sxs-lookup"><span data-stu-id="c53de-334">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PV">
      <MemberSignature Language="C#" Value="public static double PV (double Rate, double NPer, double Pmt, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PV(float64 Rate, float64 NPer, float64 Pmt, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function PV (Rate As Double, NPer As Double, Pmt As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member PV : double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.PV (Rate, NPer, Pmt, FV, Due)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="c53de-335">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-335">Required.</span></span> <span data-ttu-id="c53de-336">기간당 이자율입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-336">The interest rate per period.</span></span> <span data-ttu-id="c53de-337">예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-337">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="c53de-338">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-338">Required.</span></span> <span data-ttu-id="c53de-339">연금의 총 지불 기간 수입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-339">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="c53de-340">예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 x 12, 즉 48입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-340">For example, if you make monthly payments on a four-year car loan, your loan has 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="c53de-341">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-341">Required.</span></span> <span data-ttu-id="c53de-342">기간당 지불액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-342">The payment to be made each period.</span></span> <span data-ttu-id="c53de-343">지불액에는 일반적으로 연금을 받는 기간 동안 변경되지 않는 원금과 이자가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-343">Payments usually contain principal and interest that does not change during the life of the annuity.</span></span></param>
        <param name="FV"><span data-ttu-id="c53de-344">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-344">Optional.</span></span> <span data-ttu-id="c53de-345">최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-345">The future value or cash balance you want after you make the final payment.</span></span> <span data-ttu-id="c53de-346">예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-346">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="c53de-347">그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-347">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="c53de-348">생략된 경우 0이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-348">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="c53de-349">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-349">Optional.</span></span> <span data-ttu-id="c53de-350"><see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-350">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="c53de-351">이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-351">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="c53de-352">생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-352">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="c53de-353">미래에 지불할 일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금의 현재 가치를 지정하는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-353">Returns a value specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="c53de-354">미래에 지불할 일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금의 현재 가치입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-354">The present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c53de-355">연금은 일련의 시간 동안 정기적으로 고정된 금액을 지불 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-355">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="c53de-356">연금 (예: 홈 담보 대출) 대출 또는 투자 (예: 월간 절감 계획) 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-356">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="c53de-357">합니다 `Rate` 및 `NPer` 인수는 같은 단위로 지불 기간을 사용 하 여 계산 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-357">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="c53de-358">예를 들어 경우 `Rate` 월을 사용 하 여 계산 됩니다 `NPer` 개월을 사용 하 여 계산할 수도 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-358">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="c53de-359">모든 인수에 대 한 현금 지급 (예: 절약 예치금)은 표현 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-359">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c53de-360">이 예제는 `PV` 함수 다음 20 년 동안 매년 50,000 달러를 제공 하는 1,000,000 달러를 초과 연금의 현재 가치를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-360">In this example, the `PV` function returns the present value of an $1,000,000 annuity that will provide $50,000 a year for the next 20 years.</span></span> <span data-ttu-id="c53de-361">되는 예상된 연이율 (`APR`), 총 지불 (`TotPmts`), 각 지불 금액 (`YrIncome`), 투자의 총 미래 값 (`FVal`), 및를 나타내는 숫자 여부를 각 시작 또는 끝 지불 기간 결제 (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="c53de-361">Provided are the expected annual percentage rate (`APR`), the total number of payments (`TotPmts`), the amount of each payment (`YrIncome`), the total future value of the investment (`FVal`), and a number that indicates whether each payment is made at the beginning or end of the payment period (`PayType`).</span></span> <span data-ttu-id="c53de-362">`YrIncome` 음수 이므로 현금 지급 연금에서 각 연도 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-362">Note that `YrIncome` is a negative number because it represents cash paid out from the annuity each year.</span></span>  
  
 [!code-vb[VbVbalrMath#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="c53de-363">회계 요약</span><span class="sxs-lookup"><span data-stu-id="c53de-363">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public static double Rate (double NPer, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod, double Guess = 0.1);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Rate(float64 NPer, float64 Pmt, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due, float64 Guess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rate (NPer As Double, Pmt As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod, Optional Guess As Double = 0.1) As Double" />
      <MemberSignature Language="F#" Value="static member Rate : double * double * double * double * Microsoft.VisualBasic.DueDate * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.Rate (NPer, Pmt, PV, FV, Due, Guess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
        <Parameter Name="Guess" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="NPer"><span data-ttu-id="c53de-364">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-364">Required.</span></span> <span data-ttu-id="c53de-365">연금의 총 지불 기간 수입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-365">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="c53de-366">예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 \* 12(즉 48)입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-366">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 \* 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="c53de-367">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-367">Required.</span></span> <span data-ttu-id="c53de-368">기간당 지불액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-368">The payment to be made each period.</span></span> <span data-ttu-id="c53de-369">지불액에는 일반적으로 연금을 받는 기간 동안 변경되지 않는 원금과 이자가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-369">Payments usually contain principal and interest that doesn't change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="c53de-370">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-370">Required.</span></span> <span data-ttu-id="c53de-371">현재 값, 금일 값, 일련의 미래 지불액 또는 수령액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-371">The present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="c53de-372">예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-372">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="c53de-373">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-373">Optional.</span></span> <span data-ttu-id="c53de-374">최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-374">The future value or cash balance you want after you make the final payment.</span></span> <span data-ttu-id="c53de-375">예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-375">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="c53de-376">그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-376">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="c53de-377">생략된 경우 0이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-377">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="c53de-378">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-378">Optional.</span></span> <span data-ttu-id="c53de-379"><see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-379">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="c53de-380">이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-380">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="c53de-381">생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-381">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <param name="Guess"><span data-ttu-id="c53de-382">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-382">Optional.</span></span> <span data-ttu-id="c53de-383"><see langword="Rate" />가 반환하는 추정 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-383">The value you estimate is returned by <see langword="Rate" />.</span></span> <span data-ttu-id="c53de-384">생략할 경우 <paramref name="Guess" />는 0.1(10%)이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-384">If omitted, <paramref name="Guess" /> is 0.1 (10 percent).</span></span></param>
        <summary><span data-ttu-id="c53de-385">연금에 대한 일정 기간당 이자율을 지정하는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-385">Returns a value specifying the interest rate per period for an annuity.</span></span></summary>
        <returns><span data-ttu-id="c53de-386">연금에 대한 일정 기간당 이자율입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-386">The interest rate per period for an annuity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c53de-387">연금은 일련의 시간 동안 정기적으로 고정된 금액을 지불 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-387">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="c53de-388">연금 (예: 홈 담보 대출) 대출 또는 투자 (예: 월간 절감 계획) 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-388">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="c53de-389">모든 인수에 대 한 현금 지급 (예: 절약 예치금)은 표현 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-389">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
 <span data-ttu-id="c53de-390">`Rate` 반복적으로 계산 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-390">`Rate` is calculated by iteration.</span></span> <span data-ttu-id="c53de-391">값을 사용 하 여 시작 `Guess`, `Rate` 계산 결과 0.00001%까지 순환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-391">Starting with the value of `Guess`, `Rate` cycles through the calculation until the result is accurate to within 0.00001 percent.</span></span> <span data-ttu-id="c53de-392">경우 `Rate` 20 후 결과 가져오려고 시도, 실패를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-392">If `Rate` cannot find a result after 20 tries, it fails.</span></span> <span data-ttu-id="c53de-393">추정이 10%와 `Rate` 실패에 대 한 다른 값을 사용해 보십시오 `Guess`합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-393">If your guess is 10 percent and `Rate` fails, try a different value for `Guess`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c53de-394">이 예제에서는 합니다 `Rate` 지불의 총 수를 지정 된 대출 금리를 계산 하는 함수 (`TotPmts`), 대출 상환금 양을 (`Payment`), 현재 가치 또는 대출에 대 한 보안 주체 (`PVal`), 미래 대출 값 (`FVal`)를 시작 또는 끝 지불 기간 결제 기한이 여부를 나타내는 숫자입니다 (`PayType`), 및 예상된 이자율 근사값 (`Guess`).</span><span class="sxs-lookup"><span data-stu-id="c53de-394">This example uses the `Rate` function to calculate the interest rate of a loan given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).</span></span>  
  
 [!code-vb[VbVbalrMath#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c53de-395"><paramref name="NPer" /> &lt;= 0.</span><span class="sxs-lookup"><span data-stu-id="c53de-395"><paramref name="NPer" /> &lt;= 0.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="c53de-396">회계 요약</span><span class="sxs-lookup"><span data-stu-id="c53de-396">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SLN">
      <MemberSignature Language="C#" Value="public static double SLN (double Cost, double Salvage, double Life);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 SLN(float64 Cost, float64 Salvage, float64 Life) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function SLN (Cost As Double, Salvage As Double, Life As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double SLN(double Cost, double Salvage, double Life);" />
      <MemberSignature Language="F#" Value="static member SLN : double * double * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.SLN (Cost, Salvage, Life)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="c53de-397">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-397">Required.</span></span> <span data-ttu-id="c53de-398">초기 자산 비용입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-398">The initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="c53de-399">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-399">Required.</span></span> <span data-ttu-id="c53de-400">내용 연수 종료 시점의 자산 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-400">The value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="c53de-401">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-401">Required.</span></span> <span data-ttu-id="c53de-402">자산의 내용 연수 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-402">The length of the useful life of the asset.</span></span></param>
        <summary><span data-ttu-id="c53de-403">단일 기간의 자산에 대한 정액법을 지정하는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-403">Returns a value specifying the straight-line depreciation of an asset for a single period.</span></span></summary>
        <returns><span data-ttu-id="c53de-404">단일 기간의 자산에 대한 정액법입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-404">The straight-line depreciation of an asset for a single period.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c53de-405">감가상각 기간으로 같은 단위로 표현 해야 합니다는 `Life` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-405">The depreciation period must be expressed in the same unit as the `Life` argument.</span></span> <span data-ttu-id="c53de-406">모든 인수는 양수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-406">All arguments must be positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c53de-407">이 예제에서는 합니다 `SLN` 자산의 초기 비용을 지정 된 기간 동안 자산 정액법을 반환 하는 함수 (`InitCost`), 자산의 수명 끝에 회수 되는 값 (`SalvageVal`), 및 총 기간 연 단위 (`LifeTime`).</span><span class="sxs-lookup"><span data-stu-id="c53de-407">This example uses the `SLN` function to return the straight-line depreciation of an asset for a single period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c53de-408"><paramref name="Life" /> = 0.</span><span class="sxs-lookup"><span data-stu-id="c53de-408"><paramref name="Life" /> = 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="c53de-409">회계 요약</span><span class="sxs-lookup"><span data-stu-id="c53de-409">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SYD">
      <MemberSignature Language="C#" Value="public static double SYD (double Cost, double Salvage, double Life, double Period);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 SYD(float64 Cost, float64 Salvage, float64 Life, float64 Period) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function SYD (Cost As Double, Salvage As Double, Life As Double, Period As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double SYD(double Cost, double Salvage, double Life, double Period);" />
      <MemberSignature Language="F#" Value="static member SYD : double * double * double * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.SYD (Cost, Salvage, Life, Period)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
        <Parameter Name="Period" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="c53de-410">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-410">Required.</span></span> <span data-ttu-id="c53de-411">초기 자산 비용입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-411">The initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="c53de-412">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-412">Required.</span></span> <span data-ttu-id="c53de-413">내용 연수 종료 시점의 자산 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-413">The value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="c53de-414">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-414">Required.</span></span> <span data-ttu-id="c53de-415">자산의 내용 연수 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-415">The length of the useful life of the asset.</span></span></param>
        <param name="Period"><span data-ttu-id="c53de-416">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="c53de-416">Required.</span></span> <span data-ttu-id="c53de-417">자산 감가상각이 계산되는 기간입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-417">The period for which asset depreciation is calculated.</span></span></param>
        <summary><span data-ttu-id="c53de-418">지정한 기간 동안 자산의 연수 합계 감가상각을 지정하는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-418">Returns a value specifying the sum-of-years digits depreciation of an asset for a specified period.</span></span></summary>
        <returns><span data-ttu-id="c53de-419">지정한 기간 동안 자산의 연수 합계 감가상각입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-419">The sum-of-years digits depreciation of an asset for a specified period.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c53de-420">합니다 `Life` 고 `Period` 인수는 같은 단위로 표현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-420">The `Life` and `Period` arguments must be expressed in the same units.</span></span> <span data-ttu-id="c53de-421">예를 들어 경우 `Life` 월에 `Period` 개월 내에도 지정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-421">For example, if `Life` is given in months, `Period` must also be given in months.</span></span> <span data-ttu-id="c53de-422">모든 인수는 양수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-422">All arguments must be positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c53de-423">이 예제에서는 합니다 `SYD` 자산의 초기 비용을 지정 하는 지정 된 기간 동안 자산의 감가상각을 반환 하는 함수 (`InitCost`), 잔존 가치 자산의 연수 끝 (`SalvageVal`), 및 총 기간 자산 연도 (`LifeTime`).</span><span class="sxs-lookup"><span data-stu-id="c53de-423">This example uses the `SYD` function to return the depreciation of an asset for a specified period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c53de-424"><paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" /> 또는 <paramref name="Period" /> &lt;=0입니다.</span><span class="sxs-lookup"><span data-stu-id="c53de-424"><paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" />, or <paramref name="Period" /> &lt;=0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="c53de-425">회계 요약</span><span class="sxs-lookup"><span data-stu-id="c53de-425">Financial Summary</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>