<Type Name="Information" FullName="Microsoft.VisualBasic.Information">
  <Metadata><Meta Name="ms.openlocfilehash" Value="96ecba38ed21212b1bd42da6d2ce2ef30e61426e" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57913256" /></Metadata><TypeSignature Language="C#" Value="public sealed class Information" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Information extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Information" />
  <TypeSignature Language="VB.NET" Value="Public Module Information" />
  <TypeSignature Language="C++ CLI" Value="public ref class Information sealed" />
  <TypeSignature Language="F#" Value="type Information = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e4f71-101"><see langword="Information" /> 모듈에는 정보를 반환하고, 테스트하고, 확인하는 프로시저가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-101">The <see langword="Information" /> module contains the procedures used to return, test for, or verify information.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-102">이 모듈에는 Visual Basic 언어 키워드 및 오류 정보를 제공, 데이터 유효성을 검사 하 고, 배열 범위를 확인 하 고 데이터 형식 및 색 정보를 검색 하는 런타임 라이브러리 멤버를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-102">This module supports the Visual Basic language keywords and run-time library members that provide error information, validate data, determine array bounds, and retrieve data type and color information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-103">다음 예제에서는 `VbTypeName` 함수를 여러 변수에 대 한 데이터 형식 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-103">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
```vb  
Dim sysDateName As String = "System.DateTime"  
Dim sysShortName As String = "Int16"  
Dim sysBadName As String = "Nonsense"  
Dim testVbName As String  
testVbName = VbTypeName(sysDateName)   
' Returns "Date".  
testVbName = VbTypeName(sysShortName)   
' Returns "Short".  
testVbName = VbTypeName(sysBadName)   
' Returns Nothing.  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/information-and-interaction-summary.md"><span data-ttu-id="e4f71-104">정보 및 상호 작용 요약</span><span class="sxs-lookup"><span data-stu-id="e4f71-104">Information and Interaction Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/data-types-summary.md"><span data-ttu-id="e4f71-105">Data Types Summary</span><span class="sxs-lookup"><span data-stu-id="e4f71-105">Data Types Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/declarations-and-constants-summary.md"><span data-ttu-id="e4f71-106">선언 및 상수 요약</span><span class="sxs-lookup"><span data-stu-id="e4f71-106">Declarations and Constants Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="e4f71-107">키워드(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e4f71-107">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="e4f71-108">Visual Basic 런타임 라이브러리 멤버</span><span class="sxs-lookup"><span data-stu-id="e4f71-108">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public static int Erl ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Erl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Erl" />
      <MemberSignature Language="VB.NET" Value="Public Function Erl () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Erl();" />
      <MemberSignature Language="F#" Value="static member Erl : unit -&gt; int" Usage="Microsoft.VisualBasic.Information.Erl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4f71-109">마지막으로 실행된 문의 줄 번호를 나타내는 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-109">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="e4f71-110">읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-110">Read-only.</span></span></summary>
        <returns><span data-ttu-id="e4f71-111">마지막으로 실행된 문의 줄 번호를 나타내는 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-111">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="e4f71-112">읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-112">Read-only.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-113">Visual Basic에서 줄 번호 없음를 발견 하는 경우 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-113">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-114">이 예제에서는 `Erl` 줄 번호를 표시 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-114">This example uses the `Erl` property to indicate the line number.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ErrObject" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Err">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.ErrObject Err ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.VisualBasic.ErrObject Err() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Err" />
      <MemberSignature Language="VB.NET" Value="Public Function Err () As ErrObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::ErrObject ^ Err();" />
      <MemberSignature Language="F#" Value="static member Err : unit -&gt; Microsoft.VisualBasic.ErrObject" Usage="Microsoft.VisualBasic.Information.Err " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ErrObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4f71-115">런타임 오류에 대한 정보를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-115">Contains information about run-time errors.</span></span></summary>
        <returns><span data-ttu-id="e4f71-116">런타임 오류에 대한 정보를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-116">Contains information about run-time errors.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-117">속성을 `Err` 개체가 오류-Visual Basic, 개체 또는 프로그래머의 생성자에 의해 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-117">The properties of the `Err` object are set by the generator of an error - Visual Basic, an object, or the programmer.</span></span>  
  
 <span data-ttu-id="e4f71-118">때 런타임 오류가 발생 하는 속성을 `Err` 오류를 고유 하 게 식별 하는 정보로 채워지는 개체 및 오류 처리에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-118">When a run-time error occurs, the properties of the `Err` object are filled with information that uniquely identifies the error and that you can use to handle the error.</span></span> <span data-ttu-id="e4f71-119">코드에서 런타임 오류를 생성 하려면 사용 된 `Raise` 메서드.</span><span class="sxs-lookup"><span data-stu-id="e4f71-119">To generate a run-time error in your code, use the `Raise` method.</span></span>  
  
 <span data-ttu-id="e4f71-120">합니다 `Err` 없거나 길이가 0 인 문자열 개체의 속성 다시 설정 됩니다 ("") 후를 `Exit Sub`, `Exit Function`, `Exit Property`, 또는 `Resume Next` 는 오류 처리 루틴 내의 문에 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-120">The `Err` object's properties are reset to zero or zero-length strings ("") after an `Exit Sub`, `Exit Function`, `Exit Property`, or `Resume Next` statement within an error-handling routine.</span></span> <span data-ttu-id="e4f71-121">모든 형태를 사용 하는 `Resume` 는 오류 처리 루틴 외부로 다시 설정 되지 것입니다는 `Err` 개체의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-121">Using any form of the `Resume` statement outside of an error-handling routine will not reset the `Err` object's properties.</span></span> <span data-ttu-id="e4f71-122">사용할 수는 `Clear` 메서드를 명시적으로 다시 설정할 `Err`합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-122">You can use the `Clear` method to explicitly reset `Err`.</span></span>  
  
 <span data-ttu-id="e4f71-123">사용 합니다 `Raise` 메서드 대신 `Error` 문을 시스템 오류에 대 한 런타임 오류를 생성 하 고 모듈 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-123">Use the `Raise` method rather than the `Error` statement to generate run-time errors for system errors and class modules.</span></span> <span data-ttu-id="e4f71-124">사용할지 여부를 결정 합니다 `Raise` 다른 코드에서 메서드를 반환 하려는 정보의 양에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-124">Your decision about whether to use the `Raise` method in other code depends on the richness of the information you want to return.</span></span>  
  
 <span data-ttu-id="e4f71-125">`Err` 개체는 전역 범위를 사용 하 여 내장 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-125">The `Err` object is an intrinsic object with global scope.</span></span> <span data-ttu-id="e4f71-126">따라서 코드에 해당 인스턴스를 만들 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-126">Therefore, you do not need to create an instance of it in your code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-127">속성을 사용 하 여이 예제는 `Err` 개체 오류 메시지 대화 상자를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-127">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="e4f71-128">사용 하는 경우 다음에 유의 합니다 `Clear` 메서드 첫 번째를 사용 하 여 Visual Basic 오류를 생성 하는 경우는 `Raise` 메서드, Visual Basic의 기본 값 수의 속성은 `Err` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-128">Notice that if you use the `Clear` method first, when you generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/error-statement.md"><span data-ttu-id="e4f71-129">Error 문</span><span class="sxs-lookup"><span data-stu-id="e4f71-129">Error Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="e4f71-130">On Error 문(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e4f71-130">On Error Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/exit-statement.md"><span data-ttu-id="e4f71-131">Exit 문(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e4f71-131">Exit Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/resume-statement.md"><span data-ttu-id="e4f71-132">Resume 문</span><span class="sxs-lookup"><span data-stu-id="e4f71-132">Resume Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/error-messages/index.md"><span data-ttu-id="e4f71-133">오류 메시지(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e4f71-133">Error Messages (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="e4f71-134">Try...Catch...Finally 문(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e4f71-134">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public static bool IsArray (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsArray(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsArray (VarName As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsArray(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member IsArray : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsArray VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="e4f71-135">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-135">Required.</span></span> <span data-ttu-id="e4f71-136"><see langword="Object" /> 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-136"><see langword="Object" /> variable.</span></span></param>
        <summary><span data-ttu-id="e4f71-137">변수가 배열을 가리키고 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-137">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span></span></summary>
        <returns><span data-ttu-id="e4f71-138">변수가 배열을 가리키고 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-138">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-139">`IsArray` 반환 `True` 변수의 배열을;를 가리키는 경우 그렇지 `False`합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-139">`IsArray` returns `True` if the variable points to an array; otherwise, it returns `False`.</span></span> <span data-ttu-id="e4f71-140">`IsArray` 배열에 포함 될 수 있는 개체를 사용 하 여 특히 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-140">`IsArray` is especially useful with objects that might contain arrays.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-141">이 예제에서는 `IsArray` 여러 변수 배열을 참조 하는 경우를 확인 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-141">This example uses the `IsArray` function to check if several variables refer to an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/arrays/index.md"><span data-ttu-id="e4f71-142">Visual Basic의 배열</span><span class="sxs-lookup"><span data-stu-id="e4f71-142">Arrays in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsDate">
      <MemberSignature Language="C#" Value="public static bool IsDate (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDate(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDate (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDate(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsDate : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsDate Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="e4f71-143">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-143">Required.</span></span> <span data-ttu-id="e4f71-144"><see langword="Object" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-144"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="e4f71-145">식이 올바른 <see langword="Boolean" /> 값을 나타내는지 여부를 알리는 <see langword="Date" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-145">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span></span></summary>
        <returns><span data-ttu-id="e4f71-146">식이 올바른 <see langword="Boolean" /> 값을 나타내는지 여부를 알리는 <see langword="Date" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-146">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-147">`IsDate` 반환 `True` 경우 `Expression` 입니다는 <xref:System.DateTime> 데이터 형식 이거나 변환 하 고, 그렇지 않으면 반환 `False`합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-147">`IsDate` returns `True` if `Expression` is of the <xref:System.DateTime> data type or can be converted to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="e4f71-148"><xref:System.DateTime> 데이터 형식은 날짜 값과 시간 값을 갖습니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-148">The <xref:System.DateTime> data type holds both a date value and a time value.</span></span> <span data-ttu-id="e4f71-149">`IsDate` 반환 `True` 경우 `Expression` 유효한 날짜, 유효한 시간 또는 유효한 날짜 및 시간을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-149">`IsDate` returns `True` if `Expression` represents a valid date, a valid time, or a valid date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-150">다음 예제에서는 합니다 `IsDate` 함수를 여러 변수를 나타내는 올바른 경우 확인 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-150">The following example uses the `IsDate` function to determine if several variables represent valid <xref:System.DateTime> values.</span></span>  
  
 [!code-vb[VbVbalrFunctions#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#35)]  
  
 <span data-ttu-id="e4f71-151">위의 예에서 `IsDate` 반환 `True` 처음 네 개의 호출에 대 한 및 `False` 마지막 호출에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-151">In the preceding example, `IsDate` returns `True` for the first four calls and `False` for the last call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDBNull(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDBNull (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDBNull(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsDBNull : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsDBNull Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="e4f71-152">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-152">Required.</span></span> <span data-ttu-id="e4f71-153"><see langword="Object" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-153"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="e4f71-154">식이 <see cref="T:System.DBNull" /> 클래스로 계산되는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-154">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span></span></summary>
        <returns><span data-ttu-id="e4f71-155">식이 <see cref="T:System.DBNull" /> 클래스로 계산되는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-155">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-156">`IsDBNull` 반환 `True` 의 데이터 형식이 `Expression` 로 계산 되는 <xref:System.DBNull> 형식이 고, 그렇지 `IsDBNull` 반환 `False`합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-156">`IsDBNull` returns `True` if the data type of `Expression` evaluates to the <xref:System.DBNull> type; otherwise, `IsDBNull` returns `False`.</span></span>  
  
 <span data-ttu-id="e4f71-157">합니다 <xref:System.DBNull?displayProperty=nameWithType> 나타내는 값을 `Object` 없거나 존재 하지 않는 데이터를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-157">The <xref:System.DBNull?displayProperty=nameWithType> value indicates that the `Object` represents missing or nonexistent data.</span></span> <span data-ttu-id="e4f71-158">`DBNull` 동일 아닙니다 `Nothing`을 나타내는 변수 아직 초기화 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-158">`DBNull` is not the same as `Nothing`, which indicates that a variable has not yet been initialized.</span></span> <span data-ttu-id="e4f71-159">`DBNull` 또한 같지 않습니다 길이가 0 인 문자열로 (`""`), null 문자열로 참조 되는 경우에 따라 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-159">`DBNull` is also not the same as a zero-length string (`""`), which is sometimes referred to as a null string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-160">이 예제에서는 합니다 `IsDBNull` 변수를 평가 하는 경우를 결정 하는 함수 `DBNull`합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-160">This example uses the `IsDBNull` function to determine if a variable evaluates to `DBNull`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DBNull" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsError">
      <MemberSignature Language="C#" Value="public static bool IsError (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsError(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsError (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsError(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsError : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsError Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="e4f71-161">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-161">Required.</span></span> <span data-ttu-id="e4f71-162"><see langword="Object" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-162"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="e4f71-163">식이 예외 형식인지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-163">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span></span></summary>
        <returns><span data-ttu-id="e4f71-164">식이 예외 형식인지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-164">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-165">`IsError` 반환 `True` 식이 나타내는 경우는 `Object` 에서 파생 되는 변수를 <xref:System.Exception> 클래스는 <xref:System> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-165">`IsError` returns `True` if the expression represents an `Object` variable that derives from the <xref:System.Exception> class in the <xref:System> namespace.</span></span>  
  
 <span data-ttu-id="e4f71-166">파생 되는 예외가 <xref:System.Exception?displayProperty=nameWithType> 사용 하 여 낼 수 있습니다는 `Try...Catch...Finally` 문입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-166">An exception that derives from <xref:System.Exception?displayProperty=nameWithType> can be caught with the `Try...Catch...Finally` statements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-167">다음 예제에서는 `IsError` 식을 시스템 예외를 나타내는 경우를 확인 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-167">The following example uses the `IsError` function to check if an expression represents a system exception.</span></span>  
  
 [!code-vb[VbVbalrFunctions#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsNothing">
      <MemberSignature Language="C#" Value="public static bool IsNothing (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNothing(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNothing (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNothing(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsNothing : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsNothing Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="e4f71-168">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-168">Required.</span></span> <span data-ttu-id="e4f71-169"><see langword="Object" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-169"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="e4f71-170">식에 할당된 개체가 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-170">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span></span></summary>
        <returns><span data-ttu-id="e4f71-171">식에 할당된 개체가 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-171">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-172">`IsNothing` 반환 `True` 반환 하는 경우 식이 현재 아니요가 고 그렇지 않으면 해당에 할당 된 개체를 있는 개체 변수를 나타내는, `False`합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-172">`IsNothing` returns `True` if the expression represents an object variable that currently has no object assigned to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="e4f71-173">`IsNothing` 참조 형식에서 작동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-173">`IsNothing` is intended to work on reference types.</span></span> <span data-ttu-id="e4f71-174">값 형식 값을 포함할 수 없습니다 및 할당 하는 경우 기본값으로 되돌아갑니다 `Nothing` 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-174">A value type cannot hold a value of  and reverts to its default value if you assign `Nothing` to it.</span></span> <span data-ttu-id="e4f71-175">에 값 형식을 제공 하는 경우 `Expression`하십시오 `IsNothing` 항상 반환 `False`합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-175">If you supply a value type in `Expression`, `IsNothing` always returns `False`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-176">다음 예제에서는 `IsNothing` 함수를 개체 변수에 개체 인스턴스와 연결 되어 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-176">The following example uses the `IsNothing` function to determine if an object variable is associated with any object instance.</span></span>  
  
 [!code-vb[VbVbalrFunctions#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md"><span data-ttu-id="e4f71-177">Value Types and Reference Types</span><span class="sxs-lookup"><span data-stu-id="e4f71-177">Value Types and Reference Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsNumeric">
      <MemberSignature Language="C#" Value="public static bool IsNumeric (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNumeric(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNumeric (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumeric(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsNumeric : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsNumeric Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="e4f71-178">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-178">Required.</span></span> <span data-ttu-id="e4f71-179"><see langword="Object" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-179"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="e4f71-180">식이 숫자로 계산될 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-180">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span></span></summary>
        <returns><span data-ttu-id="e4f71-181">식이 숫자로 계산될 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-181">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-182">`IsNumeric` 반환 `True` 의 데이터 형식이 `Expression` 됩니다 `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, 또는 `UShort`합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-182">`IsNumeric` returns `True` if the data type of `Expression` is `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, or `UShort`.</span></span> <span data-ttu-id="e4f71-183">반환 한다는 `True` 경우 `Expression` 는 `Char`, `String`, 또는 `Object` 숫자로 성공적으로 변환할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-183">It also returns `True` if `Expression` is a `Char`, `String`, or `Object` that can be successfully converted to a number.</span></span> <span data-ttu-id="e4f71-184">`Expression` 숫자가 아닌 문자를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-184">`Expression` can contain non-numeric characters.</span></span> <span data-ttu-id="e4f71-185">`IsNumeric` 반환 `True` 경우 `Expression` 는 유효한 16 진수 또는 8 진수 숫자를 포함 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-185">`IsNumeric` returns `True` if `Expression` is a string that contains a valid hexadecimal or octal number.</span></span> <span data-ttu-id="e4f71-186">`IsNumeric` 반환 `True` 경우 `Expression` 로 시작 하는 유효한 숫자 식에 포함을 +,-문자 또는 쉼표를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-186">`IsNumeric` also returns `True` if `Expression` contains a valid numeric expression that begins with a + or - character or contains commas.</span></span>  
  
 <span data-ttu-id="e4f71-187">`IsNumeric` 반환 `False` 하는 경우 `Expression` 데이터 형식의 `Date`합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-187">`IsNumeric` returns `False` if `Expression` is of data type `Date`.</span></span> <span data-ttu-id="e4f71-188">반환 `False` 경우 `Expression` 되는 `Char`, `String`, 또는 `Object` 숫자로 성공적으로 변환할 수 없습니다는.</span><span class="sxs-lookup"><span data-stu-id="e4f71-188">It returns `False` if `Expression` is a `Char`, `String`, or `Object` that cannot be successfully converted to a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-189">다음 예제에서는 `IsNumeric` 변수의 내용을 숫자로 계산 될 수 하는 경우를 결정 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-189">The following example uses the `IsNumeric` function to determine if the contents of a variable can be evaluated as a number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#39)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public static bool IsReference (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsReference(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReference (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsReference(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsReference : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsReference Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="e4f71-190">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-190">Required.</span></span> <span data-ttu-id="e4f71-191"><see langword="Object" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-191"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="e4f71-192">식이 참조 형식으로 계산될 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-192">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span></span></summary>
        <returns><span data-ttu-id="e4f71-193">식이 참조 형식으로 계산될 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-193">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-194">`IsReference` 반환 `True` 경우 `Expression` 클래스 인스턴스를 같은 참조 형식을 나타냅니다는 `String` 형식 또는 모든 형식의 배열을 그렇지 `False`합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-194">`IsReference` returns `True` if `Expression` represents a reference type, such as a class instance, a `String` type, or an array of any type; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="e4f71-195">참조 형식이 다른 곳에서 메모리에 저장 된 데이터에 대 한 포인터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-195">A reference type contains a pointer to data stored elsewhere in memory.</span></span> <span data-ttu-id="e4f71-196">값 형식 자체 데이터를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-196">A value type contains its own data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-197">이 예제에서는 `IsReference` 함수를 여러 변수에 참조 형식을 참조 하는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-197">This example uses the `IsReference` function to check if several variables refer to reference types.</span></span>  
  
 [!code-vb[VbVbalrFunctions#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#40)]  
  
 <span data-ttu-id="e4f71-198">앞의 예제에서 처음 3 개를 호출 `IsReference` 반환 `True`합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-198">In the preceding example, the first three calls to `IsReference` return `True`.</span></span> <span data-ttu-id="e4f71-199">마지막 호출이 반환 `False`이므로 `Integer` 가 참조 형식이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-199">The last call returns `False`, because `Integer` is a value type, not a reference type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md"><span data-ttu-id="e4f71-200">Value Types and Reference Types</span><span class="sxs-lookup"><span data-stu-id="e4f71-200">Value Types and Reference Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public static int LBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 LBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
      <MemberSignature Language="F#" Value="static member LBound : Array * int -&gt; int" Usage="Microsoft.VisualBasic.Information.LBound (Array, Rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array"><span data-ttu-id="e4f71-201">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-201">Required.</span></span> <span data-ttu-id="e4f71-202">데이터 형식의 배열로,</span><span class="sxs-lookup"><span data-stu-id="e4f71-202">Array of any data type.</span></span> <span data-ttu-id="e4f71-203">차원의 가능한 최저 첨자를 찾을 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-203">The array in which you want to find the lowest possible subscript of a dimension.</span></span></param>
        <param name="Rank"><span data-ttu-id="e4f71-204">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-204">Optional.</span></span> <span data-ttu-id="e4f71-205"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="e4f71-205"><see langword="Integer" />.</span></span> <span data-ttu-id="e4f71-206">가능한 최저 첨자가 반환될 차원입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-206">The dimension for which the lowest possible subscript is to be returned.</span></span> <span data-ttu-id="e4f71-207">첫 번째 차원에는 1, 두 번째 차원에는 2를 사용하는 방식으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-207">Use 1 for the first dimension, 2 for the second, and so on.</span></span> <span data-ttu-id="e4f71-208"><paramref name="Rank" />가 생략되면 1이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-208">If <paramref name="Rank" /> is omitted, 1 is assumed.</span></span></param>
        <summary><span data-ttu-id="e4f71-209">배열의 표시된 차원에 사용할 수 있는 최저 첨자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-209">Returns the lowest available subscript for the indicated dimension of an array.</span></span></summary>
        <returns><span data-ttu-id="e4f71-210"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="e4f71-210"><see langword="Integer" />.</span></span> <span data-ttu-id="e4f71-211">지정한 차원의 첨자에 포함될 수 있는 가장 낮은 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-211">The lowest value the subscript for the specified dimension can contain.</span></span> <span data-ttu-id="e4f71-212"><see langword="LBound" />는 <paramref name="Array" />가 초기화된 경우 길이가 0인 문자열과 같이 요소가 없어도 항상 0을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-212"><see langword="LBound" /> always returns 0 as long as <paramref name="Array" /> has been initialized, even if it has no elements, for example if it is a zero-length string.</span></span> <span data-ttu-id="e4f71-213"><paramref name="Array" />가 <see langword="Nothing" />이면 <see langword="LBound" />는 <see cref="T:System.ArgumentNullException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-213">If <paramref name="Array" /> is <see langword="Nothing" />, <see langword="LBound" /> throws an <see cref="T:System.ArgumentNullException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-214">배열 첨자가 0에서 시작하므로 모든 차원에 대해 사용할 수 있는 최저 첨자는 항상 0입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-214">Since array subscripts start at 0, the lowest available subscript for every dimension is always 0.</span></span>  
  
 <span data-ttu-id="e4f71-215">다음 크기를 사용 하 여 배열에 대해 `LBound` 다음 표에서 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-215">For an array with the following dimensions, `LBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="e4f71-216">LBound 호출</span><span class="sxs-lookup"><span data-stu-id="e4f71-216">Call to LBound</span></span>|<span data-ttu-id="e4f71-217">반환 값</span><span class="sxs-lookup"><span data-stu-id="e4f71-217">Return value</span></span>|  
|--------------------|------------------|  
|`LBound(a, 1)`|<span data-ttu-id="e4f71-218">0</span><span class="sxs-lookup"><span data-stu-id="e4f71-218">0</span></span>|  
|`LBound(a, 2)`|<span data-ttu-id="e4f71-219">0</span><span class="sxs-lookup"><span data-stu-id="e4f71-219">0</span></span>|  
|`LBound(a, 3)`|<span data-ttu-id="e4f71-220">0</span><span class="sxs-lookup"><span data-stu-id="e4f71-220">0</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-221">다음 예제에서는 `LBound` 표시 된 차원 배열에 사용할 수 있는 최저 첨자를 결정 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-221">The following example uses the `LBound` function to determine the lowest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e4f71-222"><paramref name="Array" />가 <see langword="Nothing" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-222"><paramref name="Array" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="e4f71-223"><paramref name="Rank" />가 1보다 작거나 <paramref name="Rank" />가 <paramref name="Array" />의 차수보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-223"><paramref name="Rank" /> less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/dim-statement.md"><span data-ttu-id="e4f71-224">Dim 문(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e4f71-224">Dim Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/redim-statement.md"><span data-ttu-id="e4f71-225">ReDim 문(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e4f71-225">ReDim Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="QBColor">
      <MemberSignature Language="C#" Value="public static int QBColor (int Color);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 QBColor(int32 Color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function QBColor (Color As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QBColor(int Color);" />
      <MemberSignature Language="F#" Value="static member QBColor : int -&gt; int" Usage="Microsoft.VisualBasic.Information.QBColor Color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Color" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Color"><span data-ttu-id="e4f71-226">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-226">Required.</span></span> <span data-ttu-id="e4f71-227">0~15 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-227">A whole number in the range 0-15.</span></span></param>
        <summary><span data-ttu-id="e4f71-228">지정한 색 번호에 해당되는 RGB 색 코드를 나타내는 <see langword="Integer" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-228">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span></span></summary>
        <returns><span data-ttu-id="e4f71-229">지정한 색 번호에 해당되는 RGB 색 코드를 나타내는 <see langword="Integer" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-229">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-230">반환된 된 값 가장 덜 중요 한 바이트부터 Visual Basic 언어를 사용한 RGB 시스템에서 적절 한 색을 설정 하는 데 빨강, 녹색 및 파랑 값을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-230">Starting with the least-significant byte, the returned value specifies the red, green, and blue values used to set the appropriate color in the RGB system used by the Visual Basic language.</span></span>  
  
 <span data-ttu-id="e4f71-231">`Color` 인수에 이러한 설정이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-231">The `Color` argument has these settings.</span></span>  
  
|<span data-ttu-id="e4f71-232">수</span><span class="sxs-lookup"><span data-stu-id="e4f71-232">Number</span></span>|<span data-ttu-id="e4f71-233">색</span><span class="sxs-lookup"><span data-stu-id="e4f71-233">Color</span></span>|<span data-ttu-id="e4f71-234">수</span><span class="sxs-lookup"><span data-stu-id="e4f71-234">Number</span></span>|<span data-ttu-id="e4f71-235">색</span><span class="sxs-lookup"><span data-stu-id="e4f71-235">Color</span></span>|  
|------------|-----------|------------|-----------|  
|<span data-ttu-id="e4f71-236">0</span><span class="sxs-lookup"><span data-stu-id="e4f71-236">0</span></span>|<span data-ttu-id="e4f71-237">검정</span><span class="sxs-lookup"><span data-stu-id="e4f71-237">Black</span></span>|<span data-ttu-id="e4f71-238">8</span><span class="sxs-lookup"><span data-stu-id="e4f71-238">8</span></span>|<span data-ttu-id="e4f71-239">회색</span><span class="sxs-lookup"><span data-stu-id="e4f71-239">Gray</span></span>|  
|<span data-ttu-id="e4f71-240">1</span><span class="sxs-lookup"><span data-stu-id="e4f71-240">1</span></span>|<span data-ttu-id="e4f71-241">파랑</span><span class="sxs-lookup"><span data-stu-id="e4f71-241">Blue</span></span>|<span data-ttu-id="e4f71-242">9</span><span class="sxs-lookup"><span data-stu-id="e4f71-242">9</span></span>|<span data-ttu-id="e4f71-243">연한 파랑</span><span class="sxs-lookup"><span data-stu-id="e4f71-243">Light blue</span></span>|  
|<span data-ttu-id="e4f71-244">2</span><span class="sxs-lookup"><span data-stu-id="e4f71-244">2</span></span>|<span data-ttu-id="e4f71-245">녹색</span><span class="sxs-lookup"><span data-stu-id="e4f71-245">Green</span></span>|<span data-ttu-id="e4f71-246">10</span><span class="sxs-lookup"><span data-stu-id="e4f71-246">10</span></span>|<span data-ttu-id="e4f71-247">연한 녹색</span><span class="sxs-lookup"><span data-stu-id="e4f71-247">Light green</span></span>|  
|<span data-ttu-id="e4f71-248">3</span><span class="sxs-lookup"><span data-stu-id="e4f71-248">3</span></span>|<span data-ttu-id="e4f71-249">녹청</span><span class="sxs-lookup"><span data-stu-id="e4f71-249">Cyan</span></span>|<span data-ttu-id="e4f71-250">11</span><span class="sxs-lookup"><span data-stu-id="e4f71-250">11</span></span>|<span data-ttu-id="e4f71-251">연한 녹청</span><span class="sxs-lookup"><span data-stu-id="e4f71-251">Light cyan</span></span>|  
|<span data-ttu-id="e4f71-252">4</span><span class="sxs-lookup"><span data-stu-id="e4f71-252">4</span></span>|<span data-ttu-id="e4f71-253">빨강</span><span class="sxs-lookup"><span data-stu-id="e4f71-253">Red</span></span>|<span data-ttu-id="e4f71-254">12</span><span class="sxs-lookup"><span data-stu-id="e4f71-254">12</span></span>|<span data-ttu-id="e4f71-255">연한 빨간색</span><span class="sxs-lookup"><span data-stu-id="e4f71-255">Light red</span></span>|  
|<span data-ttu-id="e4f71-256">5</span><span class="sxs-lookup"><span data-stu-id="e4f71-256">5</span></span>|<span data-ttu-id="e4f71-257">자홍</span><span class="sxs-lookup"><span data-stu-id="e4f71-257">Magenta</span></span>|<span data-ttu-id="e4f71-258">13</span><span class="sxs-lookup"><span data-stu-id="e4f71-258">13</span></span>|<span data-ttu-id="e4f71-259">밝은 자홍</span><span class="sxs-lookup"><span data-stu-id="e4f71-259">Light magenta</span></span>|  
|<span data-ttu-id="e4f71-260">6</span><span class="sxs-lookup"><span data-stu-id="e4f71-260">6</span></span>|<span data-ttu-id="e4f71-261">노랑</span><span class="sxs-lookup"><span data-stu-id="e4f71-261">Yellow</span></span>|<span data-ttu-id="e4f71-262">14</span><span class="sxs-lookup"><span data-stu-id="e4f71-262">14</span></span>|<span data-ttu-id="e4f71-263">밝은 노랑</span><span class="sxs-lookup"><span data-stu-id="e4f71-263">Light yellow</span></span>|  
|<span data-ttu-id="e4f71-264">7</span><span class="sxs-lookup"><span data-stu-id="e4f71-264">7</span></span>|<span data-ttu-id="e4f71-265">하얀</span><span class="sxs-lookup"><span data-stu-id="e4f71-265">White</span></span>|<span data-ttu-id="e4f71-266">15</span><span class="sxs-lookup"><span data-stu-id="e4f71-266">15</span></span>|<span data-ttu-id="e4f71-267">밝은 백서</span><span class="sxs-lookup"><span data-stu-id="e4f71-267">Bright white</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-268">이 예제에서는 합니다 `QBColor` 색으로 변경 하는 함수에 나타난 `colorInteger`합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-268">This example uses the `QBColor` function to change to the color indicated by `colorInteger`.</span></span> <span data-ttu-id="e4f71-269">`QBColor` 0에서 15 사이의 정수 값을 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-269">`QBColor` accepts integer values between 0 and 15.</span></span>  
  
 [!code-vb[VbVbalrCatRef#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e4f71-270"><paramref name="Color" />가 0부터 15까지의 범위를 벗어났습니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-270"><paramref name="Color" /> is outside of range 0 to 15, inclusive.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="RGB">
      <MemberSignature Language="C#" Value="public static int RGB (int Red, int Green, int Blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 RGB(int32 Red, int32 Green, int32 Blue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RGB (Red As Integer, Green As Integer, Blue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int RGB(int Red, int Green, int Blue);" />
      <MemberSignature Language="F#" Value="static member RGB : int * int * int -&gt; int" Usage="Microsoft.VisualBasic.Information.RGB (Red, Green, Blue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Red" Type="System.Int32" />
        <Parameter Name="Green" Type="System.Int32" />
        <Parameter Name="Blue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Red"><span data-ttu-id="e4f71-271">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-271">Required.</span></span> <span data-ttu-id="e4f71-272">0~255(포함) 사이의 <see langword="Integer" /> 형식으로, 빨간색의 농도를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-272"><see langword="Integer" /> in the range 0-255, inclusive, that represents the intensity of the red component of the color.</span></span></param>
        <param name="Green"><span data-ttu-id="e4f71-273">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-273">Required.</span></span> <span data-ttu-id="e4f71-274">0~255(포함) 사이의 <see langword="Integer" /> 형식으로, 녹색의 농도를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-274"><see langword="Integer" /> in the range 0-255, inclusive, that represents the intensity of the green component of the color.</span></span></param>
        <param name="Blue"><span data-ttu-id="e4f71-275">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-275">Required.</span></span> <span data-ttu-id="e4f71-276">0~255(포함) 사이의 <see langword="Integer" /> 형식으로, 파란색의 농도를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-276"><see langword="Integer" /> in the range 0-255, inclusive, that represents the intensity of the blue component of the color.</span></span></param>
        <summary><span data-ttu-id="e4f71-277">빨강, 녹색 및 파랑 색 구성 요소 집합에서 RGB 색상 값을 나타내는 <see langword="Integer" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-277">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span></span></summary>
        <returns><span data-ttu-id="e4f71-278">빨강, 녹색 및 파랑 색 구성 요소 집합에서 RGB 색상 값을 나타내는 <see langword="Integer" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-278">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-279">색 사양을 허용 하는 응용 프로그램 메서드 및 속성 사양이 RGB를 나타내는 숫자 색 값을 예상 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-279">Application methods and properties that accept a color specification expect that specification to be a number representing an RGB color value.</span></span> <span data-ttu-id="e4f71-280">RGB 색상 값을 빨간색, 녹색 및 파란색 표시할 특정 색의 상대 강도 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-280">An RGB color value specifies the relative intensity of red, green, and blue to cause a specific color to be displayed.</span></span>  
  
 <span data-ttu-id="e4f71-281">경우에 대 한 인수 값 `RGB` 255 보다 크면 255가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-281">If the value for any argument to `RGB` is greater than 255, 255 is used.</span></span>  
  
 <span data-ttu-id="e4f71-282">다음 표에서 일부 표준 색과 포함 된 빨간색, 녹색 및 파랑 값을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-282">The following table lists some standard colors and the red, green, and blue values they include.</span></span>  
  
|<span data-ttu-id="e4f71-283">색</span><span class="sxs-lookup"><span data-stu-id="e4f71-283">Color</span></span>|<span data-ttu-id="e4f71-284">빨강 값</span><span class="sxs-lookup"><span data-stu-id="e4f71-284">Red value</span></span>|<span data-ttu-id="e4f71-285">녹색 값</span><span class="sxs-lookup"><span data-stu-id="e4f71-285">Green value</span></span>|<span data-ttu-id="e4f71-286">파란색 값</span><span class="sxs-lookup"><span data-stu-id="e4f71-286">Blue value</span></span>|  
|-----------|---------------|-----------------|----------------|  
|<span data-ttu-id="e4f71-287">검정</span><span class="sxs-lookup"><span data-stu-id="e4f71-287">Black</span></span>|<span data-ttu-id="e4f71-288">0</span><span class="sxs-lookup"><span data-stu-id="e4f71-288">0</span></span>|<span data-ttu-id="e4f71-289">0</span><span class="sxs-lookup"><span data-stu-id="e4f71-289">0</span></span>|<span data-ttu-id="e4f71-290">0</span><span class="sxs-lookup"><span data-stu-id="e4f71-290">0</span></span>|  
|<span data-ttu-id="e4f71-291">파랑</span><span class="sxs-lookup"><span data-stu-id="e4f71-291">Blue</span></span>|<span data-ttu-id="e4f71-292">0</span><span class="sxs-lookup"><span data-stu-id="e4f71-292">0</span></span>|<span data-ttu-id="e4f71-293">0</span><span class="sxs-lookup"><span data-stu-id="e4f71-293">0</span></span>|<span data-ttu-id="e4f71-294">255</span><span class="sxs-lookup"><span data-stu-id="e4f71-294">255</span></span>|  
|<span data-ttu-id="e4f71-295">녹색</span><span class="sxs-lookup"><span data-stu-id="e4f71-295">Green</span></span>|<span data-ttu-id="e4f71-296">0</span><span class="sxs-lookup"><span data-stu-id="e4f71-296">0</span></span>|<span data-ttu-id="e4f71-297">255</span><span class="sxs-lookup"><span data-stu-id="e4f71-297">255</span></span>|<span data-ttu-id="e4f71-298">0</span><span class="sxs-lookup"><span data-stu-id="e4f71-298">0</span></span>|  
|<span data-ttu-id="e4f71-299">녹청</span><span class="sxs-lookup"><span data-stu-id="e4f71-299">Cyan</span></span>|<span data-ttu-id="e4f71-300">0</span><span class="sxs-lookup"><span data-stu-id="e4f71-300">0</span></span>|<span data-ttu-id="e4f71-301">255</span><span class="sxs-lookup"><span data-stu-id="e4f71-301">255</span></span>|<span data-ttu-id="e4f71-302">255</span><span class="sxs-lookup"><span data-stu-id="e4f71-302">255</span></span>|  
|<span data-ttu-id="e4f71-303">빨강</span><span class="sxs-lookup"><span data-stu-id="e4f71-303">Red</span></span>|<span data-ttu-id="e4f71-304">255</span><span class="sxs-lookup"><span data-stu-id="e4f71-304">255</span></span>|<span data-ttu-id="e4f71-305">0</span><span class="sxs-lookup"><span data-stu-id="e4f71-305">0</span></span>|<span data-ttu-id="e4f71-306">0</span><span class="sxs-lookup"><span data-stu-id="e4f71-306">0</span></span>|  
|<span data-ttu-id="e4f71-307">자홍</span><span class="sxs-lookup"><span data-stu-id="e4f71-307">Magenta</span></span>|<span data-ttu-id="e4f71-308">255</span><span class="sxs-lookup"><span data-stu-id="e4f71-308">255</span></span>|<span data-ttu-id="e4f71-309">0</span><span class="sxs-lookup"><span data-stu-id="e4f71-309">0</span></span>|<span data-ttu-id="e4f71-310">255</span><span class="sxs-lookup"><span data-stu-id="e4f71-310">255</span></span>|  
|<span data-ttu-id="e4f71-311">노랑</span><span class="sxs-lookup"><span data-stu-id="e4f71-311">Yellow</span></span>|<span data-ttu-id="e4f71-312">255</span><span class="sxs-lookup"><span data-stu-id="e4f71-312">255</span></span>|<span data-ttu-id="e4f71-313">255</span><span class="sxs-lookup"><span data-stu-id="e4f71-313">255</span></span>|<span data-ttu-id="e4f71-314">0</span><span class="sxs-lookup"><span data-stu-id="e4f71-314">0</span></span>|  
|<span data-ttu-id="e4f71-315">하얀</span><span class="sxs-lookup"><span data-stu-id="e4f71-315">White</span></span>|<span data-ttu-id="e4f71-316">255</span><span class="sxs-lookup"><span data-stu-id="e4f71-316">255</span></span>|<span data-ttu-id="e4f71-317">255</span><span class="sxs-lookup"><span data-stu-id="e4f71-317">255</span></span>|<span data-ttu-id="e4f71-318">255</span><span class="sxs-lookup"><span data-stu-id="e4f71-318">255</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-319">이 예제에서는 하는 방법을 `RGB` 함수를 사용 하 여 나타내는 정수를 반환 하는 `RGB` 색 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-319">This example shows how the `RGB` function is used to return a whole number representing an `RGB` color value.</span></span>  
  
 [!code-vb[VbVbalrCatRef#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e4f71-320"><paramref name="Green" />, <paramref name="Blue" /> 또는 <paramref name="Red" />가 0부터 255까지의 범위를 벗어났습니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-320"><paramref name="Green" />, <paramref name="Blue" />, or <paramref name="Red" /> is outside of range 0 to 255, inclusive.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SystemTypeName">
      <MemberSignature Language="C#" Value="public static string SystemTypeName (string VbName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string SystemTypeName(string VbName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SystemTypeName (VbName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SystemTypeName(System::String ^ VbName);" />
      <MemberSignature Language="F#" Value="static member SystemTypeName : string -&gt; string" Usage="Microsoft.VisualBasic.Information.SystemTypeName VbName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VbName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="VbName"><span data-ttu-id="e4f71-321">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-321">Required.</span></span> <span data-ttu-id="e4f71-322">Visual Basic 형식 이름을 포함하는 <see langword="String" /> 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-322">A <see langword="String" /> variable containing a Visual Basic type name.</span></span></param>
        <summary><span data-ttu-id="e4f71-323">변수의 시스템 데이터 형식 이름을 포함하는 <see langword="String" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-323">Returns a <see langword="String" /> value containing the system data type name of a variable.</span></span></summary>
        <returns><span data-ttu-id="e4f71-324">변수의 시스템 데이터 형식 이름을 포함하는 <see langword="String" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-324">Returns a <see langword="String" /> value containing the system data type name of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-325">`SystemTypeName` 정규화 된 공용 언어 런타임 (CLR) 형식 이름에 해당 하는 Visual Basic 형식 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-325">`SystemTypeName` returns the fully qualified common language runtime (CLR) type name corresponding to the Visual Basic type name.</span></span> <span data-ttu-id="e4f71-326">예를 들어 있으면 `VbName` "날짜"를 포함 `SystemTypeName` "System.DateTime"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-326">For example, if `VbName` contains "Date", `SystemTypeName` returns "System.DateTime".</span></span> <span data-ttu-id="e4f71-327">하는 경우 `SystemTypeName` 의 값을 인식 하지 못합니다 `VbName`를 반환 합니다 `Nothing` (문자열이 아닌 아무것도).</span><span class="sxs-lookup"><span data-stu-id="e4f71-327">If `SystemTypeName` does not recognize the value of `VbName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-328">다음 예제에서는 `SystemTypeName` 함수를 여러 변수에 대 한 데이터 형식 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-328">The following example uses the `SystemTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#49)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="e4f71-329">데이터 형식 요약(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e4f71-329">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public static string TypeName (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string TypeName(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TypeName (VarName As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TypeName(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member TypeName : obj -&gt; string" Usage="Microsoft.VisualBasic.Information.TypeName VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="e4f71-330">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-330">Required.</span></span> <span data-ttu-id="e4f71-331"><see langword="Object" /> 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-331"><see langword="Object" /> variable.</span></span> <span data-ttu-id="e4f71-332"><see langword="Option Strict" />가 <see langword="Off" />이면 구조체를 제외한 모든 데이터 형식의 변수를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-332">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span></span></param>
        <summary><span data-ttu-id="e4f71-333">변수에 대한 데이터 형식 정보를 포함하는 <see langword="String" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-333">Returns a <see langword="String" /> value containing data-type information about a variable.</span></span></summary>
        <returns><span data-ttu-id="e4f71-334">변수에 대한 데이터 형식 정보를 포함하는 <see langword="String" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-334">Returns a <see langword="String" /> value containing data-type information about a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-335">다음 표는 `String` 에서 반환 된 값 `TypeName` 의 다른 내용에 대 한 `VarName`합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-335">The following table shows the `String` values returned by `TypeName` for different contents of `VarName`.</span></span>  
  
|<span data-ttu-id="e4f71-336">`VarName` 콘텐츠</span><span class="sxs-lookup"><span data-stu-id="e4f71-336">`VarName` contents</span></span>|<span data-ttu-id="e4f71-337">반환 문자열</span><span class="sxs-lookup"><span data-stu-id="e4f71-337">String returned</span></span>|  
|------------------------|---------------------|  
|<span data-ttu-id="e4f71-338">16 비트 `True` 또는 `False` 값 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-338">16-bit `True` or `False` value type</span></span>|<span data-ttu-id="e4f71-339">"부울"</span><span class="sxs-lookup"><span data-stu-id="e4f71-339">"Boolean"</span></span>|  
|<span data-ttu-id="e4f71-340">8 비트 이진 값 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-340">8-bit binary value type</span></span>|<span data-ttu-id="e4f71-341">"Byte"</span><span class="sxs-lookup"><span data-stu-id="e4f71-341">"Byte"</span></span>|  
|<span data-ttu-id="e4f71-342">16 비트 문자 값 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-342">16-bit character value type</span></span>|<span data-ttu-id="e4f71-343">"Char"</span><span class="sxs-lookup"><span data-stu-id="e4f71-343">"Char"</span></span>|  
|<span data-ttu-id="e4f71-344">64 비트 날짜 및 시간 값 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-344">64-bit date and time value type</span></span>|<span data-ttu-id="e4f71-345">"Date"</span><span class="sxs-lookup"><span data-stu-id="e4f71-345">"Date"</span></span>|  
|<span data-ttu-id="e4f71-346">누락 되었거나 존재 하지 않는 데이터를 나타내는 참조 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-346">Reference type indicating missing or nonexistent data</span></span>|<span data-ttu-id="e4f71-347">"DBNull"</span><span class="sxs-lookup"><span data-stu-id="e4f71-347">"DBNull"</span></span>|  
|<span data-ttu-id="e4f71-348">128 비트 고정 소수점 숫자 값 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-348">128-bit fixed-point numeric value type</span></span>|<span data-ttu-id="e4f71-349">"Decimal"</span><span class="sxs-lookup"><span data-stu-id="e4f71-349">"Decimal"</span></span>|  
|<span data-ttu-id="e4f71-350">64 비트 부동 소수점 숫자 값 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-350">64-bit floating-point numeric value type</span></span>|<span data-ttu-id="e4f71-351">"Double"</span><span class="sxs-lookup"><span data-stu-id="e4f71-351">"Double"</span></span>|  
|<span data-ttu-id="e4f71-352">32 비트 정수 값 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-352">32-bit integer value type</span></span>|<span data-ttu-id="e4f71-353">"Integer"</span><span class="sxs-lookup"><span data-stu-id="e4f71-353">"Integer"</span></span>|  
|<span data-ttu-id="e4f71-354">지정 되지 않은 개체를 가리키는 참조 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-354">Reference type pointing to an unspecialized object</span></span>|<span data-ttu-id="e4f71-355">"Object"</span><span class="sxs-lookup"><span data-stu-id="e4f71-355">"Object"</span></span>|  
|<span data-ttu-id="e4f71-356">클래스에서 지정 된 개체를 가리키는 참조 형식 *objectclass*</span><span class="sxs-lookup"><span data-stu-id="e4f71-356">Reference type pointing to a specialized object created from class *objectclass*</span></span>|<span data-ttu-id="e4f71-357">"*objectclass*"</span><span class="sxs-lookup"><span data-stu-id="e4f71-357">"*objectclass*"</span></span>|  
|<span data-ttu-id="e4f71-358">64 비트 정수 값 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-358">64-bit integer value type</span></span>|<span data-ttu-id="e4f71-359">"Long"</span><span class="sxs-lookup"><span data-stu-id="e4f71-359">"Long"</span></span>|  
|<span data-ttu-id="e4f71-360">현재 할당 된 개체가 없는 참조 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-360">Reference type with no object currently assigned to it</span></span>|<span data-ttu-id="e4f71-361">아무것도</span><span class="sxs-lookup"><span data-stu-id="e4f71-361">"Nothing"</span></span>|  
|<span data-ttu-id="e4f71-362">8 비트 부호 있는 정수 값 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-362">8-bit signed integer value type</span></span>|<span data-ttu-id="e4f71-363">"SByte"</span><span class="sxs-lookup"><span data-stu-id="e4f71-363">"SByte"</span></span>|  
|<span data-ttu-id="e4f71-364">16 비트 정수 값 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-364">16-bit integer value type</span></span>|<span data-ttu-id="e4f71-365">"Short"</span><span class="sxs-lookup"><span data-stu-id="e4f71-365">"Short"</span></span>|  
|<span data-ttu-id="e4f71-366">32 비트 부동 소수점 숫자 값 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-366">32-bit floating-point numeric value type</span></span>|<span data-ttu-id="e4f71-367">"단일"</span><span class="sxs-lookup"><span data-stu-id="e4f71-367">"Single"</span></span>|  
|<span data-ttu-id="e4f71-368">16 비트 문자의 문자열을 가리키는 참조 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-368">Reference type pointing to a string of 16-bit characters</span></span>|<span data-ttu-id="e4f71-369">"String"</span><span class="sxs-lookup"><span data-stu-id="e4f71-369">"String"</span></span>|  
|<span data-ttu-id="e4f71-370">32 비트 부호 없는 정수 값 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-370">32-bit unsigned integer value type</span></span>|<span data-ttu-id="e4f71-371">"UInteger"</span><span class="sxs-lookup"><span data-stu-id="e4f71-371">"UInteger"</span></span>|  
|<span data-ttu-id="e4f71-372">64 비트 부호 없는 정수 값 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-372">64-bit unsigned integer value type</span></span>|<span data-ttu-id="e4f71-373">"ULong"</span><span class="sxs-lookup"><span data-stu-id="e4f71-373">"ULong"</span></span>|  
|<span data-ttu-id="e4f71-374">16 비트 부호 없는 정수 값 형식</span><span class="sxs-lookup"><span data-stu-id="e4f71-374">16-bit unsigned integer value type</span></span>|<span data-ttu-id="e4f71-375">"UShort"</span><span class="sxs-lookup"><span data-stu-id="e4f71-375">"UShort"</span></span>|  
  
 <span data-ttu-id="e4f71-376">경우 `VarName` 가 배열에 반환된 된 문자열에 추가 하는 빈 괄호를 사용 하 여 앞의 표에 있는 문자열 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-376">If `VarName` is an array, the returned string can be any one of the strings in the preceding table with empty parentheses appended.</span></span> <span data-ttu-id="e4f71-377">예를 들어 있으면 `VarName` 정수의 배열을 가리킵니다 `TypeName` "필수적 요소"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-377">For example, if `VarName` points to an array of integers, `TypeName` returns "Integer()".</span></span>  
  
 <span data-ttu-id="e4f71-378">때 `TypeName` 참조 형식의 이름을 반환 합니다만 이름 자체를 정규화 된 이름이 아니라 같은 클래스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-378">When `TypeName` returns the name of a reference type such as a class, it returns only the name itself, not the qualified name.</span></span> <span data-ttu-id="e4f71-379">예를 들어 경우 `VarName` 클래스의 개체를 가리키는 <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` "PaperSource"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-379">For example, if `VarName` points to an object of class <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` returns "PaperSource".</span></span> <span data-ttu-id="e4f71-380">변수의 특정 클래스 형식으로 선언 되었지만 개체에 할당 되지 않은 경우 `TypeName` 아무것도 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-380">Note that if the variable is declared to be of a certain class type but does not have an object assigned to it, `TypeName` returns "Nothing".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-381">다음 예제에서는 `TypeName` 여러 변수에 대 한 데이터 형식 정보를 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-381">The following example uses the `TypeName` function to return data type information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="e4f71-382">데이터 형식 요약(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e4f71-382">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public static int UBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 UBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
      <MemberSignature Language="F#" Value="static member UBound : Array * int -&gt; int" Usage="Microsoft.VisualBasic.Information.UBound (Array, Rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array"><span data-ttu-id="e4f71-383">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-383">Required.</span></span> <span data-ttu-id="e4f71-384">데이터 형식의 배열로,</span><span class="sxs-lookup"><span data-stu-id="e4f71-384">Array of any data type.</span></span> <span data-ttu-id="e4f71-385">차원의 가능한 최고 첨자를 찾을 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-385">The array in which you want to find the highest possible subscript of a dimension.</span></span></param>
        <param name="Rank"><span data-ttu-id="e4f71-386">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-386">Optional.</span></span> <span data-ttu-id="e4f71-387"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="e4f71-387"><see langword="Integer" />.</span></span> <span data-ttu-id="e4f71-388">가능한 최고 첨자가 반환될 차원입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-388">The dimension for which the highest possible subscript is to be returned.</span></span> <span data-ttu-id="e4f71-389">첫 번째 차원에는 1, 두 번째 차원에는 2를 사용하는 방식으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-389">Use 1 for the first dimension, 2 for the second, and so on.</span></span> <span data-ttu-id="e4f71-390"><paramref name="Rank" />가 생략되면 1이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-390">If <paramref name="Rank" /> is omitted, 1 is assumed.</span></span></param>
        <summary><span data-ttu-id="e4f71-391">배열의 표시된 차원에 사용할 수 있는 최고 첨자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-391">Returns the highest available subscript for the indicated dimension of an array.</span></span></summary>
        <returns><span data-ttu-id="e4f71-392"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="e4f71-392"><see langword="Integer" />.</span></span> <span data-ttu-id="e4f71-393">지정한 차원의 첨자에 포함될 수 있는 가장 높은 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-393">The highest value the subscript for the specified dimension can contain.</span></span> <span data-ttu-id="e4f71-394"><paramref name="Array" />에 요소가 하나만 있으면 <see langword="UBound" />에서 0을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-394">If <paramref name="Array" /> has only one element, <see langword="UBound" /> returns 0.</span></span> <span data-ttu-id="e4f71-395">길이가 0인 문자열과 같이 <paramref name="Array" />에 요소가 없으면 <see langword="UBound" />에서 -1을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-395">If <paramref name="Array" /> has no elements, for example if it is a zero-length string, <see langword="UBound" /> returns -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-396">배열 첨자가 0에서 시작, 차원의 길이 해당 차원에 대 한 사용 가능한 최고 첨자 보다 1 큽니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-396">Since array subscripts start at 0, the length of a dimension is greater by one than the highest available subscript for that dimension.</span></span>  
  
 <span data-ttu-id="e4f71-397">다음 크기를 사용 하 여 배열에 대해 `UBound` 다음 표에서 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-397">For an array with the following dimensions, `UBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="e4f71-398">UBound 호출</span><span class="sxs-lookup"><span data-stu-id="e4f71-398">Call to UBound</span></span>|<span data-ttu-id="e4f71-399">반환 값</span><span class="sxs-lookup"><span data-stu-id="e4f71-399">Return value</span></span>|  
|--------------------|------------------|  
|`UBound(a, 1)`|<span data-ttu-id="e4f71-400">100</span><span class="sxs-lookup"><span data-stu-id="e4f71-400">100</span></span>|  
|`UBound(a, 2)`|<span data-ttu-id="e4f71-401">5</span><span class="sxs-lookup"><span data-stu-id="e4f71-401">5</span></span>|  
|`UBound(a, 3)`|<span data-ttu-id="e4f71-402">4</span><span class="sxs-lookup"><span data-stu-id="e4f71-402">4</span></span>|  
  
 <span data-ttu-id="e4f71-403">사용할 수 있습니다 `UBound` 합계를 결정할 수 있지만 배열에 있는 요소의 수 첨자가 0에서 시작 하는 팩트에 대 한 계정에 반환 하는 값 조정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-403">You can use `UBound` to determine the total number of elements in an array, but you must adjust the value it returns to account for the fact that the subscripts start at 0.</span></span> <span data-ttu-id="e4f71-404">다음 예제에서는 배열의 전체 크기를 계산 `a` 앞의 예제에서:</span><span class="sxs-lookup"><span data-stu-id="e4f71-404">The following example calculates the total size of the array `a` in the preceding example:</span></span>  
  
```vb  
Dim total As Integer  
total = (UBound(A, 1) + 1) * (UBound(A, 2) + 1) * (UBound(A, 3) + 1)  
```  
  
 <span data-ttu-id="e4f71-405">값에 대 한 계산 `total` 는 3030 101 \* 6 \* 5.</span><span class="sxs-lookup"><span data-stu-id="e4f71-405">The value calculated for `total` is 3030, which is 101 \* 6 \* 5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-406">다음 예제에서는 `UBound` 배열의 표시 된 차원에 대 한 사용 가능한 최고 첨자를 결정 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-406">The following example uses the `UBound` function to determine the highest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e4f71-407"><paramref name="Array" />가 <see langword="Nothing" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-407"><paramref name="Array" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="e4f71-408"><paramref name="Rank" />가 1보다 작거나 <paramref name="Rank" />가 <paramref name="Array" />의 차수보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-408"><paramref name="Rank" /> is less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/dim-statement.md"><span data-ttu-id="e4f71-409">Dim 문(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e4f71-409">Dim Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/redim-statement.md"><span data-ttu-id="e4f71-410">ReDim 문(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e4f71-410">ReDim Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VarType">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.VariantType VarType (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.VariantType VarType(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function VarType (VarName As Object) As VariantType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::VariantType VarType(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member VarType : obj -&gt; Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Information.VarType VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="e4f71-411">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-411">Required.</span></span> <span data-ttu-id="e4f71-412"><see langword="Object" /> 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-412"><see langword="Object" /> variable.</span></span> <span data-ttu-id="e4f71-413"><see langword="Option Strict" />가 <see langword="Off" />이면 구조체를 제외한 모든 데이터 형식의 변수를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-413">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span></span></param>
        <summary><span data-ttu-id="e4f71-414">변수의 데이터 형식 분류를 포함하는 <see langword="Integer" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-414">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span></span></summary>
        <returns><span data-ttu-id="e4f71-415">변수의 데이터 형식 분류를 포함하는 <see langword="Integer" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-415">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-416">반환 된 정수 값 `VarType` 멤버인는 <xref:Microsoft.VisualBasic.VariantType>합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-416">The integer value returned by `VarType` is a member of the <xref:Microsoft.VisualBasic.VariantType>.</span></span>  
  
 <span data-ttu-id="e4f71-417">다음 표에서 반환 하는 값을 보여 줍니다 `VarType` 의 특수 한 경우 `VarName`합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-417">The following table shows the values returned by `VarType` for special cases of `VarName`.</span></span>  
  
|<span data-ttu-id="e4f71-418">데이터 형식으로 표시 `VarName`</span><span class="sxs-lookup"><span data-stu-id="e4f71-418">Data type represented by `VarName`</span></span>|<span data-ttu-id="e4f71-419">반환 된 값 `VarType`</span><span class="sxs-lookup"><span data-stu-id="e4f71-419">Value returned by `VarType`</span></span>|  
|----------------------------------------|---------------------------------|  
|[<span data-ttu-id="e4f71-420">Nothing</span><span class="sxs-lookup"><span data-stu-id="e4f71-420">Nothing</span></span>](~/docs/visual-basic/language-reference/nothing.md)|`VariantType.Object`|  
|<xref:System.DBNull>|`VariantType.Null`|  
|<span data-ttu-id="e4f71-421">열거형</span><span class="sxs-lookup"><span data-stu-id="e4f71-421">Enumeration</span></span>|<span data-ttu-id="e4f71-422">기본 데이터 형식 (`SByte`, `Byte`, `Short`, `UShort`를 `Integer`를 `UInteger`를 `Long`, 또는 `ULong`)</span><span class="sxs-lookup"><span data-stu-id="e4f71-422">Underlying data type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`)</span></span>|  
|<span data-ttu-id="e4f71-423">배열</span><span class="sxs-lookup"><span data-stu-id="e4f71-423">Array</span></span>|<span data-ttu-id="e4f71-424">배열 요소 형식의 비트 OR 및 `VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="e4f71-424">Bitwise OR of array element type and `VariantType.Array`</span></span>|  
|<span data-ttu-id="e4f71-425">배열의 배열</span><span class="sxs-lookup"><span data-stu-id="e4f71-425">Array of arrays</span></span>|<span data-ttu-id="e4f71-426">비트 OR `VariantType.Object` 및 `VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="e4f71-426">Bitwise OR of `VariantType.Object` and `VariantType.Array`</span></span>|  
|<span data-ttu-id="e4f71-427">구조 (<xref:System.ValueType?displayProperty=nameWithType>)</span><span class="sxs-lookup"><span data-stu-id="e4f71-427">Structure (<xref:System.ValueType?displayProperty=nameWithType>)</span></span>|`VariantType.UserDefinedType`|  
|<xref:System.Exception>|`VariantType.Error`|  
|<span data-ttu-id="e4f71-428">알 수 없음</span><span class="sxs-lookup"><span data-stu-id="e4f71-428">Unknown</span></span>|`VariantType.Object`|  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-429">다음 예제에서는 `VarType` 여러 변수에 대 한 데이터 형식을 분류 정보를 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-429">The following example uses the `VarType` function to return data type classification information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="e4f71-430">데이터 형식 요약(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e4f71-430">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VbTypeName">
      <MemberSignature Language="C#" Value="public static string VbTypeName (string UrtName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string VbTypeName(string UrtName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VbTypeName (UrtName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VbTypeName(System::String ^ UrtName);" />
      <MemberSignature Language="F#" Value="static member VbTypeName : string -&gt; string" Usage="Microsoft.VisualBasic.Information.VbTypeName UrtName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="UrtName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="UrtName"><span data-ttu-id="e4f71-431">필수 요소.</span><span class="sxs-lookup"><span data-stu-id="e4f71-431">Required.</span></span> <span data-ttu-id="e4f71-432">공용 언어 런타임에서 사용되는 형식 이름을 포함하는 <see langword="String" /> 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-432"><see langword="String" /> variable containing a type name used by the common language runtime.</span></span></param>
        <summary><span data-ttu-id="e4f71-433">변수의 Visual Basic 데이터 형식 이름을 포함하는 <see langword="String" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-433">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span></span></summary>
        <returns><span data-ttu-id="e4f71-434">변수의 Visual Basic 데이터 형식 이름을 포함하는 <see langword="String" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-434">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f71-435">`VbTypeName` 공용 언어 런타임 형식 이름에 해당 하는 Visual Basic 형식 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-435">`VbTypeName` returns the Visual Basic type name corresponding to the common language runtime type name.</span></span> <span data-ttu-id="e4f71-436">예를 들어 있으면 `UrtName` "Int32" 또는 "System.Int32" 포함 `VbTypeName` "Integer"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-436">For example, if `UrtName` contains "Int32" or "System.Int32", `VbTypeName` returns "Integer".</span></span> <span data-ttu-id="e4f71-437">하는 경우 `VbTypeName` 의 값을 인식 하지 못합니다 `UrtName`를 반환 합니다 `Nothing` (문자열이 아닌 아무것도).</span><span class="sxs-lookup"><span data-stu-id="e4f71-437">If `VbTypeName` does not recognize the value of `UrtName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
 <span data-ttu-id="e4f71-438">에 형식 이름을 `UrtName` 에서 가져올 수 있습니다 다양 한 원본의 예를 들어 합니다 <xref:System.Reflection.MemberInfo.Name%2A> 속성에는 <xref:System.Reflection.MemberInfo> 배열을 <xref:System.Type> 클래스.</span><span class="sxs-lookup"><span data-stu-id="e4f71-438">The type name in `UrtName` can be obtained from various sources, for example from the <xref:System.Reflection.MemberInfo.Name%2A> property in the <xref:System.Reflection.MemberInfo> array of the <xref:System.Type> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f71-439">다음 예제에서는 `VbTypeName` 함수를 여러 변수에 대 한 데이터 형식 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e4f71-439">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#56)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="e4f71-440">데이터 형식 요약(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e4f71-440">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>