<Type Name="DataTable" FullName="System.Data.DataTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14ed6134d4a3b407a576e0429df20f55106c4149" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57949565" /></Metadata><TypeSignature Language="C#" Value="public class DataTable : System.ComponentModel.MarshalByValueComponent, System.ComponentModel.IListSource, System.ComponentModel.ISupportInitializeNotification, System.Runtime.Serialization.ISerializable, System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit DataTable extends System.ComponentModel.MarshalByValueComponent implements class System.ComponentModel.IListSource, class System.ComponentModel.ISupportInitialize, class System.ComponentModel.ISupportInitializeNotification, class System.Runtime.Serialization.ISerializable, class System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTable" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTable&#xA;Inherits MarshalByValueComponent&#xA;Implements IListSource, ISerializable, ISupportInitializeNotification, IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTable : System::ComponentModel::MarshalByValueComponent, System::ComponentModel::IListSource, System::ComponentModel::ISupportInitializeNotification, System::Runtime::Serialization::ISerializable, System::Xml::Serialization::IXmlSerializable" />
  <TypeSignature Language="F#" Value="type DataTable = class&#xA;    inherit MarshalByValueComponent&#xA;    interface IListSource&#xA;    interface ISupportInitializeNotification&#xA;    interface ISerializable&#xA;    interface IXmlSerializable&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitializeNotification</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.Serialization.IXmlSerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultEvent("RowChanging")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultProperty("TableName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
      <AttributeName>System.Xml.Serialization.XmlSchemaProvider("GetDataTableSchema")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f7631-101">메모리 내 데이터의 한 테이블을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-101">Represents one table of in-memory data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-102"><xref:System.Data.DataTable> ADO.NET 라이브러리의 중앙 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-102">The <xref:System.Data.DataTable> is a central object in the ADO.NET library.</span></span> <span data-ttu-id="f7631-103">사용 하는 다른 개체를 <xref:System.Data.DataTable> 포함 된 <xref:System.Data.DataSet> 및 <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="f7631-103">Other objects that use the <xref:System.Data.DataTable> include the <xref:System.Data.DataSet> and the <xref:System.Data.DataView>.</span></span>  
  
 <span data-ttu-id="f7631-104">에 액세스할 때 <xref:System.Data.DataTable> 개체, 조건에 따라 대/소문자 구분 되는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-104">When accessing <xref:System.Data.DataTable> objects, note that they are conditionally case sensitive.</span></span> <span data-ttu-id="f7631-105">예를 들어 하나의 <xref:System.Data.DataTable> "mydatatable" 이름은 "Mydatatable" 라는 다른을 사용 하 여 테이블 중 하나에 대 한 검색 문자열로으로 대/소문자 구분 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-105">For example, if one <xref:System.Data.DataTable> is named "mydatatable" and another is named "Mydatatable", a string used to search for one of the tables is regarded as case sensitive.</span></span> <span data-ttu-id="f7631-106">그러나 "mydatatable" 존재 하 고 "Mydatatable" 하지 않습니다, 검색 문자열으로 대/소문자 구분 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-106">However, if "mydatatable" exists and "Mydatatable" does not, the search string is regarded as case insensitive.</span></span> <span data-ttu-id="f7631-107">A <xref:System.Data.DataSet> 두 개를 포함할 수 있습니다 <xref:System.Data.DataTable> 는 동일 개체 <xref:System.Data.DataTable.TableName%2A> 속성 값은 같지만 다른 <xref:System.Data.DataTable.Namespace%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-107">A <xref:System.Data.DataSet> can contain two <xref:System.Data.DataTable> objects that have the same <xref:System.Data.DataTable.TableName%2A> property value but different <xref:System.Data.DataTable.Namespace%2A> property values.</span></span> <span data-ttu-id="f7631-108">작업에 대 한 자세한 내용은 <xref:System.Data.DataTable> 개체를 참조 하세요 [DataTable 만들기](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-108">For more information about working with <xref:System.Data.DataTable> objects, see [Creating a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md).</span></span>  
  
 <span data-ttu-id="f7631-109">만들려는 경우는 <xref:System.Data.DataTable> 프로그래밍 방식으로 정의 해야 해당 스키마를 추가 하 여 <xref:System.Data.DataColumn> 개체를 <xref:System.Data.DataColumnCollection> (통해 액세스를 <xref:System.Data.DataTable.Columns%2A> 속성).</span><span class="sxs-lookup"><span data-stu-id="f7631-109">If you are creating a <xref:System.Data.DataTable> programmatically, you must first define its schema by adding <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection> (accessed through the <xref:System.Data.DataTable.Columns%2A> property).</span></span> <span data-ttu-id="f7631-110">추가 하는 방법에 대 한 자세한 내용은 <xref:System.Data.DataColumn> 개체를 참조 하세요 [DataTable에 열 추가](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-110">For more information about adding <xref:System.Data.DataColumn> objects, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="f7631-111">행을 추가할를 <xref:System.Data.DataTable>를 먼저 사용 해야 합니다 <xref:System.Data.DataTable.NewRow%2A> 새 반환 하는 방법 <xref:System.Data.DataRow> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-111">To add rows to a <xref:System.Data.DataTable>, you must first use the <xref:System.Data.DataTable.NewRow%2A> method to return a new <xref:System.Data.DataRow> object.</span></span> <span data-ttu-id="f7631-112">합니다 <xref:System.Data.DataTable.NewRow%2A> 의 스키마를 사용 하 여 행을 반환 하는 메서드를 <xref:System.Data.DataTable>테이블의 정의 된 대로, <xref:System.Data.DataColumnCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-112">The <xref:System.Data.DataTable.NewRow%2A> method returns a row with the schema of the <xref:System.Data.DataTable>, as it is defined by the table's <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="f7631-113">최대 행을 <xref:System.Data.DataTable> 수 저장소는 16777216 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-113">The maximum number of rows that a <xref:System.Data.DataTable> can store is 16,777,216.</span></span> <span data-ttu-id="f7631-114">자세한 내용은 [DataTable에 데이터 추가](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-114">For more information, see [Adding Data to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="f7631-115">합니다 <xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.Constraint> 데이터의 무결성을 확인 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-115">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.Constraint> objects that can be used to ensure the integrity of the data.</span></span> <span data-ttu-id="f7631-116">자세한 내용은 [DataTable 제약 조건](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-116">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="f7631-117">여러 <xref:System.Data.DataTable> 테이블에 변경 내용이 시기를 결정 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-117">There are many <xref:System.Data.DataTable> events that can be used to determine when changes are made to a table.</span></span> <span data-ttu-id="f7631-118">이것에는 <xref:System.Data.DataTable.RowChanged>, <xref:System.Data.DataTable.RowChanging>, <xref:System.Data.DataTable.RowDeleting> 및 <xref:System.Data.DataTable.RowDeleted>가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-118">These include <xref:System.Data.DataTable.RowChanged>, <xref:System.Data.DataTable.RowChanging>, <xref:System.Data.DataTable.RowDeleting>, and <xref:System.Data.DataTable.RowDeleted>.</span></span> <span data-ttu-id="f7631-119">사용 하 여 사용할 수 있는 이벤트에 대 한 자세한를 <xref:System.Data.DataTable>를 참조 하세요 [DataTable 이벤트 처리](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-119">For more information about the events that can be used with a <xref:System.Data.DataTable>, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
 <span data-ttu-id="f7631-120">인스턴스가 <xref:System.Data.DataTable> 를 만드는 경우 일부의 읽기/쓰기 속성 초기 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-120">When an instance of <xref:System.Data.DataTable> is created, some of the read/write properties are set to initial values.</span></span> <span data-ttu-id="f7631-121">이러한 값의 목록을 보려면 참조는 <xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType> 생성자 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-121">For a list of these values, see the <xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType> constructor topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-122"><xref:System.Data.DataSet> 및 <xref:System.Data.DataTable> 개체에서 상속 <xref:System.ComponentModel.MarshalByValueComponent>를 지원 하 고는 <xref:System.Runtime.Serialization.ISerializable> .NET Framework remoting에 대 한 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-122">The <xref:System.Data.DataSet> and <xref:System.Data.DataTable> objects inherit from <xref:System.ComponentModel.MarshalByValueComponent>, and support the <xref:System.Runtime.Serialization.ISerializable> interface for .NET Framework remoting.</span></span> <span data-ttu-id="f7631-123">이들은.NET Framework remoting에 사용할 수 있는 유일한 ADO.NET 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-123">These are the only ADO.NET objects that you can use for .NET Framework remoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-124">다음 예제에서는 두 개의 <xref:System.Data.DataTable> 개체와 하나의 <xref:System.Data.DataRelation> 개체를 새 개체를 추가 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-124">The following example creates two <xref:System.Data.DataTable> objects and one <xref:System.Data.DataRelation> object, and adds the new objects to a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f7631-125">테이블에 표시 되는 <xref:System.Windows.Forms.DataGridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-125">The tables are then displayed in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f7631-126">이 샘플에는 특정 스키마 정의가 포함 된 DataTable를 수동으로 만들어야 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-126">This sample demonstrates how to create a DataTable manually with specific schema definitions:</span></span>  
  
-   <span data-ttu-id="f7631-127">여러 Datatable을 만들고 첫 열을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-127">Create multiple DataTables and define the initial columns.</span></span>  
  
-   <span data-ttu-id="f7631-128">테이블 제약 조건을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-128">Create the table constraints.</span></span>  
  
-   <span data-ttu-id="f7631-129">값을 삽입 하 고 테이블을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-129">Insert the values and display the tables.</span></span>  
  
-   <span data-ttu-id="f7631-130">식 열을 만들고 테이블을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-130">Create the expression columns and display the tables.</span></span>  
  
 <span data-ttu-id="f7631-131">이 코드 샘플을 사용 하 여 C# 및 Visual Basic 프로젝트에서 찾을 수 있습니다 [개발자 코드 샘플](https://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-131">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](https://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914).</span></span>  
  
 [!code-csharp[Classic WebData DataTable Example2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/classic webdata datatable example2/cs/source.cs#1)]
 [!code-vb[Classic WebData DataTable Example2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/classic webdata datatable example2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="f7631-132">이 유형은 다중 스레드 읽기 작업에 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-132">This type is safe for multithreaded read operations.</span></span> <span data-ttu-id="f7631-133">모든 쓰기 작업을 동기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-133">You must synchronize any write operations.</span></span></threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-134">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-134">Creating and Using DataTables</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7631-135"><see cref="T:System.Data.DataTable" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-135">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-136">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-136">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-137">인수를 사용하지 않고 <see cref="T:System.Data.DataTable" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-137">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with no arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-138">모든 속성에 대 한 초기 값을 설정 하는 생성자를 <xref:System.Data.DataTable> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-138">The constructor sets initial values for all properties of the <xref:System.Data.DataTable> object.</span></span> <span data-ttu-id="f7631-139">다음 표에서 속성 및 기본값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-139">The following table shows the properties and their default values.</span></span> <span data-ttu-id="f7631-140">인스턴스가 <xref:System.Data.DataTable> 만들어지면 다음 읽기/쓰기 속성 초기 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-140">When an instance of <xref:System.Data.DataTable> is created, the following read/write properties are set to initial values.</span></span>  
  
|<span data-ttu-id="f7631-141">속성</span><span class="sxs-lookup"><span data-stu-id="f7631-141">Property</span></span>|<span data-ttu-id="f7631-142">기본값</span><span class="sxs-lookup"><span data-stu-id="f7631-142">Default value</span></span>|  
|--------------|-------------------|  
|<span data-ttu-id="f7631-143">**CaseSensitive**</span><span class="sxs-lookup"><span data-stu-id="f7631-143">**CaseSensitive**</span></span>|<span data-ttu-id="f7631-144">부모와 동일한 <xref:System.Data.DataSet>이면 하나에 속합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-144">Same as the parent <xref:System.Data.DataSet>, if it belongs to one.</span></span> <span data-ttu-id="f7631-145">그렇지 않으면 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-145">Otherwise, `false`.</span></span>|  
|<span data-ttu-id="f7631-146">**DisplayExpression**</span><span class="sxs-lookup"><span data-stu-id="f7631-146">**DisplayExpression**</span></span>|<span data-ttu-id="f7631-147">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="f7631-147">Empty string ("")</span></span>|  
|<span data-ttu-id="f7631-148">**로캘**</span><span class="sxs-lookup"><span data-stu-id="f7631-148">**Locale**</span></span>|<span data-ttu-id="f7631-149">부모와 동일한 <xref:System.Data.DataSet> 개체의 <xref:System.Globalization.CultureInfo> (반환한 합니다 <xref:System.Data.DataSet.Locale%2A> 속성) 부모가 없으면; 기본값은 현재 시스템 <xref:System.Globalization.CultureInfo>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-149">Same as the parent <xref:System.Data.DataSet> object's <xref:System.Globalization.CultureInfo> (returned by the <xref:System.Data.DataSet.Locale%2A> property); if no parent exists, the default is the current system <xref:System.Globalization.CultureInfo>.</span></span>|  
|<span data-ttu-id="f7631-150">**MinimumCapacity**</span><span class="sxs-lookup"><span data-stu-id="f7631-150">**MinimumCapacity**</span></span>|<span data-ttu-id="f7631-151">50 개 행입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-151">50 rows.</span></span>|  
  
 <span data-ttu-id="f7631-152">속성에 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-152">You can change the value for any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-153">다음 예제에서는 새 <xref:System.Data.DataTable> 사용 하 여 <xref:System.Data.DataColumn> 하 고 <xref:System.Data.DataRow>를 표시를 <xref:System.Windows.Forms.DataGridView> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-153">The following example creates a new <xref:System.Data.DataTable> with <xref:System.Data.DataColumn> and <xref:System.Data.DataRow>, and displays it in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-154">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-154">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable (string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tableName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable(System::String ^ tableName);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTable : string -&gt; System.Data.DataTable" Usage="new System.Data.DataTable tableName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="f7631-155">테이블에 지정할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-155">The name to give the table.</span></span> <span data-ttu-id="f7631-156"><paramref name="tableName" />이 <see langword="null" /> 또는 빈 문자열이면 <see cref="T:System.Data.DataTableCollection" />에 테이블이 추가될 때 기본 이름이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-156">If <paramref name="tableName" /> is <see langword="null" /> or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection" />.</span></span></param>
        <summary><span data-ttu-id="f7631-157">지정된 테이블 이름을 사용하여 <see cref="T:System.Data.DataTable" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-157">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the specified table name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7631-158">다음 예제에서는 한 <xref:System.Data.DataTable> 에 표시를 <xref:System.Windows.Forms.DataGridView> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-158">The following example creates a <xref:System.Data.DataTable> and displays it in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataTable1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataTable1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-159">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-159">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataTable (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataTable(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTable : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Data.DataTable" Usage="new System.Data.DataTable (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="f7631-160">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-160">The data needed to serialize or deserialize an object.</span></span></param>
        <param name="context"><span data-ttu-id="f7631-161">serialize된 특정 스트림의 소스와 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-161">The source and destination of a given serialized stream.</span></span></param>
        <summary><span data-ttu-id="f7631-162"><see cref="T:System.Data.DataTable" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 사용하여 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-162">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-163">이 구현의 합니다 <xref:System.Data.DataTable> 생성자에 필요 <xref:System.Runtime.Serialization.ISerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-163">This implementation of the <xref:System.Data.DataTable> constructor is required for <xref:System.Runtime.Serialization.ISerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-164">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-164">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable (string tableName, string tableNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tableName, string tableNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tableName As String, tableNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable(System::String ^ tableName, System::String ^ tableNamespace);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTable : string * string -&gt; System.Data.DataTable" Usage="new System.Data.DataTable (tableName, tableNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="tableNamespace" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="f7631-165">테이블에 지정할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-165">The name to give the table.</span></span> <span data-ttu-id="f7631-166"><paramref name="tableName" />이 <see langword="null" /> 또는 빈 문자열이면 <see cref="T:System.Data.DataTableCollection" />에 테이블이 추가될 때 기본 이름이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-166">If <paramref name="tableName" /> is <see langword="null" /> or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection" />.</span></span></param>
        <param name="tableNamespace"><span data-ttu-id="f7631-167"><see langword="DataTable" />에 저장된 데이터의 XML 표현에 대한 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-167">The namespace for the XML representation of the data stored in the <see langword="DataTable" />.</span></span></param>
        <summary><span data-ttu-id="f7631-168">지정된 테이블 이름과 네임스페이스를 사용하여 <see cref="T:System.Data.DataTable" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-168">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class using the specified table name and namespace.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-169">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-169">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptChanges : unit -&gt; unit" Usage="dataTable.AcceptChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-170"><see cref="M:System.Data.DataTable.AcceptChanges" />가 마지막으로 호출된 이후 이 테이블에서 변경된 내용을 모두 커밋합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-170">Commits all the changes made to this table since the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-171">때 <xref:System.Data.DataTable.AcceptChanges%2A> 가 호출 된 <xref:System.Data.DataRow> 아직 편집 모드에에서는 개체의 편집을 성공적으로 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-171">When <xref:System.Data.DataTable.AcceptChanges%2A> is called, any <xref:System.Data.DataRow> object still in edit mode successfully ends its edits.</span></span> <span data-ttu-id="f7631-172">합니다 <xref:System.Data.DataRowState> 도 변경: 모든 `Added` 하 고 `Modified` 될 행 `Unchanged`, 및 `Deleted` 행이 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-172">The <xref:System.Data.DataRowState> also changes: all `Added` and `Modified` rows become `Unchanged`, and `Deleted` rows are removed.</span></span>  
  
 <span data-ttu-id="f7631-173"><xref:System.Data.DataTable.AcceptChanges%2A> 메서드를 일반적으로 호출을 <xref:System.Data.DataTable> 업데이트 하려고 하면 후 합니다 <xref:System.Data.DataSet> 를 사용 하 여를 <xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-173">The <xref:System.Data.DataTable.AcceptChanges%2A> method is generally called on a <xref:System.Data.DataTable> after you attempt to update the <xref:System.Data.DataSet> using the <xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-174">다음 예제에서는 각 테이블의 오류를 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-174">The following example tests each table for errors.</span></span> <span data-ttu-id="f7631-175">(전달 하 여 정의 되지 않은 함수), 테이블의 오류를 해결할 수 있으면 <xref:System.Data.DataTable.AcceptChanges%2A> 이 고, 그렇지 않으면 호출 <xref:System.Data.DataTable.RejectChanges%2A> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-175">If the table's errors can be reconciled (by passing it to an undefined function), <xref:System.Data.DataTable.AcceptChanges%2A> is called; otherwise, <xref:System.Data.DataTable.RejectChanges%2A> is called.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-176">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-176">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public virtual void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="dataTable.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-177">폼에 사용되거나 다른 구성 요소에서 사용하는 <see cref="T:System.Data.DataTable" />의 초기화를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-177">Begins the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component.</span></span> <span data-ttu-id="f7631-178">초기화는 런타임에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-178">The initialization occurs at run time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-179">Visual Studio 디자인 환경이이 메서드를 사용 하 여 폼에 사용 되거나 다른 구성 요소에서 사용 하는 구성 요소의 초기화를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-179">The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="f7631-180"><xref:System.Data.DataTable.EndInit%2A> 메서드 초기화를 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-180">The <xref:System.Data.DataTable.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="f7631-181">사용 하는 <xref:System.Data.DataTable.BeginInit%2A> 및 <xref:System.Data.DataTable.EndInit%2A> 메서드 컨트롤을 완전히 초기화 되기 전에 사용 되지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-181">Using the <xref:System.Data.DataTable.BeginInit%2A> and <xref:System.Data.DataTable.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-182">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-182">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadData">
      <MemberSignature Language="C#" Value="public void BeginLoadData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoadData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.BeginLoadData" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoadData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoadData();" />
      <MemberSignature Language="F#" Value="member this.BeginLoadData : unit -&gt; unit" Usage="dataTable.BeginLoadData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-183">데이터를 로드하는 동안 알림, 인덱스 유지 관리 및 제약 조건 기능을 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-183">Turns off notifications, index maintenance, and constraints while loading data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-184">사용 하 여 <xref:System.Data.DataTable.BeginLoadData%2A> 와 함께에서 <xref:System.Data.DataTable.LoadDataRow%2A> 고 <xref:System.Data.DataTable.EndLoadData%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-184">Use <xref:System.Data.DataTable.BeginLoadData%2A> in conjunction with <xref:System.Data.DataTable.LoadDataRow%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-185">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-185">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitive">
      <MemberSignature Language="C#" Value="public bool CaseSensitive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitive" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.CaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Property CaseSensitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CaseSensitive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CaseSensitive : bool with get, set" Usage="System.Data.DataTable.CaseSensitive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableCaseSensitiveDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-186">테이블 내의 문자열을 비교할 때 대/소문자를 구분할지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-186">Indicates whether string comparisons within the table are case-sensitive.</span></span></summary>
        <value><span data-ttu-id="f7631-187">비교할 때 대/소문자를 구분하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-187"><see langword="true" /> if the comparison is case-sensitive; otherwise <see langword="false" />.</span></span> <span data-ttu-id="f7631-188">기본값은 부모 <see cref="T:System.Data.DataSet" /> 개체의 <see cref="P:System.Data.DataSet.CaseSensitive" /> 속성으로 설정되거나, <see cref="T:System.Data.DataTable" />과 별도로 만들어진 <see cref="T:System.Data.DataSet" />의 경우 <see langword="false" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-188">The default is set to the parent <see cref="T:System.Data.DataSet" /> object's <see cref="P:System.Data.DataSet.CaseSensitive" /> property, or <see langword="false" /> if the <see cref="T:System.Data.DataTable" /> was created independently of a <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-189"><xref:System.Data.DataTable.CaseSensitive%2A> 문자열 정렬, 검색 및 필터링을 비교 하는 속성에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-189">The <xref:System.Data.DataTable.CaseSensitive%2A> property affects string comparisons in sorting, searching, and filtering.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-190">다음 예제에서는 합니다 <xref:System.Data.DataTable.Select%2A> 메서드를 두 번을 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-190">The following example calls the <xref:System.Data.DataTable.Select%2A> method twice on a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-191">처음으로는 <xref:System.Data.DataTable.CaseSensitive%2A> 속성이 `false`를 두 번째 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-191">The first time, the <xref:System.Data.DataTable.CaseSensitive%2A> property is set to `false`, the second, to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.CaseSensitive Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.CaseSensitive Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.CaseSensitive Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.CaseSensitive Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-192">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-192">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ChildRelations">
      <MemberSignature Language="C#" Value="public System.Data.DataRelationCollection ChildRelations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRelationCollection ChildRelations" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ChildRelations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildRelations As DataRelationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRelationCollection ^ ChildRelations { System::Data::DataRelationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildRelations : System.Data.DataRelationCollection" Usage="System.Data.DataTable.ChildRelations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableChildRelationsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRelationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-193">이 <see cref="T:System.Data.DataTable" />에 대한 자식 관계 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-193">Gets the collection of child relations for this <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="f7631-194">테이블의 자식 관계가 포함된 <see cref="T:System.Data.DataRelationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-194">A <see cref="T:System.Data.DataRelationCollection" /> that contains the child relations for the table.</span></span> <span data-ttu-id="f7631-195"><see cref="T:System.Data.DataRelation" /> 개체가 없으면 빈 컬렉션이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-195">An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-196"><xref:System.Data.DataRelation> 두 테이블 간의 관계를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-196">A <xref:System.Data.DataRelation> defines the relationship between two tables.</span></span> <span data-ttu-id="f7631-197">일반적으로 두 테이블은 동일한 데이터를 포함 하는 단일 필드를 통해 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-197">Typically, two tables are linked through a single field that contains the same data.</span></span> <span data-ttu-id="f7631-198">예를 들어 주소 데이터를 포함 하는 테이블에는 국가/지역을 나타내는 코드를 포함 하는 단일 필드가 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-198">For example, a table which contains address data may have a single field containing codes that represent countries/regions.</span></span> <span data-ttu-id="f7631-199">국가/지역 데이터를 포함 하는 두 번째 테이블에서 국가/지역을 식별 하는 코드를 포함 하는 단일 필드로 있고이 코드가 첫 번째 테이블의 해당 필드에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-199">A second table that contains country/region data will have a single field that contains the code that identifies the country/region, and it is this code which is inserted into the corresponding field in the first table.</span></span> <span data-ttu-id="f7631-200"><xref:System.Data.DataRelation>, 그런 다음 최소한 4 가지 정보를 포함 합니다. (1) 첫 번째 테이블의 이름, 첫 번째 테이블의 열 이름 (2), (3) 두 번째 테이블의 이름 및 (4) 두 번째 테이블의 열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-200">A <xref:System.Data.DataRelation>, then, contains at least four pieces of information: (1) the name of the first table, (2) the column name in the first table, (3) the name of the second table, and (4) the column name in the second table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-201">다음 예제에서는 합니다 <xref:System.Data.DataTable.ChildRelations%2A> 각 자식에 반환할 속성 <xref:System.Data.DataRelation> 에 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-201">The following example uses the <xref:System.Data.DataTable.ChildRelations%2A> property to return each child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-202">각 관계에 대 한 인수로 사용 됩니다는 <xref:System.Data.DataRow.GetChildRows%2A> 메서드는 <xref:System.Data.DataRow> 행의 배열을 반환 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-202">Each relation is then used as an argument in the <xref:System.Data.DataRow.GetChildRows%2A> method of the <xref:System.Data.DataRow> to return an array of rows.</span></span> <span data-ttu-id="f7631-203">행의 각 열 값이 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-203">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ChildRelations Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ChildRelations Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ChildRelations Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ChildRelations Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.ParentRelations" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-204">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-204">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="dataTable.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-205"><see cref="T:System.Data.DataTable" />의 모든 데이터를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-205">Clears the <see cref="T:System.Data.DataTable" /> of all data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-206">모든 테이블의 모든 행이 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-206">All rows in all tables are removed.</span></span> <span data-ttu-id="f7631-207">테이블에 자식 관계가 적용된는 자식 행이 분리 될 경우 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-207">An exception is generated if the table has any enforced child relations that would cause child rows to be orphaned.</span></span>  
  
 <span data-ttu-id="f7631-208">경우는 <xref:System.Data.DataSet> 바인딩되는 <xref:System.Xml.XmlDataDocument>를 호출 <xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType> 또는 <xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType> 발생 시킵니다는 <xref:System.NotSupportedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-208">If the <xref:System.Data.DataSet> is bound to an <xref:System.Xml.XmlDataDocument>, calling <xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType> or <xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType> raises the <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="f7631-209">이 상황을 방지 하려면 한 번에 하나씩 행을 제거 하는 각 테이블에 트래버스 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-209">To avoid this situation, traverse each table, removing each row one at a time.</span></span> <span data-ttu-id="f7631-210">사용 하는 경우 <xref:System.Data.DataTable.NewRow%2A> 새 행을 만들려면는 행을 처리 해야 호출 하기 전에 <xref:System.Data.DataTable.Clear%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-210">When you use <xref:System.Data.DataTable.NewRow%2A> to create new rows, the rows must be processed before you call <xref:System.Data.DataTable.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-211">다음 예제에서는 모든 데이터의 테이블을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-211">The following example clears the table of all data.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-212">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-212">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-213">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-213">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataTable ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Data.DataTable&#xA;override this.Clone : unit -&gt; System.Data.DataTable" Usage="dataTable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-214">모든 <see cref="T:System.Data.DataTable" /> 스키마, 관계 및 제약 조건을 포함하여 <see cref="T:System.Data.DataTable" />의 구조를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-214">Clones the structure of the <see cref="T:System.Data.DataTable" />, including all <see cref="T:System.Data.DataTable" /> schemas and constraints.</span></span></summary>
        <returns><span data-ttu-id="f7631-215">현재 <see cref="T:System.Data.DataTable" />과 동일한 스키마를 갖는 새 <see cref="T:System.Data.DataTable" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-215">A new <see cref="T:System.Data.DataTable" /> with the same schema as the current <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-216">이러한 클래스를 파생 된 경우 동일한 파생된 클래스가 복제가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-216">If these classes have been derived, the clone will also be of the same derived classes.</span></span>  
  
 <span data-ttu-id="f7631-217">복제를 만듭니다 <xref:System.Data.DataTable> 와 동일한 구조로 원래 <xref:System.Data.DataTable>, 모든 데이터를 복사 하지 않습니다 (새 <xref:System.Data.DataTable> 포함 되지 것입니다 `DataRows`).</span><span class="sxs-lookup"><span data-stu-id="f7631-217">Clone creates a new <xref:System.Data.DataTable> with the same structure as the original <xref:System.Data.DataTable>, but does not copy any data (the new <xref:System.Data.DataTable> will not contain any `DataRows`).</span></span> <span data-ttu-id="f7631-218">새 구조와 데이터를 복사할 <xref:System.Data.DataTable>를 사용 하 여 <xref:System.Data.DataTable.Copy%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-218">To copy both the structure and data into a new <xref:System.Data.DataTable>, use <xref:System.Data.DataTable.Copy%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-219">다음 샘플 DataTable.Clone 실행 한 후 대상 테이블의 제약 조건을 확인 하 고 구조를 업데이트 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-219">The following sample demonstrates how to update the structure and constraints of the destination table after you execute DataTable.Clone.</span></span> <span data-ttu-id="f7631-220">대상 테이블을 반환 하 고 모든 업데이트 이벤트를 포함 하는 ClonedDataTable 클래스.</span><span class="sxs-lookup"><span data-stu-id="f7631-220">The ClonedDataTable class will return a destination table and includes all the updating events.</span></span> <span data-ttu-id="f7631-221">복제 후 원본 테이블의 구조 변경 내용은 대상 테이블에 반영 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-221">After the clone, structure changes in the source table won't be reflected in the destination table.</span></span> <span data-ttu-id="f7631-222">특히이 샘플은:</span><span class="sxs-lookup"><span data-stu-id="f7631-222">Specifically, this sample will:</span></span>  
  
-   <span data-ttu-id="f7631-223">원본 테이블의 열 변경 내용을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-223">Update the changes of the columns in source table.</span></span>  
  
-   <span data-ttu-id="f7631-224">원본 테이블에서 UniqueConstraint의 변경 내용을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-224">Update the changes of the UniqueConstraint in source table.</span></span>  
  
-   <span data-ttu-id="f7631-225">원본 테이블의 외래 키의 변경 내용을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-225">Update the changes of the ForeignKeyConstraint in source table.</span></span>  
  
 <span data-ttu-id="f7631-226">이 코드 샘플을 사용 하 여 C# 및 Visual Basic 프로젝트에서 찾을 수 있습니다 [개발자 코드 샘플](https://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-226">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](https://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable).</span></span>  
  
```csharp  
using System;  
using System.Linq;  
using System.Data;  
using System.ComponentModel;  
  
class Program {  
   static void Main(string[] args) {  
      DataTable courses = NewCourseDataTable();  
      Console.WriteLine("This is the source table:");  
      WriteDataTable(courses);  
  
      ClonedDataTable clonedResult = new ClonedDataTable(courses);  
      DataTable clonedCourses = clonedResult.DestinationTable;  
      Console.WriteLine("This is the destination table:");  
      WriteDataTable(clonedCourses);  
  
      // Add the events of updating column collection into the source table.  
      clonedResult.UpdateAddedColumn();  
      clonedResult.UpdateDeletedColumn();  
      // Add a DataColumn in source table.  
      DataColumn columnCreidts = new DataColumn("Credits", typeof(Int32));  
      courses.Columns.Add(columnCreidts);  
      Console.WriteLine("After add a column in source table, it's the result in the destination:");  
      WriteDataTable(clonedCourses);  
  
      // Add the event of updating UniqueConstraint into the source table.  
      clonedResult.UpdateUniqueConstraint();  
  
      // Add the unique constraint in source table.  
      UniqueConstraint uniqueConstraint = new UniqueConstraint(courses.Columns["CourseId"]);  
      courses.Constraints.Add(uniqueConstraint);  
  
      Console.WriteLine(@"If we add the unique constraint in source table and then insert the duplicate   
rows into the destination table, we will get the following error:");  
      InsertDuplicateData(clonedCourses);  
      Console.WriteLine();  
  
      // Add the event of updating ForeignKeyConstraint into the source table.  
      clonedResult.UpdateForeignKeyConstraint();  
  
      // Add the ForeignKeyConstraint into the source table.  
      DataTable deparments = NewDeparmentDataTable();  
      DataSet dataset = new DataSet();  
  
      dataset.Tables.Add(courses);  
      dataset.Tables.Add(clonedCourses);  
      dataset.Tables.Add(deparments);  
  
      ForeignKeyConstraint foreignKey = new ForeignKeyConstraint(deparments.Columns["DepartmentId"], courses.Columns["DepartmentId"]);  
      courses.Constraints.Add(foreignKey);  
  
      Console.WriteLine(@"If we add the foreign key constraint in source table and then insert a row   
without the parent  into the destination table, we will get the following error:");  
      InsertNoParentRow(clonedCourses);  
      Console.WriteLine();  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   static private DataTable NewCourseDataTable() {  
      DataTable newTable = new DataTable();  
  
      DataColumn[] columns ={   
                                      new DataColumn("CourseId", typeof(String)),  
                                      new DataColumn("CourseName",typeof(String)),                                        
                                      new DataColumn("DepartmentId", typeof(Int32))  
                                  };  
  
      newTable.Columns.AddRange(columns);  
  
      newTable.Rows.Add("C1045", "Calculus", 7);  
      newTable.Rows.Add("C1061", "Physics", 1);  
      newTable.Rows.Add("C2021", "Composition", 2);  
      newTable.Rows.Add("C2042", "Literature", 2);  
  
      return newTable;  
   }  
  
   static private DataTable NewDeparmentDataTable() {  
      DataTable newTable = new DataTable();  
  
      DataColumn[] columns ={   
                                      new DataColumn("DepartmentId", typeof(Int32)),  
                                      new DataColumn("Name",typeof(String)),  
                                  };  
  
      newTable.Columns.AddRange(columns);  
  
      newTable.Rows.Add(1, "Engineering");  
      newTable.Rows.Add(2, "English");  
      newTable.Rows.Add(4, "Economics");  
      newTable.Rows.Add(7, "Mathematics");  
  
      return newTable;  
   }  
  
   static private void WriteDataTable(DataTable table) {  
      if (table == null)  
         return;  
  
      foreach (DataColumn column in table.Columns) {  
         Console.Write("{0,-15}", column.ColumnName);  
      }  
      Console.WriteLine();  
  
      foreach (DataRow row in table.Rows) {  
         for (int i = 0; i < table.Columns.Count; i++)  
            Console.Write("{0,-15}", row[i].ToString());  
         Console.WriteLine();  
      }  
  
      Console.WriteLine();  
   }  
  
   static private void InsertDuplicateData(DataTable table) {  
      try {  
         table.Rows.Add("C1045", "Calculus", 7);  
         table.Rows.Add("C1045", "Calculus", 7);  
      } catch (Exception e) {  
         Console.WriteLine("\"" + e.Message + "\"");  
      }  
   }  
  
   private static void InsertNoParentRow(DataTable table) {  
      try {  
         table.Rows.Add("C1061", "Physics", 11);  
      } catch (Exception e) {  
         Console.WriteLine("\"" + e.Message + "\"");  
      }  
   }  
}  
  
public class ClonedDataTable {  
   private DataTable sourceTable;  
   private DataTable destinationTable;  
  
   public ClonedDataTable(DataTable source) {  
      sourceTable = source;  
      // set the cloned result  
      destinationTable = sourceTable.Clone();  
   }  
  
   public void UpdateAddedColumn() {  
      sourceTable.Columns.CollectionChanged += new CollectionChangeEventHandler(ColumnAdded);  
   }  
  
   public void UpdateDeletedColumn() {  
      sourceTable.Columns.CollectionChanged += new CollectionChangeEventHandler(ColumnDeleted);  
   }  
  
   public void UpdateUniqueConstraint() {  
      sourceTable.Constraints.CollectionChanged += new CollectionChangeEventHandler(UniqueConstraint_Changed);  
   }  
  
   public void UpdateForeignKeyConstraint() {  
      sourceTable.Constraints.CollectionChanged += new CollectionChangeEventHandler(ForeignKeyConstraint_Changed);  
   }  
  
   // After the source table adds a column, the method will add the same column in the destination table.  
   void ColumnAdded(object sender, System.ComponentModel.CollectionChangeEventArgs e) {  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn column = e.Element as DataColumn;  
  
         if (column != null) {  
            DataColumn newColumn = new DataColumn(column.ColumnName, column.DataType, column.Expression, column.ColumnMapping);  
  
            if (!destinationTable.Columns.Contains(newColumn.ColumnName))  
               destinationTable.Columns.Add(newColumn);  
         }  
      }  
   }  
  
   // After the source table deletes a column, the method will delete the same column in the destination table.  
   void ColumnDeleted(object sender, CollectionChangeEventArgs e) {  
      if (e.Action == CollectionChangeAction.Remove) {  
         DataColumn column = e.Element as DataColumn;  
  
         if (column != null)  
            if (destinationTable.Columns.Contains(column.ColumnName))  
               destinationTable.Columns.Remove(column.ColumnName);  
      }  
   }  
  
   // After the source table changes the UniqueConstraint, this method changes the same UniqueConstraint in destination table.        
   void UniqueConstraint_Changed(object sender, CollectionChangeEventArgs e) {  
      UniqueConstraint constraint = e.Element as UniqueConstraint;  
  
      if (constraint == null)  
         return;  
  
      String constraintName = constraint.ConstraintName;  
  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn[] columns = new DataColumn[constraint.Columns.Count()];  
         Boolean isPrimaryKey = constraint.IsPrimaryKey;  
  
         // Get the columns used in new constraint from the destiantion table.  
         for (Int32 i = 0; i < constraint.Columns.Count(); i++) {  
            String columnName = constraint.Columns[i].ColumnName;  
  
            if (destinationTable.Columns.Contains(columnName))  
               columns[i] = destinationTable.Columns[columnName];  
            else  
               return;  
         }  
  
         UniqueConstraint newConstraint = new UniqueConstraint(constraintName, columns, isPrimaryKey);  
  
         if (!destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Add(newConstraint);  
  
      } else if (e.Action == CollectionChangeAction.Remove)  
         if (destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Remove(constraintName);  
   }  
  
   // After the source table changes the ForeignKeyConstraint, this method changes    
   // the same ForeignKeyConstraint in the destination table.  
   void ForeignKeyConstraint_Changed(object sender, CollectionChangeEventArgs e) {  
      ForeignKeyConstraint constraint = e.Element as ForeignKeyConstraint;  
  
      if (constraint == null)  
         return;  
  
      // If the source and destination are not in the same DataSet, don't change the ForeignKeyConstraint.  
      if (sourceTable.DataSet != destinationTable.DataSet)  
         return;  
  
      String constraintName = constraint.ConstraintName;  
  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn[] columns = new DataColumn[constraint.Columns.Count()];  
         DataColumn[] parentColumns = constraint.RelatedColumns;  
  
         // Get the columns used in new constraint from the destination table.  
         for (int i = 0; i < constraint.Columns.Count(); i++) {  
            String columnName = constraint.Columns[i].ColumnName;  
  
            if (destinationTable.Columns.Contains(columnName))  
               columns[i] = destinationTable.Columns[columnName];  
            else  
               return;  
         }  
  
         ForeignKeyConstraint newConstraint = new ForeignKeyConstraint(constraintName, parentColumns, columns);  
         newConstraint.AcceptRejectRule = constraint.AcceptRejectRule;  
         newConstraint.DeleteRule = constraint.DeleteRule;  
         newConstraint.UpdateRule = constraint.UpdateRule;  
  
         if (!destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Add(newConstraint);  
      } else if (e.Action == CollectionChangeAction.Remove)  
         if (destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Remove(constraintName);  
   }  
  
   // return the destination table.  
   public DataTable DestinationTable {  
      get { return destinationTable; }  
   }  
}  
```  
  
 <span data-ttu-id="f7631-227">이 샘플에서는 DataTable에서 데이터를 수정 하 고 데이터 소스를 업데이트 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-227">This sample shows how to modify data in a DataTable and update the data source.</span></span>  
  
 <span data-ttu-id="f7631-228">먼저 데이터베이스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-228">First, create a database:</span></span>  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]   
  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
```  
  
 <span data-ttu-id="f7631-229">이제 컴파일 및 샘플을 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-229">You can now compile and run the sample.</span></span> <span data-ttu-id="f7631-230">[DataTable에 데이터 원본에 대 한 업데이트는 데이터를 수정 하는 방법](https://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4) 이 샘플의 Visual Basic 및 C# 프로젝트가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-230">[How to modify data in DataTable and update to the data source](https://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4) has Visual Basic and C# projects of this sample.</span></span>  
  
```csharp  
using System;  
using System.Data;  
using System.Data.SqlClient;  
  
class Program {  
   static void Main(string[] args) {  
  
   string MySchoolConnectionString = "Data Source=(local);Initial Catalog=MySchool;Integrated Security=True";  
  
      // Get Data  
      String selectString =  
       @"Select [CourseID],[Year],[Title],[Credits],[DepartmentID] From [dbo].[Course];  
               Select [DepartmentID],[Name],[Budget],[StartDate],[Administrator] From [dbo].[Department] ";  
  
      DataSet dataSet = new DataSet();  
      DataTable course = dataSet.Tables.Add("Course");  
      DataTable department = dataSet.Tables.Add("Department");  
  
      Console.WriteLine("Get data from database:");  
      GetDataTables(MySchoolConnectionString, selectString, dataSet, course, department);  
      Console.WriteLine();  
  
      // Use DataTable Edits to edit the data  
      String updateString =  
              @"Update [dbo].[Course] Set [Credits]=@Credits Where [CourseID]=@CourseID;";  
  
      course.ColumnChanged += OnColumnChanged;  
  
      // Set the Credits of first row is negative value, and set the Credits of second row is plus.  
      ChangeCredits(course, course.Rows[0], -1);  
      ChangeCredits(course, course.Rows[1], 11);  
  
      UpdateDataTables(MySchoolConnectionString, updateString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"),  
          new SqlParameter("@Credits", SqlDbType.Int, 4, "Credits"));  
      Console.WriteLine("Only the Credits of second row is changed.");  
      ShowDataTable(course);  
      Console.WriteLine();  
  
      // Delete and Remove from DataTable  
      // Create the foreign key constraint, and set the DeleteRule with Cascade.  
      ForeignKeyConstraint courseDepartFK = new ForeignKeyConstraint("CourseDepartFK", department.Columns["DepartmentID"], course.Columns["DepartmentID"]);  
      courseDepartFK.DeleteRule = Rule.Cascade;  
      courseDepartFK.UpdateRule = Rule.Cascade;  
      courseDepartFK.AcceptRejectRule = AcceptRejectRule.None;  
      course.Constraints.Add(courseDepartFK);  
  
      String deleteString = @"Delete From [dbo].[Course] Where [CourseID]=@CourseID;";  
  
      department.Rows[0].Delete();  
      Console.WriteLine("If One row in Department table is deleted, the related rows in Course table will also be deleted.");  
      Console.WriteLine("Department DataTable:");  
      ShowDataTable(department);  
      Console.WriteLine();  
      Console.WriteLine("Course DataTable:");  
      ShowDataTable(course);  
      Console.WriteLine();  
      // Update the delete operation  
      DeleteDataTables(MySchoolConnectionString, deleteString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"));  
      Console.WriteLine("After delete operation:");  
      Console.WriteLine("Course DataTable:");  
      ShowDataTable(course);  
      Console.WriteLine();  
  
      course.Rows.RemoveAt(0);  
      Console.WriteLine("Now we remove one row from Course:");  
      ShowDataTable(course);  
      DeleteDataTables(MySchoolConnectionString, deleteString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"));  
   }  
  
   // Use SqlDataAdapter to get data.  
   private static void GetDataTables(String connectionString, String selectString,  
       DataSet dataSet, params DataTable[] tables) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.SelectCommand = new SqlCommand(selectString);  
         adapter.SelectCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Fill(0, 0, tables);  
  
         foreach (DataTable table in dataSet.Tables) {  
            Console.WriteLine("Data in {0}:", table.TableName);  
            ShowDataTable(table);  
            Console.WriteLine();  
         }  
      }  
   }  
  
   // Use SqlDataAdapter to update the updata operation.  
   private static void UpdateDataTables(String connectionString, String updateString,  
       DataSet dataSet, String tableName, params SqlParameter[] parameters) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.UpdateCommand = new SqlCommand(updateString);  
         adapter.UpdateCommand.Parameters.AddRange(parameters);  
         adapter.UpdateCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Update(dataSet, tableName);  
      }  
   }  
  
   // Use SqlDataAdapter to update delete operation.  
   private static void DeleteDataTables(String connectionString, String deleteString,  
       DataSet dataSet, String tableName, params SqlParameter[] parameters) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.DeleteCommand = new SqlCommand(deleteString);  
         adapter.DeleteCommand.Parameters.AddRange(parameters);  
         adapter.DeleteCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Update(dataSet, tableName);  
      }  
   }  
  
   // Use DataTable Edits to modify the data.  
   private static void ChangeCredits(DataTable table, DataRow row, Int32 credits) {  
      row.BeginEdit();  
      Console.WriteLine("We change row {0}", table.Rows.IndexOf(row));  
      row["Credits"] = credits;  
      row.EndEdit();  
   }  
  
   // The method will be invoked when the value in DataTable is changed.  
   private static void OnColumnChanged(Object sender, DataColumnChangeEventArgs args) {  
      Int32 credits = 0;  
      // If Credits is changed and the value is negative, we'll cancel the edit.  
      if ((args.Column.ColumnName == "Credits") &&  
          (!Int32.TryParse(args.ProposedValue.ToString(), out credits) || credits < 0)) {  
         Console.WriteLine("The value of Credits is invalid. Edit canceled.");  
         args.Row.CancelEdit();  
      }  
   }  
  
   // Display the column and value of DataTable.  
   private static void ShowDataTable(DataTable table) {  
      foreach (DataColumn col in table.Columns) {  
         Console.Write("{0,-14}", col.ColumnName);  
      }  
      Console.WriteLine("{0,-14}", "RowState");  
  
      foreach (DataRow row in table.Rows) {  
         if (row.RowState == DataRowState.Deleted) {  
            foreach (DataColumn col in table.Columns) {  
               if (col.DataType.Equals(typeof(DateTime)))  
                  Console.Write("{0,-14:d}", row[col, DataRowVersion.Original]);  
               else if (col.DataType.Equals(typeof(Decimal)))  
                  Console.Write("{0,-14:C}", row[col, DataRowVersion.Original]);  
               else  
                  Console.Write("{0,-14}", row[col, DataRowVersion.Original]);  
            }  
         }  
         else {  
            foreach (DataColumn col in table.Columns) {  
               if (col.DataType.Equals(typeof(DateTime)))  
                  Console.Write("{0,-14:d}", row[col]);  
               else if (col.DataType.Equals(typeof(Decimal)))  
                  Console.Write("{0,-14:C}", row[col]);  
               else  
                  Console.Write("{0,-14}", row[col]);  
            }  
         }  
         Console.WriteLine("{0,-14}", row.RowState);  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.Copy" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-231">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-231">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ColumnChanged">
      <MemberSignature Language="C#" Value="public event System.Data.DataColumnChangeEventHandler ColumnChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataColumnChangeEventHandler ColumnChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.ColumnChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnChanged As DataColumnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataColumnChangeEventHandler ^ ColumnChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnChanged : System.Data.DataColumnChangeEventHandler " Usage="member this.ColumnChanged : System.Data.DataColumnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableColumnChangedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-232"><see cref="T:System.Data.DataColumn" />에 있는 지정된 <see cref="T:System.Data.DataRow" />의 값이 변경된 후 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-232">Occurs after a value has been changed for the specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-233">자세한 내용은 [DataTable 이벤트 처리](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-233">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.ColumnChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ColumnChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnChangeEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-234">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-234">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ColumnChanging">
      <MemberSignature Language="C#" Value="public event System.Data.DataColumnChangeEventHandler ColumnChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataColumnChangeEventHandler ColumnChanging" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.ColumnChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnChanging As DataColumnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataColumnChangeEventHandler ^ ColumnChanging;" />
      <MemberSignature Language="F#" Value="member this.ColumnChanging : System.Data.DataColumnChangeEventHandler " Usage="member this.ColumnChanging : System.Data.DataColumnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableColumnChangingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-235"><see cref="T:System.Data.DataColumn" />에 있는 지정된 <see cref="T:System.Data.DataRow" />의 값이 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-235">Occurs when a value is being changed for the specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-236">자세한 내용은 [DataTable 이벤트 처리](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-236">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.ColumnChanging Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanging Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ColumnChanging Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanging Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-237">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-237">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Data.DataColumnCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumnCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As DataColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataColumnCollection ^ Columns { System::Data::DataColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Data.DataColumnCollection" Usage="System.Data.DataTable.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableColumnsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-238">이 테이블에 속한 열의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-238">Gets the collection of columns that belong to this table.</span></span></summary>
        <value><span data-ttu-id="f7631-239">테이블의 <see cref="T:System.Data.DataColumnCollection" /> 개체 컬렉션이 포함된 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-239">A <see cref="T:System.Data.DataColumnCollection" /> that contains the collection of <see cref="T:System.Data.DataColumn" /> objects for the table.</span></span> <span data-ttu-id="f7631-240"><see cref="T:System.Data.DataColumn" /> 개체가 없으면 빈 컬렉션이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-240">An empty collection is returned if no <see cref="T:System.Data.DataColumn" /> objects exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-241"><xref:System.Data.DataColumnCollection> 각 열의 데이터 형식을 정의 하 여 테이블의 스키마를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-241">The <xref:System.Data.DataColumnCollection> determines the schema of a table by defining the data type of each column.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-242">다음 예제에서는 사용 하 여 테이블의 각 행의 값을 출력 합니다 <xref:System.Data.DataTable.Columns%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-242">The following example prints each value of each row in a table using the <xref:System.Data.DataTable.Columns%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Columns Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Columns Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Columns Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Columns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-243">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-243">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Compute">
      <MemberSignature Language="C#" Value="public object Compute (string expression, string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Compute(string expression, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Compute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compute (expression As String, filter As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Compute(System::String ^ expression, System::String ^ filter);" />
      <MemberSignature Language="F#" Value="member this.Compute : string * string -&gt; obj" Usage="dataTable.Compute (expression, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="filter" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="f7631-244">컴퓨팅할 식입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-244">The expression to compute.</span></span></param>
        <param name="filter"><span data-ttu-id="f7631-245">식에서 계산하는 행을 제한할 필터입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-245">The filter to limit the rows that evaluate in the expression.</span></span></param>
        <summary><span data-ttu-id="f7631-246">필터 조건을 전달하는 현재 행에서 지정된 식을 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-246">Computes the given expression on the current rows that pass the filter criteria.</span></span></summary>
        <returns><span data-ttu-id="f7631-247">계산 결과로 설정된 <see cref="T:System.Object" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-247">An <see cref="T:System.Object" />, set to the result of the computation.</span></span> <span data-ttu-id="f7631-248">식이 null로 평가되는 경우 반환 값은 <see cref="F:System.DBNull.Value" />가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-248">If the expression evaluates to null, the return value will be <see cref="F:System.DBNull.Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-249">`expression` 매개 변수는 집계 함수가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-249">The `expression` parameter requires an aggregate function.</span></span> <span data-ttu-id="f7631-250">예를 들어, 다음은 올바른 식입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-250">For example, the following is a legal expression:</span></span>  
  
 `Count(Quantity)`  
  
 <span data-ttu-id="f7631-251">하지만이 식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-251">But this expression is not:</span></span>  
  
 `Sum (Quantity * UnitPrice)`  
  
 <span data-ttu-id="f7631-252">두 개 이상의 열에 대 한 작업을 수행 해야 하는 경우 만든를 <xref:System.Data.DataColumn>설정, 해당 <xref:System.Data.DataColumn.Expression%2A> 속성을 적절 한 식 및 결과 열에 집계 식 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-252">If you must perform an operation on two or more columns, you should create a <xref:System.Data.DataColumn>, set its <xref:System.Data.DataColumn.Expression%2A> property to an appropriate expression, and use an aggregate expression on the resulting column.</span></span> <span data-ttu-id="f7631-253">지정 된 경우에 <xref:System.Data.DataColumn> 이름 "합계"를 사용 하 여 및 <xref:System.Data.DataColumn.Expression%2A> 이 설정 된 속성:</span><span class="sxs-lookup"><span data-stu-id="f7631-253">In that case, given a <xref:System.Data.DataColumn> with the name "total", and the <xref:System.Data.DataColumn.Expression%2A> property set to this:</span></span>  
  
 `"Quantity * UnitPrice"`  
  
 <span data-ttu-id="f7631-254">에 대 한 expression 인수는 <xref:System.Data.DataTable.Compute%2A> 메서드 같게 됩니다.이:</span><span class="sxs-lookup"><span data-stu-id="f7631-254">The expression argument for the <xref:System.Data.DataTable.Compute%2A> method would then be this:</span></span>  
  
 `Sum(total)`  
  
 <span data-ttu-id="f7631-255">두 번째 매개 변수를 `filter`, 식에 사용 될 행을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-255">The second parameter, `filter`, determines which rows are used in the expression.</span></span> <span data-ttu-id="f7631-256">예를 들어, 테이블 "colDate" 라는 날짜 열에 있으면 다음 식 사용 하 여 행을 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-256">For example, if the table contains a date column named "colDate", you could limit the rows with the following expression:</span></span>  
  
 `colDate > 1/1/99 AND colDate < 17/1/99`  
  
 <span data-ttu-id="f7631-257">두 매개 변수에 대 한 식 작성에서 규칙에 대 한 참조를 <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-257">For rules on creating expressions for both parameters, see the <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-258">다음 예제에서는 해당 id 번호는 5 개 판매 직원에 대 한 "Total" 이라는 열 값을 합산 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-258">The following example sums the values of a column named "Total", for the salesperson whose identification number is five.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Compute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Compute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Compute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Compute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-259">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-259">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public System.Data.ConstraintCollection Constraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ConstraintCollection Constraints" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Constraints As ConstraintCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ConstraintCollection ^ Constraints { System::Data::ConstraintCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constraints : System.Data.ConstraintCollection" Usage="System.Data.DataTable.Constraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableConstraintsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConstraintCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-260">이 테이블이 유지하는 제약 조건의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-260">Gets the collection of constraints maintained by this table.</span></span></summary>
        <value><span data-ttu-id="f7631-261">테이블의 <see cref="T:System.Data.ConstraintCollection" /> 개체 컬렉션이 포함된 <see cref="T:System.Data.Constraint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-261">A <see cref="T:System.Data.ConstraintCollection" /> that contains the collection of <see cref="T:System.Data.Constraint" /> objects for the table.</span></span> <span data-ttu-id="f7631-262"><see cref="T:System.Data.Constraint" /> 개체가 없으면 빈 컬렉션이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-262">An empty collection is returned if no <see cref="T:System.Data.Constraint" /> objects exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-263"><xref:System.Data.ForeignKeyConstraint> 열 (또는 열)의 값이 삭제 되거나 업데이트 될 때 수행 하는 작업을 제한 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-263">A <xref:System.Data.ForeignKeyConstraint> restricts the action performed when a value in a column (or columns) is either deleted or updated.</span></span> <span data-ttu-id="f7631-264">이러한 제약 조건이 기본 키 열과 함께 사용할 것입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-264">Such a constraint is intended to be used with primary key columns.</span></span> <span data-ttu-id="f7631-265">두 테이블 간에 부모/자식 관계에서 부모 테이블에서 값을 삭제할 영향을 줄 수 자식 행에서 다음 방법 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-265">In a parent/child relationship between two tables, deleting a value from the parent table can affect the child rows in one of the following ways.</span></span>  
  
-   <span data-ttu-id="f7631-266">자식 행 수도 있습니다 (연계 동작)를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-266">The child rows can also be deleted (a cascading action).</span></span>  
  
-   <span data-ttu-id="f7631-267">자식 열 (또는 열)의 값은 null 값으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-267">The values in the child column (or columns) can be set to null values.</span></span>  
  
-   <span data-ttu-id="f7631-268">자식 열 (또는 열)의 값을 기본값으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-268">The values in the child column (or columns) can be set to default values.</span></span>  
  
-   <span data-ttu-id="f7631-269">예외를 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-269">An exception can be generated.</span></span>  
  
 <span data-ttu-id="f7631-270"><xref:System.Data.UniqueConstraint> 고유 하지 않은 값으로 기본 키에 값을 설정 하려고 할 때 활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-270">A <xref:System.Data.UniqueConstraint> becomes active when attempting to set a value in a primary key to a non-unique value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-271">다음 예제에서는 추가 <xref:System.Data.ForeignKeyConstraint> 제약 조건의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-271">The following example adds a <xref:System.Data.ForeignKeyConstraint> to the collection of constraints.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Constraints Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Constraints Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Constraints Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Constraints Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-272">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-272">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Data.DataTable" Usage="dataTable.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-273">이 <see cref="T:System.Data.DataTable" />의 구조와 데이터를 모두 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-273">Copies both the structure and data for this <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="f7631-274">이 <see cref="T:System.Data.DataTable" />과 같은 구조(테이블 스키마, 관계, 제약 조건)와 데이터를 가진 새 <see cref="T:System.Data.DataTable" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-274">A new <see cref="T:System.Data.DataTable" /> with the same structure (table schemas and constraints) and data as this <see cref="T:System.Data.DataTable" />.</span></span>  
  
<span data-ttu-id="f7631-275">이 클래스가 파생된 경우 동일한 파생 클래스가 복사됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-275">If these classes have been derived, the copy will also be of the same derived classes.</span></span>  
  
 <span data-ttu-id="f7631-276"><see cref="M:System.Data.DataTable.Copy" />는 원래 <see cref="T:System.Data.DataTable" />과 동일한 구조 및 데이터로 새 <see cref="T:System.Data.DataTable" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-276"><see cref="M:System.Data.DataTable.Copy" /> creates a new <see cref="T:System.Data.DataTable" /> with the same structure and data as the original <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="f7631-277">구조체를 새 <see cref="T:System.Data.DataTable" />로 복사하고 데이터는 복사하지 않으려면 <see cref="M:System.Data.DataTable.Clone" />을 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="f7631-277">To copy the structure to a new <see cref="T:System.Data.DataTable" />, but not the data, use <see cref="M:System.Data.DataTable.Clone" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7631-278">다음 예제에서는 합니다 <xref:System.Data.DataTable.Copy%2A> 원래 복사본을 만드는 방법을 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-278">The following example uses the <xref:System.Data.DataTable.Copy%2A> method to create a copy of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-279">부모 로부터 상속 되는 경우에 네임 스페이스 이름을 유지 되지 않습니다 <xref:System.Data.DataTable> 또는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-279">The namespace name is not retained if it is inherited from a parent <xref:System.Data.DataTable> or <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Copy Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Copy Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Copy Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Copy Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataView.ToTable" />
        <altmember cref="M:System.Data.DataTable.Clone" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-280">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-280">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateDataReader">
      <MemberSignature Language="C#" Value="public System.Data.DataTableReader CreateDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTableReader CreateDataReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.CreateDataReader" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDataReader () As DataTableReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTableReader ^ CreateDataReader();" />
      <MemberSignature Language="F#" Value="member this.CreateDataReader : unit -&gt; System.Data.DataTableReader" Usage="dataTable.CreateDataReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-281">이 <see cref="T:System.Data.DataTableReader" />의 데이터에 해당하는 <see cref="T:System.Data.DataTable" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-281">Returns a <see cref="T:System.Data.DataTableReader" /> corresponding to the data within this <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="f7631-282">결과 집합 하나를 포함하고 소스 <see cref="T:System.Data.DataTableReader" /> 인스턴스에 해당하는 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-282">A <see cref="T:System.Data.DataTableReader" /> containing one result set, corresponding to the source <see cref="T:System.Data.DataTable" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7631-283">다음 콘솔 응용 프로그램에서는 <xref:System.Data.DataTable> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-283">The following console application creates a <xref:System.Data.DataTable> instance.</span></span> <span data-ttu-id="f7631-284">예제는 다음 채워진 전달 <xref:System.Data.DataTable> 호출 된 프로시저에는 <xref:System.Data.DataTable.CreateDataReader%2A> 내에 포함 된 결과 반복 하는 메서드를 <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="f7631-284">The example then passes the filled <xref:System.Data.DataTable> to a procedure that calls the <xref:System.Data.DataTable.CreateDataReader%2A> method, which iterates through the results contained within the <xref:System.Data.DataTableReader>.</span></span>  
  
 [!code-csharp[DataWorks DataTable.CreateDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.CreateDataReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.CreateDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.CreateDataReader/VB/source.vb#1)]  
  
 <span data-ttu-id="f7631-285">이 예제에서는 콘솔 창에 다음 출력을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-285">The example displays the following output in the console window:</span></span>  
  
 `1 Mary`  
  
 `2 Andy`  
  
 `3 Peter`  
  
 `4 Russ`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.CreateDataReader" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-286">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-286">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateInstance () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ CreateInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : unit -&gt; System.Data.DataTable&#xA;override this.CreateInstance : unit -&gt; System.Data.DataTable" Usage="dataTable.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-287"><see cref="T:System.Data.DataTable" />의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-287">Creates a new instance of <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="f7631-288">새 식입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-288">The new expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSet">
      <MemberSignature Language="C#" Value="public System.Data.DataSet DataSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataSet DataSet" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DataSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSet As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSet ^ DataSet { System::Data::DataSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSet : System.Data.DataSet" Usage="System.Data.DataTable.DataSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableDataSetDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-289">이 테이블이 속한 <see cref="T:System.Data.DataSet" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-289">Gets the <see cref="T:System.Data.DataSet" /> to which this table belongs.</span></span></summary>
        <value><span data-ttu-id="f7631-290">이 테이블이 속한 <see cref="T:System.Data.DataSet" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-290">The <see cref="T:System.Data.DataSet" /> to which this table belongs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-291">컨트롤은 데이터 바인딩할를 <xref:System.Data.DataTable>, 테이블에 속해를 <xref:System.Data.DataSet>를 가져올 수 있습니다는 <xref:System.Data.DataSet> 이 속성을 통해.</span><span class="sxs-lookup"><span data-stu-id="f7631-291">If a control is data bound to a <xref:System.Data.DataTable>, and the table belongs to a <xref:System.Data.DataSet>, you can get to the <xref:System.Data.DataSet> through this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-292">다음 예제에서는 부모를 반환 합니다. <xref:System.Data.DataSet> 를 통해 지정된 된 테이블의는 <xref:System.Data.DataTable.DataSet%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-292">The following example returns the parent <xref:System.Data.DataSet> of a given table through the <xref:System.Data.DataTable.DataSet%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataSet Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataSet Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataSet Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-293">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-293">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultView">
      <MemberSignature Language="C#" Value="public System.Data.DataView DefaultView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataView DefaultView" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DefaultView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultView As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataView ^ DefaultView { System::Data::DataView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultView : System.Data.DataView" Usage="System.Data.DataTable.DefaultView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableDefaultViewDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-294">필터링된 뷰를 포함할 수 있는 테이블의 사용자 지정 뷰 또는 커서 위치를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-294">Gets a customized view of the table that may include a filtered view, or a cursor position.</span></span></summary>
        <value><span data-ttu-id="f7631-295"><see cref="T:System.Data.DataView" />와 연결된 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-295">The <see cref="T:System.Data.DataView" /> associated with the <see cref="T:System.Data.DataTable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-296"><xref:System.Data.DataTable.DefaultView%2A> 속성에서 반환을 <xref:System.Data.DataView> 정렬, 필터 및 검색에 사용할 수는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-296">The <xref:System.Data.DataTable.DefaultView%2A> property returns a <xref:System.Data.DataView> you can use to sort, filter, and search a <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-297">속성을 설정 하는 다음 예제는 <xref:System.Data.DataTable> 개체의 <xref:System.Data.DataView> 를 통해를 <xref:System.Data.DataTable.DefaultView%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-297">The following example sets a property of the <xref:System.Data.DataTable> object's <xref:System.Data.DataView> through the <xref:System.Data.DataTable.DefaultView%2A> property.</span></span> <span data-ttu-id="f7631-298">또한이 예에서는 바인딩을 <xref:System.Windows.Forms.DataGridView> 컨트롤을 <xref:System.Data.DataTable> "CompanyName." 라는 열이 포함 된 "공급자" 라는</span><span class="sxs-lookup"><span data-stu-id="f7631-298">The example also shows the binding of a <xref:System.Windows.Forms.DataGridView> control to a <xref:System.Data.DataTable> named "Suppliers" that includes a column named "CompanyName."</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DefaultView Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DefaultView Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DefaultView Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DefaultView Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-299">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-299">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DisplayExpression">
      <MemberSignature Language="C#" Value="public string DisplayExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayExpression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DisplayExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayExpression : string with get, set" Usage="System.Data.DataTable.DisplayExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableDisplayExpressionDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-300">이 테이블을 사용자 인터페이스에 나타내는 데 사용되는 값을 반환하는 식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-300">Gets or sets the expression that returns a value used to represent this table in the user interface.</span></span> <span data-ttu-id="f7631-301"><see langword="DisplayExpression" /> 속성을 사용하여 이 테이블의 이름을 사용자 인터페이스에 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-301">The <see langword="DisplayExpression" /> property lets you display the name of this table in a user interface.</span></span></summary>
        <value><span data-ttu-id="f7631-302">표시 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-302">A display string.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-303">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-303">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public virtual void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="dataTable.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-304">폼에 사용되거나 다른 구성 요소에서 사용하는 <see cref="T:System.Data.DataTable" />의 초기화를 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-304">Ends the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component.</span></span> <span data-ttu-id="f7631-305">초기화는 런타임에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-305">The initialization occurs at run time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-306">Visual Studio 디자인 환경이이 메서드를 사용 하 여 폼에 사용 되거나 다른 구성 요소에서 사용 하는 구성 요소의 초기화를 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-306">The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="f7631-307"><xref:System.Data.DataTable.BeginInit%2A> 메서드 초기화를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-307">The <xref:System.Data.DataTable.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="f7631-308">사용 하는 <xref:System.Data.DataTable.BeginInit%2A> 및 <xref:System.Data.DataTable.EndInit%2A> 메서드 컨트롤을 완전히 초기화 되기 전에 사용 되지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-308">Using the <xref:System.Data.DataTable.BeginInit%2A> and <xref:System.Data.DataTable.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-309">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-309">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndLoadData">
      <MemberSignature Language="C#" Value="public void EndLoadData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoadData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.EndLoadData" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoadData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoadData();" />
      <MemberSignature Language="F#" Value="member this.EndLoadData : unit -&gt; unit" Usage="dataTable.EndLoadData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-310">데이터를 로드한 후 알림, 인덱스 유지 관리 및 제약 조건 기능을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-310">Turns on notifications, index maintenance, and constraints after loading data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-311">사용 하 여 <xref:System.Data.DataTable.EndLoadData%2A> 와 함께에서 <xref:System.Data.DataTable.LoadDataRow%2A> 고 <xref:System.Data.DataTable.BeginLoadData%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-311">Use <xref:System.Data.DataTable.EndLoadData%2A> in conjunction with <xref:System.Data.DataTable.LoadDataRow%2A> and <xref:System.Data.DataTable.BeginLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-312">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-312">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProperties : System.Data.PropertyCollection" Usage="System.Data.DataTable.ExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("ExtendedPropertiesDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-313">사용자 지정 사용자 정보 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-313">Gets the collection of customized user information.</span></span></summary>
        <value><span data-ttu-id="f7631-314">사용자 지정 사용자 정보가 들어 있는 <see cref="T:System.Data.PropertyCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-314">A <see cref="T:System.Data.PropertyCollection" /> that contains custom user information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-315">사용 합니다 <xref:System.Data.DataTable.ExtendedProperties%2A> 사용자 지정 정보를 추가 하는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-315">Use the <xref:System.Data.DataTable.ExtendedProperties%2A> to add custom information to a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-316">추가 정보는 `Add` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-316">Add information with the `Add` method.</span></span> <span data-ttu-id="f7631-317">사용 하 여 정보를 검색 합니다 `Item` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-317">Retrieve information with the `Item` method.</span></span>  
  
 <span data-ttu-id="f7631-318">확장된 속성 유형 이어야 <xref:System.String>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-318">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="f7631-319">문자열 형식이 아닌 속성 유지 되지 않습니다 경우는 <xref:System.Data.DataTable> XML로 작성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-319">Properties that are not of type String are not persisted when the <xref:System.Data.DataTable> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-320">다음 예제에서는 타임 스탬프 값을 추가 합니다 <xref:System.Data.DataTable> 를 통해를 <xref:System.Data.DataTable.ExtendedProperties%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="f7631-320">The following example adds a timestamp value to the <xref:System.Data.DataTable> through the <xref:System.Data.DataTable.ExtendedProperties%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-321">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-321">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="fInitInProgress">
      <MemberSignature Language="C#" Value="protected internal bool fInitInProgress;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly bool fInitInProgress" />
      <MemberSignature Language="DocId" Value="F:System.Data.DataTable.fInitInProgress" />
      <MemberSignature Language="VB.NET" Value="Protected Friend fInitInProgress As Boolean " />
      <MemberSignature Language="C++ CLI" Value="protected public: bool fInitInProgress;" />
      <MemberSignature Language="F#" Value="val mutable fInitInProgress : bool" Usage="System.Data.DataTable.fInitInProgress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-322">초기화가 진행 중인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-322">Checks whether initialization is in progress.</span></span> <span data-ttu-id="f7631-323">초기화는 런타임에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-323">The initialization occurs at run time.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7631-324">마지막으로 로드되거나 <see cref="T:System.Data.DataTable" />가 호출된 후에 변경된 내용이 모두 들어 있는 <see cref="M:System.Data.DataTable.AcceptChanges" />의 복사본을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-324">Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-325">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-325">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-326">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-326">Working with DataTable Events</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChanges">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChanges () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetChanges();" />
      <MemberSignature Language="F#" Value="member this.GetChanges : unit -&gt; System.Data.DataTable" Usage="dataTable.GetChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-327">로드되거나 <see cref="T:System.Data.DataTable" />가 마지막으로 호출된 후에 변경된 내용이 모두 들어 있는 <see cref="M:System.Data.DataTable.AcceptChanges" />의 복사본을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-327">Gets a copy of the <see cref="T:System.Data.DataTable" /> that contains all changes made to it since it was loaded or <see cref="M:System.Data.DataTable.AcceptChanges" /> was last called.</span></span></summary>
        <returns><span data-ttu-id="f7631-328">이 <see cref="T:System.Data.DataTable" />의 변경 내용의 복사본을 반환하거나, 변경 내용이 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-328">A copy of the changes from this <see cref="T:System.Data.DataTable" />, or <see langword="null" /> if no changes are found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-329">새로 만듭니다 <xref:System.Data.DataSet> 원래의 모든 행의 복사본이 포함 된 <xref:System.Data.DataSet> 보류 중인 변경 내용이 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-329">Creates a new <xref:System.Data.DataSet> containing a copy of all rows in the original <xref:System.Data.DataSet> that have pending changes.</span></span> <span data-ttu-id="f7631-330">관계 제약 조건을 추가할 새 변경 되지 않은 행을 추가 하면 <xref:System.Data.DataSet> 경우 변경 되지 않은 행 변경된 된 행에서 외래 키에 해당 하는 기본 키를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-330">Relationship constraints can cause additional unchanged rows to be added to the new <xref:System.Data.DataSet> if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows.</span></span> <span data-ttu-id="f7631-331">메서드는 반환 `null` (`Nothing` Visual basic에서) 원본에서 행이 없는 경우 <xref:System.Data.DataSet> 사용 하 여 보류 중인 변경 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-331">The method returns `null` (`Nothing` in Visual Basic) if there are no rows in the original <xref:System.Data.DataSet> with pending changes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.GetChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-332">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-332">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-333">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-333">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChanges">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetChanges (System.Data.DataRowState rowStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetChanges(valuetype System.Data.DataRowState rowStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChanges (rowStates As DataRowState) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetChanges(System::Data::DataRowState rowStates);" />
      <MemberSignature Language="F#" Value="member this.GetChanges : System.Data.DataRowState -&gt; System.Data.DataTable" Usage="dataTable.GetChanges rowStates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowStates" Type="System.Data.DataRowState" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rowStates"><span data-ttu-id="f7631-334"><see cref="T:System.Data.DataRowState" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-334">One of the <see cref="T:System.Data.DataRowState" /> values.</span></span></param>
        <summary><span data-ttu-id="f7631-335">마지막으로 로드되거나 <see cref="T:System.Data.DataTable" />가 호출된 후에 변경되어 <see cref="M:System.Data.DataTable.AcceptChanges" />를 기준으로 필터링된 내용이 모두 들어 있는 <see cref="T:System.Data.DataRowState" />의 복사본을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-335">Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called, filtered by <see cref="T:System.Data.DataRowState" />.</span></span></summary>
        <returns><span data-ttu-id="f7631-336">작업을 수행한 다음 <see cref="T:System.Data.DataTable" />를 사용하여 다시 <see cref="T:System.Data.DataTable" />에 병합할 수 있는 경우 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />의 필터링된 복사본을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-336">A filtered copy of the <see cref="T:System.Data.DataTable" /> that can have actions performed on it, and later be merged back in the <see cref="T:System.Data.DataTable" /> using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />.</span></span> <span data-ttu-id="f7631-337">원하는 <see cref="T:System.Data.DataRowState" /> 행이 없으면 이 메서드는 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-337">If no rows of the desired <see cref="T:System.Data.DataRowState" /> are found, the method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-338">합니다 <xref:System.Data.DataTable.GetChanges%2A> 메서드는 두 번째 생성 데 <xref:System.Data.DataTable> 원래에 도입 된 변경 내용만 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-338">The <xref:System.Data.DataTable.GetChanges%2A> method is used to produce a second <xref:System.Data.DataTable> object that contains only the changes introduced into the original.</span></span> <span data-ttu-id="f7631-339">사용 된 `rowStates` 새 개체에 포함 될 변경 유형을 지정 하는 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-339">Use the `rowStates` argument to specify the type of changes the new object should include.</span></span>  
  
 <span data-ttu-id="f7631-340">관계 제약 조건에는 변경 되지 않은 부모 행이 포함 되도록 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-340">Relationship constraints may cause unchanged parent rows to be included.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.GetChanges1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetChanges1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-341">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-341">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-342">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-342">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDataTableSchema">
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchemaComplexType GetDataTableSchema (System.Xml.Schema.XmlSchemaSet schemaSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.XmlSchemaComplexType GetDataTableSchema(class System.Xml.Schema.XmlSchemaSet schemaSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataTableSchema (schemaSet As XmlSchemaSet) As XmlSchemaComplexType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::Schema::XmlSchemaComplexType ^ GetDataTableSchema(System::Xml::Schema::XmlSchemaSet ^ schemaSet);" />
      <MemberSignature Language="F#" Value="static member GetDataTableSchema : System.Xml.Schema.XmlSchemaSet -&gt; System.Xml.Schema.XmlSchemaComplexType" Usage="System.Data.DataTable.GetDataTableSchema schemaSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaComplexType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaSet" Type="System.Xml.Schema.XmlSchemaSet" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="schemaSet"><span data-ttu-id="f7631-343"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-343">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</span></span></param>
        <summary><span data-ttu-id="f7631-344">이 메서드는 웹 서비스의 <see cref="T:System.Xml.Schema.XmlSchemaSet" />을 설명하는 WSDL(Web Services Description Language)이 포함된 <see cref="T:System.Data.DataTable" /> 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-344">This method returns an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance containing the Web Services Description Language (WSDL) that describes the <see cref="T:System.Data.DataTable" /> for Web Services.</span></span></summary>
        <returns><span data-ttu-id="f7631-345"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-345">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-346">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-346">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetErrors">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetErrors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrors () As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetErrors();" />
      <MemberSignature Language="F#" Value="member this.GetErrors : unit -&gt; System.Data.DataRow[]" Usage="dataTable.GetErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-347">오류가 있는 <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-347">Gets an array of <see cref="T:System.Data.DataRow" /> objects that contain errors.</span></span></summary>
        <returns><span data-ttu-id="f7631-348">오류가 있는 <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-348">An array of <see cref="T:System.Data.DataRow" /> objects that have errors.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-349">목록을 반환 <xref:System.Data.DataRow> 이 있는 개체 <xref:System.Data.DataRow.RowError%2A> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-349">Returns the list of <xref:System.Data.DataRow> objects that have <xref:System.Data.DataRow.RowError%2A> set.</span></span> <span data-ttu-id="f7631-350">호출할 때 오류가 발생할 수 있습니다 예를 들어 <xref:System.Data.Common.DataAdapter.Update%2A> 사용 하 여 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 로 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-350">For example, errors can occur when calling <xref:System.Data.Common.DataAdapter.Update%2A> with <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> set to `true`.</span></span> <span data-ttu-id="f7631-351">호출 하지 마십시오 <xref:System.Data.DataTable.AcceptChanges%2A> 에 <xref:System.Data.DataTable> 모든 오류를 해결 하 고 다시 전송 될 때까지 <xref:System.Data.DataSet> 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-351">Do not invoke <xref:System.Data.DataTable.AcceptChanges%2A> on the <xref:System.Data.DataTable> until you resolve all errors and resubmit the <xref:System.Data.DataSet> for updating.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-352">다음 예제에서는 합니다 <xref:System.Data.DataTable.GetErrors%2A> 배열을 반환 하는 방법 <xref:System.Data.DataRow> 오류가 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-352">The following example uses the <xref:System.Data.DataTable.GetErrors%2A> method to return an array of <xref:System.Data.DataRow> objects that have errors.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.GetErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-353">DataTable(ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f7631-353">DataTables (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="dataTable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="f7631-354"><see cref="T:System.Runtime.Serialization.SerializationInfo" />과 관련된 serialize된 개체가 들어 있는 <see cref="T:System.Data.DataTable" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-354">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized data associated with the <see cref="T:System.Data.DataTable" />.</span></span></param>
        <param name="context"><span data-ttu-id="f7631-355"><see cref="T:System.Runtime.Serialization.StreamingContext" />과 관련된 serialize된 스트림의 소스와 대상이 들어 있는 <see cref="T:System.Data.DataTable" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-355">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Data.DataTable" />.</span></span></param>
        <summary><span data-ttu-id="f7631-356"><see cref="T:System.Data.DataTable" />을 serialize하는 데 필요한 데이터로 serialization 정보 개체를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-356">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f7631-357"><paramref name="info" />매개 변수가 null 참조(Visual Basic에서는 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="f7631-357">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-358">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-358">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRowType">
      <MemberSignature Language="C#" Value="protected virtual Type GetRowType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetRowType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetRowType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRowType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetRowType();" />
      <MemberSignature Language="F#" Value="abstract member GetRowType : unit -&gt; Type&#xA;override this.GetRowType : unit -&gt; Type" Usage="dataTable.GetRowType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-359">행 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-359">Gets the row type.</span></span></summary>
        <returns><span data-ttu-id="f7631-360"><see cref="T:System.Data.DataRow" />의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-360">The type of the <see cref="T:System.Data.DataRow" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberSignature Language="F#" Value="abstract member GetSchema : unit -&gt; System.Xml.Schema.XmlSchema&#xA;override this.GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="dataTable.GetSchema " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-361">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f7631-361">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span></span></summary>
        <returns><span data-ttu-id="f7631-362"><see cref="T:System.Xml.Schema.XmlSchema" /> 메서드에 의해 생성되고 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 메서드가 사용하는 개체의 XML 표현을 설명하는 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-362">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasErrors : bool" Usage="System.Data.DataTable.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableHasErrorsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-363">해당 테이블이 속하는 <see cref="T:System.Data.DataSet" />의 테이블에 있는 행에 오류가 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-363">Gets a value indicating whether there are errors in any of the rows in any of the tables of the <see cref="T:System.Data.DataSet" /> to which the table belongs.</span></span></summary>
        <value><span data-ttu-id="f7631-364">오류가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-364"><see langword="true" /> if errors exist; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-365">사용자 작업에 포함 된 데이터 집합에는 <xref:System.Data.DataTable>, 변경으로 인해 일부 유효성 검사 실패 하는 경우 각 변경에 오류를 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-365">As users work on a set of data contained in a <xref:System.Data.DataTable>, you can mark each change with an error if the change causes some validation failure.</span></span> <span data-ttu-id="f7631-366">전체를 표시할 수 있습니다 <xref:System.Data.DataRow> 사용 하 여 오류 메시지는 <xref:System.Data.DataRow.RowError%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-366">You can mark an entire <xref:System.Data.DataRow> with an error message using the <xref:System.Data.DataRow.RowError%2A> property.</span></span> <span data-ttu-id="f7631-367">오류가 있는 행의 각 열에 설정할 수도 있습니다는 <xref:System.Data.DataRow.SetColumnError%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-367">You can also set errors on each column of the row with the <xref:System.Data.DataRow.SetColumnError%2A> method.</span></span>  
  
 <span data-ttu-id="f7631-368">데이터 소스를 업데이트 하기 전에 <xref:System.Data.DataSet>를 먼저 호출 하는 것이 좋습니다는 <xref:System.Data.DataSet.GetChanges%2A> 대상 메서드 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-368">Before updating a data source with a <xref:System.Data.DataSet>, it's recommended that you first invoke the <xref:System.Data.DataSet.GetChanges%2A> method on the target <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f7631-369">메서드 결과 <xref:System.Data.DataSet> 원본에 대 한 변경 내용만 포함 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-369">The method results in a <xref:System.Data.DataSet> that contains only the changes made to the original.</span></span> <span data-ttu-id="f7631-370">보내기 전에 <xref:System.Data.DataSet> 업데이트에 대 한 데이터 원본에 확인을 <xref:System.Data.DataTable.HasErrors%2A> 오류 행 이나 행의 열에 연결 되는 경우를 확인 하려면 각 테이블의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-370">Before sending the <xref:System.Data.DataSet> to the data source for updating, check the <xref:System.Data.DataTable.HasErrors%2A> property of each table to see if any errors have been attached to the rows or columns in the rows.</span></span>  
  
 <span data-ttu-id="f7631-371">각 오류를 해결 한 후 사용 하 여 오류를 지울 합니다 <xref:System.Data.DataRow.ClearErrors%2A> 메서드는 `DataRow`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-371">After reconciling each error, clear the errors with the <xref:System.Data.DataRow.ClearErrors%2A> method of the `DataRow`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-372">다음 예제에서는 <xref:System.Data.DataTable.HasErrors%2A> 속성을 테이블에 오류가 포함 되어 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-372">The following example uses the <xref:System.Data.DataTable.HasErrors%2A> property to check if a table contains errors.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-373">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-373">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ImportRow">
      <MemberSignature Language="C#" Value="public void ImportRow (System.Data.DataRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ImportRow(class System.Data.DataRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ImportRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportRow (row As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportRow(System::Data::DataRow ^ row);" />
      <MemberSignature Language="F#" Value="member this.ImportRow : System.Data.DataRow -&gt; unit" Usage="dataTable.ImportRow row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="f7631-374">가져올 <see cref="T:System.Data.DataRow" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-374">The <see cref="T:System.Data.DataRow" /> to be imported.</span></span></param>
        <summary><span data-ttu-id="f7631-375">원래 값 및 현재 값과 모든 속성 설정을 그대로 유지한 상태로 <see cref="T:System.Data.DataRow" />를 <see cref="T:System.Data.DataTable" />에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-375">Copies a <see cref="T:System.Data.DataRow" /> into a <see cref="T:System.Data.DataTable" />, preserving any property settings, as well as original and current values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-376">호출 <xref:System.Data.DataTable.NewRow%2A> 기존 테이블 스키마를 사용 하 여 테이블에 있지만 행에 대 한 기본값을 사용 하 여 행을 추가 하 고 설정 합니다 <xref:System.Data.DataRowState> 에 `Detached`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-376">Calling <xref:System.Data.DataTable.NewRow%2A> adds a row to the table using the existing table schema, but with default values for the row, and sets the <xref:System.Data.DataRowState> to `Detached`.</span></span> <span data-ttu-id="f7631-377">호출 <xref:System.Data.DataTable.ImportRow%2A> 기존 유지 <xref:System.Data.DataRowState> 행의 다른 값과 함께 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-377">Calling <xref:System.Data.DataTable.ImportRow%2A> preserves the existing <xref:System.Data.DataRowState> along with other values in the row.</span></span> <span data-ttu-id="f7631-378">경우는 `DataRow` 전달 된 분리 된 상태의 매개 변수는는 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-378">If the `DataRow` that is passed as a parameter is in a detached state, it is ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f7631-379">새 행을 데이터 테이블의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-379">The new row will be added to the end of the data table.</span></span>  
  
 <span data-ttu-id="f7631-380">새 행에는 제약 조건을 위반 하는 경우에 데이터 테이블에 추가할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-380">If the new row violates a Constraint it won't be added to the data table.</span></span>  
  
 <span data-ttu-id="f7631-381">DataTable.Rows.Find DataTable.Rows.IndexOf로 사용 하 여 새 행의 인덱스를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-381">You can get the index of the new row with as DataTable.Rows.Find and DataTable.Rows.IndexOf.</span></span> <span data-ttu-id="f7631-382">자세한 내용은 <xref:System.Data.DataRowCollection> 및 <xref:System.Data.DataTable.Rows%2A>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f7631-382">See <xref:System.Data.DataRowCollection> and <xref:System.Data.DataTable.Rows%2A> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-383">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-383">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5cb86d48-a987-4af4-80e0-8cc2c8373d62"><span data-ttu-id="f7631-384">DataTable (ADO.NET)에서 데이터를 조작합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-384">Manipulating Data in a DataTable (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="public event EventHandler Initialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Initialized" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.Initialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Initialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Initialized;" />
      <MemberSignature Language="F#" Value="member this.Initialized : EventHandler " Usage="member this.Initialized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.ISupportInitializeNotification.Initialized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-385"><see cref="T:System.Data.DataTable" />이 초기화된 후 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-385">Occurs after the <see cref="T:System.Data.DataTable" /> is initialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-386">자세한 내용은 <xref:System.Data.DataTable.IsInitialized%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f7631-386">For more information, see <xref:System.Data.DataTable.IsInitialized%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-387">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-387">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-388">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-388">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitialized : bool" Usage="System.Data.DataTable.IsInitialized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ISupportInitializeNotification.IsInitialized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-389"><see cref="T:System.Data.DataTable" />이 초기화되어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-389">Gets a value that indicates whether the <see cref="T:System.Data.DataTable" /> is initialized.</span></span></summary>
        <value><span data-ttu-id="f7631-390">구성 요소의 초기화가 완료되었음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-390"><see langword="true" /> to indicate the component has completed initialization; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-391">상태를 반환 하는 <xref:System.Data.DataTable> 이 생성 되, 예를 들어 Visual Studio에서 하는 동안.</span><span class="sxs-lookup"><span data-stu-id="f7631-391">Returns the status of the <xref:System.Data.DataTable> while it's being constructed, for instance by Visual Studio.</span></span> <span data-ttu-id="f7631-392">합니다 <xref:System.Data.DataTable.BeginInit%2A> 메서드를 설정 `false` 하 고 <xref:System.Data.DataTable.EndInit%2A> 메서드를 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-392">The <xref:System.Data.DataTable.BeginInit%2A> method sets it to `false` and <xref:System.Data.DataTable.EndInit%2A> method sets it to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-393">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-393">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-394">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-394">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7631-395">제공된 <see cref="T:System.Data.DataTable" />를 사용해서 <see cref="T:System.Data.IDataReader" />을 데이터 소스의 값으로 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-395">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span></span> <span data-ttu-id="f7631-396"><see langword="DataTable" />에 이미 행이 포함되어 있으면 데이터 소스에서 들어오는 데이터가 기존 행과 병합됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-396">If the <see langword="DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-397">`Load` 몇 가지 일반적인 시나리오는 지정 된 데이터 원본에서 데이터 가져오기 및 현재 데이터 컨테이너에 추가에서 메서드를 사용할 수 있습니다 (이 경우에 `DataTable`).</span><span class="sxs-lookup"><span data-stu-id="f7631-397">The `Load` method can be used in several common scenarios, all centered around getting data from a specified data source and adding it to the current data container (in this case, a `DataTable`).</span></span> <span data-ttu-id="f7631-398">에 대 한 일반 사용법을 설명 하는 이러한 시나리오는 `DataTable`, 해당 업데이트를 설명 하 고 병합 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-398">These scenarios describe standard usage for a `DataTable`, describing its update and merge behavior.</span></span>  
  
 <span data-ttu-id="f7631-399">`DataTable` 동기화 하거나 단일 기본 데이터 원본을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-399">A `DataTable` synchronizes or updates with a single primary data source.</span></span> <span data-ttu-id="f7631-400">`DataTable` 기본 데이터 소스와 동기화 할 수 있도록 변경 내용을 추적 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-400">The `DataTable` tracks changes, allowing synchronization with the primary data source.</span></span> <span data-ttu-id="f7631-401">또한는 `DataTable` 하나 이상의 보조 데이터 원본의 증분 데이터를 허용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-401">In addition, a `DataTable` can accept incremental data from one or more secondary data sources.</span></span> <span data-ttu-id="f7631-402">`DataTable` 보조 데이터 원본과 동기화를 허용 하기 위해 변경 내용 추적에 대 한 책임을 지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-402">The `DataTable` isn't responsible for tracking changes in order to allow synchronization with the secondary data source.</span></span>  
  
 <span data-ttu-id="f7631-403">이러한 두 가상 데이터 원본 지정 되 면 사용자가 다음 동작 중 하나 필요로 할:</span><span class="sxs-lookup"><span data-stu-id="f7631-403">Given these two hypothetical data sources, a user is likely to require one of the following behaviors:</span></span>  
  
-   <span data-ttu-id="f7631-404">초기화 `DataTable` 주 데이터 원본에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-404">Initialize `DataTable` from a primary data source.</span></span> <span data-ttu-id="f7631-405">이 시나리오에서는 사용자가 빈 초기화 `DataTable` 주 데이터 원본에서 값을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-405">In this scenario, the user wants to initialize an empty `DataTable` with values from the primary data source.</span></span> <span data-ttu-id="f7631-406">사용자는 나중에 다시 기본 데이터 소스에 변경 내용을 전파 하는입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-406">Later the user intends to propagate changes back to the primary data source.</span></span>  
  
-   <span data-ttu-id="f7631-407">변경 내용을 유지 하 고 기본 데이터 원본에서 다시 동기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-407">Preserve changes and re-synchronize from the primary data source.</span></span> <span data-ttu-id="f7631-408">이 시나리오에서는 사용자가 수행 합니다 `DataTable` 이전 시나리오에서 입력 하 고 기본 데이터 원본에서 변경 내용을 유지를 사용 하 여 증분 동기화를 수행 합니다 `DataTable`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-408">In this scenario, the user wants to take the `DataTable` filled in the previous scenario and perform an incremental synchronization with the primary data source, preserving modifications made in the `DataTable`.</span></span>  
  
-   <span data-ttu-id="f7631-409">증분 데이터를 보조 데이터 원본에서 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-409">Incremental data feed from secondary data sources.</span></span> <span data-ttu-id="f7631-410">이 시나리오에서는 사용자가 하나 이상의 보조 데이터 원본에서 변경 내용을 병합 하 여 이러한 변경 내용을 주 데이터 원본에 다시 전파 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-410">In this scenario, the user wants to merge changes from one or more secondary data sources, and propagate those changes back to the primary data source.</span></span>  
  
 <span data-ttu-id="f7631-411">`Load` 메서드 수 있게 이러한 모든 시나리오입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-411">The `Load` method makes all these scenarios possible.</span></span> <span data-ttu-id="f7631-412">하나를 제외한 모든 오버 로드 중에이 메서드를 사용 하면 부하 옵션 매개 변수를 지정할 수 있습니다를 나타내는 방법에 있는 행을 <xref:System.Data.DataTable> 로드 중인 행과 결합 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-412">All but one of the overloads for this method allows you to specify a load option parameter, indicating how rows already in a <xref:System.Data.DataTable> combine with rows being loaded.</span></span> <span data-ttu-id="f7631-413">(오버 로드의 동작을 지정할 수는 기본 로드 옵션을 사용 합니다.) 다음 표에에서 제공 하는 다음 세 가지 로드 옵션은 <xref:System.Data.LoadOption> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-413">(The overload that doesn't allow you to specify the behavior uses the default load option.) The following table describes the three load options provided by the <xref:System.Data.LoadOption> enumeration.</span></span> <span data-ttu-id="f7631-414">각 예에서 설명 들어오는 데이터의 행의 기본 키가 기존 행의 기본 키와 일치 하는 경우 동작을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-414">In each case, the description indicates the behavior when the primary key of a row in the incoming data matches the primary key of an existing row.</span></span>  
  
|<span data-ttu-id="f7631-415">로드 옵션</span><span class="sxs-lookup"><span data-stu-id="f7631-415">Load Option</span></span>|<span data-ttu-id="f7631-416">설명</span><span class="sxs-lookup"><span data-stu-id="f7631-416">Description</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="f7631-417">`PreserveChanges`(기본값)</span><span class="sxs-lookup"><span data-stu-id="f7631-417">`PreserveChanges` (default)</span></span>|<span data-ttu-id="f7631-418">들어오는 행의 값을 사용 하 여 행의 원래 버전을 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-418">Updates the original version of the row with the value of the incoming row.</span></span>|  
|`OverwriteChanges`|<span data-ttu-id="f7631-419">들어오는 행의 값을 사용 하 여 행의 현재 버전과 원래 버전을 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-419">Updates the current and original versions of the row with the value of the incoming row.</span></span>|  
|`Upsert`|<span data-ttu-id="f7631-420">들어오는 행의 값을 사용 하 여 행의 현재 버전을 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-420">Updates the current version of the row with the value of the incoming row.</span></span>|  
  
 <span data-ttu-id="f7631-421">일반적으로 `PreserveChanges` 하 고 `OverwriteChanges` 사용자를 동기화 해야 하는 시나리오에 대 한 옵션은는 `DataSet` 및 기본 데이터 소스를 사용 하 여 해당 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-421">In general, the `PreserveChanges` and `OverwriteChanges` options are intended for scenarios in which the user needs to synchronize the `DataSet` and its changes with the primary data source.</span></span> <span data-ttu-id="f7631-422">`Upsert` 옵션에 하나 이상의 보조 데이터 원본에서 집계 변경 용이 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-422">The `Upsert` option facilitates aggregating changes from one or more secondary data sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-423">다음 예제에서는 다양 한 호출을 사용 하 여 관련 된 문제는 <xref:System.Data.DataTable.Load%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-423">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="f7631-424">예제에서 로드 된 스키마를 유추 등의 스키마 문제에 집중 하는 먼저 <xref:System.Data.IDataReader>, 및 다음 호환 되지 않는 스키마 및 열이 누락 되거나 추가 된 스키마를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-424">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="f7631-425">이 예제에서는 다음 데이터 문제를 포함 하 여 다양 한 로드 옵션에 중점을 둡니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-425">The example then focuses on data issues, including handling the various loading options.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-426">이 예제에서는 오버 로드 된 버전 중 하나를 사용 하는 방법을 보여 줍니다 `Load`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-426">This example shows how to use one of the overloaded versions of `Load`.</span></span> <span data-ttu-id="f7631-427">사용할 수 있는 다른 예제를 오버 로드 개별 항목을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="f7631-427">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.Load" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-428">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-428">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Data.IDataReader -&gt; unit" Usage="dataTable.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f7631-429">결과 집합을 제공하는 <see cref="T:System.Data.IDataReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-429">An <see cref="T:System.Data.IDataReader" /> that provides a result set.</span></span></param>
        <summary><span data-ttu-id="f7631-430">제공된 <see cref="T:System.Data.DataTable" />를 사용해서 <see cref="T:System.Data.IDataReader" />을 데이터 소스의 값으로 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-430">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span></span> <span data-ttu-id="f7631-431"><see cref="T:System.Data.DataTable" />에 이미 행이 포함되어 있으면 데이터 소스에서 들어오는 데이터가 기존 행과 병합됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-431">If the <see cref="T:System.Data.DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-432">합니다 <xref:System.Data.DataTable.Load%2A> 첫 번째 결과 집합의 로드를 사용 하는 메서드 <xref:System.Data.IDataReader>를 성공적으로 완료 한 후 설정 판독기의 위치를 다음 결과 집합에 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="f7631-432">The <xref:System.Data.DataTable.Load%2A> method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="f7631-433">데이터를 변환 하는 경우는 `Load` 와 같은 변환 규칙을 사용 하는 메서드를 <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-433">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f7631-434">합니다 <xref:System.Data.DataTable.Load%2A> 메서드를 고려해 야 합니다 세 가지 특정 문제에서 데이터를 로드 하는 경우는 <xref:System.Data.IDataReader> 인스턴스: 스키마, 데이터 및 이벤트 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-434">The <xref:System.Data.DataTable.Load%2A> method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="f7631-435">스키마를 사용 하 여 작업 하는 경우는 <xref:System.Data.DataTable.Load%2A> 메서드는 다음 표에 설명 된 대로 조건이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-435">When working with the schema, the <xref:System.Data.DataTable.Load%2A> method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="f7631-436">스키마 작업 수행도 포함 하는 데이터가 없는 모든 가져온된 결과 집합에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-436">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="f7631-437">조건</span><span class="sxs-lookup"><span data-stu-id="f7631-437">Condition</span></span>|<span data-ttu-id="f7631-438">동작</span><span class="sxs-lookup"><span data-stu-id="f7631-438">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="f7631-439"><xref:System.Data.DataTable> 에 스키마가 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-439">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="f7631-440">합니다 <xref:System.Data.DataTable.Load%2A> 메서드는 가져온에서 결과 집합에 따라 스키마를 유추 <xref:System.Data.IDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-440">The <xref:System.Data.DataTable.Load%2A> method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="f7631-441"><xref:System.Data.DataTable> 스키마를 갖지만 로드 된 스키마와 호환 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-441">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="f7631-442"><xref:System.Data.DataTable.Load%2A> 메서드 호환 되지 않는 스키마로 데이터를 로드 하려고 할 때 발생 하는 특정 오류에 해당 하는 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-442">The <xref:System.Data.DataTable.Load%2A> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="f7631-443">스키마가 호환 되지만 로드 된 결과 집합 스키마에 존재 하지 않는 열이 포함 된 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-443">The schemas are compatible, but the loaded result set schema contains columns that do not exist in the <xref:System.Data.DataTable>.</span></span>|<span data-ttu-id="f7631-444">합니다 <xref:System.Data.DataTable.Load%2A> 추가 열을 추가 하는 메서드 `DataTable`의 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-444">The <xref:System.Data.DataTable.Load%2A> method adds the extra columns to `DataTable`'s schema.</span></span> <span data-ttu-id="f7631-445">메서드는 해당 하는 경우 예외를 throw에서 열을 <xref:System.Data.DataTable> 로드 된 결과 집합 값이 서로 호환 되지 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-445">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="f7631-446">또한 메서드는 결과 집합에 추가 된 모든 열에서에서 제약 조건 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-446">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="f7631-447">Primary Key 제약 조건의 경우를 제외 하 고이 제약 조건 정보는 경우에 현재 <xref:System.Data.DataTable> 로드 작업의 시작 부분에 열이 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-447">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="f7631-448">스키마가 호환 되지만 보다 적은 개수의 열을 포함 하는 로드 된 결과 집합 스키마에는 `DataTable`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-448">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="f7631-449">누락 된 열에 기본값이 정의 또는 열의 데이터 형식이 null을 허용 하는 경우는 <xref:System.Data.DataTable.Load%2A> 메서드를 사용 하면 행에 추가 하려면 기본 대체 또는 `null` 는 누락 된 열에 대 한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-449">If a missing column has a default value defined or the column's data type is nullable, the <xref:System.Data.DataTable.Load%2A> method allows the rows to be added, substituting the default or `null` value for the missing column.</span></span> <span data-ttu-id="f7631-450">경우 기본값은 없습니다 또는 `null` 사용할 수는 `Load` 메서드에서 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-450">If no default value or `null` can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="f7631-451">특정 기본 값을 제공 하는 경우는 `Load` 메서드는 `null` 암시 된 기본값으로 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-451">If no specific default value has been supplied, the `Load` method uses the `null` value as the implied default value.</span></span>|  
  
 <span data-ttu-id="f7631-452">동작을 고려 하기 전에 합니다 `Load` 데이터 작업을 기준으로 메서드는 것이 좋습니다 각 내에서 행을 <xref:System.Data.DataTable> 현재 값과 각 열에 대 한 원래 값을 유지 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-452">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="f7631-453">이러한 값 같을 수도 있지만, 또는 행의 데이터를 채운 이후에 변경 된 경우에 다를 수 여 `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="f7631-453">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span>  <span data-ttu-id="f7631-454">자세한 내용은 [행 상태 및 행 버전](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-454">For more information, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="f7631-455">이 버전의는 `Load` 메서드는 원래 값을 그대로 두고 각 행의 현재 값을 유지 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-455">This version of the `Load` method attempts to preserve the current values in each row, leaving the original value intact.</span></span> <span data-ttu-id="f7631-456">(들어오는 데이터의 동작을 보다 세부적으로 제어를 원한다 면 참조 <xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType>.) 기존 행과 들어오는 행에 해당 기본 키 값이 없으면 행의 현재 행 상태 값을 사용 하 여 처리 됩니다, 그리고 그렇지 않으면 새 행으로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-456">(If you want finer control over the behavior of incoming data, see <xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType>.) If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="f7631-457">이벤트 작업의 경우는 <xref:System.Data.DataTable.RowChanging> 각 행이 변경 되기 전에 이벤트가 발생 하며 <xref:System.Data.DataTable.RowChanged> 이벤트는 각 행이 변경 된 후 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-457">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="f7631-458">각각의 경우에서는 <xref:System.Data.DataRowChangeEventArgs.Action%2A> 속성의는 <xref:System.Data.DataRowChangeEventArgs> 이벤트 처리기에 전달 된 인스턴스가 이벤트와 연결 된 특정 작업에 대 한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-458">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="f7631-459">동작 값이 로드 작업 앞에 있는 행의 상태에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-459">This action value depends on the state of the row before the load operation.</span></span> <span data-ttu-id="f7631-460">각각의 경우에서 두 이벤트가 발생 하 고 작업을 각각에 대해 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-460">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="f7631-461">작업은 각 행의 현재 또는 원래 버전 또는 현재 행 상태에 따라 둘 다에 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-461">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="f7631-462">다음 표에서 동작을 보여 줍니다는 `Load` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-462">The following table displays behavior for the `Load` method.</span></span> <span data-ttu-id="f7631-463">("(없음)" 라는) 마지막 행을 기존 행과 일치 하지 않는 들어오는 행에 대 한 동작을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-463">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="f7631-464">이 테이블의 각 셀과 함께 행의 필드에 대 한 현재 및 원래 값을 설명 합니다는 <xref:System.Data.DataRowState> 후의 값에 대 한는 `Load` 메서드가 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-464">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span> <span data-ttu-id="f7631-465">메서드 로드 옵션을 지정할 수 없습니다 및 기본값을 사용 하 여이 예제의 경우 `PreserveChanges`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-465">In this case, the method doesn't allow you to indicate the load option, and uses the default, `PreserveChanges`.</span></span>  
  
|<span data-ttu-id="f7631-466">기존 DataRowState</span><span class="sxs-lookup"><span data-stu-id="f7631-466">Existing DataRowState</span></span>|<span data-ttu-id="f7631-467">값 `Load` 메서드 및 이벤트 작업</span><span class="sxs-lookup"><span data-stu-id="f7631-467">Values after `Load` method, and event action</span></span>|  
|---------------------------|--------------------------------------------------|  
|<span data-ttu-id="f7631-468">추가됨</span><span class="sxs-lookup"><span data-stu-id="f7631-468">Added</span></span>|<span data-ttu-id="f7631-469">현재 = \<기존 ></span><span class="sxs-lookup"><span data-stu-id="f7631-469">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="f7631-470">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-470">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-471">상태 = \<수정 ></span><span class="sxs-lookup"><span data-stu-id="f7631-471">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f7631-472">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-472">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="f7631-473">수정한 날짜</span><span class="sxs-lookup"><span data-stu-id="f7631-473">Modified</span></span>|<span data-ttu-id="f7631-474">현재 = \<기존 ></span><span class="sxs-lookup"><span data-stu-id="f7631-474">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="f7631-475">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-475">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-476">상태 = \<수정 ></span><span class="sxs-lookup"><span data-stu-id="f7631-476">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f7631-477">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-477">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="f7631-478">삭제됨</span><span class="sxs-lookup"><span data-stu-id="f7631-478">Deleted</span></span>|<span data-ttu-id="f7631-479">현재 = \<없음 ></span><span class="sxs-lookup"><span data-stu-id="f7631-479">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="f7631-480">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-480">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-481">상태 = \<삭제 ></span><span class="sxs-lookup"><span data-stu-id="f7631-481">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="f7631-482">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-482">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="f7631-483">Unchanged</span><span class="sxs-lookup"><span data-stu-id="f7631-483">Unchanged</span></span>|<span data-ttu-id="f7631-484">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-484">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-485">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-485">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-486">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-486">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-487">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-487">RowAction = ChangeCurrentAndOriginal</span></span>|  
|<span data-ttu-id="f7631-488">(없음)</span><span class="sxs-lookup"><span data-stu-id="f7631-488">(Not present)</span></span>|<span data-ttu-id="f7631-489">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-489">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-490">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-490">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-491">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-491">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-492">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-492">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="f7631-493">값을 <xref:System.Data.DataColumn> 와 같은 속성을 사용 하 여 제한할 수 있습니다 <xref:System.Data.DataColumn.ReadOnly%2A> 고 <xref:System.Data.DataColumn.AutoIncrement%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-493">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f7631-494">`Load` 메서드 열의 속성에 의해 정의 된 동작을 사용 하 여 일치 하는 방식으로 해당 열을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-494">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="f7631-495">읽기 전용 제약을 <xref:System.Data.DataColumn> 메모리에서 발생 하는 변경에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-495">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="f7631-496">`Load` 메서드는 필요한 경우 읽기 전용으로 열 값을 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-496">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="f7631-497">현재 행과 들어오는 행을 비교 하는 데 사용 하 여 기본 키 필드의 버전을 확인 하는 `Load` 메서드 존재 하는 경우 행의 기본 키 값의 원래 버전을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-497">To determine which version of the primary key field to use for comparing the current row with an incoming row, the `Load` method uses the original version of the primary key value within a row, if it exists.</span></span> <span data-ttu-id="f7631-498">이 고, 그렇지는 `Load` 메서드는 기본 키 필드의 현재 버전을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-498">Otherwise, the `Load` method uses the current version of the primary key field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-499">다음 예제에서는 다양 한 호출을 사용 하 여 관련 된 문제는 <xref:System.Data.DataTable.Load%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-499">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="f7631-500">예제에서 로드 된 스키마를 유추 등의 스키마 문제에 집중 하는 먼저 <xref:System.Data.IDataReader>, 및 다음 호환 되지 않는 스키마 및 열이 누락 되거나 추가 된 스키마를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-500">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="f7631-501">호출 예제는 `Load` 메서드를 로드 작업 전후에 데이터를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-501">The example then calls the `Load` method, displaying the data both before and after the load operation.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad.IDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.IDataReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.IDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.IDataReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-502">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-502">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-503">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-503">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Data.IDataReader reader, valuetype System.Data.LoadOption loadOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Data::IDataReader ^ reader, System::Data::LoadOption loadOption);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Data.IDataReader * System.Data.LoadOption -&gt; unit" Usage="dataTable.Load (reader, loadOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f7631-504">하나 이상의 결과 집합을 제공하는 <see cref="T:System.Data.IDataReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-504">An <see cref="T:System.Data.IDataReader" /> that provides one or more result sets.</span></span></param>
        <param name="loadOption"><span data-ttu-id="f7631-505"><see cref="T:System.Data.LoadOption" /> 열거형의 값으로서, 이미 <see cref="T:System.Data.DataTable" />에 있는 행이 동일한 기본 키를 공유하는 들어오는 행과 결합되는 방식을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-505">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> are combined with incoming rows that share the same primary key.</span></span></param>
        <summary><span data-ttu-id="f7631-506">제공된 <see cref="T:System.Data.DataTable" />를 사용해서 <see cref="T:System.Data.IDataReader" />을 데이터 소스의 값으로 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-506">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span></span> <span data-ttu-id="f7631-507"><see langword="DataTable" />에 이미 행이 포함되어 있으면 데이터 소스에서 들어오는 데이터는 <paramref name="loadOption" /> 매개 변수의 값에 따라 기존 행과 병합됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-507">If the <see langword="DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the <paramref name="loadOption" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-508">합니다 `Load` 첫 번째 결과 집합의 로드를 사용 하는 메서드 <xref:System.Data.IDataReader>를 성공적으로 완료 한 후 설정 판독기의 위치를 다음 결과 집합에 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="f7631-508">The `Load` method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="f7631-509">데이터를 변환 하는 경우는 `Load` 와 같은 변환 규칙을 사용 하는 메서드를 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-509">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method.</span></span>  
  
 <span data-ttu-id="f7631-510">합니다 `Load` 메서드를 고려해 야 합니다 세 가지 특정 문제에서 데이터를 로드 하는 경우는 <xref:System.Data.IDataReader> 인스턴스: 스키마, 데이터 및 이벤트 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-510">The `Load` method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="f7631-511">스키마를 사용 하 여 작업 하는 경우는 `Load` 메서드는 다음 표에 설명 된 대로 조건이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-511">When working with the schema, the `Load` method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="f7631-512">스키마 작업 수행도 포함 하는 데이터가 없는 모든 가져온된 결과 집합에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-512">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="f7631-513">조건</span><span class="sxs-lookup"><span data-stu-id="f7631-513">Condition</span></span>|<span data-ttu-id="f7631-514">동작</span><span class="sxs-lookup"><span data-stu-id="f7631-514">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="f7631-515"><xref:System.Data.DataTable> 에 스키마가 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-515">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="f7631-516">합니다 `Load` 메서드는 가져온에서 결과 집합에 따라 스키마를 유추 <xref:System.Data.IDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-516">The `Load` method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="f7631-517"><xref:System.Data.DataTable> 스키마를 갖지만 로드 된 스키마와 호환 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-517">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="f7631-518">`Load` 메서드 호환 되지 않는 스키마로 데이터를 로드 하려고 할 때 발생 하는 특정 오류에 해당 하는 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-518">The `Load` method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="f7631-519">스키마가 호환 되지만 로드 된 결과 집합 스키마에 존재 하지 않는 열이 포함 된 `DataTable`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-519">The schemas are compatible, but the loaded result set schema contains columns that don't exist in the `DataTable`.</span></span>|<span data-ttu-id="f7631-520">합니다 `Load` 추가 열을 추가 하는 메서드 `DataTable`의 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-520">The `Load` method adds the extra columns to `DataTable`'s schema.</span></span> <span data-ttu-id="f7631-521">메서드는 해당 하는 경우 예외를 throw에서 열을 <xref:System.Data.DataTable> 로드 된 결과 집합 값이 서로 호환 되지 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-521">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="f7631-522">또한 메서드는 결과 집합에 추가 된 모든 열에서에서 제약 조건 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-522">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="f7631-523">Primary Key 제약 조건의 경우를 제외 하 고이 제약 조건 정보는 경우에 현재 <xref:System.Data.DataTable> 로드 작업의 시작 부분에 열이 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-523">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="f7631-524">스키마가 호환 되지만 보다 적은 개수의 열을 포함 하는 로드 된 결과 집합 스키마에는 `DataTable`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-524">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="f7631-525">누락 된 열에 기본값이 정의 또는 열의 데이터 형식이 null을 허용 하는 경우는 `Load` 메서드를 사용 하면 행을 추가할 수는 누락 된 열에 대 한 default 또는 null 값을 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-525">If a missing column has a default value defined or the column's data type is nullable, the `Load` method allows the rows to be added, substituting the default or null value for the missing column.</span></span> <span data-ttu-id="f7631-526">기본값 또는 null 없습니다 사용할 수 있습니다 하는 경우 해당 `Load` 메서드에서 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-526">If no default value or null can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="f7631-527">특정 기본 값을 제공 하는 경우는 `Load` 메서드 묵시적된 기본 값으로 null 값을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-527">If no specific default value has been supplied, the `Load` method uses the null value as the implied default value.</span></span>|  
  
 <span data-ttu-id="f7631-528">동작을 고려 하기 전에 합니다 `Load` 데이터 작업을 기준으로 메서드는 것이 좋습니다 각 내에서 행을 <xref:System.Data.DataTable> 현재 값과 각 열에 대 한 원래 값을 유지 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-528">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="f7631-529">이러한 값 같을 수도 있지만, 또는 행의 데이터를 채운 이후에 변경 된 경우에 다를 수 여 `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="f7631-529">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span> <span data-ttu-id="f7631-530">참조 [행 상태 및 행 버전](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-530">See [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) for more information.</span></span>  
  
 <span data-ttu-id="f7631-531">이 메서드 호출에서 지정 된 <xref:System.Data.LoadOption> 매개 변수는 들어오는 데이터의 처리에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-531">In this method call, the specified <xref:System.Data.LoadOption> parameter influences the processing of the incoming data.</span></span> <span data-ttu-id="f7631-532">Load 메서드는 기존 행으로 동일한 기본 키가 있는 행을 로드할을 처리 하는 방법</span><span class="sxs-lookup"><span data-stu-id="f7631-532">How should the Load method handle loading rows that have the same primary key as existing rows?</span></span> <span data-ttu-id="f7631-533">현재 값, 원래 값 또는 둘 다 수정 해야?</span><span class="sxs-lookup"><span data-stu-id="f7631-533">Should it modify current values, original values, or both?</span></span> <span data-ttu-id="f7631-534">이러한 문제 및 자세한에 의해 제어 되는 `loadOption` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-534">These issues, and more, are controlled by the `loadOption` parameter.</span></span>  
  
 <span data-ttu-id="f7631-535">기존 행과 들어오는 행에 해당 기본 키 값이 없으면 행의 현재 행 상태 값을 사용 하 여 처리 됩니다, 그리고 그렇지 않으면 새 행으로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-535">If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="f7631-536">이벤트 작업의 경우는 <xref:System.Data.DataTable.RowChanging> 각 행이 변경 되기 전에 이벤트가 발생 하며 <xref:System.Data.DataTable.RowChanged> 이벤트는 각 행이 변경 된 후 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-536">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="f7631-537">각각의 경우에서는 <xref:System.Data.DataRowChangeEventArgs.Action%2A> 속성의는 <xref:System.Data.DataRowChangeEventArgs> 이벤트 처리기에 전달 된 인스턴스가 이벤트와 연결 된 특정 작업에 대 한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-537">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="f7631-538">동작 값이 로드 작업 앞에 있는 행의 상태에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-538">This action value varies, depending on the state of the row before the load operation.</span></span> <span data-ttu-id="f7631-539">각각의 경우에서 두 이벤트가 발생 하 고 작업을 각각에 대해 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-539">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="f7631-540">작업은 각 행의 현재 또는 원래 버전 또는 현재 행 상태에 따라 둘 다에 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-540">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="f7631-541">다음 표에 각를 사용 하 여 호출 하는 경우 Load 메서드에 대 한 동작을 `LoadOption` 값 및 값 로드 중인 행에 대 한 행 상태와 상호 작용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-541">The following table displays behavior for the Load method when called with each of the `LoadOption` values, and also shows how the values interact with the row state for the row being loaded.</span></span> <span data-ttu-id="f7631-542">("(없음)" 라는) 마지막 행을 기존 행과 일치 하지 않는 들어오는 행에 대 한 동작을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-542">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="f7631-543">이 테이블의 각 셀과 함께 행의 필드에 대 한 현재 및 원래 값을 설명 합니다는 <xref:System.Data.DataRowState> 후의 값에 대 한는 `Load` 메서드가 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-543">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span>  
  
|<span data-ttu-id="f7631-544">기존 DataRowState</span><span class="sxs-lookup"><span data-stu-id="f7631-544">Existing DataRowState</span></span>|<span data-ttu-id="f7631-545">Upsert</span><span class="sxs-lookup"><span data-stu-id="f7631-545">Upsert</span></span>|<span data-ttu-id="f7631-546">OverwriteChanges</span><span class="sxs-lookup"><span data-stu-id="f7631-546">OverwriteChanges</span></span>|<span data-ttu-id="f7631-547">PreserveChanges (기본 동작)</span><span class="sxs-lookup"><span data-stu-id="f7631-547">PreserveChanges (Default behavior)</span></span>|  
|---------------------------|------------|----------------------|------------------------------------------|  
|<span data-ttu-id="f7631-548">추가됨</span><span class="sxs-lookup"><span data-stu-id="f7631-548">Added</span></span>|<span data-ttu-id="f7631-549">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-549">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-550">원래 =-\<없음 ></span><span class="sxs-lookup"><span data-stu-id="f7631-550">Original = -\<Not available></span></span><br /><br /> <span data-ttu-id="f7631-551">상태 = \<추가 ></span><span class="sxs-lookup"><span data-stu-id="f7631-551">State = \<Added></span></span><br /><br /> <span data-ttu-id="f7631-552">RowAction = 변경</span><span class="sxs-lookup"><span data-stu-id="f7631-552">RowAction = Change</span></span>|<span data-ttu-id="f7631-553">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-553">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-554">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-554">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-555">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-555">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-556">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-556">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f7631-557">현재 = \<기존 ></span><span class="sxs-lookup"><span data-stu-id="f7631-557">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="f7631-558">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-558">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-559">상태 = \<수정 ></span><span class="sxs-lookup"><span data-stu-id="f7631-559">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f7631-560">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-560">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="f7631-561">수정한 날짜</span><span class="sxs-lookup"><span data-stu-id="f7631-561">Modified</span></span>|<span data-ttu-id="f7631-562">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-562">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-563">원래 = \<기존 ></span><span class="sxs-lookup"><span data-stu-id="f7631-563">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="f7631-564">상태 = \<수정 ></span><span class="sxs-lookup"><span data-stu-id="f7631-564">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f7631-565">RowAction = 변경</span><span class="sxs-lookup"><span data-stu-id="f7631-565">RowAction = Change</span></span>|<span data-ttu-id="f7631-566">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-566">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-567">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-567">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-568">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-568">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-569">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-569">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f7631-570">현재 = \<기존 ></span><span class="sxs-lookup"><span data-stu-id="f7631-570">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="f7631-571">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-571">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-572">상태 = \<수정 ></span><span class="sxs-lookup"><span data-stu-id="f7631-572">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f7631-573">RowAction =ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-573">RowAction =ChangeOriginal</span></span>|  
<span data-ttu-id="f7631-574">파일과</span><span class="sxs-lookup"><span data-stu-id="f7631-574">eleted</span></span>|<span data-ttu-id="f7631-575">(부하는 행을 삭제 하는 영향을 하지 않습니다)</span><span class="sxs-lookup"><span data-stu-id="f7631-575">(Load does not affect deleted rows)</span></span><br /><br /> <span data-ttu-id="f7631-576">현재 =--</span><span class="sxs-lookup"><span data-stu-id="f7631-576">Current = ---</span></span><br /><br /> <span data-ttu-id="f7631-577">원래 = \<기존 ></span><span class="sxs-lookup"><span data-stu-id="f7631-577">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="f7631-578">상태 = \<삭제 ></span><span class="sxs-lookup"><span data-stu-id="f7631-578">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="f7631-579">(다음 특징을 가진 새 행이 추가 됨)</span><span class="sxs-lookup"><span data-stu-id="f7631-579">(New row is added with the following characteristics)</span></span><br /><br /> <span data-ttu-id="f7631-580">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-580">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-581">원래 = \<없음 ></span><span class="sxs-lookup"><span data-stu-id="f7631-581">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="f7631-582">상태 = \<추가 ></span><span class="sxs-lookup"><span data-stu-id="f7631-582">State = \<Added></span></span><br /><br /> <span data-ttu-id="f7631-583">RowAction = 추가</span><span class="sxs-lookup"><span data-stu-id="f7631-583">RowAction = Add</span></span>|<span data-ttu-id="f7631-584">삭제 취소 하 고</span><span class="sxs-lookup"><span data-stu-id="f7631-584">Undo delete and</span></span><br /><br /> <span data-ttu-id="f7631-585">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-585">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-586">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-586">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-587">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-587">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-588">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-588">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f7631-589">현재 = \<없음 ></span><span class="sxs-lookup"><span data-stu-id="f7631-589">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="f7631-590">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-590">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-591">상태 = \<삭제 ></span><span class="sxs-lookup"><span data-stu-id="f7631-591">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="f7631-592">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-592">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="f7631-593">Unchanged</span><span class="sxs-lookup"><span data-stu-id="f7631-593">Unchanged</span></span>|<span data-ttu-id="f7631-594">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-594">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-595">원래 = \<기존 ></span><span class="sxs-lookup"><span data-stu-id="f7631-595">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="f7631-596">새 값 이면 기존 값과 같은 경우</span><span class="sxs-lookup"><span data-stu-id="f7631-596">If new value is the same as the existing value then</span></span><br /><br /> <span data-ttu-id="f7631-597">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-597">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-598">RowAction = Nothing</span><span class="sxs-lookup"><span data-stu-id="f7631-598">RowAction = Nothing</span></span><br /><br /> <span data-ttu-id="f7631-599">Else</span><span class="sxs-lookup"><span data-stu-id="f7631-599">Else</span></span><br /><br /> <span data-ttu-id="f7631-600">상태 = \<수정 ></span><span class="sxs-lookup"><span data-stu-id="f7631-600">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f7631-601">RowAction = 변경</span><span class="sxs-lookup"><span data-stu-id="f7631-601">RowAction = Change</span></span>|<span data-ttu-id="f7631-602">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-602">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-603">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-603">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-604">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-604">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-605">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-605">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f7631-606">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-606">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-607">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-607">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-608">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-608">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-609">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-609">RowAction = ChangeCurrentAndOriginal</span></span>|  
<span data-ttu-id="f7631-610">없음)</span><span class="sxs-lookup"><span data-stu-id="f7631-610">Not present)</span></span>|<span data-ttu-id="f7631-611">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-611">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-612">원래 = \<없음 ></span><span class="sxs-lookup"><span data-stu-id="f7631-612">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="f7631-613">상태 = \<추가 ></span><span class="sxs-lookup"><span data-stu-id="f7631-613">State = \<Added></span></span><br /><br /> <span data-ttu-id="f7631-614">RowAction = 추가</span><span class="sxs-lookup"><span data-stu-id="f7631-614">RowAction = Add</span></span>|<span data-ttu-id="f7631-615">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-615">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-616">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-616">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-617">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-617">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-618">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-618">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f7631-619">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-619">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-620">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-620">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-621">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-621">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-622">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-622">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="f7631-623">값을 <xref:System.Data.DataColumn> 와 같은 속성을 사용 하 여 제한할 수 있습니다 <xref:System.Data.DataColumn.ReadOnly%2A> 고 <xref:System.Data.DataColumn.AutoIncrement%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-623">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f7631-624">`Load` 메서드 열의 속성에 의해 정의 된 동작을 사용 하 여 일치 하는 방식으로 해당 열을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-624">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="f7631-625">읽기 전용 제약을 <xref:System.Data.DataColumn> 메모리에서 발생 하는 변경에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-625">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="f7631-626">`Load` 메서드는 필요한 경우 읽기 전용으로 열 값을 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-626">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="f7631-627">호출할 때 OverwriteChanges 또는 PreserveChanges 옵션을 지정 하는 경우는 `Load` 메서드를 다음 가정에서 들어오는 데이터가 제공 되는 수행 되는 `DataTable`의 주 데이터 원본 및 데이터 테이블의 변경 내용을 추적 및 전파 될 수 있습니다 변경 내용을 다시 데이터 원본입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-627">If you specify the OverwriteChanges or PreserveChanges options when calling the `Load` method, then the assumption is made that the incoming data is coming from the `DataTable`'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</span></span> <span data-ttu-id="f7631-628">Upsert 옵션을 선택 하면 사용자에 의해 변경 된 중간 계층 구성 요소에서 제공 하는 데이터와 같은 보조 데이터 원본 중 하나에서 데이터가 제공 되는 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-628">If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</span></span> <span data-ttu-id="f7631-629">가정에서 하나 이상의 데이터 원본에서 데이터를 집계 하기 위한 것은 예제의 경우는 `DataTable`, 다음 아마도 주 데이터 원본에 데이터를 전파 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-629">In this case, the assumption is that the intent is to aggregate data from one or more data sources in the `DataTable`, and then perhaps propagate the data back to the primary data source.</span></span> <span data-ttu-id="f7631-630"><xref:System.Data.LoadOption> 매개 변수는 기본 키 비교에 사용할 행의 특정 버전을 결정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-630">The <xref:System.Data.LoadOption> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</span></span> <span data-ttu-id="f7631-631">아래 표에서 세부 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-631">The table below provides the details.</span></span>  
  
|<span data-ttu-id="f7631-632">로드 옵션</span><span class="sxs-lookup"><span data-stu-id="f7631-632">Load option</span></span>|<span data-ttu-id="f7631-633">기본 키 비교에 사용 되는 DataRow 버전</span><span class="sxs-lookup"><span data-stu-id="f7631-633">DataRow version used for primary key comparison</span></span>|  
|-----------------|-----------------------------------------------------|  
|`OverwriteChanges`|<span data-ttu-id="f7631-634">원래 버전에 있는 경우, 그렇지 않으면 현재 버전</span><span class="sxs-lookup"><span data-stu-id="f7631-634">Original version, if it exists, otherwise Current version</span></span>|  
|`PreserveChanges`|<span data-ttu-id="f7631-635">원래 버전에 있는 경우, 그렇지 않으면 현재 버전</span><span class="sxs-lookup"><span data-stu-id="f7631-635">Original version, if it exists, otherwise Current version</span></span>|  
|`Upsert`|<span data-ttu-id="f7631-636">현재 버전에 있는 경우, 그렇지 않으면 원래 버전</span><span class="sxs-lookup"><span data-stu-id="f7631-636">Current version, if it exists, otherwise Original version</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="f7631-637">다음 예제에서는 다양 한 호출을 사용 하 여 관련 된 문제는 <xref:System.Data.DataTable.Load%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-637">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="f7631-638">예제에서 로드 된 스키마를 유추 등의 스키마 문제에 집중 하는 먼저 <xref:System.Data.IDataReader>, 및 다음 호환 되지 않는 스키마 및 열이 누락 되거나 추가 된 스키마를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-638">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="f7631-639">이 예제에서는 다음 데이터 문제를 포함 하 여 다양 한 로드 옵션에 중점을 둡니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-639">The example then focuses on data issues, including handling the various loading options.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad.LoadOption#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.LoadOption/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.LoadOption#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.LoadOption/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-640">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-640">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-641">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-641">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption, System.Data.FillErrorEventHandler errorHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Data.IDataReader reader, valuetype System.Data.LoadOption loadOption, class System.Data.FillErrorEventHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::Data::IDataReader ^ reader, System::Data::LoadOption loadOption, System::Data::FillErrorEventHandler ^ errorHandler);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Data.IDataReader * System.Data.LoadOption * System.Data.FillErrorEventHandler -&gt; unit&#xA;override this.Load : System.Data.IDataReader * System.Data.LoadOption * System.Data.FillErrorEventHandler -&gt; unit" Usage="dataTable.Load (reader, loadOption, errorHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="errorHandler" Type="System.Data.FillErrorEventHandler" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f7631-642">결과 집합을 제공하는 <see cref="T:System.Data.IDataReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-642">A <see cref="T:System.Data.IDataReader" /> that provides a result set.</span></span></param>
        <param name="loadOption"><span data-ttu-id="f7631-643"><see cref="T:System.Data.LoadOption" /> 열거형의 값으로서, 이미 <see cref="T:System.Data.DataTable" />에 있는 행이 동일한 기본 키를 공유하는 들어오는 행과 결합되는 방식을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-643">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> are combined with incoming rows that share the same primary key.</span></span></param>
        <param name="errorHandler"><span data-ttu-id="f7631-644">데이터를 로드하는 동안 오류가 발생하면 호출할 <see cref="T:System.Data.FillErrorEventHandler" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-644">A <see cref="T:System.Data.FillErrorEventHandler" /> delegate to call when an error occurs while loading data.</span></span></param>
        <summary><span data-ttu-id="f7631-645">오류 처리 대리자를 사용하는 제공된 <see cref="T:System.Data.DataTable" />를 사용해서 <see cref="T:System.Data.IDataReader" />을 데이터 소스의 값으로 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-645">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" /> using an error-handling delegate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-646">합니다 `Load` 첫 번째 결과 집합의 로드를 사용 하는 메서드 <xref:System.Data.IDataReader>를 성공적으로 완료 한 후 설정 판독기의 위치를 다음 결과 집합에 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="f7631-646">The `Load` method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="f7631-647">데이터를 변환 하는 경우는 `Load` 와 같은 변환 규칙을 사용 하는 메서드를 <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-647">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f7631-648">합니다 `Load` 메서드를 고려해 야 합니다 세 가지 특정 문제에서 데이터를 로드 하는 경우는 <xref:System.Data.IDataReader> 인스턴스: 스키마, 데이터 및 이벤트 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-648">The `Load` method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="f7631-649">스키마를 사용 하 여 작업 하는 경우는 `Load` 메서드는 다음 표에 설명 된 대로 조건이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-649">When working with the schema, the `Load` method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="f7631-650">스키마 작업 수행도 포함 하는 데이터가 없는 모든 가져온된 결과 집합에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-650">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="f7631-651">조건</span><span class="sxs-lookup"><span data-stu-id="f7631-651">Condition</span></span>|<span data-ttu-id="f7631-652">동작</span><span class="sxs-lookup"><span data-stu-id="f7631-652">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="f7631-653"><xref:System.Data.DataTable> 에 스키마가 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-653">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="f7631-654">합니다 `Load` 메서드는 가져온에서 결과 집합에 따라 스키마를 유추 <xref:System.Data.IDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-654">The `Load` method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="f7631-655"><xref:System.Data.DataTable> 스키마를 갖지만 로드 된 스키마와 호환 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-655">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="f7631-656">`Load` 메서드 호환 되지 않는 스키마로 데이터를 로드 하려고 할 때 발생 하는 특정 오류에 해당 하는 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-656">The `Load` method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="f7631-657">스키마가 호환 되지만 로드 된 결과 집합 스키마에 존재 하지 않는 열이 포함 된 `DataTable`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-657">The schemas are compatible, but the loaded result set schema contains columns that don't exist in the `DataTable`.</span></span>|<span data-ttu-id="f7631-658">합니다 `Load` 추가 열을 추가 하는 메서드 `DataTable`의 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-658">The `Load` method adds the extra column(s) to `DataTable`'s schema.</span></span> <span data-ttu-id="f7631-659">메서드는 해당 하는 경우 예외를 throw에서 열을 <xref:System.Data.DataTable> 로드 된 결과 집합 값이 서로 호환 되지 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-659">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="f7631-660">또한 메서드는 결과 집합에 추가 된 모든 열에서에서 제약 조건 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-660">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="f7631-661">Primary Key 제약 조건의 경우를 제외 하 고이 제약 조건 정보는 경우에 현재 <xref:System.Data.DataTable> 로드 작업의 시작 부분에 열이 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-661">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="f7631-662">스키마가 호환 되지만 보다 적은 개수의 열을 포함 하는 로드 된 결과 집합 스키마에는 `DataTable`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-662">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="f7631-663">누락 된 열에 기본값이 정의 또는 열의 데이터 형식이 null을 허용 하는 경우는 `Load` 메서드를 사용 하면 행을 추가할 수는 누락 된 열에 대 한 default 또는 null 값을 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-663">If a missing column has a default value defined or the column's data type is nullable, the `Load` method allows the rows to be added, substituting the default or null value for the missing column.</span></span> <span data-ttu-id="f7631-664">기본값 또는 null 없습니다 사용할 수 있습니다 하는 경우 해당 `Load` 메서드에서 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-664">If no default value or null can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="f7631-665">특정 기본 값을 제공 하는 경우는 `Load` 메서드 묵시적된 기본 값으로 null 값을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-665">If no specific default value has been supplied, the `Load` method uses the null value as the implied default value.</span></span>|  
  
 <span data-ttu-id="f7631-666">동작을 고려 하기 전에 합니다 `Load` 데이터 작업을 기준으로 메서드는 것이 좋습니다 각 내에서 행을 <xref:System.Data.DataTable> 현재 값과 각 열에 대 한 원래 값을 유지 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-666">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="f7631-667">이러한 값 같을 수도 있지만, 또는 행의 데이터를 채운 이후에 변경 된 경우에 다를 수 여 `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="f7631-667">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span> <span data-ttu-id="f7631-668">참조 [행 상태 및 행 버전](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-668">See [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) for more information.</span></span>  
  
 <span data-ttu-id="f7631-669">이 메서드 호출에서 지정 된 <xref:System.Data.LoadOption> 매개 변수는 들어오는 데이터의 처리에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-669">In this method call, the specified <xref:System.Data.LoadOption> parameter influences the processing of the incoming data.</span></span> <span data-ttu-id="f7631-670">Load 메서드는 기존 행으로 동일한 기본 키가 있는 행을 로드할을 처리 하는 방법</span><span class="sxs-lookup"><span data-stu-id="f7631-670">How should the Load method handle loading rows that have the same primary key as existing rows?</span></span> <span data-ttu-id="f7631-671">현재 값, 원래 값 또는 둘 다 수정 해야?</span><span class="sxs-lookup"><span data-stu-id="f7631-671">Should it modify current values, original values, or both?</span></span> <span data-ttu-id="f7631-672">이러한 문제 및 자세한에 의해 제어 되는 `loadOption` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-672">These issues, and more, are controlled by the `loadOption` parameter.</span></span>  
  
 <span data-ttu-id="f7631-673">기존 행과 들어오는 행에 해당 기본 키 값이 없으면 행의 현재 행 상태 값을 사용 하 여 처리 됩니다, 그리고 그렇지 않으면 새 행으로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-673">If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="f7631-674">이벤트 작업의 경우는 <xref:System.Data.DataTable.RowChanging> 각 행이 변경 되기 전에 이벤트가 발생 하며 <xref:System.Data.DataTable.RowChanged> 이벤트는 각 행이 변경 된 후 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-674">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="f7631-675">각각의 경우에서는 <xref:System.Data.DataRowChangeEventArgs.Action%2A> 속성의는 <xref:System.Data.DataRowChangeEventArgs> 이벤트 처리기에 전달 된 인스턴스가 이벤트와 연결 된 특정 작업에 대 한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-675">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="f7631-676">동작 값이 로드 작업 앞에 있는 행의 상태에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-676">This action value varies, depending on the state of the row before the load operation.</span></span> <span data-ttu-id="f7631-677">각각의 경우에서 두 이벤트가 발생 하 고 작업을 각각에 대해 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-677">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="f7631-678">작업은 각 행의 현재 또는 원래 버전 또는 현재 행 상태에 따라 둘 다에 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-678">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="f7631-679">다음 표에 각를 사용 하 여 호출 하는 경우 Load 메서드에 대 한 동작을 `LoadOption` 값 및 값 로드 중인 행에 대 한 행 상태와 상호 작용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-679">The following table displays behavior for the Load method when called with each of the `LoadOption` values, and also shows how the values interact with the row state for the row being loaded.</span></span> <span data-ttu-id="f7631-680">("(없음)" 라는) 마지막 행을 기존 행과 일치 하지 않는 들어오는 행에 대 한 동작을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-680">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="f7631-681">이 테이블의 각 셀과 함께 행의 필드에 대 한 현재 및 원래 값을 설명 합니다는 <xref:System.Data.DataRowState> 후의 값에 대 한는 `Load` 메서드가 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-681">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span>  
  
|<span data-ttu-id="f7631-682">기존 DataRowState</span><span class="sxs-lookup"><span data-stu-id="f7631-682">Existing DataRowState</span></span>|<span data-ttu-id="f7631-683">Upsert</span><span class="sxs-lookup"><span data-stu-id="f7631-683">Upsert</span></span>|<span data-ttu-id="f7631-684">OverwriteChanges</span><span class="sxs-lookup"><span data-stu-id="f7631-684">OverwriteChanges</span></span>|<span data-ttu-id="f7631-685">PreserveChanges (기본 동작)</span><span class="sxs-lookup"><span data-stu-id="f7631-685">PreserveChanges (Default behavior)</span></span>|  
|---------------------------|------------|----------------------|------------------------------------------|  
|<span data-ttu-id="f7631-686">추가됨</span><span class="sxs-lookup"><span data-stu-id="f7631-686">Added</span></span>|<span data-ttu-id="f7631-687">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-687">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-688">원래 =-\<없음 ></span><span class="sxs-lookup"><span data-stu-id="f7631-688">Original = -\<Not available></span></span><br /><br /> <span data-ttu-id="f7631-689">상태 = \<추가 ></span><span class="sxs-lookup"><span data-stu-id="f7631-689">State = \<Added></span></span><br /><br /> <span data-ttu-id="f7631-690">RowAction = 변경</span><span class="sxs-lookup"><span data-stu-id="f7631-690">RowAction = Change</span></span>|<span data-ttu-id="f7631-691">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-691">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-692">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-692">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-693">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-693">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-694">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-694">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f7631-695">현재 = \<기존 ></span><span class="sxs-lookup"><span data-stu-id="f7631-695">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="f7631-696">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-696">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-697">상태 = \<수정 ></span><span class="sxs-lookup"><span data-stu-id="f7631-697">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f7631-698">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-698">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="f7631-699">수정한 날짜</span><span class="sxs-lookup"><span data-stu-id="f7631-699">Modified</span></span>|<span data-ttu-id="f7631-700">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-700">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-701">원래 = \<기존 ></span><span class="sxs-lookup"><span data-stu-id="f7631-701">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="f7631-702">상태 = \<수정 ></span><span class="sxs-lookup"><span data-stu-id="f7631-702">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f7631-703">RowAction = 변경</span><span class="sxs-lookup"><span data-stu-id="f7631-703">RowAction = Change</span></span>|<span data-ttu-id="f7631-704">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-704">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-705">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-705">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-706">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-706">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-707">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-707">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f7631-708">현재 = \<기존 ></span><span class="sxs-lookup"><span data-stu-id="f7631-708">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="f7631-709">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-709">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-710">상태 = \<수정 ></span><span class="sxs-lookup"><span data-stu-id="f7631-710">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f7631-711">RowAction =ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-711">RowAction =ChangeOriginal</span></span>|  
<span data-ttu-id="f7631-712">파일과</span><span class="sxs-lookup"><span data-stu-id="f7631-712">eleted</span></span>|<span data-ttu-id="f7631-713">(부하는 행을 삭제 하는 영향을 하지 않습니다)</span><span class="sxs-lookup"><span data-stu-id="f7631-713">(Load does not affect deleted rows)</span></span><br /><br /> <span data-ttu-id="f7631-714">현재 =--</span><span class="sxs-lookup"><span data-stu-id="f7631-714">Current = ---</span></span><br /><br /> <span data-ttu-id="f7631-715">원래 = \<기존 ></span><span class="sxs-lookup"><span data-stu-id="f7631-715">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="f7631-716">상태 = \<삭제 ></span><span class="sxs-lookup"><span data-stu-id="f7631-716">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="f7631-717">(다음 특징을 가진 새 행이 추가 됨)</span><span class="sxs-lookup"><span data-stu-id="f7631-717">(New row is added with the following characteristics)</span></span><br /><br /> <span data-ttu-id="f7631-718">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-718">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-719">원래 = \<없음 ></span><span class="sxs-lookup"><span data-stu-id="f7631-719">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="f7631-720">상태 = \<추가 ></span><span class="sxs-lookup"><span data-stu-id="f7631-720">State = \<Added></span></span><br /><br /> <span data-ttu-id="f7631-721">RowAction = 추가</span><span class="sxs-lookup"><span data-stu-id="f7631-721">RowAction = Add</span></span>|<span data-ttu-id="f7631-722">삭제 취소 하 고</span><span class="sxs-lookup"><span data-stu-id="f7631-722">Undo delete and</span></span><br /><br /> <span data-ttu-id="f7631-723">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-723">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-724">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-724">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-725">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-725">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-726">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-726">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f7631-727">현재 = \<없음 ></span><span class="sxs-lookup"><span data-stu-id="f7631-727">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="f7631-728">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-728">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-729">상태 = \<삭제 ></span><span class="sxs-lookup"><span data-stu-id="f7631-729">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="f7631-730">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-730">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="f7631-731">Unchanged</span><span class="sxs-lookup"><span data-stu-id="f7631-731">Unchanged</span></span>|<span data-ttu-id="f7631-732">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-732">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-733">원래 = \<기존 ></span><span class="sxs-lookup"><span data-stu-id="f7631-733">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="f7631-734">새 값 이면 기존 값과 같은 경우</span><span class="sxs-lookup"><span data-stu-id="f7631-734">If new value is the same as the existing value then</span></span><br /><br /> <span data-ttu-id="f7631-735">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-735">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-736">RowAction = Nothing</span><span class="sxs-lookup"><span data-stu-id="f7631-736">RowAction = Nothing</span></span><br /><br /> <span data-ttu-id="f7631-737">Else</span><span class="sxs-lookup"><span data-stu-id="f7631-737">Else</span></span><br /><br /> <span data-ttu-id="f7631-738">상태 = \<수정 ></span><span class="sxs-lookup"><span data-stu-id="f7631-738">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f7631-739">RowAction = 변경</span><span class="sxs-lookup"><span data-stu-id="f7631-739">RowAction = Change</span></span>|<span data-ttu-id="f7631-740">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-740">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-741">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-741">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-742">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-742">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-743">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-743">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f7631-744">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-744">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-745">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-745">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-746">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-746">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-747">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-747">RowAction = ChangeCurrentAndOriginal</span></span>|  
<span data-ttu-id="f7631-748">없음)</span><span class="sxs-lookup"><span data-stu-id="f7631-748">Not present)</span></span>|<span data-ttu-id="f7631-749">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-749">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-750">원래 = \<없음 ></span><span class="sxs-lookup"><span data-stu-id="f7631-750">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="f7631-751">상태 = \<추가 ></span><span class="sxs-lookup"><span data-stu-id="f7631-751">State = \<Added></span></span><br /><br /> <span data-ttu-id="f7631-752">RowAction = 추가</span><span class="sxs-lookup"><span data-stu-id="f7631-752">RowAction = Add</span></span>|<span data-ttu-id="f7631-753">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-753">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-754">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-754">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-755">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-755">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-756">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-756">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f7631-757">현재 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-757">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-758">원래 = \<들어오는 ></span><span class="sxs-lookup"><span data-stu-id="f7631-758">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f7631-759">상태 = \<변경 되지 않은 ></span><span class="sxs-lookup"><span data-stu-id="f7631-759">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f7631-760">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f7631-760">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="f7631-761">값을 <xref:System.Data.DataColumn> 와 같은 속성을 사용 하 여 제한할 수 있습니다 <xref:System.Data.DataColumn.ReadOnly%2A> 고 <xref:System.Data.DataColumn.AutoIncrement%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-761">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f7631-762">`Load` 메서드 열의 속성에 의해 정의 된 동작을 사용 하 여 일치 하는 방식으로 해당 열을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-762">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="f7631-763">읽기 전용 제약을 <xref:System.Data.DataColumn> 메모리에서 발생 하는 변경에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-763">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="f7631-764">`Load` 메서드는 필요한 경우 읽기 전용으로 열 값을 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-764">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="f7631-765">호출할 때 OverwriteChanges 또는 PreserveChanges 옵션을 지정 하는 경우는 `Load` 메서드를 다음 가정에서 들어오는 데이터가 제공 되는 수행 되는 `DataTable`의 주 데이터 원본 및 데이터 테이블의 변경 내용을 추적 및 전파 될 수 있습니다 변경 내용을 다시 데이터 원본입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-765">If you specify the OverwriteChanges or PreserveChanges options when calling the `Load` method, then the assumption is made that the incoming data is coming from the `DataTable`'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</span></span> <span data-ttu-id="f7631-766">Upsert 옵션을 선택 하면 사용자에 의해 변경 된 중간 계층 구성 요소에서 제공 하는 데이터와 같은 보조 데이터 원본 중 하나에서 데이터가 제공 되는 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-766">If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</span></span> <span data-ttu-id="f7631-767">가정에서 하나 이상의 데이터 원본에서 데이터를 집계 하기 위한 것은 예제의 경우는 `DataTable`, 다음 아마도 주 데이터 원본에 데이터를 전파 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-767">In this case, the assumption is that the intent is to aggregate data from one or more data sources in the `DataTable`, and then perhaps propagate the data back to the primary data source.</span></span> <span data-ttu-id="f7631-768"><xref:System.Data.LoadOption> 매개 변수는 기본 키 비교에 사용할 행의 특정 버전을 결정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-768">The <xref:System.Data.LoadOption> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</span></span> <span data-ttu-id="f7631-769">아래 표에서 세부 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-769">The table below provides the details.</span></span>  
  
|<span data-ttu-id="f7631-770">로드 옵션</span><span class="sxs-lookup"><span data-stu-id="f7631-770">Load option</span></span>|<span data-ttu-id="f7631-771">기본 키 비교에 사용 되는 DataRow 버전</span><span class="sxs-lookup"><span data-stu-id="f7631-771">DataRow version used for primary key comparison</span></span>|  
|-----------------|-----------------------------------------------------|  
|`OverwriteChanges`|<span data-ttu-id="f7631-772">원래 버전에 있는 경우, 그렇지 않으면 현재 버전</span><span class="sxs-lookup"><span data-stu-id="f7631-772">Original version, if it exists, otherwise Current version</span></span>|  
|`PreserveChanges`|<span data-ttu-id="f7631-773">원래 버전에 있는 경우, 그렇지 않으면 현재 버전</span><span class="sxs-lookup"><span data-stu-id="f7631-773">Original version, if it exists, otherwise Current version</span></span>|  
|`Upsert`|<span data-ttu-id="f7631-774">현재 버전에 있는 경우, 그렇지 않으면 원래 버전</span><span class="sxs-lookup"><span data-stu-id="f7631-774">Current version, if it exists, otherwise Original version</span></span>|  
  
 <span data-ttu-id="f7631-775">합니다 `errorHandler` 매개 변수는 한 <xref:System.Data.FillErrorEventHandler> 데이터를 로드 하는 동안 오류가 발생 하면 호출 되는 프로시저를 참조 하는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-775">The `errorHandler` parameter is a <xref:System.Data.FillErrorEventHandler> delegate that refers to a procedure that is called when an error occurs while loading data.</span></span> <span data-ttu-id="f7631-776">합니다 <xref:System.Data.FillErrorEventArgs> 발생 한 오류, 데이터의 현재 행에 대 한 정보를 검색할 수 있는 속성을 제공 하는 프로시저에 전달 된 매개 변수 및 <xref:System.Data.DataTable> 채워지고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-776">The <xref:System.Data.FillErrorEventArgs> parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the <xref:System.Data.DataTable> being filled.</span></span> <span data-ttu-id="f7631-777">이 대리자 메커니즘을 사용 하 여, 대신 간단한 try/catch 블록을 오류를 확인할 수 있습니다 상황을 처리 한 원하는 경우 처리를 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-777">Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like.</span></span> <span data-ttu-id="f7631-778">합니다 <xref:System.Data.FillErrorEventArgs> 매개 변수를 제공을 <xref:System.Data.FillErrorEventArgs.Continue%2A> 속성:이 속성을 설정 `true` 오류를 처리 하 고 처리를 계속 하려면.</span><span class="sxs-lookup"><span data-stu-id="f7631-778">The <xref:System.Data.FillErrorEventArgs> parameter supplies a <xref:System.Data.FillErrorEventArgs.Continue%2A> property: set this property to `true` to indicate that you have handled the error and wish to continue processing.</span></span> <span data-ttu-id="f7631-779">속성을 설정 `false` 처리를 중단 하려는 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-779">Set the property to `false` to indicate that you wish to halt processing.</span></span> <span data-ttu-id="f7631-780">주의 해당 속성을 설정 `false` 예외를 throw 하려면 문제를 트리거한 코드를 사용 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-780">Be aware that setting the property to `false` causes the code that triggered the problem to throw an exception.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DataWorks DataTableLoad.ErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.ErrorEventHandler/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.ErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.ErrorEventHandler/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-781">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-781">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-782">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-782">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadDataRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7631-783">특정 행을 찾아 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-783">Finds and updates a specific row.</span></span> <span data-ttu-id="f7631-784">일치하는 행을 찾지 못하면 지정된 값을 사용하여 새 행을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-784">If no matching row is found, a new row is created using the given values.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-785">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-785">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadDataRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow LoadDataRow (object[] values, bool fAcceptChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow LoadDataRow(object[] values, bool fAcceptChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadDataRow (values As Object(), fAcceptChanges As Boolean) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ LoadDataRow(cli::array &lt;System::Object ^&gt; ^ values, bool fAcceptChanges);" />
      <MemberSignature Language="F#" Value="member this.LoadDataRow : obj[] * bool -&gt; System.Data.DataRow" Usage="dataTable.LoadDataRow (values, fAcceptChanges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fAcceptChanges" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="f7631-786">새 행을 만드는 데 사용되는 값 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-786">An array of values used to create the new row.</span></span></param>
        <param name="fAcceptChanges"><span data-ttu-id="f7631-787">변경 사항을 적용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-787"><see langword="true" /> to accept changes; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f7631-788">특정 행을 찾아 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-788">Finds and updates a specific row.</span></span> <span data-ttu-id="f7631-789">일치하는 행을 찾지 못하면 지정된 값을 사용하여 새 행을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-789">If no matching row is found, a new row is created using the given values.</span></span></summary>
        <returns><span data-ttu-id="f7631-790">새 <see cref="T:System.Data.DataRow" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-790">The new <see cref="T:System.Data.DataRow" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-791"><xref:System.Data.DataTable.LoadDataRow%2A> 메서드 값의 배열을 사용 하 고 기본 키 열에서 일치 하는 값을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-791">The <xref:System.Data.DataTable.LoadDataRow%2A> method takes an array of values and finds the matching value(s) in the primary key column(s).</span></span>  
  
 <span data-ttu-id="f7631-792">열에 기본값이 있으면 해당 열에 대 한 기본 값을 설정 하려면 배열에 null 값을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-792">If a column has a default value, pass a null value in the array to set the default value for that column.</span></span> <span data-ttu-id="f7631-793">마찬가지로, 열에 있으면 해당 <xref:System.Data.DataColumn.AutoIncrement%2A> 설정을 true로 행에 대해 자동으로 생성 된 값을 설정 하는 배열에 null 값을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-793">Similarly, if a column has its <xref:System.Data.DataColumn.AutoIncrement%2A> property set to true, pass a null value in the array to set the automatically generated value for the row.</span></span>  
  
 <span data-ttu-id="f7631-794">경우는 `fAcceptChanges` 매개 변수는 `true` 지정 하지 않으면 새 데이터가 추가 됩니다 또는 차례로 <xref:System.Data.DataTable.AcceptChanges%2A> 에서 모든 변경 내용을 적용 하기 위해 호출 됩니다는 <xref:System.Data.DataTable>인수가; `false`, 새로 추가 된 행이 삽입 및 변경 내용으로 표시 된 기존 행 수정으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-794">If the `fAcceptChanges` parameter is `true` or not specified, the new data is added and then <xref:System.Data.DataTable.AcceptChanges%2A> is called to accept all changes in the <xref:System.Data.DataTable>; if the argument is `false`, newly added rows are marked as insertions, and changes to existing rows are marked as modifications.</span></span>  
  
 <span data-ttu-id="f7631-795">예외도 수행 하는 동안 발생할 수 있습니다는 <xref:System.Data.DataTable.ColumnChanging> 또는 <xref:System.Data.DataTable.RowChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-795">Exceptions can also occur during either a <xref:System.Data.DataTable.ColumnChanging> or <xref:System.Data.DataTable.RowChanging> event.</span></span> <span data-ttu-id="f7631-796">예외가 발생 하는 경우 테이블에 행 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-796">If an exception occurs, the row is not added to the table.</span></span>  
  
 <span data-ttu-id="f7631-797">사용 하 여 <xref:System.Data.DataTable.LoadDataRow%2A> 와 함께에서 <xref:System.Data.DataTable.BeginLoadData%2A> 고 <xref:System.Data.DataTable.EndLoadData%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-797">Use <xref:System.Data.DataTable.LoadDataRow%2A> in conjunction with <xref:System.Data.DataTable.BeginLoadData%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-798">다음 예제에서는 <xref:System.Data.DataTable.LoadDataRow%2A> 행을 찾으려고 시도 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-798">The following example uses the <xref:System.Data.DataTable.LoadDataRow%2A> method to attempt to find a row.</span></span> <span data-ttu-id="f7631-799">이러한 행에 없으면 새 행을 만들고 값이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-799">If no such row is found, the values are used to create a new row.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.LoadDataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.LoadDataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.LoadDataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.LoadDataRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f7631-800">배열이 테이블의 열 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="f7631-800">The array is larger than the number of columns in the table.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="f7631-801">값이 해당 열 형식과 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="f7631-801">A value doesn't match its respective column type.</span></span></exception>
        <exception cref="T:System.Data.ConstraintException"><span data-ttu-id="f7631-802">행을 추가하여 제약 조건을 무효화한 경우</span><span class="sxs-lookup"><span data-stu-id="f7631-802">Adding the row invalidates a constraint.</span></span></exception>
        <exception cref="T:System.Data.NoNullAllowedException"><span data-ttu-id="f7631-803"><see cref="P:System.Data.DataColumn.AllowDBNull" />이 false인 열에 null을 설정하려는 경우</span><span class="sxs-lookup"><span data-stu-id="f7631-803">Attempting to put a null in a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is false.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-804">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-804">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-805">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-805">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LoadDataRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow LoadDataRow (object[] values, System.Data.LoadOption loadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow LoadDataRow(object[] values, valuetype System.Data.LoadOption loadOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ LoadDataRow(cli::array &lt;System::Object ^&gt; ^ values, System::Data::LoadOption loadOption);" />
      <MemberSignature Language="F#" Value="member this.LoadDataRow : obj[] * System.Data.LoadOption -&gt; System.Data.DataRow" Usage="dataTable.LoadDataRow (values, loadOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="f7631-806">새 행을 만드는 데 사용되는 값 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-806">An array of values used to create the new row.</span></span></param>
        <param name="loadOption"><span data-ttu-id="f7631-807">배열 값이 기존 행의 해당 값에 적용되는 방식을 결정하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-807">Used to determine how the array values are applied to the corresponding values in an existing row.</span></span></param>
        <summary><span data-ttu-id="f7631-808">특정 행을 찾아 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-808">Finds and updates a specific row.</span></span> <span data-ttu-id="f7631-809">일치하는 행을 찾지 못하면 지정된 값을 사용하여 새 행을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-809">If no matching row is found, a new row is created using the given values.</span></span></summary>
        <returns><span data-ttu-id="f7631-810">새 <see cref="T:System.Data.DataRow" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-810">The new <see cref="T:System.Data.DataRow" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-811"><xref:System.Data.DataTable.LoadDataRow%2A> 메서드 값의 배열을 사용 하 고 기본 키 열에서 일치 하는 값을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-811">The <xref:System.Data.DataTable.LoadDataRow%2A> method takes an array of values and finds the matching value(s) in the primary key column(s).</span></span>  
  
 <span data-ttu-id="f7631-812">열에 기본값이 있으면 해당 열에 대 한 기본 값을 설정 하려면 배열에 null 값을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-812">If a column has a default value, pass a null value in the array to set the default value for that column.</span></span> <span data-ttu-id="f7631-813">마찬가지로, 열에 있으면 해당 <xref:System.Data.DataColumn.AutoIncrement%2A> 설정을 true로 행에 대해 자동으로 생성 된 값을 설정 하는 배열에 null 값을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-813">Similarly, if a column has its <xref:System.Data.DataColumn.AutoIncrement%2A> property set to true, pass a null value in the array to set the automatically generated value for the row.</span></span>  
  
 <span data-ttu-id="f7631-814">값을 `loadOption` 매개 변수는 배열에 값이 기존 행에 적용 되는 방식을 확인 하려면 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-814">The value of the `loadOption` parameter is used to determine how the values in the array are applied to an existing row.</span></span> <span data-ttu-id="f7631-815">예를 들어 경우 `loadOption` 로 설정 된 `OverwriteChanges`의 `Original` 및 `Current` 각 열의 값은 들어오는 행의 값으로 바뀝니다 및 `RowState` 속성이 `Unchanged`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-815">For example, if `loadOption` is set to `OverwriteChanges`, the `Original` and `Current` values of each column are replaced with the values in the incoming row and the `RowState` property is set to `Unchanged`.</span></span>  
  
 <span data-ttu-id="f7631-816">예외도 수행 하는 동안 발생할 수 있습니다는 <xref:System.Data.DataTable.ColumnChanging> 또는 <xref:System.Data.DataTable.RowChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-816">Exceptions can also occur during either a <xref:System.Data.DataTable.ColumnChanging> or <xref:System.Data.DataTable.RowChanging> event.</span></span> <span data-ttu-id="f7631-817">예외가 발생 하는 경우 테이블에 행 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-817">If an exception occurs, the row is not added to the table.</span></span>  
  
 <span data-ttu-id="f7631-818">사용 하 여 <xref:System.Data.DataTable.LoadDataRow%2A> 와 함께에서 <xref:System.Data.DataTable.BeginLoadData%2A> 고 <xref:System.Data.DataTable.EndLoadData%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-818">Use <xref:System.Data.DataTable.LoadDataRow%2A> in conjunction with <xref:System.Data.DataTable.BeginLoadData%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-819">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-819">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Locale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Locale" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Locale" />
      <MemberSignature Language="VB.NET" Value="Public Property Locale As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Locale { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Locale : System.Globalization.CultureInfo with get, set" Usage="System.Data.DataTable.Locale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableLocaleDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-820">테이블 내의 문자열을 비교하는 데 사용되는 로캘 정보를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-820">Gets or sets the locale information used to compare strings within the table.</span></span></summary>
        <value><span data-ttu-id="f7631-821">사용자의 컴퓨터 로캘에 대한 데이터가 들어 있는 <see cref="T:System.Globalization.CultureInfo" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-821">A <see cref="T:System.Globalization.CultureInfo" /> that contains data about the user's machine locale.</span></span> <span data-ttu-id="f7631-822">기본값은 <see cref="T:System.Data.DataSet" />이 속해 있으며 <see cref="T:System.Globalization.CultureInfo" /> 속성에 의해 반환되는 <see cref="P:System.Data.DataSet.Locale" /> 개체의 <see cref="T:System.Data.DataTable" />이거나, 테이블이 <see cref="T:System.Data.DataSet" />에 속하지 않은 경우 현재 시스템의 <see cref="T:System.Globalization.CultureInfo" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-822">The default is the <see cref="T:System.Data.DataSet" /> object's <see cref="T:System.Globalization.CultureInfo" /> (returned by the <see cref="P:System.Data.DataSet.Locale" /> property) to which the <see cref="T:System.Data.DataTable" /> belongs; if the table doesn't belong to a <see cref="T:System.Data.DataSet" />, the default is the current system <see cref="T:System.Globalization.CultureInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-823"><xref:System.Globalization.CultureInfo> 는 특정 문화권 또는 커뮤니티의 소프트웨어 기본 설정을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-823">A <xref:System.Globalization.CultureInfo> represents the software preferences of a particular culture or community.</span></span>  
  
 <span data-ttu-id="f7631-824">문자열 비교에 사용 되는 경우는 <xref:System.Globalization.CultureInfo> 비교, 정렬 및 필터링에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-824">When used for string comparisons, the <xref:System.Globalization.CultureInfo> affects sorting, comparisons, and filtering.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-825">식이 포함 된 열에는 <xref:System.StringComparison.InvariantCulture> 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-825">In columns that contain expressions, the <xref:System.StringComparison.InvariantCulture> is used.</span></span> <span data-ttu-id="f7631-826"><xref:System.StringComparison.CurrentCulture> 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-826">The <xref:System.StringComparison.CurrentCulture> is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-827">다음 예제에서는 합니다 <xref:System.Globalization.CultureInfo> 를 통해를 <xref:System.Data.DataTable.Locale%2A> ISO 언어 이름을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-827">The following example sets the <xref:System.Globalization.CultureInfo> through the <xref:System.Data.DataTable.Locale%2A> and prints the ISO language name.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Locale Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Locale Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Locale Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Locale Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-828">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-828">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Merge">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7631-829">지정된 <see cref="T:System.Data.DataTable" />을 현재 <see cref="T:System.Data.DataTable" />과 병합합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-829">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-830">합니다 `Merge` 메서드는 두 개의 병합 데 <xref:System.Data.DataTable> 아주 비슷한 스키마가 포함 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-830">The `Merge` method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="f7631-831">병합을 일반적으로 사용 됩니다 클라이언트 응용 프로그램에서 데이터 원본에서 최신 변경 내용을 기존 통합할 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-831">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-832">이렇게 하면 클라이언트 응용 프로그램을 새로 고칠 수 있습니다. <xref:System.Data.DataTable> 데이터 원본의 최신 데이터를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-832">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="f7631-833">병합 작업은 원래 테이블만 및 병합할 테이블 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-833">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="f7631-834">자식 테이블을 받는 되지 않거나 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-834">Child tables are not affected or included.</span></span> <span data-ttu-id="f7631-835">테이블 관계의 일부로 정의 된 하나 이상의 자식 테이블에 각 자식 테이블을 개별적으로 병합 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-835">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-836">다음 콘솔 응용 프로그램의 동작을 보여 줍니다.는 `missingSchemaAction` 의 매개 변수는 <xref:System.Data.DataTable.Merge%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-836">The following console application demonstrates the behavior of the `missingSchemaAction` parameter of the <xref:System.Data.DataTable.Merge%2A> method.</span></span> <span data-ttu-id="f7631-837">이 예제에서는 두 번째 버전에 대 한 스키마를 수정 하는 동일한 테이블의 두 버전을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-837">This example creates two versions of the same table, modifying the schema for the second version.</span></span> <span data-ttu-id="f7631-838">코드를 첫 번째 두 번째 테이블을 병합 하려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-838">The code then attempts to merge the second table into the first.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-839">이 예에서는 병합의 오버 로드 된 버전 중 하나를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-839">This example shows how to use one of the overloaded versions of Merge.</span></span> <span data-ttu-id="f7631-840">사용할 수 있는 다른 예제를 오버 로드 개별 항목을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="f7631-840">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTableMergeOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableMergeOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableMergeOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableMergeOverload/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-841">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-841">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (table As DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.Merge : System.Data.DataTable -&gt; unit" Usage="dataTable.Merge table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="f7631-842">현재 <see cref="T:System.Data.DataTable" />과 병합할 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-842">The <see cref="T:System.Data.DataTable" /> to be merged with the current <see cref="T:System.Data.DataTable" />.</span></span></param>
        <summary><span data-ttu-id="f7631-843">지정된 <see cref="T:System.Data.DataTable" />을 현재 <see cref="T:System.Data.DataTable" />과 병합합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-843">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-844">Merge 메서드는 두 개의 병합 데 <xref:System.Data.DataTable> 아주 비슷한 스키마가 포함 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-844">The Merge method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="f7631-845">병합을 일반적으로 사용 됩니다 클라이언트 응용 프로그램에서 데이터 원본에서 최신 변경 내용을 기존 통합할 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-845">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-846">이렇게 하면 클라이언트 응용 프로그램을 새로 고칠 수 있습니다. <xref:System.Data.DataTable> 데이터 원본의 최신 데이터를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-846">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="f7631-847">병합 작업은 원래 테이블만 및 병합할 테이블 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-847">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="f7631-848">자식 테이블을 받는 되지 않거나 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-848">Child tables are not affected or included.</span></span> <span data-ttu-id="f7631-849">테이블 관계의 일부로 정의 된 하나 이상의 자식 테이블에 각 자식 테이블을 개별적으로 병합 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-849">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="f7631-850">합니다 `Merge` 메서드는 일반적으로 일련의 변경 내용의 유효성 검사, 오류 조정, 변경 내용을 사용 하 여 데이터 소스를 업데이트 및 마지막으로 기존 새로 고침을 포함 하는 절차의 끝에 호출 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-850">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f7631-851">병합을 수행할 때 기존 데이터를 병합 하기 전에 변경 내용은 병합 작업 하는 동안 기본적으로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-851">When performing a merge, changes made to the existing data before the merge are preserved by default during the merge operation.</span></span> <span data-ttu-id="f7631-852">개발자는이 메서드에 대 한 다른 두 개의 오버 로드 중 하나를 호출 하 고 false 값을 지정 하 여이 동작을 수정할 수는 `preserveChanges` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-852">Developers can modify this behavior by calling one of the other two overloads for this method, and specifying a false value for the `preserveChanges` parameter.</span></span>  
  
 <span data-ttu-id="f7631-853">클라이언트 응용 프로그램에서는 단일 하는 단추가 사용자가 클릭할 수 있는 변경된 된 데이터를 수집 하 고 중간 계층 구성 요소를 다시 보내기 전에 유효성 검사를 수행 하는 데 평소 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-853">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="f7631-854">이 시나리오에서는 <xref:System.Data.DataTable.GetChanges%2A> 메서드가 먼저 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-854">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="f7631-855">이 메서드는 두 번째 <xref:System.Data.DataTable> 유효성 검사 및 병합에 대해 최적화 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-855">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="f7631-856">이 두 번째 <xref:System.Data.DataTable> 개체만 포함 된 <xref:System.Data.DataRow> 원래의 하위 집합에 변경 된 개체 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-856">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-857">이 하위 집합은 일반적으로 크기가 작기 때문에 보다 효율적으로 중간 계층 구성 요소에 다시 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-857">This subset is generally smaller and thus more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="f7631-858">중간 계층 구성 요소는 다음 저장된 프로시저를 통해 변경 내용을 사용 하 여 원본 데이터 소스를 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-858">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="f7631-859">중간 계층을 새 다시 보낼 수 있습니다 <xref:System.Data.DataTable> 포함 하는 원본 데이터와 데이터 원본의 최신 데이터를 (다시 실행 하 여 원래 쿼리), 또는 데이터 원본에서 변경 된 내용이 있는 하위 집합을 클라이언트로 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-859">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="f7631-860">(예를 들어, 데이터 원본에서 자동으로 고유 기본 키 값을 만드는 경우 이러한 값에 전파할 수 다시 클라이언트 응용 프로그램입니다.) 두 경우 모두 반환 된 <xref:System.Data.DataTable> 클라이언트 응용 프로그램의 원본에 다시 병합할 수 있게 <xref:System.Data.DataTable> 사용 하 여는 <xref:System.Data.DataTable.Merge%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-860">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="f7631-861">새 소스를 병합할 때 <xref:System.Data.DataTable> 을 대상으로 사용 하 여 모든 원본 행을 <xref:System.Data.DataRowState> 의 값 `Unchanged`를 `Modified`, 또는 `Deleted`, 동일한 기본 키 값을 사용 하 여 대상 행과 일치 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-861">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted`, is matched to target rows with the same primary key values.</span></span> <span data-ttu-id="f7631-862">소스 행을 <xref:System.Data.DataRowState> 의 값 `Added` 새 원본 행과 동일한 기본 키 값을 사용 하 여 새 대상 행에 대응 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-862">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-863">다음 콘솔 응용 프로그램을 만드는 간단한 <xref:System.Data.DataTable> 데이터 테이블에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-863">The following console application creates a simple <xref:System.Data.DataTable> and adds data to the table.</span></span> <span data-ttu-id="f7631-864">다음 예제에서는 행 복사본에 추가 테이블의 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-864">The example then creates a copy of the table, adding rows to the copy.</span></span> <span data-ttu-id="f7631-865">마지막으로 호출 하 여는 <xref:System.Data.DataTable.Merge%2A> 첫 번째 테이블의 데이터를 사용 하 여 두 번째 테이블의 데이터를 병합 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-865">Finally, the example calls the <xref:System.Data.DataTable.Merge%2A> method to merge the data in the second table with the data in the first table.</span></span>  
  
 [!code-csharp[DataWorks DataTable.Merge#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.Merge/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.Merge#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.Merge/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-866">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-866">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-867">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-867">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table, bool preserveChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table, bool preserveChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (table As DataTable, preserveChanges As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table, bool preserveChanges);" />
      <MemberSignature Language="F#" Value="member this.Merge : System.Data.DataTable * bool -&gt; unit" Usage="dataTable.Merge (table, preserveChanges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="preserveChanges" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="f7631-868">현재 <see langword="DataTable" />과 병합할 <see langword="DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-868">The <see langword="DataTable" /> to be merged with the current <see langword="DataTable" />.</span></span></param>
        <param name="preserveChanges"><span data-ttu-id="f7631-869">현재 <see langword="true" />의 변경 내용을 유지하려면 <see langword="DataTable" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-869"><see langword="true" />, to preserve changes in the current <see langword="DataTable" />; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f7631-870">지정된 <see cref="T:System.Data.DataTable" />을 현재 <see langword="DataTable" />과 병합하여 현재 <see langword="DataTable" />에서 변경 내용을 유지할지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-870">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see langword="DataTable" />, indicating whether to preserve changes in the current <see langword="DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-871">Merge 메서드는 두 개의 병합 데 <xref:System.Data.DataTable> 아주 비슷한 스키마가 포함 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-871">The Merge method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="f7631-872">병합을 일반적으로 사용 됩니다 클라이언트 응용 프로그램에서 데이터 원본에서 최신 변경 내용을 기존 통합할 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-872">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-873">이렇게 하면 클라이언트 응용 프로그램을 새로 고칠 수 있습니다. <xref:System.Data.DataTable> 데이터 원본의 최신 데이터를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-873">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="f7631-874">병합 작업은 원래 테이블만 및 병합할 테이블 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-874">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="f7631-875">자식 테이블을 받는 되지 않거나 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-875">Child tables are not affected or included.</span></span> <span data-ttu-id="f7631-876">테이블 관계의 일부로 정의 된 하나 이상의 자식 테이블에 각 자식 테이블을 개별적으로 병합 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-876">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="f7631-877">합니다 `Merge` 메서드는 일반적으로 일련의 변경 내용의 유효성 검사, 오류 조정, 변경 내용을 사용 하 여 데이터 소스를 업데이트 및 마지막으로 기존 새로 고침을 포함 하는 절차의 끝에 호출 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-877">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f7631-878">개발자에 대해서는 false를 지정 하지 않은 경우 병합 하기 전에 기존 데이터에 대 한 변경 내용을 병합 작업 동안 유지 됩니다 병합을 수행 하는 경우는 `preserveChanges` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-878">When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the `preserveChanges` parameter.</span></span> <span data-ttu-id="f7631-879">경우는 `preserveChanges` 매개 변수는 설정 `true`을 들어오는 값이 기존 행의 현재 행 버전의 기존 값을 덮어쓰지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-879">If the `preserveChanges` parameter is set to `true`, incoming values do not overwrite existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="f7631-880">경우는 `preserveChanges` 매개 변수는 설정 `false`을 들어오는 값이 기존 행의 현재 행 버전의 기존 값을 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-880">If the `preserveChanges` parameter is set to `false`, incoming values do overwrite the existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="f7631-881">행 버전에 대 한 자세한 내용은 참조 하세요. [행 상태 및 행 버전](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-881">For more information about row versions, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="f7631-882">클라이언트 응용 프로그램에서는 단일 하는 단추가 사용자가 클릭할 수 있는 변경된 된 데이터를 수집 하 고 중간 계층 구성 요소를 다시 보내기 전에 유효성 검사를 수행 하는 데 평소 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-882">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="f7631-883">이 시나리오에서는 <xref:System.Data.DataTable.GetChanges%2A> 메서드가 먼저 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-883">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="f7631-884">이 메서드는 두 번째 <xref:System.Data.DataTable> 유효성 검사 및 병합에 대해 최적화 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-884">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="f7631-885">이 두 번째 <xref:System.Data.DataTable> 개체만 포함 된 <xref:System.Data.DataTable> 및 <xref:System.Data.DataRow> 원래의 하위 집합에 변경 된 개체 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-885">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-886">이 하위 집합은 일반적으로 작은 및 따라서이 하위 집합은 보다 효율적으로 중간 계층 구성 요소에 다시 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-886">This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="f7631-887">중간 계층 구성 요소는 다음 저장된 프로시저를 통해 변경 내용을 사용 하 여 원본 데이터 소스를 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-887">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="f7631-888">중간 계층을 새 다시 보낼 수 있습니다 <xref:System.Data.DataTable> 포함 하는 원본 데이터와 데이터 원본의 최신 데이터를 (다시 실행 하 여 원래 쿼리), 또는 데이터 원본에서 변경 된 내용이 있는 하위 집합을 클라이언트로 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-888">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="f7631-889">(예를 들어, 데이터 원본에서 자동으로 고유 기본 키 값을 만드는 경우 이러한 값에 전파할 수 다시 클라이언트 응용 프로그램입니다.) 두 경우 모두 반환 된 <xref:System.Data.DataTable> 클라이언트 응용 프로그램의 원본에 다시 병합할 수 있게 <xref:System.Data.DataTable> 사용 하 여는 <xref:System.Data.DataTable.Merge%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-889">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="f7631-890">새 소스를 병합할 때 <xref:System.Data.DataTable> 을 대상으로 사용 하 여 모든 원본 행을 <xref:System.Data.DataRowState> 의 값 `Unchanged`를 `Modified`, 또는 `Deleted` 동일한 기본 키 값을 사용 하 여 대상 행에 일치 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-890">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values.</span></span> <span data-ttu-id="f7631-891">소스 행을 <xref:System.Data.DataRowState> 의 값 `Added` 새 원본 행과 동일한 기본 키 값을 사용 하 여 새 대상 행에 대응 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-891">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-892">다음 콘솔 응용 프로그램을 만듭니다는 <xref:System.Data.DataTable> 해당 행의 데이터 중 일부를 수정 행을 포함 하 고 다른 데이터를 병합 하려고 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-892">The following console application creates a <xref:System.Data.DataTable> containing rows, modifies some of the data in those rows, and attempts to merge data from a different <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-893">예제에 대 한 다양 한 동작에는 `preserveChanges` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-893">The example demonstrates the different behaviors for the `preserveChanges` parameter.</span></span>  
  
 [!code-csharp[DataWorks DataTable.MergePreserveChanges#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.MergePreserveChanges/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.MergePreserveChanges#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.MergePreserveChanges/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-894">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-894">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-895">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-895">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table, bool preserveChanges, System.Data.MissingSchemaAction missingSchemaAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table, bool preserveChanges, valuetype System.Data.MissingSchemaAction missingSchemaAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table, bool preserveChanges, System::Data::MissingSchemaAction missingSchemaAction);" />
      <MemberSignature Language="F#" Value="member this.Merge : System.Data.DataTable * bool * System.Data.MissingSchemaAction -&gt; unit" Usage="dataTable.Merge (table, preserveChanges, missingSchemaAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="preserveChanges" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="missingSchemaAction" Type="System.Data.MissingSchemaAction" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="f7631-896">현재 <see cref="T:System.Data.DataTable" />과 병합할 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-896">The <see cref="T:System.Data.DataTable" /> to be merged with the current <see cref="T:System.Data.DataTable" />.</span></span></param>
        <param name="preserveChanges"><span data-ttu-id="f7631-897">현재 <see langword="true" />의 변경 내용을 유지하려면 <see cref="T:System.Data.DataTable" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-897"><see langword="true" />, to preserve changes in the current <see cref="T:System.Data.DataTable" />; otherwise <see langword="false" />.</span></span></param>
        <param name="missingSchemaAction"><span data-ttu-id="f7631-898"><see cref="T:System.Data.MissingSchemaAction" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-898">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span></span></param>
        <summary><span data-ttu-id="f7631-899">지정된 <see cref="T:System.Data.DataTable" />을 현재 <see langword="DataTable" />과 병합하여, 변경 내용을 유지할지 여부와 현재 <see langword="DataTable" />의 누락된 스키마 처리 방식을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-899">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see langword="DataTable" />, indicating whether to preserve changes and how to handle missing schema in the current <see langword="DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-900">합니다 `Merge` 메서드는 두 개의 병합 데 <xref:System.Data.DataTable> 아주 비슷한 스키마가 포함 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-900">The `Merge` method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="f7631-901">병합을 일반적으로 사용 됩니다 클라이언트 응용 프로그램에서 데이터 원본에서 최신 변경 내용을 기존 통합할 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-901">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-902">이렇게 하면 클라이언트 응용 프로그램을 새로 고칠 수 있습니다. <xref:System.Data.DataTable> 데이터 원본의 최신 데이터를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-902">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="f7631-903">병합 작업은 원래 테이블만 및 병합할 테이블 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-903">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="f7631-904">자식 테이블을 받는 되지 않거나 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-904">Child tables are not affected or included.</span></span> <span data-ttu-id="f7631-905">테이블 관계의 일부로 정의 된 하나 이상의 자식 테이블에 각 자식 테이블을 개별적으로 병합 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-905">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="f7631-906">합니다 `Merge` 메서드는 일반적으로 일련의 변경 내용의 유효성 검사, 오류 조정, 변경 내용을 사용 하 여 데이터 소스를 업데이트 및 마지막으로 기존 새로 고침을 포함 하는 절차의 끝에 호출 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-906">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f7631-907">개발자에 대해서는 false를 지정 하지 않은 경우 병합 하기 전에 기존 데이터에 대 한 변경 내용을 병합 작업 동안 유지 됩니다 병합을 수행 하는 경우는 `preserveChanges` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-907">When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the `preserveChanges` parameter.</span></span> <span data-ttu-id="f7631-908">경우는 `preserveChanges` 매개 변수는 설정 `true`을 들어오는 값이 기존 행의 현재 행 버전의 기존 값을 덮어쓰지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-908">If the `preserveChanges` parameter is set to `true`, incoming values do not overwrite existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="f7631-909">경우는 `preserveChanges` 매개 변수는 설정 `false`을 들어오는 값이 기존 행의 현재 행 버전의 기존 값을 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-909">If the `preserveChanges` parameter is set to `false`, incoming values do overwrite the existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="f7631-910">행 버전에 대 한 자세한 내용은 참조 하세요. [행 상태 및 행 버전](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-910">For more information about row versions, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="f7631-911">클라이언트 응용 프로그램에서는 단일 하는 단추가 사용자가 클릭할 수 있는 변경된 된 데이터를 수집 하 고 중간 계층 구성 요소를 다시 보내기 전에 유효성 검사를 수행 하는 데 평소 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-911">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="f7631-912">이 시나리오에서는 <xref:System.Data.DataTable.GetChanges%2A> 메서드가 먼저 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-912">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="f7631-913">이 메서드는 두 번째 <xref:System.Data.DataTable> 유효성 검사 및 병합에 대해 최적화 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-913">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="f7631-914">이 두 번째 <xref:System.Data.DataTable> 개체만 포함 된 <xref:System.Data.DataTable> 및 <xref:System.Data.DataRow> 원래의 하위 집합에 변경 된 개체 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-914">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-915">이 하위 집합은 일반적으로 작은 및 따라서이 하위 집합은 보다 효율적으로 중간 계층 구성 요소에 다시 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-915">This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="f7631-916">중간 계층 구성 요소는 다음 저장된 프로시저를 통해 변경 내용을 사용 하 여 원본 데이터 소스를 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-916">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="f7631-917">중간 계층을 새 다시 보낼 수 있습니다 <xref:System.Data.DataTable> 포함 하는 원본 데이터와 데이터 원본의 최신 데이터를 (다시 실행 하 여 원래 쿼리), 또는 데이터 원본에서 변경 된 내용이 있는 하위 집합을 클라이언트로 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-917">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="f7631-918">(예를 들어, 데이터 원본에서 자동으로 고유 기본 키 값을 만드는 경우 이러한 값에 전파할 수 다시 클라이언트 응용 프로그램입니다.) 두 경우 모두 반환 된 <xref:System.Data.DataTable> 클라이언트 응용 프로그램의 원본에 다시 병합할 수 있게 <xref:System.Data.DataTable> 사용 하 여는 <xref:System.Data.DataTable.Merge%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-918">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="f7631-919">경우는 <xref:System.Data.DataTable.Merge%2A> 메서드가 호출 되는 두 스키마 <xref:System.Data.DataTable> 개체는 스키마 변경 수 있기 때문에 비교 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-919">When the <xref:System.Data.DataTable.Merge%2A> method is called, the schemas of the two <xref:System.Data.DataTable> objects are compared, because it is possible that the schemas may have been changed.</span></span> <span data-ttu-id="f7631-920">예를 들어, 기업 간 시나리오에서 새 열 추가한 XML 스키마에 자동화 된 프로세스에 의해 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-920">For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</span></span> <span data-ttu-id="f7631-921">하는 경우 원본 <xref:System.Data.DataTable> 스키마 요소를 포함 (추가 <xref:System.Data.DataColumn> 개체) 대상에 누락 된를 설정 하 여 대상 스키마 요소를 추가할 수 있습니다 합니다 `missingSchemaAction` 인수를 `MissingSchemaAction.Add`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-921">If the source <xref:System.Data.DataTable> contains schema elements (added <xref:System.Data.DataColumn> objects) that are missing in the target, the schema elements can be added to the target by setting the `missingSchemaAction` argument to `MissingSchemaAction.Add`.</span></span> <span data-ttu-id="f7631-922">병합 된 경우에서 <xref:System.Data.DataTable> 추가 된 스키마 및 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-922">In that case, the merged <xref:System.Data.DataTable> contains the added schema and data.</span></span>  
  
 <span data-ttu-id="f7631-923">스키마를 병합 한 후 데이터를 병합 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-923">After merging schemas, the data is merged.</span></span>  
  
 <span data-ttu-id="f7631-924">새 소스를 병합할 때 <xref:System.Data.DataTable> 을 대상으로 사용 하 여 모든 원본 행을 <xref:System.Data.DataRowState> 의 값 `Unchanged`를 `Modified`, 또는 `Deleted` 동일한 기본 키 값을 사용 하 여 대상 행에 일치 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-924">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values.</span></span> <span data-ttu-id="f7631-925">소스 행을 <xref:System.Data.DataRowState> 의 값 `Added` 새 원본 행과 동일한 기본 키 값을 사용 하 여 새 대상 행에 대응 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-925">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-926">다음 콘솔 응용 프로그램의 동작을 보여 줍니다.는 `missingSchemaAction` 의 매개 변수는 <xref:System.Data.DataTable.Merge%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-926">The following console application demonstrates the behavior of the `missingSchemaAction` parameter of the <xref:System.Data.DataTable.Merge%2A> method.</span></span> <span data-ttu-id="f7631-927">이 예제에서는 두 번째 버전에 대 한 스키마를 수정 하는 동일한 테이블의 두 버전을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-927">This example creates two versions of the same table, modifying the schema for the second version.</span></span> <span data-ttu-id="f7631-928">코드를 첫 번째 두 번째 테이블을 병합 하려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-928">The code then attempts to merge the second table into the first.</span></span>  
  
 [!code-csharp[DataWorks DataTable.MergeMissingSchemaAction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.MergeMissingSchemaAction/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.MergeMissingSchemaAction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.MergeMissingSchemaAction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-929">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-929">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-930">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-930">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MinimumCapacity">
      <MemberSignature Language="C#" Value="public int MinimumCapacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumCapacity" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.MinimumCapacity" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumCapacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumCapacity : int with get, set" Usage="System.Data.DataTable.MinimumCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableMinimumCapacityDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-931">이 테이블에 대한 초기 시작 크기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-931">Gets or sets the initial starting size for this table.</span></span></summary>
        <value><span data-ttu-id="f7631-932">이 테이블에 있는 행의 초기 시작 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-932">The initial starting size in rows of this table.</span></span> <span data-ttu-id="f7631-933">기본값은 50입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-933">The default is 50.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-934"><xref:System.Data.DataTable.MinimumCapacity%2A> 시스템에 데이터를 인출 하기 전에 적절 한 리소스 집합을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-934">The <xref:System.Data.DataTable.MinimumCapacity%2A> allows the system to create an appropriate set of resources before fetching data.</span></span> <span data-ttu-id="f7631-935">상황에서이 속성을 설정할 성능이 중요 한 경우 성능을 최적화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-935">In a situation when performance is critical, setting this property can optimize performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-936">다음 예제에서는 합니다 <xref:System.Data.DataTable.MinimumCapacity%2A> 의 한 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-936">The following example sets the <xref:System.Data.DataTable.MinimumCapacity%2A> of a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.MinimumCapacity Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.MinimumCapacity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.MinimumCapacity Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.MinimumCapacity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-937">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-937">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Data.DataTable.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableNamespaceDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-938"><see cref="T:System.Data.DataTable" />에 저장된 데이터의 XML 표현에 대한 네임스페이스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-938">Gets or sets the namespace for the XML representation of the data stored in the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="f7631-939"><see cref="T:System.Data.DataTable" />의 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-939">The namespace of the <see cref="T:System.Data.DataTable" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-940">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-940">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow NewRow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow NewRow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow () As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ NewRow();" />
      <MemberSignature Language="F#" Value="member this.NewRow : unit -&gt; System.Data.DataRow" Usage="dataTable.NewRow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-941">테이블과 동일한 스키마를 갖는 새 <see cref="T:System.Data.DataRow" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-941">Creates a new <see cref="T:System.Data.DataRow" /> with the same schema as the table.</span></span></summary>
        <returns><span data-ttu-id="f7631-942"><see cref="T:System.Data.DataRow" />과 동일한 스키마를 갖는 <see cref="T:System.Data.DataTable" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-942">A <see cref="T:System.Data.DataRow" /> with the same schema as the <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-943">사용 해야 합니다는 <xref:System.Data.DataTable.NewRow%2A> 새로 만들기 방법 <xref:System.Data.DataRow> 와 동일한 스키마를 사용 하 여 개체를 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-943">You must use the <xref:System.Data.DataTable.NewRow%2A> method to create new <xref:System.Data.DataRow> objects with the same schema as the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-944">만든 후는 <xref:System.Data.DataRow>를 추가할 수 있습니다는 <xref:System.Data.DataRowCollection>을 통해 합니다 <xref:System.Data.DataTable> 개체의 <xref:System.Data.DataTable.Rows%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="f7631-944">After creating a <xref:System.Data.DataRow>, you can add it to the <xref:System.Data.DataRowCollection>, through the <xref:System.Data.DataTable> object's <xref:System.Data.DataTable.Rows%2A> property.</span></span> <span data-ttu-id="f7631-945">사용 하는 경우 <xref:System.Data.DataTable.NewRow%2A> 새 행을 만들려면 행에 추가 하거나 삭제 해야 데이터 테이블에서 호출 하기 전에 <xref:System.Data.DataTable.Clear%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-945">When you use <xref:System.Data.DataTable.NewRow%2A> to create new rows, the rows must be added to or deleted from the data table before you call <xref:System.Data.DataTable.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-946">다음 예제에서는 <xref:System.Data.DataTable>, 두 개 더한 <xref:System.Data.DataColumn> 개체는 테이블의 스키마를 확인 하 고 여러 만듭니다 <xref:System.Data.DataRow> 사용 하 여 개체를 <xref:System.Data.DataTable.NewRow%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-946">The following example creates a <xref:System.Data.DataTable>, adds two <xref:System.Data.DataColumn> objects that determine the table's schema, and creates several new <xref:System.Data.DataRow> objects using the <xref:System.Data.DataTable.NewRow%2A> method.</span></span> <span data-ttu-id="f7631-947">이러한 <xref:System.Data.DataRow> 개체에 추가 됩니다 합니다 <xref:System.Data.DataRowCollection> 사용 하 여를 <xref:System.Data.DataRowCollection.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-947">Those <xref:System.Data.DataRow> objects are then added to the <xref:System.Data.DataRowCollection> using the <xref:System.Data.DataRowCollection.Add%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.NewRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.NewRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.NewRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.NewRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-948">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-948">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-949">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-949">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NewRowArray">
      <MemberSignature Language="C#" Value="protected internal System.Data.DataRow[] NewRowArray (int size);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Data.DataRow[] NewRowArray(int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRowArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function NewRowArray (size As Integer) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ NewRowArray(int size);" />
      <MemberSignature Language="F#" Value="member this.NewRowArray : int -&gt; System.Data.DataRow[]" Usage="dataTable.NewRowArray size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="f7631-950">배열의 크기를 설명하는 <see cref="T:System.Int32" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-950">A <see cref="T:System.Int32" /> value that describes the size of the array.</span></span></param>
        <summary><span data-ttu-id="f7631-951"><see cref="T:System.Data.DataRow" />의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-951">Returns an array of <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <returns><span data-ttu-id="f7631-952">새 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-952">The new array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewRowFromBuilder">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataRow NewRowFromBuilder (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataRow NewRowFromBuilder(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function NewRowFromBuilder (builder As DataRowBuilder) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataRow ^ NewRowFromBuilder(System::Data::DataRowBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="abstract member NewRowFromBuilder : System.Data.DataRowBuilder -&gt; System.Data.DataRow&#xA;override this.NewRowFromBuilder : System.Data.DataRowBuilder -&gt; System.Data.DataRow" Usage="dataTable.NewRowFromBuilder builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="f7631-953"><see cref="T:System.Data.DataRowBuilder" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-953">A <see cref="T:System.Data.DataRowBuilder" /> object.</span></span></param>
        <summary><span data-ttu-id="f7631-954">기존 행에서 새 행을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-954">Creates a new row from an existing row.</span></span></summary>
        <returns><span data-ttu-id="f7631-955"><see cref="T:System.Data.DataRow" /> 파생 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-955">A <see cref="T:System.Data.DataRow" /> derived class.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-956">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-956">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnColumnChanged (System.Data.DataColumnChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnChanged(class System.Data.DataColumnChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnColumnChanged (e As DataColumnChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnColumnChanged(System::Data::DataColumnChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnChanged : System.Data.DataColumnChangeEventArgs -&gt; unit&#xA;override this.OnColumnChanged : System.Data.DataColumnChangeEventArgs -&gt; unit" Usage="dataTable.OnColumnChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataColumnChangeEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f7631-957">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataColumnChangeEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-957">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f7631-958"><see cref="E:System.Data.DataTable.ColumnChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-958">Raises the <see cref="E:System.Data.DataTable.ColumnChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-959">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-959">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f7631-960">개요를 보려면 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-960">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f7631-961">재정의 하는 경우 <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-961">When overriding <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-962">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-962">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-963">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-963">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnChanging">
      <MemberSignature Language="C#" Value="protected internal virtual void OnColumnChanging (System.Data.DataColumnChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnChanging(class System.Data.DataColumnChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnColumnChanging (e As DataColumnChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnColumnChanging(System::Data::DataColumnChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnChanging : System.Data.DataColumnChangeEventArgs -&gt; unit&#xA;override this.OnColumnChanging : System.Data.DataColumnChangeEventArgs -&gt; unit" Usage="dataTable.OnColumnChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataColumnChangeEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f7631-964">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataColumnChangeEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-964">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f7631-965"><see cref="E:System.Data.DataTable.ColumnChanging" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-965">Raises the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-966">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-966">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f7631-967">개요를 보려면 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-967">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f7631-968">재정의 하는 경우 <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-968">When overriding <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-969">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-969">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-970">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-970">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="dataTable.OnPropertyChanging pcevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcevent"><span data-ttu-id="f7631-971">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-971">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f7631-972"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-972">Raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-973">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-973">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f7631-974">개요를 보려면 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-974">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f7631-975">재정의 하는 경우 <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-975">When overriding <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-976">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-976">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-977">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-977">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRemoveColumn">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoveColumn (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoveColumn(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoveColumn (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoveColumn(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="abstract member OnRemoveColumn : System.Data.DataColumn -&gt; unit&#xA;override this.OnRemoveColumn : System.Data.DataColumn -&gt; unit" Usage="dataTable.OnRemoveColumn column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="f7631-978">제거 중인 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-978">The <see cref="T:System.Data.DataColumn" /> being removed.</span></span></param>
        <summary><span data-ttu-id="f7631-979"><see cref="T:System.Data.DataTable" />이 제거 중임을 <see cref="T:System.Data.DataColumn" />에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-979">Notifies the <see cref="T:System.Data.DataTable" /> that a <see cref="T:System.Data.DataColumn" /> is being removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-980">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-980">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f7631-981">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-981">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f7631-982">재정의 하는 경우 <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-982">When overriding <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-983">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-983">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-984">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-984">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowChanged (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowChanged(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowChanged (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowChanged(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowChanged : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowChanged : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f7631-985">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataRowChangeEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-985">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f7631-986"><see cref="E:System.Data.DataTable.RowChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-986">Raises the <see cref="E:System.Data.DataTable.RowChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-987">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-987">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f7631-988">개요를 보려면 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-988">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f7631-989">재정의 하는 경우 <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-989">When overriding <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-990">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-990">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-991">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-991">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnRowChanging (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowChanging(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowChanging (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowChanging(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowChanging : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowChanging : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f7631-992">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataRowChangeEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-992">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f7631-993"><see cref="E:System.Data.DataTable.RowChanging" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-993">Raises the <see cref="E:System.Data.DataTable.RowChanging" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-994">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-994">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f7631-995">개요를 보려면 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-995">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f7631-996">재정의 하는 경우 <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-996">When overriding <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-997">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-997">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-998">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-998">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleted (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleted(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleted (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleted(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDeleted : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowDeleted : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f7631-999">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataRowChangeEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-999">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f7631-1000"><see cref="E:System.Data.DataTable.RowDeleted" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1000">Raises the <see cref="E:System.Data.DataTable.RowDeleted" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1001">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1001">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f7631-1002">개요를 보려면 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1002">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f7631-1003">재정의 하는 경우 <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1003">When overriding <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1004">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1004">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-1005">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-1005">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleting (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleting(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleting (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleting(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDeleting : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowDeleting : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f7631-1006">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataRowChangeEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1006">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f7631-1007"><see cref="E:System.Data.DataTable.RowDeleting" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1007">Raises the <see cref="E:System.Data.DataTable.RowDeleting" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1008">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1008">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f7631-1009">개요를 보려면 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1009">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f7631-1010">재정의 하는 경우 <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1010">When overriding <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1011">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1011">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-1012">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-1012">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnTableCleared">
      <MemberSignature Language="C#" Value="protected virtual void OnTableCleared (System.Data.DataTableClearEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableCleared(class System.Data.DataTableClearEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableCleared (e As DataTableClearEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableCleared(System::Data::DataTableClearEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTableCleared : System.Data.DataTableClearEventArgs -&gt; unit&#xA;override this.OnTableCleared : System.Data.DataTableClearEventArgs -&gt; unit" Usage="dataTable.OnTableCleared e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableClearEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f7631-1013">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataTableClearEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1013">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f7631-1014"><see cref="E:System.Data.DataTable.TableCleared" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1014">Raises the <see cref="E:System.Data.DataTable.TableCleared" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1015">발생 합니다 <xref:System.Data.DataTable.TableCleared> 모든 행이 성공적으로 지워진 전에 직후 발생 하는 이벤트를 <xref:System.Data.DataTable.Clear%2A> 메서드 호출자에 게 컨트롤을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1015">Raises the <xref:System.Data.DataTable.TableCleared> event, which is fired immediately after all rows have been successfully cleared but before the <xref:System.Data.DataTable.Clear%2A> method returns control back to the caller.</span></span>  
  
 <span data-ttu-id="f7631-1016">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1016">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f7631-1017">개요를 보려면 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1017">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1018">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1018">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-1019">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-1019">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnTableClearing">
      <MemberSignature Language="C#" Value="protected virtual void OnTableClearing (System.Data.DataTableClearEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableClearing(class System.Data.DataTableClearEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableClearing (e As DataTableClearEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableClearing(System::Data::DataTableClearEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTableClearing : System.Data.DataTableClearEventArgs -&gt; unit&#xA;override this.OnTableClearing : System.Data.DataTableClearEventArgs -&gt; unit" Usage="dataTable.OnTableClearing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableClearEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f7631-1020">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataTableClearEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1020">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f7631-1021"><see cref="E:System.Data.DataTable.TableClearing" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1021">Raises the <see cref="E:System.Data.DataTable.TableClearing" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1022">발생 합니다 <xref:System.Data.DataTable.TableClearing> 처리 되기 전에 발생 하는 이벤트를 <xref:System.Data.DataTable.Clear%2A> 작업이 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1022">Raises the <xref:System.Data.DataTable.TableClearing> event, which is fired before processing of the <xref:System.Data.DataTable.Clear%2A> operation begins.</span></span>  
  
 <span data-ttu-id="f7631-1023">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1023">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f7631-1024">개요를 보려면 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1024">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1025">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1025">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-1026">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-1026">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnTableNewRow">
      <MemberSignature Language="C#" Value="protected virtual void OnTableNewRow (System.Data.DataTableNewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableNewRow(class System.Data.DataTableNewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableNewRow (e As DataTableNewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableNewRow(System::Data::DataTableNewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTableNewRow : System.Data.DataTableNewRowEventArgs -&gt; unit&#xA;override this.OnTableNewRow : System.Data.DataTableNewRowEventArgs -&gt; unit" Usage="dataTable.OnTableNewRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableNewRowEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f7631-1027">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataTableNewRowEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1027">A <see cref="T:System.Data.DataTableNewRowEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f7631-1028"><see cref="E:System.Data.DataTable.TableNewRow" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1028">Raises the <see cref="E:System.Data.DataTable.TableNewRow" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1029">발생 합니다 <xref:System.Data.DataTable.TableNewRow> 새 후 발생 하는 이벤트 <xref:System.Data.DataRow> 사용 하 여 만든 <xref:System.Data.DataTable.NewRow%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7631-1029">Raises the <xref:System.Data.DataTable.TableNewRow> event, which fires after a new <xref:System.Data.DataRow> has been created using <xref:System.Data.DataTable.NewRow%2A>.</span></span>  
  
 <span data-ttu-id="f7631-1030">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1030">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f7631-1031">개요를 보려면 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1031">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1032">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1032">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-1033">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-1033">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParentRelations">
      <MemberSignature Language="C#" Value="public System.Data.DataRelationCollection ParentRelations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRelationCollection ParentRelations" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ParentRelations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentRelations As DataRelationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRelationCollection ^ ParentRelations { System::Data::DataRelationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentRelations : System.Data.DataRelationCollection" Usage="System.Data.DataTable.ParentRelations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableParentRelationsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRelationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-1034">이 <see cref="T:System.Data.DataTable" />에 대한 부모 관계 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1034">Gets the collection of parent relations for this <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="f7631-1035">테이블의 부모 관계가 포함된 <see cref="T:System.Data.DataRelationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1035">A <see cref="T:System.Data.DataRelationCollection" /> that contains the parent relations for the table.</span></span> <span data-ttu-id="f7631-1036"><see cref="T:System.Data.DataRelation" /> 개체가 없으면 빈 컬렉션이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1036">An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7631-1037">다음 예제에서는 합니다 <xref:System.Data.DataTable.ParentRelations%2A> 각 부모를 반환 하도록 속성 <xref:System.Data.DataRelation> 에 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1037">The following example uses the <xref:System.Data.DataTable.ParentRelations%2A> property to return each parent <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-1038">각 관계에 대 한 인수로 사용 됩니다는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드는 <xref:System.Data.DataRow> 행의 배열을 반환 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1038">Each relation is then used as an argument in the <xref:System.Data.DataRow.GetParentRows%2A> method of the <xref:System.Data.DataRow> to return an array of rows.</span></span> <span data-ttu-id="f7631-1039">행의 각 열 값이 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1039">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ParentRelations Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ParentRelations Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ParentRelations Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ParentRelations Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1040">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1040">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Data.DataTable.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTablePrefixDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-1041"><see cref="T:System.Data.DataTable" />에 저장된 데이터의 XML 표현에 대한 네임스페이스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1041">Gets or sets the namespace for the XML representation of the data stored in the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="f7631-1042"><see cref="T:System.Data.DataTable" />의 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1042">The prefix of the <see cref="T:System.Data.DataTable" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1043">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1043">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKey">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] PrimaryKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn[] PrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.PrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrimaryKey As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Data::DataColumn ^&gt; ^ PrimaryKey { cli::array &lt;System::Data::DataColumn ^&gt; ^ get(); void set(cli::array &lt;System::Data::DataColumn ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryKey : System.Data.DataColumn[] with get, set" Usage="System.Data.DataTable.PrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.PrimaryKeyTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTablePrimaryKeyDescr")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-1044">데이터 테이블에 대한 기본 키로 사용되는 열의 배열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1044">Gets or sets an array of columns that function as primary keys for the data table.</span></span></summary>
        <value><span data-ttu-id="f7631-1045"><see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1045">An array of <see cref="T:System.Data.DataColumn" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1046">테이블의 기본 키 테이블의 레코드를 식별 하는 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1046">The primary key of a table must be unique to identify the record in the table.</span></span> <span data-ttu-id="f7631-1047">두 개 이상의 열으로 구성 하는 기본 키를 사용 하 여 테이블을 가질 수 이기도 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1047">It's also possible to have a table with a primary key made up of two or more columns.</span></span> <span data-ttu-id="f7631-1048">이 단일 열 충분 한 고유 값을 포함할 수 없는 경우 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1048">This occurs when a single column can't contain enough unique values.</span></span> <span data-ttu-id="f7631-1049">예를 들어 두 개의 열 기본 키를 "FirstName" 및 "LastName" 열의 구성 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1049">For example, a two column primary key might consist of a "FirstName" and "LastName" column.</span></span> <span data-ttu-id="f7631-1050">기본 키 둘 이상의 열을 구성할 수 있으므로 합니다 <xref:System.Data.DataTable.PrimaryKey%2A> 속성의 배열로 구성 됩니다 <xref:System.Data.DataColumn> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1050">Because primary keys can be made up of more than one column, the <xref:System.Data.DataTable.PrimaryKey%2A> property consists of an array of <xref:System.Data.DataColumn> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1051">첫 번째 예제에 대 한 기본 키 열을 반환 하는 방법을 보여 줍니다는 <xref:System.Data.DataTable> 에 표시 되는 `DataGrid`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1051">The first example shows how to return the primary key columns for a <xref:System.Data.DataTable> displayed in a `DataGrid`.</span></span> <span data-ttu-id="f7631-1052">두 번째 예제에 대 한 기본 키 열을 설정 하는 방법에 설명 된 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1052">The second example demonstrates how to set the primary key columns for a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.PrimaryKey Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.PrimaryKey Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.PrimaryKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.PrimaryKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DataException"><span data-ttu-id="f7631-1053">해당 키가 외래 키인 경우</span><span class="sxs-lookup"><span data-stu-id="f7631-1053">The key is a foreign key.</span></span></exception>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="P:System.Data.DataTable.PrimaryKey" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1054">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1054">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadXml">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7631-1055">XML 스키마와 데이터를 <see cref="T:System.Data.DataTable" />으로 읽어옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1055">Reads XML schema and data into the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1056">합니다 <xref:System.Data.DataTable.ReadXml%2A> 메서드는 데이터와 스키마를를 모두만 데이터를 읽을 수 있는 방법을 제공을 <xref:System.Data.DataTable> XML 문서에서 반면는 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드는 스키마만 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1056">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span> <span data-ttu-id="f7631-1057">읽기 데이터와 스키마 중 하나를 사용 합니다 `ReadXML` 포함 하는 오버 로드는 `XmlReadMode` 매개 변수를 해당 값을 설정 하 고 `ReadSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1057">To read both data and schema, use one of the `ReadXML` overloads that include the `XmlReadMode` parameter, and set its value to `ReadSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1058">True는 동일 합니다 <xref:System.Data.DataTable.WriteXml%2A> 및 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1058">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1059">XML 데이터 또는 스키마와 데이터를 작성 하는 `DataTable`를 사용 하 여를 `WriteXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1059">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="f7631-1060">스키마만를 작성 하려면 사용 된 `WriteXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1060">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1061"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1061">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.ReadXml" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1062">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1062">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : System.IO.Stream -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f7631-1063"><see cref="T:System.IO.Stream" />에서 파생되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1063">An object that derives from <see cref="T:System.IO.Stream" /></span></span></param>
        <summary><span data-ttu-id="f7631-1064">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 XML 스키마와 데이터를 <see cref="T:System.IO.Stream" />으로 읽어옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1064">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <returns><span data-ttu-id="f7631-1065">데이터를 읽는 데 사용되는 <see cref="T:System.Data.XmlReadMode" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1065">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1066">현재 <xref:System.Data.DataTable> 제공 된 데이터를 사용 하 여 해당 하위 항목이 로드 되 고 <xref:System.IO.Stream>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1066">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the supplied <xref:System.IO.Stream>.</span></span> <span data-ttu-id="f7631-1067">이 메서드의 동작은 동일 합니다는 <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> 이 경우에 데이터를 제외 하 고 메서드는 현재 테이블 및 해당 하위 항목에 대해서만 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1067">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="f7631-1068">합니다 <xref:System.Data.DataTable.ReadXml%2A> 메서드는 데이터와 스키마를를 모두만 데이터를 읽을 수 있는 방법을 제공을 <xref:System.Data.DataTable> XML 문서에서 반면는 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드는 스키마만 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1068">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="f7631-1069">True는 동일 합니다 <xref:System.Data.DataTable.WriteXml%2A> 및 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1069">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1070">XML 데이터 또는 스키마와 데이터를 작성 하는 `DataTable`를 사용 하 여를 `WriteXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1070">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="f7631-1071">스키마만를 작성 하려면 사용 된 `WriteXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1071">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1072"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1072">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="f7631-1073">인라인 스키마를 지정 된 경우 데이터를 로드 하기 전에 기존 관계형 구조를 확장 하는 인라인 스키마 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1073">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="f7631-1074">모든 충돌 (예를 들어 다른 데이터 형식으로 정의 된 동일한 테이블에 동일한 열)이 없으면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1074">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="f7631-1075">없는 인라인 스키마를 지정 하는 경우에 XML 문서의 구조에 따라 관계형 구조 필요에 따라 유추를 통해 확장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1075">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="f7631-1076">스키마를 확장할 수 없으므로 유추를 통해 모든 데이터를 노출 하기 위해 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1076">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1077">합니다 `DataSet` 해당 XML 요소를 연결 하지 않으며 `DataColumn` 또는 `DataTable` serialize 된 xml에서 ("_")와 같은 유효한 XML 문자는 이스케이프 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="f7631-1077">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="f7631-1078">`DataSet` 자체만 XML 요소 이름에 잘못 된 XML 문자를 이스케이프 하며 따라서 사용할 수 있습니다만 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1078">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="f7631-1079">XML 요소 이름에 유효한 문자는 이스케이프 처리 하는 동안 요소가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1079">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1080">다음 예제에서는 <xref:System.Data.DataTable> 두 개의 열과 10 개의 행을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1080">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="f7631-1081">이 예제에서는 기록 합니다 <xref:System.Data.DataTable> 스키마 및 데이터를 메모리 스트림으로 호출 하 여는 <xref:System.Data.DataTable.WriteXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1081">The example writes the <xref:System.Data.DataTable> schema and data to a memory stream, by invoking the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span> <span data-ttu-id="f7631-1082">이 예에서는 두 번째를 만듭니다 <xref:System.Data.DataTable> 호출을 <xref:System.Data.DataTable.ReadXml%2A> 스키마 및 데이터를 사용 하 여 입력 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1082">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXml#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXml/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXml#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXml/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1083">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1083">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (reader As TextReader) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : System.IO.TextReader -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f7631-1084">데이터를 읽는 데 사용할 <see cref="T:System.IO.TextReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1084">The <see cref="T:System.IO.TextReader" /> that will be used to read the data.</span></span></param>
        <summary><span data-ttu-id="f7631-1085">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 XML 스키마와 데이터를 <see cref="T:System.IO.TextReader" />으로 읽어옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1085">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <returns><span data-ttu-id="f7631-1086">데이터를 읽는 데 사용되는 <see cref="T:System.Data.XmlReadMode" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1086">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1087">현재 <xref:System.Data.DataTable> 제공 된 데이터를 사용 하 여 해당 하위 항목이 로드 되 고 <xref:System.IO.TextReader>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1087">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the supplied <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="f7631-1088">이 메서드의 동작은 동일 합니다는 <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> 이 경우에 데이터를 제외 하 고 메서드는 현재 테이블 및 해당 하위 항목에 대해서만 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1088">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="f7631-1089">합니다 <xref:System.Data.DataTable.ReadXml%2A> 메서드는 데이터와 스키마를를 모두만 데이터를 읽을 수 있는 방법을 제공을 <xref:System.Data.DataTable> XML 문서에서 반면는 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드는 스키마만 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1089">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="f7631-1090">True는 동일 합니다 <xref:System.Data.DataTable.WriteXml%2A> 및 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1090">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1091">XML 데이터 또는 스키마와 데이터를 작성 하는 `DataTable`를 사용 하 여를 `WriteXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1091">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="f7631-1092">스키마만를 작성 하려면 사용 된 `WriteXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1092">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1093"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1093">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="f7631-1094">인라인 스키마를 지정 된 경우 데이터를 로드 하기 전에 기존 관계형 구조를 확장 하는 인라인 스키마 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1094">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="f7631-1095">모든 충돌 (예를 들어 다른 데이터 형식으로 정의 된 동일한 테이블에 동일한 열)이 없으면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1095">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="f7631-1096">없는 인라인 스키마를 지정 하는 경우에 XML 문서의 구조에 따라 관계형 구조 필요에 따라 유추를 통해 확장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1096">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="f7631-1097">스키마를 확장할 수 없으므로 유추를 통해 모든 데이터를 노출 하기 위해 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1097">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1098">합니다 `DataSet` 해당 XML 요소를 연결 하지 않으며 `DataColumn` 또는 `DataTable` serialize 된 xml에서 ("_")와 같은 유효한 XML 문자는 이스케이프 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="f7631-1098">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="f7631-1099">`DataSet` 자체만 XML 요소 이름에 잘못 된 XML 문자를 이스케이프 하며 따라서 사용할 수 있습니다만 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1099">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="f7631-1100">XML 요소 이름에 유효한 문자는 이스케이프 처리 하는 동안 요소가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1100">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1101">다음 예제에서는 <xref:System.Data.DataTable> 두 개의 열과 10 개의 행을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1101">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="f7631-1102">이 예제에서는 기록 합니다 <xref:System.Data.DataTable> 스키마 및 데이터를 메모리 스트림으로 호출 하 여는 <xref:System.Data.DataTable.WriteXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1102">The example writes the <xref:System.Data.DataTable> schema and data to a memory stream, by invoking the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span> <span data-ttu-id="f7631-1103">이 예에서는 두 번째를 만듭니다 <xref:System.Data.DataTable> 호출을 <xref:System.Data.DataTable.ReadXml%2A> 스키마 및 데이터를 사용 하 여 입력 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1103">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlText/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1104">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1104">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (fileName As String) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : string -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="f7631-1105">데이터를 읽을 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1105">The name of the file from which to read the data.</span></span></param>
        <summary><span data-ttu-id="f7631-1106">지정된 파일로부터 XML 스키마와 데이터를 <see cref="T:System.Data.DataTable" />로 읽어옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1106">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> from the specified file.</span></span></summary>
        <returns><span data-ttu-id="f7631-1107">데이터를 읽는 데 사용되는 <see cref="T:System.Data.XmlReadMode" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1107">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1108">현재 <xref:System.Data.DataTable> 해당 하위 항목에 제공 된 명명 된 파일에서 데이터를 사용 하 여 로드 되 고 <xref:System.String>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1108">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the file named in the supplied <xref:System.String>.</span></span> <span data-ttu-id="f7631-1109">이 메서드의 동작은 동일 합니다는 <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> 이 경우에 데이터를 제외 하 고 메서드는 현재 테이블 및 해당 하위 항목에 대해서만 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1109">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="f7631-1110">합니다 <xref:System.Data.DataTable.ReadXml%2A> 메서드는 데이터와 스키마를를 모두만 데이터를 읽을 수 있는 방법을 제공을 <xref:System.Data.DataTable> XML 문서에서 반면는 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드는 스키마만 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1110">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="f7631-1111">True는 동일 합니다 <xref:System.Data.DataTable.WriteXml%2A> 및 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1111">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1112">XML 데이터 또는 스키마와 데이터를 작성 하는 `DataTable`를 사용 하 여를 `WriteXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1112">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="f7631-1113">스키마만를 작성 하려면 사용 된 `WriteXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1113">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1114"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1114">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="f7631-1115">인라인 스키마를 지정 된 경우 데이터를 로드 하기 전에 기존 관계형 구조를 확장 하는 인라인 스키마 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1115">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="f7631-1116">모든 충돌 (예를 들어 다른 데이터 형식으로 정의 된 동일한 테이블에 동일한 열)이 없으면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1116">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="f7631-1117">없는 인라인 스키마를 지정 하는 경우에 XML 문서의 구조에 따라 관계형 구조 필요에 따라 유추를 통해 확장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1117">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="f7631-1118">스키마를 확장할 수 없으므로 유추를 통해 모든 데이터를 노출 하기 위해 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1118">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1119">합니다 `DataSet` 해당 XML 요소를 연결 하지 않으며 `DataColumn` 또는 `DataTable` serialize 된 xml에서 ("_")와 같은 유효한 XML 문자는 이스케이프 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="f7631-1119">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="f7631-1120">`DataSet` 자체만 XML 요소 이름에 잘못 된 XML 문자를 이스케이프 하며 따라서 사용할 수 있습니다만 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1120">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="f7631-1121">XML 요소 이름에 유효한 문자는 이스케이프 처리 하는 동안 요소가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1121">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
```csharp  
using System.Data;  
public class A {  
   static void Main(string[] args) {  
      DataTable tabl = new DataTable("mytable");  
      tabl.Columns.Add(new DataColumn("id", typeof(int)));  
      for (int i = 0; i < 10; i++) {  
         DataRow row = tabl.NewRow();  
         row["id"] = i;  
         tabl.Rows.Add(row);  
      }  
      tabl.WriteXml("f.xml", XmlWriteMode.WriteSchema);  
      DataTable newt = new DataTable();  
      newt.ReadXml("f.xml");  
   }  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1122">다음 예제에서는 <xref:System.Data.DataTable> 두 개의 열과 10 개의 행을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1122">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="f7631-1123">예제에서는 기록 된 <xref:System.Data.DataTable> 스키마와 데이터 디스크를 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1123">The example writes the <xref:System.Data.DataTable> schema and data to disk.</span></span> <span data-ttu-id="f7631-1124">이 예에서는 두 번째를 만듭니다 <xref:System.Data.DataTable> 호출을 <xref:System.Data.DataTable.ReadXml%2A> 스키마 및 데이터를 사용 하 여 입력 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1124">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1125">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1125">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (reader As XmlReader) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : System.Xml.XmlReader -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f7631-1126">데이터를 읽는 데 사용할 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1126">The <see cref="T:System.Xml.XmlReader" /> that will be used to read the data.</span></span></param>
        <summary><span data-ttu-id="f7631-1127">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 XML 스키마와 데이터를 <see cref="T:System.Xml.XmlReader" />로 읽어옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1127">Reads XML Schema and Data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="f7631-1128">데이터를 읽는 데 사용되는 <see cref="T:System.Data.XmlReadMode" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1128">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1129">현재 <xref:System.Data.DataTable> 해당 하위 항목에 제공 된 명명 된 파일에서 데이터를 사용 하 여 로드 되 고 <xref:System.Xml.XmlReader>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1129">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the file named in the supplied <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="f7631-1130">이 메서드의 동작은 동일 합니다는 <xref:System.Data.DataTable.ReadXml%2A> 이 경우에 데이터를 제외 하 고 메서드는 현재 테이블 및 해당 하위 항목에 대해서만 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1130">The behavior of this method is identical to that of the <xref:System.Data.DataTable.ReadXml%2A> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="f7631-1131">합니다 <xref:System.Data.DataTable.ReadXml%2A> 메서드는 데이터와 스키마를를 모두만 데이터를 읽을 수 있는 방법을 제공을 <xref:System.Data.DataTable> XML 문서에서 반면는 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드는 스키마만 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1131">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="f7631-1132">True는 동일 합니다 <xref:System.Data.DataTable.WriteXml%2A> 및 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1132">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1133">XML 데이터 또는 스키마와 데이터를 작성 하는 `DataTable`를 사용 하 여를 `WriteXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1133">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="f7631-1134">스키마만를 작성 하려면 사용 된 `WriteXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1134">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1135"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1135">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="f7631-1136">인라인 스키마를 지정 된 경우 데이터를 로드 하기 전에 기존 관계형 구조를 확장 하는 인라인 스키마 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1136">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="f7631-1137">모든 충돌 (예를 들어 다른 데이터 형식으로 정의 된 동일한 테이블에 동일한 열)이 없으면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1137">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="f7631-1138">없는 인라인 스키마를 지정 하는 경우에 XML 문서의 구조에 따라 관계형 구조 필요에 따라 유추를 통해 확장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1138">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="f7631-1139">스키마를 확장할 수 없으므로 유추를 통해 모든 데이터를 노출 하기 위해 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1139">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1140">합니다 `DataSet` 해당 XML 요소를 연결 하지 않으며 `DataColumn` 또는 `DataTable` serialize 된 xml에서 ("_")와 같은 유효한 XML 문자는 이스케이프 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="f7631-1140">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="f7631-1141">`DataSet` 자체만 XML 요소 이름에 잘못 된 XML 문자를 이스케이프 하며 따라서 사용할 수 있습니다만 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1141">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="f7631-1142">XML 요소 이름에 유효한 문자는 이스케이프 처리 하는 동안 요소가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1142">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1143">다음 예제에서는 <xref:System.Data.DataTable> 두 개의 열과 10 개의 행을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1143">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="f7631-1144">이 예제에서는 기록 합니다 <xref:System.Data.DataTable> 스키마와 데이터를는 <xref:System.Xml.XmlReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1144">The example writes the <xref:System.Data.DataTable> schema and data to an <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="f7631-1145">이 예에서는 두 번째를 만듭니다 <xref:System.Data.DataTable> 호출을 <xref:System.Data.DataTable.ReadXml%2A> 스키마와 데이터로 채우는 방법은 <xref:System.Xml.XmlReader> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="f7631-1145">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data from the <xref:System.Xml.XmlReader> instance.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlXmlReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlXmlReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1146">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1146">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadXmlSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7631-1147">XML 스키마를 <see cref="T:System.Data.DataTable" />으로 읽어옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1147">Reads an XML schema into the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1148">사용 하 여는 `ReadXmlSchema` 에 대 한 스키마를 만드는 메서드를 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1148">Use the `ReadXmlSchema` method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-1149">스키마는 테이블, 관계 및 제약 조건 정의가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1149">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f7631-1150">스키마는 XML 문서를 작성 하려면 사용 된 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1150">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="f7631-1151">XML 스키마는 XSD 표준에 따라 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1151">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="f7631-1152">합니다 `ReadXmlSchema` 일반적으로 메서드를 호출 하기 전에 <xref:System.Data.DataTable.ReadXml%2A> 채우는 데 사용 되는 메서드는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1152">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.ReadXmlSchema" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1153">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1153">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : System.IO.Stream -&gt; unit" Usage="dataTable.ReadXmlSchema stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f7631-1154">스키마를 읽는 데 사용되는 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1154">The stream used to read the schema.</span></span></param>
        <summary><span data-ttu-id="f7631-1155">지정된 스트림을 사용하여 XML 스키마를 <see cref="T:System.Data.DataTable" />로 읽어옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1155">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1156">사용 하 여는 <xref:System.Data.DataTable.ReadXmlSchema%2A> 에 대 한 스키마를 만드는 메서드를 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1156">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-1157">스키마는 테이블, 관계 및 제약 조건 정의가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1157">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f7631-1158">스키마는 XML 문서를 작성 하려면 사용 된 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1158">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="f7631-1159">XML 스키마는 XSD 표준에 따라 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1159">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="f7631-1160">Xs:type 형식과 msdata:DataType 일치 하지 않는 경우 데이터 손상이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1160">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="f7631-1161">예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1161">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="f7631-1162">합니다 `ReadXmlSchema` 일반적으로 메서드를 호출 하기 전에 <xref:System.Data.DataTable.ReadXml%2A> 채우는 데 사용 되는 메서드는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1162">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f7631-1163">XML 스키마를 사용 하 여 중첩 된 관계를 만들려면 암시적 중첩 된 요소를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1163">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="f7631-1164">또한 명시적 열 이름을 사용 하 여 중첩 된 관계를 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1164">You can also configure the nested relation to use explicit column names.</span></span> <span data-ttu-id="f7631-1165">요소 중첩된 관계에 참여 하려면 해당 Datatable에서 암시적으로 중첩 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1165">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1166">다음 콘솔 응용 프로그램을 만듭니다 <xref:System.Data.DataTable>에 쓰고 해당 테이블에 대 한 스키마를 <xref:System.IO.MemoryStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1166">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="f7631-1167">그런 다음 예제에서는 새 <xref:System.Data.DataTable> 저장된 된 XML 스키마에서 해당 스키마를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1167">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlIOStream#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlIOStream/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlIOStream#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlIOStream/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1168">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1168">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : System.IO.TextReader -&gt; unit" Usage="dataTable.ReadXmlSchema reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f7631-1169">스키마 정보를 읽는 데 사용되는 <see cref="T:System.IO.TextReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1169">The <see cref="T:System.IO.TextReader" /> used to read the schema information.</span></span></param>
        <summary><span data-ttu-id="f7631-1170">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 XML 스키마를 <see cref="T:System.IO.TextReader" />로 읽어옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1170">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1171">사용 하 여는 <xref:System.Data.DataTable.ReadXmlSchema%2A> 에 대 한 스키마를 만드는 메서드를 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1171">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-1172">스키마는 테이블, 관계 및 제약 조건 정의가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1172">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f7631-1173">스키마는 XML 문서를 작성 하려면 사용 된 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1173">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="f7631-1174">XML 스키마는 XSD 표준에 따라 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1174">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="f7631-1175">Xs:type 형식과 msdata:DataType 일치 하지 않는 경우 데이터 손상이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1175">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="f7631-1176">예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1176">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="f7631-1177">합니다 `ReadXmlSchema` 일반적으로 메서드를 호출 하기 전에 <xref:System.Data.DataTable.ReadXml%2A> 채우는 데 사용 되는 메서드는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1177">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f7631-1178">XML 스키마를 사용 하 여 중첩 된 관계를 만들려면 암시적 중첩 된 요소를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1178">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="f7631-1179">또한 명시적 열 이름을 사용 하 여 중첩 된 관계를 재구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1179">You can also reconfigure the nested relation to use explicit column names.</span></span> <span data-ttu-id="f7631-1180">요소 중첩된 관계에 참여 하려면 해당 Datatable에서 암시적으로 중첩 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1180">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1181">다음 콘솔 응용 프로그램을 만듭니다 <xref:System.Data.DataTable>에 쓰고 해당 테이블에 대 한 스키마를 <xref:System.IO.MemoryStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1181">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="f7631-1182">그런 다음 예제에서는 새 <xref:System.Data.DataTable> 하 고 저장된 된 XML 스키마에서 해당 스키마를 읽고 사용 하는 <xref:System.IO.StreamReader> (에서 상속 하는 <xref:System.IO.TextReader>) 해당 원본으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1182">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using a <xref:System.IO.StreamReader> (which inherits from <xref:System.IO.TextReader>) as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchema#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchema/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchema#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchema/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1183">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1183">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : string -&gt; unit" Usage="dataTable.ReadXmlSchema fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="f7631-1184">스키마 정보를 읽을 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1184">The name of the file from which to read the schema information.</span></span></param>
        <summary><span data-ttu-id="f7631-1185">지정된 파일로부터 XML 스키마를 <see cref="T:System.Data.DataTable" />로 읽어옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1185">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> from the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1186">사용 하 여는 <xref:System.Data.DataTable.ReadXmlSchema%2A> 에 대 한 스키마를 만드는 메서드를 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1186">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-1187">스키마는 테이블, 관계 및 제약 조건 정의가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1187">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f7631-1188">스키마는 XML 문서를 작성 하려면 사용 된 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1188">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="f7631-1189">XML 스키마는 XSD 표준에 따라 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1189">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="f7631-1190">Xs:type 형식과 msdata:DataType 일치 하지 않는 경우 데이터 손상이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1190">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="f7631-1191">예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1191">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="f7631-1192">합니다 `ReadXmlSchema` 일반적으로 메서드를 호출 하기 전에 <xref:System.Data.DataTable.ReadXml%2A> 채우는 데 사용 되는 메서드는 `DataTable`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1192">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the `DataTable`.</span></span>  
  
 <span data-ttu-id="f7631-1193">XML 스키마를 사용 하 여 중첩 된 관계를 만들려면 암시적 중첩 된 요소를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1193">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="f7631-1194">또한 명시적 열 이름을 사용 하 여 중첩 된 관계를 재구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1194">You can also reconfigure the nested relation to use explicit column names.</span></span> <span data-ttu-id="f7631-1195">요소 중첩된 관계에 참여 하려면 해당 Datatable에서 암시적으로 중첩 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1195">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1196">다음 콘솔 응용 프로그램에서는 새 <xref:System.Data.DataTable>, 파일을 해당 테이블의 스키마를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1196">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a file.</span></span> <span data-ttu-id="f7631-1197">그런 다음 예제에서는 새 <xref:System.Data.DataTable> 및 파일을 사용 하 여 해당 원본으로 저장된 된 XML 스키마에서 해당 스키마를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1197">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using the file as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchemaString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchemaString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1198">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1198">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : System.Xml.XmlReader -&gt; unit" Usage="dataTable.ReadXmlSchema reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f7631-1199">스키마 정보를 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1199">The <see cref="T:System.Xml.XmlReader" /> used to read the schema information.</span></span></param>
        <summary><span data-ttu-id="f7631-1200">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 XML 스키마를 <see cref="T:System.Xml.XmlReader" />로 읽어옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1200">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1201">사용 하 여는 <xref:System.Data.DataTable.ReadXmlSchema%2A> 에 대 한 스키마를 만드는 메서드를 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1201">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-1202">스키마는 테이블, 관계 및 제약 조건 정의가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1202">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f7631-1203">스키마는 XML 문서를 작성 하려면 사용 된 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1203">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="f7631-1204">XML 스키마는 XSD 표준에 따라 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1204">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="f7631-1205">Xs:type 형식과 msdata:DataType 일치 하지 않는 경우 데이터 손상이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1205">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="f7631-1206">예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1206">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="f7631-1207">합니다 `ReadXmlSchema` 일반적으로 메서드를 호출 하기 전에 <xref:System.Data.DataTable.ReadXml%2A> 채우는 데 사용 되는 메서드는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1207">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1208">XML 스키마를 사용 하 여 중첩 된 관계를 만드는 방법은 암시적 중첩 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1208">The way to create a nested relation using XML schema is to have implicit nested elements.</span></span> <span data-ttu-id="f7631-1209">또한 중첩된 관계 명시적 열 이름을 사용 하도록 다시 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1209">Additionally, the nested relation could be re-wired, to use explicit column names.</span></span> <span data-ttu-id="f7631-1210">요소가 중첩된 관계에 참여 하려면 해당 Datatable에 대 한 암시적으로 중첩 될 수는 것이 반드시 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1210">It is mandatory for elements to be implicitly nested for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1211">다음 콘솔 응용 프로그램을 만듭니다 <xref:System.Data.DataTable>에 쓰고 해당 테이블에 대 한 스키마를 <xref:System.IO.MemoryStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1211">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="f7631-1212">그런 다음 예제에서는 새 <xref:System.Data.DataTable> 하 고 저장된 된 XML 스키마에서 해당 스키마를 읽고 사용 하는 <xref:System.Xml.XmlTextReader> (에서 상속 하는 <xref:System.Xml.XmlReader>) 해당 원본으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1212">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using a <xref:System.Xml.XmlTextReader> (which inherits from <xref:System.Xml.XmlReader>) as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchemaReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchemaReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1213">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1213">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSerializable">
      <MemberSignature Language="C#" Value="protected virtual void ReadXmlSerializable (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReadXmlSerializable(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReadXmlSerializable (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReadXmlSerializable(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadXmlSerializable : System.Xml.XmlReader -&gt; unit&#xA;override this.ReadXmlSerializable : System.Xml.XmlReader -&gt; unit" Usage="dataTable.ReadXmlSerializable reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f7631-1214"><see cref="T:System.Xml.XmlReader" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1214">A <see cref="T:System.Xml.XmlReader" /> object.</span></span></param>
        <summary><span data-ttu-id="f7631-1215">XML 스트림에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1215">Reads from an XML stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberSignature Language="F#" Value="member this.RejectChanges : unit -&gt; unit" Usage="dataTable.RejectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-1216">테이블이 로드된 이후 또는 <see cref="M:System.Data.DataTable.AcceptChanges" />가 마지막으로 호출된 이후에 변경된 내용을 모두 롤백합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1216">Rolls back all changes that have been made to the table since it was loaded, or the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1217">때 <xref:System.Data.DataTable.RejectChanges%2A> 가 호출 된 <xref:System.Data.DataRow> 아직 편집 모드에에서 있는 개체의 편집이 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1217">When <xref:System.Data.DataTable.RejectChanges%2A> is called, any <xref:System.Data.DataRow> objects that are still in edit-mode cancel their edits.</span></span> <span data-ttu-id="f7631-1218">새 행이 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1218">New rows are removed.</span></span> <span data-ttu-id="f7631-1219">사용 하 여 행을 <xref:System.Data.DataRowState> 로 설정 `Modified` 또는 `Deleted` 원래 상태로 다시 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1219">Rows with the <xref:System.Data.DataRowState> set to `Modified` or `Deleted` return back to their original state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1220">다음 예제에서는 몇 가지 변경 내용에는 <xref:System.Data.DataTable>, 하지만 호출 하 여 변경 내용을 거부를 <xref:System.Data.DataTable.RejectChanges%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1220">The following example makes several changes to a <xref:System.Data.DataTable>, but rejects the changes by invoking the <xref:System.Data.DataTable.RejectChanges%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.RejectChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RejectChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RejectChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RejectChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1221">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1221">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-1222">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-1222">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemotingFormat">
      <MemberSignature Language="C#" Value="public System.Data.SerializationFormat RemotingFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SerializationFormat RemotingFormat" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.RemotingFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property RemotingFormat As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SerializationFormat RemotingFormat { System::Data::SerializationFormat get(); void set(System::Data::SerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.RemotingFormat : System.Data.SerializationFormat with get, set" Usage="System.Data.DataTable.RemotingFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-1223">serialization 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1223">Gets or sets the serialization format.</span></span></summary>
        <value><span data-ttu-id="f7631-1224"><see langword="Binary" /> 또는 <see langword="Xml" /> serialization을 지정하는 <see cref="T:System.Data.SerializationFormat" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1224">A <see cref="T:System.Data.SerializationFormat" /> enumeration specifying either <see langword="Binary" /> or <see langword="Xml" /> serialization.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1225">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1225">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="dataTable.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-1226"><see cref="T:System.Data.DataTable" />을 원래 상태로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1226">Resets the <see cref="T:System.Data.DataTable" /> to its original state.</span></span> <span data-ttu-id="f7631-1227">다시 설정은 테이블의 모든 데이터, 인덱스, 관계 및 열을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1227">Reset removes all data, indexes, relations, and columns of the table.</span></span> <span data-ttu-id="f7631-1228">DataSet에 DataTable이 포함된 경우 테이블을 다시 설정한 후 테이블은 DataSet의 일부가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1228">If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1229">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1229">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-1230">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-1230">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RowChanged">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowChanged As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowChanged;" />
      <MemberSignature Language="F#" Value="member this.RowChanged : System.Data.DataRowChangeEventHandler " Usage="member this.RowChanged : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowChangedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-1231"><see cref="T:System.Data.DataRow" />가 변경된 후에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1231">Occurs after a <see cref="T:System.Data.DataRow" /> has been changed successfully.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1232">자세한 내용은 [DataTable 이벤트 처리](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1232">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1233">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1233">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RowChanging">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowChanging" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowChanging As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowChanging;" />
      <MemberSignature Language="F#" Value="member this.RowChanging : System.Data.DataRowChangeEventHandler " Usage="member this.RowChanging : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowChangingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-1234"><see cref="T:System.Data.DataRow" />가 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1234">Occurs when a <see cref="T:System.Data.DataRow" /> is changing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1235">자세한 내용은 [DataTable 이벤트 처리](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1235">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowChanging Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanging Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowChanging Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanging Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1236">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1236">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RowDeleted">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleted As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowDeleted;" />
      <MemberSignature Language="F#" Value="member this.RowDeleted : System.Data.DataRowChangeEventHandler " Usage="member this.RowDeleted : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowDeletedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-1237">테이블의 행이 삭제된 후 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1237">Occurs after a row in the table has been deleted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1238">자세한 내용은 [DataTable 이벤트 처리](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1238">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowDeleted Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleted Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowDeleted Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleted Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1239">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1239">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RowDeleting">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleting As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowDeleting;" />
      <MemberSignature Language="F#" Value="member this.RowDeleting : System.Data.DataRowChangeEventHandler " Usage="member this.RowDeleting : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowDeletingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-1240">테이블의 행이 삭제되기 직전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1240">Occurs before a row in the table is about to be deleted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1241">자세한 내용은 [DataTable 이벤트 처리](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1241">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowDeleting Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowDeleting Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1242">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1242">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public System.Data.DataRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As DataRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowCollection ^ Rows { System::Data::DataRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rows : System.Data.DataRowCollection" Usage="System.Data.DataTable.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-1243">이 테이블에 속한 행의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1243">Gets the collection of rows that belong to this table.</span></span></summary>
        <value><span data-ttu-id="f7631-1244"><see cref="T:System.Data.DataRowCollection" /> 개체가 포함된 <see cref="T:System.Data.DataRow" />이거나, <see cref="T:System.Data.DataRow" /> 개체가 없으면 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1244">A <see cref="T:System.Data.DataRowCollection" /> that contains <see cref="T:System.Data.DataRow" /> objects; otherwise a null value if no <see cref="T:System.Data.DataRow" /> objects exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1245">새로 만들 <xref:System.Data.DataRow>를 사용 해야 합니다는 <xref:System.Data.DataTable.NewRow%2A> 새 개체를 반환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1245">To create a new <xref:System.Data.DataRow>, you must use the <xref:System.Data.DataTable.NewRow%2A> method to return a new object.</span></span> <span data-ttu-id="f7631-1246">이러한 개체에 대해 정의 된 스키마에 따라 자동으로 구성 됩니다 합니다 <xref:System.Data.DataTable> 의 컬렉션을 통해 <xref:System.Data.DataColumn> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1246">Such an object is automatically configured according to the schema defined for the <xref:System.Data.DataTable> through its collection of <xref:System.Data.DataColumn> objects.</span></span> <span data-ttu-id="f7631-1247">새 행을 만들고 행의 각 열에 대 한 값을 설정 후 행을 추가 합니다 <xref:System.Data.DataRowCollection> 를 사용 하 여를 `Add` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1247">After creating a new row and setting the values for each column in the row, add the row to the <xref:System.Data.DataRowCollection> using the `Add` method.</span></span>  
  
 <span data-ttu-id="f7631-1248">각 <xref:System.Data.DataRow> 컬렉션에 있는 테이블의 데이터 행을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1248">Each <xref:System.Data.DataRow> in the collection represents a row of data in the table.</span></span> <span data-ttu-id="f7631-1249">행의 열 값으로 변경 내용을 커밋합니다을 호출 해야 합니다 <xref:System.Data.DataTable.AcceptChanges%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1249">To commit a change to the value of a column in the row, you must invoke the <xref:System.Data.DataTable.AcceptChanges%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1250">다음 반환 하 고 행을 설정 하는 두 가지 예를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1250">The following shows two examples of returning and setting rows.</span></span> <span data-ttu-id="f7631-1251">사용 하 여 첫 번째 예제는 <xref:System.Data.DataTable.Rows%2A> 속성 하 고 모든 행에 대 한 각 열의 값을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1251">The first example uses the <xref:System.Data.DataTable.Rows%2A> property and prints the value of each column for every row.</span></span> <span data-ttu-id="f7631-1252">사용 하 여 두 번째 예제는 <xref:System.Data.DataTable> 개체의 <xref:System.Data.DataTable.NewRow%2A> 새 메서드 <xref:System.Data.DataRow> 의 스키마를 사용 하 여 개체를 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1252">The second example uses the <xref:System.Data.DataTable> object's <xref:System.Data.DataTable.NewRow%2A> method to create a new <xref:System.Data.DataRow> object with the schema of the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f7631-1253">행 값으로 설정한 후에 행이 추가 된 <xref:System.Data.DataRowCollection> 를 통해를 `Add` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1253">After setting the row values, the row is added to the <xref:System.Data.DataRowCollection> through the `Add` method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Rows Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Rows Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Rows Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Rows Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="T:System.Data.DataRow" />
        <altmember cref="T:System.Data.DataRowCollection" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1254">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1254">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7631-1255"><see cref="T:System.Data.DataRow" /> 개체의 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1255">Gets an array of <see cref="T:System.Data.DataRow" /> objects.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1256">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1256">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; System.Data.DataRow[]" Usage="dataTable.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-1257">모든 <see cref="T:System.Data.DataRow" /> 개체의 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1257">Gets an array of all <see cref="T:System.Data.DataRow" /> objects.</span></span></summary>
        <returns><span data-ttu-id="f7631-1258"><see cref="T:System.Data.DataRow" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1258">An array of <see cref="T:System.Data.DataRow" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1259">적절 한 정렬 순서를 지정 정렬 조건 <xref:System.Data.DataTable.Select(System.String,System.String)> 또는 <xref:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1259">To ensure the proper sort order, specify sort criteria with <xref:System.Data.DataTable.Select(System.String,System.String)> or <xref:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1260">다음 예제에서는 배열을 반환 <xref:System.Data.DataRow> 를 통해 개체를 <xref:System.Data.DataTable.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1260">The following example returns an array of <xref:System.Data.DataRow> objects through the <xref:System.Data.DataTable.Select%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1261">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1261">Creating and Using DataTables</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=191549"><span data-ttu-id="f7631-1262">Null 값</span><span class="sxs-lookup"><span data-stu-id="f7631-1262">Null Values</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression);" />
      <MemberSignature Language="F#" Value="member this.Select : string -&gt; System.Data.DataRow[]" Usage="dataTable.Select filterExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="filterExpression"><span data-ttu-id="f7631-1263">행을 필터링하기 위해 사용하는 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1263">The criteria to use to filter the rows.</span></span> <span data-ttu-id="f7631-1264">예를 들어, 행을 필터링하는 방법은 [DataView RowFilter 구문 [C#]](https://www.csharp-examples.net/dataview-rowfilter/)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f7631-1264">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](https://www.csharp-examples.net/dataview-rowfilter/).</span></span></param>
        <summary><span data-ttu-id="f7631-1265">필터 조건에 맞는 모든 <see cref="T:System.Data.DataRow" /> 개체의 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1265">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria.</span></span></summary>
        <returns><span data-ttu-id="f7631-1266"><see cref="T:System.Data.DataRow" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1266">An array of <see cref="T:System.Data.DataRow" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1267">만들려면를 `filterExpression` 인수에 적용 되는 동일한 규칙을 사용 합니다 <xref:System.Data.DataColumn> 클래스의 <xref:System.Data.DataColumn.Expression%2A> 필터 만들기에 대 한 속성 값.</span><span class="sxs-lookup"><span data-stu-id="f7631-1267">To create the `filterExpression` argument, use the same rules that apply to the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value for creating filters.</span></span>  
  
<span data-ttu-id="f7631-1268">적절 한 정렬 순서를 지정 정렬 조건 <xref:System.Data.DataTable.Select(System.String,System.String)> 또는 <xref:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1268">To ensure the proper sort order, specify sort criteria with <xref:System.Data.DataTable.Select(System.String,System.String)> or <xref:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)>.</span></span>
  
 <span data-ttu-id="f7631-1269">열 필터에 null 값이 있으면 결과 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1269">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1270">배열을 반환 하도록 필터 식을 사용 하는 다음 예제에서는 <xref:System.Data.DataRow> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1270">The following example uses a filter expression to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1271">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1271">Creating and Using DataTables</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=191549"><span data-ttu-id="f7631-1272">Null 값</span><span class="sxs-lookup"><span data-stu-id="f7631-1272">Null Values</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression, string sort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression, string sort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String, sort As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression, System::String ^ sort);" />
      <MemberSignature Language="F#" Value="member this.Select : string * string -&gt; System.Data.DataRow[]" Usage="dataTable.Select (filterExpression, sort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sort" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="filterExpression"><span data-ttu-id="f7631-1273">행을 필터링하기 위해 사용하는 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1273">The criteria to use to filter the rows.</span></span> <span data-ttu-id="f7631-1274">예를 들어, 행을 필터링하는 방법은 [DataView RowFilter 구문 [C#]](https://www.csharp-examples.net/dataview-rowfilter/)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f7631-1274">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](https://www.csharp-examples.net/dataview-rowfilter/).</span></span></param>
        <param name="sort"><span data-ttu-id="f7631-1275">열과 정렬 방향을 지정하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1275">A string specifying the column and sort direction.</span></span></param>
        <summary><span data-ttu-id="f7631-1276">필터 조건에 맞는 모든 <see cref="T:System.Data.DataRow" /> 개체의 배열을 지정된 정렬 순서대로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1276">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria, in the specified sort order.</span></span></summary>
        <returns><span data-ttu-id="f7631-1277">필터 식에 맞는 <see cref="T:System.Data.DataRow" /> 개체의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1277">An array of <see cref="T:System.Data.DataRow" /> objects matching the filter expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1278">폼에는 `filterExpression` 인수를 만들기에 대 한 동일한 규칙을 사용 합니다 <xref:System.Data.DataColumn> 클래스의 <xref:System.Data.DataColumn.Expression%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1278">To form the `filterExpression` argument, use the same rules for creating the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value.</span></span> <span data-ttu-id="f7631-1279">합니다 `Sort` 클래스의 만들기에 대 한 인수 또한 사용 하 여 동일한 규칙 <xref:System.Data.DataColumn.Expression%2A> 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1279">The `Sort` argument also uses the same rules for creating class's <xref:System.Data.DataColumn.Expression%2A> strings.</span></span>  
  
 <span data-ttu-id="f7631-1280">열 필터에 null 값이 있으면 결과 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1280">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1281">배열을 반환 하도록 필터 식을 사용 하는 다음 예제에서는 <xref:System.Data.DataRow> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1281">The following example uses a filter expression to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1282">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1282">Creating and Using DataTables</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=191549"><span data-ttu-id="f7631-1283">Null 값</span><span class="sxs-lookup"><span data-stu-id="f7631-1283">Null Values</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression, string sort, System.Data.DataViewRowState recordStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression, string sort, valuetype System.Data.DataViewRowState recordStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String, sort As String, recordStates As DataViewRowState) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression, System::String ^ sort, System::Data::DataViewRowState recordStates);" />
      <MemberSignature Language="F#" Value="member this.Select : string * string * System.Data.DataViewRowState -&gt; System.Data.DataRow[]" Usage="dataTable.Select (filterExpression, sort, recordStates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sort" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="recordStates" Type="System.Data.DataViewRowState" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="filterExpression"><span data-ttu-id="f7631-1284">행을 필터링하기 위해 사용하는 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1284">The criteria to use to filter the rows.</span></span> <span data-ttu-id="f7631-1285">예를 들어, 행을 필터링하는 방법은 [DataView RowFilter 구문 [C#]](https://www.csharp-examples.net/dataview-rowfilter/)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f7631-1285">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](https://www.csharp-examples.net/dataview-rowfilter/).</span></span></param>
        <param name="sort"><span data-ttu-id="f7631-1286">열과 정렬 방향을 지정하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1286">A string specifying the column and sort direction.</span></span></param>
        <param name="recordStates"><span data-ttu-id="f7631-1287"><see cref="T:System.Data.DataViewRowState" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1287">One of the <see cref="T:System.Data.DataViewRowState" /> values.</span></span></param>
        <summary><span data-ttu-id="f7631-1288">필터와 일치하는 모든 <see cref="T:System.Data.DataRow" /> 개체의 배열을 지정된 상태와 일치하는 정렬 순서대로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1288">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter in the order of the sort that match the specified state.</span></span></summary>
        <returns><span data-ttu-id="f7631-1289"><see cref="T:System.Data.DataRow" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1289">An array of <see cref="T:System.Data.DataRow" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1290">폼에는 `filterExpression` 인수를 만들기에 대 한 동일한 규칙을 사용 합니다 <xref:System.Data.DataColumn> 클래스의 <xref:System.Data.DataColumn.Expression%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1290">To form the `filterExpression` argument, use the same rules for creating the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value.</span></span> <span data-ttu-id="f7631-1291">합니다 `Sort` 클래스의 만들기에 대 한 인수 또한 사용 하 여 동일한 규칙 <xref:System.Data.DataColumn.Expression%2A> 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1291">The `Sort` argument also uses the same rules for creating class's <xref:System.Data.DataColumn.Expression%2A> strings.</span></span>  
  
 <span data-ttu-id="f7631-1292">열 필터에 null 값이 있으면 결과 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1292">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1293">다음 예제에서는 필터 식과 레코드 상태를 사용 하 여 배열을 반환할 <xref:System.Data.DataRow> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1293">The following example uses a filter expression and record state to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1294">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1294">Creating and Using DataTables</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=191549"><span data-ttu-id="f7631-1295">Null 값</span><span class="sxs-lookup"><span data-stu-id="f7631-1295">Null Values</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Data.DataTable.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-1296"><see cref="T:System.ComponentModel.ISite" />에 대한 <see cref="T:System.Data.DataTable" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1296">Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="f7631-1297"><see cref="T:System.ComponentModel.ISite" />에 대한 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1297">An <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataTable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1298">사이트 바인딩를 <xref:System.ComponentModel.Component> 에 <xref:System.ComponentModel.Container> 서로 통신할 수 있도록 할 뿐만 아니라 컨테이너에서 해당 구성 요소를 관리할 수 있는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1298">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Container> and enable communication between them, as well as provide a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1299">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1299">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IListSource.ContainsListCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-1300">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f7631-1300">For a description of this member, see <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</span></span></summary>
        <value><span data-ttu-id="f7631-1301">해당 컬렉션이 <see cref="T:System.Collections.IList" /> 개체의 컬렉션이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1301"><see langword="true" /> if the collection is a collection of <see cref="T:System.Collections.IList" /> objects; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1302">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="f7631-1302">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f7631-1303"><xref:System.Data.DataTable> 인스턴스가 <xref:System.ComponentModel.IListSource> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1303">It can be used only when the <xref:System.Data.DataTable> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IListSource.GetList</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-1304">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IListSource.GetList" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f7631-1304">For a description of this member, see <see cref="M:System.ComponentModel.IListSource.GetList" />.</span></span></summary>
        <returns><span data-ttu-id="f7631-1305">해당 개체에서 데이터 소스에 바인딩될 수 있는 <see cref="T:System.Collections.IList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1305">An <see cref="T:System.Collections.IList" /> that can be bound to a data source from the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1306">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="f7631-1306">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f7631-1307"><xref:System.Data.DataTable> 인스턴스가 <xref:System.ComponentModel.IListSource> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1307">It can be used only when the <xref:System.Data.DataTable> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="f7631-1308"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1308">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="f7631-1309"><see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1309">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object.</span></span></param>
        <summary><span data-ttu-id="f7631-1310"><see cref="T:System.Data.DataTable" />을 serialize하는 데 필요한 데이터로 serialization 정보 개체를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1310">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.GetSchema">
      <MemberSignature Language="C#" Value="System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema" />
      <MemberSignature Language="VB.NET" Value="Function GetSchema () As XmlSchema Implements IXmlSerializable.GetSchema" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Xml::Schema::XmlSchema ^ System.Xml.Serialization.IXmlSerializable.GetSchema() = System::Xml::Serialization::IXmlSerializable::GetSchema;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-1311">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f7631-1311">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span></span></summary>
        <returns><span data-ttu-id="f7631-1312"><see cref="T:System.Xml.Schema.XmlSchema" /> 메서드에 의해 생성되고 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 메서드가 사용하는 개체의 XML 표현을 설명하는 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1312">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1313">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="f7631-1313">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f7631-1314"><xref:System.Data.DataSet> 인스턴스가 <xref:System.Xml.Serialization.IXmlSerializable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1314">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.ReadXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Sub ReadXml (reader As XmlReader) Implements IXmlSerializable.ReadXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.ReadXml(System::Xml::XmlReader ^ reader) = System::Xml::Serialization::IXmlSerializable::ReadXml;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f7631-1315">XmlReader입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1315">An XmlReader.</span></span></param>
        <summary><span data-ttu-id="f7631-1316">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f7631-1316">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1317">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="f7631-1317">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f7631-1318"><xref:System.Data.DataSet> 인스턴스가 <xref:System.Xml.Serialization.IXmlSerializable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1318">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.WriteXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Sub WriteXml (writer As XmlWriter) Implements IXmlSerializable.WriteXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.WriteXml(System::Xml::XmlWriter ^ writer) = System::Xml::Serialization::IXmlSerializable::WriteXml;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f7631-1319">XmlWriter입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1319">An XmlWriter.</span></span></param>
        <summary><span data-ttu-id="f7631-1320">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f7631-1320">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1321">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="f7631-1321">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f7631-1322"><xref:System.Data.DataSet> 인스턴스가 <xref:System.Xml.Serialization.IXmlSerializable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1322">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableCleared">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableClearEventHandler TableCleared;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableClearEventHandler TableCleared" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableCleared" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableCleared As DataTableClearEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableClearEventHandler ^ TableCleared;" />
      <MemberSignature Language="F#" Value="member this.TableCleared : System.Data.DataTableClearEventHandler " Usage="member this.TableCleared : System.Data.DataTableClearEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableClearEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-1323"><see cref="T:System.Data.DataTable" />이 지워진 다음 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1323">Occurs after a <see cref="T:System.Data.DataTable" /> is cleared.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1324">합니다 <xref:System.Data.DataTable.TableCleared> 이벤트는 모든 행이 성공적으로 지워진 전에 직후 발생 합니다.는 <xref:System.Data.DataTable.Clear%2A> 메서드 호출자에 게 컨트롤을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1324">The <xref:System.Data.DataTable.TableCleared> event is fired immediately after all rows have been successfully cleared but before the <xref:System.Data.DataTable.Clear%2A> method returns control back to the caller.</span></span> <span data-ttu-id="f7631-1325"><xref:System.Data.DataTable.TableCleared> 지우기 작업 하는 동안 모든 예외가 있는 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1325">The <xref:System.Data.DataTable.TableCleared> event is not fired if there are any exceptions during the clear operation.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1326">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1326">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-1327">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-1327">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TableClearing">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableClearEventHandler TableClearing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableClearEventHandler TableClearing" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableClearing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableClearing As DataTableClearEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableClearEventHandler ^ TableClearing;" />
      <MemberSignature Language="F#" Value="member this.TableClearing : System.Data.DataTableClearEventHandler " Usage="member this.TableClearing : System.Data.DataTableClearEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableClearEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-1328"><see cref="T:System.Data.DataTable" />이 지워질 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1328">Occurs when a <see cref="T:System.Data.DataTable" /> is cleared.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1329"><xref:System.Data.DataTable.TableClearing> 이벤트가 처리 되기 전에 <xref:System.Data.DataTable.Clear%2A> 작업이 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1329">The <xref:System.Data.DataTable.TableClearing> event is fired before processing of the <xref:System.Data.DataTable.Clear%2A> operation begins.</span></span> <span data-ttu-id="f7631-1330">이 이벤트는 때를 <xref:System.Data.DataTable.Clear%2A> 테이블 0 개의 행을 포함 하는 경우에 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1330">This event is always fired when the <xref:System.Data.DataTable.Clear%2A> method is invoked, even if the table contains zero rows.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1331">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1331">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-1332">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-1332">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.TableName" />
      <MemberSignature Language="VB.NET" Value="Public Property TableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TableName : string with get, set" Usage="System.Data.DataTable.TableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableTableNameDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-1333"><see cref="T:System.Data.DataTable" />의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1333">Gets or sets the name of the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="f7631-1334"><see cref="T:System.Data.DataTable" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1334">The name of the <see cref="T:System.Data.DataTable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1335">합니다 <xref:System.Data.DataTable.TableName%2A> 부모에서이 테이블을 반환 하는 데 사용 됩니다 <xref:System.Data.DataSet> 개체의 <xref:System.Data.DataTableCollection> (반환한는 <xref:System.Data.DataSet.Tables%2A> 속성).</span><span class="sxs-lookup"><span data-stu-id="f7631-1335">The <xref:System.Data.DataTable.TableName%2A> is used to return this table from the parent <xref:System.Data.DataSet> object's <xref:System.Data.DataTableCollection> (returned by the <xref:System.Data.DataSet.Tables%2A> property).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1336">다음 예제에서는 인쇄 합니다 <xref:System.Data.DataTable.TableName%2A> 컬렉션의 각 테이블에 대해 <xref:System.Data.DataTable> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1336">The following example prints the <xref:System.Data.DataTable.TableName%2A> for each table in a collection of <xref:System.Data.DataTable> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.TableName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.TableName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.TableName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.TableName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f7631-1337"><see langword="null" /> 또는 빈 문자열("")이 전달되고 이 테이블이 컬렉션에 속하는 경우</span><span class="sxs-lookup"><span data-stu-id="f7631-1337"><see langword="null" /> or empty string ("") is passed in and this table belongs to a collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="f7631-1338">같은 이름을 가진 테이블이 이미 들어 있는 컬렉션에 테이블이 속한 경우.</span><span class="sxs-lookup"><span data-stu-id="f7631-1338">The table belongs to a collection that already has a table with the same name.</span></span> <span data-ttu-id="f7631-1339">비교 시 대/소문자가 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1339">(Comparison is case-sensitive).</span></span></exception>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Data.DataSet.Tables" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1340">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1340">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TableNewRow">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableNewRowEventHandler TableNewRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableNewRowEventHandler TableNewRow" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableNewRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableNewRow As DataTableNewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableNewRowEventHandler ^ TableNewRow;" />
      <MemberSignature Language="F#" Value="member this.TableNewRow : System.Data.DataTableNewRowEventHandler " Usage="member this.TableNewRow : System.Data.DataTableNewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableNewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7631-1341">새 <see cref="T:System.Data.DataRow" />가 삽입될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1341">Occurs when a new <see cref="T:System.Data.DataRow" /> is inserted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1342">새 한 후에 발생 <xref:System.Data.DataRow> 사용 하 여 만들어진 <xref:System.Data.DataTable.NewRow%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1342">Fires after a new <xref:System.Data.DataRow> has been created using <xref:System.Data.DataTable.NewRow%2A>.</span></span> <span data-ttu-id="f7631-1343">이 이벤트가 발생 하기 전에 호출 된 `NewRow` 메서드 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1343">This event is fired before the invoked `NewRow` method returns.</span></span> <span data-ttu-id="f7631-1344">새 <xref:System.Data.DataRow> 인스턴스는 분리 되어; 컬렉션에 추가하지 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1344">The new <xref:System.Data.DataRow> instance is detached; it has not been added to the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1345">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1345">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="f7631-1346">DataTable 이벤트 사용</span><span class="sxs-lookup"><span data-stu-id="f7631-1346">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataTable.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7631-1347">연결된 문자열이 있는 경우 <see cref="P:System.Data.DataTable.TableName" /> 및 <see cref="P:System.Data.DataTable.DisplayExpression" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1347">Gets the <see cref="P:System.Data.DataTable.TableName" /> and <see cref="P:System.Data.DataTable.DisplayExpression" />, if there is one as a concatenated string.</span></span></summary>
        <returns><span data-ttu-id="f7631-1348"><see cref="P:System.Data.DataTable.TableName" /> 및 <see cref="P:System.Data.DataTable.DisplayExpression" /> 값으로 구성된 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1348">A string consisting of the <see cref="P:System.Data.DataTable.TableName" /> and the <see cref="P:System.Data.DataTable.DisplayExpression" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1349">가져옵니다 합니다 <xref:System.Data.DataTable.TableName%2A> 하 고 <xref:System.Data.DataTable.DisplayExpression%2A> 에 대 한는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1349">Gets the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataTable.DisplayExpression%2A> for the <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1350">다음 예제에서는 반환 된 <xref:System.Data.DataTable.TableName%2A> 및 <xref:System.Data.DataTable.DisplayExpression%2A> 사용 하 여를 <xref:System.Data.DataTable.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1350">The following example returns the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataTable.DisplayExpression%2A> using the <xref:System.Data.DataTable.ToString%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1351">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1351">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteXml">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7631-1352"><see cref="T:System.Data.DataTable" />의 현재 내용을 XML로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1352">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1353">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1353">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1354">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1354">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1355">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1355">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1356">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1356">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1357">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1357">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1358"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1358">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1359">다음 콘솔 응용 프로그램 두 개를 만듭니다 <xref:System.Data.DataTable> 인스턴스, 각 추가 <xref:System.Data.DataSet>를 만듭니다를 <xref:System.Data.DataRelation> 두 관련 테이블을 선택한 다음 사용 하 여는 <xref:System.Data.DataTable.WriteXml%2A> 는부모테이블내에포함된데이터를쓸메서드<xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="f7631-1359">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="f7631-1360">이 예제에서는 설정 하는 경우 동작을 보여 줍니다는 `writeHierarchy` 매개 변수를 각각의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1360">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1361">이 예제에서는 WriteXml의 오버 로드 된 버전 중 하나를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1361">This example shows how to use one of the overloaded versions of WriteXml.</span></span> <span data-ttu-id="f7631-1362">사용할 수 있는 다른 예제를 오버 로드 개별 항목을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="f7631-1362">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlOverload/VB/source.vb#1)]  
  
 <span data-ttu-id="f7631-1363">이 예제에서는 콘솔 창에 다음 출력을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1363">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
</NewDataSet>  
==============================  
Customer table, with hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
          <xs:element name="Table2">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="OrderID" type="xs:int" />  
                <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
                <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
      <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" m  
sdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="OrderID" />  
      </xs:unique>  
      <xs:keyref name="CustomerOrder" refer="Constraint1">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="CustomerID" />  
      </xs:keyref>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
  <Table2>  
    <OrderID>1</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2003-12-02T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>2</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2004-01-03T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>3</OrderID>  
    <CustomerID>2</CustomerID>  
    <OrderDate>2004-11-13T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>4</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-16T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>5</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-22T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>6</OrderID>  
    <CustomerID>4</CustomerID>  
    <OrderDate>2004-06-15T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
</NewDataSet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1364">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1364">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream -&gt; unit" Usage="dataTable.WriteXml stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f7631-1365">데이터가 기록될 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1365">The stream to which the data will be written.</span></span></param>
        <summary><span data-ttu-id="f7631-1366">지정된 <see cref="T:System.IO.Stream" />를 사용하여 <see cref="T:System.Data.DataTable" />의 현재 콘텐츠를 XML로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1366">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1367">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1367">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1368">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1368">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1369">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1369">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1370">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1370">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1371">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1371">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1372"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1372">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1373">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1373">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter -&gt; unit" Usage="dataTable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f7631-1374">콘텐츠를 쓰는 데 사용할 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1374">The <see cref="T:System.IO.TextWriter" /> with which to write the content.</span></span></param>
        <summary><span data-ttu-id="f7631-1375">지정된 <see cref="T:System.IO.TextWriter" />를 사용하여 <see cref="T:System.Data.DataTable" />의 현재 콘텐츠를 XML로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1375">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1376">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1376">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1377">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1377">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1378">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1378">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1379">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1379">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1380">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1380">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1381"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1381">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1382">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1382">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string -&gt; unit" Usage="dataTable.WriteXml fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="f7631-1383">XML 데이터를 기록할 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1383">The file to which to write the XML data.</span></span></param>
        <summary><span data-ttu-id="f7631-1384">지정된 파일을 사용하여 <see cref="T:System.Data.DataTable" />의 현재 내용을 XML로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1384">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1385">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1385">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1386">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1386">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1387">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1387">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1388">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1388">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1389">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1389">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1390"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1390">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1391">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1391">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="dataTable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f7631-1392">내용을 기록하는 데 사용할 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1392">The <see cref="T:System.Xml.XmlWriter" /> with which to write the contents.</span></span></param>
        <summary><span data-ttu-id="f7631-1393">지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 <see cref="T:System.Data.DataTable" />의 현재 콘텐츠를 XML로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1393">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1394">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1394">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1395">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1395">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1396">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1396">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1397">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1397">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1398">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1398">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1399"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1399">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1400">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1400">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream * bool -&gt; unit" Usage="dataTable.WriteXml (stream, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f7631-1401">데이터가 기록될 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1401">The stream to which the data will be written.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f7631-1402"><see langword="true" />이면 현재 테이블과 모든 하위 항목의 내용을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1402">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="f7631-1403"><see langword="false" />(기본값)이면 현재 테이블의 데이터만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1403">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="f7631-1404">지정된 <see cref="T:System.IO.Stream" />를 사용하여 <see cref="T:System.Data.DataTable" />의 현재 콘텐츠를 XML로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1404">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="f7631-1405">테이블과 모든 하위 항목의 데이터를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1405">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1406">사용 합니다 <xref:System.Data.DataTable.WriteXmlSchema%2A> 에 대 한 스키마를 작성 하는 메서드를 <xref:System.Data.DataTable> XML 문서에 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1406">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f7631-1407">스키마는 테이블, 관계 및 제약 조건 정의가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1407">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f7631-1408">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1408">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f7631-1409">XML 문서에 데이터 쓰기를 사용 하 여를 <xref:System.Data.DataTable.WriteXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1409">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="f7631-1410">일반적으로 `WriteXml` 메서드는 현재 테이블에만 데이터를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1410">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="f7631-1411">관련 테이블이 현재 테이블과 모든 하위 항목에 대 한 데이터를 쓰는 데 사용 하 여 메서드를 호출 합니다는 `writeHierarchy` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1411">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1412"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1412">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1413">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1413">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (stream, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f7631-1414">데이터가 기록될 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1414">The stream to which the data will be written.</span></span></param>
        <param name="mode"><span data-ttu-id="f7631-1415"><see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1415">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <summary><span data-ttu-id="f7631-1416">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 지정된 파일에 <see cref="T:System.Data.XmlWriteMode" />의 현재 데이터를 쓰고 선택적으로 스키마를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1416">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="f7631-1417">스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1417">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1418">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1418">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1419">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1419">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1420">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1420">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1421">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1421">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1422">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1422">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1423"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1423">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1424">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1424">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter * bool -&gt; unit" Usage="dataTable.WriteXml (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f7631-1425">콘텐츠를 쓰는 데 사용할 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1425">The <see cref="T:System.IO.TextWriter" /> with which to write the content.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f7631-1426"><see langword="true" />이면 현재 테이블과 모든 하위 항목의 내용을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1426">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="f7631-1427"><see langword="false" />(기본값)이면 현재 테이블의 데이터만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1427">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="f7631-1428">지정된 <see cref="T:System.IO.TextWriter" />를 사용하여 <see cref="T:System.Data.DataTable" />의 현재 콘텐츠를 XML로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1428">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="f7631-1429">테이블과 모든 하위 항목의 데이터를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1429">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1430">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1430">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1431">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1431">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1432">일반적으로 `WriteXml` 메서드는 현재 테이블에만 데이터를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1432">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="f7631-1433">현재 테이블과 모든 하위 항목, 관련 테이블에 대 한 데이터를 작성 하려면 메서드를 호출 합니다 `writeHierarchy` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1433">To write the data for the current table and all its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1434"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1434">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1435">다음 콘솔 응용 프로그램 두 개를 만듭니다 <xref:System.Data.DataTable> 인스턴스, 각 추가 <xref:System.Data.DataSet>를 만듭니다를 <xref:System.Data.DataRelation> 두 관련 테이블을 선택한 다음 사용 하 여는 <xref:System.Data.DataTable.WriteXml%2A> 는부모테이블내에포함된데이터를쓸메서드<xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="f7631-1435">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="f7631-1436">이 예제에서는 설정 하는 경우 동작을 보여 줍니다 합니다 `writeHierarchy` 매개 변수를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1436">The example demonstrates the behavior when setting the `writeHierarchy` parameter to `true`.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXml#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXml/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXml#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXml/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1437">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1437">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (writer, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f7631-1438">문서를 쓰는 데 사용되는 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1438">The <see cref="T:System.IO.TextWriter" /> used to write the document.</span></span></param>
        <param name="mode"><span data-ttu-id="f7631-1439"><see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1439">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <summary><span data-ttu-id="f7631-1440">지정된 <see cref="T:System.Data.DataTable" />와 <see cref="T:System.IO.TextWriter" />를 사용하여 <see cref="T:System.Data.XmlWriteMode" />의 현재 데이터를 쓰고 선택적으로 스키마를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1440">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="f7631-1441">스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1441">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1442">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1442">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1443">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1443">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1444">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1444">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1445">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1445">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1446">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1446">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1447"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1447">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1448">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1448">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string * bool -&gt; unit" Usage="dataTable.WriteXml (fileName, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="f7631-1449">XML 데이터를 기록할 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1449">The file to which to write the XML data.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f7631-1450"><see langword="true" />이면 현재 테이블과 모든 하위 항목의 내용을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1450">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="f7631-1451"><see langword="false" />(기본값)이면 현재 테이블의 데이터만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1451">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="f7631-1452">지정된 파일을 사용하여 <see cref="T:System.Data.DataTable" />의 현재 내용을 XML로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1452">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified file.</span></span> <span data-ttu-id="f7631-1453">테이블과 모든 하위 항목의 데이터를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1453">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1454">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1454">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1455">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1455">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1456">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1456">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1457">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1457">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1458">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1458">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f7631-1459">일반적으로 `WriteXml` 메서드는 현재 테이블에만 데이터를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1459">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="f7631-1460">관련 테이블이 현재 테이블과 모든 하위 항목에 대 한 데이터를 쓰는 데 사용 하 여 메서드를 호출 합니다는 `writeHierarchy` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1460">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1461"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1461">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1462">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1462">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (fileName, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="f7631-1463">데이터가 기록될 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1463">The name of the file to which the data will be written.</span></span></param>
        <param name="mode"><span data-ttu-id="f7631-1464"><see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1464">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <summary><span data-ttu-id="f7631-1465">지정된 파일과 <see cref="T:System.Data.DataTable" />를 사용하여 <see cref="T:System.Data.XmlWriteMode" />에 대해 현재 데이터를 쓰고 선택적으로 스키마를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1465">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified file and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="f7631-1466">스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1466">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1467">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1467">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1468">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1468">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1469">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1469">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1470">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1470">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1471">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1471">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1472"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1472">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1473">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1473">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter * bool -&gt; unit" Usage="dataTable.WriteXml (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f7631-1474">내용을 기록하는 데 사용할 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1474">The <see cref="T:System.Xml.XmlWriter" /> with which to write the contents.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f7631-1475"><see langword="true" />이면 현재 테이블과 모든 하위 항목의 내용을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1475">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="f7631-1476"><see langword="false" />(기본값)이면 현재 테이블의 데이터만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1476">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="f7631-1477">지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 <see cref="T:System.Data.DataTable" />의 현재 콘텐츠를 XML로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1477">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1478">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1478">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1479">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1479">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1480">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1480">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1481">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1481">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1482">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1482">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f7631-1483">일반적으로 `WriteXml` 메서드는 현재 테이블에만 데이터를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1483">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="f7631-1484">현재 테이블 및 해당 하위 항목, 관련 테이블을 전체 데이터를 작성 하려면 메서드를 호출 합니다 `writeHierarchy` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1484">To write the data for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1485"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1485">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1486">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1486">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (writer, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f7631-1487">문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1487">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span></span></param>
        <param name="mode"><span data-ttu-id="f7631-1488"><see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1488">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <summary><span data-ttu-id="f7631-1489">지정된 <see cref="T:System.Data.DataTable" />와 <see cref="T:System.Xml.XmlWriter" />를 사용하여 <see cref="T:System.Data.XmlWriteMode" />의 현재 데이터를 쓰고 선택적으로 스키마를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1489">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="f7631-1490">스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1490">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1491">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1491">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1492">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1492">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1493">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1493">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1494">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1494">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1495">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1495">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1496"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1496">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1497">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1497">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (stream, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f7631-1498">데이터가 기록될 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1498">The stream to which the data will be written.</span></span></param>
        <param name="mode"><span data-ttu-id="f7631-1499"><see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1499">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f7631-1500"><see langword="true" />이면 현재 테이블과 모든 하위 항목의 내용을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1500">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="f7631-1501"><see langword="false" />(기본값)이면 현재 테이블의 데이터만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1501">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="f7631-1502">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 지정된 파일에 <see cref="T:System.Data.XmlWriteMode" />의 현재 데이터를 쓰고 선택적으로 스키마를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1502">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="f7631-1503">스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1503">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span> <span data-ttu-id="f7631-1504">테이블과 모든 하위 항목의 데이터를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1504">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1505">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 `DataTable` XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1505">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a `DataTable` into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1506">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 `XmlWriteMode` 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1506">To write both data and schema, use one of the overloads that includes the `XmlWriteMode` parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1507">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1507">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1508">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1508">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1509">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1509">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f7631-1510">일반적으로 `WriteXml` 메서드는 현재 테이블에 대 한 데이터만 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1510">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="f7631-1511">합니다 `WriteXml` 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 `DataTable` XML 문서로 반면는 `WriteXmlSchema` 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1511">The `WriteXml` method provides a way to write either data only, or both data and schema from a `DataTable` into an XML document, whereas the `WriteXmlSchema` method writes only the schema.</span></span> <span data-ttu-id="f7631-1512">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 `XmlWriteMode` 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1512">To write both data and schema, use one of the overloads that includes the `XmlWriteMode` parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1513">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1513">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1514">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1514">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1515">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1515">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f7631-1516">일반적으로 `WriteXml` 메서드는 현재 테이블에만 데이터를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1516">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="f7631-1517">관련 테이블이 현재 테이블과 모든 하위 항목에 대 한 데이터를 쓰는 데 사용 하 여 메서드를 호출 합니다는 `writeHierarchy` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1517">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1518"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1518">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1519">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1519">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (writer, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f7631-1520">문서를 쓰는 데 사용되는 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1520">The <see cref="T:System.IO.TextWriter" /> used to write the document.</span></span></param>
        <param name="mode"><span data-ttu-id="f7631-1521"><see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1521">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f7631-1522"><see langword="true" />이면 현재 테이블과 모든 하위 항목의 내용을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1522">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="f7631-1523"><see langword="false" />(기본값)이면 현재 테이블의 데이터만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1523">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="f7631-1524">지정된 <see cref="T:System.Data.DataTable" />와 <see cref="T:System.IO.TextWriter" />를 사용하여 <see cref="T:System.Data.XmlWriteMode" />의 현재 데이터를 쓰고 선택적으로 스키마를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1524">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="f7631-1525">스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1525">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span> <span data-ttu-id="f7631-1526">테이블과 모든 하위 항목의 데이터를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1526">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1527">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1527">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1528">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1528">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1529">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1529">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1530">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1530">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1531">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1531">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f7631-1532">일반적으로 `WriteXml` 메서드는 현재 테이블에 대 한 데이터만 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1532">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="f7631-1533">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1533">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1534">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1534">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1535">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1535">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1536">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1536">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1537">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1537">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f7631-1538">일반적으로 `WriteXml` 메서드는 현재 테이블에만 데이터를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1538">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="f7631-1539">관련 테이블이 현재 테이블과 모든 하위 항목에 대 한 데이터를 쓰는 데 사용 하 여 메서드를 호출 합니다는 `writeHierarchy` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1539">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1540"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1540">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1541">다음 콘솔 응용 프로그램 두 개를 만듭니다 <xref:System.Data.DataTable> 인스턴스, 각 추가 <xref:System.Data.DataSet>를 만듭니다를 <xref:System.Data.DataRelation> 두 관련 테이블을 선택한 다음 사용 하 여는 <xref:System.Data.DataTable.WriteXml%2A> 는부모테이블내에포함된데이터를쓸메서드<xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="f7631-1541">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="f7631-1542">이 예제에서는 설정 하는 경우 동작을 보여 줍니다는 `writeHierarchy` 매개 변수를 각각의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1542">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlIO#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlIO/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlIO#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlIO/VB/source.vb#1)]  
  
 <span data-ttu-id="f7631-1543">이 예제에서는 콘솔 창에 다음 출력을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1543">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
</NewDataSet>  
==============================  
Customer table, with hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
          <xs:element name="Table2">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="OrderID" type="xs:int" />  
                <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
                <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
      <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" m  
sdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="OrderID" />  
      </xs:unique>  
      <xs:keyref name="CustomerOrder" refer="Constraint1">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="CustomerID" />  
      </xs:keyref>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
  <Table2>  
    <OrderID>1</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2003-12-02T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>2</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2004-01-03T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>3</OrderID>  
    <CustomerID>2</CustomerID>  
    <OrderDate>2004-11-13T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>4</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-16T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>5</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-22T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>6</OrderID>  
    <CustomerID>4</CustomerID>  
    <OrderDate>2004-06-15T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
</NewDataSet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1544">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1544">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (fileName, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="f7631-1545">데이터가 기록될 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1545">The name of the file to which the data will be written.</span></span></param>
        <param name="mode"><span data-ttu-id="f7631-1546"><see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1546">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f7631-1547"><see langword="true" />이면 현재 테이블과 모든 하위 항목의 내용을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1547">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="f7631-1548"><see langword="false" />(기본값)이면 현재 테이블의 데이터만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1548">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="f7631-1549">지정된 파일과 <see cref="T:System.Data.DataTable" />를 사용하여 <see cref="T:System.Data.XmlWriteMode" />에 대해 현재 데이터를 쓰고 선택적으로 스키마를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1549">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified file and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="f7631-1550">스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1550">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span> <span data-ttu-id="f7631-1551">테이블과 모든 하위 항목의 데이터를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1551">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1552">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1552">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1553">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1553">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1554">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1554">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1555">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1555">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1556">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1556">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f7631-1557">일반적으로 `WriteXml` 메서드는 현재 테이블에 대 한 데이터만 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1557">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="f7631-1558">현재 테이블 및 스키마의 모든 데이터를 저장 하려는 경우는 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1558">If you want to save the data for the current table and all of schema, the <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1559">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1559">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1560">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1560">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1561">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1561">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1562">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1562">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f7631-1563">일반적으로 `WriteXml` 메서드는 현재 테이블에만 데이터를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1563">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="f7631-1564">에 현재 테이블과 모든 하위 항목, 관련 테이블에 대 한 데이터 쓰기를 사용 하 여 메서드를 호출 합니다 `writeHierarchy` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1564">To write the data for the current table and all descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1565"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1565">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1566">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1566">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (writer, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f7631-1567">문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1567">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span></span></param>
        <param name="mode"><span data-ttu-id="f7631-1568"><see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1568">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f7631-1569"><see langword="true" />이면 현재 테이블과 모든 하위 항목의 내용을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1569">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="f7631-1570"><see langword="false" />(기본값)이면 현재 테이블의 데이터만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1570">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="f7631-1571">지정된 <see cref="T:System.Data.DataTable" />와 <see cref="T:System.Xml.XmlWriter" />를 사용하여 <see cref="T:System.Data.XmlWriteMode" />의 현재 데이터를 쓰고 선택적으로 스키마를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1571">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="f7631-1572">스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1572">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span> <span data-ttu-id="f7631-1573">테이블과 모든 하위 항목의 데이터를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1573">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1574">합니다 <xref:System.Data.DataTable.WriteXml%2A> 메서드 제공 데이터와 스키마를 모두만 데이터를 작성 하는 방법을 <xref:System.Data.DataTable> XML 문서로 반면는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 메서드는 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1574">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f7631-1575">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용 합니다 <xref:System.Data.XmlWriteMode> 매개 변수를 해당 값을 설정 하 고 `WriteSchema`입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1575">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f7631-1576">True는 동일 합니다 <xref:System.Data.DataTable.ReadXml%2A> 및 <xref:System.Data.DataTable.ReadXmlSchema%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="f7631-1576">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f7631-1577">XML 데이터 또는 스키마와 데이터를 읽을 수는 `DataTable`를 사용 하 여를 `ReadXml` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1577">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f7631-1578">스키마만을 읽으려면 사용 된 `ReadXmlSchema` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1578">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f7631-1579">일반적으로 `WriteXml` 메서드는 현재 테이블에만 데이터를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1579">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="f7631-1580">현재 테이블 및 해당 하위 항목, 관련 테이블을 전체 데이터를 작성 하려면 메서드를 호출 합니다 `writeHierarchy` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1580">To write the data for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1581"><xref:System.InvalidOperationException> 경우의 열 형식에 throw 됩니다 합니다 `DataRow` 에서 읽거나 쓴 구현 되 <xref:System.Dynamic.IDynamicMetaObjectProvider> 구현 하지 않습니다 <xref:System.Xml.Serialization.IXmlSerializable>합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1581">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1582">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1582">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteXmlSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7631-1583"><see cref="T:System.Data.DataTable" />의 현재 데이터 구조를 XML 스키마로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1583">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1584">사용 합니다 <xref:System.Data.DataTable.WriteXmlSchema%2A> 에 대 한 스키마를 작성 하는 메서드를 <xref:System.Data.DataTable> XML 문서에 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1584">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f7631-1585">스키마는 테이블, 관계 및 제약 조건 정의가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1585">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f7631-1586">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1586">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f7631-1587">XML 문서에 데이터 쓰기를 사용 하 여를 <xref:System.Data.DataTable.WriteXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1587">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1588">다음 콘솔 응용 프로그램 두 개를 만듭니다 <xref:System.Data.DataTable> 인스턴스, 각 추가 <xref:System.Data.DataSet>를 만듭니다를 <xref:System.Data.DataRelation> 두 관련 테이블을 선택한 다음 사용 하 여는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 는부모테이블내에포함된데이터를쓸메서드<xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="f7631-1588">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="f7631-1589">이 예제에서는 설정 하는 경우 동작을 보여 줍니다는 `writeHierarchy` 매개 변수를 각각의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1589">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7631-1590">이 예제에서는 오버 로드 된 버전 중 하나를 사용 하는 방법을 보여 줍니다 `WriteXmlSchema` 다른 예제를 사용할 수 있는 오버 로드 개별 항목을 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1590">This example shows how to use one of the overloaded versions of `WriteXmlSchema` For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlSchemaOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchemaOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlSchemaOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchemaOverload/VB/source.vb#1)]  
  
 <span data-ttu-id="f7631-1591">이 예제에서는 콘솔 창에 다음 출력을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1591">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Ta  
ble1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
  </xs:element>  
</xs:schema>  
==============================  
Customer table, with hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
        <xs:element name="Table2">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="OrderID" type="xs:int" />  
              <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
              <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
    <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="OrderID" />  
    </xs:unique>  
    <xs:keyref name="CustomerOrder" refer="Constraint1">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="CustomerID" />  
    </xs:keyref>  
  </xs:element>  
</xs:schema>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1592">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1592">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.Stream -&gt; unit" Usage="dataTable.WriteXmlSchema stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f7631-1593">XML 스키마가 기록될 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1593">The stream to which the XML schema will be written.</span></span></param>
        <summary><span data-ttu-id="f7631-1594"><see cref="T:System.Data.DataTable" />의 현재 데이터 구조를 지정된 스트림에 XMl 스키마로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1594">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1595">사용 합니다 <xref:System.Data.DataTable.WriteXmlSchema%2A> 에 대 한 스키마를 작성 하는 메서드를 <xref:System.Data.DataTable> XML 문서에 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1595">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f7631-1596">스키마는 테이블, 관계 및 제약 조건 정의가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1596">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f7631-1597">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1597">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f7631-1598">XML 문서에 데이터 쓰기를 사용 하 여를 <xref:System.Data.DataTable.WriteXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1598">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1599">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1599">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.TextWriter -&gt; unit" Usage="dataTable.WriteXmlSchema writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f7631-1600">쓰기에 사용할 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1600">The <see cref="T:System.IO.TextWriter" /> with which to write.</span></span></param>
        <summary><span data-ttu-id="f7631-1601">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 <see cref="T:System.IO.TextWriter" />의 현재 데이터 구조를 XML 스키마로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1601">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1602">사용 합니다 <xref:System.Data.DataTable.WriteXmlSchema%2A> 에 대 한 스키마를 작성 하는 메서드를 <xref:System.Data.DataTable> XML 문서에 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1602">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f7631-1603">스키마는 테이블, 관계 및 제약 조건 정의가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1603">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f7631-1604">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1604">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f7631-1605">XML 문서에 데이터 쓰기를 사용 하 여를 <xref:System.Data.DataTable.WriteXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1605">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1606">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1606">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : string -&gt; unit" Usage="dataTable.WriteXmlSchema fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="f7631-1607">사용할 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1607">The name of the file to use.</span></span></param>
        <summary><span data-ttu-id="f7631-1608"><see cref="T:System.Data.DataTable" />의 현재 데이터 구조를 지정된 파일에 XML 스키마로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1608">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1609">사용 합니다 <xref:System.Data.DataTable.WriteXmlSchema%2A> 에 대 한 스키마를 작성 하는 메서드를 <xref:System.Data.DataTable> XML 문서에 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1609">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f7631-1610">스키마는 테이블, 관계 및 제약 조건 정의가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1610">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f7631-1611">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1611">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f7631-1612">XML 문서에 데이터 쓰기를 사용 하 여를 <xref:System.Data.DataTable.WriteXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1612">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1613">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1613">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.Xml.XmlWriter -&gt; unit" Usage="dataTable.WriteXmlSchema writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f7631-1614">사용할 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1614">The <see cref="T:System.Xml.XmlWriter" /> to use.</span></span></param>
        <summary><span data-ttu-id="f7631-1615">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 <see cref="T:System.Xml.XmlWriter" />의 현재 데이터 구조를 XML 스키마로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1615">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1616">사용 합니다 <xref:System.Data.DataTable.WriteXmlSchema%2A> 에 대 한 스키마를 작성 하는 메서드를 <xref:System.Data.DataTable> XML 문서에 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1616">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f7631-1617">스키마는 테이블, 관계 및 제약 조건 정의가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1617">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f7631-1618">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1618">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f7631-1619">XML 문서에 데이터 쓰기를 사용 하 여를 <xref:System.Data.DataTable.WriteXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1619">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1620">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1620">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.Stream stream, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.Stream stream, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::Stream ^ stream, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.Stream * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (stream, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f7631-1621">XML 스키마가 기록될 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1621">The stream to which the XML schema will be written.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f7631-1622"><see langword="true" />이면 현재 테이블과 모든 하위 항목의 스키마를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1622">If <see langword="true" />, write the schema of the current table and all its descendants.</span></span> <span data-ttu-id="f7631-1623"><see langword="false" />(기본값)이면 현재 테이블의 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1623">If <see langword="false" /> (the default value), write the schema for the current table only.</span></span></param>
        <summary><span data-ttu-id="f7631-1624"><see cref="T:System.Data.DataTable" />의 현재 데이터 구조를 지정된 스트림에 XMl 스키마로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1624">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified stream.</span></span> <span data-ttu-id="f7631-1625">테이블과 모든 하위 항목의 스키마를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1625">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1626">사용 합니다 <xref:System.Data.DataTable.WriteXmlSchema%2A> 에 대 한 스키마를 작성 하는 메서드를 <xref:System.Data.DataTable> XML 문서에 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1626">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f7631-1627">스키마는 테이블, 관계 및 제약 조건 정의가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1627">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f7631-1628">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1628">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f7631-1629">XML 문서에 데이터 쓰기를 사용 하 여를 <xref:System.Data.DataTable.WriteXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1629">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="f7631-1630">일반적으로 `WriteXmlSchema` 메서드는 현재 테이블의 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1630">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="f7631-1631">현재 테이블 및 해당 하위 항목, 관련 테이블을 전체에 대 한 스키마를 작성 하려면이 메서드를 호출 합니다 `writeHierarchy` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1631">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1632">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1632">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.TextWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.TextWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As TextWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::TextWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.TextWriter * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f7631-1633">쓰기에 사용할 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1633">The <see cref="T:System.IO.TextWriter" /> with which to write.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f7631-1634"><see langword="true" />이면 현재 테이블과 모든 하위 항목의 스키마를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1634">If <see langword="true" />, write the schema of the current table and all its descendants.</span></span> <span data-ttu-id="f7631-1635"><see langword="false" />(기본값)이면 현재 테이블의 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1635">If <see langword="false" /> (the default value), write the schema for the current table only.</span></span></param>
        <summary><span data-ttu-id="f7631-1636">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 <see cref="T:System.IO.TextWriter" />의 현재 데이터 구조를 XML 스키마로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1636">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="f7631-1637">테이블과 모든 하위 항목의 스키마를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1637">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1638">사용 합니다 <xref:System.Data.DataTable.WriteXmlSchema%2A> 에 대 한 스키마를 작성 하는 메서드를 <xref:System.Data.DataTable> XML 문서에 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1638">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f7631-1639">스키마는 테이블, 관계 및 제약 조건 정의가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1639">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f7631-1640">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1640">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f7631-1641">XML 문서에 데이터 쓰기를 사용 하 여를 <xref:System.Data.DataTable.WriteXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1641">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="f7631-1642">일반적으로 `WriteXmlSchema` 메서드는 현재 테이블의 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1642">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="f7631-1643">현재 테이블 및 해당 하위 항목, 관련 테이블을 전체에 대 한 스키마를 작성 하려면이 메서드를 호출 합니다 `writeHierarchy` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1643">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7631-1644">다음 콘솔 응용 프로그램 두 개를 만듭니다 <xref:System.Data.DataTable> 인스턴스, 각 추가 <xref:System.Data.DataSet>를 만듭니다를 <xref:System.Data.DataRelation> 두 관련 테이블을 선택한 다음 사용 하 여는 <xref:System.Data.DataTable.WriteXmlSchema%2A> 는부모테이블내에포함된데이터를쓸메서드<xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="f7631-1644">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="f7631-1645">이 예제에서는 설정 하는 경우 동작을 보여 줍니다는 `writeHierarchy` 매개 변수를 각각의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1645">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlSchema#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchema/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlSchema#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchema/VB/source.vb#1)]  
  
 <span data-ttu-id="f7631-1646">이 예제에서는 콘솔 창에 다음 출력을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1646">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Ta  
ble1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
  </xs:element>  
</xs:schema>  
==============================  
Customer table, with hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
        <xs:element name="Table2">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="OrderID" type="xs:int" />  
              <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
              <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
    <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="OrderID" />  
    </xs:unique>  
    <xs:keyref name="CustomerOrder" refer="Constraint1">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="CustomerID" />  
    </xs:keyref>  
  </xs:element>  
</xs:schema>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1647">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1647">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (string fileName, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(string fileName, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (fileName As String, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::String ^ fileName, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : string * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (fileName, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="f7631-1648">사용할 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1648">The name of the file to use.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f7631-1649"><see langword="true" />이면 현재 테이블과 모든 하위 항목의 스키마를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1649">If <see langword="true" />, write the schema of the current table and all its descendants.</span></span> <span data-ttu-id="f7631-1650"><see langword="false" />(기본값)이면 현재 테이블의 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1650">If <see langword="false" /> (the default value), write the schema for the current table only.</span></span></param>
        <summary><span data-ttu-id="f7631-1651"><see cref="T:System.Data.DataTable" />의 현재 데이터 구조를 지정된 파일에 XML 스키마로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1651">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified file.</span></span> <span data-ttu-id="f7631-1652">테이블과 모든 하위 항목의 스키마를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1652">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1653">사용 합니다 <xref:System.Data.DataTable.WriteXmlSchema%2A> 에 대 한 스키마를 작성 하는 메서드를 <xref:System.Data.DataTable> XML 문서에 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1653">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f7631-1654">스키마는 테이블, 관계 및 제약 조건 정의가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1654">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f7631-1655">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1655">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f7631-1656">XML 문서에 데이터 쓰기를 사용 하 여를 <xref:System.Data.DataTable.WriteXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1656">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="f7631-1657">일반적으로 `WriteXmlSchema` 메서드는 현재 테이블의 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1657">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="f7631-1658">현재 테이블 및 해당 하위 항목, 관련 테이블을 전체에 대 한 스키마를 작성 하려면이 메서드를 호출 합니다 `writeHierarchy` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1658">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1659">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1659">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.Xml.XmlWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.Xml.XmlWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As XmlWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::Xml::XmlWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.Xml.XmlWriter * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f7631-1660">문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1660">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f7631-1661"><see langword="true" />이면 현재 테이블과 모든 하위 항목의 스키마를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1661">If <see langword="true" />, write the schema of the current table and all its descendants.</span></span> <span data-ttu-id="f7631-1662"><see langword="false" />(기본값)이면 현재 테이블의 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1662">If <see langword="false" /> (the default value), write the schema for the current table only.</span></span></param>
        <summary><span data-ttu-id="f7631-1663">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 <see cref="T:System.Xml.XmlWriter" />의 현재 데이터 구조를 XML 스키마로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1663">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="f7631-1664">테이블과 모든 하위 항목의 스키마를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1664">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7631-1665">사용 합니다 <xref:System.Data.DataTable.WriteXmlSchema%2A> 에 대 한 스키마를 작성 하는 메서드를 <xref:System.Data.DataTable> XML 문서에 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1665">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f7631-1666">스키마는 테이블, 관계 및 제약 조건 정의가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1666">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f7631-1667">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1667">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f7631-1668">XML 문서에 데이터 쓰기를 사용 하 여를 <xref:System.Data.DataTable.WriteXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f7631-1668">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="f7631-1669">일반적으로 `WriteXmlSchema` 메서드는 현재 테이블의 스키마만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1669">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="f7631-1670">현재 테이블 및 해당 하위 항목, 관련 테이블을 전체에 대 한 스키마를 작성 하려면이 메서드를 호출 합니다 `writeHierarchy` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f7631-1670">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="f7631-1671">Creating and Using DataTables</span><span class="sxs-lookup"><span data-stu-id="f7631-1671">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>