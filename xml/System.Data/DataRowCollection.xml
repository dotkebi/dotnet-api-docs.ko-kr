<Type Name="DataRowCollection" FullName="System.Data.DataRowCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="800c76732af237fef8f4d8d6e48320ae78a8ccf5" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57934898" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataRowCollection : System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataRowCollection extends System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataRowCollection&#xA;Inherits InternalDataCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRowCollection sealed : System::Data::InternalDataCollectionBase" />
  <TypeSignature Language="F#" Value="type DataRowCollection = class&#xA;    inherit InternalDataCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.InternalDataCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="aba7d-101"><see cref="T:System.Data.DataTable" />에 대한 행 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-101">Represents a collection of rows for a <see cref="T:System.Data.DataTable" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aba7d-102">합니다 <xref:System.Data.DataRowCollection> 의 주요 구성 요소인는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-102">The <xref:System.Data.DataRowCollection> is a major component of the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="aba7d-103">하는 동안를 <xref:System.Data.DataColumnCollection> 테이블의 스키마를 정의 합니다 <xref:System.Data.DataRowCollection> 테이블에 대 한 실제 데이터가 포함 여기서 각 <xref:System.Data.DataRow> 에서 <xref:System.Data.DataRowCollection> 단일 행을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-103">While the <xref:System.Data.DataColumnCollection> defines the schema of the table, the <xref:System.Data.DataRowCollection> contains the actual data for the table, where each <xref:System.Data.DataRow> in the <xref:System.Data.DataRowCollection> represents a single row.</span></span>  
  
 <span data-ttu-id="aba7d-104">호출할 수 있습니다는 <xref:System.Data.DataRowCollection.Add%2A> 하 고 <xref:System.Data.DataRowCollection.Remove%2A> 삽입 및 삭제 방법 <xref:System.Data.DataRow> 에서 개체를 <xref:System.Data.DataRowCollection>.</span><span class="sxs-lookup"><span data-stu-id="aba7d-104">You can call the <xref:System.Data.DataRowCollection.Add%2A> and <xref:System.Data.DataRowCollection.Remove%2A> methods to insert and delete <xref:System.Data.DataRow> objects from the <xref:System.Data.DataRowCollection>.</span></span> <span data-ttu-id="aba7d-105">호출할 수도 있습니다는 <xref:System.Data.DataRowCollection.Find%2A> 검색 하는 방법 <xref:System.Data.DataRow> 기본 키 열에 있는 특정 값을 포함 하는 개체 및 <xref:System.Data.DataRowCollection.Contains%2A> 단일 단어 또는 구 문자 기반 데이터를 검색 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-105">You can also call the <xref:System.Data.DataRowCollection.Find%2A> method to search for <xref:System.Data.DataRow> objects that contain specific values in primary key columns, and the <xref:System.Data.DataRowCollection.Contains%2A> method to search character-based data for single words or phrases.</span></span>  
  
 <span data-ttu-id="aba7d-106">정렬 또는 필터링 등의 다른 작업에 대 한 합니다 <xref:System.Data.DataRowCollection>의 메서드를 사용 합니다 <xref:System.Data.DataRowCollection>의 연결 된 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-106">For other operations, such as sorting or filtering the <xref:System.Data.DataRowCollection>, use methods on the <xref:System.Data.DataRowCollection>'s associated <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aba7d-107">이 섹션의 첫 번째 예제에서 모든 행에 대해 열 1의 값을 인쇄 한 <xref:System.Data.DataRowCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-107">The first example in this section prints the value of column 1 for every row in a <xref:System.Data.DataRowCollection>.</span></span> <span data-ttu-id="aba7d-108">두 번째 예제를 사용 하 여 만든 새 행을 추가 합니다 <xref:System.Data.DataTable.NewRow%2A> 메서드를는 <xref:System.Data.DataRowCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-108">The second example adds a new row created by using the <xref:System.Data.DataTable.NewRow%2A> method to the <xref:System.Data.DataRowCollection>.</span></span>  
  
 [!code-csharp[Classic WebData DataRowCollection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRowCollection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRowCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="aba7d-109">이 유형은 다중 스레드 읽기 작업에 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-109">This type is safe for multithreaded read operations.</span></span> <span data-ttu-id="aba7d-110">모든 쓰기 작업을 동기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-110">You must synchronize any write operations.</span></span></threadsafe>
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aba7d-111"><see cref="T:System.Data.DataRow" />에 <see cref="T:System.Data.DataRowCollection" />를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-111">Adds a <see cref="T:System.Data.DataRow" /> to the <see cref="T:System.Data.DataRowCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.DataRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Data.DataRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (row As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Data::DataRow ^ row);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Data.DataRow -&gt; unit" Usage="dataRowCollection.Add row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="aba7d-112">추가할 <see cref="T:System.Data.DataRow" />입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-112">The <see cref="T:System.Data.DataRow" /> to add.</span></span></param>
        <summary><span data-ttu-id="aba7d-113">지정된 <see cref="T:System.Data.DataRow" />를 <see cref="T:System.Data.DataRowCollection" /> 개체에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-113">Adds the specified <see cref="T:System.Data.DataRow" /> to the <see cref="T:System.Data.DataRowCollection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aba7d-114">새 <xref:System.Data.DataRow>를 사용 해야 합니다는 <xref:System.Data.DataTable.NewRow%2A> 메서드를 <xref:System.Data.DataTable> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-114">To create a new <xref:System.Data.DataRow>, you must use the <xref:System.Data.DataTable.NewRow%2A> method of the <xref:System.Data.DataTable> class.</span></span> <span data-ttu-id="aba7d-115">사용 하는 경우는 <xref:System.Data.DataTable.NewRow%2A> 메서드를 새 <xref:System.Data.DataRow> 개체의 부모 스키마를 사용 하 여 반환 됩니다 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-115">When you use the <xref:System.Data.DataTable.NewRow%2A> method, a new <xref:System.Data.DataRow> object is returned using the schema of parent <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="aba7d-116">만든 후 합니다 <xref:System.Data.DataRow> 개체의 각 열에 대 한 값을 설정 하 고 사용 하 여는 <xref:System.Data.DataRowCollection.Add%2A> 개체 컬렉션에 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-116">After you create the <xref:System.Data.DataRow> object and set the values for each of its columns, use the <xref:System.Data.DataRowCollection.Add%2A> method to add the object to the collection.</span></span>  
  
 <span data-ttu-id="aba7d-117">사용자의 예외를 생성 하는 경우 예외를 생성 합니다 <xref:System.Data.DataTable.RowChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-117">Generates an exception if the user generates an exception in the <xref:System.Data.DataTable.RowChanging> event.</span></span> <span data-ttu-id="aba7d-118">예외가 발생 하는 경우 테이블에 행 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-118">If an exception occurs, the row is not added to the table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aba7d-119">다음 예제에서는 합니다 <xref:System.Data.DataRowCollection.Add%2A> 새로 추가 하는 방법 <xref:System.Data.DataRow> 에 <xref:System.Data.DataRowCollection> 개체.</span><span class="sxs-lookup"><span data-stu-id="aba7d-119">The following example uses the <xref:System.Data.DataRowCollection.Add%2A> method to add a new <xref:System.Data.DataRow> to a <xref:System.Data.DataRowCollection> object.</span></span>  
  
 [!code-csharp[Classic WebData DataRowCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Add Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRowCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aba7d-120">행이 null인 경우</span><span class="sxs-lookup"><span data-stu-id="aba7d-120">The row is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="aba7d-121">이 행이 다른 테이블에 속하거나 이 테이블에 이미 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="aba7d-121">The row either belongs to another table or already belongs to this table.</span></span></exception>
        <exception cref="T:System.Data.ConstraintException"><span data-ttu-id="aba7d-122">추가로 인해 제약 조건이 무효화되는경우</span><span class="sxs-lookup"><span data-stu-id="aba7d-122">The addition invalidates a constraint.</span></span></exception>
        <exception cref="T:System.Data.NoNullAllowedException"><span data-ttu-id="aba7d-123">추가하는 동안 <see cref="T:System.Data.DataColumn" />이 false인 <see cref="P:System.Data.DataColumn.AllowDBNull" />에 null을 삽입하려고 하는 경우</span><span class="sxs-lookup"><span data-stu-id="aba7d-123">The addition tries to put a null in a <see cref="T:System.Data.DataColumn" /> where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is false.</span></span></exception>
        <altmember cref="M:System.Data.DataRowCollection.Clear" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRow" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataRow Add (params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow Add(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.Add(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ParamArray values As Object()) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ Add(... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.Add : obj[] -&gt; System.Data.DataRow" Usage="dataRowCollection.Add values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="aba7d-124">새 행을 만드는데 사용하는 값 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-124">The array of values that are used to create the new row.</span></span></param>
        <summary><span data-ttu-id="aba7d-125">지정한 값을 사용하여 행을 만들고 그 행을 <see cref="T:System.Data.DataRowCollection" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-125">Creates a row using specified values and adds it to the <see cref="T:System.Data.DataRowCollection" />.</span></span></summary>
        <returns><span data-ttu-id="aba7d-126">없음</span><span class="sxs-lookup"><span data-stu-id="aba7d-126">None.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aba7d-127">경우는 <xref:System.Data.DataColumn> 개체에 해당 <xref:System.Data.DataColumn.AutoIncrement%2A> True로 설정 된 null이 전달 되어야 해당 열에 대 한 기본 값을 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-127">If a <xref:System.Data.DataColumn> object has its <xref:System.Data.DataColumn.AutoIncrement%2A> set to True, null should be passed to get the default value for that column.</span></span>  
  
 <span data-ttu-id="aba7d-128">예외는 수행 하는 동안 예외가 발생 하는 경우에 발생할 수 있습니다는 <xref:System.Data.DataTable.ColumnChanging> 또는 <xref:System.Data.DataTable.RowChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-128">Exceptions can also occur if you generate an exception during either a <xref:System.Data.DataTable.ColumnChanging> or <xref:System.Data.DataTable.RowChanging> event.</span></span> <span data-ttu-id="aba7d-129">예외가 발생 하는 경우 테이블에 행 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-129">If an exception occurs, the row is not added to the table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aba7d-130">다음 예제에서는 합니다 <xref:System.Data.DataRowCollection.Add%2A> 메서드를 만들고 새 <xref:System.Data.DataRow> 개체를 <xref:System.Data.DataRowCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-130">The following example uses the <xref:System.Data.DataRowCollection.Add%2A> method to create and add a new <xref:System.Data.DataRow> object to a <xref:System.Data.DataRowCollection>.</span></span>  
  
 [!code-csharp[Classic WebData DataRowCollection.Add1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Add1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRowCollection.Add1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Add1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="aba7d-131">배열이 테이블의 열 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="aba7d-131">The array is larger than the number of columns in the table.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="aba7d-132">값이 해당 열 형식과 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="aba7d-132">A value does not match its respective column type.</span></span></exception>
        <exception cref="T:System.Data.ConstraintException"><span data-ttu-id="aba7d-133">행을 추가하여 제약 조건을 무효화한 경우</span><span class="sxs-lookup"><span data-stu-id="aba7d-133">Adding the row invalidates a constraint.</span></span></exception>
        <exception cref="T:System.Data.NoNullAllowedException"><span data-ttu-id="aba7d-134"><see cref="P:System.Data.DataColumn.AllowDBNull" />이 false인 열에 null을 설정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="aba7d-134">Trying to put a null in a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is false.</span></span></exception>
        <altmember cref="M:System.Data.DataRowCollection.Clear" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRow" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="dataRowCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aba7d-135">모든 행의 컬렉션을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-135">Clears the collection of all rows.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Data.InvalidConstraintException"><span data-ttu-id="aba7d-136"><see cref="T:System.Data.ForeignKeyConstraint" />에 <see cref="T:System.Data.DataRowCollection" />가 적용되는 경우</span><span class="sxs-lookup"><span data-stu-id="aba7d-136">A <see cref="T:System.Data.ForeignKeyConstraint" /> is enforced on the <see cref="T:System.Data.DataRowCollection" />.</span></span></exception>
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aba7d-137">컬렉션에 있는 모든 행의 기본 키 열에 지정한 값이 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-137">Gets a value that indicates whether the primary key columns of any row in the collection contain the specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.Contains : obj -&gt; bool" Usage="dataRowCollection.Contains key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="aba7d-138">테스트할 기본 키 값입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-138">The value of the primary key to test for.</span></span></param>
        <summary><span data-ttu-id="aba7d-139">컬렉션에 있는 모든 행의 기본 키에 지정한 값이 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-139">Gets a value that indicates whether the primary key of any row in the collection contains the specified value.</span></span></summary>
        <returns><span data-ttu-id="aba7d-140">지정한 기본 키 값이 있는 <see cref="T:System.Data.DataRow" />가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-140"><see langword="true" /> if the collection contains a <see cref="T:System.Data.DataRow" /> with the specified primary key value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aba7d-141">사용 하는 <xref:System.Data.DataRowCollection.Contains%2A> 메서드를 <xref:System.Data.DataTable> 개체입니다는 <xref:System.Data.DataRowCollection> 해야에 개체가 속할 기본 키 열으로 지정 된 하나 이상의 열.</span><span class="sxs-lookup"><span data-stu-id="aba7d-141">To use the <xref:System.Data.DataRowCollection.Contains%2A> method, the <xref:System.Data.DataTable> object to which the <xref:System.Data.DataRowCollection> object belongs to must have at least one column designated as a primary key column.</span></span> <span data-ttu-id="aba7d-142">참조 된 <xref:System.Data.DataTable.PrimaryKey%2A> 기본 키 열을 만드는 방법에 대 한 자세한 정보에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-142">See the <xref:System.Data.DataTable.PrimaryKey%2A> property for more information about how to create a primary key column.</span></span>  
  
 <span data-ttu-id="aba7d-143">행에 지정된 된 값이 포함 되어 있는지 확인 했으면, 즉시 사용할 수는 <xref:System.Data.DataRowCollection.Find%2A> 특정 반환 하는 방법 <xref:System.Data.DataRow> 개체 값입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-143">As soon as you have determined that a row contains the specified value, you can use the <xref:System.Data.DataRowCollection.Find%2A> method to return the specific <xref:System.Data.DataRow> object that has the value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aba7d-144">다음 Visual Basic 예제에서는 합니다 <xref:System.Data.DataRowCollection.Contains%2A> 결정 하는 방법 여부를 <xref:System.Data.DataRowCollection> 특정 값을 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-144">The following Visual Basic example uses the <xref:System.Data.DataRowCollection.Contains%2A> method to determine whether a <xref:System.Data.DataRowCollection> object contains a specific value.</span></span>  
  
 [!code-vb[Classic WebData DataRowCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.MissingPrimaryKeyException"><span data-ttu-id="aba7d-145">이 테이블에 기본 키가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="aba7d-145">The table does not have a primary key.</span></span></exception>
        <altmember cref="P:System.Data.DataTable.PrimaryKey" />
        <altmember cref="M:System.Data.DataRowCollection.Find(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(object[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.Contains(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (keys As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(cli::array &lt;System::Object ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="member this.Contains : obj[] -&gt; bool" Usage="dataRowCollection.Contains keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="aba7d-146">테스트할 기본 키 값 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-146">An array of primary key values to test for.</span></span></param>
        <summary><span data-ttu-id="aba7d-147">컬렉션에 있는 모든 행의 기본 키 열에 개체 배열에 지정한 값이 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-147">Gets a value that indicates whether the primary key columns of any row in the collection contain the values specified in the object array.</span></span></summary>
        <returns><span data-ttu-id="aba7d-148">지정한 키 값이 있는 <see cref="T:System.Data.DataRowCollection" />가 <see cref="T:System.Data.DataRow" />에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-148"><see langword="true" /> if the <see cref="T:System.Data.DataRowCollection" /> contains a <see cref="T:System.Data.DataRow" /> with the specified key values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aba7d-149">사용 하는 <xref:System.Data.DataRowCollection.Contains%2A> 값의 배열 사용 하 여 메서드를 <xref:System.Data.DataTable> 개체는 <xref:System.Data.DataRowCollection> 개체가 속해 있어야 합니다에 기본 키로 지정 된 열의 배열이.</span><span class="sxs-lookup"><span data-stu-id="aba7d-149">To use the <xref:System.Data.DataRowCollection.Contains%2A> method with an array of values, the <xref:System.Data.DataTable> object to which the <xref:System.Data.DataRowCollection> object belongs must have an array of columns designated as primary keys.</span></span> <span data-ttu-id="aba7d-150">참조 된 <xref:System.Data.DataTable.PrimaryKey%2A> 배열의 기본 키 열을 만드는 방법에 대 한 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-150">See the <xref:System.Data.DataTable.PrimaryKey%2A> property for more information about how to create an array of primary key columns.</span></span> <span data-ttu-id="aba7d-151">배열 요소 수의 기본 키 열 수가 같아야 합니다 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-151">The number of array elements must correspond to the number of primary key columns in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="aba7d-152">행에 지정된 된 값이 포함 되어 있는지 확인 했으면, 즉시 사용 합니다 <xref:System.Data.DataRowCollection.Find%2A> 특정 반환 하는 방법 <xref:System.Data.DataRow> 개체 값입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-152">As soon as you have determined that a row contains the specified value, use the <xref:System.Data.DataRowCollection.Find%2A> method to return the specific <xref:System.Data.DataRow> object that has the value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aba7d-153">다음 Visual Basic 예제에서는 합니다 <xref:System.Data.DataRowCollection.Contains%2A> 에서 특정 행을 찾을 방법을 <xref:System.Data.DataRowCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-153">The following Visual Basic example uses the <xref:System.Data.DataRowCollection.Contains%2A> method to find a particular row in a <xref:System.Data.DataRowCollection> object.</span></span> <span data-ttu-id="aba7d-154">예제 테이블의 각 기본 키에 대해 하나의 요소 값의 배열을 만들고 다음 배열을 반환할 메서드에 전달 된 `true` 또는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-154">The example creates an array of values, one element for each primary key in the table, and then passes the array to the method to return a `true` or `false`.</span></span>  
  
 [!code-vb[Classic WebData DataRowCollection.Contains1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Contains1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.MissingPrimaryKeyException"><span data-ttu-id="aba7d-155">이 테이블에 기본 키가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="aba7d-155">The table does not have a primary key.</span></span></exception>
        <altmember cref="P:System.Data.DataTable.PrimaryKey" />
        <altmember cref="M:System.Data.DataRowCollection.Find(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aba7d-156">컬렉션의 모든 <see cref="T:System.Data.DataRow" /> 개체를 지정된 배열의 지정된 대상 배열 인덱스에서 시작하는 위치에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-156">Copies all the <see cref="T:System.Data.DataRow" /> objects from the collection into the given array, starting at the given destination array index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public override void CopyTo (Array ar, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyTo(class System.Array ar, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyTo (ar As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyTo(Array ^ ar, int index);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : Array * int -&gt; unit" Usage="dataRowCollection.CopyTo (ar, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.Array" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ar"><span data-ttu-id="aba7d-157"><see langword="DataRowCollection" />에서 복사한 요소의 대상인 1차원 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-157">The one-dimensional array that is the destination of the elements copied from the <see langword="DataRowCollection" />.</span></span> <span data-ttu-id="aba7d-158">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-158">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="aba7d-159">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-159">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="aba7d-160">컬렉션의 모든 <see cref="T:System.Data.DataRow" /> 개체를 지정된 배열의 지정된 대상 배열 인덱스에서 시작하는 위치에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-160">Copies all the <see cref="T:System.Data.DataRow" /> objects from the collection into the given array, starting at the given destination array index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.DataRow[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Data.DataRow[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As DataRow(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Data::DataRow ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.DataRow[] * int -&gt; unit" Usage="dataRowCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.DataRow[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="aba7d-161"><see langword="DataRowCollection" />에서 복사한 요소의 대상인 1차원 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-161">The one-dimensional array that is the destination of the elements copied from the <see langword="DataRowCollection" />.</span></span> <span data-ttu-id="aba7d-162">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-162">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="aba7d-163">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-163">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="aba7d-164">컬렉션의 모든 <see cref="T:System.Data.DataRow" /> 개체를 지정된 배열의 지정된 대상 배열 인덱스에서 시작하는 위치에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-164">Copies all the <see cref="T:System.Data.DataRow" /> objects from the collection into the given array, starting at the given destination array index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRowCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Data.DataRowCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aba7d-165">이 컬렉션에 있는 <see cref="T:System.Data.DataRow" /> 개체의 총 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-165">Gets the total number of <see cref="T:System.Data.DataRow" /> objects in this collection.</span></span></summary>
        <value><span data-ttu-id="aba7d-166">이 컬렉션에 있는 <see cref="T:System.Data.DataRow" /> 개체의 총 수입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-166">The total number of <see cref="T:System.Data.DataRow" /> objects in this collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aba7d-167">지정된 <see cref="P:System.Data.DataTable.PrimaryKey" /> 값을 사용하여 <see cref="T:System.Data.DataRow" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-167">Gets a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataTable.PrimaryKey" /> value.</span></span></summary>
        <remarks><span data-ttu-id="aba7d-168">성능에는 O (로그 n) 연산 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-168">Peformance should be an O(log n) operation.</span></span></remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Data.DataRow Find (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow Find(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.Find(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (key As Object) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ Find(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.Find : obj -&gt; System.Data.DataRow" Usage="dataRowCollection.Find key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="aba7d-169">찾을 <see cref="T:System.Data.DataRow" />의 기본 키 값입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-169">The primary key value of the <see cref="T:System.Data.DataRow" /> to find.</span></span></param>
        <summary><span data-ttu-id="aba7d-170">기본 키 값으로 지정한 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-170">Gets the row specified by the primary key value.</span></span></summary>
        <returns><span data-ttu-id="aba7d-171">지정한 기본 키 값이 있는 <see cref="T:System.Data.DataRow" />이거나, 기본 키가 <see cref="T:System.Data.DataRowCollection" />에 없으면 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-171">A <see cref="T:System.Data.DataRow" /> that contains the primary key value specified; otherwise a null value if the primary key value does not exist in the <see cref="T:System.Data.DataRowCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aba7d-172">사용 하는 `Find` 메서드를 <xref:System.Data.DataTable> 개체입니다는 <xref:System.Data.DataRowCollection> 개체가 속해 있어야 합니다 기본 키 열으로 지정 된 하나 이상의 열입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-172">To use the `Find` method, the <xref:System.Data.DataTable> object to which the <xref:System.Data.DataRowCollection> object belongs must have at least one column designated as a primary key column.</span></span> <span data-ttu-id="aba7d-173">참조 된 <xref:System.Data.DataTable.PrimaryKey%2A> 기본 키 열을 만드는 방법에 대 한 자세한 정보에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-173">See the <xref:System.Data.DataTable.PrimaryKey%2A> property for more information about how to create a primary key column.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aba7d-174">다음 예제에서는 합니다 <xref:System.Data.DataRowCollection.Find%2A> 메서드를 기본 키 값 "2"에서 컬렉션의 <xref:System.Data.DataRow> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-174">The following example uses the <xref:System.Data.DataRowCollection.Find%2A> method to find the primary key value "2" in a collection of <xref:System.Data.DataRow> objects.</span></span> <span data-ttu-id="aba7d-175">메서드는 특정 반환 <xref:System.Data.DataRow> 개체 수 있도록 해당 값을 변경 하면 필요에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-175">The method returns the specific <xref:System.Data.DataRow> object letting you change its values, as needed.</span></span>  
  
 [!code-csharp[Classic WebData DataRowCollection.Find Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Find Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRowCollection.Find Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Find Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.MissingPrimaryKeyException"><span data-ttu-id="aba7d-176">이 테이블에 기본 키가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="aba7d-176">The table does not have a primary key.</span></span></exception>
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataTable.PrimaryKey" />
        <altmember cref="M:System.Data.DataRowCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Data.DataRow Find (object[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow Find(object[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.Find(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (keys As Object()) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ Find(cli::array &lt;System::Object ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="member this.Find : obj[] -&gt; System.Data.DataRow" Usage="dataRowCollection.Find keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="aba7d-177">찾을 기본 키 값 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-177">An array of primary key values to find.</span></span> <span data-ttu-id="aba7d-178">이 배열의 형식은 <see langword="Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-178">The type of the array is <see langword="Object" />.</span></span></param>
        <summary><span data-ttu-id="aba7d-179">지정한 기본 키 값이 있는 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-179">Gets the row that contains the specified primary key values.</span></span></summary>
        <returns><span data-ttu-id="aba7d-180">지정한 기본 키 값이 있는 <see cref="T:System.Data.DataRow" /> 개체이거나, 기본 키 값이 <see cref="T:System.Data.DataRowCollection" />에 없으면 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-180">A <see cref="T:System.Data.DataRow" /> object that contains the primary key values specified; otherwise a null value if the primary key value does not exist in the <see cref="T:System.Data.DataRowCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aba7d-181">사용 하는 <xref:System.Data.DataRowCollection.Find%2A> 메서드를 <xref:System.Data.DataTable> 개체입니다는 <xref:System.Data.DataRowCollection> 개체가 속해 있어야 합니다 기본 키 열으로 지정 된 하나 이상의 열입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-181">To use the <xref:System.Data.DataRowCollection.Find%2A> method, the <xref:System.Data.DataTable> object to which the <xref:System.Data.DataRowCollection> object belongs must have at least one column designated as a primary key column.</span></span> <span data-ttu-id="aba7d-182">두 개 이상의 행이 동일한 기본 키 값을가지고 하는 경우 찾은 첫 번째 행이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-182">When two or more rows have the same primary key value, then the first row found is returned.</span></span> <span data-ttu-id="aba7d-183">이런 경우 <xref:System.Data.DataSet.EnforceConstraints%2A> 가 false로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-183">This occurs when <xref:System.Data.DataSet.EnforceConstraints%2A> is set to false.</span></span> <span data-ttu-id="aba7d-184">참조를 <xref:System.Data.DataTable.PrimaryKey%2A> 만드는 방법에 대 한 자세한 속성을 <xref:System.Data.DataTable.PrimaryKey%2A> 열 또는 배열을 <xref:System.Data.DataColumn> 테이블에 기본 키가 둘 이상의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-184">See the <xref:System.Data.DataTable.PrimaryKey%2A> property for more information about how to create a <xref:System.Data.DataTable.PrimaryKey%2A> column, or an array of <xref:System.Data.DataColumn> objects when the table has more than one primary key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aba7d-185">다음 예제에서는 배열의 값을 사용 하 여 컬렉션의 특정 행을 찾을 <xref:System.Data.DataRow> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-185">The following example uses the values of an array to find a specific row in a collection of <xref:System.Data.DataRow> objects.</span></span> <span data-ttu-id="aba7d-186">가정 메서드는 <xref:System.Data.DataTable> 세 개의 기본 키 열으로 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-186">The method assumes that a <xref:System.Data.DataTable> exists with three primary key columns.</span></span> <span data-ttu-id="aba7d-187">값의 배열을 만든 후 코드를 사용 하는 <xref:System.Data.DataRowCollection.Find%2A> 하려는 특정 개체를 가져와 배열 사용 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="aba7d-187">After creating an array of the values, the code uses the <xref:System.Data.DataRowCollection.Find%2A> method with the array to get the particular object that you want.</span></span>  
  
 [!code-csharp[Classic WebData DataRowCollection.Find1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Find1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRowCollection.Find1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Find1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="aba7d-188">그 인덱스 값에 일치하는 행이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="aba7d-188">No row corresponds to that index value.</span></span></exception>
        <exception cref="T:System.Data.MissingPrimaryKeyException"><span data-ttu-id="aba7d-189">이 테이블에 기본 키가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="aba7d-189">The table does not have a primary key.</span></span></exception>
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataTable.PrimaryKey" />
        <altmember cref="M:System.Data.DataRowCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dataRowCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aba7d-190">이 컬렉션의 <see cref="T:System.Collections.IEnumerator" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-190">Gets an <see cref="T:System.Collections.IEnumerator" /> for this collection.</span></span></summary>
        <returns><span data-ttu-id="aba7d-191">이 컬렉션의 <see cref="T:System.Collections.IEnumerator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-191">An <see cref="T:System.Collections.IEnumerator" /> for this collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Data.DataRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Data.DataRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (row As DataRow) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Data::DataRow ^ row);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Data.DataRow -&gt; int" Usage="dataRowCollection.IndexOf row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="aba7d-192">검색할 <see langword="DataRow" />입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-192">The <see langword="DataRow" /> to search for.</span></span></param>
        <summary><span data-ttu-id="aba7d-193">지정된 <see cref="T:System.Data.DataRow" /> 개체의 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-193">Gets the index of the specified <see cref="T:System.Data.DataRow" /> object.</span></span></summary>
        <returns><span data-ttu-id="aba7d-194">행의 인덱스(0부터 시작)이거나, 행이 컬렉션에 없으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-194">The zero-based index of the row, or -1 if the row is not found in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public void InsertAt (System.Data.DataRow row, int pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertAt(class System.Data.DataRow row, int32 pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAt (row As DataRow, pos As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAt(System::Data::DataRow ^ row, int pos);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : System.Data.DataRow * int -&gt; unit" Usage="dataRowCollection.InsertAt (row, pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" />
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="aba7d-195">추가할 <see cref="T:System.Data.DataRow" />입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-195">The <see cref="T:System.Data.DataRow" /> to add.</span></span></param>
        <param name="pos"><span data-ttu-id="aba7d-196"><see langword="DataRow" />를 추가하려는 컬렉션에 있는 0에서 시작하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-196">The (zero-based) location in the collection where you want to add the <see langword="DataRow" />.</span></span></param>
        <summary><span data-ttu-id="aba7d-197">컬렉션의 지정한 위치에 새 행을 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-197">Inserts a new row into the collection at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aba7d-198">지정 된 위치의 <xref:System.Data.DataRowCollection.InsertAt%2A> 행의 순서에 반영 됩니다는 <xref:System.Data.DataRowCollection> 만 합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-198">The location specified by <xref:System.Data.DataRowCollection.InsertAt%2A> is reflected by the order of rows in the <xref:System.Data.DataRowCollection> only.</span></span> <span data-ttu-id="aba7d-199">둘 이상의 행이 반환 되는 <xref:System.Data.DataRow> 배열에 삽입 된 행에서 지정 된 위치에 반환 될 수 <xref:System.Data.DataRowCollection.InsertAt%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-199">If more than one row is returned in a <xref:System.Data.DataRow> array, the inserted row may not be returned in the location specified by <xref:System.Data.DataRowCollection.InsertAt%2A>.</span></span> <span data-ttu-id="aba7d-200">예를 들어를 <xref:System.Data.DataTable.Rows%2A> 속성에 지정 된 삽입 위치에 행을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-200">For example, the <xref:System.Data.DataTable.Rows%2A> property returns the row in the specified insert position.</span></span> <span data-ttu-id="aba7d-201"><xref:System.Data.DataTable.Select%2A> 및 <xref:System.Data.DataRow.GetChildRows%2A> 하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-201"><xref:System.Data.DataTable.Select%2A> and <xref:System.Data.DataRow.GetChildRows%2A> may not.</span></span> <span data-ttu-id="aba7d-202">콘텐츠를 작성 하는 경우는 <xref:System.Data.DataRowCollection> 예를 들어, XML로 <xref:System.Data.DataSet.WriteXml%2A>, 행이 지정 된 순서에 따라 작성 됩니다는 <xref:System.Data.DataRowCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-202">When you write the contents of the <xref:System.Data.DataRowCollection> as XML, for example, <xref:System.Data.DataSet.WriteXml%2A>, the rows are written according to the order specified by the <xref:System.Data.DataRowCollection>.</span></span>  
  
 <span data-ttu-id="aba7d-203">값을 지정한 경우는 `pos` 매개 변수가 컬렉션의 행 수보다 큰 인 새 행 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-203">If the value specified for the `pos` parameter is greater than the number of rows in the collection, the new row is added to the end.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="aba7d-204"><paramref name="pos" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="aba7d-204">The <paramref name="pos" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.DataRow this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRow Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRowCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRow ^ default[int] { System::Data::DataRow ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Data.DataRow" Usage="System.Data.DataRowCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="aba7d-205">반환할 행의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-205">The zero-based index of the row to return.</span></span></param>
        <summary><span data-ttu-id="aba7d-206">지정된 인덱스의 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-206">Gets the row at the specified index.</span></span></summary>
        <value><span data-ttu-id="aba7d-207">지정된 <see cref="T:System.Data.DataRow" />입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-207">The specified <see cref="T:System.Data.DataRow" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aba7d-208">사용 된 <xref:System.Data.DataRowCollection.Contains%2A> 행의 키 열에 특정 값이 있는지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-208">Use the <xref:System.Data.DataRowCollection.Contains%2A> method to determine whether a specific value exists in the key column of a row.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aba7d-209">다음 예제에서는 출력의 각 행의 열 1의 값을 <xref:System.Data.DataRowCollection>입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-209">The following example prints the value of column 1 of each row in a <xref:System.Data.DataRowCollection>.</span></span>  
  
 [!code-csharp[Classic WebData DataRowCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRowCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="aba7d-210">인덱스 값이 컬렉션의 항목 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="aba7d-210">The index value is greater than the number of items in the collection.</span></span></exception>
        <altmember cref="M:System.Data.DataRowCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected override System.Collections.ArrayList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList List" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRowCollection.List" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property List As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ArrayList ^ List { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.ArrayList" Usage="System.Data.DataRowCollection.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Data.DataRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Data.DataRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (row As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Data::DataRow ^ row);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Data.DataRow -&gt; unit" Usage="dataRowCollection.Remove row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="aba7d-211">제거할 <see cref="T:System.Data.DataRow" />입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-211">The <see cref="T:System.Data.DataRow" /> to remove.</span></span></param>
        <summary><span data-ttu-id="aba7d-212">지정된 <see cref="T:System.Data.DataRow" />를 컬렉션에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-212">Removes the specified <see cref="T:System.Data.DataRow" /> from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aba7d-213">행 제거 되 면 해당 행의 모든 데이터가 손실 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-213">When a row is removed, all data in that row is lost.</span></span> <span data-ttu-id="aba7d-214">호출할 수도 있습니다는 <xref:System.Data.DataRow.Delete%2A> 메서드를 <xref:System.Data.DataRow> 클래스 바로 제거에 대 한 행을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-214">You can also call the <xref:System.Data.DataRow.Delete%2A> method of the <xref:System.Data.DataRow> class to just mark a row for removal.</span></span> <span data-ttu-id="aba7d-215">호출 `Remove` 호출 동일 <xref:System.Data.DataRow.Delete%2A> 호출한 <xref:System.Data.DataRow.AcceptChanges%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-215">Calling `Remove` is the same as calling <xref:System.Data.DataRow.Delete%2A> and then calling <xref:System.Data.DataRow.AcceptChanges%2A>.</span></span>  
  
 <span data-ttu-id="aba7d-216"><xref:System.Data.DataRowCollection.Remove%2A> 호출할 수 없습니다는 foreach 루프에서 반복 하는 동안는 <xref:System.Data.DataRowCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-216"><xref:System.Data.DataRowCollection.Remove%2A> should not be called in a foreach loop while iterating through a <xref:System.Data.DataRowCollection> object.</span></span> <span data-ttu-id="aba7d-217"><xref:System.Data.DataRowCollection.Remove%2A> 컬렉션의 상태를 수정합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-217"><xref:System.Data.DataRowCollection.Remove%2A> modifies the state of the collection.</span></span>  
  
 <span data-ttu-id="aba7d-218">사용할 수도 있습니다는 <xref:System.Data.DataRowCollection.Clear%2A> 메서드를 한 번에 컬렉션의 모든 구성원을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-218">You can also use the <xref:System.Data.DataRowCollection.Clear%2A> method to remove all members of the collection at one time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aba7d-219">다음 예제에서는 합니다 <xref:System.Data.DataRowCollection.Remove%2A> 에서 찾은 행을 삭제 하는 메서드를 <xref:System.Data.DataRowCollection> 개체.</span><span class="sxs-lookup"><span data-stu-id="aba7d-219">The following example uses the <xref:System.Data.DataRowCollection.Remove%2A> method to delete a found row in a <xref:System.Data.DataRowCollection> object.</span></span> <span data-ttu-id="aba7d-220">이 예제에서는 먼저 사용 합니다 <xref:System.Data.DataRowCollection.Contains%2A> 행 컬렉션에 행이 포함 되어 있는지 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-220">The example first uses the <xref:System.Data.DataRowCollection.Contains%2A> method to determine whether the rows collection contains a row.</span></span> <span data-ttu-id="aba7d-221">이 경우는 <xref:System.Data.DataRowCollection.Find%2A> 메서드는 특정 행을 찾는 데 및 <xref:System.Data.DataRowCollection.Remove%2A> 메서드는 다음 행을 제거 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-221">If it does, the <xref:System.Data.DataRowCollection.Find%2A> method is used to find the specific row, and the <xref:System.Data.DataRowCollection.Remove%2A> method is then used to remove the row.</span></span>  
  
 [!code-vb[Classic WebData DataRowCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRowCollection.Clear" />
        <altmember cref="M:System.Data.DataRowCollection.Contains(System.Object)" />
        <altmember cref="M:System.Data.DataRowCollection.Find(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="dataRowCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="aba7d-222">제거할 행의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-222">The index of the row to remove.</span></span></param>
        <summary><span data-ttu-id="aba7d-223">컬렉션에서 지정된 인덱스의 행을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-223">Removes the row at the specified index from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aba7d-224">행 제거 되 면 해당 행의 모든 데이터가 손실 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-224">When a row is removed, all data in that row is lost.</span></span> <span data-ttu-id="aba7d-225">호출할 수도 있습니다는 <xref:System.Data.DataRow.Delete%2A> 메서드를 <xref:System.Data.DataRow> 클래스 바로 제거에 대 한 행을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-225">You can also call the <xref:System.Data.DataRow.Delete%2A> method of the <xref:System.Data.DataRow> class to just mark a row for removal.</span></span> <span data-ttu-id="aba7d-226">호출 `RemoveAt` 호출 동일 <xref:System.Data.DataRow.Delete%2A> 호출한 <xref:System.Data.DataRow.AcceptChanges%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-226">Calling `RemoveAt` is the same as calling <xref:System.Data.DataRow.Delete%2A> and then calling <xref:System.Data.DataRow.AcceptChanges%2A>.</span></span>  
  
 <span data-ttu-id="aba7d-227">사용할 수는 <xref:System.Data.DataRowCollection.Clear%2A> 메서드를 한 번에 컬렉션의 모든 구성원을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="aba7d-227">You can use the <xref:System.Data.DataRowCollection.Clear%2A> method to remove all members of the collection at one time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aba7d-228">마지막 행을 제거 하는 다음 예제는 <xref:System.Data.DataRowCollection> 를 호출 하 여는 <xref:System.Data.DataRowCollection.RemoveAt%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="aba7d-228">The following example removes the last row in a <xref:System.Data.DataRowCollection> by calling the <xref:System.Data.DataRowCollection.RemoveAt%2A> method.</span></span>  
  
 [!code-vb[Classic WebData DataRowCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRowCollection.Clear" />
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
      </Docs>
    </Member>
  </Members>
</Type>
