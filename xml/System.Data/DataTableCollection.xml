<Type Name="DataTableCollection" FullName="System.Data.DataTableCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f2783bb4a0c7d54408e27441f078a9a69e7a3b8d" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57919535" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataTableCollection : System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataTableCollection extends System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataTableCollection&#xA;Inherits InternalDataCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableCollection sealed : System::Data::InternalDataCollectionBase" />
  <TypeSignature Language="F#" Value="type DataTableCollection = class&#xA;    inherit InternalDataCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.InternalDataCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultEvent("CollectionChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.TablesCollectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.TablesCollectionEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.TablesCollectionEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.TablesCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.TablesCollectionEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f042f-101"><see cref="T:System.Data.DataSet" />의 테이블 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-101">Represents the collection of tables for the <see cref="T:System.Data.DataSet" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-102">합니다 <xref:System.Data.DataTableCollection> 모두 포함 합니다 <xref:System.Data.DataTable> 특정 개체 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-102">The <xref:System.Data.DataTableCollection> contains all the <xref:System.Data.DataTable> objects for a particular <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f042f-103">액세스는 <xref:System.Data.DataTableCollection> 의 <xref:System.Data.DataSet>를 사용 하 여는 <xref:System.Data.DataSet.Tables%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="f042f-103">To access the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>, use the <xref:System.Data.DataSet.Tables%2A> property.</span></span>  
  
 <span data-ttu-id="f042f-104"><xref:System.Data.DataTableCollection> 와 같은 메서드를 사용 하 여 <xref:System.Data.DataTableCollection.Add%2A>, <xref:System.Data.DataTableCollection.Clear%2A>, 및 <xref:System.Data.DataTableCollection.Remove%2A> 컬렉션의 항목을 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-104">The <xref:System.Data.DataTableCollection> uses methods such as <xref:System.Data.DataTableCollection.Add%2A>, <xref:System.Data.DataTableCollection.Clear%2A>, and <xref:System.Data.DataTableCollection.Remove%2A> to manage the items in the collection.</span></span>  
  
 <span data-ttu-id="f042f-105">사용 된 <xref:System.Data.DataTableCollection.Contains%2A> 특정 테이블 (인덱스 또는 이름으로 지정 됨) 컬렉션에 있는지 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-105">Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a particular table (specified by either index or name) is in the collection.</span></span>  
  
 <span data-ttu-id="f042f-106">사용으로 이동 하려면 한 테이블에서 다른를 <xref:System.Data.DataTable.ChildRelations%2A> 또는 <xref:System.Data.DataTable.ParentRelations%2A> 의 속성을 <xref:System.Data.DataTable> 의 해당 컬렉션에 액세스 하려면 <xref:System.Data.DataRelation> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-106">To navigate from one table to another, use the <xref:System.Data.DataTable.ChildRelations%2A> or <xref:System.Data.DataTable.ParentRelations%2A> property of the <xref:System.Data.DataTable> to access its collection of <xref:System.Data.DataRelation> objects.</span></span> <span data-ttu-id="f042f-107">사용할 수도 있습니다는 <xref:System.Data.DataSet.Relations%2A> 속성의 부모/자식 관계를 탐색 하는 `DataTables` 특정에서 <xref:System.Data.DataSet> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-107">You can also use the <xref:System.Data.DataSet.Relations%2A> property to navigate through the parent/child relationships of the `DataTables` in a particular <xref:System.Data.DataSet> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-108">이 예제의 첫 번째 절차를 검색 합니다 <xref:System.Data.DataTableCollection> 의 <xref:System.Data.DataSet> 하 고 각 테이블의 각 행에 있는 각 열의 값을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-108">The first procedure in this example retrieves the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet> and prints the value of each column, in each row, of each table.</span></span> <span data-ttu-id="f042f-109">두 번째 절차에서는 새 <xref:System.Data.DataTable> 두 열을 가진에 추가 된 <xref:System.Data.DataTableCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-109">The second procedure creates a new <xref:System.Data.DataTable> with two columns, and adds it to the <xref:System.Data.DataTableCollection>.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="f042f-110">이 유형은 다중 스레드 읽기 작업에 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-110">This type is safe for multithreaded read operations.</span></span> <span data-ttu-id="f042f-111">모든 쓰기 작업을 동기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-111">You must synchronize any write operations.</span></span></threadsafe>
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataSet" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f042f-112">컬렉션에 <see cref="T:System.Data.DataTable" /> 개체를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-112">Adds a <see cref="T:System.Data.DataTable" /> object to the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Add ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable Add() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.Add" />
      <MemberSignature Language="VB.NET" Value="Public Function Add () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ Add();" />
      <MemberSignature Language="F#" Value="member this.Add : unit -&gt; System.Data.DataTable" Usage="dataTableCollection.Add " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f042f-113">기본 이름을 사용하여 새 <see cref="T:System.Data.DataTable" /> 개체를 만들고 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-113">Creates a new <see cref="T:System.Data.DataTable" /> object by using a default name and adds it to the collection.</span></span></summary>
        <returns><span data-ttu-id="f042f-114">새로 만든 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-114">The newly created <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-115">이름이 없는 지정 되어 있으므로 `DataTable` 추가한 순서에 따라는 기본 이름을 사용 하 여 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-115">Because no name is specified, the `DataTable` is created by using a default name, relative to its order of addition.</span></span> <span data-ttu-id="f042f-116">기본 이름은 "Table1"로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-116">The default name is "Table1."</span></span>  
  
 <span data-ttu-id="f042f-117"><xref:System.Data.DataTableCollection.CollectionChanged> 테이블 컬렉션에 성공적으로 추가 될 때 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-117">The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully added to the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-118">다음 예제에서는 3 개의 새 <xref:System.Data.DataTable> 개체를 <xref:System.Data.DataTableCollection> 를 사용 하 여를 <xref:System.Data.DataTableCollection.Add%2A> 메서드 인수 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-118">The following example adds three new <xref:System.Data.DataTable> objects to the <xref:System.Data.DataTableCollection> using the <xref:System.Data.DataTableCollection.Add%2A> method without arguments.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.Add2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Add2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.Add2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Add2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
        <altmember cref="M:System.Data.DataTableCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.Add(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (table As DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Data.DataTable -&gt; unit" Usage="dataTableCollection.Add table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="f042f-119">추가할 <see langword="DataTable" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-119">The <see langword="DataTable" /> object to add.</span></span></param>
        <summary><span data-ttu-id="f042f-120">지정된 <see langword="DataTable" />를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-120">Adds the specified <see langword="DataTable" /> to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-121"><xref:System.Data.DataTableCollection.CollectionChanged> 테이블 컬렉션에 성공적으로 추가 될 때 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-121">The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully added to the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-122">다음 예제에서는 <xref:System.Data.DataTable> 에 추가 합니다 <xref:System.Data.DataTableCollection> 의 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-122">The following example creates a <xref:System.Data.DataTable> and adds it to the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Add Example/CS/source.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f042f-123">테이블에 대해 지정된 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="f042f-123">The value specified for the table is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f042f-124">테이블이 이 컬렉션이나 다른 컬렉션에 이미 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="f042f-124">The table already belongs to this collection, or belongs to another collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="f042f-125">컬렉션에 이름이 같은 테이블이 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="f042f-125">A table in the collection has the same name.</span></span> <span data-ttu-id="f042f-126">비교 시 대/소문자가 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-126">The comparison is not case sensitive.</span></span></exception>
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
        <altmember cref="M:System.Data.DataTableCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Add (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable Add(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ Add(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; System.Data.DataTable" Usage="dataTableCollection.Add name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f042f-127">만든 <see cref="T:System.Data.DataTable" />에 지정할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-127">The name to give the created <see cref="T:System.Data.DataTable" />.</span></span></param>
        <summary><span data-ttu-id="f042f-128">지정된 이름을 사용하여 <see cref="T:System.Data.DataTable" /> 개체를 만들어 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-128">Creates a <see cref="T:System.Data.DataTable" /> object by using the specified name and adds it to the collection.</span></span></summary>
        <returns><span data-ttu-id="f042f-129">새로 만든 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-129">The newly created <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-130">경우 `null` 이거나 빈 문자열 ("") 전달에서는 기본 이름이 지정 됩니다 새로 만들어진 `DataTable`합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-130">If either `null` or an empty string ("") is passed in, a default name is given to the newly created `DataTable`.</span></span> <span data-ttu-id="f042f-131">이 이름 (예: "Table1", "Table2", 및 등)은 추가 된 순서를 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-131">This name is based on the order in which the table was added ("Table1", "Table2", and so on).</span></span>  
  
 <span data-ttu-id="f042f-132"><xref:System.Data.DataTableCollection.CollectionChanged> 테이블 컬렉션에 추가 되는 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-132">The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs if the table is successfully added to the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-133">다음 예제에서는 추가 <xref:System.Data.DataTable> 지정 된 이름의 <xref:System.Data.DataTableCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-133">The following example adds a <xref:System.Data.DataTable> with the given name to the <xref:System.Data.DataTableCollection>.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.Add1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Add1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.Add1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Add1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="f042f-134">컬렉션에 이름이 같은 테이블이 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="f042f-134">A table in the collection has the same name.</span></span> <span data-ttu-id="f042f-135">대/소문자를 구분하지 않고 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-135">(The comparison is not case sensitive.)</span></span></exception>
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
        <altmember cref="M:System.Data.DataTableCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Add (string name, string tableNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable Add(string name, string tableNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, tableNamespace As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ Add(System::String ^ name, System::String ^ tableNamespace);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; System.Data.DataTable" Usage="dataTableCollection.Add (name, tableNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="tableNamespace" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f042f-136">만든 <see cref="T:System.Data.DataTable" />에 지정할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-136">The name to give the created <see cref="T:System.Data.DataTable" />.</span></span></param>
        <param name="tableNamespace"><span data-ttu-id="f042f-137">만든 <see cref="T:System.Data.DataTable" />에 지정할 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-137">The namespace to give the created <see cref="T:System.Data.DataTable" />.</span></span></param>
        <summary><span data-ttu-id="f042f-138">지정된 이름을 사용하여 <see cref="T:System.Data.DataTable" /> 개체를 만들어 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-138">Creates a <see cref="T:System.Data.DataTable" /> object by using the specified name and adds it to the collection.</span></span></summary>
        <returns><span data-ttu-id="f042f-139">새로 만든 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-139">The newly created <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-140">경우 `null` 이거나 빈 문자열 ("") 전달에서는 기본 이름이 지정 됩니다 새로 만들어진 `DataTable`합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-140">If either `null` or an empty string ("") is passed in, a default name is given to the newly created `DataTable`.</span></span> <span data-ttu-id="f042f-141">이 이름 (예: "Table1", "Table2", 및 등)은 추가 된 순서를 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-141">This name is based on the order in which the table was added ("Table1", "Table2", and so on).</span></span>  
  
 <span data-ttu-id="f042f-142"><xref:System.Data.DataTableCollection.CollectionChanged> 테이블 컬렉션에 추가 되는 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-142">The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs if the table is successfully added to the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-143">다음 예제에서는 추가 <xref:System.Data.DataTable> 지정 된 이름의 <xref:System.Data.DataTableCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-143">The following example adds a <xref:System.Data.DataTable> with the given name to the <xref:System.Data.DataTableCollection>.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.Add1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Add1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.Add1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Add1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="f042f-144">컬렉션에 이름이 같은 테이블이 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="f042f-144">A table in the collection has the same name.</span></span> <span data-ttu-id="f042f-145">대/소문자를 구분하지 않고 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-145">(The comparison is not case sensitive.)</span></span></exception>
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
        <altmember cref="M:System.Data.DataTableCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Data.DataTable[] tables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Data.DataTable[] tables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (tables As DataTable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Data::DataTable ^&gt; ^ tables);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Data.DataTable[] -&gt; unit" Usage="dataTableCollection.AddRange tables" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tables" Type="System.Data.DataTable[]" />
      </Parameters>
      <Docs>
        <param name="tables"><span data-ttu-id="f042f-146">컬렉션에 추가할 <see cref="T:System.Data.DataTable" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-146">The array of <see cref="T:System.Data.DataTable" /> objects to add to the collection.</span></span></param>
        <summary><span data-ttu-id="f042f-147">지정된 <see cref="T:System.Data.DataTable" /> 배열의 요소를 컬렉션의 끝에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-147">Copies the elements of the specified <see cref="T:System.Data.DataTable" /> array to the end of the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f042f-148">다음 예제에서는 두 개의 <xref:System.Data.DataTable> 개체에 추가 합니다 합니다 <xref:System.Data.DataTableCollection> 의 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-148">The following example creates two <xref:System.Data.DataTable> objects and adds them to the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.AddRange Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.AddRange Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.AddRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.AddRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanRemove(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanRemove (table As DataTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanRemove(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.CanRemove : System.Data.DataTable -&gt; bool" Usage="dataTableCollection.CanRemove table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="f042f-149">확인할 컬렉션의 <see langword="DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-149">The <see langword="DataTable" /> in the collection to perform the check against.</span></span></param>
        <summary><span data-ttu-id="f042f-150">지정된 <see cref="T:System.Data.DataTable" /> 개체를 컬렉션에서 제거할 수 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-150">Verifies whether the specified <see cref="T:System.Data.DataTable" /> object can be removed from the collection.</span></span></summary>
        <returns><span data-ttu-id="f042f-151">테이블을 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-151"><see langword="true" /> if the table can be removed; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f042f-152">다음 예제에서는 합니다 <xref:System.Data.DataTableCollection.CanRemove%2A> 각 테이블에서 제거할 수 있는지 여부를 테스트 하는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-152">The following example uses the <xref:System.Data.DataTableCollection.CanRemove%2A> to test whether each table can be removed from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f042f-153">그렇다면는 <xref:System.Data.DataTableCollection.Remove%2A> 메서드를 호출 하는 테이블을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-153">If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.CanRemove Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.CanRemove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.CanRemove Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.CanRemove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTableCollection.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
        <altmember cref="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="dataTableCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f042f-154">모든 <see cref="T:System.Data.DataTable" /> 개체의 컬렉션을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-154">Clears the collection of all <see cref="T:System.Data.DataTable" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-155">특정 제거할 `DataTable` 컬렉션에서 사용 하 여를 <xref:System.Data.DataTableCollection.Remove%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f042f-155">To remove a particular `DataTable` from the collection, use the <xref:System.Data.DataTableCollection.Remove%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-156">다음 예제에서는 합니다 <xref:System.Data.DataTableCollection> 의 <xref:System.Data.DataSet>, 모든 테이블의 컬렉션을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-156">The following example gets the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>, and then clears the collection of all tables.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTableCollection.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CollectionChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ CollectionChanged;" />
      <MemberSignature Language="F#" Value="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f042f-157"><see cref="T:System.Data.DataTableCollection" /> 개체가 추가되거나 제거되어 <see cref="T:System.Data.DataTable" />이 변경된 후 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-157">Occurs after the <see cref="T:System.Data.DataTableCollection" /> is changed because of <see cref="T:System.Data.DataTable" /> objects being added or removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-158">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-158">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-159">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Data.DataTableCollection.CollectionChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-159">The following example demonstrates how to use the <xref:System.Data.DataTableCollection.CollectionChanged> event.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.CollectionChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.CollectionChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.CollectionChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.CollectionChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanging">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanging" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTableCollection.CollectionChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CollectionChanging As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ CollectionChanging;" />
      <MemberSignature Language="F#" Value="member this.CollectionChanging : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.CollectionChanging : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f042f-160"><see cref="T:System.Data.DataTableCollection" /> 개체가 추가되거나 제거되어 <see cref="T:System.Data.DataTable" />이 변경되는 동안 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-160">Occurs while the <see cref="T:System.Data.DataTableCollection" /> is changing because of <see cref="T:System.Data.DataTable" /> objects being added or removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-161">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-161">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-162">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Data.DataTableCollection.CollectionChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-162">The following example demonstrates how to use the <xref:System.Data.DataTableCollection.CollectionChanging> event.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.CollectionChanging Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.CollectionChanging Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.CollectionChanging Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.CollectionChanging Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f042f-163">지정된 이름의 <see cref="T:System.Data.DataTable" /> 개체가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-163">Gets a value indicating whether a <see cref="T:System.Data.DataTable" /> object with the specified name exists in the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="dataTableCollection.Contains name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f042f-164">찾을 <see cref="T:System.Data.DataTable" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-164">The name of the <see cref="T:System.Data.DataTable" /> to find.</span></span></param>
        <summary><span data-ttu-id="f042f-165">지정된 이름의 <see cref="T:System.Data.DataTable" /> 개체가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-165">Gets a value that indicates whether a <see cref="T:System.Data.DataTable" /> object with the specified name exists in the collection.</span></span></summary>
        <returns><span data-ttu-id="f042f-166">지정된 테이블이 있으면 <see langword="true" />이고, <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-166"><see langword="true" /> if the specified table exists; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-167">이름을 지정 하는 <xref:System.Data.DataTable> 사용 하 여 개체를 <xref:System.Data.DataTable.TableName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-167">You specify the name of the <xref:System.Data.DataTable> object by using the <xref:System.Data.DataTable.TableName%2A> property.</span></span> <span data-ttu-id="f042f-168">추가 하는 경우는 <xref:System.Data.DataTable> 컬렉션에는 <xref:System.Data.DataTableCollection.Add%2A> 메서드를 인수 없이 전달 테이블 ("Table1", "Table2" 및 등)은 추가 된 순서에 따라 기본 이름이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-168">If you add a <xref:System.Data.DataTable> to the collection with the <xref:System.Data.DataTableCollection.Add%2A> method, passing no arguments, the table is given a default name, based on the order in which the table was added ("Table1", "Table2", and so on).</span></span>  
  
 <span data-ttu-id="f042f-169">인덱스를 가져올는 <xref:System.Data.DataTable>를 사용 하 여를 <xref:System.Data.DataTableCollection.IndexOf%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f042f-169">To get the index of a <xref:System.Data.DataTable>, use the <xref:System.Data.DataTableCollection.IndexOf%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f042f-170">반환 `false` 같은 다른 네임 스페이스 이름을 두 개 이상의 테이블의 경우.</span><span class="sxs-lookup"><span data-stu-id="f042f-170">Returns `false` when two or more tables have the same name but different namespaces.</span></span> <span data-ttu-id="f042f-171">테이블 이름을 정확히 한 개의 테이블과 일치시킬 때 모호성이 있으면 호출은 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-171">The call does not succeed if there is any ambiguity when matching a table name to exactly one table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-172">다음 예제에서는 이름이 "공급자"를 사용 하 여 테이블에 있는지 여부를 테스트 합니다 <xref:System.Data.DataTableCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-172">The following example tests whether a table with the name "Suppliers" exists in the <xref:System.Data.DataTableCollection>.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTableCollection.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
        <altmember cref="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
        <altmember cref="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name, string tableNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name, string tableNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.Contains(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (name As String, tableNamespace As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ name, System::String ^ tableNamespace);" />
      <MemberSignature Language="F#" Value="member this.Contains : string * string -&gt; bool" Usage="dataTableCollection.Contains (name, tableNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="tableNamespace" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f042f-173">찾을 <see cref="T:System.Data.DataTable" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-173">The name of the <see cref="T:System.Data.DataTable" /> to find.</span></span></param>
        <param name="tableNamespace"><span data-ttu-id="f042f-174">찾을 <see cref="T:System.Data.DataTable" /> 네임스페이스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-174">The name of the <see cref="T:System.Data.DataTable" /> namespace to look in.</span></span></param>
        <summary><span data-ttu-id="f042f-175">지정된 이름과 테이블 네임스페이스의 <see cref="T:System.Data.DataTable" /> 개체가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-175">Gets a value that indicates whether a <see cref="T:System.Data.DataTable" /> object with the specified name and table namespace exists in the collection.</span></span></summary>
        <returns><span data-ttu-id="f042f-176">지정된 테이블이 있으면 <see langword="true" />이고, <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-176"><see langword="true" /> if the specified table exists; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-177">이름을 지정 하는 <xref:System.Data.DataTable> 사용 하 여 개체를 <xref:System.Data.DataTable.TableName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-177">You specify the name of the <xref:System.Data.DataTable> object by using the <xref:System.Data.DataTable.TableName%2A> property.</span></span> <span data-ttu-id="f042f-178">추가 하는 경우는 <xref:System.Data.DataTable> 컬렉션에는 <xref:System.Data.DataTableCollection.Add%2A> 메서드를 인수 없이 전달 테이블 ("Table1", "Table2" 및 등)은 추가 된 순서에 따라 기본 이름이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-178">If you add a <xref:System.Data.DataTable> to the collection with the <xref:System.Data.DataTableCollection.Add%2A> method, passing no arguments, the table is given a default name, based on the order in which the table was added ("Table1", "Table2", and so on).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f042f-179">반환 `false` 같은 다른 네임 스페이스 이름을 두 개 이상의 테이블의 경우.</span><span class="sxs-lookup"><span data-stu-id="f042f-179">Returns `false` when two or more tables have the same name but different namespaces.</span></span> <span data-ttu-id="f042f-180">테이블 이름을 정확히 한 개의 테이블과 일치시킬 때 모호성이 있으면 호출은 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-180">The call does not succeed if there is any ambiguity when matching a table name to exactly one table.</span></span>  
  
 <span data-ttu-id="f042f-181">인덱스를 가져올는 <xref:System.Data.DataTable>를 사용 하 여를 <xref:System.Data.DataTableCollection.IndexOf%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f042f-181">To get the index of a <xref:System.Data.DataTable>, use the <xref:System.Data.DataTableCollection.IndexOf%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-182">다음 예제에서는 이름이 "공급자"를 사용 하 여 테이블에 있는지 여부를 테스트 합니다 <xref:System.Data.DataTableCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-182">The following example tests whether a table with the name "Suppliers" exists in the <xref:System.Data.DataTableCollection>.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTableCollection.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
        <altmember cref="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
        <altmember cref="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.DataTable[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Data.DataTable[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As DataTable(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Data::DataTable ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.DataTable[] * int -&gt; unit" Usage="dataTableCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.DataTable[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="f042f-183">현재 <see cref="T:System.Array" /> 개체의 요소를 복사할 1차원 <see cref="T:System.Data.DataTableCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-183">The one-dimensional <see cref="T:System.Array" /> to copy the current <see cref="T:System.Data.DataTableCollection" /> object's elements into.</span></span></param>
        <param name="index"><span data-ttu-id="f042f-184">복사를 시작할 대상 <see cref="T:System.Array" /> 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-184">The destination <see cref="T:System.Array" /> index to start copying into.</span></span></param>
        <summary><span data-ttu-id="f042f-185">현재 <see cref="T:System.Data.DataTableCollection" />의 모든 요소를 1 차원 <see cref="T:System.Array" />의 지정된 대상 배열 인덱스에서 시작하는 위치에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-185">Copies all the elements of the current <see cref="T:System.Data.DataTableCollection" /> to a one-dimensional <see cref="T:System.Array" />, starting at the specified destination array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-186">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-186">This method can be overridden by a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f042f-187">지정된 <see cref="T:System.Data.DataTable" /> 개체 컬렉션의 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-187">Gets the index in the collection of the specified <see cref="T:System.Data.DataTable" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (table As DataTable) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Data.DataTable -&gt; int" Usage="dataTableCollection.IndexOf table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="f042f-188">검색할 <see langword="DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-188">The <see langword="DataTable" /> to search for.</span></span></param>
        <summary><span data-ttu-id="f042f-189">지정된 <see cref="T:System.Data.DataTable" /> 개체의 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-189">Gets the index of the specified <see cref="T:System.Data.DataTable" /> object.</span></span></summary>
        <returns><span data-ttu-id="f042f-190">테이블의 인덱스(0부터 시작)이거나, 테이블이 컬렉션에 없으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-190">The zero-based index of the table, or -1 if the table is not found in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-191">사용 된 <xref:System.Data.DataTableCollection.IndexOf%2A> 지정된 된 테이블의 정확한 인덱스를 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-191">Use the <xref:System.Data.DataTableCollection.IndexOf%2A> method to determine the exact index of a given table.</span></span>  
  
 <span data-ttu-id="f042f-192">호출 하기 전에 <xref:System.Data.DataTableCollection.IndexOf%2A>를 사용 하 여 테이블 (인덱스 또는 이름으로 지정 됨)의 존재 여부에 대 한 테스트 수를 <xref:System.Data.DataTableCollection.Contains%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f042f-192">Before calling <xref:System.Data.DataTableCollection.IndexOf%2A>, you can test for the existence of a table (specified by either index or name) by using the <xref:System.Data.DataTableCollection.Contains%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-193">다음 예제에서는 각 테이블의 인덱스를 반환 합니다 <xref:System.Data.DataTableCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-193">The following example returns the index of each table in the <xref:System.Data.DataTableCollection>.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
        <altmember cref="P:System.Data.DataTable.TableName" />
        <altmember cref="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.IndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (tableName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ tableName);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string -&gt; int" Usage="dataTableCollection.IndexOf tableName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="f042f-194">찾을 <see langword="DataTable" /> 개체의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-194">The name of the <see langword="DataTable" /> object to look for.</span></span></param>
        <summary><span data-ttu-id="f042f-195">지정된 이름을 가지는 <see cref="T:System.Data.DataTable" /> 개체 컬렉션의 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-195">Gets the index in the collection of the <see cref="T:System.Data.DataTable" /> object with the specified name.</span></span></summary>
        <returns><span data-ttu-id="f042f-196">지정된 이름을 가지는 <see langword="DataTable" />의 인덱스(0부터 시작)이거나, 테이블이 컬렉션에 없으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-196">The zero-based index of the <see langword="DataTable" /> with the specified name, or -1 if the table does not exist in the collection.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="f042f-197">두 개 이상의 테이블이 이름은 같지만 네임스페이스가 다르면 -1을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-197">Returns -1 when two or more tables have the same name but different namespaces.</span></span> <span data-ttu-id="f042f-198">테이블 이름을 정확히 한 개의 테이블과 일치시킬 때 모호성이 있으면 호출은 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-198">The call does not succeed if there is any ambiguity when matching a table name to exactly one table.</span></span>  
  
</para></block></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-199">이름을 지정 하는 `DataTable` 사용 하 여 개체를 <xref:System.Data.DataTable.TableName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-199">You specify the name of the `DataTable` object by using the <xref:System.Data.DataTable.TableName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-200">다음 예제에서는 명명 된 테이블의 인덱스를 반환 합니다 <xref:System.Data.DataTableCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-200">The following example returns the index of a named table in the <xref:System.Data.DataTableCollection>.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.IndexOf1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.IndexOf1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.IndexOf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.IndexOf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
        <altmember cref="P:System.Data.DataTable.TableName" />
        <altmember cref="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string tableName, string tableNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string tableName, string tableNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (tableName As String, tableNamespace As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ tableName, System::String ^ tableNamespace);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string * string -&gt; int" Usage="dataTableCollection.IndexOf (tableName, tableNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="tableNamespace" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="f042f-201">찾을 <see cref="T:System.Data.DataTable" /> 개체의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-201">The name of the <see cref="T:System.Data.DataTable" /> object to look for.</span></span></param>
        <param name="tableNamespace"><span data-ttu-id="f042f-202">찾을 <see cref="T:System.Data.DataTable" /> 네임스페이스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-202">The name of the <see cref="T:System.Data.DataTable" /> namespace to look in.</span></span></param>
        <summary><span data-ttu-id="f042f-203">지정된 <see cref="T:System.Data.DataTable" /> 개체 컬렉션의 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-203">Gets the index in the collection of the specified <see cref="T:System.Data.DataTable" /> object.</span></span></summary>
        <returns><span data-ttu-id="f042f-204">지정된 이름을 가지는 <see cref="T:System.Data.DataTable" />의 인덱스(0부터 시작)이거나, 테이블이 컬렉션에 없으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-204">The zero-based index of the <see cref="T:System.Data.DataTable" /> with the specified name, or -1 if the table does not exist in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-205">이름을 지정 하는 <xref:System.Data.DataTable> 사용 하 여 개체를 <xref:System.Data.DataTable.TableName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-205">You specify the name of the <xref:System.Data.DataTable> object by using the <xref:System.Data.DataTable.TableName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-206">다음 예제에서는 명명 된 테이블의 인덱스를 반환 합니다 <xref:System.Data.DataTableCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-206">The following example returns the index of a named table in the <xref:System.Data.DataTableCollection>.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.IndexOf1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.IndexOf1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.IndexOf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.IndexOf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
        <altmember cref="P:System.Data.DataTable.TableName" />
        <altmember cref="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f042f-207">컬렉션에서 지정된 <see cref="T:System.Data.DataTable" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-207">Gets the specified <see cref="T:System.Data.DataTable" /> object from the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.DataTable this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ default[int] { System::Data::DataTable ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Data.DataTable" Usage="System.Data.DataTableCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="f042f-208">찾을 <see cref="T:System.Data.DataTable" />의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-208">The zero-based index of the <see cref="T:System.Data.DataTable" /> to find.</span></span></param>
        <summary><span data-ttu-id="f042f-209">지정된 인덱스의 <see cref="T:System.Data.DataTable" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-209">Gets the <see cref="T:System.Data.DataTable" /> object at the specified index.</span></span></summary>
        <value><span data-ttu-id="f042f-210">A <see cref="T:System.Data.DataTable" /> ; 지정된 된 인덱스를 사용 하 여이 고, 그렇지 <see langword="null" /> 경우는 <see cref="T:System.Data.DataTable" /> 존재 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-210">A <see cref="T:System.Data.DataTable" /> with the specified index; otherwise <see langword="null" /> if the <see cref="T:System.Data.DataTable" /> does not exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-211">사용 된 <xref:System.Data.DataTableCollection.Contains%2A> 특정 인덱스를 사용 하 여 테이블의 존재 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-211">Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a table with a specific index exists.</span></span>  
  
 <span data-ttu-id="f042f-212">인덱스가 테이블의 이름, 경우에 사용 된 <xref:System.Data.DataTableCollection.IndexOf%2A> 인덱스를 반환 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="f042f-212">If you have the name of a table, but not its index, use the <xref:System.Data.DataTableCollection.IndexOf%2A> method to return the index.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-213">다음 예제에서는 검색을 <xref:System.Data.DataTable> 인덱스로.</span><span class="sxs-lookup"><span data-stu-id="f042f-213">The following example retrieves a <xref:System.Data.DataTable> by its index.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="f042f-214">인덱스 값이 컬렉션의 항목 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="f042f-214">The index value is greater than the number of items in the collection.</span></span></exception>
        <altmember cref="M:System.Data.DataTableCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.DataTable this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ default[System::String ^] { System::Data::DataTable ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Data.DataTable" Usage="System.Data.DataTableCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f042f-215">찾을 <see langword="DataTable" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-215">The name of the <see langword="DataTable" /> to find.</span></span></param>
        <summary><span data-ttu-id="f042f-216">지정된 이름의 <see cref="T:System.Data.DataTable" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-216">Gets the <see cref="T:System.Data.DataTable" /> object with the specified name.</span></span></summary>
        <value><span data-ttu-id="f042f-217">지정된 이름의 <see cref="T:System.Data.DataTable" />이거나, <see cref="T:System.Data.DataTable" />이 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-217">A <see cref="T:System.Data.DataTable" /> with the specified name; otherwise <see langword="null" /> if the <see cref="T:System.Data.DataTable" /> does not exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-218">경우는 <xref:System.Data.DataTable> 이름이 검색 문자열의 대/소문자와 일치 하는 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-218">If a <xref:System.Data.DataTable> name exists that matches the case of the search string, it is returned.</span></span> <span data-ttu-id="f042f-219">대/소문자 구분 검색을 수행 하는 고, 그렇지 경우에 <xref:System.Data.DataTable> 이 검색과 일치 하는 이름을 찾을 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-219">Otherwise a case-insensitive search is performed, and if a <xref:System.Data.DataTable> name is found that matches this search, it is returned.</span></span>  
  
 <span data-ttu-id="f042f-220">사용 된 <xref:System.Data.DataTableCollection.Contains%2A> 특정 이름 또는 인덱스를 사용 하 여 테이블의 존재 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-220">Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a table with a specific name or index exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-221">다음 예제에서는 단일 테이블을 이름별로 검색 된 <xref:System.Data.DataTableCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-221">The following example retrieves a single table by name from the <xref:System.Data.DataTableCollection>.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.DataTable this[string name, string tableNamespace] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableCollection.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String, tableNamespace As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ default[System::String ^, System::String ^] { System::Data::DataTable ^ get(System::String ^ name, System::String ^ tableNamespace); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : System.Data.DataTable" Usage="System.Data.DataTableCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="tableNamespace" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f042f-222">찾을 <see langword="DataTable" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-222">The name of the <see langword="DataTable" /> to find.</span></span></param>
        <param name="tableNamespace"><span data-ttu-id="f042f-223">찾을 <see cref="T:System.Data.DataTable" /> 네임스페이스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-223">The name of the <see cref="T:System.Data.DataTable" /> namespace to look in.</span></span></param>
        <summary><span data-ttu-id="f042f-224">지정된 네임스페이스에서 지정된 이름을 가진 <see cref="T:System.Data.DataTable" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-224">Gets the <see cref="T:System.Data.DataTable" /> object with the specified name in the specified namespace.</span></span></summary>
        <value><span data-ttu-id="f042f-225">지정된 이름의 <see cref="T:System.Data.DataTable" />이거나, <see cref="T:System.Data.DataTable" />이 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-225">A <see cref="T:System.Data.DataTable" /> with the specified name; otherwise <see langword="null" /> if the <see cref="T:System.Data.DataTable" /> does not exist.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected override System.Collections.ArrayList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList List" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableCollection.List" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property List As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ArrayList ^ List { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.ArrayList" Usage="System.Data.DataTableCollection.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCollectionChanged(class System.ComponentModel.CollectionChangeEventArgs ccevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCollectionChanged (ccevent As CollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCollectionChanged(System::ComponentModel::CollectionChangeEventArgs ^ ccevent);" />
      <MemberSignature Language="F#" Value="abstract member OnCollectionChanged : System.ComponentModel.CollectionChangeEventArgs -&gt; unit&#xA;override this.OnCollectionChanged : System.ComponentModel.CollectionChangeEventArgs -&gt; unit" Usage="dataTableCollection.OnCollectionChanged ccevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ccevent" Type="System.ComponentModel.CollectionChangeEventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="ccevent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanging">
      <MemberSignature Language="C#" Value="protected internal virtual void OnCollectionChanging (System.ComponentModel.CollectionChangeEventArgs ccevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCollectionChanging(class System.ComponentModel.CollectionChangeEventArgs ccevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnCollectionChanging (ccevent As CollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnCollectionChanging(System::ComponentModel::CollectionChangeEventArgs ^ ccevent);" />
      <MemberSignature Language="F#" Value="abstract member OnCollectionChanging : System.ComponentModel.CollectionChangeEventArgs -&gt; unit&#xA;override this.OnCollectionChanging : System.ComponentModel.CollectionChangeEventArgs -&gt; unit" Usage="dataTableCollection.OnCollectionChanging ccevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ccevent" Type="System.ComponentModel.CollectionChangeEventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="ccevent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f042f-226">컬렉션에서 지정된 <see cref="T:System.Data.DataTable" /> 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-226">Removes a specified <see cref="T:System.Data.DataTable" /> object from the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (table As DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Data.DataTable -&gt; unit" Usage="dataTableCollection.Remove table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="f042f-227">제거할 <see langword="DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-227">The <see langword="DataTable" /> to remove.</span></span></param>
        <summary><span data-ttu-id="f042f-228">컬렉션에서 지정된 <see cref="T:System.Data.DataTable" /> 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-228">Removes the specified <see cref="T:System.Data.DataTable" /> object from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-229"><xref:System.Data.DataTableCollection.CollectionChanged> 테이블을 성공적으로 제거 하면 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-229">The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.</span></span>  
  
 <span data-ttu-id="f042f-230">특정된 테이블에 존재 하 고 호출 하기 전에 제거할 수 있는지 여부를 결정할 <xref:System.Data.DataTableCollection.Remove%2A>를 사용 합니다 <xref:System.Data.DataTableCollection.Contains%2A> 및 <xref:System.Data.DataTableCollection.CanRemove%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f042f-230">To determine whether a given table exists and can be removed before invoking <xref:System.Data.DataTableCollection.Remove%2A>, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-231">다음 예제에서는 합니다 <xref:System.Data.DataTableCollection.CanRemove%2A> 각 테이블에서 제거할 수 있는지 여부를 테스트 하는 메서드를 <xref:System.Data.DataSet>입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-231">The following example uses the <xref:System.Data.DataTableCollection.CanRemove%2A> method to test whether each table can be removed from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f042f-232">그렇다면는 <xref:System.Data.DataTableCollection.Remove%2A> 메서드를 호출 하는 테이블을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-232">If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f042f-233">테이블에 대해 지정된 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="f042f-233">The value specified for the table is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f042f-234">테이블이 이 컬렉션에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="f042f-234">The table does not belong to this collection.</span></span>  
  
<span data-ttu-id="f042f-235">또는</span><span class="sxs-lookup"><span data-stu-id="f042f-235">-or-</span></span> 
<span data-ttu-id="f042f-236">테이블이 관계의 일부인 경우</span><span class="sxs-lookup"><span data-stu-id="f042f-236">The table is part of a relationship.</span></span></exception>
        <altmember cref="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
        <altmember cref="M:System.Data.DataTableCollection.Contains(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="dataTableCollection.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f042f-237">제거할 <see cref="T:System.Data.DataTable" /> 개체의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-237">The name of the <see cref="T:System.Data.DataTable" /> object to remove.</span></span></param>
        <summary><span data-ttu-id="f042f-238">컬렉션에서 지정된 이름의 <see cref="T:System.Data.DataTable" /> 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-238">Removes the <see cref="T:System.Data.DataTable" /> object with the specified name from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-239"><xref:System.Data.DataTableCollection.CollectionChanged> 테이블을 성공적으로 제거 하면 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-239">The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.</span></span>  
  
 <span data-ttu-id="f042f-240">특정된 테이블에 존재 하 고 호출 하기 전에 제거할 수 있는지 여부를 결정할 <xref:System.Data.DataTableCollection.Remove%2A>를 사용 합니다 <xref:System.Data.DataTableCollection.Contains%2A> 및 <xref:System.Data.DataTableCollection.CanRemove%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f042f-240">To determine whether a given table exists and can be removed before invoking <xref:System.Data.DataTableCollection.Remove%2A>, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-241">다음 예제에서는 합니다 <xref:System.Data.DataTableCollection.Contains%2A> 및 <xref:System.Data.DataTableCollection.CanRemove%2A> 메서드는 명명 된 표 존재 하 고 제거할 수 있는지 여부를 테스트 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-241">The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a named table exists and can be removed.</span></span> <span data-ttu-id="f042f-242">그렇다면는 <xref:System.Data.DataTableCollection.Remove%2A> 메서드를 호출 하는 테이블을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-242">If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.Remove1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Remove1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.Remove1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Remove1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f042f-243">컬렉션에 이름이 지정된 테이블이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="f042f-243">The collection does not have a table with the specified name.</span></span></exception>
        <altmember cref="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
        <altmember cref="M:System.Data.DataTableCollection.Contains(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name, string tableNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name, string tableNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.Remove(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String, tableNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name, System::String ^ tableNamespace);" />
      <MemberSignature Language="F#" Value="member this.Remove : string * string -&gt; unit" Usage="dataTableCollection.Remove (name, tableNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="tableNamespace" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f042f-244">제거할 <see cref="T:System.Data.DataTable" /> 개체의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-244">The name of the <see cref="T:System.Data.DataTable" /> object to remove.</span></span></param>
        <param name="tableNamespace"><span data-ttu-id="f042f-245">찾을 <see cref="T:System.Data.DataTable" /> 네임스페이스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-245">The name of the <see cref="T:System.Data.DataTable" /> namespace to look in.</span></span></param>
        <summary><span data-ttu-id="f042f-246">컬렉션에서 지정된 이름의 <see cref="T:System.Data.DataTable" /> 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-246">Removes the <see cref="T:System.Data.DataTable" /> object with the specified name from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-247"><xref:System.Data.DataTableCollection.CollectionChanged> 테이블을 성공적으로 제거 하면 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-247">The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.</span></span>  
  
 <span data-ttu-id="f042f-248">특정된 테이블에 존재 하 고 호출 하기 전에 제거할 수 있는지 여부를 결정할 <xref:System.Data.DataTableCollection.Remove%2A>를 사용 합니다 <xref:System.Data.DataTableCollection.Contains%2A> 및 <xref:System.Data.DataTableCollection.CanRemove%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f042f-248">To determine whether a given table exists and can be removed before invoking <xref:System.Data.DataTableCollection.Remove%2A>, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-249">다음 예제에서는 합니다 <xref:System.Data.DataTableCollection.Contains%2A> 및 <xref:System.Data.DataTableCollection.CanRemove%2A> 메서드는 명명 된 표 존재 하 고 제거할 수 있는지 여부를 테스트 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-249">The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a named table exists and can be removed.</span></span> <span data-ttu-id="f042f-250">그렇다면는 <xref:System.Data.DataTableCollection.Remove%2A> 메서드를 호출 하는 테이블을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-250">If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.Remove1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Remove1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.Remove1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.Remove1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f042f-251">컬렉션에 이름이 지정된 테이블이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="f042f-251">The collection does not have a table with the specified name.</span></span></exception>
        <altmember cref="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
        <altmember cref="M:System.Data.DataTableCollection.Contains(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="dataTableCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="f042f-252">제거할 <see langword="DataTable" />의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-252">The index of the <see langword="DataTable" /> to remove.</span></span></param>
        <summary><span data-ttu-id="f042f-253">컬렉션에서 지정된 인덱스의 <see cref="T:System.Data.DataTable" /> 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-253">Removes the <see cref="T:System.Data.DataTable" /> object at the specified index from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f042f-254"><xref:System.Data.DataTableCollection.CollectionChanged> 테이블을 성공적으로 제거 하면 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-254">The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f042f-255">다음 예제에서는 합니다 <xref:System.Data.DataTableCollection.Contains%2A> 및 <xref:System.Data.DataTableCollection.CanRemove%2A> 10 인덱스가 있는 테이블이 존재 하는지 여부를 테스트 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-255">The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a table exists with the index 10.</span></span> <span data-ttu-id="f042f-256">그렇다면는 <xref:System.Data.DataTableCollection.RemoveAt%2A> 메서드를 호출 하는 테이블을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="f042f-256">If so, the <xref:System.Data.DataTableCollection.RemoveAt%2A> method is called to remove the table.</span></span>  
  
 [!code-csharp[Classic WebData DataTableCollection.RemoveAt#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.RemoveAt/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableCollection.RemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableCollection.RemoveAt/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f042f-257">컬렉션에 지정된 인덱스의 테이블이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="f042f-257">The collection does not have a table at the specified index.</span></span></exception>
        <altmember cref="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
        <altmember cref="M:System.Data.DataTableCollection.Contains(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>