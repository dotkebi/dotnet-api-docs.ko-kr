<Type Name="IDataParameter" FullName="System.Data.IDataParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2c8f54d06db7c4524a017d4454e9390281819bcc" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58717917" /></Metadata><TypeSignature Language="C#" Value="public interface IDataParameter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataParameter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataParameter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataParameter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataParameter" />
  <TypeSignature Language="F#" Value="type IDataParameter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2082c-101">Command 개체에 대한 매개 변수 및 선택적으로 <see cref="T:System.Data.DataSet" /> 열에 대한 매핑을 나타내며, 데이터 소스에 액세스하는 .NET Framework 데이터 공급자에 의해 구현됩니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-101">Represents a parameter to a Command object, and optionally, its mapping to <see cref="T:System.Data.DataSet" /> columns; and is implemented by .NET Framework data providers that access data sources.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2082c-102"><xref:System.Data.IDataParameter> 명령 개체를 매개 변수를 나타내는 매개 변수 클래스를 구현 하는 상속 클래스를 사용 하는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-102">The <xref:System.Data.IDataParameter> interface allows an inheriting class to implement a Parameter class, which represents a parameter to a Command object.</span></span> <span data-ttu-id="2082c-103">매개 변수 클래스에 대 한 자세한 내용은 참조 하세요. [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-103">For more information about Parameter classes, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
 <span data-ttu-id="2082c-104">애플리케이션의 인스턴스를 만들지 않습니다 합니다 <xref:System.Data.IDataParameter> 인터페이스를 직접 상속 된 클래스의 인스턴스를 만들고 있지만 <xref:System.Data.IDataParameter>합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-104">An application does not create an instance of the <xref:System.Data.IDataParameter> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDataParameter>.</span></span>  
  
 <span data-ttu-id="2082c-105">상속 된 클래스 <xref:System.Data.IDataParameter> 상속 된 멤버를 구현 해야 하며 일반적으로 공급자 특정 기능을 추가 하기 위한 추가 멤버를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-105">Classes that inherit <xref:System.Data.IDataParameter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="2082c-106">예를 들어 합니다 <xref:System.Data.IDataParameter> 인터페이스를 정의 합니다 <xref:System.Data.IDataParameter.DbType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-106">For example, the <xref:System.Data.IDataParameter> interface defines the <xref:System.Data.IDataParameter.DbType%2A> property.</span></span> <span data-ttu-id="2082c-107">차례로 합니다 <xref:System.Data.OleDb.OleDbParameter> 클래스는이 속성을 상속 하 고도 정의 합니다 <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-107">In turn, the <xref:System.Data.OleDb.OleDbParameter> class inherits this property, and also defines the <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2082c-108">다음 예제에서는 파생된 클래스의 여러 인스턴스를 만듭니다 <xref:System.Data.SqlClient.SqlParameter>을 통해 합니다 <xref:System.Data.SqlClient.SqlParameterCollection> 내에서 컬렉션을 <xref:System.Data.SqlClient.SqlDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-108">The following example creates multiple instances of the derived class, <xref:System.Data.SqlClient.SqlParameter>, through the <xref:System.Data.SqlClient.SqlParameterCollection> collection within the <xref:System.Data.SqlClient.SqlDataAdapter>.</span></span> <span data-ttu-id="2082c-109">이러한 매개 변수는 데이터를 데이터 원본에서 데이터를 선택 하는 데는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-109">These parameters are used to select data from the data source and place the data in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="2082c-110">이 예에서는 가정 하는 <xref:System.Data.DataSet> 및 <xref:System.Data.SqlClient.SqlDataAdapter> 적절 한 스키마, 명령 및 연결을 사용 하 여 이미 생성 되어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-110">This example assumes that a <xref:System.Data.DataSet> and a <xref:System.Data.SqlClient.SqlDataAdapter> have already been created with the appropriate schema, commands, and connection.</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="2082c-111">.NET Framework 데이터 공급자의 일관성 수준을 올릴 폼에서 상속 하는 클래스의 이름을 <paramref name="Prv" /> 매개 변수는 <paramref name="Prv" /> 는 특정.NET Framework 데이터 공급자 네임 스페이스의 모든 클래스에 지정 된 일관 된 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-111">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> Parameter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="2082c-112">예를 들어 <paramref name="Sql" /> 접두사입니다 합니다 <see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스는 <see langword="System.Data.SqlClient" /> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-112">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
<span data-ttu-id="2082c-113">상속 하는 경우는 <see cref="T:System.Data.IDataParameter" /> 인터페이스 다음 생성자를 구현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-113">When you inherit from the <see cref="T:System.Data.IDataParameter" /> interface, you should implement the following constructors:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="2082c-114">항목</span><span class="sxs-lookup"><span data-stu-id="2082c-114">Item</span></span> 
 </term><description> <span data-ttu-id="2082c-115">설명</span><span class="sxs-lookup"><span data-stu-id="2082c-115">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="2082c-116">PrvParameter()</span><span class="sxs-lookup"><span data-stu-id="2082c-116">PrvParameter()</span></span> 
 </term><description> <span data-ttu-id="2082c-117">매개 변수 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-117">Initializes a new instance of the Parameter class.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2082c-118">PrvParameter (문자열 이름, PrvDbType 데이터 형식)</span><span class="sxs-lookup"><span data-stu-id="2082c-118">PrvParameter(string name, PrvDbType dataType)</span></span> 
 </term><description> <span data-ttu-id="2082c-119">매개 변수 이름과 데이터 형식 사용 하 여 매개 변수 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-119">Initializes a new instance of the Parameter class with the parameter name and data type.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2082c-120">PrvParameter (문자열 이름, 개체 값)</span><span class="sxs-lookup"><span data-stu-id="2082c-120">PrvParameter(string name, object value)</span></span> 
 </term><description> <span data-ttu-id="2082c-121">매개 변수 이름과 매개 변수의 값인 개체를 사용 하 여 매개 변수 클래스의 새 인스턴스를 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-121">Initializes a new instance of the Parameter class with the parameter name and an object that is the value of the Parameter.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2082c-122">PrvParameter (문자열 이름, PrvDbType dataType, int 크기)</span><span class="sxs-lookup"><span data-stu-id="2082c-122">PrvParameter(string name, PrvDbType dataType, int size)</span></span> 
 </term><description> <span data-ttu-id="2082c-123">매개 변수 이름, 데이터 형식 및 너비를 사용 하 여 매개 변수 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-123">Initializes a new instance of the Parameter class with the parameter name, data type, and width.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2082c-124">PrvParameter (문자열 이름, PrvDbType dataType, int 크기, 문자열 srcColumn)</span><span class="sxs-lookup"><span data-stu-id="2082c-124">PrvParameter(string name, PrvDbType dataType, int size, string srcColumn)</span></span> 
 </term><description> <span data-ttu-id="2082c-125">매개 변수 이름, 데이터 형식, 너비 및 소스 열 이름을 사용 하 여 DbParameter 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-125">Initializes a new instance of the DbParameter class with the parameter name, data type, width, and source column name.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2082c-126">PrvParameter (문자열 parameterName, PrvDbType dbType, int 크기, ParameterDirection 방향, 부울 isNullable, 바이트 정밀도, 바이트 크기 조정, 문자열 srcColumn, DataRowVersion srcVersion, 개체 값)</span><span class="sxs-lookup"><span data-stu-id="2082c-126">PrvParameter(string parameterName, PrvDbType dbType, int size, ParameterDirection direction, Boolean isNullable, Byte precision, Byte scale, string srcColumn, DataRowVersion srcVersion, object value)</span></span> 
 </term><description> <span data-ttu-id="2082c-127">새 인스턴스를 초기화 합니다 <see cref="T:System.Data.OleDb.OleDbParameter" /> 매개 변수 이름, 데이터 형식, 너비, 원본 열 이름, 매개 변수 방향, 전체 자릿수, 및 기타 속성을 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-127">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbParameter" /> class with the parameter name, data type, width, source column name, parameter direction, numeric precision, and other properties.</span></span>  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Data.IDataParameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2082c-128">매개 변수의 <see cref="T:System.Data.DbType" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-128">Gets or sets the <see cref="T:System.Data.DbType" /> of the parameter.</span></span></summary>
        <value><span data-ttu-id="2082c-129"><see cref="T:System.Data.DbType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-129">One of the <see cref="T:System.Data.DbType" /> values.</span></span> <span data-ttu-id="2082c-130">기본값은 <see cref="F:System.Data.DbType.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-130">The default is <see cref="F:System.Data.DbType.String" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2082c-131">(여기서 Prv 접두사를 나타내는 공급자별) PrvDbType 및 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-131">The PrvDbType (where Prv represents the provider-specific prefix) and <xref:System.Data.SqlClient.SqlParameter.DbType%2A> are linked.</span></span> <span data-ttu-id="2082c-132">따라서 설정 된 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 는 PrvDbType 지원 PrvDbType 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-132">Therefore, setting the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> changes the PrvDbType to a supporting PrvDbType.</span></span>  
  
 <span data-ttu-id="2082c-133">지원 되는 데이터 형식의 목록, 적절 한.NET Framework 데이터 공급자 PrvDbType 멤버를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="2082c-133">For a list of the supported data types, see the appropriate .NET Framework data provider PrvDbType member.</span></span> <span data-ttu-id="2082c-134">자세한 내용은 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-134">For more information, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2082c-135">속성이 유효한 <see cref="T:System.Data.DbType" />으로 설정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="2082c-135">The property was not set to a valid <see cref="T:System.Data.DbType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Data.IDataParameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2082c-136">매개 변수가 입력 전용, 출력 전용, 양방향 또는 저장 프로시저 반환 값 매개 변수인지 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-136">Gets or sets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.</span></span></summary>
        <value><span data-ttu-id="2082c-137"><see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-137">One of the <see cref="T:System.Data.ParameterDirection" /> values.</span></span> <span data-ttu-id="2082c-138">기본값은 <see langword="Input" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-138">The default is <see langword="Input" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2082c-139">경우는 <xref:System.Data.ParameterDirection> 출력과 연결 된 실행은 <xref:System.Data.SqlClient.SqlCommand> 값을 반환 하지 않습니다는 <xref:System.Data.IDataParameter> null 값을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-139">If the <xref:System.Data.ParameterDirection> is output, and execution of the associated <xref:System.Data.SqlClient.SqlCommand> does not return a value, the <xref:System.Data.IDataParameter> contains a null value.</span></span>  
  
 <span data-ttu-id="2082c-140">마지막 결과 집합에서 마지막 행을 읽은 후 `Output`하십시오 `InputOut`, 및 `ReturnValue` 매개 변수가 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-140">After the last row from the last resultset is read, `Output`, `InputOut`, and `ReturnValue` parameters are updated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2082c-141">다음 예제에서는 구현 하는 클래스의 인스턴스를 만들고 <xref:System.Data.SqlClient.SqlParameter>, 해당 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-141">The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter.Direction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Direction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Direction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Direction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2082c-142">속성에 유효한 <see cref="T:System.Data.ParameterDirection" /> 값 중 하나를 설정하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="2082c-142">The property was not set to one of the valid <see cref="T:System.Data.ParameterDirection" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Data.IDataParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2082c-143">매개 변수에 null 값이 허용되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-143">Gets a value indicating whether the parameter accepts null values.</span></span></summary>
        <value><span data-ttu-id="2082c-144">null 값이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-144"><see langword="true" /> if null values are accepted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2082c-145">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-145">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2082c-146">Null 값이 사용 하 여 처리 되는 <xref:System.DBNull> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-146">Null values are handled using the <xref:System.DBNull> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2082c-147">다음 예제에서는 구현 하는 클래스의 인스턴스를 만들고 <xref:System.Data.SqlClient.SqlParameter>, 해당 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-147">The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="System.Data.IDataParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2082c-148"><see cref="T:System.Data.IDataParameter" />의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-148">Gets or sets the name of the <see cref="T:System.Data.IDataParameter" />.</span></span></summary>
        <value><span data-ttu-id="2082c-149"><see cref="T:System.Data.IDataParameter" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-149">The name of the <see cref="T:System.Data.IDataParameter" />.</span></span> <span data-ttu-id="2082c-150">기본값은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-150">The default is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="2082c-151">합니다 <xref:System.Data.IDataParameter.ParameterName%2A> 형식으로 지정 됩니다 \@ *paramname*합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-151">The <xref:System.Data.IDataParameter.ParameterName%2A> is specified in the form \@*paramname*.</span></span> <span data-ttu-id="2082c-152">설정 해야 <xref:System.Data.IDataParameter.ParameterName%2A> 매개 변수를 사용 하는 명령을 실행 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-152">You must set <xref:System.Data.IDataParameter.ParameterName%2A> before executing a command that relies on parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2082c-153">다음 예제에서는 구현 하는 클래스의 인스턴스를 만들고 <xref:System.Data.SqlClient.SqlParameter>, 해당 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-153">The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.IDataParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2082c-154"><see cref="T:System.Data.DataSet" />으로 매핑되고 <see cref="P:System.Data.IDataParameter.Value" />를 로드하거나 반환하는 데 사용되는 소스 열의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-154">Gets or sets the name of the source column that is mapped to the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:System.Data.IDataParameter.Value" />.</span></span></summary>
        <value><span data-ttu-id="2082c-155"><see cref="T:System.Data.DataSet" />으로 매핑되는 소스 열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-155">The name of the source column that is mapped to the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="2082c-156">기본값은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-156">The default is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2082c-157">값 간의 링크를 <xref:System.Data.IDataParameter> 하며 <xref:System.Data.DataTable> 값에 따라 양방향 수를 <xref:System.Data.IDataParameter.Direction%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="2082c-157">The link between the value of the <xref:System.Data.IDataParameter> and the <xref:System.Data.DataTable> may be bidirectional depending on the value of the <xref:System.Data.IDataParameter.Direction%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2082c-158">다음 예제에서는 구현 하는 클래스의 인스턴스를 만들고 <xref:System.Data.SqlClient.SqlParameter>, 해당 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-158">The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter.SourceColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SourceColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SourceVersion : System.Data.DataRowVersion with get, set" Usage="System.Data.IDataParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2082c-159"><see cref="P:System.Data.IDataParameter.Value" />를 로드할 때 사용할 <see cref="T:System.Data.DataRowVersion" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-159">Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when loading <see cref="P:System.Data.IDataParameter.Value" />.</span></span></summary>
        <value><span data-ttu-id="2082c-160"><see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-160">One of the <see cref="T:System.Data.DataRowVersion" /> values.</span></span> <span data-ttu-id="2082c-161">기본값은 <see langword="Current" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-161">The default is <see langword="Current" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2082c-162">이 속성은 사용 합니다 <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> 중는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 원래 또는 현재 값을 매개 변수 값을 사용할지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="2082c-162">This property is used by the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> during the <xref:System.Data.Common.DbDataAdapter.Update%2A> to determine whether the original or current value is used for a parameter value.</span></span> <span data-ttu-id="2082c-163">이렇게 하면 기본 키를 업데이트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-163">This allows primary keys to be updated.</span></span> <span data-ttu-id="2082c-164">이 속성이 무시 되는 <xref:System.Data.IDbDataAdapter.InsertCommand%2A> 및 <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-164">This property is ignored by the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> and <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span> <span data-ttu-id="2082c-165">버전에이 속성은 <xref:System.Data.DataRow> 에서 사용 하는 합니다 <xref:System.Data.DataRow.Item%2A> 속성 또는 <xref:System.Data.DataRow.GetChildRows%2A> 메서드의 <xref:System.Data.DataRow> 개체.</span><span class="sxs-lookup"><span data-stu-id="2082c-165">This property is set to the version of the <xref:System.Data.DataRow> used by the <xref:System.Data.DataRow.Item%2A> property, or the <xref:System.Data.DataRow.GetChildRows%2A> method of the <xref:System.Data.DataRow> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2082c-166">다음 예제에서는 구현 하는 클래스의 인스턴스를 만들고 <xref:System.Data.SqlClient.SqlParameter>, 해당 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-166">The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter.SourceVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SourceVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2082c-167">속성이 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나로 설정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="2082c-167">The property was not set one of the <see cref="T:System.Data.DataRowVersion" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.IDataParameter.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2082c-168">매개 변수의 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-168">Gets or sets the value of the parameter.</span></span></summary>
        <value><span data-ttu-id="2082c-169">매개 변수의 값인 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-169">An <see cref="T:System.Object" /> that is the value of the parameter.</span></span> <span data-ttu-id="2082c-170">기본값은 null입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-170">The default value is null.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2082c-171">입력 매개 변수의 값에 바인딩되는 <xref:System.Data.IDbCommand> 서버로 전송 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-171">For input parameters, the value is bound to the <xref:System.Data.IDbCommand> that is sent to the server.</span></span> <span data-ttu-id="2082c-172">출력 및 반환 값 매개 변수 값은 설정 완료 되 면 합니다 <xref:System.Data.IDbCommand> 후는 <xref:System.Data.IDataReader> 닫혀 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-172">For output and return value parameters, the value is set on completion of the <xref:System.Data.IDbCommand> and after the <xref:System.Data.IDataReader> is closed.</span></span>  
  
 <span data-ttu-id="2082c-173">Null 매개 변수 값을 서버로 전송 하는 경우에 사용자 지정 해야 합니다 `DBNull`null이 아니고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-173">When sending a null parameter value to the server, the user must specify `DBNull`, not null.</span></span> <span data-ttu-id="2082c-174">시스템에서 null 값은 값이 없는 빈 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-174">The null value in the system is an empty object that has no value.</span></span> <span data-ttu-id="2082c-175">`DBNull` 은 null 값을 나타내는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-175">`DBNull` is used to represent null values.</span></span>  
  
 <span data-ttu-id="2082c-176">응용 프로그램 데이터베이스 형식을 지정 하는 경우 공급자가 서버에 데이터를 보내면 해당 형식에 바인딩된 값 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-176">If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server.</span></span> <span data-ttu-id="2082c-177">공급자가 지 원하는 경우 모든 유형의 값을 변환 하려고 합니다 <xref:System.IConvertible> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-177">The provider attempts to convert any type of value if it supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2082c-178">지정된 된 형식의 값을 사용 하 여 호환 되지 않는 경우 변환 오류가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-178">Conversion errors may result if the specified type is not compatible with the value.</span></span>  
  
 <span data-ttu-id="2082c-179">합니다 <xref:System.Data.SqlClient.SqlParameter.Value%2A> 속성을 덮어씁니다 <xref:System.Data.Common.DbDataAdapter.Update%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-179">The <xref:System.Data.SqlClient.SqlParameter.Value%2A> property is overwritten by <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2082c-180">다음 예제에서는 구현 하는 클래스의 인스턴스를 만들고 <xref:System.Data.SqlClient.SqlParameter>, 해당 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2082c-180">The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter.Value Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Value Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Value Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Value Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>