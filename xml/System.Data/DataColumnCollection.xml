<Type Name="DataColumnCollection" FullName="System.Data.DataColumnCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3fbf3bae4eed1d7b26681fbb23be3b76edd9d731" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57926425" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataColumnCollection : System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataColumnCollection extends System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataColumnCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataColumnCollection&#xA;Inherits InternalDataCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumnCollection sealed : System::Data::InternalDataCollectionBase" />
  <TypeSignature Language="F#" Value="type DataColumnCollection = class&#xA;    inherit InternalDataCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.InternalDataCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultEvent("CollectionChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="10608-101"><see cref="T:System.Data.DataColumn" />에 대한 <see cref="T:System.Data.DataTable" /> 개체의 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="10608-101">Represents a collection of <see cref="T:System.Data.DataColumn" /> objects for a <see cref="T:System.Data.DataTable" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10608-102">합니다 <xref:System.Data.DataColumnCollection> 의 스키마를 정의 <xref:System.Data.DataTable>, 각 데이터의 종류를 결정 하 고 <xref:System.Data.DataColumn> 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="10608-102">The <xref:System.Data.DataColumnCollection> defines the schema of a <xref:System.Data.DataTable>, and determines what kind of data each <xref:System.Data.DataColumn> can contain.</span></span> <span data-ttu-id="10608-103">액세스할 수 있습니다는 <xref:System.Data.DataColumnCollection> 를 통해를 <xref:System.Data.DataTable.Columns%2A> 의 속성을 <xref:System.Data.DataTable> 개체.</span><span class="sxs-lookup"><span data-stu-id="10608-103">You can access the <xref:System.Data.DataColumnCollection> through the <xref:System.Data.DataTable.Columns%2A> property of the <xref:System.Data.DataTable> object.</span></span>  
  
 <span data-ttu-id="10608-104"><xref:System.Data.DataColumnCollection> 사용 하는 <xref:System.Data.DataColumnCollection.Add%2A> 및 <xref:System.Data.DataColumnCollection.Remove%2A> 삽입 및 삭제 방법 <xref:System.Data.DataColumn> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-104">The <xref:System.Data.DataColumnCollection> uses the <xref:System.Data.DataColumnCollection.Add%2A> and <xref:System.Data.DataColumnCollection.Remove%2A> methods to insert and delete <xref:System.Data.DataColumn> objects.</span></span> <span data-ttu-id="10608-105">사용 하 여는 <xref:System.Data.InternalDataCollectionBase.Count%2A> 속성을 얼마나 많은 <xref:System.Data.DataColumn> 컬렉션에 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-105">Use the <xref:System.Data.InternalDataCollectionBase.Count%2A> property to determine how many <xref:System.Data.DataColumn> objects are in the collection.</span></span> <span data-ttu-id="10608-106">사용 된 <xref:System.Data.DataColumnCollection.Contains%2A> 지정된 된 인덱스 또는 열 이름을 컬렉션에 있는지 여부를 확인 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="10608-106">Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to verify whether a specified index or column name exists in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10608-107">다음 예제에서는 컬렉션을 반복 <xref:System.Data.DataColumn> 개체 및 다양 한 속성 컬렉션의 각 열을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-107">The following example iterates through a collection of <xref:System.Data.DataColumn> objects and prints various properties of each column in the collection.</span></span>  
  
 [!code-csharp[Classic WebData DataColumnCollection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="10608-108">이 유형은 다중 스레드 읽기 작업에 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-108">This type is safe for multithreaded read operations.</span></span> <span data-ttu-id="10608-109">모든 쓰기 작업을 동기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-109">You must synchronize any write operations.</span></span></threadsafe>
    <altmember cref="P:System.Data.DataTable.Columns" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataRelation" />
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataSet" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="10608-110"><see cref="T:System.Data.DataColumn" /> 개체를 만든 다음 <see cref="T:System.Data.DataColumnCollection" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-110">Creates and adds a <see cref="T:System.Data.DataColumn" /> object to the <see cref="T:System.Data.DataColumnCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn Add ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn Add() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Add" />
      <MemberSignature Language="VB.NET" Value="Public Function Add () As DataColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataColumn ^ Add();" />
      <MemberSignature Language="F#" Value="member this.Add : unit -&gt; System.Data.DataColumn" Usage="dataColumnCollection.Add " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10608-111"><see cref="T:System.Data.DataColumn" /> 개체를 만든 다음 <see cref="T:System.Data.DataColumnCollection" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-111">Creates and adds a <see cref="T:System.Data.DataColumn" /> object to the <see cref="T:System.Data.DataColumnCollection" />.</span></span></summary>
        <returns><span data-ttu-id="10608-112">새로 만든 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-112">The newly created <see cref="T:System.Data.DataColumn" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10608-113">("Column1", "Column2" 등) 기본 이름이 열에 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="10608-113">A default name ("Column1", "Column2", and so on) is given to the column.</span></span>  
  
 <span data-ttu-id="10608-114">컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-114">If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10608-115">다음 예제를 만들고 추가 하는 새 <xref:System.Data.DataColumn> 에 <xref:System.Data.DataColumnCollection> 의 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-115">The following example creates and adds a new <xref:System.Data.DataColumn> to the <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-vb[Classic WebData DataColumnCollection.Add5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Add5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Data.DataColumn -&gt; unit" Usage="dataColumnCollection.Add column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="10608-116">추가할 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-116">The <see cref="T:System.Data.DataColumn" /> to add.</span></span></param>
        <summary><span data-ttu-id="10608-117">지정된 <see cref="T:System.Data.DataColumn" /> 개체를 만든 다음 <see cref="T:System.Data.DataColumnCollection" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-117">Creates and adds the specified <see cref="T:System.Data.DataColumn" /> object to the <see cref="T:System.Data.DataColumnCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10608-118">컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-118">If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10608-119">다음 예제에서는 추가 <xref:System.Data.DataColumn> 에 <xref:System.Data.DataColumnCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-119">The following example adds a <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection>.</span></span>  
  
 [!code-vb[Classic WebData DataColumnCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="10608-120"><paramref name="column" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="10608-120">The <paramref name="column" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="10608-121">열이 이 컬렉션이나 다른 컬렉션에 이미 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="10608-121">The column already belongs to this collection, or to another collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="10608-122">지정된 이름의 열이 컬렉션에 이미 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="10608-122">The collection already has a column with the specified name.</span></span> <span data-ttu-id="10608-123">(대/소문자를 구분하지 않고 비교합니다.)</span><span class="sxs-lookup"><span data-stu-id="10608-123">(The comparison is not case-sensitive.)</span></span></exception>
        <exception cref="T:System.Data.InvalidExpressionException"><span data-ttu-id="10608-124">식이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="10608-124">The expression is invalid.</span></span> <span data-ttu-id="10608-125">식을 만드는 방법에 대한 자세한 내용은 <see cref="P:System.Data.DataColumn.Expression" /> 속성을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="10608-125">See the <see cref="P:System.Data.DataColumn.Expression" /> property for more information about how to create expressions.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="E:System.Data.DataColumnCollection.CollectionChanged" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn Add (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn Add(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (columnName As String) As DataColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataColumn ^ Add(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; System.Data.DataColumn" Usage="dataColumnCollection.Add columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="10608-126">열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-126">The name of the column.</span></span></param>
        <summary><span data-ttu-id="10608-127">지정된 이름의 <see cref="T:System.Data.DataColumn" /> 개체를 만들어 <see cref="T:System.Data.DataColumnCollection" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-127">Creates and adds a <see cref="T:System.Data.DataColumn" /> object that has the specified name to the <see cref="T:System.Data.DataColumnCollection" />.</span></span></summary>
        <returns><span data-ttu-id="10608-128">새로 만든 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-128">The newly created <see cref="T:System.Data.DataColumn" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10608-129">기본적으로 <xref:System.Data.DataColumn.DataType%2A> 새 열에 대 한 `string`합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-129">By default, the <xref:System.Data.DataColumn.DataType%2A> for the new column is `string`.</span></span>  
  
 <span data-ttu-id="10608-130">경우 `null` 또는 빈 문자열 ("") 전달의 이름으로 기본 ("Column1", "Column2" 등)에 이름이 지정 된 열입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-130">If `null` or an empty string ("") is passed in for the name, a default name ("Column1", "Column2", and so on) is given to the column.</span></span>  
  
 <span data-ttu-id="10608-131">사용 된 <xref:System.Data.DataColumnCollection.Contains%2A> 제안된 된 이름 가진 열이 컬렉션에 이미 있는지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-131">Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a column with the proposed name already exists in the collection.</span></span>  
  
 <span data-ttu-id="10608-132">컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-132">If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10608-133">다음 예제를 만들고 추가 하는 새 <xref:System.Data.DataColumn> 에 <xref:System.Data.DataColumnCollection> 의 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-133">The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-vb[Classic WebData DataColumnCollection.Add4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Add4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="10608-134">지정된 이름의 열이 컬렉션에 이미 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="10608-134">The collection already has a column with the specified name.</span></span> <span data-ttu-id="10608-135">(대/소문자를 구분하지 않고 비교합니다.)</span><span class="sxs-lookup"><span data-stu-id="10608-135">(The comparison is not case-sensitive.)</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn Add (string columnName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn Add(string columnName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Add(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataColumn ^ Add(System::String ^ columnName, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.Add : string * Type -&gt; System.Data.DataColumn" Usage="dataColumnCollection.Add (columnName, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="10608-136">열을 만들 때 사용할 <see cref="P:System.Data.DataColumn.ColumnName" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-136">The <see cref="P:System.Data.DataColumn.ColumnName" /> to use when you create the column.</span></span></param>
        <param name="type"><span data-ttu-id="10608-137">새 열의 <see cref="P:System.Data.DataColumn.DataType" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-137">The <see cref="P:System.Data.DataColumn.DataType" /> of the new column.</span></span></param>
        <summary><span data-ttu-id="10608-138">지정된 이름과 형식의 <see cref="T:System.Data.DataColumn" /> 개체를 만들어 <see cref="T:System.Data.DataColumnCollection" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-138">Creates and adds a <see cref="T:System.Data.DataColumn" /> object that has the specified name and type to the <see cref="T:System.Data.DataColumnCollection" />.</span></span></summary>
        <returns><span data-ttu-id="10608-139">새로 만든 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-139">The newly created <see cref="T:System.Data.DataColumn" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10608-140">경우 `null` 또는 빈 문자열 ("") 전달의 이름으로 기본 ("Column1", "Column2" 등)에 이름이 지정 된 열입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-140">If `null` or an empty string ("") is passed in for the name, a default name ("Column1", "Column2", and so on) is given to the column.</span></span>  
  
 <span data-ttu-id="10608-141">사용 된 <xref:System.Data.DataColumnCollection.Contains%2A> 제안된 된 이름 가진 열이 컬렉션에 이미 있는지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-141">Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a column with the proposed name already exists in the collection.</span></span>  
  
 <span data-ttu-id="10608-142">컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-142">If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10608-143">다음 예제를 만들고 추가 하는 새 <xref:System.Data.DataColumn> 에 <xref:System.Data.DataColumnCollection> 의 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-143">The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-vb[Classic WebData DataColumnCollection.Add2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Add2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="10608-144">지정된 이름의 열이 컬렉션에 이미 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="10608-144">The collection already has a column with the specified name.</span></span> <span data-ttu-id="10608-145">(대/소문자를 구분하지 않고 비교합니다.)</span><span class="sxs-lookup"><span data-stu-id="10608-145">(The comparison is not case-sensitive.)</span></span></exception>
        <exception cref="T:System.Data.InvalidExpressionException"><span data-ttu-id="10608-146">식이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="10608-146">The expression is invalid.</span></span> <span data-ttu-id="10608-147">식을 만드는 방법에 대한 자세한 내용은 <see cref="P:System.Data.DataColumn.Expression" /> 속성을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="10608-147">See the <see cref="P:System.Data.DataColumn.Expression" /> property for more information about how to create expressions.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn Add (string columnName, Type type, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn Add(string columnName, class System.Type type, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataColumn ^ Add(System::String ^ columnName, Type ^ type, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="member this.Add : string * Type * string -&gt; System.Data.DataColumn" Usage="dataColumnCollection.Add (columnName, type, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="10608-148">열을 만들 때 사용할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-148">The name to use when you create the column.</span></span></param>
        <param name="type"><span data-ttu-id="10608-149">새 열의 <see cref="P:System.Data.DataColumn.DataType" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-149">The <see cref="P:System.Data.DataColumn.DataType" /> of the new column.</span></span></param>
        <param name="expression"><span data-ttu-id="10608-150"><see cref="P:System.Data.DataColumn.Expression" /> 속성에 할당할 식입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-150">The expression to assign to the <see cref="P:System.Data.DataColumn.Expression" /> property.</span></span></param>
        <summary><span data-ttu-id="10608-151">지정된 이름, 형식 및 식의 <see cref="T:System.Data.DataColumn" /> 개체를 만들어 <see cref="T:System.Data.DataColumnCollection" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-151">Creates and adds a <see cref="T:System.Data.DataColumn" /> object that has the specified name, type, and expression to the <see cref="T:System.Data.DataColumnCollection" />.</span></span></summary>
        <returns><span data-ttu-id="10608-152">새로 만든 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-152">The newly created <see cref="T:System.Data.DataColumn" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10608-153">경우 `null` 또는 빈 문자열 ("") 전달의 이름으로 기본 ("Column1", "Column2" 등)에 이름이 지정 된 열입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-153">If `null` or an empty string ("") is passed in for the name, a default name ("Column1", "Column2", and so on) is given to the column.</span></span>  
  
 <span data-ttu-id="10608-154">사용 된 <xref:System.Data.DataColumnCollection.Contains%2A> 제안된 된 이름 가진 열이 컬렉션에 이미 있는지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-154">Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a column with the proposed name already exists in the collection.</span></span>  
  
 <span data-ttu-id="10608-155">컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-155">If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10608-156">다음 예제를 만들고 추가 하는 새 <xref:System.Data.DataColumn> 에 <xref:System.Data.DataColumnCollection> 의 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-156">The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-vb[Classic WebData DataColumnCollection.Add1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Add1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="10608-157">지정된 이름의 열이 컬렉션에 이미 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="10608-157">The collection already has a column with the specified name.</span></span> <span data-ttu-id="10608-158">(대/소문자를 구분하지 않고 비교합니다.)</span><span class="sxs-lookup"><span data-stu-id="10608-158">(The comparison is not case-sensitive.)</span></span></exception>
        <exception cref="T:System.Data.InvalidExpressionException"><span data-ttu-id="10608-159">식이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="10608-159">The expression is invalid.</span></span> <span data-ttu-id="10608-160">식을 만드는 방법에 대한 자세한 내용은 <see cref="P:System.Data.DataColumn.Expression" /> 속성을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="10608-160">See the <see cref="P:System.Data.DataColumn.Expression" /> property for more information about how to create expressions.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Data.DataColumn[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Data.DataColumn[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (columns As DataColumn())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Data::DataColumn ^&gt; ^ columns);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Data.DataColumn[] -&gt; unit" Usage="dataColumnCollection.AddRange columns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columns" Type="System.Data.DataColumn[]" />
      </Parameters>
      <Docs>
        <param name="columns"><span data-ttu-id="10608-161">컬렉션에 추가할 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-161">The array of <see cref="T:System.Data.DataColumn" /> objects to add to the collection.</span></span></param>
        <summary><span data-ttu-id="10608-162">지정된 <see cref="T:System.Data.DataColumn" /> 배열의 요소를 컬렉션의 끝에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-162">Copies the elements of the specified <see cref="T:System.Data.DataColumn" /> array to the end of the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanRemove(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanRemove (column As DataColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanRemove(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.CanRemove : System.Data.DataColumn -&gt; bool" Usage="dataColumnCollection.CanRemove column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="10608-163">컬렉션의 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-163">A <see cref="T:System.Data.DataColumn" /> in the collection.</span></span></param>
        <summary><span data-ttu-id="10608-164">특정 열을 컬렉션에서 제거할 수 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-164">Checks whether a specific column can be removed from the collection.</span></span></summary>
        <returns><span data-ttu-id="10608-165">열을 제거할 수 있으면 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-165"><see langword="true" /> if the column can be removed.</span></span> <span data-ttu-id="10608-166"><see langword="false" /> 만일,</span><span class="sxs-lookup"><span data-stu-id="10608-166"><see langword="false" /> if,</span></span> 
<span data-ttu-id="10608-167">-  <paramref name="column" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="10608-167">-   The <paramref name="column" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="10608-168">-  열이 이 컬렉션에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="10608-168">-   The column does not belong to this collection.</span></span>  
  
<span data-ttu-id="10608-169">-  열이 관계의 일부인 경우</span><span class="sxs-lookup"><span data-stu-id="10608-169">-   The column is part of a relationship.</span></span>  
  
<span data-ttu-id="10608-170">-  다른 열의 식이 이 열에 종속되는 경우</span><span class="sxs-lookup"><span data-stu-id="10608-170">-   Another column's expression depends on this column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10608-171">합니다 <xref:System.Data.DataColumnCollection.CanRemove%2A> 반환 하기 전에 몇 가지 검사를 수행 하는 메서드를 `true` 또는 `false` 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-171">The <xref:System.Data.DataColumnCollection.CanRemove%2A> method performs several checks before returning a `true` or `false` result.</span></span> <span data-ttu-id="10608-172">여기에 다음: 여부 열, 테이블에 속해 있거나는 제약 조건 또는 관계에 참여 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-172">This includes the following: whether the column exists, belongs to the table, or is involved in a constraint or relation.</span></span>  
  
 <span data-ttu-id="10608-173">사용 된 <xref:System.Data.DataColumnCollection.CanRemove%2A> 메서드는 컬렉션에서 모든 열을 제거 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-173">Use the <xref:System.Data.DataColumnCollection.CanRemove%2A> method before you try to remove any column from a collection.</span></span> <span data-ttu-id="10608-174">사용할 수도 있습니다는 <xref:System.Data.DataColumnCollection.Contains%2A> 메서드를 제거 하기 전에 특정 열이 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-174">You can also use the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column exists before you try to remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10608-175">다음 예제에서는 먼저 사용 하 여는 <xref:System.Data.DataColumnCollection.Contains%2A> 특정 열을 컬렉션에서 찾을 수 있는지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-175">The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection.</span></span> <span data-ttu-id="10608-176">경우 발견 된 <xref:System.Data.DataColumnCollection.CanRemove%2A> 메서드는 열을 제거할 수 있는지 여부를 테스트 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-176">If found, the <xref:System.Data.DataColumnCollection.CanRemove%2A> method tests whether the column can be removed.</span></span> <span data-ttu-id="10608-177">따라서 사용 하 여 열이 제거 되 면를 <xref:System.Data.DataColumnCollection.Remove%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="10608-177">If so, the column is removed with the <xref:System.Data.DataColumnCollection.Remove%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataColumnCollection.CanRemove Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.CanRemove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.CanRemove Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.CanRemove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="10608-178"><paramref name="column" /> 매개 변수가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="10608-178">The <paramref name="column" /> parameter is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="10608-179">열이 이 컬렉션에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="10608-179">The column does not belong to this collection.</span></span>
        
<span data-ttu-id="10608-180">또는</span><span class="sxs-lookup"><span data-stu-id="10608-180">-or-</span></span>

<span data-ttu-id="10608-181">열이 관계의 일부인 경우</span><span class="sxs-lookup"><span data-stu-id="10608-181">The column is part of a relationship.</span></span>

<span data-ttu-id="10608-182">또는</span><span class="sxs-lookup"><span data-stu-id="10608-182">-or-</span></span>

<span data-ttu-id="10608-183">다른 열의 식이 이 열에 종속되는 경우</span><span class="sxs-lookup"><span data-stu-id="10608-183">Another column's expression depends on this column.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="dataColumnCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10608-184">모든 열의 컬렉션을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="10608-184">Clears the collection of any columns.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10608-185">컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-185">If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10608-186">다음 예제에서는 열 컬렉션을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="10608-186">The following example clears the columns collection.</span></span>  
  
 [!code-csharp[Classic WebData DataColumnCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataColumnCollection.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CollectionChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ CollectionChanged;" />
      <MemberSignature Language="F#" Value="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10608-187">열을 추가하거나 제거하여 열 컬렉션이 변경되는 경우 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-187">Occurs when the columns collection changes, either by adding or removing a column.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10608-188">사용 된 <xref:System.Data.DataColumnCollection.Contains%2A> 및 <xref:System.Data.DataColumnCollection.CanRemove%2A> 열 있고 제거할 수 있는지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-188">Use the <xref:System.Data.DataColumnCollection.Contains%2A> and <xref:System.Data.DataColumnCollection.CanRemove%2A> methods to determine whether a column exists and can be removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10608-189">다음 예제에서는 CollectionChanged 이벤트에 대 한 이벤트 처리기를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-189">The following example adds an event handler for the CollectionChanged event.</span></span>  
  
 [!code-csharp[Classic WebData DataColumnCollection.CollectionChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.CollectionChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.CollectionChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.CollectionChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="dataColumnCollection.Contains name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="10608-190">찾으려는 열의 <see cref="P:System.Data.DataColumn.ColumnName" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-190">The <see cref="P:System.Data.DataColumn.ColumnName" /> of the column to look for.</span></span></param>
        <summary><span data-ttu-id="10608-191">컬렉션에 이름이 지정된 열이 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-191">Checks whether the collection contains a column with the specified name.</span></span></summary>
        <returns><span data-ttu-id="10608-192">이름이 지정된 열이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-192"><see langword="true" /> if a column exists with this name; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10608-193">사용 된 <xref:System.Data.DataColumnCollection.Contains%2A> 열에 대 한 추가 작업을 수행 하기 전에 열의 존재 여부를 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-193">Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to confirm the existence of a column before you perform additional operations on the column.</span></span> <span data-ttu-id="10608-194">메서드는 반환 `false` 같은 다른 네임 스페이스 이름을 두 개 이상의 열이 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="10608-194">The method returns `false` when two or more columns have the same name but different namespaces.</span></span> <span data-ttu-id="10608-195">정확히 하나의 열으로 열 이름을 일치 시킬 때 모호성이 있으면 호출은 성공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="10608-195">The call does not succeed if there is any ambiguity when matching a column name to exactly one column.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10608-196">다음 예제에서는 합니다 <xref:System.Data.DataColumnCollection.Contains%2A> 메서드 및 <xref:System.Data.DataColumnCollection.CanRemove%2A> 열을 제거할 수 있는지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-196">The following example uses the <xref:System.Data.DataColumnCollection.Contains%2A> method and the <xref:System.Data.DataColumnCollection.CanRemove%2A> method to determine whether the column can be removed.</span></span> <span data-ttu-id="10608-197">그렇다면 해당 열은 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="10608-197">If so, the column is removed.</span></span>  
  
 [!code-csharp[Classic WebData DataColumnCollection.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)" />
        <altmember cref="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.DataColumn[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Data.DataColumn[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As DataColumn(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Data::DataColumn ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.DataColumn[] * int -&gt; unit" Usage="dataColumnCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.DataColumn[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="10608-198">컬렉션을 복사할 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-198">An array of <see cref="T:System.Data.DataColumn" /> objects to copy the collection into.</span></span></param>
        <param name="index"><span data-ttu-id="10608-199">복사를 시작할 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-199">The index to start from.</span></span></param>
        <summary><span data-ttu-id="10608-200">전체 컬렉션을 기존 배열 내의 지정된 인덱스에서 시작하는 위치에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-200">Copies the entire collection into an existing array, starting at a specified index within the array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="10608-201">컬렉션에서 지정된 <see cref="T:System.Data.DataColumn" />을 검색하여 처음 나오는 항목의 인덱스(0부터 시작)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-201">Searches for the specified <see cref="T:System.Data.DataColumn" /> and returns the zero-based index of the first occurrence within the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (column As DataColumn) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Data.DataColumn -&gt; int" Usage="dataColumnCollection.IndexOf column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="10608-202">반환할 열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-202">The name of the column to return.</span></span></param>
        <summary><span data-ttu-id="10608-203">이름이 지정된 열의 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="10608-203">Gets the index of a column specified by name.</span></span></summary>
        <returns><span data-ttu-id="10608-204"><paramref name="column" />로 지정된 열이 있으면 해당 열의 인덱스이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-204">The index of the column specified by <paramref name="column" /> if it is found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10608-205"><xref:System.Data.DataColumnCollection.IndexOf%2A> 메서드는 대/소문자 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="10608-205">The <xref:System.Data.DataColumnCollection.IndexOf%2A> method is not case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10608-206">다음 예제에서는 합니다 <xref:System.Data.DataColumnCollection.Contains%2A> 지정된 된 열에 있는지 여부를 결정 하는 메서드를 <xref:System.Data.DataColumnCollection>입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-206">The following example uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a specified column exists in a <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="10608-207">그렇다면는 <xref:System.Data.DataColumnCollection.IndexOf%2A> 메서드는 열의 인덱스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-207">If so, the <xref:System.Data.DataColumnCollection.IndexOf%2A> method returns the index of the column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumnCollection.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.IndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (columnName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string -&gt; int" Usage="dataColumnCollection.IndexOf columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="10608-208">찾을 열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-208">The name of the column to find.</span></span></param>
        <summary><span data-ttu-id="10608-209">특정 이름을 가진 열의 인덱스를 가져옵니다. 이 이름은 대/소문자를 구분하지 않습니다. </span><span class="sxs-lookup"><span data-stu-id="10608-209">Gets the index of the column with the specific name (the name is not case sensitive).</span></span></summary>
        <returns><span data-ttu-id="10608-210">지정된 이름을 가지는 열이 컬렉션에 있으면 반환 값이 해당 열의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-210">The zero-based index of the column with the specified name, or -1 if the column does not exist in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="10608-211">컬렉션에서 지정된 <see cref="T:System.Data.DataColumn" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="10608-211">Gets the specified <see cref="T:System.Data.DataColumn" /> from the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumnCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As DataColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataColumn ^ default[int] { System::Data::DataColumn ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Data.DataColumn" Usage="System.Data.DataColumnCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="10608-212">반환할 열의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-212">The zero-based index of the column to return.</span></span></param>
        <summary><span data-ttu-id="10608-213">컬렉션에서 지정된 인덱스의 <see cref="T:System.Data.DataColumn" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="10608-213">Gets the <see cref="T:System.Data.DataColumn" /> from the collection at the specified index.</span></span></summary>
        <value><span data-ttu-id="10608-214">지정된 인덱스의 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-214">The <see cref="T:System.Data.DataColumn" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10608-215"><xref:System.Data.DataColumnCollection.Contains%2A> 열의 존재 여부를 테스트 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="10608-215">The <xref:System.Data.DataColumnCollection.Contains%2A> method can be used to test for the existence of a column.</span></span> <span data-ttu-id="10608-216">사용 하려고 하기 전에 유용 <xref:System.Data.DataColumnCollection.Item%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-216">This is useful before you try to use <xref:System.Data.DataColumnCollection.Item%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10608-217">다음 예제에서는 <xref:System.Data.DataColumnCollection.Item%2A> 인쇄 속성을 <xref:System.Data.DataColumn.ColumnName%2A> 값을 <xref:System.Data.DataColumn> 인덱스로 지정 된 개체.</span><span class="sxs-lookup"><span data-stu-id="10608-217">The following example uses the <xref:System.Data.DataColumnCollection.Item%2A> property to print the <xref:System.Data.DataColumn.ColumnName%2A> value of a <xref:System.Data.DataColumn> object specified by index.</span></span> <span data-ttu-id="10608-218">이 예제에서는 사용 된 <xref:System.Data.DataTable> System.Windows.Forms.DataGrid 컨트롤에서 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-218">The example uses the <xref:System.Data.DataTable> that is contained by a System.Windows.Forms.DataGrid control.</span></span>  
  
 [!code-csharp[Classic WebData DataColumnCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="10608-219">인덱스 값이 컬렉션의 항목 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="10608-219">The index value is greater than the number of items in the collection.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumnCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As DataColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataColumn ^ default[System::String ^] { System::Data::DataColumn ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Data.DataColumn" Usage="System.Data.DataColumnCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="10608-220">반환할 열의 <see cref="P:System.Data.DataColumn.ColumnName" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-220">The <see cref="P:System.Data.DataColumn.ColumnName" /> of the column to return.</span></span></param>
        <summary><span data-ttu-id="10608-221">컬렉션에서 지정된 이름을 가진 <see cref="T:System.Data.DataColumn" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="10608-221">Gets the <see cref="T:System.Data.DataColumn" /> from the collection with the specified name.</span></span></summary>
        <value><span data-ttu-id="10608-222">컬렉션에 지정된 <see cref="T:System.Data.DataColumn" />이 있으면 <see cref="P:System.Data.DataColumn.ColumnName" />이 반환되고, <see cref="T:System.Data.DataColumn" />이 없으면 null이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="10608-222">The <see cref="T:System.Data.DataColumn" /> in the collection with the specified <see cref="P:System.Data.DataColumn.ColumnName" />; otherwise a null value if the <see cref="T:System.Data.DataColumn" /> does not exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10608-223"><xref:System.Data.DataColumnCollection.Item%2A> 열 이름을 검색 하는 경우 조건에 따라 대/소문자 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-223"><xref:System.Data.DataColumnCollection.Item%2A> is conditionally case-sensitive when it searches for column names.</span></span> <span data-ttu-id="10608-224">예를 들어 하나의 <xref:System.Data.DataColumn> "mydatacolumn" 이름은 "Mydatacolumn" 라는 다른를 열 중 하나를 검색 하는 데 사용 하는 문자열은 대/소문자 구분으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="10608-224">For example, if one <xref:System.Data.DataColumn> is named "mydatacolumn" and another is named "Mydatacolumn", a string used to search for one of the columns is regarded as case-sensitive.</span></span> <span data-ttu-id="10608-225">그러나 "mydatacolumn" 존재 하 고 "Mydatacolumn" 하지 않습니다, 검색 문자열 대/소문자 구분으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="10608-225">However, if "mydatacolumn" exists and "Mydatacolumn" does not, the search string is regarded as case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10608-226">다음 예제에서는 <xref:System.Data.DataColumnCollection.Item%2A> 인쇄 속성을 <xref:System.Data.DataColumn.DataType%2A> 값을 <xref:System.Data.DataColumn> 인덱스로 지정 된 개체.</span><span class="sxs-lookup"><span data-stu-id="10608-226">The following example uses the <xref:System.Data.DataColumnCollection.Item%2A> property to print the <xref:System.Data.DataColumn.DataType%2A> value of a <xref:System.Data.DataColumn> object specified by index.</span></span>  
  
 [!code-csharp[Classic WebData DataColumnCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected override System.Collections.ArrayList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList List" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumnCollection.List" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property List As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ArrayList ^ List { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.ArrayList" Usage="System.Data.DataColumnCollection.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCollectionChanged(class System.ComponentModel.CollectionChangeEventArgs ccevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCollectionChanged (ccevent As CollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCollectionChanged(System::ComponentModel::CollectionChangeEventArgs ^ ccevent);" />
      <MemberSignature Language="F#" Value="abstract member OnCollectionChanged : System.ComponentModel.CollectionChangeEventArgs -&gt; unit&#xA;override this.OnCollectionChanged : System.ComponentModel.CollectionChangeEventArgs -&gt; unit" Usage="dataColumnCollection.OnCollectionChanged ccevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ccevent" Type="System.ComponentModel.CollectionChangeEventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="ccevent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanging">
      <MemberSignature Language="C#" Value="protected internal virtual void OnCollectionChanging (System.ComponentModel.CollectionChangeEventArgs ccevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCollectionChanging(class System.ComponentModel.CollectionChangeEventArgs ccevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnCollectionChanging (ccevent As CollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnCollectionChanging(System::ComponentModel::CollectionChangeEventArgs ^ ccevent);" />
      <MemberSignature Language="F#" Value="abstract member OnCollectionChanging : System.ComponentModel.CollectionChangeEventArgs -&gt; unit&#xA;override this.OnCollectionChanging : System.ComponentModel.CollectionChangeEventArgs -&gt; unit" Usage="dataColumnCollection.OnCollectionChanging ccevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ccevent" Type="System.ComponentModel.CollectionChangeEventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="ccevent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="10608-227">컬렉션에서 <see cref="T:System.Data.DataColumn" /> 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-227">Removes a <see cref="T:System.Data.DataColumn" /> object from the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Data.DataColumn -&gt; unit" Usage="dataColumnCollection.Remove column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="10608-228">제거할 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-228">The <see cref="T:System.Data.DataColumn" /> to remove.</span></span></param>
        <summary><span data-ttu-id="10608-229">컬렉션에서 지정된 <see cref="T:System.Data.DataColumn" /> 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-229">Removes the specified <see cref="T:System.Data.DataColumn" /> object from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10608-230">컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-230">If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10608-231">다음 예제에서는 <xref:System.Data.DataColumnCollection.Contains%2A> 명명 된 열이 있는지 여부를 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-231">The following example uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a named column exists.</span></span> <span data-ttu-id="10608-232">그렇다면는 <xref:System.Data.DataColumnCollection.Item%2A> 속성 열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-232">If so, the <xref:System.Data.DataColumnCollection.Item%2A> property returns the column.</span></span> <span data-ttu-id="10608-233">합니다 <xref:System.Data.DataColumnCollection.CanRemove%2A> 메서드 다음 확인 여부를 열을 제거할 수 있습니다; 만약 그렇다면는 <xref:System.Data.DataColumnCollection.Remove%2A> 메서드 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-233">The <xref:System.Data.DataColumnCollection.CanRemove%2A> method then checks whether the column can be removed; if so, the <xref:System.Data.DataColumnCollection.Remove%2A> method removes it.</span></span>  
  
 [!code-csharp[Classic WebData DataColumnCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="10608-234"><paramref name="column" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="10608-234">The <paramref name="column" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="10608-235">열이 이 컬렉션에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="10608-235">The column does not belong to this collection.</span></span>  
  
<span data-ttu-id="10608-236">-또는-</span><span class="sxs-lookup"><span data-stu-id="10608-236">-Or-</span></span> 
<span data-ttu-id="10608-237">열이 관계의 일부인 경우</span><span class="sxs-lookup"><span data-stu-id="10608-237">The column is part of a relationship.</span></span>  
  
<span data-ttu-id="10608-238">-또는-</span><span class="sxs-lookup"><span data-stu-id="10608-238">-Or-</span></span> 
<span data-ttu-id="10608-239">다른 열의 식이 이 열에 종속되는 경우</span><span class="sxs-lookup"><span data-stu-id="10608-239">Another column's expression depends on this column.</span></span></exception>
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)" />
        <altmember cref="P:System.Data.DataColumnCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="dataColumnCollection.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="10608-240">제거할 열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-240">The name of the column to remove.</span></span></param>
        <summary><span data-ttu-id="10608-241">컬렉션에서 지정된 이름의 <see cref="T:System.Data.DataColumn" /> 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-241">Removes the <see cref="T:System.Data.DataColumn" /> object that has the specified name from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10608-242">컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-242">If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10608-243">다음 예제에서는 먼저 사용 하 여는 <xref:System.Data.DataColumnCollection.Contains%2A> 특정 열을 컬렉션에서 찾을 수 있는지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-243">The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection.</span></span> <span data-ttu-id="10608-244">가 있을 경우는 <xref:System.Data.DataColumnCollection.CanRemove%2A> 메서드는 열을 제거할 수 있는지 여부를 테스트 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-244">If it is found, the <xref:System.Data.DataColumnCollection.CanRemove%2A> method tests whether the column can be removed.</span></span> <span data-ttu-id="10608-245">따라서 사용 하 여 열이 제거 되 면를 <xref:System.Data.DataColumnCollection.Remove%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="10608-245">If so, the column is removed with the <xref:System.Data.DataColumnCollection.Remove%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataColumnCollection.Remove1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Remove1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.Remove1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Remove1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="10608-246">지정된 이름의 열이 컬렉션에 없는 경우</span><span class="sxs-lookup"><span data-stu-id="10608-246">The collection does not have a column with the specified name.</span></span></exception>
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="dataColumnCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="10608-247">제거할 열의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-247">The index of the column to remove.</span></span></param>
        <summary><span data-ttu-id="10608-248">컬렉션에서 지정된 인덱스의 열을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-248">Removes the column at the specified index from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10608-249">컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-249">If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10608-250">다음 예제에서는 먼저 사용 하 여는 <xref:System.Data.DataColumnCollection.Contains%2A> 특정 열을 컬렉션에서 찾을 수 있는지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="10608-250">The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection.</span></span> <span data-ttu-id="10608-251">가 있을 경우는 <xref:System.Data.DataColumnCollection.CanRemove%2A> 메서드는 열을 제거할 수 있는지 여부를 테스트 합니다.</span><span class="sxs-lookup"><span data-stu-id="10608-251">If it is found, the <xref:System.Data.DataColumnCollection.CanRemove%2A> method tests whether the column can be removed.</span></span> <span data-ttu-id="10608-252">따라서 사용 하 여 열이 제거 되 면를 <xref:System.Data.DataColumnCollection.RemoveAt%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="10608-252">If so, the column is removed with the <xref:System.Data.DataColumnCollection.RemoveAt%2A> method.</span></span>  
  
 [!code-vb[Classic WebData DataColumnCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="10608-253">컬렉션에 지정된 인덱스의 열이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="10608-253">The collection does not have a column at the specified index.</span></span></exception>
        <altmember cref="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)" />
      </Docs>
    </Member>
  </Members>
</Type>