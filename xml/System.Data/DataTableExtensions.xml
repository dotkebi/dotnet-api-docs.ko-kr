<Type Name="DataTableExtensions" FullName="System.Data.DataTableExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="450e6c51a11093d7632aeaecc6786838eef4437b" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57957661" /></Metadata><TypeSignature Language="C#" Value="public static class DataTableExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataTableExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataTableExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type DataTableExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="65292-101"><see cref="T:System.Data.DataTable" /> 클래스에 대한 확장 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-101">Defines the extension methods to the <see cref="T:System.Data.DataTable" /> class.</span></span> <span data-ttu-id="65292-102"><see cref="T:System.Data.DataTableExtensions" />는 정적 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-102"><see cref="T:System.Data.DataTableExtensions" /> is a static class.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsDataView">
      <MemberSignature Language="C#" Value="public static System.Data.DataView AsDataView (this System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataView AsDataView(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsDataView (table As DataTable) As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataView ^ AsDataView(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="static member AsDataView : System.Data.DataTable -&gt; System.Data.DataView" Usage="System.Data.DataTableExtensions.AsDataView table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" RefType="this" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="65292-103">LINQ 사용 <see cref="T:System.Data.DataTable" />를 만드는 데 사용할 소스 <see cref="T:System.Data.DataView" />입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-103">The source <see cref="T:System.Data.DataTable" /> from which the LINQ-enabled <see cref="T:System.Data.DataView" /> is created.</span></span></param>
        <summary><span data-ttu-id="65292-104">LINQ 사용 <see cref="T:System.Data.DataView" /> 개체를 만들어 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-104">Creates and returns a LINQ-enabled <see cref="T:System.Data.DataView" /> object.</span></span></summary>
        <returns><span data-ttu-id="65292-105">LINQ 사용 <see cref="T:System.Data.DataView" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-105">A LINQ-enabled <see cref="T:System.Data.DataView" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65292-106"><xref:System.Data.DataView> 에 대 한 데이터 바인딩 시나리오를 사용 하도록 설정 [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] 에서 만들 수 있습니다 및 형식화 되거나 형식화 되지 않은 <xref:System.Data.DataTable>, 해당 테이블의 기본 보기를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-106"><xref:System.Data.DataView> enables data-binding scenarios for [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] and can be created from a typed or untyped <xref:System.Data.DataTable>, providing a default view of that table.</span></span> <span data-ttu-id="65292-107"><xref:System.Data.DataView>에서 만들어진 <xref:System.Data.DataTable>에 필터링 및 정렬을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="65292-107">Filtering and sorting can be set on the <xref:System.Data.DataView> after it has been created from a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="65292-108">합니다 <xref:System.Data.DataView> 와 같은 UI 컨트롤에 바인딩된 다음는 <xref:System.Windows.Forms.DataGrid> 또는 <xref:System.Windows.Forms.DataGridView>, 간단한 데이터 바인딩 모델을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-108">The <xref:System.Data.DataView> is then bound to a UI control, such as a <xref:System.Windows.Forms.DataGrid> or a <xref:System.Windows.Forms.DataGridView>, providing a simple data binding model.</span></span>  
  
 <span data-ttu-id="65292-109">자세한 내용 및 예제를 참조 하세요 [DataView 개체 만들기](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-109">For more information and examples, see [Creating a DataView Object](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65292-110">다음 예제에서는 <xref:System.Data.DataView> SalesOrderDetail 테이블에서 데이터 원본으로 설정 하는 데는 <xref:System.Windows.Forms.BindingSource> 에 대 한 프록시로 작동 하는 개체를 <xref:System.Windows.Forms.DataGridView> 제어:</span><span class="sxs-lookup"><span data-stu-id="65292-110">The following example creates a <xref:System.Data.DataView> from the SalesOrderDetail table and sets it as the data source of a <xref:System.Windows.Forms.BindingSource> object, which acts as a proxy for a <xref:System.Windows.Forms.DataGridView> control:</span></span>  
  
 [!code-csharp[DP DataView Samples#CreateLDVFromTable](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromtable)]
 [!code-vb[DP DataView Samples#CreateLDVFromTable](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromtable)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsDataView&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.DataView AsDataView&lt;T&gt; (this System.Data.EnumerableRowCollection&lt;T&gt; source) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataView AsDataView&lt;(class System.Data.DataRow) T&gt;(class System.Data.EnumerableRowCollection`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsDataView(Of T As DataRow) (source As EnumerableRowCollection(Of T)) As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataView ^ AsDataView(System::Data::EnumerableRowCollection&lt;T&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsDataView : System.Data.EnumerableRowCollection&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; -&gt; System.Data.DataView (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.AsDataView source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;T&gt;" RefType="this" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="65292-111">소스 시퀀스의 개체 형식(일반적으로 <see cref="T:System.Data.DataRow" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-111">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="65292-112">LINQ 사용 <see cref="T:System.Data.DataView" />를 만드는 데 사용할 소스 [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-112">The source [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query from which the LINQ-enabled <see cref="T:System.Data.DataView" /> is created.</span></span></param>
        <summary><span data-ttu-id="65292-113">[!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] 쿼리를 나타내는 LINQ 사용 <see cref="T:System.Data.DataView" /> 개체를 만들어 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-113">Creates and returns a LINQ-enabled <see cref="T:System.Data.DataView" /> object representing the [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query.</span></span></summary>
        <returns><span data-ttu-id="65292-114">LINQ 사용 <see cref="T:System.Data.DataView" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-114">A LINQ-enabled <see cref="T:System.Data.DataView" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65292-115"><xref:System.Data.DataView> 에 대 한 데이터 바인딩 시나리오를 사용 하도록 설정 [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] 에서 만들 수는 [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-115"><xref:System.Data.DataView> enables data binding scenarios for [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] and can be created from a [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query.</span></span> <span data-ttu-id="65292-116"><xref:System.Data.DataView> 쿼리 자체를 나타내며 쿼리에 대 한 뷰가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="65292-116">The <xref:System.Data.DataView> represents the query itself, and is not a view on top of the query.</span></span> <span data-ttu-id="65292-117">새로 만든 <xref:System.Data.DataView> 필터링 및 정렬 정보에서 만든 쿼리를 유추 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-117">The newly created <xref:System.Data.DataView> infers the filtering and sorting information from the query it is created from.</span></span> <span data-ttu-id="65292-118">합니다 <xref:System.Data.DataView> 와 같은 UI 컨트롤에 바인딩된 다음는 <xref:System.Windows.Forms.DataGrid> 또는 <xref:System.Windows.Forms.DataGridView>, 단순 데이터 바인딩 모델을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-118">The <xref:System.Data.DataView> is then bound to a UI control, such as a <xref:System.Windows.Forms.DataGrid> or a <xref:System.Windows.Forms.DataGridView>, providing a simple data-binding model.</span></span>  
  
 <span data-ttu-id="65292-119">매개 변수 `T` 입력된 매개 변수의 `source` 형식일 수만 있습니다 <xref:System.Data.DataRow> 에서 파생 된 형식 또는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-119">The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow> or a type derived from <xref:System.Data.DataRow>.</span></span>  
  
 <span data-ttu-id="65292-120">다음 쿼리 연산자만 지를 만드는 데 사용 하는 쿼리에서 <xref:System.Data.DataView>:</span><span class="sxs-lookup"><span data-stu-id="65292-120">The following query operators, only, are supported in a query used to create <xref:System.Data.DataView>:</span></span>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderByDescending%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Select%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Where%2A>  
  
 <span data-ttu-id="65292-121">자세한 내용 및 예제를 참조 하세요 [DataView 개체 만들기](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-121">For more information and examples, see [Creating a DataView Object](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65292-122">다음 예제에서는 <xref:System.Data.DataView> 온라인 주문 합계에 따라 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-122">The following example creates a <xref:System.Data.DataView> of online orders ordered by total due:</span></span>  
  
 [!code-csharp[DP DataView Samples#CreateLDVFromQuery1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromquery1)]
 [!code-vb[DP DataView Samples#CreateLDVFromQuery1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromquery1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsEnumerable">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt; AsEnumerable (this System.Data.DataTable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;class System.Data.DataRow&gt; AsEnumerable(class System.Data.DataTable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsEnumerable (source As DataTable) As EnumerableRowCollection(Of DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;System::Data::DataRow ^&gt; ^ AsEnumerable(System::Data::DataTable ^ source);" />
      <MemberSignature Language="F#" Value="static member AsEnumerable : System.Data.DataTable -&gt; System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt;" Usage="System.Data.DataTableExtensions.AsEnumerable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.DataTable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="65292-123">열거 가능하게 만들 소스 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-123">The source <see cref="T:System.Data.DataTable" /> to make enumerable.</span></span></param>
        <summary><span data-ttu-id="65292-124"><see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체를 반환하며, 제네릭 매개 변수 <paramref name="T" />는 <see cref="T:System.Data.DataRow" />입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-124">Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> object, where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</span></span> <span data-ttu-id="65292-125">이 개체는 [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] 식 또는 메서드 쿼리에 사용될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="65292-125">This object can be used in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] expression or method query.</span></span></summary>
        <returns><span data-ttu-id="65292-126"><see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체이며, 제네릭 매개 변수 <paramref name="T" />는 <see cref="T:System.Data.DataRow" />입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-126">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object, where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] <span data-ttu-id="65292-127">쿼리를 구현 하는 데이터 소스에서 작동 합니다 <xref:System.Collections.Generic.IEnumerable%601> 인터페이스 또는 <xref:System.Linq.IQueryable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-127">queries work on data sources that implement the <xref:System.Collections.Generic.IEnumerable%601> interface or the <xref:System.Linq.IQueryable> interface.</span></span>  <span data-ttu-id="65292-128"><xref:System.Data.DataTable> 클래스를 호출 해야 하므로 두 인터페이스 중 하나를 구현 하지 않습니다는 <xref:System.Data.DataTableExtensions.AsEnumerable%2A> 메서드를 사용 하 여는 <xref:System.Data.DataTable> 원본으로는 `From` 절을 [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-128">The <xref:System.Data.DataTable> class does not implement either interface, so you must call the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method to use the <xref:System.Data.DataTable> as a source in the `From` clause of a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query.</span></span> <span data-ttu-id="65292-129">사용자 지정, 도메인 특정 연산자와 같은 가져올 수도 있습니다 <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>를 반환 하 여는 <xref:System.Collections.Generic.IEnumerable%601> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-129">You can also obtain custom, domain-specific operators, such as <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>, by returning an <xref:System.Collections.Generic.IEnumerable%601> object.</span></span>  
  
 <span data-ttu-id="65292-130">반환 하는 열거 가능한 개체를 <xref:System.Data.DataTableExtensions.AsEnumerable%2A> 메서드를 영구적으로 바인딩된는 <xref:System.Data.DataTable> 결과 생성 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-130">The enumerable object returned by the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method is permanently bound to the <xref:System.Data.DataTable> that produced it.</span></span> <span data-ttu-id="65292-131">여러 번 호출 하 여 <xref:System.Data.DataTableExtensions.AsEnumerable%2A> 메서드는 반환 여러 개의 독립적인 쿼리 가능 개체가 모든 소스에 바인딩된 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-131">Multiple calls to the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method will return multiple, independent queryable objects that are all bound to the source <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65292-132">다음 샘플에서는 합니다 `DisplayProducts` 메서드 라는 DataColumn을 포함 하는 DataTable을 수신 `ProductName`, 추출는 `ProductName` 값 하 고 다음 값을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-132">In the following sample, the `DisplayProducts` method receives a DataTable that contains a DataColumn named `ProductName`, extracts the `ProductName` values and then prints the values.</span></span>  
  
 [!code-csharp[system.data.DataTableExtensions.AsEnumerable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.data.datatableextensions.asenumerable/cs/source.cs#1)]
 [!code-vb[system.data.DataTableExtensions.AsEnumerable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.data.datatableextensions.asenumerable/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="65292-133">소스 <see cref="T:System.Data.DataTable" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="65292-133">The source <see cref="T:System.Data.DataTable" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToDataTable&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="65292-134">지정된 입력 <see cref="T:System.Data.DataTable" /> 개체를 사용하여 <see cref="T:System.Data.DataRow" /> 개체의 복사본이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-134">Returns a <see cref="T:System.Data.DataTable" /> that contains copies of the <see cref="T:System.Data.DataRow" /> objects, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.DataTable CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataTable CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T)) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataTable ^ CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member CopyToDataTable : seq&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; -&gt; System.Data.DataTable (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.CopyToDataTable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="65292-135">소스 시퀀스의 개체 형식(일반적으로 <see cref="T:System.Data.DataRow" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-135">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="65292-136">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-136">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</span></span></param>
        <summary><span data-ttu-id="65292-137">제네릭 매개 변수 <paramref name="T" />가 <see cref="T:System.Data.DataTable" />인 지정된 입력 <see cref="T:System.Data.DataRow" /> 개체를 사용하여 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체의 복사본이 들어 있는 <see cref="T:System.Data.DataRow" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-137">Returns a <see cref="T:System.Data.DataTable" /> that contains copies of the <see cref="T:System.Data.DataRow" /> objects, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <returns><span data-ttu-id="65292-138"><see cref="T:System.Data.DataTable" /> 개체 형식의 입력 시퀀스가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-138">A <see cref="T:System.Data.DataTable" /> that contains the input sequence as the type of <see cref="T:System.Data.DataRow" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65292-139">매개 변수 `T` 입력된 매개 변수의 `source` 형식일 수만 있습니다 <xref:System.Data.DataRow> 에서 파생 된 형식 또는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-139">The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow> or a type derived from <xref:System.Data.DataRow>.</span></span>  
  
 <span data-ttu-id="65292-140">입력된 시퀀스 될 수 있습니다 <xref:System.Collections.Generic.IEnumerable%601> 를 통해 원본, 쿼리 또는 쿼리 뿐 아니라는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-140">The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query or a query over a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="65292-141">참고는 소스 시퀀스를 쿼리 하는 경우이 연산자를 호출는 즉시 실행을 강제 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-141">Note that if the source sequence is a query, calling this operator will force immediate execution.</span></span> <span data-ttu-id="65292-142">소스 시퀀스를 열거 하는 경우에 예외가 throw 될 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="65292-142">Enumerating the source sequence can also cause exceptions to be thrown.</span></span>  
  
 <span data-ttu-id="65292-143">대상 테이블의 스키마는 스키마를 기반으로 첫 번째 <xref:System.Data.DataRow> 소스 시퀀스의 행입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-143">The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence.</span></span> <span data-ttu-id="65292-144">테이블 메타 데이터에서 추출 되는 <xref:System.Data.DataRow> 메타 데이터 및 테이블의 열 값에서 값을 <xref:System.Data.DataRow>입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-144">The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>.</span></span> <span data-ttu-id="65292-145">형식화 된 <xref:System.Data.DataTable>, 형식은 유지 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="65292-145">For a typed <xref:System.Data.DataTable>, types are not preserved.</span></span> <span data-ttu-id="65292-146">데이터 및 스키마를 전송할지, 되지만 형식화 된 결과 출력 테이블의 행 수 <xref:System.Data.DataRow> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-146">The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type.</span></span> <span data-ttu-id="65292-147">합니다 <xref:System.Data.DataRow.RowState%2A> 하 고 <xref:System.Data.DataRow.RowError%2A> 속성은 원본에서 복사 하는 동안 유지 되지 않습니다 <xref:System.Data.DataRow> 반환 된 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-147">The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="65292-148">경우는 **null** 참조 또는 nullable 형식과 값 **null** 원본의 <xref:System.Data.DataRow>,이 메서드는 대상의 값을 대체 <xref:System.Data.DataTable> 값을 사용 하 여 <xref:System.DBNull.Value>합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-148">When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="65292-149">메서드에 의해 반환 되는 생성 된 테이블에 기본 테이블 이름이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="65292-149">The generated table returned by the method has the default table name.</span></span> <span data-ttu-id="65292-150">이름을 지정 하려는 경우는 <xref:System.Data.DataTable>에 연결을 <xref:System.Data.DataSet>, 다른 수행 또는 <xref:System.Data.DataTable> 특정 작업을 해야 테이블이 만들어지고 반환 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-150">If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.</span></span>  
  
 <span data-ttu-id="65292-151">자세한 내용은 [쿼리는에서 DataTable 만들기](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-151">For more information, see [Creating a DataTable From a Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65292-152">다음 예에서는 2001 년 8 월 8 일 이후 주문에 대 한 SalesOrderHeader 테이블을 쿼리하여 사용 하는 <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> 메서드를를 <xref:System.Data.DataTable> 쿼리의 결과 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-152">The following example queries the SalesOrderHeader table for orders after August 8, 2001, and uses the <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> method to create a <xref:System.Data.DataTable> from that query.</span></span> <span data-ttu-id="65292-153">그런 다음 <xref:System.Data.DataTable>이 <xref:System.Windows.Forms.BindingSource>의 프록시 역할을 수행하는 <xref:System.Windows.Forms.DataGridView>에 바인딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="65292-153">The <xref:System.Data.DataTable> is then bound to a <xref:System.Windows.Forms.BindingSource>, which acts as proxy for a <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
 [!code-csharp[DP LINQ to DataSet Examples#CopyToDataTable1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/CS/Program.cs#copytodatatable1)]
 [!code-vb[DP LINQ to DataSet Examples#CopyToDataTable1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/VB/Module1.vb#copytodatatable1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="65292-154">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스가 <see langword="null" />이고 새 테이블을 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="65292-154">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is <see langword="null" /> and a new table cannot be created.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="65292-155">소스 시퀀스의 <see cref="T:System.Data.DataRow" /> 상태가 <see cref="F:System.Data.DataRowState.Deleted" />인 경우</span><span class="sxs-lookup"><span data-stu-id="65292-155">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.</span></span>  
  
<span data-ttu-id="65292-156">소스 시퀀스에 <see cref="T:System.Data.DataRow" /> 개체가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="65292-156">The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.</span></span>  
  
<span data-ttu-id="65292-157">소스 시퀀스의 <see cref="T:System.Data.DataRow" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="65292-157">A <see cref="T:System.Data.DataRow" /> in the source sequence is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Data.DataTable table, System.Data.LoadOption options) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Data.DataTable table, valuetype System.Data.LoadOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T), table As DataTable, options As LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static void CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source, System::Data::DataTable ^ table, System::Data::LoadOption options);" />
      <MemberSignature Language="F#" Value="static member CopyToDataTable : seq&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; * System.Data.DataTable * System.Data.LoadOption -&gt; unit (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.CopyToDataTable (source, table, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="options" Type="System.Data.LoadOption" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="65292-158">소스 시퀀스의 개체 형식(일반적으로 <see cref="T:System.Data.DataRow" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-158">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="65292-159">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-159">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</span></span></param>
        <param name="table"><span data-ttu-id="65292-160">대상 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-160">The destination <see cref="T:System.Data.DataTable" />.</span></span></param>
        <param name="options"><span data-ttu-id="65292-161"><see cref="T:System.Data.LoadOption" /> 로드 옵션을 지정하는 <see cref="T:System.Data.DataTable" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-161">A <see cref="T:System.Data.LoadOption" /> enumeration that specifies the <see cref="T:System.Data.DataTable" /> load options.</span></span></param>
        <summary><span data-ttu-id="65292-162">제네릭 매개 변수 <paramref name="T" />가 <see cref="T:System.Data.DataRow" />인 지정된 입력 <see cref="T:System.Data.DataTable" /> 개체를 사용하여 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체를 지정된 <see cref="T:System.Data.DataRow" />에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-162">Copies <see cref="T:System.Data.DataRow" /> objects to the specified <see cref="T:System.Data.DataTable" />, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65292-163">매개 변수 `T` 입력된 매개 변수의 `source` 형식일 수만 있습니다 <xref:System.Data.DataRow>에서 파생 된 형식 또는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-163">The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow>, or a type derived from <xref:System.Data.DataRow>.</span></span>  
  
 <span data-ttu-id="65292-164">입력된 시퀀스 될 수 있습니다 <xref:System.Collections.Generic.IEnumerable%601> 소스 뿐 아니라 쿼리를 통해를 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-164">The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query over a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="65292-165">참고는 소스 시퀀스를 쿼리 하는 경우이 연산자를 호출는 즉시 실행을 강제 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-165">Note that if the source sequence is a query, calling this operator will force immediate execution.</span></span> <span data-ttu-id="65292-166">소스 시퀀스를 열거 하는 경우에 예외가 throw 될 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="65292-166">Enumerating the source sequence can also cause exceptions to be thrown.</span></span>  
  
 <span data-ttu-id="65292-167">대상 테이블의 스키마는 스키마를 기반으로 첫 번째 <xref:System.Data.DataRow> 소스 시퀀스의 행입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-167">The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence.</span></span> <span data-ttu-id="65292-168">테이블 메타 데이터에서 추출 되는 <xref:System.Data.DataRow> 메타 데이터 및 테이블의 열 값에서 값을 <xref:System.Data.DataRow>입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-168">The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>.</span></span> <span data-ttu-id="65292-169">형식화 된 <xref:System.Data.DataTable>, 형식은 유지 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="65292-169">For a typed <xref:System.Data.DataTable>, types are not preserved.</span></span> <span data-ttu-id="65292-170">데이터 및 스키마를 전송할지, 되지만 형식화 된 결과 출력 테이블의 행 수 <xref:System.Data.DataRow> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-170">The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type.</span></span> <span data-ttu-id="65292-171">합니다 <xref:System.Data.DataRow.RowState%2A> 하 고 <xref:System.Data.DataRow.RowError%2A> 속성은 원본에서 복사 하는 동안 유지 되지 않습니다 <xref:System.Data.DataRow> 반환 된 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-171">The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="65292-172">경우는 **null** 참조 또는 nullable 형식과 값 **null** 원본의 <xref:System.Data.DataRow>,이 메서드는 대상의 값을 대체 <xref:System.Data.DataTable> 값을 사용 하 여 <xref:System.DBNull.Value>합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-172">When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="65292-173">메서드에 의해 반환 되는 생성 된 테이블에 기본 테이블 이름이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="65292-173">The generated table returned by the method has the default table name.</span></span> <span data-ttu-id="65292-174">이름을 지정 하려는 경우는 <xref:System.Data.DataTable>에 연결을 <xref:System.Data.DataSet>, 다른 수행 또는 <xref:System.Data.DataTable> 특정 작업을 해야 테이블이 만들어지고 반환 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-174">If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.</span></span>  
  
 <span data-ttu-id="65292-175">자세한 내용은 [쿼리는에서 DataTable 만들기](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-175">For more information, see [Creating a DataTable From a Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="65292-176">복사된 <see cref="T:System.Data.DataRow" /> 개체가 대상 <see cref="T:System.Data.DataTable" />의 스키마에 맞지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="65292-176">The copied <see cref="T:System.Data.DataRow" /> objects do not fit the schema of the destination <see cref="T:System.Data.DataTable" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="65292-177">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스가 <see langword="null" />이거나 대상 <see cref="T:System.Data.DataTable" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="65292-177">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is <see langword="null" /> or the destination <see cref="T:System.Data.DataTable" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="65292-178">소스 시퀀스의 <see cref="T:System.Data.DataRow" /> 상태가 <see cref="F:System.Data.DataRowState.Deleted" />인 경우</span><span class="sxs-lookup"><span data-stu-id="65292-178">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.</span></span>  
  
<span data-ttu-id="65292-179">소스 시퀀스에 <see cref="T:System.Data.DataRow" /> 개체가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="65292-179">The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.</span></span>  
  
<span data-ttu-id="65292-180">소스 시퀀스의 <see cref="T:System.Data.DataRow" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="65292-180">A <see cref="T:System.Data.DataRow" /> in the source sequence is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Data.DataTable table, System.Data.LoadOption options, System.Data.FillErrorEventHandler errorHandler) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Data.DataTable table, valuetype System.Data.LoadOption options, class System.Data.FillErrorEventHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T), table As DataTable, options As LoadOption, errorHandler As FillErrorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static void CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source, System::Data::DataTable ^ table, System::Data::LoadOption options, System::Data::FillErrorEventHandler ^ errorHandler);" />
      <MemberSignature Language="F#" Value="static member CopyToDataTable : seq&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; * System.Data.DataTable * System.Data.LoadOption * System.Data.FillErrorEventHandler -&gt; unit (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.CopyToDataTable (source, table, options, errorHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="options" Type="System.Data.LoadOption" />
        <Parameter Name="errorHandler" Type="System.Data.FillErrorEventHandler" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="65292-181">소스 시퀀스의 개체 형식(일반적으로 <see cref="T:System.Data.DataRow" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-181">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="65292-182">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-182">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</span></span></param>
        <param name="table"><span data-ttu-id="65292-183">대상 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-183">The destination <see cref="T:System.Data.DataTable" />.</span></span></param>
        <param name="options"><span data-ttu-id="65292-184"><see cref="T:System.Data.LoadOption" /> 로드 옵션을 지정하는 <see cref="T:System.Data.DataTable" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-184">A <see cref="T:System.Data.LoadOption" /> enumeration that specifies the <see cref="T:System.Data.DataTable" /> load options.</span></span></param>
        <param name="errorHandler"><span data-ttu-id="65292-185">오류를 처리할 메서드를 나타내는 <see cref="T:System.Data.FillErrorEventHandler" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-185">A <see cref="T:System.Data.FillErrorEventHandler" /> delegate that represents the method that will handle an error.</span></span></param>
        <summary><span data-ttu-id="65292-186">제네릭 매개 변수 <paramref name="T" />가 <see cref="T:System.Data.DataRow" />인 지정된 입력 <see cref="T:System.Data.DataTable" /> 개체를 사용하여 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체를 지정된 <see cref="T:System.Data.DataRow" />에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-186">Copies <see cref="T:System.Data.DataRow" /> objects to the specified <see cref="T:System.Data.DataTable" />, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65292-187">매개 변수 `T` 입력된 매개 변수의 `source` 형식일 수만 있습니다 <xref:System.Data.DataRow>에서 파생 된 형식 또는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-187">The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow>, or a type derived from <xref:System.Data.DataRow>.</span></span>  
  
 <span data-ttu-id="65292-188">입력된 시퀀스 될 수 있습니다 <xref:System.Collections.Generic.IEnumerable%601> 소스 뿐 아니라 쿼리를 통해를 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-188">The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query over a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="65292-189">참고는 소스 시퀀스를 쿼리 하는 경우이 연산자를 호출는 즉시 실행을 강제 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-189">Note that if the source sequence is a query, calling this operator will force immediate execution.</span></span> <span data-ttu-id="65292-190">소스 시퀀스를 열거 하는 경우에 예외가 throw 될 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="65292-190">Enumerating the source sequence can also cause exceptions to be thrown.</span></span>  
  
 <span data-ttu-id="65292-191">대상 테이블의 스키마는 스키마를 기반으로 첫 번째 <xref:System.Data.DataRow> 소스 시퀀스의 행입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-191">The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence.</span></span> <span data-ttu-id="65292-192">테이블 메타 데이터에서 추출 되는 <xref:System.Data.DataRow> 메타 데이터 및 테이블의 열 값에서 값을 <xref:System.Data.DataRow>입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-192">The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>.</span></span> <span data-ttu-id="65292-193">형식화 된 <xref:System.Data.DataTable>, 형식은 유지 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="65292-193">For a typed <xref:System.Data.DataTable>, types are not preserved.</span></span> <span data-ttu-id="65292-194">데이터 및 스키마를 전송할지, 되지만 형식화 된 결과 출력 테이블의 행 수 <xref:System.Data.DataRow> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-194">The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type.</span></span> <span data-ttu-id="65292-195">합니다 <xref:System.Data.DataRow.RowState%2A> 하 고 <xref:System.Data.DataRow.RowError%2A> 속성은 원본에서 복사 하는 동안 유지 되지 않습니다 <xref:System.Data.DataRow> 반환 된 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-195">The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="65292-196">경우는 **null** 참조 또는 nullable 형식과 값 **null** 원본의 <xref:System.Data.DataRow>,이 메서드는 대상의 값을 대체 <xref:System.Data.DataTable> 값을 사용 하 여 <xref:System.DBNull.Value>합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-196">When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="65292-197">메서드에 의해 반환 되는 생성 된 테이블에 기본 테이블 이름이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="65292-197">The generated table returned by the method has the default table name.</span></span> <span data-ttu-id="65292-198">이름을 지정 하려는 경우는 <xref:System.Data.DataTable>에 연결을 <xref:System.Data.DataSet>, 다른 수행 또는 <xref:System.Data.DataTable> 특정 작업을 해야 테이블이 만들어지고 반환 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-198">If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.</span></span>  
  
 <span data-ttu-id="65292-199">제약 조건 예외를 같은 대상 테이블에 데이터 행을 복사 하는 동안 예외가 throw 되 면는 `errorHandler` 대리자가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="65292-199">If an exception is thrown during the copy of a data row into the target table, such as a constraint exception, the `errorHandler` delegate is called.</span></span> <span data-ttu-id="65292-200">A <xref:System.Data.FillErrorEventArgs> 에 전달 되는 `errorHandler` 다음 값을 사용 하 여 대리자:</span><span class="sxs-lookup"><span data-stu-id="65292-200">A <xref:System.Data.FillErrorEventArgs> is passed to the `errorHandler` delegate with the following values:</span></span>  
  
-   <span data-ttu-id="65292-201"><xref:System.Data.FillErrorEventArgs.Values%2A> 원본 데이터의 복사본을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-201">The <xref:System.Data.FillErrorEventArgs.Values%2A> property is set to a copy of the source data.</span></span>  
  
-   <span data-ttu-id="65292-202">합니다 <xref:System.Data.FillErrorEventArgs.DataTable%2A> 대상 속성이 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-202">The <xref:System.Data.FillErrorEventArgs.DataTable%2A> property is set to the target <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="65292-203"><xref:System.Data.FillErrorEventArgs.Errors%2A> 예외가 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-203">The <xref:System.Data.FillErrorEventArgs.Errors%2A> property is set to the caught exception.</span></span>  
  
 <span data-ttu-id="65292-204"><xref:System.Data.FillErrorEventArgs.Continue%2A> 대리자 호출이 반환 된 후 속성이 읽기입니다.</span><span class="sxs-lookup"><span data-stu-id="65292-204">The <xref:System.Data.FillErrorEventArgs.Continue%2A> property is read after the delegate call returns.</span></span> <span data-ttu-id="65292-205">경우는 <xref:System.Data.FillErrorEventArgs.Continue%2A> 속성은 `true`를 열거 하 고 데이터 테이블에 로드 하려면 소스 시퀀스를 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-205">If the <xref:System.Data.FillErrorEventArgs.Continue%2A> property is `true`, the source sequence continues to be enumerated and loaded into the data table.</span></span> <span data-ttu-id="65292-206">경우는 <xref:System.Data.FillErrorEventArgs.Continue%2A> 속성은 `false`에서 원래 예외가 throw 되는 <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="65292-206">If the <xref:System.Data.FillErrorEventArgs.Continue%2A> property is `false`, the original exception is thrown from the <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> method.</span></span>  
  
 <span data-ttu-id="65292-207">자세한 내용은 [쿼리는에서 DataTable 만들기](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="65292-207">For more information, see [Creating a DataTable From a Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="65292-208">복사된 <see cref="T:System.Data.DataRow" /> 개체가 대상 <see cref="T:System.Data.DataTable" />의 스키마에 맞지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="65292-208">The copied <see cref="T:System.Data.DataRow" /> objects do not fit the schema of the destination <see cref="T:System.Data.DataTable" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="65292-209">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스가 <see langword="null" />이거나 대상 <see cref="T:System.Data.DataTable" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="65292-209">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is <see langword="null" /> or the destination <see cref="T:System.Data.DataTable" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="65292-210">소스 시퀀스의 <see cref="T:System.Data.DataRow" /> 상태가 <see cref="F:System.Data.DataRowState.Deleted" />인 경우</span><span class="sxs-lookup"><span data-stu-id="65292-210">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.</span></span>  
  
<span data-ttu-id="65292-211">또는</span><span class="sxs-lookup"><span data-stu-id="65292-211">-or-</span></span> 
<span data-ttu-id="65292-212">소스 시퀀스에 <see cref="T:System.Data.DataRow" /> 개체가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="65292-212">The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.</span></span>  
  
<span data-ttu-id="65292-213">또는</span><span class="sxs-lookup"><span data-stu-id="65292-213">-or-</span></span> 
<span data-ttu-id="65292-214">소스 시퀀스의 <see cref="T:System.Data.DataRow" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="65292-214">A <see cref="T:System.Data.DataRow" /> in the source sequence is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>