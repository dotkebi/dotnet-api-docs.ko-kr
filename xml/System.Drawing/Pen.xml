<Type Name="Pen" FullName="System.Drawing.Pen">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8765d39c977f98009edd53b9585dfd5872760dad" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56775809" /></Metadata><TypeSignature Language="C#" Value="public sealed class Pen : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pen extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Pen" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pen&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pen sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type Pen = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="680f8-101">선과 곡선을 그리는 데 사용되는 개체를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-101">Defines an object used to draw lines and curves.</span></span> <span data-ttu-id="680f8-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-103"><xref:System.Drawing.Pen> 지정 된 너비 및 스타일 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-103">A <xref:System.Drawing.Pen> draws a line of specified width and style.</span></span> <span data-ttu-id="680f8-104">사용 하 여는 <xref:System.Drawing.Drawing2D.DashStyle> 그리는 파선의 몇 가지 종류의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-104">Use the <xref:System.Drawing.Drawing2D.DashStyle> property to draw several varieties of dashed lines.</span></span> <span data-ttu-id="680f8-105">그려진 선은 <xref:System.Drawing.Pen> 다양 한 단색, 질감 등과 채우기 스타일으로 채울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-105">The line drawn by a <xref:System.Drawing.Pen> can be filled in a variety of fill styles, including solid colors and textures.</span></span> <span data-ttu-id="680f8-106">채우기 스타일은 채우기 개체로 사용 되는 브러시 또는 질감에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-106">The fill style depends on brush or texture that is used as the fill object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="680f8-107">다음 코드 예제를 생성 하는 방법을 보여 줍니다는 <xref:System.Drawing.Pen> 사용 하 여는 <xref:System.Drawing.Pen.Brush%2A> 및 설정의 효과 <xref:System.Drawing.Pen.LineJoin%2A> 속성을 <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="680f8-107">The following code example demonstrates constructing a <xref:System.Drawing.Pen> with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="680f8-108">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-108">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="680f8-109">양식과 호출 코드를 붙여 합니다 `ShowLineJoin` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-109">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="680f8-110">지정된 색을 사용하여 <see cref="T:System.Drawing.Pen" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-110">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified color.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Drawing.Brush brush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Brush brush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Drawing::Brush ^ brush);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Pen : System.Drawing.Brush -&gt; System.Drawing.Pen" Usage="new System.Drawing.Pen brush" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="680f8-111"><see cref="T:System.Drawing.Brush" />의 채우기 속성을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-111">A <see cref="T:System.Drawing.Brush" /> that determines the fill properties of this <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <summary><span data-ttu-id="680f8-112">지정된 <see cref="T:System.Drawing.Pen" />를 사용하여 <see cref="T:System.Drawing.Brush" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-112">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Brush" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-113">합니다 <xref:System.Drawing.Pen.Brush%2A> 속성을 결정 하는 방법을 <xref:System.Drawing.Pen> 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-113">The <xref:System.Drawing.Pen.Brush%2A> property determines how the <xref:System.Drawing.Pen> draws lines.</span></span> <span data-ttu-id="680f8-114">지정 된 특성으로 채워진 사각형과 처럼 선이 그려집니다 <xref:System.Drawing.Brush>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-114">Lines are drawn as if they are filled rectangles, with the characteristics of the specified <xref:System.Drawing.Brush>.</span></span>  
  
 <span data-ttu-id="680f8-115">합니다 <xref:System.Drawing.Pen.Width%2A> 새 속성 <xref:System.Drawing.Pen> 1 (기본값)로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-115">The <xref:System.Drawing.Pen.Width%2A> property of the new <xref:System.Drawing.Pen> is set to 1 (the default).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="680f8-116">다음 코드 예제를 생성 하는 방법을 보여 줍니다는 <xref:System.Drawing.Pen> 사용 하 여는 <xref:System.Drawing.Pen.Brush%2A> 및 설정의 효과 <xref:System.Drawing.Pen.LineJoin%2A> 속성을 <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="680f8-116">The following code example demonstrates constructing a <xref:System.Drawing.Pen> with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="680f8-117">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-117">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="680f8-118">양식과 호출 코드를 붙여 합니다 `ShowLineJoin` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-118">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="680f8-119"><paramref name="brush" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-119"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.#ctor(System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Pen : System.Drawing.Color -&gt; System.Drawing.Pen" Usage="new System.Drawing.Pen color" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="color"><span data-ttu-id="680f8-120"><see cref="T:System.Drawing.Color" />의 색을 나타내는 <see cref="T:System.Drawing.Pen" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-120">A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <summary><span data-ttu-id="680f8-121">지정된 색을 사용하여 <see cref="T:System.Drawing.Pen" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-121">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified color.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-122">합니다 <xref:System.Drawing.Color> 속성으로 지정 된 색으로 설정 됩니다는 `color` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-122">The <xref:System.Drawing.Color> property is set to the color specified by the `color` parameter.</span></span> <span data-ttu-id="680f8-123"><xref:System.Drawing.Pen.Width%2A> 속성이 1 (기본값)로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-123">The <xref:System.Drawing.Pen.Width%2A> property is set to 1 (the default).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Drawing.Brush brush, float width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Brush brush, float32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Drawing::Brush ^ brush, float width);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Pen : System.Drawing.Brush * single -&gt; System.Drawing.Pen" Usage="new System.Drawing.Pen (brush, width)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="width" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="680f8-124"><see cref="T:System.Drawing.Brush" />의 특성을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-124">A <see cref="T:System.Drawing.Brush" /> that determines the characteristics of this <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <param name="width"><span data-ttu-id="680f8-125">새 <see cref="T:System.Drawing.Pen" />의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-125">The width of the new <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <summary><span data-ttu-id="680f8-126">지정된 <see cref="T:System.Drawing.Pen" /> 및 <see cref="T:System.Drawing.Brush" />를 사용하여 <see cref="P:System.Drawing.Pen.Width" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-126">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="P:System.Drawing.Pen.Width" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-127"><xref:System.Drawing.Brush> 에 지정 된 색으로 설정 됩니다는 `brush` 매개 변수를 <xref:System.Drawing.Pen.Width%2A> 속성에 지정 된 값으로 설정 됩니다는 `width` 매개 변수 및 단위로 설정 되어 <xref:System.Drawing.GraphicsUnit.World>.</span><span class="sxs-lookup"><span data-stu-id="680f8-127">The <xref:System.Drawing.Brush> is set to the color specified in the `brush` parameter, the <xref:System.Drawing.Pen.Width%2A> property is set to the value specified in the `width` parameter, and the units are set to <xref:System.Drawing.GraphicsUnit.World>.</span></span>  
  
 <span data-ttu-id="680f8-128">`brush` 매개 변수 지정 합니다 <xref:System.Drawing.Color> 속성 <xref:System.Drawing.Pen>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-128">Note that the `brush` parameter also specifies the <xref:System.Drawing.Color> property of this <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="680f8-129">A `width` 0 하면는 <xref:System.Drawing.Pen> 너비가 1 인 것 처럼 그리기입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-129">A `width` of 0 will result in the <xref:System.Drawing.Pen> drawing as if the width were 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="680f8-130">다음 코드 예제에서는 <xref:System.Drawing.Pen> 설정의 결과 보여 줍니다 합니다 <xref:System.Drawing.Pen.StartCap%2A> 및 <xref:System.Drawing.Pen.EndCap%2A> 속성에는 <xref:System.Drawing.Pen>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-130">The following code example creates a <xref:System.Drawing.Pen> and demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="680f8-131">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-131">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="680f8-132">양식과 호출 코드를 붙여 합니다 `ShowStartAndEndCaps` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-132">Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.ImageExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ImageExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ImageExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="680f8-133"><paramref name="brush" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-133"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Drawing.Color color, float width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Color color, float32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Drawing::Color color, float width);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Pen : System.Drawing.Color * single -&gt; System.Drawing.Pen" Usage="new System.Drawing.Pen (color, width)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="width" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="color"><span data-ttu-id="680f8-134"><see cref="T:System.Drawing.Color" />의 색을 나타내는 <see cref="T:System.Drawing.Pen" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-134">A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <param name="width"><span data-ttu-id="680f8-135"><see cref="T:System.Drawing.Pen" />의 너비를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-135">A value indicating the width of this <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <summary><span data-ttu-id="680f8-136">지정된 <see cref="T:System.Drawing.Pen" /> 및 <see cref="T:System.Drawing.Color" />속성을 사용하여 <see cref="P:System.Drawing.Pen.Width" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-136">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Color" /> and <see cref="P:System.Drawing.Pen.Width" /> properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-137">합니다 <xref:System.Drawing.Color> 속성으로 지정 된 색으로 설정 됩니다는 `color` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-137">The <xref:System.Drawing.Color> property is set to the color specified by the `color` parameter.</span></span> <span data-ttu-id="680f8-138">합니다 <xref:System.Drawing.Pen.Width%2A> 속성에 지정 된 값으로 설정 되는 `width` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-138">The <xref:System.Drawing.Pen.Width%2A> property is set to the value specified in the `width` parameter.</span></span> <span data-ttu-id="680f8-139">A `width` 0 하면는 <xref:System.Drawing.Pen> 너비가 1 인 것 처럼 그리기입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-139">A `width` of 0 will result in the <xref:System.Drawing.Pen> drawing as if the width were 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="680f8-140">다음 코드 예제를 만드는 방법을 보여는 <xref:System.Drawing.Pen> 및 설정의 결과 <xref:System.Drawing.Pen.DashCap%2A>를 <xref:System.Drawing.Pen.DashPattern%2A>, 및 <xref:System.Drawing.Graphics.SmoothingMode%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-140">The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.</span></span>  
  
 <span data-ttu-id="680f8-141">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-141">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="680f8-142">양식과 호출 코드를 붙여 합니다 `ShowPensAndSmoothingMode` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> e로 전달할 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-142">Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing e as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.PensExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.PensExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PenAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.PenAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As PenAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PenAlignment Alignment { System::Drawing::Drawing2D::PenAlignment get(); void set(System::Drawing::Drawing2D::PenAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Drawing.Drawing2D.PenAlignment with get, set" Usage="System.Drawing.Pen.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PenAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-143"><see cref="T:System.Drawing.Pen" />의 맞춤을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-143">Gets or sets the alignment for this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="680f8-144"><see cref="T:System.Drawing.Drawing2D.PenAlignment" />의 맞춤을 나타내는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-144">A <see cref="T:System.Drawing.Drawing2D.PenAlignment" /> that represents the alignment for this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-145">이 속성을 결정 하는 방법을 <xref:System.Drawing.Pen> 닫힌된 곡선 및 다각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-145">This property determines how the <xref:System.Drawing.Pen> draws closed curves and polygons.</span></span> <span data-ttu-id="680f8-146"><xref:System.Drawing.Drawing2D.PenAlignment> 단, 두 개의 값-; 5 개 값을 지정 하는 열거형 <xref:System.Drawing.Drawing2D.PenAlignment.Center> 및 <xref:System.Drawing.Drawing2D.PenAlignment.Inset> -그려지는 선의 모양을 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-146">The <xref:System.Drawing.Drawing2D.PenAlignment> enumeration specifies five values; however, only two values - <xref:System.Drawing.Drawing2D.PenAlignment.Center> and <xref:System.Drawing.Drawing2D.PenAlignment.Inset> - will change the appearance of a drawn line.</span></span> <span data-ttu-id="680f8-147"><xref:System.Drawing.Drawing2D.PenAlignment.Center> 이 속성의 기본값은 및 펜의 너비 가운데 곡선 또는 다각형의 개요에 표시 됩니다 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-147"><xref:System.Drawing.Drawing2D.PenAlignment.Center> is the default value for this property and specifies that the width of the pen is centered on the outline of the curve or polygon.</span></span> <span data-ttu-id="680f8-148">값 <xref:System.Drawing.Drawing2D.PenAlignment.Inset> 곡선 또는 다각형의 윤곽선 내부에 펜의 너비는이 속성이 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-148">A value of <xref:System.Drawing.Drawing2D.PenAlignment.Inset> for this property specifies that the width of the pen is inside the outline of the curve or polygon.</span></span> <span data-ttu-id="680f8-149">다른 세 가지 값 <xref:System.Drawing.Drawing2D.PenAlignment.Right>, <xref:System.Drawing.Drawing2D.PenAlignment.Left>, 및 <xref:System.Drawing.Drawing2D.PenAlignment.Outset>, 가운데 표시 되는 펜을 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-149">The other three values, <xref:System.Drawing.Drawing2D.PenAlignment.Right>, <xref:System.Drawing.Drawing2D.PenAlignment.Left>, and <xref:System.Drawing.Drawing2D.PenAlignment.Outset>, will result in a pen that is centered.</span></span>  
  
 <span data-ttu-id="680f8-150">A <xref:System.Drawing.Pen> 로 맞춤이 <xref:System.Drawing.Drawing2D.PenAlignment.Inset> 및 경우에 따라 중앙된 위치에 삽입 된 위치에 따라 그리기 불안정 한 결과 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-150">A <xref:System.Drawing.Pen> that has its alignment set to <xref:System.Drawing.Drawing2D.PenAlignment.Inset> will yield unreliable results, sometimes drawing in the inset position and sometimes in the centered position.</span></span> <span data-ttu-id="680f8-151">또한 삽입 펜 복합 선을 그리는 데 사용할 수 없습니다 하 고 파선으로 그릴 <xref:System.Drawing.Drawing2D.DashCap.Triangle> 대시 캡입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-151">Also, an inset pen cannot be used to draw compound lines and cannot draw dashed lines with <xref:System.Drawing.Drawing2D.DashCap.Triangle> dash caps.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="680f8-152">지정된 값이 <see cref="T:System.Drawing.Drawing2D.PenAlignment" />의 멤버가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-152">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.PenAlignment" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="680f8-153"><see cref="P:System.Drawing.Pen.Alignment" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-153">The <see cref="P:System.Drawing.Pen.Alignment" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Brush">
      <MemberSignature Language="C#" Value="public System.Drawing.Brush Brush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Brush Brush" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Brush" />
      <MemberSignature Language="VB.NET" Value="Public Property Brush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Brush ^ Brush { System::Drawing::Brush ^ get(); void set(System::Drawing::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Brush : System.Drawing.Brush with get, set" Usage="System.Drawing.Pen.Brush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-154"><see cref="T:System.Drawing.Brush" />의 특성을 결정하는 <see cref="T:System.Drawing.Pen" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-154">Gets or sets the <see cref="T:System.Drawing.Brush" /> that determines attributes of this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="680f8-155"><see cref="T:System.Drawing.Brush" />의 특성을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-155">A <see cref="T:System.Drawing.Brush" /> that determines attributes of this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-156">이 속성을 할당 하면 채워진 선과 곡선을 그릴 펜입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-156">Assigning this property causes the pen to draw filled lines and curves.</span></span> <span data-ttu-id="680f8-157">재정의 <xref:System.Drawing.Color> 의 속성을 <xref:System.Drawing.Pen>입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-157">It overrides the <xref:System.Drawing.Color> property of the <xref:System.Drawing.Pen>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="680f8-158"><see cref="P:System.Drawing.Pen.Brush" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-158">The <see cref="P:System.Drawing.Pen.Brush" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="pen.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="680f8-159">이 <see cref="T:System.Drawing.Pen" />의 정확한 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-159">Creates an exact copy of this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="680f8-160"><see cref="T:System.Drawing.Pen" />으로 캐스팅될 수 있는 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-160">An <see cref="T:System.Object" /> that can be cast to a <see cref="T:System.Drawing.Pen" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="680f8-161">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-161">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="680f8-162">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-162">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="680f8-163"><xref:System.Drawing.Pen>을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-163">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="680f8-164">이 펜의 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-164">Creates a copy of that pen.</span></span>  
  
-   <span data-ttu-id="680f8-165">펜의 복사본을 사용 하 여 화면에 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-165">Draws a line to the screen, using the copy of the pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicPenExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicPenExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Drawing.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color Color { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.Color : System.Drawing.Color with get, set" Usage="System.Drawing.Pen.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-166">이 <see cref="T:System.Drawing.Pen" />의 색을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-166">Gets or sets the color of this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="680f8-167"><see cref="T:System.Drawing.Color" />의 색을 나타내는 <see cref="T:System.Drawing.Pen" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-167">A <see cref="T:System.Drawing.Color" /> structure that represents the color of this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="680f8-168"><see cref="P:System.Drawing.Pen.Color" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-168">The <see cref="P:System.Drawing.Pen.Color" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CompoundArray">
      <MemberSignature Language="C#" Value="public float[] CompoundArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] CompoundArray" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.CompoundArray" />
      <MemberSignature Language="VB.NET" Value="Public Property CompoundArray As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ CompoundArray { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CompoundArray : single[] with get, set" Usage="System.Drawing.Pen.CompoundArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-169">복합 펜을 지정하는 값 배열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-169">Gets or sets an array of values that specifies a compound pen.</span></span> <span data-ttu-id="680f8-170">복합 펜은 평행선과 공백으로 이루어진 복합 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-170">A compound pen draws a compound line made up of parallel lines and spaces.</span></span></summary>
        <value><span data-ttu-id="680f8-171">복합 배열을 지정하는 실수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-171">An array of real numbers that specifies the compound array.</span></span> <span data-ttu-id="680f8-172">배열의 요소는 0보다 작지 않고 1보다 크지 않아야 하며 오름차순이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-172">The elements in the array must be in increasing order, not less than 0, and not greater than 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-173">복합 선은 평행선과 공백으로 다양 한 너비의 교대로 반복 되는 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-173">A compound line is made up of alternating parallel lines and spaces of varying widths.</span></span> <span data-ttu-id="680f8-174">복합 펜의 너비를 기준으로 줄의 각 구성 요소의 시작점을 지정 하는 배열에 있는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-174">The values in the array specify the starting points of each component of the compound line relative to the pen's width.</span></span> <span data-ttu-id="680f8-175">배열의 첫 번째 값을 첫 번째 구성 요소 (선) 시작 되는 거리에 대 한 분수로 펜의 너비를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-175">The first value in the array specifies where the first component (a line) begins as a fraction of the distance across the width of the pen.</span></span> <span data-ttu-id="680f8-176">배열의 두 번째 값 펜의 너비에 가로로 거리에 대 한 부분으로 다음 구성 요소 (공백)의 시작 부분을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-176">The second value in the array specifies the beginning of the next component (a space) as a fraction of the distance across the width of the pen.</span></span> <span data-ttu-id="680f8-177">배열의 마지막 값 마지막 구성 요소 종료 위치를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-177">The final value in the array specifies where the last component ends.</span></span>  
  
 <span data-ttu-id="680f8-178">두 줄을 구분 하는 공간의 너비 펜의 50%가 첫 번째 줄의 너비 펜의 너비의 20% 인 두 개의 병렬 선 그릴 펜 만든다고 ' s 너비 및 두 번째 줄의 너비는 펜의 30% 너비.</span><span class="sxs-lookup"><span data-stu-id="680f8-178">Suppose you want a pen to draw two parallel lines where the width of the first line is 20 percent of the pen's width, the width of the space that separates the two lines is 50 percent of the pen' s width, and the width of the second line is 30 percent of the pen's width.</span></span> <span data-ttu-id="680f8-179">만들어 시작을 <xref:System.Drawing.Pen> 및 실수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-179">Start by creating a <xref:System.Drawing.Pen> and an array of real numbers.</span></span> <span data-ttu-id="680f8-180">이 속성에 값이 0.0, 0.2, 0.7과 1.0을 사용 하 여 배열 전달 하 여 복합 배열을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-180">Set the compound array by passing the array with the values 0.0, 0.2, 0.7, and 1.0 to this property.</span></span>  
  
 <span data-ttu-id="680f8-181">있으면이 속성을 설정 하지 않아야 합니다 <xref:System.Drawing.Pen> 에 해당 <xref:System.Drawing.Pen.Alignment%2A> 속성이로 설정 <xref:System.Drawing.Drawing2D.PenAlignment.Inset>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-181">Do not set this property if the <xref:System.Drawing.Pen> has its <xref:System.Drawing.Pen.Alignment%2A> property set to <xref:System.Drawing.Drawing2D.PenAlignment.Inset>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="680f8-182"><see cref="P:System.Drawing.Pen.CompoundArray" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-182">The <see cref="P:System.Drawing.Pen.CompoundArray" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CustomEndCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.CustomLineCap CustomEndCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.CustomLineCap CustomEndCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.CustomEndCap" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomEndCap As CustomLineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::CustomLineCap ^ CustomEndCap { System::Drawing::Drawing2D::CustomLineCap ^ get(); void set(System::Drawing::Drawing2D::CustomLineCap ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomEndCap : System.Drawing.Drawing2D.CustomLineCap with get, set" Usage="System.Drawing.Pen.CustomEndCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.CustomLineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-183"><see cref="T:System.Drawing.Pen" />을 사용하여 그리는 선의 끝에 사용할 사용자 지정 캡을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-183">Gets or sets a custom cap to use at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="680f8-184"><see cref="T:System.Drawing.Drawing2D.CustomLineCap" />을 사용하여 그리는 선의 끝에 사용되는 캡을 나타내는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-184">A <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> that represents the cap used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="680f8-185"><see cref="P:System.Drawing.Pen.CustomEndCap" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-185">The <see cref="P:System.Drawing.Pen.CustomEndCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CustomStartCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.CustomLineCap CustomStartCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.CustomLineCap CustomStartCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.CustomStartCap" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomStartCap As CustomLineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::CustomLineCap ^ CustomStartCap { System::Drawing::Drawing2D::CustomLineCap ^ get(); void set(System::Drawing::Drawing2D::CustomLineCap ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomStartCap : System.Drawing.Drawing2D.CustomLineCap with get, set" Usage="System.Drawing.Pen.CustomStartCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.CustomLineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-186"><see cref="T:System.Drawing.Pen" />을 사용하여 그리는 선의 시작 부분에 사용할 사용자 지정 캡을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-186">Gets or sets a custom cap to use at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="680f8-187"><see cref="T:System.Drawing.Drawing2D.CustomLineCap" />을 사용하여 그리는 선의 시작 부분에 사용되는 캡을 나타내는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-187">A <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> that represents the cap used at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="680f8-188"><see cref="P:System.Drawing.Pen.CustomStartCap" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-188">The <see cref="P:System.Drawing.Pen.CustomStartCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DashCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.DashCap DashCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.DashCap DashCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.DashCap" />
      <MemberSignature Language="VB.NET" Value="Public Property DashCap As DashCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::DashCap DashCap { System::Drawing::Drawing2D::DashCap get(); void set(System::Drawing::Drawing2D::DashCap value); };" />
      <MemberSignature Language="F#" Value="member this.DashCap : System.Drawing.Drawing2D.DashCap with get, set" Usage="System.Drawing.Pen.DashCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.DashCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-189"><see cref="T:System.Drawing.Pen" />을 사용하여 그리는 파선을 구성하는 대시의 끝에 사용되는 캡 스타일을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-189">Gets or sets the cap style used at the end of the dashes that make up dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="680f8-190"><see cref="T:System.Drawing.Drawing2D.DashCap" />을 사용하여 그리는 파선을 구성하는 대시의 시작과 끝에 사용되는 캡 스타일을 나타내는 <see cref="T:System.Drawing.Pen" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-190">One of the <see cref="T:System.Drawing.Drawing2D.DashCap" /> values that represents the cap style used at the beginning and end of the dashes that make up dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-191">이 속성을 설정 하지 마십시오 <xref:System.Drawing.Drawing2D.DashCap.Triangle> 경우는 <xref:System.Drawing.Pen> 에 해당 <xref:System.Drawing.Pen.Alignment%2A> 속성으로 설정 <xref:System.Drawing.Drawing2D.PenAlignment.Inset>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-191">Do not set this property to <xref:System.Drawing.Drawing2D.DashCap.Triangle> if the <xref:System.Drawing.Pen> has its <xref:System.Drawing.Pen.Alignment%2A> property set to <xref:System.Drawing.Drawing2D.PenAlignment.Inset>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="680f8-192">다음 코드 예제를 만드는 방법을 보여는 <xref:System.Drawing.Pen> 및 설정의 결과 <xref:System.Drawing.Pen.DashCap%2A>를 <xref:System.Drawing.Pen.DashPattern%2A>, 및 <xref:System.Drawing.Graphics.SmoothingMode%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-192">The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.</span></span>  
  
 <span data-ttu-id="680f8-193">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-193">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="680f8-194">양식과 호출 코드를 붙여 합니다 `ShowPensAndSmoothingMode` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-194">Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.PensExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.PensExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="680f8-195">지정된 값이 <see cref="T:System.Drawing.Drawing2D.DashCap" />의 멤버가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-195">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.DashCap" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="680f8-196"><see cref="P:System.Drawing.Pen.DashCap" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-196">The <see cref="P:System.Drawing.Pen.DashCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DashOffset">
      <MemberSignature Language="C#" Value="public float DashOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DashOffset" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.DashOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DashOffset As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float DashOffset { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.DashOffset : single with get, set" Usage="System.Drawing.Pen.DashOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-197">선의 시작에서 대시 패턴의 시작까지의 거리를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-197">Gets or sets the distance from the start of a line to the beginning of a dash pattern.</span></span></summary>
        <value><span data-ttu-id="680f8-198">선의 시작에서 대시 패턴의 시작까지의 거리입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-198">The distance from the start of a line to the beginning of a dash pattern.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="680f8-199"><see cref="P:System.Drawing.Pen.DashOffset" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-199">The <see cref="P:System.Drawing.Pen.DashOffset" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DashPattern">
      <MemberSignature Language="C#" Value="public float[] DashPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] DashPattern" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.DashPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property DashPattern As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ DashPattern { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DashPattern : single[] with get, set" Usage="System.Drawing.Pen.DashPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-200">사용자 정의 대시와 공백의 배열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-200">Gets or sets an array of custom dashes and spaces.</span></span></summary>
        <value><span data-ttu-id="680f8-201">파선의 반복 대시와 공백의 길이를 지정하는 실수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-201">An array of real numbers that specifies the lengths of alternating dashes and spaces in dashed lines.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-202">이외의 값을 할당 `null` 이 속성에는 설정 합니다 <xref:System.Drawing.Drawing2D.DashStyle> 이 대 한 속성 <xref:System.Drawing.Pen> 를 <xref:System.Drawing.Drawing2D.DashStyle.Custom>.</span><span class="sxs-lookup"><span data-stu-id="680f8-202">Assigning a value other than `null` to this property will set the <xref:System.Drawing.Drawing2D.DashStyle> property for this <xref:System.Drawing.Pen> to <xref:System.Drawing.Drawing2D.DashStyle.Custom>.</span></span>  
  
 <span data-ttu-id="680f8-203">요소는 `dashArray` 대시 패턴에서 각 대시 및 간격의 길이 설정 하는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-203">The elements in the `dashArray` array set the length of each dash and space in the dash pattern.</span></span> <span data-ttu-id="680f8-204">대시의 길이 설정 하는 첫 번째 요소, 공간의 길이 설정 하는 두 번째 요소, 세 번째 요소는 dash 및 등의 길이 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-204">The first element sets the length of a dash, the second element sets the length of a space, the third element sets the length of a dash, and so on.</span></span> <span data-ttu-id="680f8-205">따라서 각 요소에는 0이 아닌 양수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-205">Consequently, each element should be a non-zero positive number.</span></span>  
  
 <span data-ttu-id="680f8-206">각 대시 및 대시 패턴의 길이가 배열의 요소 값의 제품과의 너비는 <xref:System.Drawing.Pen>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-206">The length of each dash and space in the dash pattern is the product of the element value in the array and the width of the <xref:System.Drawing.Pen>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="680f8-207">다음 코드 예제에서는 설정의 결과 <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, 및 <xref:System.Drawing.Graphics.SmoothingMode%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="680f8-207">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.</span></span>  
  
 <span data-ttu-id="680f8-208">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-208">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="680f8-209">양식과 호출 코드를 붙여 합니다 `ShowPensAndSmoothingMode` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-209">Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.PensExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.PensExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="680f8-210"><see cref="P:System.Drawing.Pen.DashPattern" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-210">The <see cref="P:System.Drawing.Pen.DashPattern" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DashStyle">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.DashStyle DashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.DashStyle DashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.DashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DashStyle As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::DashStyle DashStyle { System::Drawing::Drawing2D::DashStyle get(); void set(System::Drawing::Drawing2D::DashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.DashStyle : System.Drawing.Drawing2D.DashStyle with get, set" Usage="System.Drawing.Pen.DashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.DashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-211"><see cref="T:System.Drawing.Pen" />을 사용하여 그리는 파선에 사용될 스타일을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-211">Gets or sets the style used for dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="680f8-212"><see cref="T:System.Drawing.Drawing2D.DashStyle" />을 사용하여 그리는 파선에 사용되는 스타일을 나타내는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-212">A <see cref="T:System.Drawing.Drawing2D.DashStyle" /> that represents the style used for dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-213">값 <xref:System.Drawing.Drawing2D.DashStyle.Custom> 이 속성이 지정 대시와 공백의 사용자 지정 패턴을 정의한 합니다 <xref:System.Drawing.Pen.DashPattern%2A> 속성을 사용 하 여 그리는 선의 이루어집니다 <xref:System.Drawing.Pen>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-213">A value of <xref:System.Drawing.Drawing2D.DashStyle.Custom> for this property specifies that a custom pattern of dashes and spaces, defined by the <xref:System.Drawing.Pen.DashPattern%2A> property, makes up lines drawn with this <xref:System.Drawing.Pen>.</span></span> <span data-ttu-id="680f8-214">이 속성의 값이 <xref:System.Drawing.Drawing2D.DashStyle.Custom> 의 값을 <xref:System.Drawing.Pen.DashPattern%2A> 속성이 `null`, 펜 실선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-214">If the value of this property is <xref:System.Drawing.Drawing2D.DashStyle.Custom> and the value of the <xref:System.Drawing.Pen.DashPattern%2A> property is `null`, the pen draws solid lines.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="680f8-215"><see cref="P:System.Drawing.Pen.DashStyle" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-215">The <see cref="P:System.Drawing.Pen.DashStyle" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="pen.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="680f8-216">이 <see cref="T:System.Drawing.Pen" />에서 사용하는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-216">Releases all resources used by this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-217">호출 <xref:System.Drawing.Pen.Dispose%2A> 이 사용 하는 리소스 <xref:System.Drawing.Brush> 다른 용도로 다시 할당 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-217">Calling <xref:System.Drawing.Pen.Dispose%2A> allows the resources used by this <xref:System.Drawing.Brush> to be reallocated for other purposes.</span></span>  
  
 <span data-ttu-id="680f8-218"><xref:System.Drawing.Pen.Dispose%2A> 사용을 마치면 <xref:System.Drawing.Pen>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-218">Call <xref:System.Drawing.Pen.Dispose%2A> when you are finished using the <xref:System.Drawing.Pen>.</span></span> <span data-ttu-id="680f8-219"><xref:System.Drawing.Pen.Dispose%2A> 메서드를 사용하면 <xref:System.Drawing.Pen>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-219">The <xref:System.Drawing.Pen.Dispose%2A> method leaves the <xref:System.Drawing.Pen> in an unusable state.</span></span> <span data-ttu-id="680f8-220">호출한 후 <xref:System.Drawing.Pen.Dispose%2A>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Drawing.Pen> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Drawing.Pen> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-220">After calling <xref:System.Drawing.Pen.Dispose%2A>, you must release all references to the <xref:System.Drawing.Pen> so the garbage collector can reclaim the memory that the <xref:System.Drawing.Pen> was occupying.</span></span> <span data-ttu-id="680f8-221">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-221">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="680f8-222"><xref:System.Drawing.Pen.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Drawing.Pen>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="680f8-222">Always call <xref:System.Drawing.Pen.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Pen>.</span></span> <span data-ttu-id="680f8-223">이렇게 하지 않으면 가비지 수집기가 <xref:System.Drawing.Pen> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-223">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Pen> object's `Finalize` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="680f8-224">다음 코드 예제에서는 설정의 효과 보여 줍니다.는 <xref:System.Drawing.Pen.Width%2A> 및 <xref:System.Drawing.Pen.LineJoin%2A> 속성을 호출 하는 방법을 보여 줍니다는 <xref:System.Drawing.Pen.Dispose%2A> 에 대 한 메서드는 <xref:System.Drawing.Pen>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-224">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties, and shows how to call the <xref:System.Drawing.Pen.Dispose%2A> method for a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="680f8-225">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-225">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="680f8-226">양식과 호출 코드를 붙여 합니다 `ShowLineJoin` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-226">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineCap EndCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineCap EndCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.EndCap" />
      <MemberSignature Language="VB.NET" Value="Public Property EndCap As LineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineCap EndCap { System::Drawing::Drawing2D::LineCap get(); void set(System::Drawing::Drawing2D::LineCap value); };" />
      <MemberSignature Language="F#" Value="member this.EndCap : System.Drawing.Drawing2D.LineCap with get, set" Usage="System.Drawing.Pen.EndCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-227"><see cref="T:System.Drawing.Pen" />을 사용하여 그리는 선의 끝에 사용되는 캡 스타일을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-227">Gets or sets the cap style used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="680f8-228"><see cref="T:System.Drawing.Drawing2D.LineCap" />을 사용하여 그리는 선의 끝에 사용되는 캡 스타일을 나타내는 <see cref="T:System.Drawing.Pen" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-228">One of the <see cref="T:System.Drawing.Drawing2D.LineCap" /> values that represents the cap style used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="680f8-229">다음 코드 예제에서는 설정의 효과 보여 줍니다.는 <xref:System.Drawing.Pen.StartCap%2A> 하 고 <xref:System.Drawing.Pen.EndCap%2A> 속성에는 <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="680f8-229">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="680f8-230">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-230">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="680f8-231">양식과 호출 코드를 붙여 합니다 `ShowStartAndEndCaps` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-231">Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.PensExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.PensExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="680f8-232">지정된 값이 <see cref="T:System.Drawing.Drawing2D.LineCap" />의 멤버가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-232">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.LineCap" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="680f8-233"><see cref="P:System.Drawing.Pen.EndCap" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-233">The <see cref="P:System.Drawing.Pen.EndCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Pen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Pen ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="pen.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="680f8-234">가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-234">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineJoin">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineJoin LineJoin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineJoin LineJoin" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.LineJoin" />
      <MemberSignature Language="VB.NET" Value="Public Property LineJoin As LineJoin" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineJoin LineJoin { System::Drawing::Drawing2D::LineJoin get(); void set(System::Drawing::Drawing2D::LineJoin value); };" />
      <MemberSignature Language="F#" Value="member this.LineJoin : System.Drawing.Drawing2D.LineJoin with get, set" Usage="System.Drawing.Pen.LineJoin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineJoin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-235"><see cref="T:System.Drawing.Pen" /> 개체를 사용하여 그리는 두 개의 연속선 끝에 사용되는 결합 스타일을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-235">Gets or sets the join style for the ends of two consecutive lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="680f8-236"><see cref="T:System.Drawing.Drawing2D.LineJoin" /> 개체를 사용하여 그리는 두 개의 연속선에 사용되는 결합 스타일을 나타내는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-236">A <see cref="T:System.Drawing.Drawing2D.LineJoin" /> that represents the join style for the ends of two consecutive lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-237">선 조인에 끝 부분이 만나거나 겹치는 두 줄으로 구성 되는 일반적인 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-237">A line join is the common area that is formed by two lines whose ends meet or overlap.</span></span> <span data-ttu-id="680f8-238">세 선 조인 스타일 가지: 마이터, 빗면 및 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-238">There are three line join styles: miter, bevel, and round.</span></span>  <span data-ttu-id="680f8-239">선 조인 스타일을 지정 하는 경우는 <xref:System.Drawing.Pen> 개체에 연결 된 모든 줄에 조인 스타일을 적용할 <xref:System.Drawing.Drawing2D.GraphicsPath> 개체는 펜을 사용 하 여 그려집니다. 다음 그림에서는 빗면된 선 조인 예제 결과 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-239">When you specify a line join style for a <xref:System.Drawing.Pen> object, that join style will be applied to all the connected lines in any <xref:System.Drawing.Drawing2D.GraphicsPath> object drawn using that pen.The following illustration shows the results of the beveled line join example.</span></span>  
  
 <span data-ttu-id="680f8-240">![펜](~/add/media/pens5.gif "펜")</span><span class="sxs-lookup"><span data-stu-id="680f8-240">![Pens](~/add/media/pens5.gif "Pens")</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="680f8-241">다음 코드 예제에서는 설정의 효과 보여 줍니다.는 <xref:System.Drawing.Pen.Width%2A> 하 고 <xref:System.Drawing.Pen.LineJoin%2A> 속성에는 <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="680f8-241">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="680f8-242">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-242">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="680f8-243">양식과 호출 코드를 붙여 합니다 `ShowLineJoin` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs> 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-243">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="680f8-244"><see cref="P:System.Drawing.Pen.LineJoin" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-244">The <see cref="P:System.Drawing.Pen.LineJoin" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MiterLimit">
      <MemberSignature Language="C#" Value="public float MiterLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MiterLimit" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.MiterLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property MiterLimit As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MiterLimit { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.MiterLimit : single with get, set" Usage="System.Drawing.Pen.MiterLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-245">모퉁이 마이터의 연결 부분 두께의 한계를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-245">Gets or sets the limit of the thickness of the join on a mitered corner.</span></span></summary>
        <value><span data-ttu-id="680f8-246">모퉁이 마이터의 연결 부분 두께의 한계입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-246">The limit of the thickness of the join on a mitered corner.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-247">마이터 길이가 조인 밖에의 교차점으로 조인의 내부에 줄 벽의 교집합에서 거리를입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-247">The miter length is the distance from the intersection of the line walls on the inside of the join to the intersection of the line walls outside of the join.</span></span> <span data-ttu-id="680f8-248">마이터 길이가 두 줄 사이의 각도 작을 때 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-248">The miter length can be large when the angle between two lines is small.</span></span> <span data-ttu-id="680f8-249">마이터 제한은 스트로크 너비에 대 한 마이터 길이의 최대 허용된 비율입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-249">The miter limit is the maximum allowed ratio of miter length to stroke width.</span></span> <span data-ttu-id="680f8-250">기본값은 10.0f 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-250">The default value is 10.0f.</span></span>  
  
 <span data-ttu-id="680f8-251">마이터 길이의 교집합의 조인 조인의 제한을 초과 하면 조인 교집합의 조인 제한 내에 유지 되도록 입체 됩니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-251">If the miter length of the join of the intersection exceeds the limit of the join, then the join will be beveled to keep it within the limit of the join of the intersection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="680f8-252"><see cref="P:System.Drawing.Pen.MiterLimit" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-252">The <see cref="P:System.Drawing.Pen.MiterLimit" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="680f8-253"><see cref="T:System.Drawing.Pen" />에 대한 변환 매트릭스와 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-253">Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="pen.MultiplyTransform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="680f8-254">변환 매트릭스를 곱하는 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-254">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the transformation matrix.</span></span></param>
        <summary><span data-ttu-id="680f8-255"><see cref="T:System.Drawing.Pen" />에 대한 변환 매트릭스와 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-255">Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-256">이 메서드 앞에 지정 된 곱하기 매트릭스는 `matrix` 곱하기 연산에 대 한 변형 매트릭스에 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-256">This method prepends the multiplication matrix specified in the `matrix` parameter to the transformation matrix for the multiplication operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="680f8-257">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-257">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="680f8-258">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-258">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="680f8-259"><xref:System.Drawing.Pen>을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-259">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="680f8-260">화면에 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-260">Draws a line to the screen.</span></span>  
  
-   <span data-ttu-id="680f8-261">펜의 변형 매트릭스와 지정 된 매트릭스를 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-261">Multiplies the transformation matrix of the pen by the specified matrix.</span></span>  
  
-   <span data-ttu-id="680f8-262">변환 된 펜으로 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-262">Draws a line with the transformed pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicPenExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicPenExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="pen.MultiplyTransform (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="680f8-263">변환 매트릭스를 곱하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-263">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the transformation matrix.</span></span></param>
        <param name="order"><span data-ttu-id="680f8-264">곱셈 연산을 수행하는 순서입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-264">The order in which to perform the multiplication operation.</span></span></param>
        <summary><span data-ttu-id="680f8-265"><see cref="T:System.Drawing.Pen" />에 대한 변환 매트릭스와 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 지정된 순서로 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-265">Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-266">이 메서드는 사용 합니다 <xref:System.Drawing.Drawing2D.MatrixOrder> 열거형 요소 (앞 또는 추가)에 지정 된는 `order` 곱하기 연산을 수행 하려면 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-266">This method uses the <xref:System.Drawing.Drawing2D.MatrixOrder> enumeration element (either prepend or append) specified by the `order` parameter to carry out the multiplication operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="680f8-267">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-267">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="680f8-268">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-268">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="680f8-269"><xref:System.Drawing.Pen>을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-269">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="680f8-270">화면에 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-270">Draws a line to the screen.</span></span>  
  
-   <span data-ttu-id="680f8-271">펜의 변형 매트릭스와 지정 된 매트릭스를 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-271">Multiplies the transformation matrix of the pen by the specified matrix.</span></span>  
  
-   <span data-ttu-id="680f8-272">변환 된 펜으로 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-272">Draws a line with the transformed pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicPenExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicPenExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenType">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PenType PenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.PenType PenType" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.PenType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PenType As PenType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PenType PenType { System::Drawing::Drawing2D::PenType get(); };" />
      <MemberSignature Language="F#" Value="member this.PenType : System.Drawing.Drawing2D.PenType" Usage="System.Drawing.Pen.PenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PenType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-273"><see cref="T:System.Drawing.Pen" />을 사용하여 그리는 선의 스타일을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-273">Gets the style of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="680f8-274"><see cref="T:System.Drawing.Drawing2D.PenType" />을 사용하여 그리는 파선의 스타일을 지정하는 <see cref="T:System.Drawing.Pen" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-274">A <see cref="T:System.Drawing.Drawing2D.PenType" /> enumeration that specifies the style of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-275">A <xref:System.Drawing.Pen> 실선, 채워진된 선 또는의 멤버에 의해 지정 된 스타일에 따라 질감이 있는 줄을 그릴 수는 <xref:System.Drawing.Drawing2D.PenType> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-275">A <xref:System.Drawing.Pen> can draw solid lines, filled lines, or textured lines, depending on the style specified by a member of the <xref:System.Drawing.Drawing2D.PenType> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.ResetTransform" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTransform ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTransform();" />
      <MemberSignature Language="F#" Value="member this.ResetTransform : unit -&gt; unit" Usage="pen.ResetTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="680f8-276">이 <see cref="T:System.Drawing.Pen" />에 대한 기하학적 변환 매트릭스를 항등으로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-276">Resets the geometric transformation matrix for this <see cref="T:System.Drawing.Pen" /> to identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="680f8-277">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-277">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="680f8-278">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-278">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="680f8-279"><xref:System.Drawing.Pen>을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-279">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="680f8-280">2 시간 x 축 방향으로 크기 조정에 펜의 변형 매트릭스를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-280">Sets the transformation matrix of the pen to scale 2 times in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="680f8-281">화면에 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-281">Draws a line to the screen.</span></span>  
  
-   <span data-ttu-id="680f8-282">Id로의 변환 매트릭스를 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-282">Resets the transformation matrix to identity.</span></span>  
  
-   <span data-ttu-id="680f8-283">화면에 두 번째 줄을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-283">Draws a second line to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicPenExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicPenExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="680f8-284">로컬 기하학적 변환을 지정된 각도만큼 회전합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-284">Rotates the local geometric transformation by the specified angle.</span></span> <span data-ttu-id="680f8-285">이 메서드는 회전을 변형 앞에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-285">This method prepends the rotation to the transformation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.RotateTransform(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single -&gt; unit" Usage="pen.RotateTransform angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="680f8-286">회전 각도입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-286">The angle of rotation.</span></span></param>
        <summary><span data-ttu-id="680f8-287">로컬 기하학적 변환을 지정된 각도만큼 회전합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-287">Rotates the local geometric transformation by the specified angle.</span></span> <span data-ttu-id="680f8-288">이 메서드는 회전을 변형 앞에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-288">This method prepends the rotation to the transformation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-289">펜의 모양을 순환 이기 때문에 회전을 주지 않습니다 모든 표시 펜은 x 축 또는 y 축 방향에서 크기를 조정 하지 않는 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-289">Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="680f8-290">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-290">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="680f8-291">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-291">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="680f8-292"><xref:System.Drawing.Pen>을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-292">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="680f8-293">펜을 사용 하 여 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-293">Draws a rectangle using the pen.</span></span>  
  
-   <span data-ttu-id="680f8-294">2 시간 x 축 방향으로 여 펜을 조정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-294">Scales the pen by 2 times in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="680f8-295">펜을 시계 방향으로 90도 회전합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-295">Rotates the pen 90 degrees clockwise.</span></span>  
  
-   <span data-ttu-id="680f8-296">차이 보여 주기 위해 두 번째 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-296">Draws a second rectangle to demonstrate the difference.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicPenExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicPenExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="pen.RotateTransform (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="680f8-297">회전 각도입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-297">The angle of rotation.</span></span></param>
        <param name="order"><span data-ttu-id="680f8-298">회전 매트릭스를 앞에 추가할 것인지 아니면 뒤에 추가할 것인지를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-298">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix.</span></span></param>
        <summary><span data-ttu-id="680f8-299">로컬 기하학적 변환을 지정된 각도만큼 지정된 순서로 회전합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-299">Rotates the local geometric transformation by the specified angle in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-300">펜의 모양을 순환 이기 때문에 회전을 주지 않습니다 모든 표시 펜은 x 축 또는 y 축 방향에서 크기를 조정 하지 않는 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-300">Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="680f8-301">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-301">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="680f8-302">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-302">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="680f8-303"><xref:System.Drawing.Pen>을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-303">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="680f8-304">2 시간 x 축 방향으로 여 펜을 조정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-304">Scales the pen by 2 times in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="680f8-305">펜을 사용 하 여 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-305">Draws a rectangle using the pen.</span></span>  
  
-   <span data-ttu-id="680f8-306">펜을 시계 방향으로 90도 회전합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-306">Rotates the pen 90 degrees clockwise.</span></span>  
  
-   <span data-ttu-id="680f8-307">차이 보여 주기 위해 두 번째 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-307">Draws a second rectangle to demonstrate the difference.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicPenExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicPenExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScaleTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="680f8-308">로컬 기하학적 변환을 지정된 인수만큼 크기를 조정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-308">Scales the local geometric transformation by the specified factors.</span></span> <span data-ttu-id="680f8-309">이 메서드는 변환에 크기 조정 매트릭스를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-309">This method prepends the scaling matrix to the transformation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single -&gt; unit" Usage="pen.ScaleTransform (sx, sy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx"><span data-ttu-id="680f8-310">변환의 크기를 X 방향으로 조정하는 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-310">The factor by which to scale the transformation in the x-axis direction.</span></span></param>
        <param name="sy"><span data-ttu-id="680f8-311">변환의 크기를 Y 방향으로 조정하는 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-311">The factor by which to scale the transformation in the y-axis direction.</span></span></param>
        <summary><span data-ttu-id="680f8-312">로컬 기하학적 변환을 지정된 인수만큼 크기를 조정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-312">Scales the local geometric transformation by the specified factors.</span></span> <span data-ttu-id="680f8-313">이 메서드는 변환에 크기 조정 매트릭스를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-313">This method prepends the scaling matrix to the transformation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="680f8-314">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-314">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="680f8-315">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-315">The code performs the following actions:</span></span>  
  
 <span data-ttu-id="680f8-316"><xref:System.Drawing.Pen>을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-316">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="680f8-317">펜을 사용 하 여 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-317">Draws a rectangle using the pen.</span></span>  
  
 <span data-ttu-id="680f8-318">2 시간 x 축 방향으로 여 펜을 조정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-318">Scales the pen by 2 times in the x-axis direction.</span></span>  
  
 <span data-ttu-id="680f8-319">차이 보여 주기 위해 두 번째 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-319">Draws a second rectangle to demonstrate the difference.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicPenExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicPenExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="pen.ScaleTransform (sx, sy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx"><span data-ttu-id="680f8-320">변환의 크기를 X 방향으로 조정하는 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-320">The factor by which to scale the transformation in the x-axis direction.</span></span></param>
        <param name="sy"><span data-ttu-id="680f8-321">변환의 크기를 Y 방향으로 조정하는 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-321">The factor by which to scale the transformation in the y-axis direction.</span></span></param>
        <param name="order"><span data-ttu-id="680f8-322">크기 조정 매트릭스를 앞에 추가할 것인지 아니면 뒤에 추가할 것인지를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-322">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the scaling matrix.</span></span></param>
        <summary><span data-ttu-id="680f8-323">로컬 기하학적 변환을 지정된 인수만큼 지정된 순서로 크기를 조정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-323">Scales the local geometric transformation by the specified factors in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="680f8-324">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-324">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="680f8-325">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-325">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="680f8-326"><xref:System.Drawing.Pen>을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-326">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="680f8-327">펜을 사용 하 여 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-327">Draws a rectangle using the pen.</span></span>  
  
-   <span data-ttu-id="680f8-328">2 시간 x 축 방향으로 여 펜을 조정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-328">Scales the pen by 2 times in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="680f8-329">차이 보여 주기 위해 두 번째 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-329">Draws a second rectangle to demonstrate the difference.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicPenExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicPenExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineCap">
      <MemberSignature Language="C#" Value="public void SetLineCap (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap, System.Drawing.Drawing2D.DashCap dashCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLineCap(valuetype System.Drawing.Drawing2D.LineCap startCap, valuetype System.Drawing.Drawing2D.LineCap endCap, valuetype System.Drawing.Drawing2D.DashCap dashCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLineCap(System::Drawing::Drawing2D::LineCap startCap, System::Drawing::Drawing2D::LineCap endCap, System::Drawing::Drawing2D::DashCap dashCap);" />
      <MemberSignature Language="F#" Value="member this.SetLineCap : System.Drawing.Drawing2D.LineCap * System.Drawing.Drawing2D.LineCap * System.Drawing.Drawing2D.DashCap -&gt; unit" Usage="pen.SetLineCap (startCap, endCap, dashCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="dashCap" Type="System.Drawing.Drawing2D.DashCap" />
      </Parameters>
      <Docs>
        <param name="startCap"><span data-ttu-id="680f8-330"><see cref="T:System.Drawing.Drawing2D.LineCap" />을 사용하여 그리는 선의 시작 부분에 사용할 캡 스타일을 나타내는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-330">A <see cref="T:System.Drawing.Drawing2D.LineCap" /> that represents the cap style to use at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <param name="endCap"><span data-ttu-id="680f8-331"><see cref="T:System.Drawing.Drawing2D.LineCap" />을 사용하여 그리는 선의 끝에 사용할 캡 스타일을 나타내는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-331">A <see cref="T:System.Drawing.Drawing2D.LineCap" /> that represents the cap style to use at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <param name="dashCap"><span data-ttu-id="680f8-332"><see cref="T:System.Drawing.Drawing2D.LineCap" />을 사용하여 그리는 파선의 시작과 끝에 사용할 캡 스타일을 나타내는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-332">A <see cref="T:System.Drawing.Drawing2D.LineCap" /> that represents the cap style to use at the beginning or end of dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <summary><span data-ttu-id="680f8-333"><see cref="T:System.Drawing.Pen" /> 개체로 그리는 선을 끝내는 데 사용하는 캡 스타일을 결정하는 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-333">Sets the values that determine the style of cap used to end lines drawn by this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="680f8-334">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-334">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="680f8-335">코드를 만듭니다를 <xref:System.Drawing.Pen> 줄의 시작 부분에 화살표 앵커 캡을 그릴 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-335">The code creates a <xref:System.Drawing.Pen> and sets it to draw arrow anchor caps at the beginning of lines:</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicPenExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicPenExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineCap StartCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineCap StartCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.StartCap" />
      <MemberSignature Language="VB.NET" Value="Public Property StartCap As LineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineCap StartCap { System::Drawing::Drawing2D::LineCap get(); void set(System::Drawing::Drawing2D::LineCap value); };" />
      <MemberSignature Language="F#" Value="member this.StartCap : System.Drawing.Drawing2D.LineCap with get, set" Usage="System.Drawing.Pen.StartCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-336"><see cref="T:System.Drawing.Pen" />을 사용하여 그리는 선의 시작 부분에 사용되는 캡 스타일을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-336">Gets or sets the cap style used at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="680f8-337"><see cref="T:System.Drawing.Drawing2D.LineCap" />을 사용하여 그리는 선의 시작 부분에 사용되는 캡 스타일을 나타내는 <see cref="T:System.Drawing.Pen" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-337">One of the <see cref="T:System.Drawing.Drawing2D.LineCap" /> values that represents the cap style used at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="680f8-338">다음 코드 예제에서는 설정의 효과 보여 줍니다.는 <xref:System.Drawing.Pen.StartCap%2A> 하 고 <xref:System.Drawing.Pen.EndCap%2A> 속성에는 <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="680f8-338">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="680f8-339">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-339">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="680f8-340">양식과 호출 코드를 붙여 합니다 `ShowStartAndEndCaps` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-340">Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.PensExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.PensExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="680f8-341">지정된 값이 <see cref="T:System.Drawing.Drawing2D.LineCap" />의 멤버가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-341">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.LineCap" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="680f8-342"><see cref="P:System.Drawing.Pen.StartCap" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-342">The <see cref="P:System.Drawing.Pen.StartCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Matrix ^ Transform { System::Drawing::Drawing2D::Matrix ^ get(); void set(System::Drawing::Drawing2D::Matrix ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix with get, set" Usage="System.Drawing.Pen.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-343">이 <see cref="T:System.Drawing.Pen" />에 대한 기하학적 변환의 복사본을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-343">Gets or sets a copy of the geometric transformation for this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="680f8-344">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 대한 기하학적 변환을 나타내는 <see cref="T:System.Drawing.Pen" />의 복사본입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-344">A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the geometric transformation for this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-345">이 속성을 타원 펜 팁에 대 한 정의.</span><span class="sxs-lookup"><span data-stu-id="680f8-345">This property defines an elliptical shape for the pen tip.</span></span> <span data-ttu-id="680f8-346">이 타원의 변환 매트릭스를 적용 하 여 기본 원 모양에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-346">This ellipse is obtained from the default circular shape by applying the transformation matrix.</span></span> <span data-ttu-id="680f8-347">참고 행렬의 변환 부분은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-347">Note that the translation portion of the matrix is ignored.</span></span> <span data-ttu-id="680f8-348">행렬을 반환 하 고는 <xref:System.Drawing.Pen.Transform%2A> 펜의 기하학적 변형의 복사본 속성이 더 이상 필요할 때 행렬의 삭제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-348">Because the matrix returned and by the <xref:System.Drawing.Pen.Transform%2A> property is a copy of the pen's geometric transform, you should dispose of the matrix when you no longer need it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="680f8-349"><see cref="P:System.Drawing.Pen.Transform" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-349">The <see cref="P:System.Drawing.Pen.Transform" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="680f8-350">로컬 기하학적 변환을 지정된 크기만큼 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-350">Translates the local geometric transformation by the specified dimensions.</span></span> <span data-ttu-id="680f8-351">이 메서드는 이동을 변형 앞에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-351">This method prepends the translation to the transformation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single -&gt; unit" Usage="pen.TranslateTransform (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="680f8-352">X축으로의 이동 값입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-352">The value of the translation in x.</span></span></param>
        <param name="dy"><span data-ttu-id="680f8-353">Y축으로의 이동 값입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-353">The value of the translation in y.</span></span></param>
        <summary><span data-ttu-id="680f8-354">로컬 기하학적 변환을 지정된 크기만큼 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-354">Translates the local geometric transformation by the specified dimensions.</span></span> <span data-ttu-id="680f8-355">이 메서드는 이동을 변형 앞에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-355">This method prepends the translation to the transformation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="pen.TranslateTransform (dx, dy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="680f8-356">X축으로의 이동 값입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-356">The value of the translation in x.</span></span></param>
        <param name="dy"><span data-ttu-id="680f8-357">Y축으로의 이동 값입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-357">The value of the translation in y.</span></span></param>
        <param name="order"><span data-ttu-id="680f8-358">이동을 적용할 순서(앞에 추가 또는 뒤에 추가)입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-358">The order (prepend or append) in which to apply the translation.</span></span></param>
        <summary><span data-ttu-id="680f8-359">로컬 기하학적 변환을 지정된 크기만큼 지정된 순서로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-359">Translates the local geometric transformation by the specified dimensions in the specified order.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public float Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Width { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Width : single with get, set" Usage="System.Drawing.Pen.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="680f8-360">그리는 데 사용된 <see cref="T:System.Drawing.Pen" /> 개체의 단위로 이 <see cref="T:System.Drawing.Graphics" />의 너비를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-360">Gets or sets the width of this <see cref="T:System.Drawing.Pen" />, in units of the <see cref="T:System.Drawing.Graphics" /> object used for drawing.</span></span></summary>
        <value><span data-ttu-id="680f8-361"><see cref="T:System.Drawing.Pen" />의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-361">The width of this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680f8-362">측정 단위에 액세스할 수 있습니다 합니다 <xref:System.Drawing.Graphics> 개체를 사용 하 여 해당 <xref:System.Drawing.Graphics.PageUnit%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-362">You can access the unit of measure of the <xref:System.Drawing.Graphics> object using its <xref:System.Drawing.Graphics.PageUnit%2A> property.</span></span> <span data-ttu-id="680f8-363">측정 단위는 일반적으로 픽셀입니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-363">The unit of measure is typically pixels.</span></span> <span data-ttu-id="680f8-364">A <xref:System.Drawing.Pen.Width%2A> 0 하면를 <xref:System.Drawing.Pen> 그리기 처럼는 <xref:System.Drawing.Pen.Width%2A> 1 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-364">A <xref:System.Drawing.Pen.Width%2A> of 0 will result in the <xref:System.Drawing.Pen> drawing as if the <xref:System.Drawing.Pen.Width%2A> were 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="680f8-365">다음 코드 예제에서는 설정의 효과 보여 줍니다.는 <xref:System.Drawing.Pen.Width%2A> 하 고 <xref:System.Drawing.Pen.LineJoin%2A> 속성에는 <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="680f8-365">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="680f8-366">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-366">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="680f8-367">양식과 호출 코드를 붙여 합니다 `ShowLineJoin` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="680f8-367">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="680f8-368"><see cref="P:System.Drawing.Pen.Width" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</span><span class="sxs-lookup"><span data-stu-id="680f8-368">The <see cref="P:System.Drawing.Pen.Width" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>